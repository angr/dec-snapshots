{"4214784:_init": "extern struct_0 *g_410370;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_410370;\n
    if (g_410370)\n
        v1 = g_410370();\n
    return v1;\n
}\n
", "4214816:sub_405020": "extern unsigned long long g_410388;\n
\n
long long sub_405020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_410388;\n
    goto *(4260752);\n
}\n
", "4214828:sub_40502c": null, "4214832:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4214848:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4214864:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4214880:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4214896:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4214912:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4214928:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4214944:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4214960:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4214976:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4260696);\n
}\n
", "4214992:_GLOBAL__sub_I_brc_default_codes.cc": "extern unsigned long long _ZN12_GLOBAL__N_112exit_server_E;\n
extern unsigned long long _ZN12_GLOBAL__N_113failure_resp_E;\n
extern unsigned long long _ZN12_GLOBAL__N_113success_resp_E;\n
extern unsigned long long _ZN12_GLOBAL__N_115malformed_resp_E;\n
extern unsigned long long _ZN12_GLOBAL__N_117exit_server_resp_E;\n
extern unsigned long long _ZN12_GLOBAL__N_117user_exists_resp_E;\n
extern unsigned long long _ZN12_GLOBAL__N_13ok_E;\n
\n
long long _GLOBAL__sub_I_brc_default_codes.cc()\n
{\n
    unsigned long long v1;  // rax\n
    unsigned long long v2;  // rax\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = operator new(32);\n
    BrcResponse::__ctor__(v1, 8, &_ZN12_GLOBAL__N_13ok_E, 2);\n
    _ZN12_GLOBAL__N_113success_resp_E = v1;\n
    v2 = operator new(32);\n
    BrcResponse::__ctor__(v2, 9, \"\\tc@cAc\", 2);\n
    _ZN12_GLOBAL__N_117user_exists_resp_E = v2;\n
    v3 = operator new(32);\n
    BrcResponse::__ctor__(v3, 64, \"@cAc\", 2);\n
    _ZN12_GLOBAL__N_113failure_resp_E = v3;\n
    v4 = operator new(32);\n
    BrcResponse::__ctor__(v4, 65, \"Ac\", 2);\n
    _ZN12_GLOBAL__N_115malformed_resp_E = v4;\n
    _ZN12_GLOBAL__N_117exit_server_resp_E = operator new(32);\n
    return BrcResponse::__ctor__(_ZN12_GLOBAL__N_117exit_server_resp_E, 1, &_ZN12_GLOBAL__N_112exit_server_E, 2);\n
}\n
", "4215220:sub_4051b4": null, "4215232:_GLOBAL__sub_I_server_backend.cc": "extern uint128_t _ZN12_GLOBAL__N_115RegisteredUsersE;\n
extern uint128_t _ZN12_GLOBAL__N_118RegisteredChannelsE;\n
extern unsigned long long g_4110a0;\n
extern unsigned long long g_4110c0;\n
\n
long long _GLOBAL__sub_I_server_backend.cc()\n
{\n
    unsigned long v1;  // rax\n
\n
    _ZN12_GLOBAL__N_115RegisteredUsersE = 0x100;\n
    g_4110a0 = operator new[](0x800);\n
    _ZN12_GLOBAL__N_118RegisteredChannelsE = 0x100;\n
    g_4110c0 = operator new[](0x800);\n
    return v1;\n
}\n
", "4215297:sub_405201": null, "4215312:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4215349:sub_405235": null, "4215350:sub_405236": null, "4215360:deregister_tm_clones": "extern char __TMC_END__;\n
extern unsigned long long g_410368;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__TMC_END__;\n
}\n
", "4215401:sub_405269": null, "4215408:register_tm_clones": "extern unsigned long long g_410378;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4215465:sub_4052a9": null, "4215472:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_410358;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_410358)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4215525:sub_4052e5": null, "4215529:sub_4052e9": null, "4215536:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4215545:sub_4052f9": null, "4215552:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0 * a1;\n
    v4 = cgc_malloc_alloc(&g_heap, v3);\n
    if (v4)\n
    {\n
        cgc_memset(v4, 0, v3);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4215610:sub_40533a": null, "4215616:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 1;\n
}\n
", "4215635:sub_405353": null, "4215648:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 2;\n
}\n
", "4215667:sub_405373": null, "4215680:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 16;\n
}\n
", "4215699:sub_405393": null, "4215712:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 14;\n
}\n
", "4215731:sub_4053b3": null, "4215744:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 12;\n
}\n
", "4215763:sub_4053d3": null, "4215776:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4;\n
}\n
", "4215795:sub_4053f3": null, "4215808:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 8;\n
}\n
", "4215827:sub_405413": null, "4215840:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 64;\n
}\n
", "4215859:sub_405433": null, "4215872:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 32;\n
}\n
", "4215891:sub_405453": null, "4215904:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4294967168;\n
}\n
", "4215923:sub_405473": null, "4215936:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4247568];\n
    char field_40d010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&__ctype)[v1 ^ 32] & 2) >> 1);\n
    return v1 - 65 < 6 | ((*((v1 + &__ctype)) & 2) >> 1);\n
}\n
", "4215981:sub_4054ad": null, "4215984:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4247568];\n
    char field_40d010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4216008:sub_4054c8": null, "4216016:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4247568];\n
    char field_40d010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ecx\n
    unsigned long long v4;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = v1 ^ 32;\n
    if (!(*((v1 + &__ctype)) & 8))\n
        v2 = v1;\n
    if (!((&__ctype)[v2] & 2))\n
    {\n
        v3 = v2 - 65;\n
        v4 = v2 - 55;\n
        return (v3 < 6 ? 0 : v4);\n
    }\n
    v6 = v2 - 48;\n
    return v6;\n
}\n
", "4216066:sub_405502": null, "4216080:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4247568];\n
    char field_40d010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4216104:sub_405528": null, "4216112:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate(v3);\n
    return cgc_exit(v3, v4, v5, v6, v7, v8);\n
}\n
", "4216128:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long v7;  // r8\n
    unsigned long long v8;  // r9\n
\n
    v0 = v2;\n
    cgc__terminate();\n
    return cgc_fflush(v3, v4, v5, v6, v7, v8);\n
}\n
", "4216144:cgc_fflush": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    char v1;  // [bp-0x38]\n
    unsigned long long v3;  // r8\n
    void* v4;  // r15, Other Possible Types: unsigned long, unsigned long long\n
    char *v5;  // rcx\n
    unsigned long long v6;  // rdx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // r13\n
    unsigned long v10;  // rax\n
    char *v11;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r13, Other Possible Types: unsigned long long\n
    void* v14;  // r14, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
        return 0;\n
    if (a0->field_4 == 1)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v5 = a0->field_10;\n
        v6 = a0->padding_c;\n
        v13 = v6 - v3;\n
        if (v5 && v13)\n
        {\n
            v8 = v13 & 3;\n
            if (~(v3) + v6 < 3)\n
            {\n
                v11 = 0;\n
            }\n
            else\n
            {\n
                v9 = v13 & -4;\n
                v10 = &a0->padding_0[v3 + 35];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v10 + v11 - 3)) = v5[*((v10 + v11 - 3))];\n
                    *((v10 + v11 - 2)) = v5[*((v10 + v11 - 2))];\n
                    *((v10 + v11 - 1)) = v5[*((v10 + v11 - 1))];\n
                    *((v10 + v11)) = v5[*((v10 + v11))];\n
                    v11 += 4;\n
                } while (v9 != v11);\n
            }\n
            if (v8)\n
            {\n
                v12 = &a0->padding_0[v3 + v11 + 32];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v12 + v11)) = v5[*((v12 + v11))];\n
                    v11 += 1;\n
                } while (v8 != v11);\n
            }\n
            v13 = (a0->padding_c - a0->field_8);\n
        }\n
        v0 = a0;\n
        v4 = 0;\n
        v14 = 0;\n
        do\n
        {\n
            if (v13 <= v14)\n
            {\n
LABEL_405685:\n
                a0 = v0;\n
                goto LABEL_40568a;\n
            }\n
            v14 += *(&v1);\n
        } while (!cgc_transmit(a0, v11));\n
        v4 = 4294967295;\n
        goto LABEL_405685;\n
    }\n
LABEL_40568a:\n
    *((a0 + 8)) = 0;\n
    return v4;\n
}\n
", "4216484:sub_4056a4": null, "4216496:cgc_fbuffered": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fbuffered(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int *v1;  // [bp-0x40]\n
    char v2;  // [bp-0x38]\n
    struct_0 *v4;  // r15\n
    unsigned long long v5;  // r8\n
    unsigned int *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rbx\n
    char *v12;  // rax\n
    unsigned long v13;  // rbx, Other Possible Types: unsigned long long\n
    void* v14;  // r13, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    v5 = a0->field_8;\n
    if (v5 == -1)\n
    {\n
        v4->field_8 = -(a1 < 1);\n
        v4->field_c = 0;\n
        return -(a1 < 1);\n
    }\n
    if (a0->field_4 == 1)\n
    {\n
        v6 = &a0->field_c;\n
    }\n
    else\n
    {\n
        v7 = a0->field_10;\n
        v8 = a0->field_c;\n
        v13 = v8 - v5;\n
        v0 = a1;\n
        if (v7 && v13)\n
        {\n
            v10 = v13 & 3;\n
            if (~(v5) + v8 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v11 = v13 & -4;\n
                a0 = &a0->padding_0[v5 + 35];\n
                a1 = 0;\n
                do\n
                {\n
                    *((a0 + a1 - 3)) = v7[*((a0 + a1 - 3))];\n
                    *((a0 + a1 - 2)) = v7[*((a0 + a1 - 2))];\n
                    *((a0 + a1 - 1)) = v7[*((a0 + a1 - 1))];\n
                    *((a0 + a1)) = v7[*((a0 + a1))];\n
                    a1 += 4;\n
                } while (v11 != a1);\n
            }\n
            if (v10)\n
            {\n
                v12 = &v4->padding_0[v5 + a1 + 32];\n
                a1 = 0;\n
                do\n
                {\n
                    v12[a1] = v7[v12[a1]];\n
                    a1 += 1;\n
                } while (v10 != a1);\n
            }\n
            v13 = v4->field_c - v4->field_8;\n
        }\n
        v1 = &v4->field_c;\n
        v14 = 0;\n
        while (v13 > v14)\n
        {\n
            v14 += *(&v2);\n
            if (cgc_transmit(a0, a1))\n
                break;\n
        }\n
        a1 = v0;\n
        v6 = v1;\n
    }\n
    *(v6) = 0;\n
}\n
", "4216846:sub_40580e": null, "4216848:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    struct_0 *v3;  // rax\n
\n
    v0 = v2;\n
    v3 = cgc_malloc(1056);\n
    if (v3)\n
    {\n
        v3->field_0 = a0;\n
        v3->field_4 = 2 - (a1 < 1);\n
        v3->field_8 = 0;\n
        v3->field_10 = 0;\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4216917:sub_405855": null, "4216928:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x40], Other Possible Types: char\n
    unsigned long v1;  // [bp-0x38]\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // r14\n
    unsigned long long v5;  // r15\n
    unsigned long long v6;  // rax\n
    char *v7;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rax, Other Possible Types: unsigned long long\n
    void* v12;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v13;  // eax\n
    unsigned long long v15;  // r8\n
    char *v16;  // rax\n
    unsigned long v17;  // rbp\n
\n
    v3 = a2;\n
    v4 = a1;\n
    v5 = a0;\n
    v11 = a2->field_8;\n
    if (v11 == *(&a2->padding_c[0]))\n
    {\n
        *(&a2->field_8) = 0;\n
        v6 = cgc_receive(a0, a1, a2, v10);\n
        if (!v6)\n
        {\n
            v7 = *(&v0);\n
            if (v7)\n
            {\n
                *(&a2->padding_c[0]) = v7;\n
                v10 = v7 * 0x100000000;\n
                if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(rax<8>, 0x20<8>), Shl(rax<8>, 0x1f<8>), cc_ndep<8>)))\n
                {\n
                    v10 = a2->field_18;\n
                    if (v10)\n
                    {\n
                        a2 = v7;\n
                        v9 = v7 & 3;\n
                        if (v7 + 1 < 3)\n
                        {\n
                            a1 = 0;\n
                        }\n
                        else\n
                        {\n
                            a2 = &a2[-1 * v9];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                v3[1].padding_0[a1] = *((v10 + v3[1].padding_0[a1]));\n
                                v3[1].padding_0[1 + a1] = *((v10 + v3[1].padding_0[1 + a1]));\n
                                v3[1].padding_0[2 + a1] = *((v10 + v3[1].padding_0[2 + a1]));\n
                                v3[1].padding_0[3 + a1] = *((v10 + v3[1].padding_0[3 + a1]));\n
                                a1 += 4;\n
                            } while (a2 != a1);\n
                        }\n
                        if (v9)\n
                        {\n
                            a2 = &v3->padding_0[a1 + 32];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                a2[a1] = *((v10 + a2[a1]));\n
                                a1 += 1;\n
                            } while (v9 != a1);\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        v11 = v3->field_8;\n
    }\n
    if (v11 != -1)\n
    {\n
        v12 = *(&v3->padding_c[0]) - v11;\n
        if (v12 > v4)\n
            v12 = v4;\n
        v0 = v12;\n
        a1 = &v3->padding_0[v11 + 32];\n
        a2 = v12;\n
        cgc_memcpy();\n
        v13 = v3->field_8 + v12;\n
        v3->field_8 = v13;\n
        if (v13 == *(&v3->padding_c[0]))\n
            *(&v3->field_8) = 0;\n
        if (!(v12 < v4))\n
            goto LABEL_405ae4;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        if (0 >= v4)\n
        {\n
LABEL_405ae4:\n
            return v12;\n
        }\n
    }\n
    v1 = v5 + 3;\n
    while (true)\n
    {\n
        v10 = cgc_receive(a0, a1, a2, v10);\n
        if (v10)\n
            return -1;\n
        v15 = v0;\n
        if (!v15)\n
            return -1;\n
        v16 = v3->field_18;\n
        if (v16)\n
        {\n
            a2 = v15 & 3;\n
            if (v15 - 1 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v17 = v1 + v12;\n
                a1 = 0;\n
                do\n
                {\n
                    *((v17 + a1 - 3)) = v16[*((v17 + a1 - 3))];\n
                    *((v17 + a1 - 2)) = v16[*((v17 + a1 - 2))];\n
                    *((v17 + a1 - 1)) = v16[*((v17 + a1 - 1))];\n
                    *((v17 + a1)) = v16[*((v17 + a1))];\n
                    a1 += 4;\n
                } while ((v15 & -4) != a1);\n
            }\n
            if (a2)\n
            {\n
                a1 = a1 + v12 + v5;\n
                a0 = 0;\n
                do\n
                {\n
                    a1[a0] = v16[a1[a0]];\n
                    a0 += 1;\n
                } while (a2 != a0);\n
            }\n
        }\n
        v12 += v15;\n
        if (v12 >= v4)\n
            return v12;\n
    }\n
}\n
", "4217410:sub_405a42": null, "4217590:sub_405af6": null, "4217600:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    int tmp_1;  // tmp #1\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = 0;\n
    v2 = a1 - 1;\n
    if (a1 != 1)\n
    {\n
        while (true)\n
        {\n
            v3 = cgc__getc(a3);\n
            if (v3 == -1)\n
                return -1;\n
            if (v3 == a2)\n
                break;\n
            *((a0 + v1)) = v3;\n
            v1 += 1;\n
            goto LABEL_405b50;\n
        }\n
    }\n
    tmp_1 = v2;\n
    v2 = v1;\n
    if (!(v1 == tmp_1))\n
        goto LABEL_405b61;\n
    while (true)\n
    {\n
LABEL_405b50:\n
        v4 = cgc__getc(a3);\n
        if (v4 == -1)\n
            break;\n
        if (v4 == a2)\n
            goto LABEL_405b61;\n
    }\n
LABEL_405b61:\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4217723:sub_405b7b": null, "4217728:cgc__getc": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc__getc(struct_1 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x11]\n
    char v1;  // [bp-0x10]\n
    struct_1 *v3;  // rbx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long v9;  // rsi\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // rax\n
    unsigned long long v15;  // r8\n
    unsigned long v16;  // rcx\n
    struct struct_0 **v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    void* v19;  // rdi, Other Possible Types: unsigned long\n
    char *v20;  // rsi\n
    unsigned long v21;  // rdi\n
    unsigned long long v22;  // rax\n
\n
    v3 = a0;\n
    v4 = a0->field_8;\n
    if (v4 == -1)\n
    {\n
        v13 = cgc_receive(a0, v5, v6, v7);\n
        v14 = 4294967295;\n
        if (v13)\n
        {\n
            return 4294967295;\n
        }\n
        else if (!*(&v1))\n
        {\n
            return 4294967295;\n
        }\n
        else\n
        {\n
            v16 = a0->field_18;\n
            *(&v14) = v0;\n
            if (!v16)\n
                return v14;\n
            *(&v14) = *(v16 + v14);\n
        }\n
    }\n
    else\n
    {\n
        if (v4 != *(&a0->padding_c[0]))\n
        {\n
            v3->field_8 = v4 + 1;\n
            v22 = v3[1].padding_0[v4];\n
            return v22;\n
        }\n
        *(&a0->field_8) = 0;\n
        if (cgc_receive(a0, v9, v10, v11))\n
            return 4294967295;\n
        v15 = *(&v1);\n
        if (!v15)\n
            return 4294967295;\n
        *(&a0->padding_c[0]) = v15;\n
        if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(r8<8>, 0x20<8>), Shl(r8<8>, 0x1f<8>), cc_ndep<8>)))\n
        {\n
            v17 = a0->field_18;\n
            if (v17)\n
            {\n
                v18 = v15 & 3;\n
                if (v15 - 1 < 3)\n
                {\n
                    v19 = 0;\n
                }\n
                else\n
                {\n
                    v19 = 0;\n
                    do\n
                    {\n
                        v3[1].padding_0[v19] = *(v17 + v3[1].padding_0[v19]);\n
                        v3[1].padding_0[1 + v19] = *(v17 + v3[1].padding_0[1 + v19]);\n
                        v3[1].padding_0[2 + v19] = *(v17 + v3[1].padding_0[2 + v19]);\n
                        v3[1].padding_0[3 + v19] = *(v17 + v3[1].padding_0[3 + v19]);\n
                        v19 += 4;\n
                    } while (v15 - v18 != v19);\n
                }\n
                if (v18)\n
                {\n
                    v20 = &v3->padding_0[v19 + 32];\n
                    v21 = 0;\n
                    do\n
                    {\n
                        v20[v21] = *(v17 + v20[v21]);\n
                        v21 += 1;\n
                    } while (v18 != v21);\n
                }\n
            }\n
        }\n
        if (v15 < 0)\n
            return 4294967295;\n
        v4 = v3->field_8;\n
    }\n
}\n
", "4218074:sub_405cda": null, "4218080:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4218095:sub_405cef": null, "4218096:cgc_fwrite": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x450]\n
    unsigned long v1;  // [bp-0x448]\n
    char v2;  // [bp-0x440]\n
    unsigned long long v3;  // [bp-0x438], Other Possible Types: char\n
    unsigned long long v4;  // [bp-0x437]\n
    unsigned long long v5;  // [bp-0x436]\n
    unsigned long long v6;  // [bp-0x435]\n
    struct_0 *v8;  // rbx\n
    unsigned long long v9;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v10;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v11;  // rax\n
    char *v12;  // r15\n
    void* v13;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rcx\n
    struct_2 *v15;  // rdi, Other Possible Types: unsigned long\n
    void* v16;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v17;  // rcx\n
    unsigned long v18;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // rsi\n
    unsigned long long v20;  // rdx\n
    unsigned long v21;  // rcx\n
    char *v22;  // rcx\n
    unsigned long v23;  // rdx\n
    void* v24;  // r14, Other Possible Types: unsigned long\n
    void* v25;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v26;  // rcx\n
    struct_2 *v27;  // rdi\n
    unsigned long long v28;  // r15\n
\n
    v8 = a2;\n
    v9 = a1;\n
    v10 = a0;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v11 = a2->field_c;\n
            if (v11 + a1 >= 0x400)\n
            {\n
                v13 = 0x400 - v11;\n
                cgc_memcpy(&a2->padding_0[v11 + 32], a0, v13);\n
                v8->field_c = v8->field_c + v13;\n
                cgc_fflush(a2);\n
                if (v13 < a1)\n
                    goto LABEL_405ee2;\n
            }\n
            else\n
            {\n
                v13 = 0;\n
                if (0 < a1)\n
                {\n
LABEL_405ee2:\n
                    v28 = a1 - v13;\n
                    cgc_memcpy(&v8->padding_0[v8->field_c + 32], a0 + v13, v28);\n
                    v8->field_c = v8->field_c + v28;\n
                    return a1;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v12 = a2->field_10;\n
    if (!v12)\n
    {\n
        v16 = 0;\n
        do\n
        {\n
            if (v16 >= a1)\n
                return a1;\n
            v16 += *(&v3);\n
        } while (!cgc_transmit(a2, a1, a2, v17));\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a1;\n
        v25 = 0;\n
        v14 = 0x400;\n
        v15 = &v3;\n
        v0 = v10;\n
LABEL_405d53:\n
        v18 = v9 - v25;\n
        if (0x400 <= v18)\n
            v18 = 0x400;\n
        v1 = v25;\n
        v19 = v10 + v25;\n
        v20 = v18;\n
        cgc_memcpy();\n
        if (v18)\n
        {\n
            v15 = v18 & 3;\n
            if (v18 - 1 < 3)\n
            {\n
                v21 = 0;\n
            }\n
            else\n
            {\n
                v21 = 0;\n
                do\n
                {\n
                    *(&v3 + v21) = v12[*(&v3 + v21)];\n
                    *(&v4 + v21) = v12[*(&v4 + v21)];\n
                    *(&v5 + v21) = v12[*(&v5 + v21)];\n
                    *(&v6 + v21) = v12[*(&v6 + v21)];\n
                    v21 += 4;\n
                } while ((v18 & 2044) != v21);\n
            }\n
            if (v15)\n
            {\n
                v22 = &v3 + v21;\n
                v23 = 0;\n
                do\n
                {\n
                    v22[v23] = v12[v22[v23]];\n
                    v23 += 1;\n
                } while (v15 != v23);\n
            }\n
        }\n
        v24 = 0;\n
        do\n
        {\n
            if (v18 <= v24)\n
            {\n
                v25 = v1 + v18;\n
                v10 = v0;\n
                v26 = 0x400;\n
                v27 = &v3;\n
                if (v25 >= v9)\n
                    return v9;\n
                goto LABEL_405d53;\n
            }\n
            v24 += *(&v2);\n
        } while (!cgc_transmit(v15, v19));\n
    }\n
    return -1;\n
}\n
", "4218424:sub_405e38": null, "4218651:sub_405f1b": null, "4218656:cgc_fxlat": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[15];\n
    uint128_t field_10;\n
    char padding_20[80];\n
    uint128_t field_70;\n
    uint128_t field_80;\n
    uint128_t field_90;\n
    uint128_t field_a0;\n
    uint128_t field_b0;\n
    uint128_t field_c0;\n
    uint128_t field_d0;\n
    uint128_t field_e0;\n
    uint128_t field_f0;\n
} struct_0;\n
\n
long long cgc_fxlat(struct_1 *a0, char a1[2])\n
{\n
    struct_1 *v1;  // r15\n
    unsigned long long v2;  // rdi\n
    char v3[2];  // r14\n
    struct_0 *v4;  // rbx\n
    char v7;  // rdx, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v10;  // rdi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned long v13;  // rdx\n
    char v14;  // al\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!a1)\n
    {\n
        *(&v1->field_10) = 0;\n
        return cgc_free(v2);\n
    }\n
    v3 = a1;\n
    v4 = cgc_realloc(v2, 0x100);\n
    v1->field_10 = v4;\n
    *(&v1[1].padding_0[0]) = cgc_realloc(*(&v1[1].padding_0[0]), 0x100);\n
    v7 = a1[0];\n
    v9 = 826981510;\n
    if (v3[0])\n
    {\n
        v8 = 1;\n
        do\n
        {\n
            v9 = __ROL__((v9 + v9 * 36) ^ v7, 13);\n
            v7 = v3[v8];\n
            v8 = v8 + 1;\n
        } while (v7);\n
    }\n
    *(&v4->field_0) = 0xf0e0d0c0b0a09080706050403020100;\n
    v4->field_10 = 41362427191743139026751447860679676176;\n
    strncpy(&v4->padding_20, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmno\", 80);\n
    v4->field_70 = 169468730032567031154139535364404179312;\n
    v4->field_80 = 190819780506037679842037549948358263168;\n
    v4->field_90 = 212170830979508328529935564532312347024;\n
    v4->field_a0 = 233521881452978977217833579116266430880;\n
    v4->field_b0 = 254872931926449625905731593700220514736;\n
    v4->field_c0 = 276223982399920274593629608284174598592;\n
    v4->field_d0 = 297575032873390923281527622868128682448;\n
    v4->field_e0 = 318926083346861571969425637452082766304;\n
    v4->field_f0 = 340277133820332220657323652036036850160;\n
    v10 = 255;\n
    while (true)\n
    {\n
        v11 = v9;\n
        v12 = v9 * 3;\n
        v13 = (0 CONCAT v11) /m v10 >> 32;\n
        v9 = v12 / 0x200000 ^ __ROL__(v12, 13);\n
        v14 = (&v4->field_0)[v10];\n
        (&v4->field_0)[v10] = (&v4->field_0)[v13];\n
        (&v4->field_0)[v13] = v14;\n
        v10 -= 1;\n
    }\n
}\n
", "4219105:sub_4060e1": null, "4219120:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4219135:sub_4060ff": null, "4219136:cgc_malloc_alloc": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_8;\n
    struct struct_3 *field_10;\n
    char padding_18[1016];\n
    unsigned long long field_410;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_1 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_0 *field_18;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_3;\n
\n
extern unsigned long long g_40d210;\n
extern unsigned long long g_40d242;\n
\n
long long cgc_malloc_alloc(struct_2 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned long long v2;  // rbx\n
    struct_2 *v4;  // rbx\n
    struct_2 *v5;  // r12\n
    unsigned long long v7;  // rdx\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // rbx\n
    struct_1 *v11;  // r15, Other Possible Types: unsigned long, void*\n
\n
    if (a1 > 2147483647)\n
        return 0;\n
    v2 = a1 + 3 & -4;\n
    if (!v2)\n
        return tiny_alloc(a0, 4);\n
    if (v2 <= 15)\n
        return tiny_alloc(a0, v2);\n
    if (v2 > 131071)\n
    {\n
        if (!cgc_allocate(a0, a1, v7))\n
        {\n
            v11 = *(&v0);\n
            *(v11) = a0;\n
            *((v11 + 8)) = v2 + 4111 & -0x1000;\n
        }\n
        else\n
        {\n
            return 0;\n
        }\n
    }\n
    v4 = v2 + 31;\n
    v5 = v4 & -0x10;\n
    if (!(v4 & -0x10))\n
    {\n
        v9 = 4294967295;\n
    }\n
    else if (v5 < 513)\n
    {\n
        v10 = v4 / 16;\n
        v9 = v10 + 2;\n
        if (v10 > 128)\n
            v11 = 0;\n
    }\n
    else if (v5 <= 0x1200)\n
    {\n
        v9 = (&v5[524576157].padding_18[816] >> 7) + 34;\n
    }\n
    else\n
    {\n
        v9 = 130;\n
        if (v5 <= 0x20000)\n
            v9 = (&v5[8393218528].padding_18[232] >> 11) + 66;\n
    }\n
    v11 = (&a0->field_0)[v9];\n
    if (!v11)\n
        goto LABEL_0x4063a0;\n
    else\n
        goto LABEL_0x4063c0;\n
}\n
", "4220048:tiny_alloc": "long long tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    struct struct_0 *v4[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // r15\n
    unsigned short v6[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned int v7;  // edx\n
    unsigned short *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
    unsigned long long v12;  // rbp\n
    unsigned long long v13;  // r13\n
    unsigned short *v14;  // r12\n
    unsigned long v15;  // rdx\n
    unsigned long long v16;  // rax\n
    unsigned long long v17;  // rbx\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (a1 <= 15)\n
    {\n
        v4 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v4 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v4 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v4 = 130;\n
        if (a1 <= 0x20000)\n
            v4 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v5 = v4;\n
    v9 = *((a0 + v4 * 8));\n
    if (v9)\n
    {\n
        *((a0 + v5 * 8)) = *(&v9);\n
        return v9;\n
    }\n
    v6 = *((a0 + v5 * 8 + 5144));\n
    if (v6)\n
    {\n
        v7 = v6[0];\n
        a1 = v6[1];\n
    }\n
    else\n
    {\n
        v8 = *((a0 + 5168));\n
        if (v8)\n
        {\n
            v9 = *((a0 + 5176));\n
        }\n
        else if (cgc_allocate(a0, a1, v10))\n
        {\n
            *((a0 + 5168)) = 0;\n
            return 0;\n
        }\n
        else\n
        {\n
            v12 = v0;\n
            v13 = v12 + 1048575;\n
            v14 = v13 & -0x100000;\n
            if (v14 > v12)\n
                cgc_deallocate(a0);\n
            if ((v12 + 0x200000) > (v14 + 0x80000))\n
                cgc_deallocate(a0);\n
            *((a0 + (v13 >> 20) + 1048)) = 1;\n
            v8 = v14;\n
            *((a0 + 5168)) = v14;\n
            v9 = 0;\n
            if (!v14)\n
                return 0;\n
        }\n
        v15 = v8;\n
        v6 = v8 + v9;\n
        *((a0 + v5 * 8 + 5144)) = v6;\n
        *((v15 + v9)) = v3;\n
        *((v15 + v9 + 2)) = v3;\n
        v16 = v9 + 0x1000;\n
        *((a0 + 5176)) = v16;\n
        if (v16 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v7 = a1;\n
    }\n
    v17 = v3 + a1;\n
    *((v6 + 2)) = v17;\n
    if (v7 + v17 < 4097)\n
        return a1 + v6;\n
    *((a0 + v5 * 8 + 5144)) = 0;\n
}\n
", "4220487:sub_406647": null, "4220496:malloc_free": "long long malloc_free(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rcx\n
    unsigned long v4;  // r9\n
    char v5;  // al\n
    unsigned long v6;  // rax\n
    unsigned long v7;  // rdi\n
    unsigned long v8;  // r11\n
    unsigned long v9;  // r8\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // rdi\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r10\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // r10\n
    unsigned long v16;  // rcx\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // r11\n
    unsigned long v19;  // rsi\n
    unsigned long v20;  // rax\n
    unsigned long v21;  // rax\n
    unsigned long v22;  // rcx\n
    unsigned long v23;  // rdx\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rax\n
    unsigned long v26;  // rax\n
    unsigned long v27;  // rdi\n
    unsigned long v28;  // rsi\n
\n
    v0 = v2;\n
    if (!a1)\n
        return v0;\n
    v3 = a1;\n
    v4 = a0;\n
    v5 = *((a0 + (a1 >> 20) + 1048));\n
    if (v5 != 2)\n
    {\n
        if (v5 == 1)\n
        {\n
            v6 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
            *(a1) = *((a0 + v6 * 8));\n
            *((a0 + v6 * 8)) = a1;\n
            return v0;\n
        }\n
        if (v5)\n
            return v0;\n
        if ((a1 & 4095) != 16)\n
        {\n
            v11 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_406a39;\n
        }\n
        else\n
        {\n
            if (*((a1 - 16)) != a0)\n
            {\n
                v3 = a0;\n
                v12 = cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1);\n
            }\n
            else\n
            {\n
                v12 = *((a1 - 8));\n
                if (v12 - 0x20000 <= 2147356671 && !(v12 & 4095))\n
                    return cgc_deallocate(a0, a1);\n
            }\n
            cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v3, v12);\n
        }\n
    }\n
    else if (!(v3 & 7))\n
    {\n
        v19 = a1 - 16;\n
        v7 = *((v19 + 8));\n
        if ((v7 & 1))\n
        {\n
            v11 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_406a39;\n
        }\n
        else if (v7 - 131073 <= -131058)\n
        {\n
            v11 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_406a39;\n
        }\n
        else\n
        {\n
            v8 = *(v19);\n
            v9 = v7 + v19;\n
            v10 = v19 - v8;\n
            if (!v8)\n
                v10 = v8;\n
            if (!v10)\n
            {\n
                if (*(v9) == v7)\n
                    goto LABEL_40678f;\n
                goto LABEL_406a42;\n
            }\n
            else\n
            {\n
                v13 = *((v10 + 8));\n
                if (!((v13 & -2) == v8))\n
                    goto LABEL_406a5c;\n
                if (*(v9) == v7)\n
                {\n
                    if ((v13 & 1))\n
                    {\n
                        if (v8 <= 15)\n
                        {\n
                            v15 = v13 / 4 - 1;\n
                        }\n
                        else if (v8 <= 0x200)\n
                        {\n
                            v15 = (v13 >> 4) + 2;\n
                        }\n
                        else if (v8 <= 0x1200)\n
                        {\n
                            v15 = (0x7ffffffe00 + v8 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v15 = 130;\n
                            if (v8 <= 0x20000)\n
                                v15 = (0x7ffffffee00 + v8 >> 11) + 66;\n
                        }\n
                        *((v10 + 8)) = v8;\n
                        v16 = *((v10 + 16));\n
                        if (v16)\n
                            *((v16 + 24)) = *((v10 + 24));\n
                        v17 = *((v10 + 24));\n
                        if (v17)\n
                            *((v17 + 16)) = v16;\n
                        if (*((v4 + (v15 << 3))) == v10)\n
                            *((v4 + v15 * 8)) = v17;\n
                        *((v10 + 16)) = 0;\n
                        v18 = v8 + *((v19 + 8));\n
                        *((v10 + 8)) = v18;\n
                        *(v9) = v18;\n
                        v19 = v10;\n
                        v14 = *((v9 + 8));\n
                        if (!(!(v14 & 1)))\n
                            goto LABEL_4068a4;\n
                        goto LABEL_40679c;\n
                    }\n
LABEL_40678f:\n
                    v14 = *((v9 + 8));\n
                    if ((v14 & 1))\n
                    {\n
LABEL_4068a4:\n
                        v21 = v14 & -2;\n
                        if (v21 <= 15)\n
                        {\n
                            v22 = v14 / 4 - 1;\n
                        }\n
                        else if (v21 <= 0x200)\n
                        {\n
                            v22 = (v14 >> 4) + 2;\n
                        }\n
                        else if (v21 <= 0x1200)\n
                        {\n
                            v22 = (0x7ffffffe00 + v21 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v22 = 130;\n
                            if (v21 <= 0x20000)\n
                                v22 = (0x7ffffffee00 + v21 >> 11) + 66;\n
                        }\n
                        *((v9 + 8)) = v21;\n
                        v23 = *((v9 + 16));\n
                        if (v23)\n
                            *((v23 + 24)) = *((v9 + 24));\n
                        v24 = *((v9 + 24));\n
                        if (v24)\n
                            *((v24 + 16)) = v23;\n
                        if (*((v4 + (v22 << 3))) == v9)\n
                            *((v4 + v22 * 8)) = v24;\n
                        *((v9 + 16)) = 0;\n
                        v25 = v21 + *((v19 + 8));\n
                        *((v19 + 8)) = v25;\n
                        *((v19 + v25)) = v25;\n
                        v20 = *((v19 + 8));\n
                        if (v20 > 15)\n
                        {\n
LABEL_406961:\n
                            if (v20 <= 0x200)\n
                            {\n
                                v3 = (v20 >> 4) + 2;\n
                            }\n
                            else if (v20 <= 0x1200)\n
                            {\n
                                v3 = (0x7ffffffe00 + v20 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v3 = 130;\n
                                if (v20 <= 0x20000)\n
                                    v3 = (0x7ffffffee00 + v20 >> 11) + 66;\n
                            }\n
LABEL_4069b7:\n
                            if ((v20 & 1))\n
                            {\n
                                v10 = cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\");\n
                            }\n
                            else\n
                            {\n
                                *((v19 + 8)) = v20 | 1;\n
                                *((v19 + 16)) = 0;\n
                                *((v19 + 24)) = *((v4 + v3 * 8));\n
                                *((v4 + v3 * 8)) = v19;\n
                                v26 = *((v19 + 24));\n
                                if (!v26)\n
                                    return v0;\n
                                *((v26 + 16)) = v19;\n
                                return v0;\n
                            }\n
LABEL_406a5c:\n
                            v27 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
                            v28 = v10;\n
LABEL_406a65:\n
                            cgc_heap_error(v27, v28, v3);\n
                            return cgc_malloc_size(v27, v28, v3, v3, v9, v4);\n
                        }\n
LABEL_4067aa:\n
                        v3 = v20 / 4 - 1;\n
                        goto LABEL_4069b7;\n
                    }\n
LABEL_40679c:\n
                    v20 = *((v19 + 8));\n
                    if (!(v20 <= 15))\n
                        goto LABEL_406961;\n
                    goto LABEL_4067aa;\n
                }\n
            }\n
        }\n
    }\n
    v11 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_406a39:\n
    cgc_heap_error(v11, v3);\n
LABEL_406a42:\n
    v27 = \"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\";\n
    v28 = v9;\n
    goto LABEL_406a65;\n
}\n
", "4221552:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 != 1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
}\n
", "4221596:sub_406a9c": null, "4221600:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(unsigned long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // r12\n
    struct_0 *v5;  // rax\n
\n
    v0 = v2;\n
    if (a2 > 2147483647)\n
    {\n
LABEL_406ab1:\n
        return 0;\n
    }\n
    if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        return 0;\n
    }\n
    if (!a1)\n
        return cgc_malloc_alloc(a0, a2);\n
    v3 = a1 / 0x100000;\n
    if (!(*((a0 + v3 + 1048)) & 253))\n
    {\n
        if (a1[1].field_-8 - 16 < a2)\n
            goto LABEL_406b33;\n
    }\n
    else\n
    {\n
        if (*((a0 + v3 + 1048)) == 1)\n
        {\n
            if (*((a1 & -0x1000)) < a2)\n
                goto LABEL_406b33;\n
        }\n
        else\n
        {\n
            if (0 < a2)\n
            {\n
LABEL_406b33:\n
                v5 = cgc_malloc_alloc(a0, a2);\n
                if (v5)\n
                {\n
                    cgc_memcpy(v5, a1);\n
                    malloc_free(a0, a1);\n
                    return v5;\n
                }\n
                goto LABEL_406ab1;\n
            }\n
        }\n
    }\n
    return a1;\n
}\n
", "4221860:sub_406ba4": null, "4221872:cgc_heap_error": "extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // r8\n
    unsigned long long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    cgc_vfprintf(cgc_stderr, a0, &v0);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, v19, v20, v21, v22);\n
}\n
", "4222048:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            if (*(v1) == a1)\n
                return v1;\n
            v1 += 1;\n
            tmp_5 = a2;\n
            a2 -= 1;\n
        } while (tmp_5 != 1);\n
    }\n
    return 0;\n
}\n
", "4222084:sub_406c84": null, "4222096:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4222142:sub_406cbe": null, "4222144:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_406d54:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_406ce7;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_406ce7:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_406d54;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_406ce7;\n
}\n
", "4222575:sub_406e6f": null, "4222576:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    char *v2;  // r8, Other Possible Types: unsigned long\n
    unsigned long v3;  // r11\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    uint128_t *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r10\n
    unsigned long v13;  // r11\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // r9, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    int v18;  // xmm1\n
    int v19;  // xmm1\n
    int v20;  // xmm1\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rdi\n
    uint128_t *v27;  // rcx, Other Possible Types: unsigned long\n
    int v28;  // xmm1\n
    unsigned long v29;  // r8\n
    char *v30;  // rcx\n
    char *v31;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v32;  // r8\n
    char *v33;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r9\n
    char *v35;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v36;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 4)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_406fc5:\n
                if (a2 < 16)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x10;\n
                    v4 = v2 - 16;\n
                    v5 = (v4 >> 4) + 1;\n
                    v6 = v5 & 3;\n
                    if (v4 < 48)\n
                    {\n
                        v10 = 0;\n
                    }\n
                    else\n
                    {\n
                        v11 = v5 & -4;\n
                        v12 = v1 + a2 - 16;\n
                        v13 = &a2[a1 + 16];\n
                        v14 = 0;\n
                        do\n
                        {\n
                            *((v12 + v14)) = *((v13 + v14));\n
                            *((-16 + v12 + v14)) = *((v13 + v14 - 16));\n
                            *((-32 + v12 + v14)) = *((v13 + v14 - 32));\n
                            *((-48 + v12 + v14)) = *((v13 + v14 - 48));\n
                            v14 -= 64;\n
                            tmp_13 = v11;\n
                            v11 -= 4;\n
                        } while (tmp_13 != 4);\n
                        v10 = -(v14);\n
                    }\n
                    if (v6)\n
                    {\n
                        v25 = &a2[-1 * v10];\n
                        v27 = 0;\n
                        do\n
                        {\n
                            *(&v1[16 + v27 + v25]) = *((a1 + v25 - 16 + v27));\n
                            v27 -= 16;\n
                        } while (v6 * 16 + v27);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 12))\n
                        goto LABEL_406ea9;\n
                }\n
                v30 = v2;\n
                v2 = a2 & -4;\n
                v31 = -(v30);\n
                do\n
                {\n
                    *((v1 + a2 - 4 + v31)) = *(&a2[4 + v31 + a1]);\n
                    v31 -= 4;\n
                } while (!(v2) != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_406ea9:\n
                v34 = &a2[~(v2)];\n
                if ((a2 & 3))\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1[v35 + v34] = *((a1 + v34 + v35));\n
                        v35 -= 1;\n
                    } while (!(a2 & 3) != v35);\n
                    v2 -= v35;\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                v36 = &a2[-1 * v2];\n
                do\n
                {\n
                    v1[1 + v36] = *((a1 + v36 - 1));\n
                    v1[2 + v36] = *((a1 + v36 - 2));\n
                    v1[3 + v36] = *((a1 + v36 - 3));\n
                    v1[4 + v36] = *((a1 + v36 - 4));\n
                    tmp_10 = v36;\n
                    v36 -= 4;\n
                } while (tmp_10 != 4);\n
                return v1;\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_406fc5;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_406ea9;\n
    }\n
    else\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_406fd3:\n
                if (a2 < 32)\n
                {\n
                    v3 = 0;\n
                }\n
                else\n
                {\n
                    v3 = a2 & -0x20;\n
                    v7 = v3 - 32;\n
                    v8 = (v7 >> 5) + 1;\n
                    v9 = v8 & 3;\n
                    if (v7 < 96)\n
                    {\n
                        v15 = 0;\n
                    }\n
                    else\n
                    {\n
                        v16 = v8 & -4;\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v17 = *((a1 + v15 + 16));\n
                            *(&v1[v15]) = *((a1 + v15));\n
                            *(&v1[16 + v15]) = v17;\n
                            v18 = *((a1 + v15 + 48));\n
                            *(&v1[32 + v15]) = *((a1 + v15 + 32));\n
                            *(&v1[48 + v15]) = v18;\n
                            v19 = *((a1 + v15 + 80));\n
                            *(&v1[64 + v15]) = *((a1 + v15 + 64));\n
                            *(&v1[80 + v15]) = v19;\n
                            v20 = *((a1 + v15 + 112));\n
                            *(&v1[96 + v15]) = *((a1 + v15 + 96));\n
                            *(&v1[112 + v15]) = v20;\n
                            v15 -= -128;\n
                            tmp_21 = v16;\n
                            v16 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v9)\n
                    {\n
                        v21 = &v1[v15 + 16];\n
                        v22 = a1 + v15 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v28 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v28;\n
                            v24 += 32;\n
                        } while (v9 * 32 != v24);\n
                    }\n
                    if (v3 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_406f57;\n
                }\n
                v29 = v3;\n
                v3 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v29]) = *((a1 + v29));\n
                    v29 += 8;\n
                } while (v3 != v29);\n
                if (v3 == a2)\n
                    return v1;\n
LABEL_406f57:\n
                v32 = &a2[~(v3)];\n
                v33 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v3] = *((a1 + v3));\n
                        v3 += 1;\n
                        tmp_7 = v33;\n
                        v33 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v32 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v3] = *((a1 + v3));\n
                    v1[1 + v3] = *((a1 + v3 + 1));\n
                    v1[2 + v3] = *((a1 + v3 + 2));\n
                    v1[3 + v3] = *((a1 + v3 + 3));\n
                    v3 += 4;\n
                } while (a2 != v3);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_406fd3;\n
            }\n
        }\n
        v3 = 0;\n
        goto LABEL_406f57;\n
    }\n
}\n
", "4223503:sub_40720f": null, "4223504:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long v2;  // rcx\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // r10\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // r10, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    int v15;  // xmm0\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = a2 & -0x20;\n
            tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
            v3 = tmp_43;\n
            v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
            v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
            v6 = v2 - 32;\n
            v7 = (v6 >> 5) + 1;\n
            v8 = v7 & 7;\n
            if (v6 < 224)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v10 = v7 & -8;\n
                v9 = 0;\n
                do\n
                {\n
                    *(&v1[v9]) = v5;\n
                    *(&v1[16 + v9]) = v5;\n
                    *(&v1[32 + v9]) = v5;\n
                    *(&v1[48 + v9]) = v5;\n
                    *(&v1[64 + v9]) = v5;\n
                    *(&v1[80 + v9]) = v5;\n
                    *(&v1[96 + v9]) = v5;\n
                    *(&v1[112 + v9]) = v5;\n
                    *(&v1[128 + v9]) = v5;\n
                    *(&v1[144 + v9]) = v5;\n
                    *(&v1[160 + v9]) = v5;\n
                    *(&v1[176 + v9]) = v5;\n
                    *(&v1[192 + v9]) = v5;\n
                    *(&v1[208 + v9]) = v5;\n
                    *(&v1[224 + v9]) = v5;\n
                    *(&v1[240 + v9]) = v5;\n
                    v9 += 0x100;\n
                    tmp_21 = v10;\n
                    v10 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v8)\n
            {\n
                v11 = &v1[v9 + 16];\n
                v13 = 0;\n
                do\n
                {\n
                    *((-16 + v11 + v13)) = v5;\n
                    *((v11 + v13)) = v5;\n
                    v13 += 32;\n
                } while (v8 * 32 != v13);\n
            }\n
            if (v2 == a2)\n
                return v1;\n
            if (!(a2 & 24))\n
                goto LABEL_407380;\n
        }\n
        v14 = v2;\n
        v2 = a2 & -8;\n
        tmp_20 = InterleaveLOV(tmp_21, tmp_21);\n
        v15 = tmp_20;\n
        do\n
        {\n
            *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
            v14 += 8;\n
        } while (v2 != v14);\n
        if (v2 == a2)\n
            return v1;\n
    }\n
    do\n
    {\n
LABEL_407380:\n
        v1[v2] = a1;\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4223886:sub_40738e": null, "4223888:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_printf(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    unsigned long v5;  // [bp-0xb8]\n
    unsigned long v6;  // [bp-0xb0]\n
    unsigned long v7;  // [bp-0xa8]\n
    unsigned long v8;  // [bp-0xa0]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
    unsigned long v32;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v32 = cgc__vsfprintf();\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v32;\n
    }\n
    v32 = cgc__vsfprintf();\n
    return v32;\n
}\n
", "4224100:sub_407464": null, "4224112:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_vprintf()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return cgc__vsfprintf();\n
    }\n
    return cgc__vsfprintf();\n
}\n
", "4224190:sub_4074be": null, "4224192:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fprintf(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    unsigned long v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
    unsigned long v30;  // rbp, Other Possible Types: unsigned long long\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v30;\n
    }\n
    v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
    return v30;\n
}\n
", "4224401:sub_407591": null, "4224416:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return cgc__vsfprintf(a1, a2, a0, 0);\n
    }\n
    return cgc__vsfprintf(a1, a2, a0, 0);\n
}\n
", "4224499:sub_4075f3": null, "4224512:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4224665:sub_407699": null, "4224672:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4224685:sub_4076ad": null, "4224688:cgc__vsfprintf": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_-1;\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
} struct_1;\n
\n
long long cgc__vsfprintf(struct_0 *a0, struct_0 *a1, struct_0 *a2, char *a3)\n
{\n
    int tmp_16;  // tmp #16\n
    int tmp_2;  // tmp #2\n
    unsigned long long v0;  // [bp-0x1c8]\n
    int tmp_50;  // tmp #50\n
    int tmp_70;  // tmp #70\n
    int tmp_12;  // tmp #12\n
    struct_0 *v1;  // [bp-0xa1]\n
    char *v2;  // [bp-0xa0]\n
    struct_0 *v3;  // [bp-0x98], Other Possible Types: unsigned long\n
    struct_0 *v4;  // [bp-0x90]\n
    char v5;  // [bp-0x88]\n
    char v6;  // [bp-0x87]\n
    char v7;  // [bp-0x76]\n
    char v8;  // [bp-0x75]\n
    char v9;  // [bp-0x74]\n
    unsigned long v10;  // [bp-0x40]\n
    struct_0 *v11;  // [bp-0x38]\n
    char *v13;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v14;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v15;  // al, Other Possible Types: unsigned long, char\n
    struct_0 *v16;  // r15\n
    unsigned int v17;  // eax\n
    char v18;  // r13b\n
    struct_0 *v19;  // rax, Other Possible Types: unsigned long\n
    char v20;  // cc_dep1\n
    char v21;  // cc_dep2\n
    struct_0 *v22;  // r12\n
    unsigned long long v23;  // rcx\n
    unsigned long long v24;  // rcx\n
    unsigned long long v25;  // rcx\n
    unsigned long long v26;  // rcx\n
    struct struct_0 **v27;  // rax, Other Possible Types: unsigned long\n
    unsigned int *v28;  // rsi\n
    unsigned int v29;  // cc_dep1\n
    unsigned int *v30;  // rsi\n
    unsigned int *v31;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v32;  // rcx, Other Possible Types: unsigned long long\n
    unsigned int *v33;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v34;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v35;  // r13\n
    unsigned long long v36;  // rax\n
    unsigned long v37;  // r13, Other Possible Types: unsigned long long\n
    unsigned long v38;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v39;  // rcx\n
    unsigned long v40;  // r12, Other Possible Types: unsigned long long\n
    struct_0 *v41;  // rbp, Other Possible Types: unsigned long\n
    char *v42;  // rbp\n
    unsigned long v43;  // rbp, Other Possible Types: unsigned long long\n
    char *v44;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v45;  // rax\n
    unsigned int v46;  // ebp\n
    unsigned long long v47;  // r12\n
    char *v48;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v49;  // r8\n
    unsigned long long v50;  // r9\n
\n
    v13 = a3;\n
    v4 = a1;\n
    v14 = &a0->field_0 + 1;\n
    v3 = v14;\n
    v15 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v44 = 0;\n
    }\n
    else\n
    {\n
        v16 = a2;\n
        v34 = &v5;\n
        v10 = 20 + -0x1 * &v5;\n
        v44 = 0;\n
        v2 = v13;\n
        while (true)\n
        {\n
            if (v15 != 37)\n
            {\n
                if (v44 < 2147483647)\n
                {\n
                    *(&v1) = v15;\n
                    if (v16)\n
                    {\n
                        a2 = v16;\n
                        cgc_fwrite(&v1, 1, v16);\n
                    }\n
                    if (v13)\n
                        *((v13 + v44)) = v1;\n
                    v14 = v3;\n
                }\n
                else if (v44 == -1)\n
                {\n
                    goto LABEL_407c9f;\n
                }\n
                v44 += 1;\n
                v34 = v14 + 1;\n
                v3 = v34;\n
                tmp_16 = *(v14);\n
                v15 = *(v14);\n
                v14 = v34;\n
                if (!(!tmp_16))\n
                    continue;\n
                goto LABEL_407c2a;\n
            }\n
            a0 = v14 + 1;\n
            v3 = a0;\n
            v17 = *(v14);\n
            v18 = 32;\n
            if (v17 == 32)\n
            {\n
LABEL_407753:\n
                if (!(*(a0) - 48 <= 9))\n
                    goto LABEL_4077ca;\n
                goto LABEL_40775b;\n
            }\n
            else if (v17 != 48)\n
            {\n
                if (!v17)\n
                    goto LABEL_407c2a;\n
                v3 = v14;\n
                a0 = v14;\n
                goto LABEL_407753;\n
            }\n
            else\n
            {\n
                v18 = 48;\n
                if (a0->field_0 - 48 <= 9)\n
                {\n
LABEL_40775b:\n
                    v19 = cgc_strtoul();\n
                    a0 = v3;\n
                    goto LABEL_4077cc;\n
                }\n
                else\n
                {\n
LABEL_4077ca:\n
                    v19 = 0;\n
LABEL_4077cc:\n
                    v34 = a0 + 1;\n
                    v3 = v34;\n
                    a2 = *(a0);\n
                    *(&v13) = 1;\n
                    if (a2 == 104)\n
                    {\n
                        a2 = a0 + 2;\n
                        v20 = *((a0 + 1));\n
                        v21 = 104;\n
                    }\n
                    else if (a2 == 108)\n
                    {\n
                        v20 = *((a0 + 1));\n
                        v21 = 108;\n
                        a2 = a0 + 2;\n
                        *(&v13) = *((a0 + 1)) != 108;\n
                    }\n
                    else\n
                    {\n
                        if (!a2)\n
                            goto LABEL_407c25;\n
                        goto LABEL_407809;\n
                    }\n
                    if (v20 == v21)\n
                        v34 = a2;\n
                    a0 = v34;\n
LABEL_407809:\n
                    v22 = a0 + 1;\n
                    v3 = v22;\n
                    *(&a2) = *(a0);\n
                    v34 = *(a0);\n
                    a1 = v34 - 88;\n
                    if (a1 > 32)\n
                    {\n
                        v13 = v2;\n
                        if (!v34)\n
                        {\n
                            v47 = v22 - v14;\n
                            if (v44 < 2147483647)\n
                            {\n
                                v48 = 2147483647 - v44;\n
                                if (v48 > v47)\n
                                    v48 = v47;\n
                                if (v16)\n
                                    cgc_fwrite(v14, v48, v16);\n
                                if (v13)\n
                                    cgc_memcpy(&v13[v44], v14, v48);\n
                            }\n
                            tmp_2 = v44;\n
                            v44 += v47;\n
                            if (__CFADD__(tmp_2, v47))\n
                                goto LABEL_407c9f;\n
                            goto LABEL_407c2a;\n
                        }\n
                        else\n
                        {\n
                            v40 = v22 - v14;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_407bcf;\n
                            v37 = 2147483647 - v44;\n
                            if (v37 > v40)\n
                                v37 = v40;\n
                            if (v16)\n
                                cgc_fwrite(v14, v37, v16);\n
                            if (!v13)\n
                                goto LABEL_407bcf;\n
                            a0 = &v13[v44];\n
                            a1 = v14;\n
                            a2 = v37;\n
                            goto LABEL_407bca;\n
                        }\n
                    }\n
                    v0 = 4831842305;\n
                    if (((*(&v0 + ((a1 & 63) >> 3)) >> (a1 & 63 & 7)) & 1))\n
                    {\n
                        v11 = v19;\n
                        if (a2 != 100)\n
                        {\n
                            a1 = v4;\n
                            if (v13)\n
                            {\n
                                v25 = a1->field_0;\n
                                v13 = v2;\n
                                if (v25 > 40)\n
                                {\n
                                    v31 = a1->field_8;\n
                                    a1->field_8 = v31 + 8;\n
                                }\n
                                else\n
                                {\n
                                    v31 = v25 + a1->field_10;\n
                                    *(&a1->field_0) = v25 + 8;\n
                                }\n
                                v32 = *(v31);\n
                                if (a2 == 117)\n
                                    a0 = 10;\n
                                else\n
                                    a0 = 16;\n
                                v42 = (a2 == 88 ? \"0123456789abcdef\" : \"0123456789ABCDEF\");\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                if (!v32)\n
                                {\n
                                    v7 = *(v42);\n
                                    a1 = &v7;\n
                                }\n
                                else\n
                                {\n
                                    do\n
                                    {\n
                                        *((a1 - 1)) = v42[(0 CONCAT v32) /m a0 >> 32];\n
                                        a1 = &v7;\n
                                        tmp_50 = v32;\n
                                        v32 = (0 CONCAT v32) /m a0;\n
                                    } while (tmp_50 >= a0);\n
                                }\n
                                v41 = &v5;\n
                                cgc_memmove(&v5, a1, v10 + a1);\n
                                goto LABEL_407abc;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            a2 = v4;\n
                            v41 = &v5;\n
                            if (v13)\n
                            {\n
                                v24 = a2->field_0;\n
                                if (v24 <= 40)\n
                                {\n
                                    v28 = v24 + a2->field_10;\n
                                    *(&a2->field_0) = v24 + 8;\n
                                    v38 = *(v28);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                        goto LABEL_4079df;\n
                                }\n
                                else\n
                                {\n
                                    v30 = a2->field_8;\n
                                    a2->field_8 = &v30[2];\n
                                    v38 = *(v30);\n
                                    v29 = v38;\n
                                    if (v38 < 0)\n
                                    {\n
LABEL_4079df:\n
                                        v5 = 45;\n
                                        v38 = -(v38);\n
                                        v9 = 0;\n
                                        a1 = &v9;\n
                                        a0 = &v6;\n
                                        do\n
                                        {\n
                                            v39 = 3435973837 * v38 >> 35;\n
                                            a2 = v39 * 2;\n
                                            *((a1 - 1)) = *((4248572 + v38 + -5 * a2));\n
                                            a1 -= 1;\n
                                            tmp_70 = v38;\n
                                            v38 = v39;\n
                                        } while (tmp_70 > 9);\n
                                        v41 = &v5;\n
LABEL_407a2d:\n
                                        cgc_memmove(a0, a1, a1 - a0 + 20);\n
                                        v13 = v2;\n
LABEL_407abc:\n
                                        v45 = cgc_strlen(v41);\n
                                        v40 = v45;\n
                                        v34 = v11;\n
                                        if (v34 > v45)\n
                                        {\n
                                            v46 = v45 - v34;\n
                                            do\n
                                            {\n
                                                if (v44 < 2147483647)\n
                                                {\n
                                                    *(&v1) = v18;\n
                                                    if (v16)\n
                                                    {\n
                                                        a2 = v16;\n
                                                        cgc_fwrite(&v1, 1, v16);\n
                                                    }\n
                                                    if (v13)\n
                                                        *((v13 + v44)) = v1;\n
                                                }\n
                                                else\n
                                                {\n
                                                    if (!(v44 == -1))\n
                                                        continue;\n
                                                }\n
                                                tmp_2 = v44;\n
                                                v44 += 1;\n
                                                tmp_12 = v46 + 1;\n
                                                v46 += 1;\n
                                            } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t12, 0x0<64>, ((((t2 + 0x1<64>) <= t2)) ? (0x1<64>) : (0x0<64>)))));\n
                                        }\n
                                        if (!(v44 < 2147483647))\n
                                            goto LABEL_407bcf;\n
                                        v43 = 2147483647 - v44;\n
                                        if (v43 > v45)\n
                                            v43 = v45;\n
                                        if (v16)\n
                                        {\n
                                            a1 = v43;\n
                                            a2 = v16;\n
                                            cgc_fwrite(&v5, v43, v16);\n
                                        }\n
                                        if (!v13)\n
                                            goto LABEL_407bcf;\n
                                        a0 = v13 + v44;\n
                                        a1 = &v5;\n
LABEL_407bc7:\n
                                        a2 = v43;\n
LABEL_407bca:\n
                                        cgc_memcpy(a0, a1, a2);\n
LABEL_407bcf:\n
                                        tmp_2 = v44;\n
                                        v44 += v40;\n
                                        if (__CFADD__(tmp_2, v40))\n
                                            goto LABEL_407c9f;\n
                                        goto LABEL_407bd8;\n
                                    }\n
                                }\n
                                v8 = 0;\n
                                a1 = &v8;\n
                                a0 = &v5;\n
                                if (!v29)\n
                                {\n
                                    v7 = 48;\n
                                    a0 = &v5;\n
                                    a1 = &v7;\n
                                    goto LABEL_407a2d;\n
                                }\n
                            }\n
                        }\n
LABEL_407c25:\n
                        v13 = v2;\n
LABEL_407c2a:\n
                        if (v44 < 2147483647)\n
                            break;\n
                        if (v44 == -1)\n
                        {\n
LABEL_407c9f:\n
                            cgc__terminate(a0);\n
                            return cgc_realloc(a0, a1, a2, v34, v49, v50);\n
                        }\n
                        return v44;\n
                    }\n
                    else if (a1 == 11)\n
                    {\n
                        a2 = v4;\n
                        v23 = *(a2);\n
                        if (v23 <= 40)\n
                        {\n
                            v27 = v23 + *((a2 + 16));\n
                            v34 = v23 + 8;\n
                            *(a2) = v34;\n
                            v13 = v2;\n
                            if (!(v44 < 2147483647))\n
                                goto LABEL_407c10;\n
                            goto LABEL_407996;\n
                        }\n
                        else\n
                        {\n
                            v27 = *((a2 + 8));\n
                            v34 = v27 + 8;\n
                            *((a2 + 8)) = v34;\n
                            v13 = v2;\n
                            if (v44 < 2147483647)\n
                            {\n
LABEL_407996:\n
                                *(&v1) = *(v27);\n
                                if (v16)\n
                                {\n
                                    a2 = v16;\n
                                    cgc_fwrite(&v1, 1, v16);\n
                                }\n
                                if (v13)\n
                                {\n
                                    *((v13 + v44)) = v1;\n
                                    goto LABEL_407c1a;\n
                                }\n
                            }\n
                            else\n
                            {\n
LABEL_407c10:\n
                                if (v44 == -1)\n
                                    goto LABEL_407c9f;\n
LABEL_407c1a:\n
                                v44 += 1;\n
LABEL_407bd8:\n
                                v15 = v3;\n
                                v14 = v15 + 1;\n
                                v3 = v14;\n
                                *(&v15) = *(v15);\n
                                if (!*(&v15))\n
                                    goto LABEL_407c2a;\n
                            }\n
                        }\n
                    }\n
                    else if (a1 == 27)\n
                    {\n
                        a2 = v4;\n
                        v26 = a2->field_0;\n
                        if (v26 > 40)\n
                        {\n
                            v33 = a2->field_8;\n
                            v34 = v33 + 8;\n
                            a2->field_8 = v34;\n
                        }\n
                        else\n
                        {\n
                            v33 = v26 + a2->field_10;\n
                            v34 = v26 + 8;\n
                            *(&a2->field_0) = v34;\n
                        }\n
                        v13 = v2;\n
                        v35 = *(v33);\n
                        v36 = cgc_strlen(v35);\n
                        v40 = v36;\n
                        if (!(v44 < 2147483647))\n
                            goto LABEL_407bcf;\n
                        v43 = 2147483647 - v44;\n
                        if (v43 > v36)\n
                            v43 = v36;\n
                        if (v16)\n
                            cgc_fwrite(v35, v43, v16);\n
                        if (!v13)\n
                            goto LABEL_407bcf;\n
                        a0 = &v13[v44];\n
                        a1 = v35;\n
                        goto LABEL_407bc7;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v13)\n
        *((v13 + v44)) = 0;\n
    return v44;\n
}\n
", "4224760:sub_4076f8": null, "4224881:sub_407771": null, "4225754:sub_407ada": null, "4225831:sub_407b27": null, "4226224:cgc_realloc": "extern unsigned int g_heap;\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4226242:sub_407cc2": null, "4226256:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v5 = a0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v3 = cgc_tolower(v2);\n
            v2 = cgc_tolower(*(v1));\n
            if (v3 != v2)\n
            {\n
                *(&v2) = *((v5 - 1));\n
                return v2 - *(v1);\n
            }\n
            v1 += 1;\n
            v2 = *(v5);\n
            v5 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4226353:sub_407d31": null, "4226368:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4226464:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char v1;  // cl, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (v1 == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (v1);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4226521:sub_407dd9": null, "4226528:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4226581:sub_407e15": null, "4226592:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (v1);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4226645:sub_407e55": null, "4226656:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4226717:sub_407e9d": null, "4226720:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4226754:sub_407ec2": null, "4226768:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v4;  // r15\n
    unsigned long long v5;  // rax\n
    char v6[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v6 = a0;\n
    v4 = &a0[a2];\n
    v2 = a0[0];\n
    if (a0[0])\n
    {\n
        while (*(v3))\n
        {\n
            v5 = cgc_tolower(v2);\n
            if (v5 != cgc_tolower(*(v3)))\n
                break;\n
            if (v6 >= v4)\n
                break;\n
            v3 += 1;\n
            v2 = *((v6 + 1));\n
            v6 += 1;\n
            if (!v2)\n
                break;\n
        }\n
    }\n
    v7 = (v6 == v4 ? *(v6) - *(v3) : 0);\n
    return v7;\n
}\n
", "4226879:sub_407f3f": null, "4226880:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_21;  // tmp #21\n
    char *v1;  // rax\n
    char v2;  // cl\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // r8, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r10\n
    char *v7;  // r10\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r11\n
    unsigned long long v11;  // r9\n
    unsigned long v12;  // rsi\n
    unsigned long v13;  // r11, Other Possible Types: unsigned long long\n
    uint128_t *v14;  // rcx\n
    unsigned long v16;  // rsi\n
    char *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v18;  // r8\n
    unsigned long long v19;  // rcx\n
    unsigned long v20;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    v4 = 0;\n
    v3 = v1;\n
    if (*(a1) && a2)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1[v4] = v2;\n
            v2 = a1[1 + v4];\n
            v4 += 1;\n
            if (!v2)\n
                break;\n
            if (v4 >= a2)\n
                break;\n
        }\n
        v3 = &v1[v4];\n
    }\n
    if (v4 >= a2)\n
        return v1;\n
    v5 = 1 + v3 - v1;\n
    v6 = (!(a2 <= v5) ? v5 : a2);\n
    v7 = &v1[v6 + -1 * v3];\n
    if (v7 < 8)\n
    {\n
LABEL_407fa4:\n
        v17 = v3;\n
        goto LABEL_4080d6;\n
    }\n
    else\n
    {\n
        if (v7 < 32)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v8 = v7 & -0x20;\n
            v9 = v8 - 32;\n
            v10 = (v9 >> 5) + 1;\n
            v11 = v10 & 7;\n
            if (v9 < 224)\n
            {\n
                v12 = 0;\n
            }\n
            else\n
            {\n
                v13 = v10 & -8;\n
                v12 = 0;\n
                do\n
                {\n
                    *((v3 + v12)) = 0;\n
                    *((v3 + v12 + 16)) = 0;\n
                    *((v3 + v12 + 32)) = 0;\n
                    *((v3 + v12 + 48)) = 0;\n
                    *((v3 + v12 + 64)) = 0;\n
                    *((v3 + v12 + 80)) = 0;\n
                    *((v3 + v12 + 96)) = 0;\n
                    *((v3 + v12 + 112)) = 0;\n
                    *((v3 + v12 + 128)) = 0;\n
                    *((v3 + v12 + 144)) = 0;\n
                    *((v3 + v12 + 160)) = 0;\n
                    *((v3 + v12 + 176)) = 0;\n
                    *((v3 + v12 + 192)) = 0;\n
                    *((v3 + v12 + 208)) = 0;\n
                    *((v3 + v12 + 224)) = 0;\n
                    *((v3 + v12 + 240)) = 0;\n
                    v12 += 0x100;\n
                    tmp_21 = v13;\n
                    v13 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v11)\n
            {\n
                v14 = v12 + v3 + 16;\n
                v16 = 0;\n
                do\n
                {\n
                    *((-16 + v14 + v16)) = 0;\n
                    *((v14 + v16)) = 0;\n
                    v16 += 32;\n
                } while (v11 * 32 != v16);\n
            }\n
            if (v7 == v8)\n
                return v1;\n
            if (!(v7 & 24))\n
            {\n
                v3 += v8;\n
                goto LABEL_407fa4;\n
            }\n
        }\n
        if (a2 > v5)\n
            v5 = a2;\n
        v18 = &v1[v5 + -1 * v3];\n
        v19 = v18 & -8;\n
        v17 = v3 + v19;\n
        do\n
        {\n
            *((v3 + v8)) = 0;\n
            v8 += 8;\n
        } while (v19 != v8);\n
        if (v18 == v19)\n
            return v1;\n
LABEL_4080d6:\n
        v20 = v17 - v1;\n
        do\n
        {\n
            *(v17) = 0;\n
            v17 += 1;\n
            v20 += 1;\n
        } while (v20 < a2);\n
        return v1;\n
    }\n
}\n
", "4227322:sub_4080fa": null, "4227328:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4227399:sub_408147": null, "4227408:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: char\n
    char *v3;  // r15\n
    unsigned long v4;  // rbx\n
    unsigned long long v5;  // rax\n
    char *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    char *v8;  // rbx\n
    void* v9;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (!v3)\n
        return *(a0);\n
    v2 = *(v3);\n
    v4 = 0;\n
    if (!*(v3))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v5 = cgc_strchr(a1, v2);\n
            if (v5)\n
            {\n
                v7 = &v3[v4];\n
                if (!v3[v4])\n
                    goto LABEL_408195;\n
                v8 = v4 + 1;\n
                v9 = v8 + v3;\n
                goto LABEL_408197;\n
            }\n
            v4 = v4 + 1;\n
            v2 = v3[v4];\n
        } while (v2);\n
        v6 = v4;\n
    }\n
    v7 = &v3[v6];\n
LABEL_408195:\n
    v9 = 0;\n
LABEL_408197:\n
    *(a0) = v9;\n
    *(v7) = 0;\n
    return *(a0);\n
}\n
", "4227521:sub_4081c1": null, "4227536:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    char v3[2];  // rbp, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (a0[0])\n
    {\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v5, a1))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4227615:sub_40821f": null, "4227616:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    unsigned int v25;  // ebp\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // edx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_4083f8;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_4082e1;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_4082e1:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_408320:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_408429;\n
LABEL_408336:\n
                *(&v18) = *(v16);\n
LABEL_408338:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_408345:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 > 2147483647)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_4083f8;\n
                }\n
LABEL_408429:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_4083f8;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_4083f8;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_408345;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_408320;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_408316:\n
            v19 = 16;\n
            goto LABEL_408336;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_408336;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_408338;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_408316;\n
LABEL_4083f8:\n
    v31 = (!v25 ? -0x80000000 : -(v26));\n
    v32 = (!v25 ? 2147483647 : v26);\n
    if (v30 < 0)\n
        v32 = v31;\n
    return v32;\n
}\n
", "4227961:sub_408379": null, "4228159:sub_40843f": null, "4228160:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long v1;  // [bp-0x40]\n
    char v2[2];  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // rbp\n
    char v16[2];  // rbx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v19;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v20;  // rax\n
    unsigned long v21;  // rdi\n
    unsigned long v22;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v24;  // rdi\n
    void* v25;  // rbp, Other Possible Types: unsigned long, unsigned int, unsigned long long\n
    void* v26;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v27;  // r14d\n
    unsigned long long *v28;  // r15, Other Possible Types: unsigned long\n
    char v29[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned long v32;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v19 = a2;\n
    v28 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v2) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v25 = 0;\n
                v30 = 1;\n
                v27 = 1;\n
                v26 = 0;\n
                if (!a1)\n
                    goto LABEL_408618;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!a2)\n
            goto LABEL_408501;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v0 = -1;\n
        if (!a2)\n
        {\n
LABEL_408501:\n
            *(&v18) = *(v16);\n
            if (*(v16) != 48)\n
            {\n
LABEL_408540:\n
                v18 = cgc_isdigit(v18);\n
                v19 = 10;\n
                if (!v18)\n
                    goto LABEL_408654;\n
LABEL_408556:\n
                *(&v18) = *(v16);\n
LABEL_408558:\n
                if (v18)\n
                {\n
                    v1 = a1;\n
LABEL_408565:\n
                    v26 = 0;\n
                    v25 = 0;\n
                    v27 = 1;\n
                    do\n
                    {\n
                        v20 = cgc_isdigit(v18);\n
                        v21 = *(v16);\n
                        if (v20)\n
                        {\n
                            v22 = v21 - 48;\n
                            if (v22 >= v19)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v16);\n
                            if (cgc_islower(v21))\n
                            {\n
                                v22 = v24 - 87;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                if (!cgc_isupper(v24))\n
                                    break;\n
                                v22 = *(v16) - 55;\n
                                if (v22 >= v19)\n
                                    break;\n
                                continue;\n
                            }\n
                        }\n
                        v26 = v22 + v19 * v26;\n
                        if (v26 >> 32)\n
                            v25 = 1;\n
                        v18 = *((v16 + 1));\n
                        v16 += 1;\n
                        v27 = 0;\n
                    } while (v18);\n
                    v28 = v1;\n
                    v30 = v0;\n
                    if (!v28)\n
                        goto LABEL_408618;\n
                }\n
LABEL_408654:\n
                v25 = 0;\n
                v27 = 1;\n
                v26 = 0;\n
                v30 = v0;\n
                if (!a1)\n
                    goto LABEL_408618;\n
                v29 = v2;\n
                if (!v27)\n
                    v29 = v16;\n
                *(v28) = v29;\n
                goto LABEL_408618;\n
            }\n
            else\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    v1 = a1;\n
                    v16 += 1;\n
                    v19 = 8;\n
                    goto LABEL_408565;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                    goto LABEL_408540;\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                }\n
            }\n
LABEL_408536:\n
            v19 = 16;\n
            goto LABEL_408556;\n
        }\n
    }\n
    if (!(a2 == 16))\n
        goto LABEL_408556;\n
    *(&v18) = *(v16);\n
    v19 = 16;\n
    if (!(*(v16) == 48))\n
        goto LABEL_408558;\n
    v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
    goto LABEL_408536;\n
LABEL_408618:\n
    if (v30 < 0)\n
    {\n
        v31 = (v26 == -0x80000000 ? 1 : v25);\n
        if (v26 <= 2147483647)\n
            v31 = v25;\n
        v26 = -(v26);\n
        v25 = v31;\n
    }\n
    v32 = (!v25 ? 4294967295 : v26);\n
    return v32;\n
}\n
", "4228505:sub_408599": null, "4228714:sub_40866a": null, "4228720:_ZN7BrcChatC2Et": "extern char g_410048;\n
\n
long long BrcChat::__base_ctor__(unsigned long long a0[4])\n
{\n
    BrcProtocol::__base_ctor__();\n
    a0[0] = &g_410048;\n
    a0[3] = 65535;\n
    return &g_410048;\n
}\n
", "4228749:sub_40868d": null, "4228752:_ZN7BrcChatC2EPcS0_S0_sttt": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
    unsigned short field_18;\n
    unsigned short field_1a;\n
    unsigned short field_1c;\n
    unsigned short field_1e;\n
} struct_0;\n
\n
extern char g_410048;\n
\n
long long BrcChat::__base_ctor__(struct_0 *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned long a4, char *a5, unsigned int v3, unsigned int a6)\n
{\n
    char v0;  // [bp-0x4c]\n
    unsigned short v1;  // [bp-0x4a]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v4;  // r13\n
    unsigned long long v5;  // r14\n
    unsigned long long v6;  // r15\n
    unsigned long long v8;  // rbp\n
    unsigned long long v9;  // rax\n
    char *v10;  // r13\n
\n
    v2 = v4;\n
    v5 = a6;\n
    v6 = v3;\n
    v1 = a4;\n
    a0->field_0 = &g_410048;\n
    BrcProtocol::__base_ctor__(a0, BrcProtocol::token_length const() + a5 + v6 + v5 + 8);\n
    a0->field_0 = &g_410048;\n
    a0->field_18 = a4;\n
    a0->field_1a = a5;\n
    a0->field_1c = v6;\n
    a0->field_1e = v5;\n
    a0->field_10 = operator new[](a0->field_8);\n
    BrcProtocol::set_token(a0);\n
    v8 = a0->field_10;\n
    v9 = BrcProtocol::token_length const(a0);\n
    v10 = v9 + v8;\n
    cgc_memcpy(v10, &a4, 0x2);\n
    cgc_memcpy(v9 + v8 + 2, &v0, 0x2);\n
    cgc_memcpy(v9 + v8 + 4, &v3, 0x2);\n
    cgc_memcpy(v9 + v8 + 6, &a6, 0x2);\n
    cgc_memcpy(v9 + v8 + 8, a1, a5);\n
    cgc_memcpy(a5 + v10 + 8, a2, v3);\n
    return cgc_memcpy(&a5[a0->field_10 + v9 + 8 + v3], a3, a6);\n
}\n
", "4229088:_ZN7BrcChatD1Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[18];\n
    unsigned int field_1a;\n
    unsigned short field_1e;\n
} struct_0;\n
\n
extern char g_410048;\n
\n
long long BrcChat::__dtor__(struct_0 *a0)\n
{\n
    a0->field_0 = &g_410048;\n
    *(&(&a0->padding_8)[1]) = 0;\n
    *((&a0->field_1a + 2)) = 0;\n
    return BrcProtocol::__dtor__();\n
}\n
", "4229116:sub_4087fc": null, "4229120:_ZN7BrcChatD0Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[18];\n
    unsigned int field_1a;\n
    unsigned short field_1e;\n
} struct_0;\n
\n
extern char g_410048;\n
\n
long long BrcChat::__deleting_dtor__(struct_0 *a0)\n
{\n
    a0->field_0 = &g_410048;\n
    *(&(&a0->padding_8)[1]) = 0;\n
    *((&a0->field_1a + 2)) = 0;\n
    BrcProtocol::__dtor__();\n
    return operator delete(a0);\n
}\n
", "4229161:sub_408829": null, "4229168:_ZN7BrcChat4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    unsigned short field_18;\n
    unsigned short field_1a;\n
    unsigned short field_1c;\n
    unsigned short field_1e;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
long long BrcChat::Recv(struct_0 *a0)\n
{\n
    unsigned long long v1;  // r14\n
    unsigned short *v2;  // rbp\n
    unsigned long v3;  // rax\n
\n
    v1 = BrcProtocol::Recv();\n
    if (v1)\n
    {\n
        v2 = a0->field_10;\n
        v3 = BrcProtocol::token_length const(a0);\n
        a0->field_18 = *((v2 + v3));\n
        a0->field_1a = *((2 + v2 + v3));\n
        a0->field_1c = *((4 + v2 + v3));\n
        a0->field_1e = *((6 + v2 + v3));\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4229245:sub_40887d": null, "4229248:_ZNK7BrcChat11protocol_idEv": "long long BrcChat::protocol_id const()\n
{\n
    return 4;\n
}\n
", "4229254:sub_408886": null, "4229264:_ZNK7BrcChat9chat_typeEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned short field_18;\n
} struct_0;\n
\n
long long BrcChat::chat_type const(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4229269:sub_408895": null, "4229280:_ZNK7BrcChat18sender_name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[26];\n
    unsigned short field_1a;\n
} struct_0;\n
\n
long long BrcChat::sender_name_length const(struct_0 *a0)\n
{\n
    return a0->field_1a;\n
}\n
", "4229285:sub_4088a5": null, "4229296:_ZNK7BrcChat21recipient_name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned short field_1c;\n
} struct_0;\n
\n
long long BrcChat::recipient_name_length const(struct_0 *a0)\n
{\n
    return a0->field_1c;\n
}\n
", "4229301:sub_4088b5": null, "4229312:_ZNK7BrcChat15chat_msg_lengthEv": "typedef struct struct_0 {\n
    char padding_0[30];\n
    unsigned short field_1e;\n
} struct_0;\n
\n
long long BrcChat::chat_msg_length const(struct_0 *a0)\n
{\n
    return a0->field_1e;\n
}\n
", "4229317:sub_4088c5": null, "4229328:_ZNK7BrcChat11sender_nameEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcChat::sender_name const(struct_0 *a0)\n
{\n
    return BrcProtocol::token_length const() + a0->field_10 + 8;\n
}\n
", "4229349:sub_4088e5": null, "4229360:_ZNK7BrcChat9recp_nameEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char padding_18[2];\n
    unsigned short field_1a;\n
} struct_0;\n
\n
long long BrcChat::recp_name const(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    return BrcProtocol::token_length const() + a0->field_10 + a0->field_1a + 8;\n
}\n
", "4229400:sub_408918": null, "4229408:_ZNK7BrcChat8chat_msgEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    char padding_18[2];\n
    unsigned short field_1a;\n
    unsigned short field_1c;\n
} struct_0;\n
\n
long long BrcChat::chat_msg const(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    return BrcProtocol::token_length const() + a0->field_10 + a0->field_1c + a0->field_1a + 8;\n
}\n
", "4229455:sub_40894f": null, "4229456:_ZN10BrcCommandC2Et": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char g_410080;\n
\n
long long BrcCommand::__base_ctor__(struct_0 *a0)\n
{\n
    BrcProtocol::__base_ctor__();\n
    a0->field_0 = &g_410080;\n
    a0->field_18 = 0;\n
    return &g_410080;\n
}\n
", "4229484:sub_40896c": null, "4229488:_ZN10BrcCommandC1EPKcS1_tt": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
    unsigned short field_18;\n
    unsigned short field_1a;\n
} struct_0;\n
\n
extern char g_410080;\n
\n
long long BrcCommand::__ctor__(struct_0 *a0, unsigned int a1, unsigned int a2, char *a3, char *a4)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v3;  // r12\n
    unsigned long v4;  // rax\n
    unsigned long long v6;  // rbp\n
    unsigned long long v7;  // rax\n
\n
    v1 = v3;\n
    v0 = v4;\n
    a0->field_0 = &g_410080;\n
    BrcProtocol::__base_ctor__(a0, BrcProtocol::token_length const() + a3 + a4 + 4);\n
    a0->field_0 = &g_410080;\n
    a0->field_18 = a3;\n
    a0->field_1a = a4;\n
    a0->field_10 = operator new[](a0->field_8);\n
    BrcProtocol::set_token(a0);\n
    v6 = a0->field_10;\n
    v7 = BrcProtocol::token_length const(a0);\n
    cgc_memcpy(v7 + v6, &v0, 0x2);\n
    cgc_memcpy(v7 + v6 + 2, &v0, 0x2);\n
    cgc_memcpy(v7 + v6 + 4, a1, a3);\n
    return cgc_memcpy(&a3[a0->field_10 + v7 + 4], a2, a4);\n
}\n
", "4229712:_ZN10BrcCommandD2Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char g_410080;\n
\n
long long BrcCommand::__base_dtor__(struct_0 *a0)\n
{\n
    a0->field_0 = &g_410080;\n
    a0->field_18 = 0;\n
    return BrcProtocol::__dtor__();\n
}\n
", "4229734:sub_408a66": null, "4229744:_ZN10BrcCommandD0Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[16];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char g_410080;\n
\n
long long BrcCommand::__deleting_dtor__(struct_0 *a0)\n
{\n
    a0->field_0 = &g_410080;\n
    a0->field_18 = 0;\n
    BrcProtocol::__dtor__();\n
    return operator delete(a0);\n
}\n
", "4229779:sub_408a93": null, "4229792:_ZN10BrcCommand4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    unsigned short field_18;\n
    unsigned short field_1a;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
long long BrcCommand::Recv(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rbp\n
    unsigned short *v2;  // r14\n
    unsigned long v3;  // rax\n
\n
    v1 = BrcProtocol::Recv();\n
    if (v1)\n
    {\n
        v2 = a0->field_10;\n
        v3 = BrcProtocol::token_length const(a0);\n
        a0->field_18 = *((v2 + v3));\n
        a0->field_1a = *((2 + v2 + v3));\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4229850:sub_408ada": null, "4229856:_ZNK10BrcCommand11protocol_idEv": "long long BrcCommand::protocol_id const()\n
{\n
    return 2;\n
}\n
", "4229862:sub_408ae6": null, "4229872:_ZNK10BrcCommand15username_lengthEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned short field_18;\n
} struct_0;\n
\n
long long BrcCommand::username_length const(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4229877:sub_408af5": null, "4229888:_ZNK10BrcCommand10cmd_lengthEv": "typedef struct struct_0 {\n
    char padding_0[26];\n
    unsigned short field_1a;\n
} struct_0;\n
\n
long long BrcCommand::cmd_length const(struct_0 *a0)\n
{\n
    return a0->field_1a;\n
}\n
", "4229893:sub_408b05": null, "4229904:_ZNK10BrcCommand8usernameEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcCommand::username const(struct_0 *a0)\n
{\n
    return BrcProtocol::token_length const() + a0->field_10 + 4;\n
}\n
", "4229925:sub_408b25": null, "4229936:_ZNK10BrcCommand3cmdEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned short field_18;\n
} struct_0;\n
\n
long long BrcCommand::cmd const(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    return BrcProtocol::token_length const() + a0->field_10 + a0->field_18 + 4;\n
}\n
", "4229976:sub_408b58": null, "4229984:_ZN10BrcGlobals15check_user_codeEv": "extern char _ZN12_GLOBAL__N_116check_user_code_E;\n
\n
long long BrcGlobals::check_user_code()\n
{\n
    return &_ZN12_GLOBAL__N_116check_user_code_E;\n
}\n
", "4229992:sub_408b68": null, "4230000:_ZN10BrcGlobals18check_channel_codeEv": "extern char _ZN12_GLOBAL__N_119check_channel_code_E;\n
\n
long long BrcGlobals::check_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_119check_channel_code_E;\n
}\n
", "4230008:sub_408b78": null, "4230016:_ZN10BrcGlobals20verify_password_codeEv": "extern char _ZN12_GLOBAL__N_121verify_password_code_E;\n
\n
long long BrcGlobals::verify_password_code()\n
{\n
    return &_ZN12_GLOBAL__N_121verify_password_code_E;\n
}\n
", "4230024:sub_408b88": null, "4230032:_ZN10BrcGlobals13register_codeEv": "extern char _ZN12_GLOBAL__N_114register_code_E;\n
\n
long long BrcGlobals::register_code()\n
{\n
    return &_ZN12_GLOBAL__N_114register_code_E;\n
}\n
", "4230040:sub_408b98": null, "4230048:_ZN10BrcGlobals16delete_user_codeEv": "extern char _ZN12_GLOBAL__N_117delete_user_code_E;\n
\n
long long BrcGlobals::delete_user_code()\n
{\n
    return &_ZN12_GLOBAL__N_117delete_user_code_E;\n
}\n
", "4230056:sub_408ba8": null, "4230064:_ZN10BrcGlobals17join_channel_codeEv": "extern char _ZN12_GLOBAL__N_118join_channel_code_E;\n
\n
long long BrcGlobals::join_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_118join_channel_code_E;\n
}\n
", "4230072:sub_408bb8": null, "4230080:_ZN10BrcGlobals17part_channel_codeEv": "extern char _ZN12_GLOBAL__N_118part_channel_code_E;\n
\n
long long BrcGlobals::part_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_118part_channel_code_E;\n
}\n
", "4230088:sub_408bc8": null, "4230096:_ZN10BrcGlobals19delete_channel_codeEv": "extern char _ZN12_GLOBAL__N_120delete_channel_code_E;\n
\n
long long BrcGlobals::delete_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_120delete_channel_code_E;\n
}\n
", "4230104:sub_408bd8": null, "4230112:_ZN10BrcGlobals22add_channel_admin_codeEv": "extern char _ZN12_GLOBAL__N_123add_channel_admin_code_E;\n
\n
long long BrcGlobals::add_channel_admin_code()\n
{\n
    return &_ZN12_GLOBAL__N_123add_channel_admin_code_E;\n
}\n
", "4230120:sub_408be8": null, "4230128:_ZN10BrcGlobals21request_password_codeEv": "extern char _ZN12_GLOBAL__N_122request_password_code_E;\n
\n
long long BrcGlobals::request_password_code()\n
{\n
    return &_ZN12_GLOBAL__N_122request_password_code_E;\n
}\n
", "4230136:sub_408bf8": null, "4230144:_ZN10BrcGlobals17channel_chat_codeEv": "extern char _ZN12_GLOBAL__N_118channel_chat_code_E;\n
\n
long long BrcGlobals::channel_chat_code()\n
{\n
    return &_ZN12_GLOBAL__N_118channel_chat_code_E;\n
}\n
", "4230152:sub_408c08": null, "4230160:_ZN10BrcGlobals14user_chat_codeEv": "extern char _ZN12_GLOBAL__N_115user_chat_code_E;\n
\n
long long BrcGlobals::user_chat_code()\n
{\n
    return &_ZN12_GLOBAL__N_115user_chat_code_E;\n
}\n
", "4230168:sub_408c18": null, "4230176:_ZN10BrcGlobals9ping_codeEv": "extern char _ZN12_GLOBAL__N_110ping_code_E;\n
\n
long long BrcGlobals::ping_code()\n
{\n
    return &_ZN12_GLOBAL__N_110ping_code_E;\n
}\n
", "4230184:sub_408c28": null, "4230192:_ZN10BrcGlobals9pong_codeEv": "long long BrcGlobals::pong_code()\n
{\n
    return \"\\t\\t\\t\\t\\t\\t\\t\\t\";\n
}\n
", "4230200:sub_408c38": null, "4230208:_ZN10BrcGlobals16server_exit_codeEv": "extern char _ZN12_GLOBAL__N_117server_exit_code_E;\n
\n
long long BrcGlobals::server_exit_code()\n
{\n
    return &_ZN12_GLOBAL__N_117server_exit_code_E;\n
}\n
", "4230216:sub_408c48": null, "4230224:_ZN10BrcGlobals31remote_admin_token_request_codeEv": "extern char _ZN12_GLOBAL__N_132remote_admin_token_request_code_E;\n
\n
long long BrcGlobals::remote_admin_token_request_code()\n
{\n
    return &_ZN12_GLOBAL__N_132remote_admin_token_request_code_E;\n
}\n
", "4230232:sub_408c58": null, "4230240:_ZN10BrcGlobals3eomEv": "extern char _ZN12_GLOBAL__N_14eom_E;\n
\n
long long BrcGlobals::eom()\n
{\n
    return &_ZN12_GLOBAL__N_14eom_E;\n
}\n
", "4230248:sub_408c68": null, "4230256:_ZN10BrcGlobals10eom_lengthEv": "short BrcGlobals::eom_length()\n
{\n
    return 2;\n
}\n
", "4230261:sub_408c75": null, "4230272:_ZN10BrcGlobals2okEv": "extern char _ZN12_GLOBAL__N_13ok_E;\n
\n
long long BrcGlobals::ok()\n
{\n
    return &_ZN12_GLOBAL__N_13ok_E;\n
}\n
", "4230280:sub_408c88": null, "4230288:_ZN10BrcGlobals11user_existsEv": "long long BrcGlobals::user_exists()\n
{\n
    return \"\\tc@cAc\";\n
}\n
", "4230296:sub_408c98": null, "4230304:_ZN10BrcGlobals7failureEv": "long long BrcGlobals::failure()\n
{\n
    return \"@cAc\";\n
}\n
", "4230312:sub_408ca8": null, "4230320:_ZN10BrcGlobals9malformedEv": "long long BrcGlobals::malformed()\n
{\n
    return \"Ac\";\n
}\n
", "4230328:sub_408cb8": null, "4230336:_ZN10BrcGlobals11exit_serverEv": "extern char _ZN12_GLOBAL__N_112exit_server_E;\n
\n
long long BrcGlobals::exit_server()\n
{\n
    return &_ZN12_GLOBAL__N_112exit_server_E;\n
}\n
", "4230344:sub_408cc8": null, "4230352:_ZN10BrcGlobals12success_respEv": "extern unsigned long long _ZN12_GLOBAL__N_113success_resp_E;\n
\n
long long BrcGlobals::success_resp()\n
{\n
    return _ZN12_GLOBAL__N_113success_resp_E;\n
}\n
", "4230360:sub_408cd8": null, "4230368:_ZN10BrcGlobals16user_exists_respEv": "extern unsigned long long _ZN12_GLOBAL__N_117user_exists_resp_E;\n
\n
long long BrcGlobals::user_exists_resp()\n
{\n
    return _ZN12_GLOBAL__N_117user_exists_resp_E;\n
}\n
", "4230376:sub_408ce8": null, "4230384:_ZN10BrcGlobals12failure_respEv": "extern unsigned long long _ZN12_GLOBAL__N_113failure_resp_E;\n
\n
long long BrcGlobals::failure_resp()\n
{\n
    return _ZN12_GLOBAL__N_113failure_resp_E;\n
}\n
", "4230392:sub_408cf8": null, "4230400:_ZN10BrcGlobals14malformed_respEv": "extern unsigned long long _ZN12_GLOBAL__N_115malformed_resp_E;\n
\n
long long BrcGlobals::malformed_resp()\n
{\n
    return _ZN12_GLOBAL__N_115malformed_resp_E;\n
}\n
", "4230408:sub_408d08": null, "4230416:_ZN10BrcGlobals16exit_server_respEv": "extern unsigned long long _ZN12_GLOBAL__N_117exit_server_resp_E;\n
\n
long long BrcGlobals::exit_server_resp()\n
{\n
    return _ZN12_GLOBAL__N_117exit_server_resp_E;\n
}\n
", "4230424:sub_408d18": null, "4230432:_ZN9BrcPacketC2EP4FILES1_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
} struct_0;\n
\n
long long BrcPacket::__base_ctor__(struct_0 *a0, void* a1, void* a2)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v2;\n
    if (a1)\n
    {\n
        a0->field_0 = a1;\n
        v2 = cgc_fbuffered(a1, 0);\n
    }\n
    if (a2)\n
    {\n
        a0->field_8 = a2;\n
        v2 = cgc_fbuffered(a2, 0);\n
    }\n
    a0->field_10 = 65535;\n
    a0->field_18 = 0;\n
    a0->field_20 = 0;\n
    return v2;\n
}\n
", "4230509:sub_408d6d": null, "4230512:_ZN9BrcPacketD2Ev": "typedef struct struct_2 {\n
    uint128_t field_0;\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_3 *field_18;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long BrcPacket::__base_dtor__(struct_2 *a0)\n
{\n
    struct_2 *v1;  // rbx\n
    struct struct_1 **v2;  // rdi\n
\n
    v1 = a0;\n
    a0->field_0 = 0;\n
    a0->field_10 = 65535;\n
    v2 = a0->field_18;\n
    if (v2)\n
        v1->field_18 = 0;\n
    v1->field_20 = 0;\n
    return *(v2)->field_8(v2);\n
}\n
", "4230561:sub_408da1": null, "4230576:_ZN9BrcPacket11ClearPacketEv": "typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_3 *field_18;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long BrcPacket::ClearPacket(struct_2 *a0)\n
{\n
    struct_2 *v1;  // rbx\n
    struct struct_1 **v2;  // rdi\n
\n
    v1 = a0;\n
    a0->field_10 = 65535;\n
    v2 = a0->field_18;\n
    if (v2)\n
        v1->field_18 = 0;\n
    v1->field_20 = 0;\n
    return *(v2)->field_8(v2);\n
}\n
", "4230619:sub_408ddb": null, "4230624:_ZN9BrcPacket4RecvEv": "typedef struct struct_2 {\n
    void* field_0;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_3 *field_18;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long BrcPacket::Recv(struct_2 *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    struct_2 *v3;  // rbx\n
    void* v4;  // rdx\n
    unsigned short *v5;  // r15\n
    unsigned short *v6;  // r14\n
    unsigned short v7;  // ax\n
    struct struct_4 **v8;  // r15, Other Possible Types: unsigned long\n
    struct struct_1 **v10;  // rdi\n
\n
    v0 = v2;\n
    v3 = a0;\n
    v4 = a0->field_0;\n
    if (!v4)\n
    {\n
LABEL_408fc1:\n
        a0->field_10 = 65535;\n
        v10 = a0->field_18;\n
        if (v10)\n
        {\n
            *(v10)->field_8(v10);\n
            v3->field_18 = 0;\n
        }\n
        v3->field_20 = 0;\n
        return 4294967295;\n
    }\n
    else\n
    {\n
        if (cgc_fread(&v0, 1, v4) != 1)\n
            return 4294967294;\n
        if (!(*(&v0 + 7) == 86))\n
            goto LABEL_408fc1;\n
        if (cgc_fread(&v0, 1, a0->field_0) == 1)\n
        {\n
            if (!(*(&v0 + 7) == 41))\n
                goto LABEL_408fc1;\n
            if (cgc_fread(&v0, 1, a0->field_0) == 1)\n
            {\n
                if (!(*(&v0 + 7) == 137))\n
                    goto LABEL_408fc1;\n
                if (cgc_fread(&v0, 1, a0->field_0) == 1)\n
                {\n
                    if (!(*(&v0 + 7) == 206))\n
                        goto LABEL_408fc1;\n
                    if (cgc_fread(&v0, 1, a0->field_0) == 1)\n
                    {\n
                        if (!(*(&v0 + 7) == 115))\n
                            goto LABEL_408fc1;\n
                        if (cgc_fread(&v0, 1, a0->field_0) == 1)\n
                        {\n
                            if (*(&v0 + 7) == 196)\n
                            {\n
                                v5 = &a0->field_10;\n
                                cgc_fread(v5, 2, a0->field_0);\n
                                v6 = &a0->field_10 + 2;\n
                                cgc_fread(v6, 2, a0->field_0);\n
                                if (*((&a0->field_10 + 2)) <= 0x8000)\n
                                {\n
                                    v7 = *(v5);\n
                                    if (v7 == 8)\n
                                    {\n
                                        v8 = operator new(32);\n
                                        BrcResponse::__ctor__(v8, *(v6));\n
                                    }\n
                                    else if (v7 == 4)\n
                                    {\n
                                        v8 = operator new(32);\n
                                        BrcChat::__base_ctor__(v8);\n
                                    }\n
                                    else if (v7 != 2)\n
                                    {\n
                                        v8 = 0;\n
                                    }\n
                                    else\n
                                    {\n
                                        v8 = operator new(32);\n
                                        BrcCommand::__base_ctor__(v8);\n
                                    }\n
                                    a0->field_18 = v8;\n
                                    if (*((*(v8) + 16))(v8, a0->field_0))\n
                                    {\n
                                        cgc_fread(&v3->field_20, 4, v3->field_0);\n
                                        if (v3->field_20 == BrcPacket::CalcChecksum const(v3))\n
                                            return *(v6) + 14;\n
                                    }\n
                                }\n
                            }\n
                            goto LABEL_408fc1;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4231158:sub_408ff6": null, "4231168:_ZNK9BrcPacket17IsValidProtocolIdEv": "char BrcPacket::IsValidProtocolId const()\n
{\n
    return 1;\n
}\n
", "4231171:sub_409003": null, "4231184:_ZNK9BrcPacket18MatchRecvdProtocolEv": "long long BrcPacket::MatchRecvdProtocol const(unsigned short a0[10])\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax\n
    unsigned short v3;  // ax\n
    void* v4;  // r14, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = a0[8];\n
    if (v3 == 8)\n
    {\n
        v4 = operator new(32);\n
        BrcResponse::__ctor__(v4, a0[9]);\n
        return v4;\n
    }\n
    else if (v3 == 4)\n
    {\n
        v4 = operator new(32);\n
        BrcChat::__base_ctor__(v4);\n
        return v4;\n
    }\n
    else if (v3 == 2)\n
    {\n
        v4 = operator new(32);\n
        BrcCommand::__base_ctor__(v4);\n
        return v4;\n
    }\n
    else\n
    {\n
        return 0;\n
    }\n
}\n
", "4231308:sub_40908c": null, "4231312:_ZNK9BrcPacket12CalcChecksumEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
    char field_11;\n
    char field_12;\n
    char field_13;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long BrcPacket::CalcChecksum const(struct_0 *a0)\n
{\n
    struct_0 *v1;  // r14\n
    unsigned long long v2;  // rdi\n
    char *v4;  // rax\n
    unsigned long v5;  // rbx\n
    unsigned long v6;  // rbp, Other Possible Types: unsigned long long\n
    unsigned long v7;  // rbx\n
    unsigned long v8;  // rbp\n
\n
    v1 = a0;\n
    v2 = a0->field_18;\n
    if (!v2)\n
        return 0;\n
    v4 = BrcProtocol::data const(v1->field_18);\n
    if (!v4)\n
        return 0;\n
    v6 = v1->field_13 + v1->field_12 + v1->field_11 + v1->field_10 + 13;\n
    if (BrcProtocol::token_length const(v1->field_18))\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v6 += *((BrcProtocol::token const(v2) + v5));\n
            v5 += 1;\n
        } while (v5 < BrcProtocol::token_length const(v1->field_18));\n
    }\n
    if (BrcProtocol::data_length const(v1->field_18))\n
    {\n
        v7 = 0;\n
        do\n
        {\n
            v6 += v4[v7];\n
            v7 += 1;\n
        } while (v7 < BrcProtocol::data_length const(v1->field_18));\n
    }\n
    v8 = ~(v6);\n
    return v8;\n
}\n
", "4231512:sub_409158": null, "4231520:_ZNK9BrcPacket4SendEv": "typedef struct struct_2 {\n
    char padding_0[8];\n
    void* field_8;\n
    char padding_10[8];\n
    struct struct_3 *field_18;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long BrcPacket::Send const(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1c]\n
    struct_2 *v4;  // rbx\n
    unsigned short *v6;  // r14\n
\n
    v1 = 50291;\n
    v0 = 3465095510;\n
    if ([D] amd64g_calculate_condition(0x8<64>, 0x6<64>, Conv(16->64, Load(addr=(rdi<8> + 0x12<64>), size=2, endness=Iend_LE)), 0x0<64>, cc_ndep<8>))\n
        return 4294967295;\n
    v4 = a0;\n
    if (!a0->field_18)\n
    {\n
        return 4294967295;\n
    }\n
    else if (cgc_fwrite(&v0, 6, a0->field_8) != 6)\n
    {\n
        return 4294967295;\n
    }\n
    else if (cgc_fwrite(&a0->padding_10, 2, v4->field_8) != 2)\n
    {\n
        return 4294967295;\n
    }\n
    else\n
    {\n
        v6 = &v4->padding_10[2];\n
        if (cgc_fwrite(v6, 2, v4->field_8) != 2)\n
        {\n
            return 4294967295;\n
        }\n
        else if (!v4->field_18->field_0->field_18(v4->field_18, v4->field_8))\n
        {\n
            return 4294967295;\n
        }\n
        else if (cgc_fwrite(v4 + 1, 4, v4->field_8) != 4)\n
        {\n
            return 4294967295;\n
        }\n
        else\n
        {\n
            return *(v6) + 14;\n
        }\n
    }\n
}\n
", "4231712:_ZNK9BrcPacket13IsValidPacketEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
char BrcPacket::IsValidPacket const(struct_0 *a0)\n
{\n
    return a0->field_18 & [D] amd64g_calculate_condition(0x9<64>, 0x6<64>, Conv(16->64, Load(addr=(rdi<8> + 0x12<64>), size=2, endness=Iend_LE)), 0x0<64>, cc_ndep<8>);\n
}\n
", "4231731:sub_409233": null, "4231744:_ZN9BrcPacket9SetPacketEP11BrcProtocol": "typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
    unsigned short field_12;\n
    char padding_14[4];\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
} struct_2;\n
\n
long long BrcPacket::SetPacket(struct_2 *a0, struct struct_1 **a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (a1)\n
    {\n
        a0->field_10 = *(a1)->field_20(a1);\n
        a0->field_12 = BrcProtocol::data_length const(a1) + BrcProtocol::token_length const(a1);\n
        a0->field_18 = a1;\n
        v1 = BrcPacket::CalcChecksum const(a0);\n
        a0->field_20 = v1;\n
    }\n
    *(&v1) = a1;\n
    return v1;\n
}\n
", "4231825:sub_409291": null, "4231840:_ZNK9BrcPacket11GetProtocolEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long BrcPacket::GetProtocol const(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4231845:sub_4092a5": null, "4231856:_ZNK9BrcPacket11protocol_idEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
} struct_0;\n
\n
long long BrcPacket::protocol_id const(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4231861:sub_4092b5": null, "4231872:_ZNK9BrcPacket16DebugPrintPacketEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long BrcPacket::DebugPrintPacket const(struct_0 *a0)\n
{\n
    return BrcProtocol::DebugPrintProtocol const(a0->field_18);\n
}\n
", "4231881:sub_4092c9": null, "4231888:_ZN11BrcProtocolC2Et": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern char g_4100b8;\n
\n
long long BrcProtocol::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = &g_4100b8;\n
    a0->field_8 = a1;\n
    a0->field_10 = 0;\n
    return &g_4100b8;\n
}\n
", "4231911:sub_4092e7": null, "4231920:_ZN11BrcProtocolC2EPct": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern char g_4100b8;\n
\n
long long BrcProtocol::__base_ctor__(struct_0 *a0, unsigned long a1, char *a2)\n
{\n
    char v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    char v3;  // [bp-0x10]\n
    struct_0 *v5;  // rbx\n
    unsigned long v6;  // r12\n
    unsigned long long v7;  // rcx\n
    unsigned long long v8;  // r8\n
    unsigned long long v9;  // r9\n
    char *v11;  // rdi\n
    unsigned long long v12;  // rax\n
    unsigned long long v13;  // rbp\n
\n
    v5 = a0;\n
    a0->field_0 = &g_4100b8;\n
    v6 = TokenGenerator::GetToken();\n
    v11 = a0->field_10;\n
    cgc_memcpy(v11, v6, TokenGenerator::GetTokenLength(a0, a1, a2, v7, v8, v9, *(&v0), *(&v1), *(&v2), *(&v3)));\n
    v12 = &a2[TokenGenerator::GetTokenLength(v11, v6, a2, v7, v8, v9)];\n
    v5->field_8 = v12;\n
    v13 = operator new[](v12);\n
    v5->field_10 = v13;\n
    return cgc_memcpy(TokenGenerator::GetTokenLength(v11, v6, a2, v7, v8, v9) + v13, a1, a2);\n
}\n
", "4232035:sub_409363": null, "4232048:_ZN11BrcProtocol9set_tokenEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcProtocol::set_token(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rax\n
\n
    return cgc_memcpy(a0->field_10, TokenGenerator::GetToken(), TokenGenerator::GetTokenLength(a0, v2, v3, v4, v5, v6, v7, *(&v0)));\n
}\n
", "4232093:sub_40939d": null, "4232096:_ZN11BrcProtocolD1Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern char g_4100b8;\n
\n
long long BrcProtocol::__dtor__(struct_0 *a0)\n
{\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v3;  // rdi\n
\n
    v2 = &g_4100b8;\n
    a0->field_0 = &g_4100b8;\n
    a0->field_8 = 0;\n
    v3 = a0->field_10;\n
    if (v3)\n
        v2 = operator delete[](v3);\n
    a0->field_10 = 0;\n
    return v2;\n
}\n
", "4232140:sub_4093cc": null, "4232144:_ZN11BrcProtocolD0Ev": "int BrcProtocol::__deleting_dtor__()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4232144\n
}\n
", "4232146:sub_4093d2": null, "4232160:_ZN11BrcProtocol4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcProtocol::Recv(struct_0 *a0, void* a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v2;  // [bp-0x8]\n
    unsigned long v4;  // r14\n
    unsigned long v5;  // rbx\n
    unsigned long v6;  // rax\n
    struct_0 *v7;  // rbx\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rax\n
    unsigned long long v10;  // rax\n
\n
    if (!a1)\n
        return 0;\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = v6;\n
    v7 = a0;\n
    v8 = a0->field_10;\n
    if (!v8)\n
    {\n
        v9 = operator new[](v7->field_8);\n
        v7->field_10 = v9;\n
        v10 = cgc_fread(v9, v7->field_8, a1);\n
        *(&v10) = v10 == v7->field_8;\n
        return v10;\n
    }\n
    operator delete[](v8);\n
}\n
", "4232238:sub_40942e": null, "4232240:_ZNK11BrcProtocol4SendEP4FILE": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcProtocol::Send const(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v1;  // rbx\n
    unsigned long long v2;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rax\n
\n
    if (!a1)\n
        return 0;\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!v2)\n
        return 0;\n
    v4 = v1->field_8;\n
    if (v4)\n
    {\n
        v5 = cgc_fwrite(v2, v4, a1);\n
        *(&v5) = v5 == v1->field_8;\n
        return v5;\n
    }\n
    return 0;\n
}\n
", "4232291:sub_409463": null, "4232304:_ZNK11BrcProtocol12token_lengthEv": "long long BrcProtocol::token_length const()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    v0 = v2;\n
    return TokenGenerator::GetTokenLength();\n
}\n
", "4232315:sub_40947b": null, "4232320:_ZNK11BrcProtocol11data_lengthEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
long long BrcProtocol::data_length const(struct_0 *a0)\n
{\n
    return a0->field_8 - TokenGenerator::GetTokenLength();\n
}\n
", "4232339:sub_409493": null, "4232352:_ZNK11BrcProtocol5tokenEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcProtocol::token const(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4232357:sub_4094a5": null, "4232368:_ZNK11BrcProtocol4dataEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcProtocol::data const(struct_0 *a0)\n
{\n
    if (a0->field_10)\n
        return a0->field_10 + TokenGenerator::GetTokenLength();\n
    return 0;\n
}\n
", "4232401:sub_4094d1": null, "4232416:_ZNK11BrcProtocol18DebugPrintProtocolEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcProtocol::DebugPrintProtocol const(struct_0 *a0)\n
{\n
    return print_byte_array(a0->field_10, a0->field_8);\n
}\n
", "4232432:_ZN11BrcResponseC1Et": "extern char g_4100f0;\n
\n
long long BrcResponse::__ctor__(unsigned long long a0[4], unsigned int a1)\n
{\n
    BrcProtocol::__base_ctor__(a0, a1);\n
    a0[0] = &g_4100f0;\n
    a0[3] = 281470781743359;\n
    return 281470781743359;\n
}\n
", "4232467:sub_409513": null, "4232480:_ZN11BrcResponse15set_server_addrEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long BrcResponse::set_server_addr(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_18 = 99999999;\n
    return v1;\n
}\n
", "4232488:sub_409528": null, "4232496:_ZN11BrcResponseC1EsPct": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
    unsigned int field_18;\n
    unsigned short field_1c;\n
    unsigned short field_1e;\n
} struct_0;\n
\n
extern char g_4100f0;\n
\n
long long BrcResponse::__ctor__(struct_0 *a0, unsigned long a1, unsigned int a2, char *a3)\n
{\n
    char v0;  // [bp-0x2c]\n
    unsigned short v1;  // [bp-0x2a]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long v4;  // r15\n
    unsigned long long v6;  // rbp\n
    unsigned long long v7;  // rax\n
\n
    v2 = v4;\n
    v1 = a1;\n
    a0->field_0 = &g_4100f0;\n
    BrcProtocol::__base_ctor__(a0, BrcProtocol::token_length const() + a3 + 8);\n
    a0->field_0 = &g_4100f0;\n
    a0->field_1c = a1;\n
    a0->field_1e = a3;\n
    a0->field_10 = operator new[](a0->field_8);\n
    BrcProtocol::set_token(a0);\n
    a0->field_18 = 99999999;\n
    v6 = a0->field_10;\n
    v7 = BrcProtocol::token_length const();\n
    cgc_memcpy(v7 + v6, &a0->field_18, 0x4);\n
    cgc_memcpy(v7 + v6 + 4, &a1, 0x2);\n
    cgc_memcpy(v7 + v6 + 6, &v0, 0x2);\n
    return cgc_memcpy(v7 + a0->field_10 + 8, a2, a3);\n
}\n
", "4232717:sub_40960d": null, "4232720:_ZN11BrcResponseD2Ev": "extern char g_4100f0;\n
\n
long long BrcResponse::__base_dtor__(unsigned long long a0[4])\n
{\n
    a0[0] = &g_4100f0;\n
    a0[3] = 0;\n
    return BrcProtocol::__dtor__(a0);\n
}\n
", "4232743:sub_409627": null, "4232752:_ZN11BrcResponseD0Ev": "extern char g_4100f0;\n
\n
long long BrcResponse::__deleting_dtor__(unsigned long long a0[4])\n
{\n
    a0[0] = &g_4100f0;\n
    a0[3] = 0;\n
    BrcProtocol::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4232788:sub_409654": null, "4232800:_ZN11BrcResponse4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    unsigned int field_18;\n
    unsigned short field_1c;\n
    unsigned short field_1e;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long BrcResponse::Recv(struct_0 *a0, void* a1)\n
{\n
    unsigned long long v1;  // rbp\n
    unsigned int *v2;  // r14\n
    unsigned long v3;  // rax\n
\n
    v1 = BrcProtocol::Recv(a0, a1);\n
    if (v1)\n
    {\n
        v2 = a0->field_10;\n
        v3 = BrcProtocol::token_length const();\n
        a0->field_18 = *((v2 + v3));\n
        a0->field_1c = *((4 + v2 + v3));\n
        a0->field_1e = *((6 + v2 + v3));\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4232866:sub_4096a2": null, "4232880:_ZNK11BrcResponse11protocol_idEv": "long long BrcResponse::protocol_id const()\n
{\n
    return 8;\n
}\n
", "4232886:sub_4096b6": null, "4232896:_ZNK11BrcResponse11server_addrEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long BrcResponse::server_addr const(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4232900:sub_4096c4": null, "4232912:_ZNK11BrcResponse13response_codeEv": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned short field_1c;\n
} struct_0;\n
\n
long long BrcResponse::response_code const(struct_0 *a0)\n
{\n
    return a0->field_1c;\n
}\n
", "4232917:sub_4096d5": null, "4232928:_ZNK11BrcResponse10msg_lengthEv": "typedef struct struct_0 {\n
    char padding_0[30];\n
    unsigned short field_1e;\n
} struct_0;\n
\n
long long BrcResponse::msg_length const(struct_0 *a0)\n
{\n
    return a0->field_1e;\n
}\n
", "4232933:sub_4096e5": null, "4232944:_ZNK11BrcResponse3msgEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long BrcResponse::msg const(struct_0 *a0)\n
{\n
    return BrcProtocol::token_length const() + a0->field_10 + 8;\n
}\n
", "4232965:sub_409705": null, "4232976:_ZN14TokenGenerator8GetTokenEv": "extern char _ZN12_GLOBAL__N_115g_network_tokenE;\n
\n
long long TokenGenerator::GetToken()\n
{\n
    return &_ZN12_GLOBAL__N_115g_network_tokenE;\n
}\n
", "4232984:sub_409718": null, "4232992:_ZN14TokenGenerator14GetTokenLengthEv": "short TokenGenerator::GetTokenLength()\n
{\n
    return 16;\n
}\n
", "4232997:sub_409725": null, "4233008:_ZN7ChannelC2EPKciP4User": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
    char padding_42[6];\n
    unsigned long long field_48;\n
    uint128_t field_50;\n
    unsigned long long field_60;\n
    struct struct_1 *field_68;\n
    char padding_70[8];\n
    struct struct_1 *field_78;\n
    uint128_t field_80;\n
    struct struct_1 *field_90;\n
    uint128_t field_98;\n
    unsigned long long field_a8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::__base_ctor__(struct_0 *a0, unsigned int a1, char *a2, unsigned long long a3)\n
{\n
    unsigned long long v2;  // rax\n
    unsigned long long *v4;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long *v5;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v6;  // rbp, Other Possible Types: unsigned long\n
    unsigned long v7;  // rcx\n
\n
    a0->field_50 = 128;\n
    a0->field_60 = operator new[](0x400);\n
    *(&a0->field_68) = 128;\n
    a0->field_78 = operator new[](0x400);\n
    a0->field_80 = 128;\n
    a0->field_90 = operator new[](0x400);\n
    *(&(&a0->field_90)[1]) = 128;\n
    v2 = operator new[](0xc00);\n
    Chat::__ctor__(v2);\n
    Chat::__ctor__(v2 + 24);\n
    Chat::__ctor__(v2 + 48);\n
    Chat::__ctor__(v2 + 72);\n
    Chat::__ctor__(v2 + 96);\n
    Chat::__ctor__(v2 + 120);\n
    Chat::__ctor__(v2 + 144);\n
    Chat::__ctor__(v2 + 168);\n
    Chat::__ctor__(v2 + 192);\n
    Chat::__ctor__(v2 + 216);\n
    Chat::__ctor__(v2 + 240);\n
    Chat::__ctor__(v2 + 264);\n
    Chat::__ctor__(v2 + 288);\n
    Chat::__ctor__(v2 + 312);\n
    Chat::__ctor__(v2 + 336);\n
    Chat::__ctor__(v2 + 360);\n
    Chat::__ctor__(v2 + 384);\n
    Chat::__ctor__(v2 + 408);\n
    Chat::__ctor__(v2 + 432);\n
    Chat::__ctor__(v2 + 456);\n
    Chat::__ctor__(v2 + 480);\n
    Chat::__ctor__(v2 + 504);\n
    Chat::__ctor__(v2 + 528);\n
    Chat::__ctor__(v2 + 552);\n
    Chat::__ctor__(v2 + 576);\n
    Chat::__ctor__(v2 + 600);\n
    Chat::__ctor__(v2 + 624);\n
    Chat::__ctor__(v2 + 648);\n
    Chat::__ctor__(v2 + 672);\n
    Chat::__ctor__(v2 + 696);\n
    Chat::__ctor__(v2 + 720);\n
    Chat::__ctor__(v2 + 744);\n
    Chat::__ctor__(v2 + 0x300);\n
    Chat::__ctor__(v2 + 792);\n
    Chat::__ctor__(v2 + 816);\n
    Chat::__ctor__(v2 + 840);\n
    Chat::__ctor__(v2 + 864);\n
    Chat::__ctor__(v2 + 888);\n
    Chat::__ctor__(v2 + 912);\n
    Chat::__ctor__(v2 + 936);\n
    Chat::__ctor__(v2 + 960);\n
    Chat::__ctor__(v2 + 984);\n
    Chat::__ctor__(v2 + 1008);\n
    Chat::__ctor__(v2 + 1032);\n
    Chat::__ctor__(v2 + 1056);\n
    Chat::__ctor__(v2 + 1080);\n
    Chat::__ctor__(v2 + 1104);\n
    Chat::__ctor__(v2 + 1128);\n
    Chat::__ctor__(v2 + 1152);\n
    Chat::__ctor__(v2 + 1176);\n
    Chat::__ctor__(v2 + 1200);\n
    Chat::__ctor__(v2 + 1224);\n
    Chat::__ctor__(v2 + 1248);\n
    Chat::__ctor__(v2 + 1272);\n
    Chat::__ctor__(v2 + 1296);\n
    Chat::__ctor__(v2 + 1320);\n
    Chat::__ctor__(v2 + 1344);\n
    Chat::__ctor__(v2 + 1368);\n
    Chat::__ctor__(v2 + 1392);\n
    Chat::__ctor__(v2 + 1416);\n
    Chat::__ctor__(v2 + 1440);\n
    Chat::__ctor__(v2 + 1464);\n
    Chat::__ctor__(v2 + 1488);\n
    Chat::__ctor__(v2 + 1512);\n
    Chat::__ctor__(v2 + 0x600);\n
    Chat::__ctor__(v2 + 1560);\n
    Chat::__ctor__(v2 + 1584);\n
    Chat::__ctor__(v2 + 1608);\n
    Chat::__ctor__(v2 + 1632);\n
    Chat::__ctor__(v2 + 1656);\n
    Chat::__ctor__(v2 + 1680);\n
    Chat::__ctor__(v2 + 1704);\n
    Chat::__ctor__(v2 + 1728);\n
    Chat::__ctor__(v2 + 1752);\n
    Chat::__ctor__(v2 + 1776);\n
    Chat::__ctor__(v2 + 1800);\n
    Chat::__ctor__(v2 + 1824);\n
    Chat::__ctor__(v2 + 1848);\n
    Chat::__ctor__(v2 + 1872);\n
    Chat::__ctor__(v2 + 1896);\n
    Chat::__ctor__(v2 + 1920);\n
    Chat::__ctor__(v2 + 1944);\n
    Chat::__ctor__(v2 + 1968);\n
    Chat::__ctor__(v2 + 1992);\n
    Chat::__ctor__(v2 + 2016);\n
    Chat::__ctor__(v2 + 2040);\n
    Chat::__ctor__(v2 + 2064);\n
    Chat::__ctor__(v2 + 2088);\n
    Chat::__ctor__(v2 + 2112);\n
    Chat::__ctor__(v2 + 2136);\n
    Chat::__ctor__(v2 + 2160);\n
    Chat::__ctor__(v2 + 2184);\n
    Chat::__ctor__(v2 + 2208);\n
    Chat::__ctor__(v2 + 2232);\n
    Chat::__ctor__(v2 + 2256);\n
    Chat::__ctor__(v2 + 2280);\n
    Chat::__ctor__(v2 + 0x900);\n
    Chat::__ctor__(v2 + 2328);\n
    Chat::__ctor__(v2 + 2352);\n
    Chat::__ctor__(v2 + 2376);\n
    Chat::__ctor__(v2 + 2400);\n
    Chat::__ctor__(v2 + 2424);\n
    Chat::__ctor__(v2 + 2448);\n
    Chat::__ctor__(v2 + 2472);\n
    Chat::__ctor__(v2 + 2496);\n
    Chat::__ctor__(v2 + 2520);\n
    Chat::__ctor__(v2 + 2544);\n
    Chat::__ctor__(v2 + 2568);\n
    Chat::__ctor__(v2 + 2592);\n
    Chat::__ctor__(v2 + 2616);\n
    Chat::__ctor__(v2 + 2640);\n
    Chat::__ctor__(v2 + 2664);\n
    Chat::__ctor__(v2 + 2688);\n
    Chat::__ctor__(v2 + 2712);\n
    Chat::__ctor__(v2 + 2736);\n
    Chat::__ctor__(v2 + 2760);\n
    Chat::__ctor__(v2 + 2784);\n
    Chat::__ctor__(v2 + 2808);\n
    Chat::__ctor__(v2 + 2832);\n
    Chat::__ctor__(v2 + 2856);\n
    Chat::__ctor__(v2 + 2880);\n
    Chat::__ctor__(v2 + 2904);\n
    Chat::__ctor__(v2 + 2928);\n
    Chat::__ctor__(v2 + 2952);\n
    Chat::__ctor__(v2 + 2976);\n
    Chat::__ctor__(v2 + 3000);\n
    Chat::__ctor__(v2 + 3024);\n
    Chat::__ctor__(v2 + 3048);\n
    *((&a0->field_98 + 8)) = v2;\n
    *(&a0->field_40) = (a2 < 64 ? 64 : a2);\n
    cgc_memcpy(a0, a1, a2);\n
    a0->field_40 = a2;\n
    a0->field_48 = a3;\n
    if (*((&a0->field_80 + 8)))\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = User::Equals const(a3, a0->field_90[v4].field_0);\n
            if (v5)\n
                return v5;\n
            v4 += 1;\n
        } while (*((&a0->field_80 + 8)) > v4);\n
    }\n
    if (!a0->padding_70)\n
    {\n
        v5 = 0;\n
        if (0 >= a0->field_68)\n
            return 0;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v5 = User::Equals const(a3, a0->field_78[v6].field_0);\n
            if (v5)\n
                return v5;\n
            v6 += 1;\n
            v5 = a0->padding_70;\n
        } while (v5 > v6);\n
        if (v5 >= a0->field_68)\n
            return a0->padding_70;\n
    }\n
    v7 = a0->field_78;\n
    *(&a0->padding_70[0]) = v5 + 1;\n
    *((v7 + v5 * 8)) = a3;\n
    return v5;\n
}\n
", "4234842:sub_409e5a": null, "4234848:_ZN7Channel16AddUserToChannelEP4User": "typedef struct struct_0 {\n
    char padding_0[104];\n
    unsigned long long field_68;\n
    struct struct_1 *field_70;\n
    struct struct_1 *field_78;\n
    char padding_80[8];\n
    unsigned long long field_88;\n
    struct struct_1 *field_90;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::AddUserToChannel(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // r14\n
    unsigned long long *v2;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // rcx\n
\n
    v1 = a1;\n
    if (a0->field_88)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            a1 = a0->field_90[v2].field_0;\n
            if (User::Equals const(v1, a1))\n
                return 0;\n
            v2 += 1;\n
        } while (a0->field_88 > v2);\n
    }\n
    if (!a0->field_70)\n
    {\n
        v4 = 0;\n
        if (0 >= a0->field_68)\n
            return 0;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            a1 = a0->field_78[v3].field_0;\n
            if (User::Equals const(v1, a1))\n
                return 0;\n
            v3 += 1;\n
            v4 = a0->field_70;\n
        } while (v4 > v3);\n
        if (v4 >= a0->field_68)\n
            return 0;\n
    }\n
    v5 = a0->field_78;\n
    a0->field_70 = v4 + 1;\n
    *((v5 + v4 * 8)) = a1;\n
    *(&v4) = 1;\n
    return v4;\n
}\n
", "4235007:sub_409eff": null, "4235008:_ZN7Channel4nameEv": "long long Channel::name(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4235012:sub_409f04": null, "4235024:_ZN7Channel11name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
long long Channel::name_length(struct_0 *a0)\n
{\n
    return a0->field_40;\n
}\n
", "4235029:sub_409f15": null, "4235040:_ZN7Channel7creatorEv": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned long long field_48;\n
} struct_0;\n
\n
long long Channel::creator(struct_0 *a0)\n
{\n
    return a0->field_48;\n
}\n
", "4235045:sub_409f25": null, "4235056:_ZN7Channel7IsAdminEP4User": "long long Channel::IsAdmin(unsigned long long a0[13], unsigned long long a1)\n
{\n
    unsigned long v1;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v2;  // rax\n
\n
    if (!a0[11])\n
        return 0;\n
    v1 = 1;\n
    while (true)\n
    {\n
        v2 = User::Equals const(a1, *((a0[12] + v1 * 8 - 8)));\n
        if (v2)\n
            return v2;\n
        v1 += 1;\n
        if (a0[11] <= 1)\n
            return v2;\n
    }\n
}\n
", "4235136:_ZN7Channel8IsBannedEP4User": "long long Channel::IsBanned(unsigned long long a0[19], unsigned long long a1)\n
{\n
    unsigned long v1;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v2;  // rax\n
\n
    if (!a0[17])\n
        return 0;\n
    v1 = 1;\n
    while (true)\n
    {\n
        v2 = User::Equals const(a1, *((a0[18] + v1 * 8 - 8)));\n
        if (v2)\n
            return v2;\n
        v1 += 1;\n
        if (a0[17] <= 1)\n
            return v2;\n
    }\n
}\n
", "4235222:sub_409fd6": null, "4235232:_ZN7Channel11CompareNameEPKct": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
long long Channel::CompareName(struct_0 *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
\n
    v0 = v2;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (a0->field_40 != a2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v3 = cgc_memcmp(a0, a1, a2);\n
        *(&v3) = !v3;\n
        return v3;\n
    }\n
}\n
", "4235261:sub_409ffd": null, "4235264:_ZN7Channel15AddUserToAdminsEP4User": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned long long field_50;\n
    struct struct_1 *field_58;\n
    struct struct_1 *field_60;\n
    char padding_68[32];\n
    unsigned long long field_88;\n
    struct struct_1 *field_90;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::AddUserToAdmins(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // r14\n
    unsigned long long *v2;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // rcx\n
\n
    v1 = a1;\n
    if (a0->field_88)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            a1 = a0->field_90[v2].field_0;\n
            if (User::Equals const(v1, a1))\n
                return 0;\n
            v2 += 1;\n
        } while (a0->field_88 > v2);\n
    }\n
    if (!a0->field_58)\n
    {\n
        v4 = 0;\n
        if (0 >= a0->field_50)\n
            return 0;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            a1 = a0->field_60[v3].field_0;\n
            if (User::Equals const(v1, a1))\n
                return 0;\n
            v3 += 1;\n
            v4 = a0->field_58;\n
        } while (v4 > v3);\n
        if (v4 >= a0->field_50)\n
            return 0;\n
    }\n
    v5 = a0->field_60;\n
    a0->field_58 = v4 + 1;\n
    *((v5 + v4 * 8)) = a1;\n
    *(&v4) = 1;\n
    return v4;\n
}\n
", "4235423:sub_40a09f": null, "4235424:_ZN7Channel16AddChatToChannelERK4Chat": "typedef struct struct_1 {\n
    uint128_t field_0;\n
    char padding_10[136];\n
    unsigned long long field_98;\n
    char padding_a0[8];\n
    struct struct_1 *field_a8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
double Channel::AddChatToChannel(long long a0, long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    struct_1 *v2;  // rbx\n
    struct_1 *v3;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rcx\n
    unsigned long v6;  // rax\n
    int v7;  // xmm0\n
\n
    v2 = a0;\n
    Chat::__ctor__(&v0);\n
    v3 = a0->padding_a0;\n
    if (v3 >= 2 && v3 >= a0->field_98)\n
    {\n
        Chat::Delete(a0->field_a8);\n
        v4 = a0->padding_a0;\n
        a0 = a0->field_a8;\n
        *(&v2->padding_a0[0]) = &v4->field_0 + 1;\n
        cgc_memmove(a0, a0 + 24, (v4 * 8 - 8) * 3);\n
        v3 = v2->padding_a0;\n
    }\n
    v5 = a0->field_a8;\n
    *(&a0->padding_a0[0]) = v3 + 1;\n
    v6 = v3 * 3;\n
    *(&v5->padding_10[8 * v6]) = a1->field_10;\n
    v7 = a1->field_0;\n
    *((&v5->field_0 + 8 * v6)) = v7;\n
    return v7;\n
}\n
", "4235579:sub_40a13b": null, "4235584:_ZN7Channel21RemoveUserFromChannelEP4User": "typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned long long field_70;\n
    struct struct_1 *field_78;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::RemoveUserFromChannel(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long v2;  // rbp\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long *v6;  // rsi\n
\n
    if (!a0->field_70)\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        if (User::Equals const(a1, a0->field_78[v2].field_0))\n
        {\n
            v3 = v2;\n
            v4 = a0->field_70;\n
            *(&v2) = 1;\n
            if (v4 < v3)\n
            {\n
                return v2;\n
            }\n
            else if (!v4)\n
            {\n
                return v2;\n
            }\n
            else\n
            {\n
                v5 = v4 - 1;\n
                if (v4 >= 2 && v5 > v3)\n
                {\n
                    v6 = a0->field_78;\n
                    a0->field_70 = v5;\n
                    cgc_memmove(&v6[v3], &v6[v3 + 1], (v5 - v3) * 8);\n
                    return v2;\n
                }\n
                a0->field_70 = v5;\n
                return v2;\n
            }\n
        }\n
        v2 += 1;\n
    } while (a0->field_70 > v2);\n
}\n
", "4235729:sub_40a1d1": null, "4235744:_ZN7Channel17RemoveUserAsAdminEP4User": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned long long field_58;\n
    struct struct_1 *field_60;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::RemoveUserAsAdmin(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long v2;  // rbp\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long *v6;  // rsi\n
\n
    if (!a0->field_58)\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        if (User::Equals const(a1, a0->field_60[v2].field_0))\n
        {\n
            v3 = v2;\n
            v4 = a0->field_58;\n
            *(&v2) = 1;\n
            if (v4 < v3)\n
            {\n
                return v2;\n
            }\n
            else if (!v4)\n
            {\n
                return v2;\n
            }\n
            else\n
            {\n
                v5 = v4 - 1;\n
                if (v4 >= 2 && v5 > v3)\n
                {\n
                    v6 = a0->field_60;\n
                    a0->field_58 = v5;\n
                    cgc_memmove(&v6[v3], &v6[v3 + 1], (v5 - v3) * 8);\n
                    return v2;\n
                }\n
                a0->field_58 = v5;\n
                return v2;\n
            }\n
        }\n
        v2 += 1;\n
    } while (a0->field_58 > v2);\n
}\n
", "4235889:sub_40a271": null, "4235904:_ZN7Channel8FindUserEP4User": "long long Channel::FindUser(unsigned long long a0[16], unsigned long long a1)\n
{\n
    unsigned long v1;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v2;  // rax\n
\n
    if (!a0[14])\n
        return 0;\n
    v1 = 1;\n
    while (true)\n
    {\n
        v2 = User::Equals const(a1, *((a0[15] + v1 * 8 - 8)));\n
        if (v2)\n
            return v2;\n
        v1 += 1;\n
        if (a0[14] <= 1)\n
            return v2;\n
    }\n
}\n
", "4235984:_ZN7Channel7BanUserEP4User": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned long long field_58;\n
    struct struct_1 *field_60;\n
    char padding_68[8];\n
    unsigned long long field_70;\n
    struct struct_1 *field_78;\n
    unsigned long long field_80;\n
    struct struct_1 *field_88;\n
    struct struct_1 *field_90;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::BanUser(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v1;  // r14\n
    struct_0 *v2;  // r15\n
    unsigned long long *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v4;  // rax, Other Possible Types: unsigned long\n
    unsigned long long *v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long *v8;  // rsi\n
    unsigned long long *v9;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
    unsigned long long *v12;  // rsi\n
    unsigned long v13;  // rcx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    if (a0->field_88)\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            v4 = User::Equals const(a1, a0->field_90[v3].field_0);\n
            if (!(!v4))\n
                goto LABEL_40a456;\n
            v3 += 1;\n
        } while (a0->field_88 > v3);\n
    }\n
    if (a0->field_70)\n
    {\n
        v5 = 0;\n
        while (true)\n
        {\n
            a1 = a0->field_78[v5].field_0;\n
            if (User::Equals const(v1, a1))\n
                break;\n
            v5 += 1;\n
            if (a0->field_70 <= v5)\n
                goto LABEL_40a397;\n
        }\n
        v6 = a0->field_70;\n
        if (v6 >= v5)\n
        {\n
            if (!v6)\n
                goto LABEL_40a397;\n
            v7 = v6 - 1;\n
            if (v6 >= 2 && v7 > v5)\n
            {\n
                v8 = a0->field_78;\n
                a0 = &v8[v5];\n
                a1 = &v8[v5 + 1];\n
                v2->field_70 = v7;\n
                cgc_memmove(a0, a1, (v7 - v5) * 8);\n
                goto LABEL_40a397;\n
            }\n
            a0->field_70 = v7;\n
            if (!a0->field_58)\n
                goto LABEL_40a430;\n
            goto LABEL_40a3a2;\n
        }\n
    }\n
LABEL_40a397:\n
    if (!a0->field_58)\n
        goto LABEL_40a430;\n
LABEL_40a3a2:\n
    v9 = 0;\n
    while (true)\n
    {\n
        a1 = a0->field_60[v9].field_0;\n
        if (User::Equals const(v1, a1))\n
            break;\n
        v9 += 1;\n
        if (a0->field_58 <= v9)\n
            goto LABEL_40a430;\n
    }\n
    v10 = a0->field_58;\n
    if (v10 >= v9)\n
    {\n
        if (!v10)\n
            goto LABEL_40a430;\n
        v11 = v10 - 1;\n
        if (v10 >= 2 && v11 > v9)\n
        {\n
            v12 = a0->field_60;\n
            a0 = &v12[v9];\n
            a1 = &v12[v9 + 1];\n
            v2->field_58 = v11;\n
            cgc_memmove(a0, a1, (v11 - v9) * 8);\n
            v4 = v2->field_88;\n
            if (v4 >= v2->field_80)\n
                return 0;\n
            goto LABEL_40a440;\n
        }\n
        a0->field_58 = v11;\n
        v4 = a0->field_88;\n
        if (v4 >= a0->field_80)\n
            return 0;\n
        goto LABEL_40a440;\n
    }\n
LABEL_40a430:\n
    v4 = a0->field_88;\n
    if (v4 >= a0->field_80)\n
        return 0;\n
LABEL_40a440:\n
    v13 = a0->field_90;\n
    a0->field_88 = v4 + 1;\n
    *((v13 + v4 * 8)) = a1;\n
LABEL_40a456:\n
    *(&v4) = 1;\n
    return v4;\n
}\n
", "4236410:sub_40a47a": null, "4236416:_ZN7Channel9RemoveBanEP4User": "typedef struct struct_0 {\n
    char padding_0[136];\n
    unsigned long long field_88;\n
    struct struct_1 *field_90;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long Channel::RemoveBan(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long v2;  // rbp\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long *v6;  // rsi\n
\n
    if (!a0->field_88)\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        if (User::Equals const(a1, a0->field_90[v2].field_0))\n
        {\n
            v3 = v2;\n
            v4 = a0->field_88;\n
            *(&v2) = 1;\n
            if (v4 < v3)\n
            {\n
                return v2;\n
            }\n
            else if (!v4)\n
            {\n
                return v2;\n
            }\n
            else\n
            {\n
                v5 = v4 - 1;\n
                if (v4 >= 2 && v5 > v3)\n
                {\n
                    v6 = a0->field_90;\n
                    a0->field_88 = v5;\n
                    cgc_memmove(&v6[v3], &v6[v3 + 1], (v5 - v3) * 8);\n
                    return v2;\n
                }\n
                a0->field_88 = v5;\n
                return v2;\n
            }\n
        }\n
        v2 += 1;\n
    } while (a0->field_88 > v2);\n
}\n
", "4236579:sub_40a523": null, "4236592:_ZN7Channel13DeleteChannelEv": "typedef struct struct_0 {\n
    char padding_0[80];\n
    uint128_t field_50;\n
    unsigned long long field_60;\n
    uint128_t field_68;\n
    unsigned long long field_78;\n
    char padding_80[24];\n
    uint128_t field_98;\n
    unsigned long long field_a8;\n
} struct_0;\n
\n
long long Channel::DeleteChannel(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x20]\n
    struct_0 *v2;  // rbx\n
    unsigned long v3;  // rdi\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v6;  // rdi\n
\n
    v2 = a0;\n
    a0->field_50 = 0;\n
    v3 = a0->field_60;\n
    if (v3)\n
        operator delete[](v3);\n
    *(&(&v2->field_60)[1]) = 0;\n
    v4 = *((&v2->field_68 + 8));\n
    if (v4)\n
        operator delete[](v4);\n
    v5 = Chat::__ctor__(&v0);\n
    *(&v2->padding_80[16]) = 0;\n
    v6 = *((&v2->field_98 + 8));\n
    if (v6)\n
    {\n
        v5 = operator delete[](v6);\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4236685:sub_40a58d": null, "4236688:_ZN7Channel11GetUserListEPt": "typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned short field_70;\n
    char padding_72[6];\n
    unsigned long long field_78;\n
} struct_0;\n
\n
long long Channel::GetUserList(struct_0 *a0, unsigned short *a1)\n
{\n
    *(a1) = a0->field_70;\n
    return a0->field_78;\n
}\n
", "4236700:sub_40a59c": null, "4236704:_ZN4ChatC1Ev": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long Chat::__ctor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_8 = 0;\n
    a0->field_0 = 0;\n
    a0->field_10 = 0;\n
    return v1;\n
}\n
", "4236726:sub_40a5b6": null, "4236736:_ZN4ChatC1EPctP4User": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long Chat::__ctor__(struct_0 *a0, unsigned int a1, unsigned long a2, unsigned long a3)\n
{\n
    struct_0 *v1;  // rbx\n
    unsigned int v2;  // rdi\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v2 = (a2 < 0x200 ? 0x200 : a2);\n
    v1->field_8 = v2;\n
    v3 = operator new[](v2);\n
    v1->field_0 = v3;\n
    v1->field_10 = a3;\n
    return cgc_memcpy(v3, a1, v1->field_8);\n
}\n
", "4236801:sub_40a601": null, "4236816:_ZN4Chat6DeleteEPS_": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long Chat::Delete(struct_0 *a0)\n
{\n
    struct_0 *v1;  // rbx\n
    unsigned long v2;  // rdi\n
\n
    v1 = a0;\n
    v2 = a0->field_0;\n
    if (v2)\n
        v1->field_0 = 0;\n
    v1->field_8 = 0;\n
    v1->field_10 = 0;\n
    return operator delete[](v2);\n
}\n
", "4236856:sub_40a638": null, "4236864:_ZN4Chat3msgEv": "long long Chat::msg(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4236868:sub_40a644": null, "4236880:_ZN4Chat10msg_lengthEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
long long Chat::msg_length(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4236885:sub_40a655": null, "4236896:_ZN4Chat4fromEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long Chat::from(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4236901:sub_40a665": null, "4236912:_ZN16CommandProcessor14ServiceCommandEP10BrcCommand": "long long CommandProcessor::ServiceCommand(void* a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned short v1;  // [bp-0x34]\n
    unsigned short v2;  // [bp-0x32]\n
    unsigned long v4;  // rax\n
    void* v5;  // r14, Other Possible Types: unsigned long\n
    unsigned short *v6;  // rax\n
    unsigned long v7;  // rbx\n
    unsigned long v8;  // r12\n
    unsigned short *v9;  // r15\n
    unsigned long long v10;  // rbp\n
    unsigned long v11;  // rbx\n
    unsigned long long v12;  // rdi\n
    unsigned long long v13;  // rsi\n
    unsigned long long v14;  // rbx\n
    unsigned long v15;  // rbp\n
    unsigned long v16;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v17;  // rdi\n
    unsigned long long v18;  // rsi\n
    unsigned long long v19;  // rax\n
    unsigned long long v20;  // rbx\n
    void* v21;  // r14, Other Possible Types: unsigned long\n
    unsigned long v22;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v24;  // rbp\n
    void* v25;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v27;  // rbx\n
    void* v28;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v29;  // rdi\n
    unsigned long long v30;  // rsi\n
    unsigned long long v32;  // rbp\n
    void* v33;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r13\n
    void* v35;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v36;  // rdi\n
    unsigned long long v37;  // rsi\n
    unsigned long long v38;  // rbx\n
    void* v39;  // r12, Other Possible Types: unsigned long\n
    unsigned long long v40;  // rbx\n
    unsigned long v41;  // rbp\n
    unsigned long long v42;  // rdi\n
    unsigned long long v43;  // rsi\n
    unsigned long long v44;  // rcx\n
    unsigned long long v46;  // rbp\n
    void* v47;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v48;  // rdi\n
    unsigned long long v49;  // rsi\n
\n
    v0 = v4;\n
    v5 = BrcGlobals::failure_resp();\n
    if (!a0)\n
        return v5;\n
    v6 = BrcCommand::cmd const(a0);\n
    v7 = *(v6);\n
    v8 = v6 + 1;\n
    if (!v7)\n
        v8 = v7;\n
    v9 = 2 + v6 + v7;\n
    if (cgc_memcmp(v8, BrcGlobals::register_code(), v7))\n
    {\n
        if (!cgc_memcmp(v8, BrcGlobals::check_user_code(), v7))\n
        {\n
            v14 = *(v9);\n
            v15 = (v14 ? 0 : v9 + 1);\n
            v17 = v15;\n
            v18 = v14;\n
            print_byte_array();\n
            if (*((2 + v9 + v14)))\n
                return BrcGlobals::malformed_resp();\n
            v22 = Backend::CheckIfUserExists(v15, v14);\n
        }\n
        else if (!cgc_memcmp(v8, BrcGlobals::verify_password_code(), v7))\n
        {\n
            v20 = *(v9);\n
            v21 = v9 + 1;\n
            if (!v20)\n
                v21 = 0;\n
            v24 = *((2 + v9 + v20));\n
            v25 = 4 + v9 + v20;\n
            if (!v24)\n
                v25 = 0;\n
            v29 = v21;\n
            v30 = v20;\n
            print_byte_array();\n
            print_byte_array(v25, v24);\n
            if (*((4 + v24 + v9 + v20)))\n
                return BrcGlobals::malformed_resp();\n
            v22 = Backend::VerifyPassword(v21, v20, v25, v24);\n
        }\n
        else if (!cgc_memcmp(v8, BrcGlobals::delete_user_code(), v7))\n
        {\n
            v27 = *(v9);\n
            v28 = v9 + 1;\n
            if (!v27)\n
                v28 = 0;\n
            v32 = *((2 + v9 + v27));\n
            v33 = 4 + v9 + v27;\n
            if (!v32)\n
                v33 = 0;\n
            v36 = v28;\n
            v37 = v27;\n
            print_byte_array();\n
            print_byte_array(v33, v32);\n
            if (*((4 + v32 + v9 + v27)))\n
                return BrcGlobals::malformed_resp();\n
            v22 = Backend::DeleteUser(v28, v27, v33, v32);\n
        }\n
        else if (!cgc_memcmp(v8, BrcGlobals::join_channel_code(), v7))\n
        {\n
            v34 = *(v9);\n
            v35 = v9 + 1;\n
            if (!v34)\n
                v35 = 0;\n
            v38 = *((2 + v9 + v34));\n
            v39 = 4 + v9 + v34;\n
            if (!v38)\n
                v39 = 0;\n
            v44 = 2 + v9 + v34;\n
            v46 = *((v38 + v44 + 2));\n
            v47 = v38 + v44 + 4;\n
            if (!v46)\n
                v47 = 0;\n
            v2 = *((v46 + v38 + v44 + 2 + 2));\n
            v48 = v35;\n
            v49 = v34;\n
            print_byte_array();\n
            print_byte_array(v39, v38);\n
            print_byte_array(v47, v46);\n
            if (v2)\n
                return BrcGlobals::malformed_resp();\n
            v22 = Backend::JoinChannel(v35, v34, v39, v38, v47, v46);\n
        }\n
        else\n
        {\n
            if (cgc_memcmp(v8, BrcGlobals::check_channel_code(), v7))\n
            {\n
                if (!cgc_memcmp(v8, BrcGlobals::part_channel_code(), v7))\n
                {\n
                    return _GLOBAL__N_1::PartChannel(2 + v6 + v7);\n
                }\n
                else if (!cgc_memcmp(v8, BrcGlobals::delete_channel_code(), v7))\n
                {\n
                    return _GLOBAL__N_1::DeleteChannel(2 + v6 + v7);\n
                }\n
                else if (cgc_memcmp(v8, BrcGlobals::server_exit_code(), v7))\n
                {\n
                    if (cgc_memcmp(v8, BrcGlobals::remote_admin_token_request_code(), v7))\n
                        return v5;\n
                    return _GLOBAL__N_1::RemoteAdminTokenRequest(2 + v6 + *(v6));\n
                }\n
                else\n
                {\n
                    if (!*(v9))\n
                        return BrcGlobals::exit_server_resp();\n
                    return BrcGlobals::malformed_resp();\n
                }\n
            }\n
            v40 = *(v9);\n
            v41 = (v40 ? 0 : v9 + 1);\n
            v42 = v41;\n
            v43 = v40;\n
            print_byte_array();\n
            if (*((2 + v9 + v40)))\n
                return BrcGlobals::malformed_resp();\n
            v22 = Backend::CheckIfChannelExists(v41, v40);\n
        }\n
        if (v22)\n
            return BrcGlobals::success_resp();\n
        return BrcGlobals::failure_resp();\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        v10 = *(v9);\n
        v11 = (v10 ? 0 : v9 + 1);\n
        v12 = v11;\n
        v13 = v10;\n
        print_byte_array();\n
        if (*((2 + v9 + v10)))\n
        {\n
            v16 = BrcGlobals::malformed_resp();\n
        }\n
        else if (Backend::CheckIfUserExists(v11, v10))\n
        {\n
            v16 = BrcGlobals::user_exists_resp();\n
        }\n
        else\n
        {\n
            v19 = Backend::AddUser(v11, v10, &v1);\n
            if (v19 && v1)\n
            {\n
                v5 = operator new(32);\n
                BrcResponse::__ctor__(v5, 100, v19, v1);\n
                return v5;\n
            }\n
            v16 = BrcGlobals::failure_resp();\n
        }\n
        return v16;\n
    }\n
}\n
", "4238030:sub_40aace": null, "4238032:_ZN12_GLOBAL__N_111PartChannelEPc": "long long _GLOBAL__N_1::PartChannel(unsigned short *a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned short v1;  // [bp-0x32]\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // r12\n
    void* v5;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rbx\n
    void* v7;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rcx\n
    unsigned long long v10;  // rbp\n
    void* v11;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v12;  // rdi\n
    unsigned long long v13;  // rsi\n
\n
    v0 = v3;\n
    v4 = *(a0);\n
    v5 = a0 + 1;\n
    if (!v4)\n
        v5 = 0;\n
    v6 = *((2 + a0 + v4));\n
    v7 = 4 + a0 + v4;\n
    if (!v6)\n
        v7 = 0;\n
    v8 = 2 + a0 + v4;\n
    v10 = *((v6 + v8 + 2));\n
    v11 = v6 + v8 + 4;\n
    if (!v10)\n
        v11 = 0;\n
    v1 = *((v10 + v6 + v8 + 2 + 2));\n
    v12 = v5;\n
    v13 = v4;\n
    print_byte_array();\n
    print_byte_array(v7, v6);\n
    print_byte_array(v11, v10);\n
    if (v1)\n
    {\n
        return BrcGlobals::malformed_resp();\n
    }\n
    else if (!Backend::PartChannel(v5, v4, v7, v6, v11, v10))\n
    {\n
        return BrcGlobals::failure_resp();\n
    }\n
    else\n
    {\n
        return BrcGlobals::success_resp();\n
    }\n
}\n
", "4238240:_ZN12_GLOBAL__N_113DeleteChannelEPc": "long long _GLOBAL__N_1::DeleteChannel(unsigned short *a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned short v1;  // [bp-0x32]\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // r12\n
    void* v5;  // r14, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rbx\n
    void* v7;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v8;  // rcx\n
    unsigned long long v10;  // rbp\n
    void* v11;  // r13, Other Possible Types: unsigned long\n
    unsigned long long v12;  // rdi\n
    unsigned long long v13;  // rsi\n
\n
    v0 = v3;\n
    v4 = *(a0);\n
    v5 = a0 + 1;\n
    if (!v4)\n
        v5 = 0;\n
    v6 = *((2 + a0 + v4));\n
    v7 = 4 + a0 + v4;\n
    if (!v6)\n
        v7 = 0;\n
    v8 = 2 + a0 + v4;\n
    v10 = *((v6 + v8 + 2));\n
    v11 = v6 + v8 + 4;\n
    if (!v10)\n
        v11 = 0;\n
    v1 = *((v10 + v6 + v8 + 2 + 2));\n
    v12 = v5;\n
    v13 = v4;\n
    print_byte_array();\n
    print_byte_array(v7, v6);\n
    print_byte_array(v11, v10);\n
    if (v1)\n
    {\n
        return BrcGlobals::malformed_resp();\n
    }\n
    else if (!Backend::DeleteChannel(v5, v4, v7, v6, v11, v10))\n
    {\n
        return BrcGlobals::failure_resp();\n
    }\n
    else\n
    {\n
        return BrcGlobals::success_resp();\n
    }\n
}\n
", "4238448:_ZN12_GLOBAL__N_123RemoteAdminTokenRequestEPc": "long long _GLOBAL__N_1::RemoteAdminTokenRequest(unsigned short *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbx\n
    unsigned long v4;  // r14, Other Possible Types: unsigned long long\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // rsi\n
    void* v9;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    v4 = a0 + 1;\n
    if (!v3)\n
        v4 = v3;\n
    v7 = v4;\n
    v8 = v3;\n
    print_byte_array();\n
    if (*((4 + a0 + v3)))\n
    {\n
        return BrcGlobals::malformed_resp();\n
    }\n
    else if (AdminTasks::RemoteAdminTokenRequest(v4, v3, *((2 + a0 + v3)), &v0))\n
    {\n
        v9 = operator new(32);\n
        BrcResponse::__ctor__(v9, 7777, &v0, 0x4);\n
        return v9;\n
    }\n
    else\n
    {\n
        v9 = BrcGlobals::failure_resp();\n
        return v9;\n
    }\n
}\n
", "4238593:sub_40ad01": null, "4238608:_ZN16CommandProcessor11ServiceChatEP7BrcChat": "long long CommandProcessor::ServiceChat(void* a0)\n
{\n
    unsigned long long v1;  // r14\n
\n
    v1 = BrcGlobals::failure_resp();\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (!BrcChat::chat_msg const(a0))\n
    {\n
        return v1;\n
    }\n
    else if (BrcChat::chat_msg_length const(a0))\n
    {\n
        return v1;\n
    }\n
    else if (BrcChat::chat_type const(a0) == 29)\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        BrcChat::chat_type const(a0);\n
        return v1;\n
    }\n
}\n
", "4238689:sub_40ad61": null, "4238704:_ZN12ConversationC1EP7Channel": "typedef struct struct_0 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long Conversation::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    void* v1;  // rbx\n
\n
    a0->field_0 = 100;\n
    v1 = operator new[](2400);\n
    Chat::__ctor__(v1);\n
    Chat::__ctor__(v1 + 24);\n
    Chat::__ctor__(v1 + 48);\n
    Chat::__ctor__(v1 + 72);\n
    Chat::__ctor__(v1 + 96);\n
    Chat::__ctor__(v1 + 120);\n
    Chat::__ctor__(v1 + 144);\n
    Chat::__ctor__(v1 + 168);\n
    Chat::__ctor__(v1 + 192);\n
    Chat::__ctor__(v1 + 216);\n
    Chat::__ctor__(v1 + 240);\n
    Chat::__ctor__(v1 + 264);\n
    Chat::__ctor__(v1 + 288);\n
    Chat::__ctor__(v1 + 312);\n
    Chat::__ctor__(v1 + 336);\n
    Chat::__ctor__(v1 + 360);\n
    Chat::__ctor__(v1 + 384);\n
    Chat::__ctor__(v1 + 408);\n
    Chat::__ctor__(v1 + 432);\n
    Chat::__ctor__(v1 + 456);\n
    Chat::__ctor__(v1 + 480);\n
    Chat::__ctor__(v1 + 504);\n
    Chat::__ctor__(v1 + 528);\n
    Chat::__ctor__(v1 + 552);\n
    Chat::__ctor__(v1 + 576);\n
    Chat::__ctor__(v1 + 600);\n
    Chat::__ctor__(v1 + 624);\n
    Chat::__ctor__(v1 + 648);\n
    Chat::__ctor__(v1 + 672);\n
    Chat::__ctor__(v1 + 696);\n
    Chat::__ctor__(v1 + 720);\n
    Chat::__ctor__(v1 + 744);\n
    Chat::__ctor__(v1 + 0x300);\n
    Chat::__ctor__(v1 + 792);\n
    Chat::__ctor__(v1 + 816);\n
    Chat::__ctor__(v1 + 840);\n
    Chat::__ctor__(v1 + 864);\n
    Chat::__ctor__(v1 + 888);\n
    Chat::__ctor__(v1 + 912);\n
    Chat::__ctor__(v1 + 936);\n
    Chat::__ctor__(v1 + 960);\n
    Chat::__ctor__(v1 + 984);\n
    Chat::__ctor__(v1 + 1008);\n
    Chat::__ctor__(v1 + 1032);\n
    Chat::__ctor__(v1 + 1056);\n
    Chat::__ctor__(v1 + 1080);\n
    Chat::__ctor__(v1 + 1104);\n
    Chat::__ctor__(v1 + 1128);\n
    Chat::__ctor__(v1 + 1152);\n
    Chat::__ctor__(v1 + 1176);\n
    Chat::__ctor__(v1 + 1200);\n
    Chat::__ctor__(v1 + 1224);\n
    Chat::__ctor__(v1 + 1248);\n
    Chat::__ctor__(v1 + 1272);\n
    Chat::__ctor__(v1 + 1296);\n
    Chat::__ctor__(v1 + 1320);\n
    Chat::__ctor__(v1 + 1344);\n
    Chat::__ctor__(v1 + 1368);\n
    Chat::__ctor__(v1 + 1392);\n
    Chat::__ctor__(v1 + 1416);\n
    Chat::__ctor__(v1 + 1440);\n
    Chat::__ctor__(v1 + 1464);\n
    Chat::__ctor__(v1 + 1488);\n
    Chat::__ctor__(v1 + 1512);\n
    Chat::__ctor__(v1 + 0x600);\n
    Chat::__ctor__(v1 + 1560);\n
    Chat::__ctor__(v1 + 1584);\n
    Chat::__ctor__(v1 + 1608);\n
    Chat::__ctor__(v1 + 1632);\n
    Chat::__ctor__(v1 + 1656);\n
    Chat::__ctor__(v1 + 1680);\n
    Chat::__ctor__(v1 + 1704);\n
    Chat::__ctor__(v1 + 1728);\n
    Chat::__ctor__(v1 + 1752);\n
    Chat::__ctor__(v1 + 1776);\n
    Chat::__ctor__(v1 + 1800);\n
    Chat::__ctor__(v1 + 1824);\n
    Chat::__ctor__(v1 + 1848);\n
    Chat::__ctor__(v1 + 1872);\n
    Chat::__ctor__(v1 + 1896);\n
    Chat::__ctor__(v1 + 1920);\n
    Chat::__ctor__(v1 + 1944);\n
    Chat::__ctor__(v1 + 1968);\n
    Chat::__ctor__(v1 + 1992);\n
    Chat::__ctor__(v1 + 2016);\n
    Chat::__ctor__(v1 + 2040);\n
    Chat::__ctor__(v1 + 2064);\n
    Chat::__ctor__(v1 + 2088);\n
    Chat::__ctor__(v1 + 2112);\n
    Chat::__ctor__(v1 + 2136);\n
    Chat::__ctor__(v1 + 2160);\n
    Chat::__ctor__(v1 + 2184);\n
    Chat::__ctor__(v1 + 2208);\n
    Chat::__ctor__(v1 + 2232);\n
    Chat::__ctor__(v1 + 2256);\n
    Chat::__ctor__(v1 + 2280);\n
    Chat::__ctor__(v1 + 0x900);\n
    Chat::__ctor__(v1 + 2328);\n
    Chat::__ctor__(v1 + 2352);\n
    a0->field_10 = v1;\n
    a0->field_18 = a1;\n
    a0->field_20 = 0;\n
    return Chat::__ctor__(v1 + 2376);\n
}\n
", "4239941:sub_40b245": null, "4239952:_ZN12ConversationC2EP4User": "typedef struct struct_0 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long Conversation::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    void* v1;  // rbx\n
\n
    a0->field_0 = 100;\n
    v1 = operator new[](2400);\n
    Chat::__ctor__(v1);\n
    Chat::__ctor__(v1 + 24);\n
    Chat::__ctor__(v1 + 48);\n
    Chat::__ctor__(v1 + 72);\n
    Chat::__ctor__(v1 + 96);\n
    Chat::__ctor__(v1 + 120);\n
    Chat::__ctor__(v1 + 144);\n
    Chat::__ctor__(v1 + 168);\n
    Chat::__ctor__(v1 + 192);\n
    Chat::__ctor__(v1 + 216);\n
    Chat::__ctor__(v1 + 240);\n
    Chat::__ctor__(v1 + 264);\n
    Chat::__ctor__(v1 + 288);\n
    Chat::__ctor__(v1 + 312);\n
    Chat::__ctor__(v1 + 336);\n
    Chat::__ctor__(v1 + 360);\n
    Chat::__ctor__(v1 + 384);\n
    Chat::__ctor__(v1 + 408);\n
    Chat::__ctor__(v1 + 432);\n
    Chat::__ctor__(v1 + 456);\n
    Chat::__ctor__(v1 + 480);\n
    Chat::__ctor__(v1 + 504);\n
    Chat::__ctor__(v1 + 528);\n
    Chat::__ctor__(v1 + 552);\n
    Chat::__ctor__(v1 + 576);\n
    Chat::__ctor__(v1 + 600);\n
    Chat::__ctor__(v1 + 624);\n
    Chat::__ctor__(v1 + 648);\n
    Chat::__ctor__(v1 + 672);\n
    Chat::__ctor__(v1 + 696);\n
    Chat::__ctor__(v1 + 720);\n
    Chat::__ctor__(v1 + 744);\n
    Chat::__ctor__(v1 + 0x300);\n
    Chat::__ctor__(v1 + 792);\n
    Chat::__ctor__(v1 + 816);\n
    Chat::__ctor__(v1 + 840);\n
    Chat::__ctor__(v1 + 864);\n
    Chat::__ctor__(v1 + 888);\n
    Chat::__ctor__(v1 + 912);\n
    Chat::__ctor__(v1 + 936);\n
    Chat::__ctor__(v1 + 960);\n
    Chat::__ctor__(v1 + 984);\n
    Chat::__ctor__(v1 + 1008);\n
    Chat::__ctor__(v1 + 1032);\n
    Chat::__ctor__(v1 + 1056);\n
    Chat::__ctor__(v1 + 1080);\n
    Chat::__ctor__(v1 + 1104);\n
    Chat::__ctor__(v1 + 1128);\n
    Chat::__ctor__(v1 + 1152);\n
    Chat::__ctor__(v1 + 1176);\n
    Chat::__ctor__(v1 + 1200);\n
    Chat::__ctor__(v1 + 1224);\n
    Chat::__ctor__(v1 + 1248);\n
    Chat::__ctor__(v1 + 1272);\n
    Chat::__ctor__(v1 + 1296);\n
    Chat::__ctor__(v1 + 1320);\n
    Chat::__ctor__(v1 + 1344);\n
    Chat::__ctor__(v1 + 1368);\n
    Chat::__ctor__(v1 + 1392);\n
    Chat::__ctor__(v1 + 1416);\n
    Chat::__ctor__(v1 + 1440);\n
    Chat::__ctor__(v1 + 1464);\n
    Chat::__ctor__(v1 + 1488);\n
    Chat::__ctor__(v1 + 1512);\n
    Chat::__ctor__(v1 + 0x600);\n
    Chat::__ctor__(v1 + 1560);\n
    Chat::__ctor__(v1 + 1584);\n
    Chat::__ctor__(v1 + 1608);\n
    Chat::__ctor__(v1 + 1632);\n
    Chat::__ctor__(v1 + 1656);\n
    Chat::__ctor__(v1 + 1680);\n
    Chat::__ctor__(v1 + 1704);\n
    Chat::__ctor__(v1 + 1728);\n
    Chat::__ctor__(v1 + 1752);\n
    Chat::__ctor__(v1 + 1776);\n
    Chat::__ctor__(v1 + 1800);\n
    Chat::__ctor__(v1 + 1824);\n
    Chat::__ctor__(v1 + 1848);\n
    Chat::__ctor__(v1 + 1872);\n
    Chat::__ctor__(v1 + 1896);\n
    Chat::__ctor__(v1 + 1920);\n
    Chat::__ctor__(v1 + 1944);\n
    Chat::__ctor__(v1 + 1968);\n
    Chat::__ctor__(v1 + 1992);\n
    Chat::__ctor__(v1 + 2016);\n
    Chat::__ctor__(v1 + 2040);\n
    Chat::__ctor__(v1 + 2064);\n
    Chat::__ctor__(v1 + 2088);\n
    Chat::__ctor__(v1 + 2112);\n
    Chat::__ctor__(v1 + 2136);\n
    Chat::__ctor__(v1 + 2160);\n
    Chat::__ctor__(v1 + 2184);\n
    Chat::__ctor__(v1 + 2208);\n
    Chat::__ctor__(v1 + 2232);\n
    Chat::__ctor__(v1 + 2256);\n
    Chat::__ctor__(v1 + 2280);\n
    Chat::__ctor__(v1 + 0x900);\n
    Chat::__ctor__(v1 + 2328);\n
    Chat::__ctor__(v1 + 2352);\n
    a0->field_10 = v1;\n
    a0->field_18 = 0;\n
    a0->field_20 = a1;\n
    return Chat::__ctor__(v1 + 2376);\n
}\n
", "4241189:sub_40b725": null, "4241200:_ZN12Conversation7AddChatE4Chat": "double Conversation::AddChat(long long a0, long long a1, long long a2, long long a3, long long a4, long long a5, char a6, long long a6)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp+0x8]\n
    char v2;  // [bp+0x18]\n
    struct struct_0 **v3;  // rbx\n
    struct struct_0 **v4;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v5;  // rax\n
    struct struct_0 **v6;  // rcx\n
    unsigned long v7;  // rax\n
\n
    v3 = a0;\n
    Chat::__ctor__(&v0);\n
    v4 = a0[1];\n
    if (v4 >= 2 && v4 >= *(a0))\n
    {\n
        Chat::Delete(a0[2]);\n
        v5 = a0[1];\n
        a0 = a0[2];\n
        v3[1] = v5 + 1;\n
        cgc_memmove(a0, a0 + 24, (v5 * 8 - 8) * 3);\n
        v4 = v3[1];\n
    }\n
    v6 = a0[2];\n
    a0[1] = v4 + 1;\n
    v7 = v4 * 3;\n
    v6[2 + v7] = *(&v2);\n
    *(&v6[v7]) = *(&v1);\n
    return *(&v1);\n
}\n
", "4241329:sub_40b7b1": null, "4241344:_ZN12Conversation12ReadMessagesEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long Conversation::ReadMessages(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x28]\n
    struct_0 *v2;  // rbx\n
    char *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    if (!a0->field_8)\n
        return v3;\n
    v2 = a0;\n
    while (true)\n
    {\n
        v3 = Chat::__ctor__(&v0);\n
        if (!*((a0 + 8)))\n
            return v3;\n
        Chat::Delete(*((a0 + 16)));\n
        v4 = *((a0 + 8));\n
        v3 = v4 - 1;\n
        if (v4 >= 2)\n
        {\n
            a0 = *((a0 + 16));\n
            v2->field_8 = v3;\n
            cgc_memmove(a0, a0 + 24, v3 * 8 * 3);\n
            v3 = v2->field_8;\n
            if (!v3)\n
                return v2->field_8;\n
        }\n
        else\n
        {\n
            *((a0 + 8)) = v3;\n
            if (!v3)\n
                return v4 - 1;\n
        }\n
    }\n
}\n
", "4241366:sub_40b7d6": null, "4241465:sub_40b839": null, "4241472:_ZN12Conversation17ClearChatMessagesEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long Conversation::ClearChatMessages(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x28]\n
    struct_0 *v2;  // rbx\n
    char *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    if (!a0->field_8)\n
        return v3;\n
    v2 = a0;\n
    while (true)\n
    {\n
        v3 = Chat::__ctor__(&v0);\n
        if (!*((a0 + 8)))\n
            return v3;\n
        Chat::Delete(*((a0 + 16)));\n
        v4 = *((a0 + 8));\n
        v3 = v4 - 1;\n
        if (v4 >= 2)\n
        {\n
            a0 = *((a0 + 16));\n
            v2->field_8 = v3;\n
            cgc_memmove(a0, a0 + 24, v3 * 8 * 3);\n
            v3 = v2->field_8;\n
            if (!v3)\n
                return v2->field_8;\n
        }\n
        else\n
        {\n
            *((a0 + 8)) = v3;\n
            if (!v3)\n
                return v4 - 1;\n
        }\n
    }\n
}\n
", "4241494:sub_40b856": null, "4241593:sub_40b8b9": null, "4241600:_Z16print_byte_arrayPKct": "long long print_byte_array()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4241601:sub_40b8c1": null, "4241616:main": "int main()\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long long v2;  // rax\n
    unsigned long long v3;  // rax\n
    struct struct_1 **v4;  // rax\n
\n
    Backend::InitDataStores(0x4347c000);\n
    v1 = operator new(40);\n
    BrcPacket::__base_ctor__(v1, cgc_fopen(6, 0), cgc_fopen(3, 1));\n
    while (true)\n
    {\n
        do\n
        {\n
            v2 = BrcPacket::Recv(v1);\n
        } while (v2 == -1);\n
        if (v2 == -2)\n
            break;\n
        BrcPacket::DebugPrintPacket const(v1);\n
        v3 = BrcPacket::protocol_id const(v1);\n
        if (v3 == 2)\n
        {\n
            v4 = CommandProcessor::ServiceCommand(BrcPacket::GetProtocol const(v1));\n
            if (!v4)\n
                continue;\n
            BrcPacket::ClearPacket(v1);\n
            BrcPacket::SetPacket(v1, v4);\n
            if (BrcPacket::Send const(v1) == -1)\n
                continue;\n
            BrcPacket::DebugPrintPacket const(v1);\n
            if (BrcResponse::response_code const(v4) == 1)\n
                break;\n
        }\n
        else if (v3 == 4)\n
        {\n
            CommandProcessor::ServiceChat(BrcPacket::GetProtocol const(v1));\n
        }\n
    }\n
    BrcPacket::__base_dtor__(v1);\n
    operator delete(v1);\n
    return 0;\n
}\n
", "4241870:sub_40b9ce": null, "4241872:_ZN10AdminTasks23RemoteAdminTokenRequestEPcjtPi": "extern unsigned long long _ZN12_GLOBAL__N_18g_secretE;\n
extern struct_0 *g_4110a0;\n
\n
long long AdminTasks::RemoteAdminTokenRequest(unsigned long a0, unsigned long a1, unsigned int *a2, unsigned int *a3)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rbp\n
\n
    v0 = v2;\n
    if (a2 > 0x1000)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v4 = a1;\n
        if (!a1)\n
        {\n
            return 0;\n
        }\n
        else if (!a3)\n
        {\n
            return 0;\n
        }\n
        else\n
        {\n
            if (TokenGenerator::GetTokenLength() == v4)\n
                cgc_memcmp(TokenGenerator::GetToken(), a0, v4);\n
            if (User::CompareName const(g_4110a0->field_0, a0, v4))\n
            {\n
                v3 = *((_ZN12_GLOBAL__N_18g_secretE + a2 * 4));\n
                *(a3) = v3;\n
                *(&v3) = 1;\n
                return v3;\n
            }\n
            return 0;\n
        }\n
    }\n
}\n
", "4242016:_ZN7Backend13GetRandomByteEv": "extern unsigned int _ZN12_GLOBAL__N_15prng1E;\n
extern unsigned int _ZN12_GLOBAL__N_15prng2E;\n
extern unsigned long long _ZN12_GLOBAL__N_18g_secretE;\n
\n
long long Backend::GetRandomByte()\n
{\n
    unsigned long long v1;  // rax\n
\n
    v1 = _ZN12_GLOBAL__N_18g_secretE;\n
    _ZN12_GLOBAL__N_15prng1E = (_ZN12_GLOBAL__N_15prng1E >> 16) + _ZN12_GLOBAL__N_15prng1E * 36969;\n
    _ZN12_GLOBAL__N_15prng2E = (_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000;\n
    *(&v1) = *((_ZN12_GLOBAL__N_18g_secretE + (_ZN12_GLOBAL__N_15prng2E & 4095)));\n
    return v1;\n
}\n
", "4242088:sub_40baa8": null, "4242096:_ZN7Backend14InitDataStoresEi": "extern unsigned long long _ZN12_GLOBAL__N_112g_admin_nameE;\n
extern unsigned long long _ZN12_GLOBAL__N_115RegisteredUsersE;\n
extern unsigned int _ZN12_GLOBAL__N_15prng1E;\n
extern unsigned int _ZN12_GLOBAL__N_15prng2E;\n
extern struct_1 *_ZN12_GLOBAL__N_18g_secretE;\n
extern struct_0 *g_411098;\n
extern unsigned long long g_4110a0;\n
\n
long long Backend::InitDataStores(unsigned int a0[2])\n
{\n
    unsigned long long v1;  // rbx\n
    unsigned long long *v2;  // rax\n
\n
    _ZN12_GLOBAL__N_18g_secretE = &a0[0];\n
    v1 = operator new(208);\n
    User::__base_ctor__(v1, &_ZN12_GLOBAL__N_112g_admin_nameE, 4, &_ZN12_GLOBAL__N_112g_admin_nameE, 4, 1);\n
    v2 = g_411098;\n
    if (g_411098 < _ZN12_GLOBAL__N_115RegisteredUsersE)\n
    {\n
        g_411098 = &g_411098->field_0 + 1;\n
        *((g_4110a0 + v2 * 8)) = v1;\n
    }\n
    _ZN12_GLOBAL__N_15prng1E = _ZN12_GLOBAL__N_18g_secretE->field_0;\n
    _ZN12_GLOBAL__N_15prng2E = _ZN12_GLOBAL__N_18g_secretE->field_4;\n
    return _ZN12_GLOBAL__N_15prng2E;\n
}\n
", "4242219:sub_40bb2b": null, "4242224:_ZN7Backend7AddUserEPKctPt": "extern unsigned long long _ZN12_GLOBAL__N_115RegisteredUsersE;\n
extern struct_0 *g_411098;\n
extern struct_1 *g_4110a0;\n
\n
long long Backend::AddUser(unsigned long long a0, unsigned long a1, unsigned short *a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long v3;  // rbp\n
    unsigned long v4;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // r12\n
    unsigned long long *v6;  // rax\n
    unsigned long v7;  // r14\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (g_411098 >= 2)\n
    {\n
        v4 = 1;\n
        do\n
        {\n
            if (User::CompareName const(*(&(&g_4110a0->padding_0)[v4]), a0, v3))\n
                return 0;\n
            v4 += 1;\n
        } while (g_411098 > v4);\n
    }\n
    v7 = Backend::GeneratePassword(a2);\n
    v5 = operator new(208);\n
    User::__base_ctor__(v5, a0, v3, v7, *(a2), 0);\n
    v6 = g_411098;\n
    if (g_411098 < _ZN12_GLOBAL__N_115RegisteredUsersE)\n
    {\n
        g_411098 = &g_411098->field_0 + 1;\n
        *((&g_4110a0->padding_0[0] + 0x8 * v6)) = v5;\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4242413:sub_40bbed": null, "4242416:_ZN7Backend17CheckIfUserExistsEPKct": "extern unsigned long long g_411098;\n
extern struct_0 *g_4110a0;\n
\n
long long Backend::CheckIfUserExists(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned long long *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v2;  // rax\n
\n
    if (g_411098 < 2)\n
        return 0;\n
    v1 = 1;\n
    while (true)\n
    {\n
        v2 = User::CompareName const(*(&(&g_4110a0->padding_0)[v1]), a0, a1);\n
        if (v2)\n
            return v2;\n
        v1 += 1;\n
        if (g_411098 <= v1)\n
            return v2;\n
    }\n
}\n
", "4242498:sub_40bc42": null, "4242512:_ZN7Backend16GeneratePasswordEPt": "extern unsigned int _ZN12_GLOBAL__N_15prng1E;\n
extern unsigned int _ZN12_GLOBAL__N_15prng2E;\n
extern unsigned long long _ZN12_GLOBAL__N_18g_secretE;\n
\n
long long Backend::GeneratePassword(unsigned short *a0)\n
{\n
    char v1[10];  // rax\n
    unsigned long long v2;  // rcx\n
    unsigned long long v3;  // rdx\n
    unsigned long v4;  // rcx\n
    unsigned long v5;  // rdx\n
    unsigned int v7;  // edx\n
\n
    v1 = operator new[](10);\n
    *(a0) = 10;\n
    v1[0] = *((_ZN12_GLOBAL__N_18g_secretE + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) & 4095)));\n
    v1[1] = *((_ZN12_GLOBAL__N_18g_secretE + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) & 4095)));\n
    v1[2] = *((_ZN12_GLOBAL__N_18g_secretE + (((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) & 4095)));\n
    v1[3] = *((...));\n
    v1[4] = *((...));\n
    v1[5] = *((...));\n
    v1[6] = *((...));\n
    v2 = ...;\n
    v3 = ...;\n
    v1[7] = *((_ZN12_GLOBAL__N_18g_secretE + (v3 & 4095)));\n
    v4 = (v2 >> 16) + v2 * 36969;\n
    v5 = (v3 >> 16) + v3 * 18000;\n
    v1[8] = *((_ZN12_GLOBAL__N_18g_secretE + (v5 & 4095)));\n
    v7 = (v5 >> 16) + v5 * 18000;\n
    v1[9] = *((_ZN12_GLOBAL__N_18g_secretE + (v7 & 4095)));\n
    _ZN12_GLOBAL__N_15prng1E = (v4 >> 16) + v4 * 36969;\n
    _ZN12_GLOBAL__N_15prng2E = v7;\n
    return v1;\n
}\n
", "4242986:sub_40be2a": null, "4242992:_ZN7Backend10DeleteUserEPKctS1_t": "extern unsigned long long g_411098;\n
extern struct_0 *g_4110a0;\n
extern unsigned long long g_4110b8;\n
extern unsigned long long g_4110c0;\n
\n
long long Backend::DeleteUser(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned short v0;  // [bp-0x44], Other Possible Types: unsigned int\n
    unsigned long long v1;  // [bp-0x40]\n
    unsigned long long v2;  // [bp-0x38]\n
    unsigned long long *v4;  // r14, Other Possible Types: unsigned long\n
    unsigned long v5;  // r13, Other Possible Types: unsigned long long\n
    unsigned long v6;  // rbx\n
    unsigned long v7;  // r12, Other Possible Types: unsigned long long\n
    unsigned long long *v8;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v9;  // r14\n
    unsigned long long v10;  // r13\n
    unsigned long v11;  // rax\n
\n
    if (g_411098 < 2)\n
        return 0;\n
    v0 = a3;\n
    v1 = a2;\n
    v4 = 1;\n
    v5 = 0x100000000;\n
    do\n
    {\n
        v6 = *(&(&g_4110a0->padding_0)[v4]);\n
        if (User::CompareName const(v6, a0, a1))\n
        {\n
            if (v4 == -1)\n
                break;\n
            if (!User::VerifyPass const(v6, v1, v0))\n
                break;\n
            if (!([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, Load(addr=0x4110b8<64>, size=8, endness=Iend_LE), 0xffffffff<64>, cc_ndep<8>)))\n
            {\n
                v7 = g_4110b8 - 2;\n
                while (true)\n
                {\n
                    v8 = v7 + 1;\n
                    if (g_4110b8 <= v8)\n
                        v8 = 0;\n
                    v9 = *((g_4110c0 + v8 * 8));\n
                    if (!User::Equals const(Channel::creator(v9), v6))\n
                    {\n
                        Channel::RemoveUserFromChannel(v9, v6);\n
                        Channel::RemoveUserAsAdmin(v9, v6);\n
                        Channel::RemoveBan(v9, v6);\n
                        if (v7 < 0)\n
                            break;\n
                    }\n
                    else\n
                    {\n
                        v1 = User::name(v6);\n
                        v0 = User::name_length(v6);\n
                        v2 = User::pass(v6);\n
                        Backend::DeleteChannel(v1, v0, v2, User::pass_length(v6), Channel::name(v9), Channel::name_length(v9));\n
                        if (v7 < 0)\n
                            break;\n
                    }\n
                    v7 = v7 - 1;\n
                }\n
            }\n
            v10 = v5 >> 32;\n
            if (g_411098 >= v10)\n
            {\n
                if (!g_411098)\n
                    goto LABEL_40c02e;\n
                User::Delete(&(&g_4110a0->padding_0)[v10]);\n
                if (g_411098 >= 2 && g_411098 > v10)\n
                {\n
                    g_411098 = g_411098;\n
                    cgc_memmove(&(&g_4110a0->padding_0)[v10], &(&g_4110a0->padding_0)[v10 + 8], (g_411098 - v10) * 8);\n
                    goto LABEL_40c02e;\n
                }\n
                g_411098 = g_411098 - 1;\n
            }\n
LABEL_40c02e:\n
            v11 = operator delete(v6);\n
            *(&v11) = 1;\n
            return v11;\n
        }\n
        v4 += 1;\n
        v5 += 0x100000000;\n
    } while (g_411098 > v4);\n
}\n
", "4243173:sub_40bee5": null, "4243517:sub_40c03d": null, "4243520:_ZN7Backend13DeleteChannelEPKctS1_tS1_t": "extern unsigned long long g_411098;\n
extern struct_0 *g_4110a0;\n
extern unsigned long long g_4110b8;\n
extern struct_1 *g_4110c0;\n
\n
long long Backend::DeleteChannel(unsigned long long a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned long long *v2;  // r15, Other Possible Types: unsigned long, unsigned int\n
    void* v3;  // r13, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long *v4;  // rbp, Other Possible Types: unsigned long\n
    void* v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v6;  // rax\n
\n
    v0 = a3;\n
    if (g_411098 >= 2)\n
    {\n
        v2 = 1;\n
        while (true)\n
        {\n
            v3 = *(&(&g_4110a0->padding_0)[v2]);\n
            if (User::CompareName const(v3, a0, a1))\n
                break;\n
            v2 += 1;\n
            if (g_411098 <= v2)\n
            {\n
                v2 = -1;\n
                v3 = 0;\n
                break;\n
            }\n
        }\n
        if (!g_4110b8)\n
            goto LABEL_40c10a;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        v2 = -1;\n
        if (!g_4110b8)\n
            goto LABEL_40c10a;\n
    }\n
    v4 = 0;\n
    do\n
    {\n
        v5 = g_4110c0[v4].field_0;\n
        if (Channel::CompareName(v5, a4, a5))\n
        {\n
            if (!v3)\n
                return 0;\n
            goto LABEL_40c128;\n
        }\n
        v4 += 1;\n
    } while (g_4110b8 > v4);\n
LABEL_40c10a:\n
    v5 = 0;\n
    v4 = 4294967295;\n
    if (!v3)\n
        return 0;\n
LABEL_40c128:\n
    if (!v5)\n
    {\n
        return 0;\n
    }\n
    else if (v4 == -1)\n
    {\n
        return 0;\n
    }\n
    else if (v2 == -1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (!(User::VerifyPass const(v3, a2, v0) && User::Equals const(Channel::creator(v5), v3)))\n
            return 0;\n
        Channel::DeleteChannel(v5);\n
        if (g_4110b8 >= v4 && g_4110b8)\n
        {\n
            if (g_4110b8 >= 2 && g_4110b8 > v4)\n
            {\n
                g_4110b8 = g_4110b8;\n
                cgc_memmove(&g_4110c0[v4], &g_4110c0[v4 + 1], (g_4110b8 - v4) * 8);\n
                goto LABEL_40c1cf;\n
            }\n
            g_4110b8 = g_4110b8 - 1;\n
        }\n
LABEL_40c1cf:\n
        v6 = operator delete(v5);\n
        *(&v6) = 1;\n
        return v6;\n
    }\n
}\n
", "4243944:sub_40c1e8": null, "4243952:_ZN7Backend11JoinChannelEPKctS1_tS1_t": "extern unsigned long long _ZN12_GLOBAL__N_118RegisteredChannelsE;\n
extern unsigned long long g_411098;\n
extern struct_2 *g_4110a0;\n
extern struct_0 *g_4110b8;\n
extern struct_1 *g_4110c0;\n
\n
long long Backend::JoinChannel(unsigned long long a0, unsigned long a1, unsigned long long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v3;  // r12d\n
    unsigned long long *v4;  // rbp, Other Possible Types: unsigned long\n
    unsigned long long *v5;  // rbp, Other Possible Types: unsigned long\n
    void* v6;  // rbx, Other Possible Types: unsigned long\n
    void* v7;  // r15, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v8;  // rax\n
    void* v9;  // rbp, Other Possible Types: unsigned long\n
    void* v10;  // rbx\n
    unsigned long long *v11;  // rcx\n
\n
    v0 = a5;\n
    v3 = -1;\n
    v1 = a3;\n
    if (g_411098 >= 2)\n
    {\n
        v4 = 1;\n
        do\n
        {\n
            v7 = *(&(&g_4110a0->padding_0)[v4]);\n
            if (User::CompareName const(v7, a0, a1))\n
            {\n
                v3 = v4;\n
                if (!g_4110b8)\n
                    goto LABEL_40c2aa;\n
                goto LABEL_40c276;\n
            }\n
            v4 += 1;\n
        } while (g_411098 > v4);\n
        goto LABEL_40c2aa;\n
    }\n
    v7 = 0;\n
    if (!g_4110b8)\n
    {\n
LABEL_40c2aa:\n
        v6 = 0;\n
    }\n
    else\n
    {\n
LABEL_40c276:\n
        v5 = 0;\n
        while (true)\n
        {\n
            v6 = g_4110c0[v5].field_0;\n
            if (Channel::CompareName(v6, a4, v0))\n
                break;\n
            v5 += 1;\n
            if (g_4110b8 <= v5)\n
                goto LABEL_40c2aa;\n
        }\n
    }\n
    if (!v7)\n
    {\n
        return 0;\n
    }\n
    else if (v3 == -1)\n
    {\n
        return 0;\n
    }\n
    else if (!User::VerifyPass const(v7, a2, v1))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        if (v6)\n
            return Channel::AddUserToChannel(v6, v7);\n
        if (!a4)\n
            return 0;\n
        if (!v0)\n
            return 0;\n
        if (g_4110b8)\n
        {\n
            v9 = 0;\n
            while (!Channel::CompareName(g_4110c0[v9].field_0, a4, v0))\n
            {\n
                v9 += 1;\n
                if (g_4110b8 <= v9)\n
                    goto LABEL_40c356;\n
            }\n
        }\n
LABEL_40c356:\n
        v10 = operator new(176);\n
        v8 = Channel::__base_ctor__(v10, a4, v0, v7);\n
        v11 = g_4110b8;\n
        *(&v8) = 1;\n
        if (g_4110b8 < _ZN12_GLOBAL__N_118RegisteredChannelsE)\n
        {\n
            g_4110b8 = &g_4110b8->field_0 + 1;\n
            *((&g_4110c0->field_0 + 0x8 * v11)) = v10;\n
            return v8;\n
        }\n
        return v8;\n
    }\n
}\n
", "4244401:sub_40c3b1": null, "4244416:_ZN7Backend20CheckIfChannelExistsEPKct": "extern unsigned long long g_4110b8;\n
extern struct_0 *g_4110c0;\n
\n
long long Backend::CheckIfChannelExists(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long *v3;  // rbp, Other Possible Types: unsigned long\n
    void* v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!g_4110b8)\n
    {\n
LABEL_40c40a:\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        while (true)\n
        {\n
            v4 = g_4110c0[v3].field_0;\n
            v2 = Channel::CompareName(v4, a0, a1);\n
            if (v2)\n
                break;\n
            v3 += 1;\n
            if (g_4110b8 <= v3)\n
                goto LABEL_40c40a;\n
        }\n
    }\n
    *(&v2) = v4;\n
    return v2;\n
}\n
", "4244509:sub_40c41d": null, "4244512:_ZN7Backend24CheckIfUserJoinedChannelEPKctS1_tS1_t": "extern unsigned long long g_411098;\n
extern struct_1 *g_4110a0;\n
extern unsigned long long g_4110b8;\n
extern struct_0 *g_4110c0;\n
\n
long long Backend::CheckIfUserJoinedChannel(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // r15, Other Possible Types: unsigned long\n
    unsigned long long *v5;  // r15, Other Possible Types: unsigned long\n
    unsigned int v6;  // ecx\n
    void* v7;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long *v8;  // rbx, Other Possible Types: unsigned long\n
    char v9;  // al\n
    void* v10;  // rbp, Other Possible Types: unsigned long\n
\n
    v0 = v3;\n
    v1 = a3;\n
    v4 = a2;\n
    v6 = -1;\n
    if (g_411098 >= 2)\n
    {\n
        v0 = a5;\n
        v5 = 1;\n
        do\n
        {\n
            v7 = *(&(&g_4110a0->padding_0)[v5]);\n
            if (User::CompareName const(v7, a0, a1))\n
            {\n
                v6 = v5;\n
                v4 = a2;\n
                goto LABEL_40c4fe;\n
            }\n
            v5 += 1;\n
        } while (g_411098 > v5);\n
        v7 = 0;\n
        v4 = a2;\n
        v6 = -1;\n
LABEL_40c4fe:\n
        a5 = v0;\n
        if (!g_4110b8)\n
            goto LABEL_40c50c;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        if (!g_4110b8)\n
        {\n
LABEL_40c50c:\n
            v9 = 0;\n
            v10 = 0;\n
            if (!v7)\n
                return 0;\n
LABEL_40c515:\n
            if (!v10)\n
            {\n
                return 0;\n
            }\n
            else if (!v9)\n
            {\n
                return 0;\n
            }\n
            else if (v6 == -1)\n
            {\n
                return 0;\n
            }\n
            else if (!User::VerifyPass const(v7, v4, v1))\n
            {\n
                return 0;\n
            }\n
            else\n
            {\n
                return Channel::FindUser(v10, v7);\n
            }\n
        }\n
    }\n
    v0 = v6;\n
    v8 = 0;\n
    do\n
    {\n
        v10 = g_4110c0[v8].field_0;\n
        if (Channel::CompareName(v10, a4, a5))\n
        {\n
            v9 = v8 != -1;\n
            v6 = v0;\n
            if (!v7)\n
                return 0;\n
            goto LABEL_40c515;\n
        }\n
        v8 += 1;\n
    } while (g_4110b8 > v8);\n
    v9 = 0;\n
    v10 = 0;\n
    v6 = v0;\n
    if (!v7)\n
        return 0;\n
    goto LABEL_40c515;\n
}\n
", "4244833:sub_40c561": null, "4244848:_ZN7Backend15GetChannelUsersEPKctPt": "long long Backend::GetChannelUsers()\n
{\n
    return 0;\n
}\n
", "4244851:sub_40c573": null, "4244864:_ZN7Backend11PartChannelEPKctS1_tS1_t": "extern unsigned long long g_411098;\n
extern struct_0 *g_4110a0;\n
extern unsigned long long g_4110b8;\n
extern struct_1 *g_4110c0;\n
\n
long long Backend::PartChannel(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // r15, Other Possible Types: unsigned long\n
    unsigned long long *v5;  // r15, Other Possible Types: unsigned long\n
    unsigned int v6;  // ecx\n
    void* v7;  // r12, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long *v8;  // rbx, Other Possible Types: unsigned long\n
    char v9;  // al\n
    void* v10;  // rbp, Other Possible Types: unsigned long\n
\n
    v0 = v3;\n
    v1 = a3;\n
    v4 = a2;\n
    v6 = -1;\n
    if (g_411098 >= 2)\n
    {\n
        v0 = a5;\n
        v5 = 1;\n
        do\n
        {\n
            v7 = *(&(&g_4110a0->padding_0)[v5]);\n
            if (User::CompareName const(v7, a0, a1))\n
            {\n
                v6 = v5;\n
                v4 = a2;\n
                goto LABEL_40c65e;\n
            }\n
            v5 += 1;\n
        } while (g_411098 > v5);\n
        v7 = 0;\n
        v4 = a2;\n
        v6 = -1;\n
LABEL_40c65e:\n
        a5 = v0;\n
        if (!g_4110b8)\n
            goto LABEL_40c66c;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        if (!g_4110b8)\n
        {\n
LABEL_40c66c:\n
            v9 = 0;\n
            v10 = 0;\n
            if (!v7)\n
                return 0;\n
LABEL_40c675:\n
            if (!v10)\n
            {\n
                return 0;\n
            }\n
            else if (!v9)\n
            {\n
                return 0;\n
            }\n
            else if (v6 == -1)\n
            {\n
                return 0;\n
            }\n
            else if (!User::VerifyPass const(v7, v4, v1))\n
            {\n
                return 0;\n
            }\n
            else\n
            {\n
                return Channel::RemoveUserFromChannel(v10, v7);\n
            }\n
        }\n
    }\n
    v0 = v6;\n
    v8 = 0;\n
    do\n
    {\n
        v10 = g_4110c0[v8].field_0;\n
        if (Channel::CompareName(v10, a4, a5))\n
        {\n
            v9 = v8 != -1;\n
            v6 = v0;\n
            if (!v7)\n
                return 0;\n
            goto LABEL_40c675;\n
        }\n
        v8 += 1;\n
    } while (g_4110b8 > v8);\n
    v9 = 0;\n
    v10 = 0;\n
    v6 = v0;\n
    if (!v7)\n
        return 0;\n
    goto LABEL_40c675;\n
}\n
", "4245185:sub_40c6c1": null, "4245200:_ZN7Backend14VerifyPasswordEPKctS1_t": "extern unsigned long long g_411098;\n
extern struct_0 *g_4110a0;\n
\n
long long Backend::VerifyPassword(unsigned long long a0, unsigned long a1, unsigned long long a2, unsigned long long a3)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long long *v3;  // rbx, Other Possible Types: unsigned long\n
\n
    v0 = v2;\n
    if (!a0)\n
    {\n
        return 0;\n
    }\n
    else if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (!a2)\n
    {\n
        return 0;\n
    }\n
    else if (!a3)\n
    {\n
        return 0;\n
    }\n
    else if (g_411098 < 2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        while (!User::CompareName const(*(&(&g_4110a0->padding_0)[v3]), a0, a1))\n
        {\n
            v3 += 1;\n
            if (g_411098 <= v3)\n
                return 0;\n
        }\n
        if (v3 != -1)\n
            return User::VerifyPass const(*(&(&g_4110a0->padding_0)[v3]), a2, a3);\n
        return 0;\n
    }\n
}\n
", "4245359:sub_40c76f": null, "4245360:_ZN7Backend15DebugPrintUsersEv": "extern unsigned long long g_411098;\n
extern struct_0 *g_4110a0;\n
\n
long long Backend::DebugPrintUsers()\n
{\n
    unsigned long long *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v2;  // r15\n
    unsigned long long v3;  // rax\n
\n
    if (!g_411098)\n
        return v3;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = g_4110a0[v1].field_0;\n
        User::name(v2);\n
        User::name_length(v2);\n
        print_byte_array();\n
        User::pass(v2);\n
        User::pass_length(v2);\n
        v3 = print_byte_array();\n
        v1 += 1;\n
    } while (g_411098 > v1);\n
    return v3;\n
}\n
", "4245482:sub_40c7ea": null, "4245488:_ZN7Backend18DebugPrintChannelsEv": "extern unsigned long long g_4110b8;\n
extern struct_0 *g_4110c0;\n
\n
long long Backend::DebugPrintChannels()\n
{\n
    unsigned long long *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15\n
    unsigned long long v3;  // rax\n
\n
    if (!g_4110b8)\n
        return v3;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = g_4110c0[v1].field_0;\n
        Channel::name(v2);\n
        Channel::name_length(v2);\n
        v3 = print_byte_array();\n
        v1 += 1;\n
    } while (g_4110b8 > v1);\n
    return v3;\n
}\n
", "4245580:sub_40c84c": null, "4245584:_ZN4UserC2EPKctS1_tb": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
    char padding_42[64];\n
    unsigned short field_82;\n
    char field_84;\n
    char padding_85[3];\n
    uint128_t field_88;\n
    unsigned long long field_98;\n
    uint128_t field_a0;\n
    unsigned long long field_b0;\n
    uint128_t field_b8;\n
    unsigned long long field_c8;\n
} struct_0;\n
\n
long long User::__base_ctor__(struct_0 *a0, unsigned int a1, unsigned long a2, unsigned int a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rbp, Other Possible Types: unsigned long long\n
    char *v4;  // r14\n
\n
    v0 = v2;\n
    v3 = a2;\n
    *(&(&a0->padding_85)[1]) = 128;\n
    *((&a0->field_88 + 8)) = operator new[](0x400);\n
    *(&a0->field_98) = 100;\n
    *(&a0->field_a0) = operator new[](800);\n
    *((&a0->field_a0 + 8)) = 100;\n
    (&a0->field_b0)[1] = operator new[](800);\n
    if ([D] amd64g_calculate_condition(0x3<64>, 0x6<64>, Conv(16->64, _bp<2>), 0x40<64>, cc_ndep<8>))\n
        v3 = 64;\n
    a0->field_40 = v3;\n
    cgc_memcpy(a0, a1, v3);\n
    v4 = ([D] amd64g_calculate_condition(0x2<64>, 0x6<64>, r8<8>, 0x40<64>, cc_ndep<8>) ? 64 : a4);\n
    a0->field_82 = v4;\n
    cgc_memcpy(&a0->padding_42, a3, v4);\n
    a0->field_84 = a5;\n
    return a5;\n
}\n
", "4245796:sub_40c924": null, "4245808:_ZN4User7IsAdminEv": "typedef struct struct_0 {\n
    char padding_0[132];\n
    char field_84;\n
} struct_0;\n
\n
char User::IsAdmin(struct_0 *a0)\n
{\n
    return a0->field_84;\n
}\n
", "4245815:sub_40c937": null, "4245824:_ZNK4User6EqualsEPS_": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
long long User::Equals const(struct_0 *a0, struct_0 *a1)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rdx\n
    unsigned long long v4;  // rax\n
\n
    v0 = v2;\n
    v3 = a0->field_40;\n
    if (v3 == a1->field_40)\n
    {\n
        v4 = cgc_memcmp(a0, a1, v3);\n
        *(&v4) = !v4;\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4245851:sub_40c95b": null, "4245856:_ZN4User11name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
long long User::name_length(struct_0 *a0)\n
{\n
    return a0->field_40;\n
}\n
", "4245861:sub_40c965": null, "4245872:_ZN4User4nameEv": "long long User::name(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4245876:sub_40c974": null, "4245888:_ZNK4User11CompareNameEPKct": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
long long User::CompareName const(struct_0 *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
\n
    v0 = v2;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (a0->field_40 != a2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v3 = cgc_memcmp(a0, a1, a2);\n
        *(&v3) = !v3;\n
        return v3;\n
    }\n
}\n
", "4245917:sub_40c99d": null, "4245920:_ZNK4User10VerifyPassEPKct": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
} struct_0;\n
\n
long long User::VerifyPass const(struct_0 *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
    unsigned long v3;  // rax\n
\n
    v0 = v2;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (a0->field_82 != a2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v3 = cgc_memcmp(&a0->padding_0[66], a1, a2);\n
        *(&v3) = !v3;\n
        return v3;\n
    }\n
}\n
", "4245956:sub_40c9c4": null, "4245968:_ZN4User9BlockUserEPS_": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[184];\n
    unsigned long long field_b8;\n
    struct struct_2 *field_c0;\n
    struct struct_2 *field_c8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long User::BlockUser(struct_1 *a0, struct_0 *a1)\n
{\n
    struct_0 *v1;  // r14\n
    struct struct_0 **v2;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v3;  // rsi\n
    unsigned long v4;  // rdx\n
    struct struct_0 **v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
\n
    v1 = a1;\n
    v2 = a0->field_c0;\n
    if (!v2)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v3 = a0->field_c8[v5].field_0;\n
            v4 = v1->field_40;\n
            if (v4 == v3->field_40)\n
            {\n
                v2 = cgc_memcmp(v1, v3, v4);\n
                if (!v2)\n
                    goto LABEL_40ca45;\n
                v2 = a0->field_c0;\n
            }\n
            v5 += 1;\n
        } while (v2 > v5);\n
    }\n
    if (v2 < a0->field_b8)\n
    {\n
        v6 = a0->field_c8;\n
        a0->field_c0 = v2 + 1;\n
        *((v6 + v2 * 8)) = v1;\n
LABEL_40ca45:\n
        *(&v2) = 1;\n
        return v2;\n
    }\n
    return 0;\n
}\n
", "4245995:sub_40c9eb": null, "4246101:sub_40ca55": null, "4246112:_ZN4User11UnblockUserEPS_": "typedef struct struct_1 {\n
    char padding_0[192];\n
    unsigned long long field_c0;\n
    struct struct_2 *field_c8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long User::UnblockUser(struct_1 *a0, struct_0 *a1)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v2;  // rbp, Other Possible Types: unsigned long\n
    struct_0 *v4;  // rsi\n
    unsigned long v5;  // rdx\n
    struct struct_0 **v6;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    struct struct_0 **v9;  // rsi\n
    char *v10;  // rdi\n
    unsigned long v11;  // rsi\n
\n
    v1 = a0->field_c0;\n
    if (!v1)\n
        return 0;\n
    v2 = a1;\n
    v6 = 0;\n
    do\n
    {\n
        v4 = a0->field_c8[v6].field_0;\n
        v5 = v2->field_40;\n
        if (v5 == v4->field_40)\n
        {\n
            if (cgc_memcmp(v2, v4, v5))\n
            {\n
                v1 = a0->field_c0;\n
            }\n
            else\n
            {\n
                v7 = a0->field_c0;\n
                *(&v2) = 1;\n
                if (v7 < v6)\n
                {\n
                    return v2;\n
                }\n
                else if (!v7)\n
                {\n
                    return v2;\n
                }\n
                else\n
                {\n
                    v8 = v7 - 1;\n
                    if (v7 >= 2 && v8 > v6)\n
                    {\n
                        v9 = a0->field_c8;\n
                        v10 = &v9[v6];\n
                        v11 = &v9[v6 + 1];\n
                        a0->field_c0 = v8;\n
                        cgc_memmove(v10, v11, (v8 - v6) * 8);\n
                        return v2;\n
                    }\n
                    a0->field_c0 = v8;\n
                    return v2;\n
                }\n
            }\n
        }\n
        v6 += 1;\n
    } while (v1 > v6);\n
}\n
", "4246138:sub_40ca7a": null, "4246290:sub_40cb12": null, "4246304:_ZN4User6DeleteEPPS_": "typedef struct struct_0 {\n
    char padding_0[136];\n
    uint128_t field_88;\n
    struct struct_1 *field_98;\n
    uint128_t field_a0;\n
    struct struct_1 *field_b0;\n
    uint128_t field_b8;\n
    unsigned int field_c8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    void* field_0;\n
} struct_1;\n
\n
long long User::Delete(struct struct_2 **a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v3;  // r14\n
    void* *v4;  // rbx, Other Possible Types: unsigned long\n
    void* *v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long *v6;  // rdi\n
    unsigned long long *v7;  // rdi\n
\n
    v0 = v2;\n
    v3 = *(a0);\n
    if (v3->field_88)\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v2 = Conversation::ClearChatMessages(*((*((&v3->field_88 + 8)) + v4 * 8)));\n
            v4 += 1;\n
        } while (v3->field_88 > v4);\n
    }\n
    if ((&v3->field_98)[1])\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2 = Conversation::ClearChatMessages(*((v3->field_a0 + v5 * 8)));\n
            v5 += 1;\n
        } while ((&v3->field_98)[1] > v5);\n
    }\n
    *(&(&v3->padding_0)[1]) = 0;\n
    v6 = *((&v3->field_88 + 8));\n
    if (v6)\n
        v2 = operator delete[](v6);\n
    *(&v3->field_98) = 0;\n
    v7 = v3->field_a0;\n
    if (v7)\n
        v2 = operator delete[](v7);\n
    *((&v3->field_a0 + 8)) = 0;\n
    if ((&v3->field_b0)[1])\n
        return operator delete[]((&v3->field_b0)[1]);\n
    return v2;\n
}\n
", "4246508:sub_40cbec": null, "4246512:_ZN4User22AddChannelConversationEP12Conversation": "typedef struct struct_0 {\n
    char padding_0[136];\n
    unsigned long long field_88;\n
    struct struct_1 *field_90;\n
    struct struct_1 *field_98;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long User::AddChannelConversation(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    unsigned long long *v2;  // rcx\n
    unsigned long v3;  // r8\n
\n
    v1 = a0->field_88;\n
    v2 = a0->field_90;\n
    if (v2 < v1)\n
    {\n
        v3 = a0->field_98;\n
        a0->field_90 = v2 + 1;\n
        *((v3 + v2 * 8)) = a1;\n
    }\n
    *(&v1) = v2 < v1;\n
    return v1;\n
}\n
", "4246560:_ZN4User19AddUserConversationEP12Conversation": "typedef struct struct_0 {\n
    char padding_0[160];\n
    unsigned long long field_a0;\n
    struct struct_1 *field_a8;\n
    struct struct_1 *field_b0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long User::AddUserConversation(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    unsigned long long *v2;  // rcx\n
    unsigned long v3;  // r8\n
\n
    v1 = a0->field_a0;\n
    v2 = a0->field_a8;\n
    if (v2 < v1)\n
    {\n
        v3 = a0->field_b0;\n
        a0->field_a8 = v2 + 1;\n
        *((v3 + v2 * 8)) = a1;\n
    }\n
    *(&v1) = v2 < v1;\n
    return v1;\n
}\n
", "4246608:_ZN4User8set_nameEPKct": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
long long User::set_name(struct_0 *a0, unsigned int a1, unsigned long a2)\n
{\n
    a0->field_40 = 64;\n
    return cgc_memcpy(a0, a1, 0x40);\n
}\n
", "4246629:sub_40cc65": null, "4246640:_ZN4User4passEv": "long long User::pass(unsigned long a0)\n
{\n
    return a0 + 66;\n
}\n
", "4246645:sub_40cc75": null, "4246656:_ZN4User8set_passEPKct": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
} struct_0;\n
\n
long long User::set_pass(struct_0 *a0, unsigned int a1, unsigned long a2)\n
{\n
    a0->field_82 = 64;\n
    return cgc_memcpy(&a0->padding_0[66], a1, 0x40);\n
}\n
", "4246684:sub_40cc9c": null, "4246688:_ZN4User11pass_lengthEv": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
} struct_0;\n
\n
long long User::pass_length(struct_0 *a0)\n
{\n
    return a0->field_82;\n
}\n
", "4246696:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_receive": null, "5242904:cgc_allocate": null, "5242912:cgc__terminate": null, "5242920:_ZdlPv": null, "5242928:_Znwm": null, "5242936:cgc_deallocate": null, "5242944:_ZdaPv": null, "5242952:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}