{"4202496:_init": "extern struct_0 *g_406b78;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406b78;\n
    if (g_406b78)\n
        v1 = g_406b78();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_406b98;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406b98;\n
    goto *(4221856);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202576:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202624:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4221832);\n
}\n
", "4202640:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202677:sub_4020b5": null, "4202678:sub_4020b6": null, "4202688:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406b70;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202729:sub_4020e9": null, "4202736:register_tm_clones": "extern unsigned long long g_406b80;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202793:sub_402129": null, "4202800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406b88;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406b88)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202853:sub_402165": null, "4202857:sub_402169": null, "4202864:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202873:sub_402179": null, "4202880:cgc_list_create_dup": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_list_create_dup()\n
{\n
    unsigned long long v0[3];  // [bp-0x28]\n
    unsigned long long v1[3];  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v2 = 0;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = cgc_node_create(0);\n
    v0[0] = cgc_node_create(0);\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[1] = 0;\n
    v0[2] = v1;\n
    v2->field_0 = v1;\n
    v2->field_8 = v0;\n
    v2->field_10 = 0;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4203063:sub_402237": null, "4203072:cgc_node_create": "long long cgc_node_create(unsigned long long a0)\n
{\n
    unsigned long long v0[3];  // [bp-0x20]\n
    unsigned long long v1[3];  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v0[0] = 0;\n
    if (cgc_allocate(a0, v3, v4))\n
    {\n
        v1[0] = 0;\n
        return v1;\n
    }\n
    v0[0] = a0;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4203186:sub_4022b2": null, "4203200:cgc_list_append": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_list_append(struct_2 *a0, unsigned long long a1[3])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    v0 = 0;\n
    a1[1] = a0->field_8;\n
    a1[2] = a0->field_8->field_10;\n
    a0->field_8->field_10->field_8 = a1;\n
    a0->field_8->field_10 = &a1[0];\n
    a0->field_10 = a0->field_10 + 1;\n
    return v0;\n
}\n
", "4203309:sub_40232d": null, "4203312:cgc_list_insert_sort": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_0 *field_8;\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned long long field_10;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_list_insert_sort(struct_3 *a0, struct_5 *a1, struct struct_4 **a2)\n
{\n
    struct_1 *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x24]\n
    struct struct_4 **v2;  // [bp-0x20]\n
    struct_3 *v3;  // [bp-0x10]\n
    struct_3 *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = 0;\n
    if (a0->field_0->field_8 == v3->field_8)\n
    {\n
        a0->field_0->field_8 = &a1->padding_0;\n
        a0->field_8->field_10 = a1;\n
        a1->field_8 = a0->field_8;\n
        a1->field_10 = a0->field_0;\n
    }\n
    else if (v2(a1, a0->field_0->field_8) < 0)\n
    {\n
        a0->field_0->field_8->field_10 = a1;\n
        a1->field_8 = &a0->field_0->field_8->padding_0;\n
        a1->field_10 = a0->field_0;\n
        a0->field_0->field_8 = &a1->padding_0;\n
    }\n
    else\n
    {\n
        for (v0 = a0->field_0->field_8; v0 != a0->field_8; v0 = *((v0 + 8)))\n
        {\n
            if (*((v0 + 8)) == a0->field_8)\n
            {\n
LABEL_402460:\n
                a1->field_8 = *((v0 + 8));\n
                a1->field_10 = v0;\n
                a1->field_8->field_10 = a1;\n
                *((v0 + 8)) = a1;\n
                break;\n
            }\n
            else if (v2(a1, *((v0 + 8))) < 0)\n
            {\n
                goto LABEL_402460;\n
            }\n
        }\n
    }\n
    v5 = a0;\n
    v5->field_10 = v5->field_10 + 1;\n
    return v1;\n
}\n
", "4203726:sub_4024ce": null, "4203728:cgc_get_list_head": "long long cgc_get_list_head(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4203745:sub_4024e1": null, "4203760:cgc_get_list_tail": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_get_list_tail(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4203778:sub_402502": null, "4203792:cgc_get_first_node": "long long cgc_get_first_node(struct struct_0 **a0)\n
{\n
    return *(a0)->field_8;\n
}\n
", "4203813:sub_402525": null, "4203824:cgc_get_last_node": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_get_last_node(struct_1 *a0)\n
{\n
    return a0->field_8->field_10;\n
}\n
", "4203846:sub_402546": null, "4203856:cgc_rand": "long long cgc_rand(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
    unsigned long long v4;  // rdx\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    return cgc_random(a0, a1, v4);\n
}\n
", "4203903:sub_40257f": null, "4203904:cgc_send": "long long cgc_send(unsigned long long a0, unsigned long long a1)\n
{\n
    if (cgc_transmit_all(1, a0, a1))\n
    {\n
        cgc__terminate(1);\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4203965:sub_4025bd": null, "4203968:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (!a2)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v0 = cgc_transmit(a0, a1, a2, v6);\n
            if (v0)\n
            {\n
                v4 = 3;\n
                return v4;\n
            }\n
            v2 = v1 + v2;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204154:sub_40267a": null, "4204160:cgc_recv_all": "long long cgc_recv_all(unsigned long long a0, unsigned long long a1)\n
{\n
    return cgc_read_all(0, a0, a1);\n
}\n
", "4204199:sub_4026a7": null, "4204208:cgc_read_all": "long long cgc_read_all(unsigned long long a0, char *a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1d]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long v8;  // rcx\n
\n
    v4 = a0;\n
    v3 = a2;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
            return v1;\n
        if (cgc_receive(a0, a1, a2, rcx<8>))\n
            break;\n
        if (!*(&v0))\n
            break;\n
        v8 = v1;\n
        v1 = v8 + 1;\n
        a1[v8] = v2;\n
        v3 -= 1;\n
    }\n
    return v1;\n
}\n
", "4204335:sub_40272f": null, "4204336:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v3;  // eax\n
    char *v4;  // rax\n
\n
    v1 = a2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a1;\n
    }\n
    return a0;\n
}\n
", "4204411:sub_40277b": null, "4204416:cgc_do_int_mean": "typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_mean(struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x1c]\n
    struct_0 *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v6;  // eax\n
\n
    v4 = cgc_get_first_node(a0);\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = *(v4);\n
        v3 = *(v2) + v3;\n
        v4 = *((v4 + 8));\n
    }\n
    v1 = 0;\n
    if (a0->field_10 > 0)\n
    {\n
        v6 = v3;\n
        v1 = (v6 >> 31 CONCAT v6) /m a0->field_10;\n
    }\n
    return cgc_send(&v1, 4);\n
}\n
", "4204576:cgc_do_int_median": "typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long cgc_do_int_median(struct_3 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x50]\n
    char v1;  // [bp-0x41]\n
    unsigned int *v2;  // [bp-0x40]\n
    unsigned int *v3;  // [bp-0x38]\n
    unsigned int *v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    struct_1 *v9;  // [bp-0x18], Other Possible Types: unsigned long\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned int v13;  // eax\n
\n
    v12 = &v10;\n
    v9 = cgc_get_first_node(a0);\n
    v8 = a0->field_10 >> 1;\n
    while (true)\n
    {\n
        v0 = v9;\n
        v1 = 0;\n
        if (v0 != cgc_get_list_tail(a0))\n
            v1 = v8;\n
        if (!(v1 & 1))\n
            break;\n
        v9 = *((v9 + 8));\n
        v8 -= 1;\n
    }\n
    v7 = 0;\n
    if ((a0->field_10 & 1))\n
    {\n
        v2 = *(v9);\n
        v7 = *(v2);\n
        return cgc_send(&v7, 4);\n
    }\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = *(v9);\n
    v6 = *(v4);\n
    v3 = *(*((v9 + 16)));\n
    v5 = *(v3);\n
    v13 = v6 + v5;\n
    v7 = (v13 >> 31 CONCAT v13) /m 2;\n
    return cgc_send(&v7, 4);\n
}\n
", "4204850:sub_402932": null, "4204864:cgc_do_int_mode": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_mode(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x40]\n
    unsigned int *v2;  // [bp-0x38]\n
    unsigned int *v3;  // [bp-0x30]\n
    struct_0 *v4;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    struct_0 *v10;  // rax, Other Possible Types: unsigned long\n
\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 == cgc_get_list_tail(a0))\n
            break;\n
        v3 = &v4->field_0->field_0;\n
        if (v5 != *(v3))\n
        {\n
            v5 = *(v3);\n
            v6 = 1;\n
        }\n
        else\n
        {\n
            v6 += 1;\n
        }\n
        if (v6 > v8)\n
        {\n
            v8 = v6;\n
            v7 = 1;\n
        }\n
        else if (v6 == v8)\n
        {\n
            v7 += 1;\n
        }\n
        v4 = *((v4 + 8));\n
    }\n
    if (v8 <= 1)\n
    {\n
        v8 = 0;\n
        v10 = cgc_send(&v8, 4);\n
        return v10;\n
    }\n
    cgc_send(&v7, 4);\n
    v4 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v4;\n
        v10 = v0;\n
        if (v10 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = *(v4);\n
        if (v5 != *(v2))\n
        {\n
            v5 = *(v2);\n
            v6 = 1;\n
        }\n
        else\n
        {\n
            v6 += 1;\n
        }\n
        if (v6 == v8)\n
            cgc_send(&v5, 4);\n
        v4 = *((v4 + 8));\n
    }\n
    return v0;\n
}\n
", "4205285:sub_402ae5": null, "4205296:cgc_do_int_range": "long long cgc_do_int_range(struct struct_0 **a0)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    unsigned int *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct struct_0 **v3;  // [bp-0x20]\n
    struct struct_0 **v4;  // [bp-0x18]\n
\n
    v4 = cgc_get_first_node(a0);\n
    v3 = cgc_get_last_node(a0);\n
    v2 = 0;\n
    v1 = &*(v3)->field_0;\n
    v2 = *(v1);\n
    v0 = &*(v4)->field_0;\n
    v2 -= *(v0);\n
    return cgc_send(&v2, 4);\n
}\n
", "4205406:sub_402b5e": null, "4205408:cgc_do_int_sum": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_sum(void* a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        v2 = *(v1) + v2;\n
        v3 = *((v3 + 8));\n
    }\n
    return cgc_send(&v2, 4);\n
}\n
", "4205533:sub_402bdd": null, "4205536:cgc_do_int_product": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_product(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 1;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        v2 *= *(v1);\n
        v3 = *((v3 + 8));\n
    }\n
    return cgc_send(&v2, 4);\n
}\n
", "4205662:sub_402c5e": null, "4205664:cgc_do_int_min": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_min(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 2147483647;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        if (*(v1) < v2)\n
            v2 = *(v1);\n
        v3 = v3->field_8;\n
    }\n
    return cgc_send(&v2, 4);\n
}\n
", "4205801:sub_402ce9": null, "4205808:cgc_do_int_max": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_max(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 2147483650;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        if (v2 < *(v1))\n
            v2 = *(v1);\n
        v3 = v3->field_8;\n
    }\n
    return cgc_send(&v2, 4);\n
}\n
", "4205945:sub_402d79": null, "4205952:cgc_do_int_sort": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc_do_int_sort(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v2);\n
        cgc_send(v1, 4);\n
        v2 = *((v2 + 8));\n
    }\n
    return v0;\n
}\n
", "4206058:sub_402dea": null, "4206064:cgc_do_int_rsort": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_do_int_rsort(unsigned long long *a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = cgc_get_last_node(a0);\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 == cgc_get_list_head(a0))\n
            break;\n
        v1 = *(v2);\n
        cgc_send(v1, 4);\n
        v2 = *((v2 + 16));\n
    }\n
    return v0;\n
}\n
", "4206170:sub_402e5a": null, "4206176:cgc_do_int_odds": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_odds(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned int *v2;  // [bp-0x30]\n
    unsigned int *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    struct_0 *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned int v10;  // eax\n
\n
    v5 = cgc_get_first_node(a0);\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 == cgc_get_list_tail(a0))\n
            break;\n
        v3 = *(v5);\n
        v7 = *(v3);\n
        if ((v7 >> 31 CONCAT v7) /m 2 >> 32)\n
            v4 += 1;\n
        v5 = v5->field_8;\n
    }\n
    v9 = cgc_send(&v4, 4);\n
    if (v4 <= 0)\n
        return v9;\n
    v5 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v5;\n
        v9 = v0;\n
        if (v9 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = &v5->field_0->field_0;\n
        v10 = *(v2);\n
        if ((v10 >> 31 CONCAT v10) /m 2 >> 32)\n
            cgc_send(v2, 4);\n
        v5 = v5->field_8;\n
    }\n
    return v0;\n
}\n
", "4206447:sub_402f6f": null, "4206448:cgc_do_int_evens": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_do_int_evens(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned int *v2;  // [bp-0x30]\n
    unsigned int *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    struct_0 *v9;  // rax, Other Possible Types: unsigned long\n
    unsigned int v10;  // eax\n
\n
    v5 = cgc_get_first_node(a0);\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 == cgc_get_list_tail(a0))\n
            break;\n
        v3 = *(v5);\n
        v7 = *(v3);\n
        if (!(v7 >> 31 CONCAT v7) /m 2 >> 32)\n
            v4 += 1;\n
        v5 = v5->field_8;\n
    }\n
    v9 = cgc_send(&v4, 4);\n
    if (v4 <= 0)\n
        return v9;\n
    v5 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v5;\n
        v9 = v0;\n
        if (v9 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = &v5->field_0->field_0;\n
        v10 = *(v2);\n
        if (!(v10 >> 31 CONCAT v10) /m 2 >> 32)\n
            cgc_send(v2, 4);\n
        v5 = v5->field_8;\n
    }\n
    return v0;\n
}\n
", "4206719:sub_40307f": null, "4206720:cgc_do_dbl_mean": "typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_mean(struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    int tmp_19;  // tmp #19\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long long *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20]\n
    struct_0 *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v4 = cgc_get_first_node(a0);\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = *(v4);\n
        s_20 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=Load(addr=stack_base-40, size=8, endness=Iend_LE), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))))<8>\n
        v4 = *((v4 + 8));\n
    }\n
    v1 = 0;\n
    if (a0->field_10 > 0)\n
    {\n
        tmp_19 = DivV(tmp_21, tmp_20);\n
        *(&v1) = tmp_19;\n
    }\n
    return cgc_send(&v1, 8);\n
}\n
", "4206900:sub_403134": null, "4206912:cgc_do_dbl_median": "typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
long long cgc_do_dbl_median(struct_3 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x60]\n
    int tmp_73;  // tmp #73\n
    int tmp_75;  // tmp #75\n
    int tmp_74;  // tmp #74\n
    char v1;  // [bp-0x51]\n
    unsigned long long *v2;  // [bp-0x50]\n
    unsigned long long *v3;  // [bp-0x48]\n
    unsigned long long *v4;  // [bp-0x40]\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v6;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0x1c]\n
    struct_1 *v9;  // [bp-0x18], Other Possible Types: unsigned long\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
\n
    v12 = &v10;\n
    v9 = cgc_get_first_node(a0);\n
    v8 = a0->field_10 >> 1;\n
    while (true)\n
    {\n
        v0 = v9;\n
        v1 = 0;\n
        if (v0 != cgc_get_list_tail(a0))\n
            v1 = v8;\n
        if (!(v1 & 1))\n
            break;\n
        v9 = *((v9 + 8));\n
        v8 -= 1;\n
    }\n
    v7 = 0;\n
    if (!(a0->field_10 & 1))\n
    {\n
        v6 = 0;\n
        v5 = 0;\n
        v4 = *(v9);\n
        v6 = *(v4);\n
        v3 = *(*((v9 + 16)));\n
        v5 = *(v3);\n
        tmp_73 = DivV(tmp_75, tmp_74);\n
        *(&v7) = tmp_73;\n
        return cgc_send(&v7, 8);\n
    }\n
    v2 = *(v9);\n
    v7 = *(v2);\n
    return cgc_send(&v7, 8);\n
}\n
", "4207211:sub_40326b": null, "4207216:cgc_do_dbl_mode": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_mode(void* a0)\n
{\n
    struct_0 *v0;  // [bp-0x50]\n
    struct_0 *v1;  // [bp-0x48]\n
    unsigned long long *v2;  // [bp-0x40]\n
    unsigned long long *v3;  // [bp-0x38]\n
    struct_0 *v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned long long v10;  // xmm0lq\n
    unsigned long long *v11;  // rax\n
    struct_0 *v12;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v13;  // xmm0lq\n
    unsigned long long *v14;  // rax\n
\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 == cgc_get_list_tail(a0))\n
            break;\n
        v3 = &v4->field_0->field_0;\n
        v10 = v5;\n
        v11 = v3;\n
        if ((((CmpF(v13, *(v14)) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF Load(addr=rax<8>, size=8, endness=Iend_LE)) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
        {\n
            v6 += 1;\n
            goto LABEL_40330d;\n
        }\n
        v5 = *(v3);\n
        v6 = 1;\n
LABEL_40330d:\n
        if (v6 > v8)\n
        {\n
            v8 = v6;\n
            v7 = 1;\n
        }\n
        else if (v6 == v8)\n
        {\n
            v7 += 1;\n
        }\n
        v4 = v4->field_8;\n
    }\n
    if (v8 <= 1)\n
    {\n
        v8 = 0;\n
        v12 = cgc_send(&v8, 4);\n
        return v12;\n
    }\n
    cgc_send(&v7, 4);\n
    v4 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v4;\n
        v12 = v0;\n
        if (v12 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = *(v4);\n
        v13 = v5;\n
        v14 = v2;\n
        if ((((CmpF(v13, *(v14)) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF Load(addr=rax<8>, size=8, endness=Iend_LE)) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
        {\n
            v6 += 1;\n
            goto LABEL_4033fc;\n
        }\n
        v5 = *(v2);\n
        v6 = 1;\n
LABEL_4033fc:\n
        if (v6 == v8)\n
            cgc_send(&v5, 8);\n
        v4 = v4->field_8;\n
    }\n
    return v0;\n
}\n
", "4207666:sub_403432": null, "4207680:cgc_do_dbl_range": "long long cgc_do_dbl_range(void* a0)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    int tmp_55;  // tmp #55\n
    int tmp_57;  // tmp #57\n
    int tmp_56;  // tmp #56\n
    unsigned long long *v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct struct_0 **v3;  // [bp-0x20]\n
    unsigned long long *v4;  // [bp-0x18]\n
    int v6;  // xmm0\n
\n
    v4 = cgc_get_first_node(a0);\n
    v3 = cgc_get_last_node(a0);\n
    v2 = 0;\n
    v1 = &*(v3)->field_0;\n
    v2 = *(v1);\n
    v0 = *(v4);\n
    tmp_55 = SubV(tmp_57, tmp_56);\n
    *(&v2) = tmp_55;\n
    return cgc_send(&v6, 8);\n
}\n
", "4207803:sub_4034bb": null, "4207808:cgc_do_dbl_sum": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_sum(void* a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        s_20 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=Load(addr=stack_base-40, size=8, endness=Iend_LE), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))))<8>\n
        v3 = *((v3 + 8));\n
    }\n
    return cgc_send(&v2, 8);\n
}\n
", "4207940:sub_403544": null, "4207952:cgc_do_dbl_product": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_product(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    unsigned long long v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 0x3ff0000000000000;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        s_20 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=Load(addr=stack_base-40, size=8, endness=Iend_LE), size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))))<8>\n
        v3 = *((v3 + 8));\n
    }\n
    return cgc_send(&v2, 8);\n
}\n
", "4208089:sub_4035d9": null, "4208096:cgc_do_dbl_min": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_min(void* a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = 9218378953502702454;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        if ((((CmpF(v2, *(v1)) & 69) | ((CmpF(v2, *(v1)) & 69) >> 6)) & 1) != 1)\n
            v2 = *(v1);\n
        v3 = v3->field_8;\n
    }\n
    return cgc_send(&v2, 8);\n
}\n
", "4208251:sub_40367b": null, "4208256:cgc_do_dbl_max": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_max(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned long long *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v3 = cgc_get_first_node(a0);\n
    v2 = -4993083352073354;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v3);\n
        if ((((CmpF(*(v1), v2) & 69) | ((CmpF(*(v1), v2) & 69) >> 6)) & 1) != 1)\n
            v2 = *(v1);\n
        v3 = v3->field_8;\n
    }\n
    return cgc_send(&v2, 8);\n
}\n
", "4208411:sub_40371b": null, "4208416:cgc_do_dbl_sort": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc_do_dbl_sort(void* a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 == cgc_get_list_tail(a0))\n
            break;\n
        v1 = *(v2);\n
        cgc_send(v1, 8);\n
        v2 = *((v2 + 8));\n
    }\n
    return v0;\n
}\n
", "4208522:sub_40378a": null, "4208528:cgc_do_dbl_rsort": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
long long cgc_do_dbl_rsort(unsigned long long *a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v2 = cgc_get_last_node(a0);\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 == cgc_get_list_head(a0))\n
            break;\n
        v1 = *(v2);\n
        cgc_send(v1, 8);\n
        v2 = *((v2 + 16));\n
    }\n
    return v0;\n
}\n
", "4208634:sub_4037fa": null, "4208640:cgc_do_dbl_odds": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_odds(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned long long *v2;  // [bp-0x30]\n
    unsigned long long *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    struct_0 *v6;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v8;  // eax\n
    struct_0 *v10;  // rax, Other Possible Types: unsigned long\n
    unsigned int v11;  // eax\n
\n
    v6 = cgc_get_first_node(a0);\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 == cgc_get_list_tail(a0))\n
            break;\n
        v3 = *(v6);\n
        v4 = *(v3);\n
        v8 = v4;\n
        if ((v8 >> 31 CONCAT v8) /m 2 >> 32)\n
            v5 += 1;\n
        v6 = *((v6 + 8));\n
    }\n
    v10 = cgc_send(&v5, 4);\n
    if (v5 <= 0)\n
        return v10;\n
    v6 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v6;\n
        v10 = v0;\n
        if (v10 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = *(v6);\n
        v4 = *(v2);\n
        v11 = v4;\n
        if ((v11 >> 31 CONCAT v11) /m 2 >> 32)\n
            cgc_send(v2, 8);\n
        v6 = *((v6 + 8));\n
    }\n
    return v0;\n
}\n
", "4208934:sub_403926": null, "4208944:cgc_do_dbl_evens": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long cgc_do_dbl_evens(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned long long *v2;  // [bp-0x30]\n
    unsigned long long *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    struct_0 *v6;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v8;  // eax\n
    struct_0 *v10;  // rax, Other Possible Types: unsigned long\n
    unsigned int v11;  // eax\n
\n
    v6 = cgc_get_first_node(a0);\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 == cgc_get_list_tail(a0))\n
            break;\n
        v3 = *(v6);\n
        v4 = *(v3);\n
        v8 = v4;\n
        if (!(v8 >> 31 CONCAT v8) /m 2 >> 32)\n
            v5 += 1;\n
        v6 = *((v6 + 8));\n
    }\n
    v10 = cgc_send(&v5, 4);\n
    if (v5 <= 0)\n
        return v10;\n
    v6 = cgc_get_first_node(a0);\n
    while (true)\n
    {\n
        v0 = v6;\n
        v10 = v0;\n
        if (v10 == cgc_get_list_tail(a0))\n
            break;\n
        v2 = *(v6);\n
        v4 = *(v2);\n
        v11 = v4;\n
        if (!(v11 >> 31 CONCAT v11) /m 2 >> 32)\n
            cgc_send(v2, 8);\n
        v6 = *((v6 + 8));\n
    }\n
    return v0;\n
}\n
", "4209238:sub_403a56": null, "4209248:cgc_get_list_type": "extern unsigned int nt;\n
\n
long long cgc_get_list_type()\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rdi\n
\n
    v0 = 0;\n
    if (cgc_recv_all(&v0, 1) != 1)\n
        cgc__terminate(v3);\n
    if (v0 >= 2)\n
    {\n
        v1 = -30;\n
        return v1;\n
    }\n
    nt = v0;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4209353:sub_403ac9": null, "4209360:cgc_get_num_count": "long long cgc_get_num_count(unsigned long long a0)\n
{\n
    if (cgc_recv_all(a0, 4) != 4)\n
        return cgc__terminate(a0);\n
    return 4;\n
}\n
", "4209420:sub_403b0c": null, "4209424:cgc_get_op_code": "long long cgc_get_op_code(unsigned int *a0)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (cgc_recv_all(&v0, 1) != 1)\n
        cgc__terminate(a0);\n
    if (v0 >= 12)\n
    {\n
        v1 = -80;\n
        return v1;\n
    }\n
    *(a0) = v0;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4209533:sub_403b7d": null, "4209536:cgc_read_double_into_node": "long long cgc_read_double_into_node()\n
{\n
    void* v0;  // [bp-0x10]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v0 = 0;\n
    if (cgc_allocate(v2, v3, v4))\n
        cgc__terminate(v2);\n
    if (cgc_recv_all(v0, 8) != 8)\n
    {\n
        cgc__terminate(v2);\n
        return cgc_node_create(v0);\n
    }\n
    return cgc_node_create(v0);\n
}\n
", "4209647:sub_403bef": null, "4209648:cgc_read_int_into_node": "long long cgc_read_int_into_node()\n
{\n
    void* v0;  // [bp-0x10]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v0 = 0;\n
    if (cgc_allocate(v2, v3, v4))\n
        cgc__terminate(v2);\n
    if (cgc_recv_all(v0, 4) != 4)\n
    {\n
        cgc__terminate(v2);\n
        return cgc_node_create(v0);\n
    }\n
    return cgc_node_create(v0);\n
}\n
", "4209759:sub_403c5f": null, "4209760:cgc_dup_double_node": "long long cgc_dup_double_node(struct struct_0 **a0)\n
{\n
    unsigned long long *v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v1 = 0;\n
    if (cgc_allocate(a0, v3, v4))\n
        cgc__terminate(a0);\n
    v0 = &*(a0)->field_0;\n
    *(v1) = *(v0);\n
    return cgc_node_create(v1);\n
}\n
", "4209860:sub_403cc4": null, "4209872:cgc_dup_int_node": "long long cgc_dup_int_node(struct struct_0 **a0)\n
{\n
    unsigned int *v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x18]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v1 = 0;\n
    if (cgc_allocate(a0, v3, v4))\n
        cgc__terminate(a0);\n
    if (cgc_allocate(a0, v3, v4))\n
        cgc__terminate(a0);\n
    v0 = &*(a0)->field_0;\n
    *(v1) = *(v0);\n
    return cgc_node_create(v1);\n
}\n
", "4210006:sub_403d56": null, "4210016:cgc_int32_node_compare": "long long cgc_int32_node_compare(struct struct_0 **a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = *(a0)->field_0;\n
    v0 = *(a1)->field_0;\n
    if (v1 < v0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (v1 <= v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4210112:cgc_dbl64_node_compare": "long long cgc_dbl64_node_compare(struct struct_0 **a0, struct struct_0 **a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = *(a0)->field_0;\n
    v0 = *(a1)->field_0;\n
    if ((((CmpF(v0, v1) & 69) | ((CmpF(v0, v1) & 69) >> 6)) & 1) != 1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if ((((CmpF(v1, v0) & 69) | ((CmpF(v1, v0) & 69) >> 6)) & 1) == 1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4210228:sub_403e34": null, "4210240:cgc_load_list": "extern void* cgc_sorted_asc_num_list;\n
extern unsigned int nt;\n
extern void* num_list;\n
\n
long long cgc_load_list(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long, unsigned long long [3]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int **, unsigned long long **\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    num_list = cgc_list_create_dup();\n
    if (!num_list)\n
    {\n
        v4 = 5;\n
        return v4;\n
    }\n
    cgc_sorted_asc_num_list = cgc_list_create_dup();\n
    if (!cgc_sorted_asc_num_list)\n
    {\n
        v4 = 5;\n
        return v4;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 > 0)\n
        {\n
            v2 = 0;\n
            v1 = 0;\n
            v0 = nt;\n
            if (!nt)\n
            {\n
                v2 = cgc_read_int_into_node();\n
                if (!v2)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                v1[0] = cgc_dup_int_node(v2);\n
                if (!v1)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                cgc_list_insert_sort(cgc_sorted_asc_num_list, v2, cgc_int32_node_compare);\n
            }\n
            else\n
            {\n
                if (v0 != 1)\n
                {\n
                    v4 = -1;\n
                    return v4;\n
                }\n
                v2 = cgc_read_double_into_node();\n
                if (!v2)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                v1 = cgc_dup_double_node(v2);\n
                if (!v1)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                cgc_list_insert_sort(cgc_sorted_asc_num_list, v2, cgc_dbl64_node_compare);\n
            }\n
            cgc_list_append(num_list, v1);\n
            v3 -= 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4210671:sub_403fef": null, "4210672:cgc_do_create": "extern unsigned long long num_list;\n
\n
long long cgc_do_create()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (num_list)\n
    {\n
        v2 = -9;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_get_list_type();\n
    if (v1 < 0)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v0 = 0;\n
    cgc_get_num_count(&v0);\n
    if (!v0)\n
    {\n
        v2 = -70;\n
        return v2;\n
    }\n
    else if (v0 <= 1000)\n
    {\n
        v2 = cgc_load_list(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -70;\n
        return v2;\n
    }\n
}\n
", "4210824:sub_404088": null, "4210832:cgc_do_eval": "extern void* cgc_sorted_asc_num_list;\n
extern unsigned int nt;\n
extern struct struct_0 **num_list;\n
\n
long long cgc_do_eval()\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    if (!num_list)\n
    {\n
        v5 = -10;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    v4 = cgc_get_op_code(&v3);\n
    if (v4 < 0)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    v2 = nt;\n
    if (!nt)\n
    {\n
        v1 = v3;\n
        switch (v1)\n
        {\n
        case 0:\n
            cgc_do_int_mean(num_list);\n
            break;\n
        case 1:\n
            cgc_do_int_median(cgc_sorted_asc_num_list);\n
            break;\n
        case 2:\n
            cgc_do_int_mode(cgc_sorted_asc_num_list);\n
            break;\n
        case 3:\n
            cgc_do_int_range(cgc_sorted_asc_num_list);\n
            break;\n
        case 4:\n
            cgc_do_int_sum(num_list);\n
            break;\n
        case 5:\n
            cgc_do_int_product(num_list);\n
            break;\n
        case 6:\n
            cgc_do_int_min(num_list);\n
            break;\n
        case 7:\n
            cgc_do_int_max(num_list);\n
            break;\n
        case 8:\n
            cgc_do_int_sort(cgc_sorted_asc_num_list);\n
            break;\n
        case 9:\n
            cgc_do_int_rsort(cgc_sorted_asc_num_list);\n
            break;\n
        case 10:\n
            cgc_do_int_odds(num_list);\n
            break;\n
        case 11:\n
            cgc_do_int_evens(num_list);\n
            break;\n
        default:\n
            v5 = -101;\n
            return v5;\n
        }\n
    }\n
    else\n
    {\n
        if (v2 != 1)\n
        {\n
            v5 = -122;\n
            return v5;\n
        }\n
        v0 = v3;\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_do_dbl_mean(num_list);\n
            break;\n
        case 1:\n
            cgc_do_dbl_median(cgc_sorted_asc_num_list);\n
            break;\n
        case 2:\n
            cgc_do_dbl_mode(cgc_sorted_asc_num_list);\n
            break;\n
        case 3:\n
            cgc_do_dbl_range(cgc_sorted_asc_num_list);\n
            break;\n
        case 4:\n
            cgc_do_dbl_sum(num_list);\n
            break;\n
        case 5:\n
            cgc_do_dbl_product(num_list);\n
            break;\n
        case 6:\n
            cgc_do_dbl_min(num_list);\n
            break;\n
        case 7:\n
            cgc_do_dbl_max(num_list);\n
            break;\n
        case 8:\n
            cgc_do_dbl_sort(cgc_sorted_asc_num_list);\n
            break;\n
        case 9:\n
            cgc_do_dbl_rsort(cgc_sorted_asc_num_list);\n
            break;\n
        case 10:\n
            cgc_do_dbl_odds(num_list);\n
            break;\n
        case 11:\n
            cgc_do_dbl_evens(num_list);\n
            break;\n
        default:\n
            v5 = -101;\n
            return v5;\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211495:sub_404327": null, "4211504:cgc_do_nonce": "long long cgc_do_nonce()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    char v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdi\n
\n
    v1 = 0;\n
    v0 = 0;\n
    v0 = cgc_rand(&v3, 8);\n
    if (v0)\n
    {\n
        v4 = -45;\n
        return v4;\n
    }\n
    cgc_send(&v3, 8);\n
    if (cgc_recv_all(&v2, 8) != 8)\n
        cgc__terminate(v6);\n
    if (*(&v3) == *(&v2))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = -44;\n
    return v4;\n
}\n
", "4211663:sub_4043cf": null, "4211664:main": "int main(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v5 = 0;\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = 0;\n
    do\n
    {\n
        v1 = cgc_do_nonce();\n
        if (!v1)\n
        {\n
            if (cgc_recv_all(&v2, 1) != 1)\n
                cgc__terminate(a0);\n
            v0 = v2;\n
            if (!v0)\n
            {\n
                v1 = cgc_do_create();\n
            }\n
            else if (v0 != 1)\n
            {\n
                v1 = -150;\n
            }\n
            else\n
            {\n
                v1 = cgc_do_eval();\n
            }\n
        }\n
    } while (v1 >= 0);\n
    cgc_send(&v1, 4);\n
    return v1;\n
}\n
", "4211872:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_random": null, "5242912:cgc_allocate": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}