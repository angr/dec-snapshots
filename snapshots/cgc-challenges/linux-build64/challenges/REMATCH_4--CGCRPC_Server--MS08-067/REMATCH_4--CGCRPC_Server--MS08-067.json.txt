{"4206592:_init": "extern struct_0 *g_411230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_411230;\n
    if (g_411230)\n
        v1 = g_411230();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_411250;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_411250;\n
    goto *(4264536);\n
}\n
", "4206636:sub_40302c": null, "4206640:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206656:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206672:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206688:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206704:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206720:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206736:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206752:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4264512);\n
}\n
", "4206768:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206805:sub_4030d5": null, "4206806:sub_4030d6": null, "4206816:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_411228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206857:sub_403109": null, "4206864:register_tm_clones": "extern unsigned long long g_411238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206921:sub_403149": null, "4206928:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_411240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_411240)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4206981:sub_403185": null, "4206985:sub_403189": null, "4206992:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207001:sub_403199": null, "4207008:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207059:sub_4031d3": null, "4207072:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207123:sub_403213": null, "4207136:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207187:sub_403253": null, "4207200:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207273:sub_4032a9": null, "4207280:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207353:sub_4032f9": null, "4207360:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207411:sub_403333": null, "4207424:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4207484:sub_40337c": null, "4207488:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4207548:sub_4033bc": null, "4207552:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207643:sub_40341b": null, "4207648:cgc_SetFsError": "extern char FS_ERROR;\n
\n
long long cgc_SetFsError(unsigned long long a0)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = FS_ERROR;\n
    if (!FS_ERROR)\n
        v1 = cgc_strncpy(&FS_ERROR, a0, 63);\n
    return v1;\n
}\n
", "4207703:sub_403457": null, "4207712:cgc_ClearFsError": "extern char FS_ERROR;\n
\n
long long cgc_ClearFsError()\n
{\n
    unsigned long v1;  // rax\n
\n
    FS_ERROR = 0;\n
    return v1;\n
}\n
", "4207725:sub_40346d": null, "4207728:cgc_FsError": "extern char FS_ERROR;\n
\n
long long cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4207741:sub_40347d": null, "4207744:cgc_DestroyFilesystem": "extern struct_0 *cgc_FS;\n
\n
long long cgc_DestroyFilesystem()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < cgc_FS->field_4; v0 += 1)\n
    {\n
        if (*((cgc_FS->field_8 + (v0 << 3))))\n
        {\n
            if (*(*((cgc_FS->field_8 + (v0 << 3)))))\n
            {\n
                cgc_free(*(*((cgc_FS->field_8 + v0 * 8))));\n
                *(*((cgc_FS->field_8 + v0 * 8))) = 0;\n
            }\n
            if (*((*((cgc_FS->field_8 + (v0 << 3))) + 8)))\n
            {\n
                cgc_free(*((*((cgc_FS->field_8 + v0 * 8)) + 8)));\n
                *((*((cgc_FS->field_8 + v0 * 8)) + 8)) = 0;\n
            }\n
            if (*((*((cgc_FS->field_8 + (v0 << 3))) + 24)))\n
            {\n
                cgc_free(*((*((cgc_FS->field_8 + v0 * 8)) + 24)));\n
                *((*((cgc_FS->field_8 + v0 * 8)) + 24)) = 0;\n
            }\n
            cgc_free(*((cgc_FS->field_8 + v0 * 8)));\n
            *((cgc_FS->field_8 + v0 * 8)) = 0;\n
        }\n
    }\n
    cgc_free(cgc_FS);\n
    cgc_FS = 0;\n
    cgc_ClearFsError();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4208187:sub_40363b": null, "4208192:cgc_InitFilesystem": "extern unsigned long long FD;\n
extern unsigned long long FS_ERROR;\n
extern struct_0 *cgc_FS;\n
\n
long long cgc_InitFilesystem(unsigned long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned long long v2;  // rax\n
\n
    cgc_bzero(&FS_ERROR, 64);\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"MaxFiles should be > 0\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    if (cgc_FS)\n
        cgc_DestroyFilesystem();\n
    cgc_FS = cgc_calloc(16);\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"calloc failed\");\n
        v0 = 0;\n
        return v0;\n
    }\n
    v2 = cgc_calloc(a0 * 32);\n
    cgc_FS->field_8 = v2;\n
    if (!v2)\n
    {\n
        cgc_SetFsError(\"calloc failed\");\n
        cgc_free(cgc_FS);\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_FS->field_4 = a0;\n
    if (!cgc_Login(\"root\"))\n
    {\n
        cgc_SetFsError(\"Login failed\");\n
        cgc_free(cgc_FS->field_8);\n
        cgc_free(cgc_FS);\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!cgc_InitPasswd(a1))\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(\"Failed to init the passwd file\");\n
        cgc_free(cgc_FS->field_8);\n
        cgc_free(cgc_FS);\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        cgc_bzero(&FD, 64);\n
        cgc_ClearFsError();\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4208579:sub_4037c3": null, "4208592:cgc_Login": "extern void* cgc_CurrentUser;\n
\n
long long cgc_Login(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    char v1;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = cgc_calloc(cgc_strlen(a0) + 1);\n
    if (!v0)\n
    {\n
        cgc_SetFsError(\"calloc failed\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_strcpy(v0, a0);\n
    if (cgc_CurrentUser)\n
    {\n
        cgc_free(cgc_CurrentUser);\n
        cgc_CurrentUser = 0;\n
    }\n
    cgc_CurrentUser = v0;\n
    cgc_ClearFsError();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4208772:sub_403884": null, "4208784:cgc_InitPasswd": "long long cgc_InitPasswd(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    char v1;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid root password\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = cgc_fopen(\"passwd\", \"w\");\n
    if (!v0)\n
    {\n
        cgc_SetFsError(\"Unable to open passwd file\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_fwrite(\"root:\", 5, 1, v0);\n
    cgc_fwrite(a0, cgc_strlen(a0), 1, v0);\n
    cgc_fclose(v0);\n
    cgc_ClearFsError();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4208973:sub_40394d": null, "4208976:cgc_Logout": "extern void* cgc_CurrentUser;\n
\n
long long cgc_Logout()\n
{\n
    if (cgc_CurrentUser)\n
        cgc_free(cgc_CurrentUser);\n
    cgc_CurrentUser = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4209029:sub_403985": null, "4209040:cgc_FindFile": "extern struct_0 *cgc_FS;\n
\n
long long cgc_FindFile(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < cgc_FS->field_4)\n
        {\n
            if (*((cgc_FS->field_8 + (v0 << 3))) && *(*((cgc_FS->field_8 + (v0 << 3)))) && !cgc_strcmp(*(*((cgc_FS->field_8 + (v0 << 3)))), a0))\n
            {\n
                v1 = *((cgc_FS->field_8 + v0 * 8));\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4209239:sub_403a57": null, "4209248:cgc_CreateEmptyFile": "extern unsigned long long cgc_CurrentUser;\n
extern struct_0 *cgc_FS;\n
\n
long long cgc_CreateEmptyFile(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
    unsigned long long v5;  // rax\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid filename\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (!cgc_CurrentUser)\n
    {\n
        cgc_SetFsError(\"Must login first\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if ((a1 & 153))\n
    {\n
        cgc_SetFsError(\"Invalid mode\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (cgc_FindFile(a0))\n
    {\n
        cgc_SetFsError(\"File already exists\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= cgc_FS->field_4)\n
        {\n
LABEL_403d46:\n
            if (v0 != cgc_FS->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v1 = *((cgc_FS->field_8 + v0 * 8));\n
                return v1;\n
            }\n
            cgc_SetFsError(\"No free inodes\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((cgc_FS->field_8 + (v0 << 3))))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = cgc_calloc(32);\n
            *((cgc_FS->field_8 + v0 * 8)) = v3;\n
            if (!v3)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                v1 = 0;\n
                return v1;\n
            }\n
            v4 = cgc_calloc(cgc_strlen(a0) + 1);\n
            *(*((cgc_FS->field_8 + v0 * 8))) = v4;\n
            if (!v4)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                cgc_free(*((cgc_FS->field_8 + v0 * 8)));\n
                *((cgc_FS->field_8 + v0 * 8)) = 0;\n
                v1 = 0;\n
                return v1;\n
            }\n
            cgc_strcpy(*(*((cgc_FS->field_8 + v0 * 8))), a0);\n
            v5 = cgc_calloc(9);\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 8)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                cgc_free(*(*((cgc_FS->field_8 + v0 * 8))));\n
                *(*((cgc_FS->field_8 + v0 * 8))) = 0;\n
                cgc_free(*((cgc_FS->field_8 + v0 * 8)));\n
                *((cgc_FS->field_8 + v0 * 8)) = 0;\n
                v1 = 0;\n
                return v1;\n
            }\n
            cgc_strcpy(*((*((cgc_FS->field_8 + v0 * 8)) + 8)), cgc_CurrentUser);\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 16)) = a1;\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 20)) = 0;\n
            *((*((cgc_FS->field_8 + v0 * 8)) + 24)) = 0;\n
            goto LABEL_403d46;\n
            goto LABEL_403d46;\n
        }\n
    }\n
}\n
", "4210071:sub_403d97": null, "4210080:cgc_fopen": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
extern struct_3 FD;\n
extern unsigned long long cgc_CurrentUser;\n
extern unsigned long long cgc_FS;\n
\n
long long cgc_fopen(unsigned long long a0, char *a1)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_2 *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (a0 && a1)\n
    {\n
        if (cgc_strlen(a1) > 1)\n
        {\n
            cgc_SetFsError(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a1) != 114 && *(a1) != 119)\n
        {\n
            cgc_SetFsError(\"Invalid mode\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!cgc_CurrentUser)\n
        {\n
            cgc_SetFsError(\"Must login first\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = cgc_FindFile(a0);\n
        if (!v1 && *(a1) == 114)\n
        {\n
            cgc_SetFsError(\"Unable to locate file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v1)\n
        {\n
            for (v2 = 0; v2 < 8; v2 += 1)\n
            {\n
                if ((&FD.field_0)[v2] && (&FD.field_0)[v2]->field_0 == v1)\n
                {\n
                    cgc_SetFsError(\"File is already open\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        if (v1 && cgc_strcmp(cgc_CurrentUser, \"root\"))\n
        {\n
            if (cgc_strcmp(v1->field_8, cgc_CurrentUser))\n
            {\n
                if (*(a1) == 114 && !(v1->field_10 & 64))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a1) == 119 && !(v1->field_10 & 96))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a1) == 114 && !(v1->field_10 & 4))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                if (*(a1) == 119 && !(v1->field_10 & 6))\n
                {\n
                    cgc_SetFsError(\"Permission denied\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        v0 = cgc_calloc(16);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            if (!(&FD.field_0)[v2])\n
            {\n
                (&FD.field_0)[v2] = &v0->field_0;\n
                break;\n
            }\n
        }\n
        if (v2 == 8)\n
        {\n
            cgc_SetFsError(\"No free file descriptors\");\n
            cgc_free(v0);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a1) != 119)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_8 = 4;\n
            v0->field_c = 0;\n
        }\n
        else if (v1)\n
        {\n
            v0->field_0 = &v1;\n
            v0->field_8 = 6;\n
            v0->field_c = 0;\n
            v0->field_0->field_14 = 0;\n
            if (v0->field_0->field_18)\n
            {\n
                cgc_free(v0->field_0->field_18);\n
                v0->field_0->field_18 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v1 = cgc_CreateEmptyFile(a0, 6);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(\"Failed to create file\");\n
                (&FD.field_0)[v2] = 0;\n
                cgc_free(v0);\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0->field_0 = &v1;\n
            v0->field_8 = 6;\n
            v0->field_c = 0;\n
        }\n
        cgc_ClearFsError();\n
        v3 = v0;\n
        return v3;\n
    }\n
    cgc_SetFsError(\"Invalid filename or mode\");\n
    v3 = 0;\n
    return v3;\n
}\n
", "4211333:sub_404285": null, "4211344:cgc_fclose": "extern unsigned long long FD[4];\n
\n
long long cgc_fclose(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x19]\n
    char v1;  // [bp-0x9]\n
    char v2;  // [bp-0x8]\n
    unsigned long long v4;  // rbp\n
\n
    v4 = &v2;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid file pointer\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0 < 8; v0 += 1)\n
    {\n
        if (FD[v0] == a0)\n
            FD[v0] = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free(a0);\n
    v1 = 1;\n
    return v1;\n
}\n
", "4211499:sub_40432b": null, "4211504:cgc_fread": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long a1, unsigned long a2, struct_1 *a3)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_1 *v3;  // rcx\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rax\n
\n
    v0 = a3;\n
    if (a0 && v0)\n
    {\n
        if (!v0->field_0->field_18)\n
        {\n
            cgc_SetFsError(\"End of file\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a2 * a1 > v0->field_0->field_14 - v0->field_c)\n
        {\n
            v3 = v0;\n
            cgc_memcpy(a0, v0->field_0->field_18 + v0->field_c, v0->field_0->field_14 - v3->field_c, v3);\n
            v4 = v0;\n
            v4->field_c = v0->field_0->field_14 - v0->field_c + v4->field_c;\n
            cgc_ClearFsError();\n
            v1 = v0->field_0->field_14 - v0->field_c;\n
            return v1;\n
        }\n
        else\n
        {\n
            cgc_memcpy(a0, v0->field_0->field_18 + v0->field_c, a2 * a1);\n
            v5 = v0;\n
            v5->field_c = a2 * a1 + v5->field_c;\n
            cgc_ClearFsError();\n
            v1 = a2 * a1;\n
            return v1;\n
        }\n
    }\n
    cgc_SetFsError(\"Invalid buffer or file pointer\");\n
    v1 = 0;\n
    return v1;\n
}\n
", "4211836:sub_40447c": null, "4211840:cgc_fwrite": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long a1, unsigned long a2, struct struct_0 **a3)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // rax\n
\n
    if (a0 && a3)\n
    {\n
        v0 = cgc_calloc(*(a3)->field_14 + a2 * a1);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(a3)->field_18)\n
            cgc_memcpy(v0, *(a3)->field_18, *(a3)->field_14);\n
        cgc_memcpy(v0 + *(a3)->field_14, a0, a2 * a1);\n
        v3 = *(a3);\n
        v3->field_14 = a2 * a1 + v3->field_14;\n
        if (*(a3)->field_18)\n
            cgc_free(*(a3)->field_18);\n
        *(a3)->field_18 = v0;\n
        cgc_ClearFsError();\n
        v1 = a2 * a1;\n
        return v1;\n
    }\n
    cgc_SetFsError(\"Invalid buffer or file pointer\");\n
    v1 = 0;\n
    return v1;\n
}\n
", "4212154:sub_4045ba": null, "4212160:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_8[4];\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fgets(char *a0, unsigned long a1, struct_2 *a2)\n
{\n
    char v0;  // [bp-0x2d]\n
    int tmp_62;  // tmp #62\n
    unsigned int v1;  // [bp-0x2c]\n
    struct_2 *v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
    struct_2 *v6;  // rdx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
\n
    v2 = a2;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid buffer\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v2)\n
    {\n
        cgc_SetFsError(\"Invalid file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v2->field_c == v2->field_0->field_14)\n
    {\n
        cgc_SetFsError(\"End of file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v2->field_0->field_18)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2->field_c < v2->field_0->field_14)\n
                v0 = v1 < a1 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = v2->field_0->field_18;\n
            v6 = v2;\n
            v7 = v6->field_c;\n
            v6->field_c = v7 + 1;\n
            tmp_62 = v5[v7];\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a0[v8] = tmp_62;\n
            if (v2->field_0->field_18[1 + v2->field_c].field_0 == 10)\n
                break;\n
        }\n
        a0[v1] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"End of file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4212541:sub_40473d": null, "4212544:cgc_ListFiles": "extern struct_0 *cgc_FS;\n
\n
long long cgc_ListFiles(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x21]\n
    char v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1f]\n
    char v5;  // [bp-0x1e]\n
    char v6;  // [bp-0x1d]\n
    unsigned int v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x9]\n
    unsigned long long v10;  // xmm0lq\n
    int v12;  // xmm0\n
    unsigned long long v13;  // rax\n
\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (a0)\n
    {\n
        v1 = 79;\n
        for (v7 = 0; v7 < cgc_FS->field_4; v7 += 1)\n
        {\n
            if (*((cgc_FS->field_8 + (v7 << 3))))\n
            {\n
                v0 = cgc_strlen(*(*((cgc_FS->field_8 + v7 * 8))));\n
                if (v0 < 32)\n
                    v1 += 32;\n
                else\n
                    v1 = v0 + v1;\n
                v1 += 1;\n
                v0 = cgc_strlen(*((*((cgc_FS->field_8 + v7 * 8)) + 8)));\n
                if (v0 < 32)\n
                    v1 += 32;\n
                else\n
                    v1 = v0 + v1;\n
                v1 += 1;\n
                if (!*((*((cgc_FS->field_8 + (v7 << 3))) + 20)))\n
                {\n
                    v1 += 8;\n
                }\n
                else\n
                {\n
                    v10 = *((*((cgc_FS->field_8 + v7 * 8)) + 20));\n
                    cgc_log10();\n
                    v12 = xmm0<16> + (0 CONCAT 0x3ff0000000000000);\n
                    v0 = v12;\n
                    if (v12 >= 8)\n
                        v1 = v0 + v1;\n
                    else\n
                        v1 += 8;\n
                }\n
                v1 += 6;\n
            }\n
        }\n
        v13 = cgc_calloc(v1);\n
        *(a0) = v13;\n
        if (!v13)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!a0)\n
        cgc_printf(\"$-32s $-32s $-8s $-4s\\n
\", \"Filename\", \"Owner\", \"Size\", \"Mode\");\n
    else\n
        cgc_sprintf(*(a0), \"$-32s $-32s $-8s $-4s\\n
\", \"Filename\", \"Owner\", \"Size\", \"Mode\");\n
    for (v7 = 0; v7 < cgc_FS->field_4; v7 += 1)\n
    {\n
        if (*((cgc_FS->field_8 + (v7 << 3))))\n
        {\n
            if (!a0)\n
                cgc_printf(\"$-32s $-32s $-8d \", *(*((cgc_FS->field_8 + v7 * 8))), *((*((cgc_FS->field_8 + v7 * 8)) + 8)), *((*((cgc_FS->field_8 + v7 * 8)) + 20)));\n
            else\n
                cgc_sprintf(*(a0), \"$s$-32s $-32s $-8d \", *(a0), *(*((cgc_FS->field_8 + v7 * 8))), *((*((cgc_FS->field_8 + v7 * 8)) + 8)), *((*((cgc_FS->field_8 + v7 * 8)) + 20)));\n
            cgc_memset(&v2, 45, 5);\n
            v6 = 0;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 4))\n
                v2 = 114;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 6))\n
                v3 = 119;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 64))\n
                v4 = 114;\n
            if ((*((*((cgc_FS->field_8 + (v7 << 3))) + 16)) & 96))\n
                v5 = 119;\n
            if (!a0)\n
                cgc_printf(\"$-4s\\n
\", &v2);\n
            else\n
                cgc_sprintf(*(a0), \"$s$-4s\\n
\", *(a0), &v2);\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v8 = 1;\n
    return v8;\n
}\n
", "4213641:sub_404b89": null, "4213648:cgc_DeleteFile": "extern struct_0 FD;\n
extern unsigned long long cgc_CurrentUser;\n
extern struct_2 *cgc_FS;\n
\n
long long cgc_DeleteFile(unsigned long long a0)\n
{\n
    unsigned long long v0[4];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x9]\n
\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(\"Filesystem does not exist\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid filename\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!cgc_CurrentUser)\n
    {\n
        cgc_SetFsError(\"Must login first\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        for (v2 = 0; v2 < cgc_FS->field_4; v2 += 1)\n
        {\n
            if (*((cgc_FS->field_8 + (v2 << 3))) && !cgc_strcmp(*(*((cgc_FS->field_8 + (v2 << 3)))), a0))\n
            {\n
                v0[0] = *((cgc_FS->field_8 + v2 * 8));\n
                v1 = v2;\n
                break;\n
            }\n
        }\n
        if (v2 == cgc_FS->field_4)\n
        {\n
            cgc_SetFsError(\"Unable to locate file\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            if ((&FD.field_0)[v2] && (&FD.field_0)[v2]->field_0 == v0)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        if (cgc_strcmp(cgc_CurrentUser, \"root\") && cgc_strcmp(cgc_CurrentUser, v0[1]))\n
        {\n
            cgc_SetFsError(\"Permission denied\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_free(v0[0]);\n
        if (v0[1])\n
            cgc_free(v0[1]);\n
        if (v0[3])\n
            cgc_free(v0[3]);\n
        cgc_free(v0);\n
        *((cgc_FS->field_8 + v1 * 8)) = 0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4214247:sub_404de7": null, "4214256:cgc_RenameFile": "extern unsigned long long cgc_CurrentUser;\n
extern struct_0 *cgc_FS;\n
\n
long long cgc_RenameFile(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0x38]\n
    unsigned long long v1[2];  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x9]\n
\n
    v1[0] = 0;\n
    if (a0 && a1)\n
    {\n
        for (v2 = 0; v2 < cgc_FS->field_4; v2 += 1)\n
        {\n
            if (*((cgc_FS->field_8 + (v2 << 3))) && *(*((cgc_FS->field_8 + (v2 << 3)))))\n
            {\n
                if (!cgc_strcmp(*(*((cgc_FS->field_8 + (v2 << 3)))), a0))\n
                    v1[0] = *((cgc_FS->field_8 + v2 * 8));\n
                if (!cgc_strcmp(*(*((cgc_FS->field_8 + (v2 << 3)))), a1))\n
                {\n
                    cgc_SetFsError(\"Destination file already exists\");\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            }\n
        }\n
        if (!v1)\n
        {\n
            cgc_SetFsError(\"Source file not found\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (cgc_strcmp(cgc_CurrentUser, \"root\") && cgc_strcmp(cgc_CurrentUser, *((v1 + 8))))\n
        {\n
            cgc_SetFsError(\"Permission denied\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = cgc_calloc(cgc_strlen(a1) + 1);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"calloc failed\");\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_strcpy(v0, a1);\n
        cgc_free(*(v1));\n
        *(v1) = v0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    cgc_SetFsError(\"Invalid filename\");\n
    v3 = 0;\n
    return v3;\n
}\n
", "4214768:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_ChangeMode(unsigned long long a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid user\");\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(a1 & 153))\n
    {\n
        v0 = cgc_FindFile(a0);\n
        if (!v0)\n
        {\n
            cgc_SetFsError(\"Unable to find file\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (cgc_strcmp(cgc_CurrentUser, \"root\") && cgc_strcmp(cgc_CurrentUser, v0->field_8))\n
        {\n
            cgc_SetFsError(\"Permission denied\");\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0->field_10 = a1;\n
        cgc_ClearFsError();\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Invalid mode\");\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4215008:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_ChangeOwner(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x28]\n
    char v2;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid filename\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid owner\");\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_strcmp(cgc_CurrentUser, \"root\"))\n
    {\n
        v1 = cgc_FindFile(a0);\n
        if (!v1)\n
        {\n
            cgc_SetFsError(\"Unable to find file\");\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_UserExists(a1))\n
        {\n
            v0 = cgc_calloc(cgc_strlen(a1) + 1);\n
            if (!v0)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                v2 = 0;\n
                return v2;\n
            }\n
            cgc_strcpy(v0, a1);\n
            if (v1->field_8)\n
                cgc_free(v1->field_8);\n
            v1->field_8 = v0;\n
            cgc_ClearFsError();\n
            v2 = 1;\n
            return v2;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(\"Invalid user\");\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Must be root\");\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4215347:sub_405233": null, "4215360:cgc_UserExists": "long long cgc_UserExists(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xb0]\n
    char v1;  // [bp-0xa8]\n
    void* v2;  // [bp-0x20]\n
    char v3;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_fopen(\"passwd\", \"r\");\n
    if (!v2)\n
    {\n
        cgc_SetFsError(\"Unable to open passwd file\");\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (cgc_fgets(&v1, 127, v2))\n
        {\n
            v0 = cgc_strtok(&v1, \":\");\n
            if (!v0)\n
            {\n
                cgc_SetFsError(\"Failed to parse passwd file\");\n
                v3 = 0;\n
                return v3;\n
            }\n
            else if (!cgc_strcmp(v0, a0))\n
            {\n
                cgc_fclose(v2);\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            cgc_fclose(v2);\n
            cgc_ClearFsError();\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4215633:sub_405351": null, "4215648:cgc_Uid": "extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_Uid()\n
{\n
    return cgc_puts(cgc_CurrentUser);\n
}\n
", "4215680:cgc_AddUser": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_AddUser(unsigned long long a0, unsigned long long a1)\n
{\n
    struct_0 *v0;  // [bp-0xd0]\n
    struct_0 *v1;  // [bp-0xc8]\n
    unsigned long v2;  // [bp-0xc0]\n
    char v3;  // [bp-0xb8]\n
    struct struct_0 **v4;  // [bp-0x30]\n
    void* v5;  // [bp-0x28]\n
    char v6;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_strcmp(cgc_CurrentUser, \"root\"))\n
    {\n
        cgc_SetFsError(\"Must be root\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_strlen(a0) > 32)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_strlen(a1) > 32)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_UserExists(a0))\n
    {\n
        v5 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v5)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            v6 = 0;\n
            return v6;\n
        }\n
        v4 = cgc_fopen(\"~passwd\", \"w\");\n
        if (!v4)\n
        {\n
            cgc_SetFsError(\"Unable to open tmp passwd file\");\n
            cgc_fclose(v5);\n
            v6 = 0;\n
            return v6;\n
        }\n
        while (true)\n
        {\n
            if (!cgc_fgets(&v3, 127, v5))\n
            {\n
                cgc_sprintf(&v3, \"$s:$s\", a0, a1);\n
                v0 = &v3;\n
                cgc_fwrite(v0, cgc_strlen(&v3), 1, v4);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(\"passwd\");\n
                cgc_RenameFile(\"~passwd\", \"passwd\");\n
                cgc_ClearFsError();\n
                v6 = 1;\n
                return v6;\n
            }\n
            v1 = &v3;\n
            v2 = cgc_fwrite(v1, cgc_strlen(&v3), 1, v4);\n
            if (v2 != cgc_strlen(&v3))\n
            {\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                cgc_DeleteFile(\"~passwd\");\n
                v6 = 0;\n
                return v6;\n
            }\n
            else if (*(&v2 + cgc_strlen(&v3)) != 10 && cgc_fwrite(\"\\n
\", 1, 1, v4) != 1)\n
            {\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                cgc_DeleteFile(\"~passwd\");\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"User already exists\");\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4216498:sub_4056b2": null, "4216512:cgc_DeleteUser": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_DeleteUser(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0xc8]\n
    unsigned long v1;  // [bp-0xc0]\n
    struct struct_0 **v2;  // [bp-0xb8]\n
    void* v3;  // [bp-0xb0]\n
    char v4;  // [bp-0xa1]\n
    unsigned long long v5;  // [bp-0xa0]\n
    char v6;  // [bp-0x98]\n
    char v7;  // [bp-0x9]\n
\n
    v4 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (cgc_strcmp(cgc_CurrentUser, \"root\"))\n
    {\n
        cgc_SetFsError(\"Must be root\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (cgc_strcmp(a0, \"root\"))\n
    {\n
        v3 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v3)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            v7 = 0;\n
            return v7;\n
        }\n
        v2 = cgc_fopen(\"~passwd\", \"w\");\n
        if (!v2)\n
        {\n
            cgc_SetFsError(\"Unable to open tmp passwd file\");\n
            cgc_fclose(v3);\n
            v7 = 0;\n
            return v7;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v6, 127, v3))\n
                {\n
                    cgc_fclose(v3);\n
                    cgc_fclose(v2);\n
                    if (v4)\n
                    {\n
                        cgc_DeleteFile(\"passwd\");\n
                        cgc_RenameFile(\"~passwd\", \"passwd\");\n
                        cgc_ClearFsError();\n
                        v7 = 1;\n
                        return v7;\n
                    }\n
                    cgc_SetFsError(\"User not found\");\n
                    cgc_fclose(v3);\n
                    cgc_fclose(v2);\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v7 = 0;\n
                    return v7;\n
                }\n
            } while (!cgc_strlen(&v6));\n
            v5 = cgc_strtok(&v6, \":\");\n
            if (!v5)\n
            {\n
                cgc_SetFsError(\"Failed to parse passwd file\");\n
                cgc_fclose(v3);\n
                cgc_fclose(v2);\n
                cgc_DeleteFile(\"~passwd\");\n
                v7 = 0;\n
                return v7;\n
            }\n
            if (cgc_strcmp(v5, a0))\n
            {\n
                (&v6)[cgc_strlen(v5)] = 58;\n
                v0 = &v6;\n
                v1 = cgc_fwrite(v0, cgc_strlen(&v6), 1, v2);\n
                if (v1 != cgc_strlen(&v6))\n
                    break;\n
            }\n
            else\n
            {\n
                v4 = 1;\n
            }\n
        }\n
        cgc_fclose(v3);\n
        cgc_fclose(v2);\n
        cgc_SetFsError(\"Unable to write tmp passwd file\");\n
        cgc_DeleteFile(\"~passwd\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Can't delete root user\");\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4217304:sub_4059d8": null, "4217312:cgc_ChangePasswd": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_ChangePasswd(unsigned long long a0, unsigned long long a1)\n
{\n
    struct_0 *v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    struct_0 *v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    struct struct_0 **v4;  // [bp-0xc8]\n
    void* v5;  // [bp-0xc0]\n
    char v6;  // [bp-0xb1]\n
    unsigned long long v7;  // [bp-0xb0]\n
    char v8;  // [bp-0xa8]\n
    char v9;  // [bp-0x9]\n
\n
    v6 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen(a1) <= 32)\n
    {\n
        if (cgc_strcmp(cgc_CurrentUser, a0) && cgc_strcmp(cgc_CurrentUser, \"root\"))\n
        {\n
            cgc_SetFsError(\"Must be root or the user being changed\");\n
            v9 = 0;\n
            return v9;\n
        }\n
        v5 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v5)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            v9 = 0;\n
            return v9;\n
        }\n
        v4 = cgc_fopen(\"~passwd\", \"w\");\n
        if (!v4)\n
        {\n
            cgc_SetFsError(\"Unable to open tmp passwd file\");\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (v6)\n
                    {\n
                        cgc_DeleteFile(\"passwd\");\n
                        cgc_RenameFile(\"~passwd\", \"passwd\");\n
                        cgc_ClearFsError();\n
                        v9 = 1;\n
                        return v9;\n
                    }\n
                    cgc_SetFsError(\"User not found\");\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen(&v8));\n
            v7 = cgc_strtok(&v8, \":\");\n
            if (!v7)\n
            {\n
                cgc_SetFsError(\"Failed to parse passwd file\");\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(\"~passwd\");\n
                v9 = 0;\n
                return v9;\n
            }\n
            else if (cgc_strcmp(v7, a0))\n
            {\n
                (&v8)[cgc_strlen(v7)] = 58;\n
                v0 = &v8;\n
                v1 = cgc_fwrite(v0, cgc_strlen(&v8), 1, v4);\n
                if (v1 != cgc_strlen(&v8))\n
                {\n
                    cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                cgc_sprintf(&v8, \"$s:$s\\n
\", a0, a1);\n
                v2 = &v8;\n
                v3 = cgc_fwrite(v2, cgc_strlen(&v8), 1, v4);\n
                if (v3 != cgc_strlen(&v8))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_SetFsError(\"Unable to write tmp passwd file\");\n
                    cgc_DeleteFile(\"~passwd\");\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4218330:sub_405dda": null, "4218336:cgc_CheckPasswd": "extern unsigned long long cgc_CurrentUser;\n
\n
long long cgc_CheckPasswd(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0xd1]\n
    void* v1;  // [bp-0xd0], Other Possible Types: unsigned long long, unsigned long\n
    void* v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb9]\n
    unsigned long long v4;  // [bp-0xb8]\n
    unsigned long long v5;  // [bp-0xb0]\n
    char v6;  // [bp-0xa8]\n
    char v7;  // [bp-0x9]\n
\n
    v3 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        cgc_SetFsError(\"Invalid username\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (cgc_strlen(a1) > 32)\n
    {\n
        cgc_SetFsError(\"Invalid password\");\n
        v7 = 0;\n
        return v7;\n
    }\n
    else\n
    {\n
        if (!cgc_CurrentUser)\n
        {\n
            cgc_Login(\"root\");\n
            v0 = 1;\n
        }\n
        else if (cgc_strcmp(cgc_CurrentUser, \"root\"))\n
        {\n
            v1 = cgc_calloc(cgc_strlen(cgc_CurrentUser) + 1);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(\"calloc failed\");\n
                v7 = 0;\n
                return v7;\n
            }\n
            cgc_strcpy(v1, cgc_CurrentUser);\n
            cgc_Logout();\n
            cgc_Login(\"root\");\n
        }\n
        v2 = cgc_fopen(\"passwd\", \"r\");\n
        if (!v2)\n
        {\n
            cgc_SetFsError(\"Unable to open passwd file\");\n
            if (v1)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v1);\n
                cgc_free(v1);\n
            }\n
            if (v0)\n
                cgc_Logout();\n
            v7 = 0;\n
            return v7;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v6, 127, v2))\n
                        {\n
                            cgc_fclose(v2);\n
                            if (!v3)\n
                            {\n
                                cgc_SetFsError(\"User not found\");\n
                                if (v1)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v1);\n
                                    cgc_free(v1);\n
                                }\n
                                if (v0)\n
                                    cgc_Logout();\n
                                v7 = 0;\n
                                return v7;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v1)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v1);\n
                                    cgc_free(v1);\n
                                }\n
                                if (v0)\n
                                    cgc_Logout();\n
                                v7 = 0;\n
                                return v7;\n
                            }\n
                        }\n
                    } while (!cgc_strlen(&v6));\n
                    v5 = cgc_strtok(&v6, \":\");\n
                    if (!v5)\n
                    {\n
                        cgc_SetFsError(\"Failed to parse passwd file\");\n
                        cgc_fclose(v2);\n
                        if (v1)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v1);\n
                            cgc_free(v1);\n
                        }\n
                        if (v0)\n
                            cgc_Logout();\n
                        v7 = 0;\n
                        return v7;\n
                    }\n
                } while (cgc_strcmp(v5, a0));\n
                v4 = cgc_strtok(0, \":\");\n
                if (!v4)\n
                {\n
                    cgc_SetFsError(\"Failed to parse passwd file\");\n
                    cgc_fclose(v2);\n
                    if (v1)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v1);\n
                        cgc_free(v1);\n
                    }\n
                    if (v0)\n
                        cgc_Logout();\n
                    v7 = 0;\n
                    return v7;\n
                }\n
            } while (cgc_strcmp(v4, a1));\n
            cgc_ClearFsError();\n
            cgc_fclose(v2);\n
            if (v1)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v1);\n
                cgc_free(v1);\n
            }\n
            if (v0)\n
                cgc_Logout();\n
            v7 = 1;\n
            return v7;\n
        }\n
    }\n
}\n
", "4219426:sub_406222": null, "4219440:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4219819:sub_4063ab": null, "4219824:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4220016:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4220074:sub_4064aa": null, "4220080:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4220272:cgc_unlink": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (a0->field_10)\n
        v0->field_10->field_8 = a0->field_8;\n
    v2 = a0;\n
    if (!a0->field_8)\n
        return v2;\n
    v2 = a0->field_8;\n
    *((v2 + 16)) = a0->field_10;\n
}\n
", "4220373:sub_4065d5": null, "4220384:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = *((v1 + 8)))\n
    {\n
        if (*(v1) >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4220665:sub_4066f9": null, "4220672:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4220777:sub_406769": null, "4220784:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4221086:sub_40689e": null, "4221088:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4221214:sub_40691e": null, "4221216:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4221366:sub_4069b6": null, "4221376:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4221459:sub_406a13": null, "4221472:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4221513:sub_406a49": null, "4221520:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned short field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
\n
    while (true)\n
    {\n
        if (a0->field_100 < 0x100)\n
        {\n
            a0->field_100 = a0->field_100 + 1;\n
            a0->padding_0[rcx<8>] = a1;\n
            v1 = a2 + 1;\n
            return v1;\n
        }\n
        if (cgc_transmit(a0, a1, a2, v3))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(&v0))\n
        {\n
            a0->field_100 = a0->field_100 - *(&v0);\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4221734:sub_406b26": null, "4221744:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4221814:sub_406b76": null, "4221824:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4221988:sub_406c24": null, "4222000:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x144]\n
    void* v1;  // [bp-0x140]\n
    unsigned long long v2;  // [bp-0x138]\n
    char v3;  // [bp-0x130]\n
    unsigned short v4;  // [bp-0x30]\n
    unsigned long long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    v5 = cgc_WRAPPER_BUFFER_PUTC;\n
    v4 = 0;\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(v2, v5, v1, a0, a1);\n
    if (v4 > 0)\n
    {\n
        if (!cgc_transmit(a0, a1, v8, v9))\n
        {\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v6 = v0;\n
    return v6;\n
}\n
", "4222189:sub_406ced": null, "4222192:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned long long *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned long long *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned long long *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned long long *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned long long *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned long long *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned long long *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned long long *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned long long *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[1];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 > 160)\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    else\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 <= 40)\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4224138:sub_40748a": null, "4224144:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4224304:cgc_vprintf": "long long cgc_vprintf(char *a0, void* a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    void* **v2;  // [bp-0x20]\n
\n
    v2 = &cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, v2, v0, a0, a1);\n
}\n
", "4224378:sub_40757a": null, "4224384:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4224548:sub_407624": null, "4224560:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4224660:sub_407694": null, "4224672:cgc_DebugPrint": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_DebugPrint(char *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x8c0]\n
    char v1;  // [bp-0x8b8]\n
    unsigned long v2;  // [bp-0x8b0]\n
    unsigned long v3;  // [bp-0x8a8]\n
    unsigned long v4;  // [bp-0x8a0]\n
    unsigned long v5;  // [bp-0x898]\n
    unsigned long v6;  // [bp-0x890]\n
    int v7;  // [bp-0x888]\n
    int v8;  // [bp-0x878]\n
    int v9;  // [bp-0x868]\n
    int v10;  // [bp-0x858]\n
    int v11;  // [bp-0x848]\n
    int v12;  // [bp-0x838]\n
    int v13;  // [bp-0x828]\n
    int v14;  // [bp-0x818]\n
    unsigned int v15;  // [bp-0x7fc]\n
    char v16;  // [bp-0x7f8]\n
    unsigned int v17;  // [bp-0x28]\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned long v19;  // [bp-0x20]\n
    unsigned long v20;  // [bp-0x18]\n
    unsigned long v21;  // [bp+0x8]\n
    char v22;  // al\n
    int v23;  // xmm0\n
    int v24;  // xmm1\n
    int v25;  // xmm2\n
    int v26;  // xmm3\n
    int v27;  // xmm4\n
    int v28;  // xmm5\n
    int v29;  // xmm6\n
    int v30;  // xmm7\n
    unsigned long v31;  // r9\n
\n
    if (v22)\n
    {\n
        v7 = v23;\n
        v8 = v24;\n
        v9 = v25;\n
        v10 = v26;\n
        v11 = v27;\n
        v12 = v28;\n
        v13 = v29;\n
        v14 = v30;\n
    }\n
    v6 = v31;\n
    v5 = a4;\n
    v4 = a3;\n
    v3 = a2;\n
    v2 = a1;\n
    v20 = &v1;\n
    v19 = &v21;\n
    v18 = 48;\n
    v17 = 8;\n
    v0 = &v16;\n
    v15 = cgc_vsprintf(&v16, a0, &v17);\n
    cgc_strlen(v0);\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v15;\n
}\n
", "4224903:sub_407787": null, "4224912:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4225204:sub_4078b4": null, "4225216:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        v11 = v0 - 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4225853:sub_407b3d": null, "4225856:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned int, unsigned long\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_4081d1:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_4081d1;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_4081c7;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_4081c7:\n
            goto LABEL_4081d1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4228202:sub_40846a": null, "4228208:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4228855:sub_4086f7": null, "4228864:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4229398:sub_408916": null, "4229408:cgc_srand": "extern char a;\n
extern char b;\n
extern char c;\n
extern unsigned long long mult;\n
extern unsigned int randIndex;\n
extern unsigned long long randState;\n
\n
long long cgc_srand()\n
{\n
    cgc_memcpy(&randState, 0x4347c000, 0x1000);\n
    randIndex = 0;\n
    a = 12;\n
    b = 25;\n
    c = 27;\n
    mult = *(1128775684);\n
    return *(1128775684);\n
}\n
", "4229482:sub_40896a": null, "4229488:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4229651:sub_408a13": null, "4229664:cgc_rand": "extern char a;\n
extern char b;\n
extern char c;\n
extern unsigned long long mult;\n
extern unsigned int randIndex;\n
extern unsigned long long randState;\n
\n
long long cgc_rand()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // rax\n
\n
    v1 = (&randState)[randIndex];\n
    v1 ^= v1 >> (a & 63);\n
    v1 ^= v1 << (b & 63);\n
    v1 ^= v1 >> (c & 63);\n
    v3 = randIndex;\n
    randIndex = randIndex + 1;\n
    (&randState)[v3] = v1;\n
    randIndex = randIndex & 511;\n
    v0 = mult * v1;\n
    return mult * v1 >> 32;\n
}\n
", "4229868:sub_408aec": null, "4229872:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0;\n
        v1 = (0 CONCAT -1) /m v2;\n
        v3 = cgc_rand();\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4229996:sub_408b6c": null, "4230000:cgc_populate_random_string": "long long cgc_populate_random_string(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    for (v0 = 0; v0 < a1 - 1; v0 += 1)\n
    {\n
        a0[v0] = cgc_random_in_range(65, 113);\n
    }\n
    a0[v0] = 0;\n
    return a0;\n
}\n
", "4230099:sub_408bd3": null, "4230112:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4230338:sub_408cc2": null, "4230352:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4230626:sub_408de2": null, "4230640:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4230728:sub_408e48": null, "4230736:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4230893:sub_408eed": null, "4230896:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned long v1;  // [bp-0x48]\n
    void* v2;  // [bp-0x40], Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v3;  // [bp-0x34]\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x24], Other Possible Types: unsigned long\n
    char v6[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v6) = a0;\n
    v5 = a2;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    if (v5 >= 16)\n
        v5 = 16;\n
    for (; cgc_isspace(*(v6)); v6 += 1);\n
    if (*(v6) == 45)\n
    {\n
        v3 = 1;\n
        *(&v6) = v6 + 1;\n
    }\n
    else if (*(v6) == 43)\n
    {\n
        *(&v6) = v6 + 1;\n
    }\n
    if (v5 != 16 && !(!v5))\n
        goto LABEL_40900d;\n
    if (*(v6) != 48)\n
    {\n
LABEL_40900d:\n
        if (v5 && !(v5 == 2))\n
            goto LABEL_409066;\n
        if (*(v6) == 48)\n
        {\n
            if (*((v6 + 1)) != 98 && !(*((v6 + 1)) == 66))\n
                goto LABEL_409066;\n
            *(&v6) = v6 + 2;\n
            v5 = 2;\n
        }\n
LABEL_409066:\n
    }\n
    else\n
    {\n
        if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
            goto LABEL_40900d;\n
        *(&v6) = v6 + 2;\n
        v5 = 16;\n
    }\n
    if (!v5)\n
    {\n
        if (*(v6) == 48)\n
            v5 = 8;\n
        else\n
            v5 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = -0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m v5 >> 64;\n
    v2 = (0 CONCAT v2) /m v5;\n
    while (*(v6))\n
    {\n
        v0 = *(v6);\n
        if (cgc_isdigit(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v0))\n
                break;\n
            if (cgc_isupper(v0))\n
                v0 -= 55;\n
            else\n
                v0 -= 87;\n
        }\n
        if (v0 >= v5)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_4091a2:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_4091a7:\n
            v4 *= v5;\n
            v4 = v0 + v4;\n
            *(&v6) = v6 + 1;\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_4091a7;\n
            goto LABEL_4091a2;\n
        }\n
    }\n
    if (a1)\n
        *(a1) = v6;\n
    if (v3)\n
    {\n
        v7 = -(v4);\n
        return v7;\n
    }\n
    v7 = v4;\n
    return v7;\n
}\n
", "4231698:sub_409212": null, "4231712:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4231778:sub_409262": null, "4231792:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4231858:sub_4092b2": null, "4231872:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4232043:sub_40936b": null, "4232048:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a0[v1] != a1)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4232202:sub_40940a": null, "4232208:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (!cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
        *((v4 + v2)) = 0;\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4232702:sub_4095fe": null, "4232704:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4233073:sub_409771": null, "4233088:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4233262:sub_40982e": null, "4233264:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v1 = *((a0 + v2));\n
            v0 = *((a1 + v2));\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4233425:sub_4098d1": null, "4233440:cgc_AddToData": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_AddToData(struct_1 *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v4;  // rax\n
\n
    v1 = &a0;\n
    if (!a0)\n
    {\n
        return v3;\n
    }\n
    else if (*(&a0->field_8))\n
    {\n
        v0 = cgc_calloc(a0->field_0 + a2);\n
        cgc_memcpy(v0, *(&a0->field_8), v1->field_0);\n
        cgc_memcpy(&v0[a0->field_0], a1, a2);\n
        v4 = a0;\n
        v4->field_0 = v4->field_0 + a2;\n
        cgc_free(*(&a0->field_8));\n
        *(&a0->field_8) = v0;\n
        return a0;\n
    }\n
    else\n
    {\n
        *(&a0->field_8) = cgc_calloc(a2);\n
        a0->field_0 = a2;\n
        v3 = cgc_memcpy(*(&a0->field_8), a1, a2);\n
        return v3;\n
    }\n
}\n
", "4233676:sub_4099cc": null, "4233680:cgc_ReceiveCGCMBMessage": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_ReceiveCGCMBMessage(unsigned long long a0, unsigned long long *a1)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned long long v2;  // [bp-0x30]\n
    struct_1 *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rax\n
    unsigned long long v7;  // rax\n
\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = cgc_CreateBlankCGCMBMessage();\n
    v2 = v3->field_0;\n
    if (!cgc_ReadFromTransportMessage(a0, v2, 4) && !cgc_ReadFromTransportMessage(a0, v2 + 4, 1) && !cgc_ReadFromTransportMessage(a0, v2 + 5, 1) && !cgc_ReadFromTransportMessage(a0, v2 + 6, 1) && !cgc_ReadFromTransportMessage(a0, v2 + 7, 8))\n
    {\n
        v1 = v3->field_8;\n
        if (!cgc_ReadFromTransportMessage(a0, v1, 2))\n
        {\n
            if (v1->field_0)\n
            {\n
                v6 = cgc_calloc(v1->field_0);\n
                v1->field_8 = v6;\n
                if (!(!cgc_ReadFromTransportMessage(a0, v1->field_8, v1->field_0, v6)))\n
                    goto LABEL_409bd2;\n
            }\n
            v0 = v3->field_10;\n
            if (!cgc_ReadFromTransportMessage(a0, v0, 2))\n
            {\n
                if (v0->field_0)\n
                {\n
                    v7 = cgc_calloc(v0->field_0);\n
                    v0->field_8 = v7;\n
                    if (!(!cgc_ReadFromTransportMessage(a0, v0->field_8, v0->field_0, v7)))\n
                        goto LABEL_409bd2;\n
                }\n
                *(a1) = v3;\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
LABEL_409bd2:\n
    cgc_DestroyCGCMBMessage(&v3);\n
    v4 = -1;\n
    return v4;\n
}\n
", "4234219:sub_409beb": null, "4234224:cgc_DestroyCGCMBMessage": "long long cgc_DestroyCGCMBMessage(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    unsigned long v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v8;  // rax\n
\n
    if (!a0)\n
        return v8;\n
    v8 = *(a0);\n
    v6 = v8;\n
    if (!v6)\n
        return *(a0);\n
    if (*((v6 + 24)))\n
    {\n
        if (!*(v6))\n
            cgc__terminate(a0);\n
        v0 = *((*(v6) + 4)) - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            v5 = *((v6 + 24));\n
            cgc_free(*((v5 + 8)));\n
            break;\n
        case 1:\n
            v4 = *((v6 + 24));\n
            if (v4)\n
            {\n
                cgc_free(*((v4 + 8)));\n
                cgc_free(*((v4 + 16)));\n
            }\n
            break;\n
        case 2:\n
            v3 = *((v6 + 24));\n
            if (v3)\n
            {\n
                cgc_free(*((v3 + 8)));\n
                cgc_free(*((v3 + 16)));\n
                cgc_free(*((v3 + 24)));\n
            }\n
            break;\n
        case 3:\n
            break;\n
        case 4:\n
            v2 = *((v6 + 24));\n
            if (v2)\n
                cgc_free(*((v2 + 16)));\n
            break;\n
        case 5:\n
            break;\n
        case 6:\n
            break;\n
        case 7:\n
            v1 = *((v6 + 24));\n
            if (v1)\n
                cgc_free(*((v1 + 24)));\n
            break;\n
        case 9:\n
            break;\n
        case 10:\n
            break;\n
        case 11:\n
            break;\n
        default:\n
            cgc__terminate(a0);\n
        }\n
        cgc_free(*((v6 + 24)));\n
    }\n
    if (*((v6 + 16)))\n
    {\n
        cgc_free(*((*((v6 + 16)) + 8)));\n
        cgc_free(*((v6 + 16)));\n
    }\n
    if (*((v6 + 8)))\n
    {\n
        cgc_free(*((*((v6 + 8)) + 8)));\n
        cgc_free(*((v6 + 8)));\n
    }\n
    cgc_free(*(v6));\n
    cgc_free(v6);\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4234781:sub_409e1d": null, "4234784:cgc_SendErrorResponse": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    void* field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
long long cgc_SendErrorResponse(char a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    char v1;  // [bp-0xc]\n
\n
    *(&v1) = *(&a0);\n
    v0 = cgc_CreateBlankCGCMBMessage();\n
    v0->field_0->field_4 = 255;\n
    cgc_AddToData(v0->field_10, &a0, 4);\n
    cgc_TransmitCGCMBMessage(v0);\n
    return cgc_DestroyCGCMBMessage(&v0);\n
}\n
", "4234861:sub_409e6d": null, "4234864:cgc_TransmitCGCMBMessage": "typedef struct struct_2 {\n
    char *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    char *field_8;\n
} struct_1;\n
\n
long long cgc_TransmitCGCMBMessage(struct_2 *a0)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v4;  // rax\n
    struct_0 *v5;  // rax\n
\n
    v3 = cgc_VerifyCGCMBMessage(a0);\n
    if (v3)\n
        return v3;\n
    v1 = cgc_calloc(24);\n
    v1->field_4 = a0->field_10->field_0 + 2;\n
    v4 = v1;\n
    v4->field_4 = v4->field_4 + a0->field_8->field_0 + 2;\n
    v5 = v1;\n
    v5->field_4 = v5->field_4 + 15;\n
    if (v1->field_4 > 0x1000)\n
    {\n
        cgc_SendErrorResponse(226);\n
        v3 = cgc_DestroyTransportMessage(&v1);\n
        return v3;\n
    }\n
    v1->field_8 = cgc_calloc(v1->field_4);\n
    v0 = v1->field_8;\n
    cgc_memcpy(v0, a0->field_0, 4);\n
    v0 += 4;\n
    cgc_memcpy(v0, a0->field_0 + 4, 1);\n
    v0 += 1;\n
    cgc_memcpy(v0, a0->field_0 + 5, 1);\n
    v0 += 1;\n
    cgc_memcpy(v0, a0->field_0 + 6, 1);\n
    v0 += 1;\n
    cgc_memcpy(v0, a0->field_0 + 7, 8);\n
    v0 += 8;\n
    cgc_memcpy(v0, a0->field_8, 2);\n
    v0 += 2;\n
    if (a0->field_8->field_0 > 0)\n
    {\n
        cgc_memcpy(v0, a0->field_8->field_8, a0->field_8->field_0);\n
        v0 = &v0[a0->field_8->field_0];\n
    }\n
    cgc_memcpy(v0, a0->field_10, 2);\n
    v0 += 2;\n
    if (a0->field_10->field_0 > 0)\n
    {\n
        cgc_memcpy(v0, a0->field_10->field_8, a0->field_10->field_0);\n
        v0 = &v0[a0->field_10->field_0];\n
    }\n
    cgc_SendTransportMessage(v1);\n
    v3 = cgc_DestroyTransportMessage(&v1);\n
    return v3;\n
}\n
", "4235490:sub_40a0e2": null, "4235504:cgc_ReadFromData": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
    unsigned short field_10;\n
} struct_0;\n
\n
long long cgc_ReadFromData(char *a0, struct_0 *a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // rax\n
\n
    v0 = a1;\n
    if (a0 && a1 && a1->field_8)\n
    {\n
        if (!a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a1->field_10 + a2 <= v0->field_0)\n
        {\n
            cgc_memcpy(a0, v0->field_8 + a1->field_10, a2);\n
            v3 = a1;\n
            v3->field_10 = v3->field_10 + a2;\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4235700:sub_40a1b4": null, "4235712:cgc_ParseCGCMBMessage": "typedef struct struct_5 {\n
    struct struct_3 *field_0;\n
    void* field_8;\n
    struct struct_6 *field_10;\n
    struct struct_4 *field_18;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    char *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    char *field_18;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    unsigned short field_0;\n
} struct_6;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_4;\n
\n
long long cgc_ParseCGCMBMessage(struct_5 *a0)\n
{\n
    unsigned long v0;  // [bp-0x80]\n
    char *v1;  // [bp-0x78]\n
    struct_1 *v2;  // [bp-0x70]\n
    char *v3;  // [bp-0x68]\n
    char *v4;  // [bp-0x60]\n
    char v5;  // [bp-0x52]\n
    struct_2 *v6;  // [bp-0x50]\n
    char *v7;  // [bp-0x48]\n
    char v8;  // [bp-0x3a]\n
    char *v9[4];  // [bp-0x38]\n
    char v10;  // [bp-0x2c]\n
    char v11;  // [bp-0x2a]\n
    char *v12[3];  // [bp-0x28]\n
    struct_0 *v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v16;  // eax\n
\n
    if (a0 && a0->field_0)\n
    {\n
        v0 = a0->field_0->field_4 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            a0->field_18 = cgc_calloc(16);\n
            v13 = &a0->field_18->field_0;\n
            v16 = a0->field_10->field_0;\n
            v13->field_0 = (v16 >> 31 CONCAT v16) /m 2;\n
            if (v13->field_0)\n
            {\n
                v13->field_8 = cgc_calloc(4);\n
                if (!cgc_ReadFromData(v13->field_8, a0->field_10, v13->field_0 << 1))\n
                    goto LABEL_40ac35;\n
                else\n
                    goto LABEL_40ac35;\n
            }\n
        case 1:\n
            v12[0] = cgc_calloc(24);\n
            a0->field_18 = &v12[0];\n
            if (!cgc_ReadFromData(v12, a0->field_8, 4) && !cgc_ReadFromData(&v11, a0->field_8, 2) && !cgc_ReadFromData(&v12[0] + 4, a0->field_8, 4))\n
            {\n
                if (!*(&v11))\n
                {\n
LABEL_40a35d:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (!(*(&v11) <= 64))\n
                        goto LABEL_40a35d;\n
                    v12[1] = cgc_calloc(*(&v11) + 1);\n
                    if (!cgc_ReadFromData(v12[1], a0->field_10, *(&v11)))\n
                    {\n
                        if (!*(&v10))\n
                        {\n
LABEL_40a3bf:\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            if (!(*(&v10) <= 128))\n
                                goto LABEL_40a3bf;\n
                            if (!cgc_ReadFromData(&v10, a0->field_10, 2))\n
                            {\n
                                v12[2] = cgc_calloc(*(&v10) + 1);\n
                                if (!cgc_ReadFromData(v12[2], a0->field_10, *(&v10)))\n
                                    goto LABEL_40ac35;\n
                                else\n
                                    goto LABEL_40ac35;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        case 2:\n
            v9[0] = cgc_calloc(32);\n
            a0->field_18 = &v9[0];\n
            if (!cgc_ReadFromData(v9, a0->field_8, 4) && !cgc_ReadFromData(&v9[0] + 4, a0->field_8, 2) && !cgc_ReadFromData(&v8, a0->field_10, 2))\n
            {\n
                if (!*(&v8))\n
                {\n
LABEL_40a4d2:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (!(*(&v8) <= 64))\n
                        goto LABEL_40a4d2;\n
                    v9[1] = cgc_calloc(*(&v8) + 1);\n
                    if (!cgc_ReadFromData(v9[1], a0->field_10, *(&v8)) && !cgc_ReadFromData(&v8, a0->field_10, 2))\n
                    {\n
                        if (!*(&v8))\n
                        {\n
LABEL_40a558:\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            if (!(*(&v8) <= 128))\n
                                goto LABEL_40a558;\n
                            v9[2] = cgc_calloc(*(&v8) + 1);\n
                            if (!cgc_ReadFromData(v9[2], a0->field_10, *(&v8)) && !cgc_ReadFromData(&v8, a0->field_10, 2))\n
                            {\n
                                if (!*(&v8))\n
                                {\n
LABEL_40a5de:\n
                                    break;\n
                                }\n
                                else\n
                                {\n
                                    if (!(*(&v8) <= 128))\n
                                        goto LABEL_40a5de;\n
                                    v9[3] = cgc_calloc(*(&v8) + 1);\n
                                    if (!cgc_ReadFromData(v9[3], a0->field_10, *(&v8)))\n
                                        goto LABEL_40ac35;\n
                                    else\n
                                        goto LABEL_40ac35;\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        case 3:\n
            v7 = cgc_calloc(12);\n
            a0->field_18 = &v7;\n
            if (!cgc_ReadFromData(v7, a0->field_8, 4) && !cgc_ReadFromData(v7 + 4, a0->field_8, 2))\n
                if (!cgc_ReadFromData(v7 + 8, a0->field_8, 4))\n
                    goto LABEL_40ac35;\n
                else\n
                    goto LABEL_40ac35;\n
        case 4:\n
            v6 = cgc_calloc(24);\n
            a0->field_18 = &v6->padding_0[0];\n
            if (!cgc_ReadFromData(v6, a0->field_8, 4) && !cgc_ReadFromData(&v6->padding_0[4], a0->field_8, 2) && !cgc_ReadFromData(&v6->padding_0[8], a0->field_8, 4) && !cgc_ReadFromData(&v6->padding_0[12], a0->field_8, 4) && !cgc_ReadFromData(&v5, a0->field_10, 2))\n
            {\n
                if (!*(&v5))\n
                {\n
LABEL_40a7b2:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (!(*(&v5) <= 128))\n
                        goto LABEL_40a7b2;\n
                    v6->field_10 = cgc_calloc(*(&v5) + 1);\n
                    if (!cgc_ReadFromData(v6->field_10, a0->field_10, *(&v5)))\n
                        goto LABEL_40ac35;\n
                    else\n
                        goto LABEL_40ac35;\n
                }\n
            }\n
        case 5:\n
            v4 = cgc_calloc(16);\n
            a0->field_18 = &v4;\n
            if (!cgc_ReadFromData(v4, a0->field_8, 4) && !cgc_ReadFromData(v4 + 4, a0->field_8, 2) && !cgc_ReadFromData(v4 + 8, a0->field_8, 4))\n
                if (!cgc_ReadFromData(v4 + 12, a0->field_8, 2))\n
                    goto LABEL_40ac35;\n
                else\n
                    goto LABEL_40ac35;\n
        case 6:\n
            v3 = cgc_calloc(20);\n
            a0->field_18 = &v3;\n
            if (!cgc_ReadFromData(v3, a0->field_8, 4) && !cgc_ReadFromData(v3 + 4, a0->field_8, 2) && !cgc_ReadFromData(v3 + 8, a0->field_8, 4) && !cgc_ReadFromData(v3 + 12, a0->field_8, 2) && !cgc_ReadFromData(v3 + 14, a0->field_10, 2))\n
                if (!cgc_ReadFromData(v3 + 16, a0->field_10, 4))\n
                    goto LABEL_40ac35;\n
                else\n
                    goto LABEL_40ac35;\n
        case 7:\n
            v2 = cgc_calloc(32);\n
            a0->field_18 = &v2->padding_0[0];\n
            if (!cgc_ReadFromData(v2, a0->field_8, 4) && !cgc_ReadFromData(&v2->padding_0[4], a0->field_8, 2) && !cgc_ReadFromData(&v2->padding_0[8], a0->field_8, 4) && !cgc_ReadFromData(&v2->padding_0[12], a0->field_8, 2) && !cgc_ReadFromData(&v2->padding_0[14], a0->field_8, 1) && !cgc_ReadFromData(&v2->field_10, a0->field_10, 2) && !cgc_ReadFromData(&v2->padding_12[2], a0->field_10, 4))\n
            {\n
                if (!v2->field_10)\n
                {\n
LABEL_40ab15:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (!(v2->field_10 <= 0x800))\n
                        goto LABEL_40ab15;\n
                    v2->field_18 = cgc_calloc(v2->field_10);\n
                    if (!cgc_ReadFromData(v2->field_18, a0->field_10, v2->field_10))\n
                        goto LABEL_40ac35;\n
                    else\n
                        goto LABEL_40ac35;\n
                }\n
            }\n
        case 9:\n
            v1 = cgc_calloc(16);\n
            a0->field_18 = &v1;\n
            if (!cgc_ReadFromData(v1, a0->field_8, 4) && !cgc_ReadFromData(v1 + 4, a0->field_8, 2) && !cgc_ReadFromData(v1 + 8, a0->field_8, 4))\n
                if (!cgc_ReadFromData(v1 + 12, a0->field_8, 2))\n
                    goto LABEL_40ac35;\n
                else\n
                    goto LABEL_40ac35;\n
        case 10:\n
            break;\n
        case 11:\n
            break;\n
        default:\n
            v14 = -1;\n
            return v14;\n
        }\n
LABEL_40ac35:\n
        v14 = 0;\n
        return v14;\n
    }\n
    v14 = -1;\n
    return v14;\n
}\n
", "4238408:sub_40ac48": null, "4238416:cgc_FindConnectionByID": "extern unsigned long long cgc_mbServerState;\n
\n
long long cgc_FindConnectionByID(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < 32)\n
        {\n
            if (*((cgc_mbServerState + (v0 << 3) + 16)) && *(*((cgc_mbServerState + (v0 << 3) + 16))) == a0)\n
            {\n
                v1 = *((cgc_mbServerState + v0 * 8 + 16));\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4238553:sub_40acd9": null, "4238560:cgc_FindFileByID": "long long cgc_FindFileByID(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < 16)\n
        {\n
            if (*((a0 + (v0 << 3) + 16)) && *(*((a0 + (v0 << 3) + 16))) == a1)\n
            {\n
                v1 = *((a0 + v0 * 8 + 16));\n
                return v1;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4238693:sub_40ad65": null, "4238704:cgc_HandleCGCMBMessage": "typedef struct struct_14 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    struct struct_13 *field_10;\n
    struct struct_2 *field_18;\n
} struct_14;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_3 *field_8;\n
    unsigned short field_c;\n
    char padding_e[2];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_2;\n
\n
typedef struct struct_10 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_3 *field_8;\n
    unsigned short field_c;\n
    char padding_e[2];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_10;\n
\n
typedef struct struct_12 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    void* field_10;\n
} struct_12;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_16 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_16;\n
\n
typedef struct struct_6 {\n
    char padding_0[8];\n
    struct struct_5 *field_8;\n
} struct_6;\n
\n
typedef struct struct_11 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_11;\n
\n
typedef struct struct_4 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_4;\n
\n
typedef struct struct_7 {\n
    struct struct_0 *field_0;\n
    void* field_8;\n
} struct_7;\n
\n
typedef struct struct_8 {\n
    struct struct_0 *field_0;\n
    void* field_8;\n
    void* field_10;\n
} struct_8;\n
\n
typedef struct struct_15 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_15;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
typedef struct struct_13 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_13;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[200];\n
    struct struct_3 *field_c8;\n
} struct_5;\n
\n
extern struct_9 *cgc_mbServerState;\n
extern unsigned long long g_40f500;\n
\n
long long cgc_HandleCGCMBMessage(struct_14 *a0)\n
{\n
    unsigned long v0;  // [bp-0x150]\n
    struct_8 *v1;  // [bp-0x148]\n
    char v2;  // [bp-0x13d]\n
    char v3;  // [bp-0x13c]\n
    char v4;  // [bp-0x138]\n
    unsigned short *v5;  // [bp-0x130]\n
    struct_6 *v6;  // [bp-0x128]\n
    struct_2 *v7;  // [bp-0x120]\n
    struct_7 *v8;  // [bp-0x118]\n
    unsigned long long v9;  // [bp-0x110]\n
    unsigned int v10;  // [bp-0x108]\n
    struct_2 *v11;  // [bp-0x100]\n
    struct_8 *v12;  // [bp-0xf8]\n
    unsigned long v13;  // [bp-0xf0]\n
    unsigned long long v14;  // [bp-0xe8]\n
    unsigned int v15;  // [bp-0xe0]\n
    struct_2 *v16;  // [bp-0xd8]\n
    struct_7 *v17;  // [bp-0xd0]\n
    unsigned long long v18;  // [bp-0xc8]\n
    unsigned int v19;  // [bp-0xc0]\n
    struct_2 *v20;  // [bp-0xb8]\n
    struct_7 *v21;  // [bp-0xb0]\n
    unsigned int v22;  // [bp-0xa4]\n
    struct_16 *v23;  // [bp-0xa0]\n
    struct_10 *v24;  // [bp-0x98]\n
    struct_7 *v25;  // [bp-0x90]\n
    unsigned int v26;  // [bp-0x84]\n
    struct_2 *v27;  // [bp-0x80]\n
    struct_8 *v28;  // [bp-0x78]\n
    unsigned int v29;  // [bp-0x6c]\n
    struct_11 *v30;  // [bp-0x68], Other Possible Types: unsigned long\n
    unsigned long v31;  // [bp-0x60]\n
    struct_10 *v32;  // [bp-0x58]\n
    char v33;  // [bp-0x49]\n
    struct_12 *v34;  // [bp-0x48]\n
    struct_10 *v35;  // [bp-0x40]\n
    struct_12 *v36;  // [bp-0x38]\n
    unsigned short *v37;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned short v38;  // [bp-0x22]\n
    struct_2 *v39;  // [bp-0x20]\n
    unsigned int v40;  // [bp-0xc]\n
    struct_2 *v42;  // rcx\n
    unsigned long long v43;  // rsi\n
    unsigned long long v44;  // rdx\n
    unsigned long long v45;  // r8\n
    unsigned long long v46;  // r9\n
    struct_1 *v47;  // rax\n
    unsigned long long v48;  // rcx\n
    unsigned long long v49;  // rsi\n
    unsigned long long v50;  // rdx\n
    unsigned long long v51;  // r8\n
    unsigned long long v52;  // r9\n
    unsigned long long v54;  // rsi\n
    unsigned long long v55;  // rdx\n
    unsigned long long v56;  // r8\n
    unsigned long long v57;  // r9\n
    unsigned long long v59;  // rcx\n
    unsigned long long v60;  // rsi\n
    unsigned long long v61;  // rdx\n
    unsigned long long v62;  // r8\n
    unsigned long long v63;  // r9\n
    unsigned long long v64;  // rsi\n
    unsigned long long v65;  // rdx\n
    unsigned long long v66;  // r8\n
    unsigned long long v67;  // r9\n
\n
    if (!a0)\n
    {\n
        v40 = -1;\n
        return v40;\n
    }\n
    else if (cgc_VerifyCGCMBMessage(a0))\n
    {\n
        cgc_SendErrorResponse(225);\n
        v40 = 0;\n
        return v40;\n
    }\n
    else\n
    {\n
        v0 = a0->field_0->field_4 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            if (cgc_mbServerState->field_0)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v39 = a0->field_18;\n
            if (!v39)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v38 = v39->field_0;\n
            v37 = &v39->field_8->field_0;\n
            if (!v37)\n
            {\n
                cgc_SendErrorResponse(225);\n
                break;\n
            }\n
            else\n
            {\n
                v36 = cgc_CreateBlankCGCMBMessage();\n
                v36->field_0->field_4 = 241;\n
                for (cgc_mbServerState->field_0 = 1; v38 > 0; v37 += 2)\n
                {\n
                    if (*(v37) == 12606)\n
                    {\n
LABEL_40aedc:\n
                        cgc_mbServerState->field_4 = *(v37);\n
                        cgc_mbServerState->field_8 = cgc_rand();\n
                        cgc_AddToData(v36->field_10, &cgc_mbServerState->field_8, 4);\n
                        cgc_AddToData(v36->field_10, &cgc_mbServerState->field_4, 2);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        if (*(v37) == 16725)\n
                            goto LABEL_40aedc;\n
                        if (*(v37) == 9841)\n
                            goto LABEL_40aedc;\n
                        v38 -= 1;\n
                    }\n
                }\n
                if (!cgc_mbServerState->field_4)\n
                    cgc_mbServerState->field_0 = 3;\n
                cgc_TransmitCGCMBMessage(v36);\n
                cgc_DestroyCGCMBMessage(&v36);\n
                break;\n
            }\n
        case 1:\n
            if (cgc_mbServerState->field_0 != 1)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v35 = &a0->field_18->field_0;\n
            if (!v35)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v42 = v35;\n
            if (cgc_mbServerState->field_8 != v42->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (*(&v35->field_4))\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            cgc_mbServerState->field_0 = 2;\n
            *(&v42) = cgc_LookupUser(*(&v35->field_c), v35->field_8);\n
            cgc_mbServerState->field_c = *(&v42);\n
            v47 = cgc_CreateBlankCGCMBMessage(a0, v43, v44, v42, v45, v46);\n
            v34 = &v47->field_0;\n
            v34->field_0->field_4 = 242;\n
            cgc_AddToData(v34->field_10, &cgc_mbServerState->field_c, 2);\n
            v33 = cgc_mbServerState->field_c == 65535;\n
            cgc_AddToData(v34->field_10, &v33, 1);\n
            cgc_TransmitCGCMBMessage(v34);\n
            cgc_DestroyCGCMBMessage(&v34);\n
            break;\n
        case 2:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v32 = &a0->field_18->field_0;\n
            if (!v32)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v32->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v32->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v31 = cgc_FindTreeByPath(v32->field_4, *(&v32->field_c), v32->field_10);\n
            if (!v31)\n
            {\n
                cgc_SendErrorResponse(228);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v30 = 0;\n
            for (v29 = 0; v29 < 32; v29 += 1)\n
            {\n
                if (!*((&(&cgc_mbServerState[1].field_0)[2 * v29] + 2)))\n
                {\n
                    *((&(&cgc_mbServerState[1].field_0)[2 * v29] + 2)) = cgc_calloc(144);\n
                    v30 = *((&(&cgc_mbServerState[1].field_0)[2 * v29] + 2));\n
                    break;\n
                }\n
            }\n
            if (!v30)\n
            {\n
                cgc_SendErrorResponse(232);\n
                v40 = -1;\n
                return v40;\n
            }\n
            *(v30) = cgc_rand();\n
            *((v30 + 4)) = 0;\n
            v59 = v31;\n
            *((v30 + 8)) = v59;\n
            v28 = cgc_CreateBlankCGCMBMessage(a0, v60, v61, v59, v62, v63);\n
            v28->field_0->field_4 = 243;\n
            cgc_AddToData(v28->field_8, v32, 4);\n
            cgc_AddToData(v28->field_8, &v32->field_4, 2);\n
            cgc_AddToData(v28->field_10, v30, 4);\n
            cgc_TransmitCGCMBMessage(v28);\n
            cgc_DestroyCGCMBMessage(&v28);\n
            break;\n
        case 3:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v27 = a0->field_18;\n
            if (!v27)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v27->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v27->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            for (v26 = 0; v26 < 32; v26 += 1)\n
            {\n
                if (*((&(&cgc_mbServerState[1].field_0)[2 * v26] + 2)) && *(*((&(&cgc_mbServerState[1].field_0)[2 * v26] + 2))) == v27->field_8)\n
                {\n
                    cgc_free(*((&(&cgc_mbServerState[1].field_0)[2 * v26] + 2)));\n
                    v48 = v26;\n
                    *((&(&cgc_mbServerState[1].field_0)[2 * v48] + 2)) = 0;\n
                    *(&v25) = cgc_CreateBlankCGCMBMessage(a0, v49, v50, v48, v51, v52);\n
                    v25->field_0->field_4 = 244;\n
                    cgc_AddToData(v25->field_8, v27, 4);\n
                    cgc_AddToData(v25->field_8, &v27->field_4, 2);\n
                    cgc_AddToData(v25->field_8, &v27->field_8, 4);\n
                    cgc_TransmitCGCMBMessage(v25);\n
                    cgc_DestroyCGCMBMessage(&v25);\n
                    v40 = 0;\n
                    return v40;\n
                }\n
            }\n
            cgc_SendErrorResponse(233);\n
            break;\n
        case 4:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v24 = &a0->field_18->field_0;\n
            if (!v24)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v24->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v24->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v23 = cgc_FindConnectionByID(v24->field_8);\n
            if (!v23)\n
            {\n
                cgc_SendErrorResponse(233);\n
                break;\n
            }\n
            else\n
            {\n
                v22 = 0;\n
                while (true)\n
                {\n
                    if (v22 >= 16)\n
                    {\n
LABEL_40b742:\n
                        cgc_SendErrorResponse(232);\n
                        break;\n
                    }\n
                    else if (*(&(&v23[1].padding_0)[v22]))\n
                    {\n
                        v22 += 1;\n
                    }\n
                    else\n
                    {\n
                        *(&(&v23[1].padding_0)[v22]) = cgc_CreateFile(v23->field_8, *(&v24->field_c), v24->field_4, *((&v24->field_8 + 4)));\n
                        if (*(&(&v23[1].padding_0)[v22]))\n
                        {\n
                            v21 = cgc_CreateBlankCGCMBMessage();\n
                            v21->field_0->field_4 = 245;\n
                            cgc_AddToData(v21->field_8, v24, 4);\n
                            cgc_AddToData(v21->field_8, &v24->field_4, 2);\n
                            cgc_AddToData(v21->field_8, &v24->field_8, 4);\n
                            cgc_AddToData(v21->field_8, *(&(&v23[1].padding_0)[v22]), 2);\n
                            cgc_TransmitCGCMBMessage(v21);\n
                            cgc_DestroyCGCMBMessage(&v21);\n
                            v40 = 0;\n
                            return v40;\n
                        }\n
                        cgc_SendErrorResponse(234);\n
                        goto LABEL_40b742;\n
                    }\n
                }\n
            }\n
        case 5:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v20 = a0->field_18;\n
            if (!v20)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v20->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v20->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            *(&v19) = cgc_FindConnectionByID(v20->field_8);\n
            if (!*(&v19))\n
            {\n
                cgc_SendErrorResponse(233);\n
                break;\n
            }\n
            else\n
            {\n
                v18 = cgc_FindFileByID(*(&v19), *((&v20->field_8 + 4)));\n
                if (!v18)\n
                {\n
                    cgc_SendErrorResponse(233);\n
                    break;\n
                }\n
                else\n
                {\n
                    cgc_CloseFile(v18);\n
                    *(&v17) = cgc_CreateBlankCGCMBMessage(a0, v54, v55, &g_40f500, v56, v57);\n
                    v17->field_0->field_4 = 246;\n
                    cgc_AddToData(v17->field_8, v20, 4);\n
                    cgc_AddToData(v17->field_8, &v20->field_4, 2);\n
                    cgc_AddToData(v17->field_8, &v20->field_8, 4);\n
                    cgc_AddToData(v17->field_8, &v20->field_8 + 4, 2);\n
                    cgc_TransmitCGCMBMessage(v17);\n
                    cgc_DestroyCGCMBMessage(&v17);\n
                    break;\n
                }\n
            }\n
        case 6:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v16 = a0->field_18;\n
            if (!v16)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v16->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v16->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            *(&v15) = cgc_FindConnectionByID(v16->field_8);\n
            if (!*(&v15))\n
            {\n
                cgc_SendErrorResponse(233);\n
                break;\n
            }\n
            else\n
            {\n
                v14 = cgc_FindFileByID(*(&v15), *((&v16->field_8 + 4)));\n
                if (!v14)\n
                {\n
                    cgc_SendErrorResponse(233);\n
                    break;\n
                }\n
                else if (!*((&v16->field_8 + 6)))\n
                {\n
LABEL_40ba8e:\n
                    cgc_SendErrorResponse(225);\n
                    break;\n
                }\n
                else\n
                {\n
                    if (!(*((&v16->field_8 + 6)) <= 0x800))\n
                        goto LABEL_40ba8e;\n
                    v13 = cgc_calloc(*((&v16->field_8 + 6)));\n
                    if (cgc_ReadFile(v13, v14, *(&v16->field_c), *((&v16->field_8 + 6))))\n
                    {\n
                        cgc_SendErrorResponse(234);\n
                        cgc_free(v13);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v12 = cgc_CreateBlankCGCMBMessage();\n
                        v12->field_0->field_4 = 247;\n
                        cgc_AddToData(v12->field_8, v16, 4);\n
                        cgc_AddToData(v12->field_8, &v16->field_4, 2);\n
                        cgc_AddToData(v12->field_8, &v16->field_8, 4);\n
                        cgc_AddToData(v12->field_8, &v16->field_8 + 6, 2);\n
                        cgc_AddToData(v12->field_10, v13, *((&v16->field_8 + 6)));\n
                        cgc_TransmitCGCMBMessage(v12);\n
                        cgc_free(v13);\n
                        cgc_DestroyCGCMBMessage(&v12);\n
                        break;\n
                    }\n
                }\n
            }\n
        case 7:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v11 = a0->field_18;\n
            if (!v11)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v11->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v11->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            *(&v10) = cgc_FindConnectionByID(v11->field_8);\n
            if (!*(&v10))\n
            {\n
                cgc_SendErrorResponse(233);\n
                break;\n
            }\n
            else\n
            {\n
                v9 = cgc_FindFileByID(*(&v10), *((&v11->field_8 + 4)));\n
                if (!v9)\n
                {\n
                    cgc_SendErrorResponse(233);\n
                    break;\n
                }\n
                else if (!v11->field_c)\n
                {\n
LABEL_40bd3d:\n
                    cgc_SendErrorResponse(225);\n
                    break;\n
                }\n
                else\n
                {\n
                    if (!(v11->field_c <= 0x800))\n
                        goto LABEL_40bd3d;\n
                    if (cgc_WriteFile(v9, *(&v11->padding_12[2]), *(&v11->field_10), v11->field_c))\n
                    {\n
                        cgc_SendErrorResponse(234);\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v8 = cgc_CreateBlankCGCMBMessage();\n
                        v8->field_0->field_4 = 248;\n
                        cgc_AddToData(v8->field_8, v11, 4);\n
                        cgc_AddToData(v8->field_8, &v11->field_4, 2);\n
                        cgc_AddToData(v8->field_8, &v11->field_8, 4);\n
                        cgc_AddToData(v8->field_8, &v11->field_8 + 4, 2);\n
                        cgc_TransmitCGCMBMessage(v8);\n
                        cgc_DestroyCGCMBMessage(&v8);\n
                        break;\n
                    }\n
                }\n
            }\n
        case 9:\n
            if (cgc_mbServerState->field_0 != 2)\n
            {\n
                cgc_SendErrorResponse(227);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v7 = a0->field_18;\n
            if (!v7)\n
            {\n
                cgc_SendErrorResponse(225);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_8 != v7->field_0)\n
            {\n
                cgc_SendErrorResponse(229);\n
                v40 = -1;\n
                return v40;\n
            }\n
            if (cgc_mbServerState->field_c != v7->field_4)\n
            {\n
                cgc_SendErrorResponse(231);\n
                v40 = -1;\n
                return v40;\n
            }\n
            v6 = cgc_FindConnectionByID(v7->field_8);\n
            if (!v6)\n
            {\n
                cgc_SendErrorResponse(233);\n
                break;\n
            }\n
            else if (!v6->field_8)\n
            {\n
                cgc_SendErrorResponse(233);\n
                break;\n
            }\n
            else if (cgc_strcmp(&v6->field_8->padding_0[132], \"EYEPSEE\"))\n
            {\n
                cgc_SendErrorResponse(235);\n
                break;\n
            }\n
            else\n
            {\n
                v5 = cgc_FindFileByID(v6, *((&v7->field_8 + 4)));\n
                if (!v5)\n
                {\n
                    cgc_SendErrorResponse(233);\n
                    break;\n
                }\n
                else if (*(v5) != v6->field_8->field_c8->field_0)\n
                {\n
                    cgc_SendErrorResponse(233);\n
                    break;\n
                }\n
                else\n
                {\n
                    v2 = cgc_HandleCGCRPCMessage(a0->field_10->field_8, a0->field_10->field_0, &v4, &v3);\n
                    *(&v1) = cgc_CreateBlankCGCMBMessage(a0, v64, v65, &g_40f500, v66, v67);\n
                    v1->field_0->field_4 = 250;\n
                    cgc_AddToData(v1->field_8, v7, 4);\n
                    cgc_AddToData(v1->field_8, &v7->field_4, 2);\n
                    cgc_AddToData(v1->field_8, &v7->field_8, 4);\n
                    cgc_AddToData(v1->field_8, &v2, 1);\n
                    if (*(&v3) > 0 && *(&v4))\n
                    {\n
                        cgc_AddToData(v1->field_10, *(&v4), *(&v3));\n
                        cgc_free(*(&v4));\n
                    }\n
                    cgc_TransmitCGCMBMessage(v1);\n
                    cgc_DestroyCGCMBMessage(&v1);\n
                    break;\n
                }\n
            }\n
        case 10:\n
            a0->field_0->field_4 = 251;\n
            cgc_TransmitCGCMBMessage(a0);\n
            break;\n
        case 11:\n
            cgc_mbServerState->field_0 = 3;\n
            a0->field_0->field_4 = 252;\n
            cgc_TransmitCGCMBMessage(a0);\n
            v40 = 1;\n
            return v40;\n
        default:\n
            cgc_SendErrorResponse(230);\n
        }\n
        v40 = 0;\n
        return v40;\n
    }\n
}\n
", "4243846:sub_40c186": null, "4243856:cgc_VerifyCGCMBMessage": "typedef struct struct_1 {\n
    struct struct_2 *field_0;\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_VerifyCGCMBMessage(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 && a0->field_0)\n
    {\n
        if (a0->field_0->field_0 == 3296480578)\n
        {\n
            if (a0->field_10 && a0->field_10->field_0 > 0 && !a0->field_10->field_8)\n
            {\n
                v0 = -1;\n
                return v0;\n
            }\n
            if (a0->field_8 && a0->field_8->field_0 > 0 && !a0->field_8->field_8)\n
            {\n
                v0 = -1;\n
                return v0;\n
            }\n
            v0 = 0;\n
            return v0;\n
        }\n
        else\n
        {\n
            v0 = -1;\n
            return v0;\n
        }\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4244086:sub_40c276": null, "4244096:cgc_CreateBlankCGCMBMessage": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_CreateBlankCGCMBMessage()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
\n
    v0 = cgc_calloc(32);\n
    v0->field_10 = cgc_calloc(24);\n
    v0->field_8 = cgc_calloc(24);\n
    v0->field_0 = cgc_calloc(16);\n
    v0->field_0->field_0 = 3296480578;\n
    return v0;\n
}\n
", "4244203:sub_40c2eb": null, "4244208:cgc_InitializeCGCRPC": "extern char endpoints;\n
extern unsigned short g_4128e0;\n
extern unsigned long long g_4128e8;\n
\n
long long cgc_InitializeCGCRPC()\n
{\n
    cgc_strcpy(&endpoints, \"NETSTUFF\");\n
    g_4128e0 = 220;\n
    g_4128e8 = cgc_NETSTUFF_Handler;\n
    return cgc_NETSTUFF_Handler;\n
}\n
", "4244256:cgc_AddConnection": "extern unsigned int connections[4];\n
\n
long long cgc_AddConnection(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 10)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!connections[4 * v0])\n
        {\n
            connections[4 * v0] = cgc_random_in_range(1, 4294967295);\n
            *(&connections[2 + 4 * v0]) = a0;\n
            v1 = connections[4 * v0];\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4244438:sub_40c3d6": null, "4244448:cgc_BindEndpoint": "extern char endpoints;\n
\n
long long cgc_BindEndpoint(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 10)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if ((&endpoints)[80 * v0] && !cgc_strcmp(&(&endpoints)[80 * v0], a0) && *(&(&endpoints)[64 + 80 * v0]) == a1)\n
        {\n
            v1 = cgc_AddConnection(&(&endpoints)[80 * v0]);\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4244655:sub_40c4af": null, "4244656:cgc_LookupBindID": "extern unsigned int connections[4];\n
\n
long long cgc_LookupBindID(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 10)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (connections[4 * v0] == a0)\n
        {\n
            v1 = *(&connections[2 + 4 * v0]);\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4244796:sub_40c53c": null, "4244800:cgc_HandleCGCRPCMessage": "typedef struct struct_1 {\n
    char padding_0[72];\n
    struct struct_0 *field_48;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_HandleCGCRPCMessage(unsigned short *a0, unsigned long a1, unsigned long long *a2, unsigned int *a3)\n
{\n
    unsigned int v0;  // [bp-0x7c]\n
    unsigned short *v1;  // [bp-0x78]\n
    unsigned short v2;  // [bp-0x6a]\n
    void* v3;  // [bp-0x68]\n
    struct_1 *v4;  // [bp-0x60]\n
    unsigned short v5;  // [bp-0x58]\n
    unsigned short v6;  // [bp-0x56]\n
    unsigned int v7;  // [bp-0x54]\n
    char *v8;  // [bp-0x50]\n
    unsigned int v9;  // [bp-0x48]\n
    unsigned short v10;  // [bp-0x42]\n
    unsigned long v11;  // [bp-0x40]\n
    unsigned short v12;  // [bp-0x34]\n
    unsigned short v13;  // [bp-0x32]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned short *v15;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v16;  // [bp-0xc]\n
    unsigned short v18;  // di\n
\n
    v15 = a0;\n
    v14 = a1;\n
    if (!v15)\n
    {\n
        v16 = -1;\n
        return v16;\n
    }\n
    else if (v14 >= 2)\n
    {\n
        v13 = *(v15);\n
        v14 -= 2;\n
        v15 += 1;\n
        v0 = v13;\n
        if (v0 != 160)\n
        {\n
            if (v0 != 161)\n
            {\n
                v16 = 4;\n
                return v16;\n
            }\n
            if (v14 < 8)\n
            {\n
                v16 = 2;\n
                return v16;\n
            }\n
            v7 = *(&v15);\n
            v15 += 2;\n
            v6 = *(v15);\n
            v15 += 1;\n
            v5 = *(v15);\n
            v15 += 1;\n
            if (v5 != v14 - 8)\n
            {\n
                v16 = 2;\n
                return v16;\n
            }\n
            v4 = cgc_LookupBindID(v7);\n
            if (!v4)\n
            {\n
                v16 = 8;\n
                return v16;\n
            }\n
            v3 = 0;\n
            if (!v5)\n
                v15 = 0;\n
            v18 = v6;\n
            v4->field_48(rdi<8>, v15, v5, &v3, &v2);\n
            if (v2 > 0x800)\n
                v2 = 0x800;\n
            v1 = cgc_calloc(v2 + 8);\n
            *(a2) = v1;\n
            *(v1) = 26;\n
            v1 += 1;\n
            *(&v1) = v7;\n
            v1 += 2;\n
            *(v1) = v2;\n
            v1 += 1;\n
            cgc_memcpy(v1, v3, v2);\n
            cgc_free(v3);\n
            *(a3) = v2 + 8;\n
            goto LABEL_40c883;\n
            goto LABEL_40c883;\n
        }\n
        else\n
        {\n
            if (v14 < 2)\n
            {\n
                v16 = 2;\n
                return v16;\n
            }\n
            v12 = *(v15);\n
            v15 += 1;\n
            v14 -= 2;\n
            if (v12 == v14 - 2 && v12)\n
            {\n
                v11 = cgc_calloc(v12 + 1);\n
                cgc_memcpy(v11, v15, v12);\n
                v15 = v15 + v12;\n
                v10 = *(v15);\n
                v9 = cgc_BindEndpoint(v11, v10);\n
                cgc_free(v11);\n
                if (!v9)\n
                {\n
                    v16 = 8;\n
                    return v16;\n
                }\n
                v8 = cgc_calloc(7);\n
                *(a2) = v8;\n
                *(&v8) = 10;\n
                v8 += 2;\n
                *(v8) = 0;\n
                v8 += 1;\n
                *(&v8) = v9;\n
                *(a3) = 7;\n
LABEL_40c883:\n
                v16 = 0;\n
                return v16;\n
            }\n
            v16 = 2;\n
            return v16;\n
        }\n
    }\n
    else\n
    {\n
        v16 = 2;\n
        return v16;\n
    }\n
}\n
", "4245654:sub_40c896": null, "4245664:cgc_InitializeFileSystem": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[196];\n
    unsigned long long field_c8;\n
} struct_0;\n
\n
extern char allTrees;\n
extern char cgc_serviceTypes;\n
extern struct_0 g_413638;\n
\n
long long cgc_InitializeFileSystem()\n
{\n
    char *v0;  // [bp-0xf0]\n
    char *v1;  // [bp-0xe8]\n
    unsigned short *v2;  // [bp-0xe0]\n
    struct_0 *v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    unsigned int v5;  // [bp-0xc4]\n
    unsigned long long v6;  // [bp-0xc0]\n
    char v7;  // [bp-0xb8]\n
    unsigned int v8;  // [bp-0x2c]\n
    unsigned int v9;  // [bp-0x28]\n
    unsigned int v10;  // [bp-0x24]\n
    unsigned int *v11;  // [bp-0x20]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned long long v16;  // rcx\n
\n
    for (v14 = 0; v14 < 5; v14 += 1)\n
    {\n
        v1 = &(&cgc_serviceTypes)[64 * v14];\n
        cgc_populate_random_string(v1, cgc_random_in_range(32, 64));\n
    }\n
    v13 = cgc_random_in_range(64, 128);\n
    for (v12 = 0; v12 < 9; v12 += 1)\n
    {\n
        v11 = &(&allTrees)[280 * v12];\n
        *(v11) = cgc_rand();\n
        cgc_populate_random_string(v11 + 1, v13 - v12);\n
        v0 = &v11[33];\n
        cgc_strcpy(v0, &(&cgc_serviceTypes)[64 * cgc_random_in_range(0, 4)]);\n
        v10 = cgc_random_in_range(1, 10);\n
        v9 = 0;\n
        for (v8 = cgc_random_in_range(64, 128); v10 > 0; v10 -= 1)\n
        {\n
            cgc_populate_random_string(&v7, v8 - v10);\n
            v6 = cgc_CreateFile(v11, &v7, 0, 49);\n
            v5 = cgc_random_in_range(10, 0x400);\n
            v4 = cgc_calloc(v5);\n
            cgc_populate_random_string(v4, v5);\n
            cgc_WriteFile(v6, v4, 0, v5);\n
            cgc_CloseFile(v6);\n
            cgc_free(v4);\n
            v16 = v9;\n
            v9 = v16 + 1;\n
            *(&v11[50 + 2 * v16]) = v6;\n
        }\n
    }\n
    v3 = &g_413638.field_0;\n
    v3->field_0 = cgc_rand();\n
    cgc_strcpy(&v3->padding_4, \"SOMETREE\");\n
    cgc_strcpy(&v3->padding_4[128], \"EYEPSEE\");\n
    v2 = cgc_calloc(144);\n
    cgc_strcpy(v2 + 1, \"NETSTUFF\");\n
    *(v2) = cgc_rand();\n
    v3->field_c8 = v2;\n
    return v3;\n
}\n
", "4246366:sub_40cb5e": null, "4246368:cgc_CreateFile": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[130];\n
    char field_84;\n
} struct_0;\n
\n
long long cgc_CreateFile(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x34]\n
    struct_0 *v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x24]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a2;\n
    v3 = cgc_FindFileByName(a0, a1);\n
    if (!v3)\n
    {\n
        if (a3 == 49)\n
        {\n
            v2 = 0;\n
            while (true)\n
            {\n
                if (v2 >= 10)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                if (!*((a0 + (v2 << 3) + 200)))\n
                    break;\n
                v2 += 1;\n
            }\n
            v1 = cgc_calloc(144);\n
            v1->field_0 = cgc_rand();\n
            v0 = cgc_strlen(a1);\n
            if (v0 > 128)\n
                v0 = 128;\n
            cgc_strncpy(&v1->padding_2, a1, 128);\n
            v1->field_84 = 1;\n
            *((a0 + v2 * 8 + 200)) = v1;\n
            v5 = v1;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    else\n
    {\n
        if (v3->field_84 != 1)\n
        {\n
            v3->field_84 = 1;\n
            v5 = v3;\n
            return v5;\n
        }\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4246707:sub_40ccb3": null, "4246720:cgc_WriteFile": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
    char padding_84[4];\n
    char *field_88;\n
} struct_0;\n
\n
long long cgc_WriteFile(struct_0 *a0, char *a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (a0 && a1 && a3)\n
    {\n
        if (a2 + a3 <= 0x400)\n
        {\n
            v0 = a0->field_88;\n
            a0->field_88 = cgc_calloc(a2 + a3);\n
            if (a2 > 0 && v0)\n
            {\n
                if (a0->field_82 < a2)\n
                    cgc_memcpy(a0->field_88, v0, a0->field_82);\n
                else\n
                    cgc_memcpy(a0->field_88, v0, a2);\n
            }\n
            cgc_memcpy(&a0->field_88[a2], a1, a3);\n
            a0->field_82 = a2 + a3;\n
            cgc_free(v0);\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4247082:sub_40ce2a": null, "4247088:cgc_CloseFile": "typedef struct struct_0 {\n
    char padding_0[132];\n
    char field_84;\n
} struct_0;\n
\n
long long cgc_CloseFile(struct_0 *a0)\n
{\n
    if (a0)\n
        a0->field_84 = 0;\n
    return a0;\n
}\n
", "4247120:cgc_FindFileByName": "long long cgc_FindFileByName(unsigned long a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 10)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = *((a0 + v1 * 8 + 200));\n
        if (v0 && !cgc_strcmp(v0 + 2, a1))\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4247265:sub_40cee1": null, "4247280:cgc_ReadFile": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
    char padding_84[4];\n
    unsigned long long field_88;\n
} struct_0;\n
\n
long long cgc_ReadFile(char *a0, struct_0 *a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned short v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a3;\n
    if (a1 && a0 && v0)\n
    {\n
        if (a2 <= a1->field_82)\n
        {\n
            if (a2 + v0 > a1->field_82)\n
                v0 = a1->field_82 - a2;\n
            cgc_memcpy(a0, a1->field_88 + a2, v0);\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4247493:sub_40cfc5": null, "4247504:cgc_FindTreeByPath": "extern char allTrees;\n
\n
long long cgc_FindTreeByPath(unsigned long a0, char *a1, char *a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < 10)\n
        {\n
            v0 = &(&allTrees)[280 * v1];\n
            if (!cgc_strcmp(v0 + 4, a1) && !cgc_strcmp(v0 + 132, a2))\n
            {\n
                v3 = v0;\n
                return v3;\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4247675:sub_40d07b": null, "4247680:cgc_AddData": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_1;\n
\n
long long cgc_AddData(struct_0 *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned short v1;  // [bp-0x1a]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned long v4;  // ax, Other Possible Types: unsigned short\n
    struct_1 *v5;  // rax\n
\n
    v4 = a2;\n
    v2 = a0;\n
    v1 = a2;\n
    if (!(a0 && a1))\n
        return v4;\n
    if (a0->field_0)\n
    {\n
        v0 = a0->field_0;\n
        a0->field_0 = cgc_calloc(a0->field_8 + v1);\n
        cgc_memcpy(v2->field_0, v0, a0->field_8);\n
        cgc_memcpy(&a0->field_0[v2->field_8], a1, v1);\n
        v5 = a0;\n
        v5->field_8 = v5->field_8 + v1;\n
        v4 = cgc_free(v0);\n
        return v4;\n
    }\n
    a0->field_0 = cgc_calloc(v1);\n
    cgc_memcpy(a0->field_0, a1, v1);\n
    a0->field_8 = v1;\n
    a0->field_a = 0;\n
    return a0;\n
}\n
", "4247951:sub_40d18f": null, "4247952:cgc_ReadData": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_0;\n
\n
long long cgc_ReadData(struct_0 *a0, char *a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // rax\n
\n
    v0 = a0;\n
    if (a0 && a0->field_0 && a1)\n
    {\n
        if (a0->field_a + a2 <= v0->field_8)\n
        {\n
            cgc_memcpy(a1, v0->field_0 + a0->field_a, a2);\n
            v3 = a0;\n
            v3->field_a = v3->field_a + a2;\n
            v1 = 0;\n
            return v1;\n
        }\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4248134:sub_40d246": null, "4248144:cgc_NETSTUFF_Handler": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned short field_8;\n
} struct_1;\n
\n
int cgc_NETSTUFF_Handler()\n
{\n
}\n
", "4248485:sub_40d3a5": null, "4248496:cgc_ServiceEnum": "extern char cgc_serviceTypes;\n
\n
long long cgc_ServiceEnum(unsigned long a0, unsigned long a1, void* a2)\n
{\n
    char *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned short v2;  // [bp-0x22]\n
    unsigned short v3;  // [bp-0x12]\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 5;\n
    cgc_AddData(a2, &v2, 2);\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        v0 = &(&cgc_serviceTypes)[64 * v1];\n
        cgc_AddData(a2, v0, cgc_strlen(&(&cgc_serviceTypes)[64 * v1]) + 1);\n
    }\n
    return 224;\n
}\n
", "4248663:sub_40d457": null, "4248672:cgc_FileStat": "long long cgc_FileStat(unsigned long a0, unsigned long a1, void* a2)\n
{\n
    char *v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned long v2;  // [bp-0x48]\n
    unsigned long v3;  // [bp-0x40]\n
    unsigned long v4;  // [bp-0x38]\n
    unsigned long v5;  // [bp-0x30]\n
    unsigned short v6;  // [bp-0x1a]\n
    char *v7;  // [bp-0x18]\n
    char v8;  // [bp-0x9]\n
    unsigned long long v10;  // rcx\n
\n
    v7 = a0;\n
    v6 = a1;\n
    v2 = cgc_FindChar(v7, v6, 210);\n
    if (!v2)\n
    {\n
        v8 = 226;\n
        return v8;\n
    }\n
    v3 = cgc_calloc(1 + v2 - v7);\n
    cgc_memcpy(v3, v7, v2 - v7);\n
    v10 = -1 + v2 - v7;\n
    v6 -= v10;\n
    v7 = v2 + 1;\n
    v2 = cgc_FindChar(v7, v6, 208, v10);\n
    if (!v2)\n
    {\n
        cgc_free(v3);\n
        v8 = 226;\n
        return v8;\n
    }\n
    v4 = cgc_calloc(1 + v2 - v7);\n
    cgc_memcpy(v4, v7, v2 - v7);\n
    v6 -= (v2 - v7) - 1;\n
    v7 = v2 + 1;\n
    v5 = cgc_calloc(v6 + 1);\n
    cgc_memcpy(v5, v7, v6);\n
    *(&v1) = cgc_FindTreeByPath(0, v4, v3);\n
    if (!*(&v1))\n
    {\n
        cgc_free(v3);\n
        cgc_free(v5);\n
        cgc_free(v4);\n
        v8 = 227;\n
        return v8;\n
    }\n
    v0 = cgc_FindFileByName(*(&v1), v5);\n
    if (!v0)\n
    {\n
        cgc_free(v3);\n
        cgc_free(v5);\n
        cgc_free(v4);\n
        v8 = 227;\n
        return v8;\n
    }\n
    cgc_AddData(a2, v0, 2);\n
    cgc_AddData(a2, v0 + 130, 2);\n
    cgc_AddData(a2, v0 + 132, 1);\n
    v8 = 224;\n
    return v8;\n
}\n
", "4249210:sub_40d67a": null, "4249216:cgc_NetPathCanonicalize": "long long cgc_NetPathCanonicalize(unsigned long long a0, unsigned long a1, void* a2)\n
{\n
    char v0;  // [bp-0x1db]\n
    char v1;  // [bp-0x1da]\n
    char v2;  // [bp-0x1d8]\n
    char v3;  // [bp-0x9]\n
\n
    if (a1 > 428)\n
    {\n
        v3 = 226;\n
        return v3;\n
    }\n
    v0 = cgc_NetPathType(a0, a1);\n
    if (v0 == 255)\n
    {\n
        v3 = 229;\n
        return v3;\n
    }\n
    else if (cgc_CanonicalizePathName(a0, a1, &v2, &v1) == 224)\n
    {\n
        cgc_AddData(a2, &v2, *(&v1));\n
        v3 = 224;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 230;\n
        return v3;\n
    }\n
}\n
", "4249406:sub_40d73e": null, "4249408:cgc_FindChar": "long long cgc_FindChar(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (a0[v0] != a2)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = &a0[v0];\n
            return v1;\n
        }\n
    }\n
}\n
", "4249549:sub_40d7cd": null, "4249552:cgc_BufCat": "long long cgc_BufCat(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v1 = a0;\n
    if (v1 && v0)\n
    {\n
        for (v0 = a1; *(v1); v1 += 1);\n
        for (; *(v0); *(v5) = tmp_19)\n
        {\n
            v4 = v0;\n
            v0 = v4 + 1;\n
            tmp_19 = *(v4);\n
            v5 = v1;\n
            v1 = v5 + 1;\n
        }\n
        v1 = 0;\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4249719:sub_40d877": null, "4249728:cgc_Length": "long long cgc_Length(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    for (v0 = 0; *(v1); v1 += 1)\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4249790:sub_40d8be": null, "4249792:cgc_BufCmp": "long long cgc_BufCmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4250161:sub_40da31": null, "4250176:cgc_BufCpy": "long long cgc_BufCpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4250264:sub_40da98": null, "4250272:cgc_NetPathType": "extern char cgc_serviceTypes;\n
\n
long long cgc_NetPathType(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    char v3;  // [bp-0x9]\n
\n
    v2 = cgc_FindChar(a0, a1, 210);\n
    v1 = cgc_calloc(1 + v2 - a0);\n
    if (!v2)\n
    {\n
        v3 = 255;\n
        return v3;\n
    }\n
    cgc_memcpy(v1, a0, v2 - a0);\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 5)\n
        {\n
            v3 = 255;\n
            return v3;\n
        }\n
        else if (cgc_BufCmp(v1, &(&cgc_serviceTypes)[64 * v0]))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = v0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4250478:sub_40db6e": null, "4250480:cgc_CanonicalizePathName": "long long cgc_CanonicalizePathName(char *a0, unsigned long a1, char *a2, unsigned short *a3)\n
{\n
    unsigned int v0;  // [bp-0x20c]\n
    char *v1;  // [bp-0x208], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x200]\n
    char v3;  // [bp-0x1f8]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x34]\n
    char v6;  // [bp-0x9]\n
\n
    v5 = *(0x4347cc00);\n
    v4 = 0;\n
    cgc_memset(&v3, 0, 428);\n
    if (a1 <= 428)\n
    {\n
        v2 = cgc_calloc(a1 + 1);\n
        cgc_memcpy(v2, a0, a1);\n
        v1 = cgc_FindChar(v2, a1, 210);\n
        if (v1)\n
        {\n
            v4 = cgc_calloc(1 + v1 - v2);\n
            cgc_memcpy(v4, v2, v1 - v2);\n
            cgc_BufCat(&v3, v4);\n
            v1 += 1;\n
            v1 = cgc_FindChar(v1, a1 - (v1 - v2), 210);\n
            if (!v1)\n
            {\n
                for (v0 = 0; v0 < a1; v0 += 1)\n
                {\n
                    if (v2[v0] == 211)\n
                        v2[v0] = 208;\n
                }\n
                cgc_BufCat(&v3, v2);\n
                if (cgc_ConvertPathMacros(&v3) == 224)\n
                {\n
                    cgc_free(v4);\n
                    *(a3) = cgc_Length(&v3);\n
                    cgc_memcpy(a2, &v3, *(a3));\n
                    a2[*(a3)] = 0;\n
                    if (v5 != *(0x4347cc00))\n
                        cgc__terminate(a0);\n
                    v6 = 224;\n
                    return v6;\n
                }\n
            }\n
        }\n
    }\n
    cgc_free(v4);\n
    v3 = 0;\n
    *(a2) = 0;\n
    if (v5 != *(0x4347cc00))\n
        cgc__terminate(a0);\n
    v6 = 228;\n
    return v6;\n
}\n
", "4251148:sub_40de0c": null, "4251152:cgc_ConvertPathMacros": "long long cgc_ConvertPathMacros(unsigned long a0)\n
{\n
    char v0;  // [bp-0x45]\n
    char v1;  // [bp-0x44]\n
    char v2;  // [bp-0x43]\n
    char v3;  // [bp-0x42]\n
    char v4;  // [bp-0x41]\n
    unsigned long v5;  // [bp-0x40]\n
    unsigned long v6;  // [bp-0x38]\n
    unsigned long v7;  // [bp-0x30]\n
    unsigned long v8;  // [bp-0x28]\n
    unsigned long v9;  // [bp-0x20]\n
    char v10;  // [bp-0x9]\n
\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = a0;\n
    v6 = a0;\n
    v5 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v4 = *(v7);\n
    v3 = *((v7 + 1));\n
    while (true)\n
    {\n
        if (!v4)\n
        {\n
            v10 = 224;\n
            return v10;\n
        }\n
        if (!v5 && v4 == 210)\n
        {\n
            v5 = v7;\n
            goto LABEL_40e076;\n
        }\n
        if (v4 == 208)\n
        {\n
            v9 = v7;\n
            if (v3 == 208)\n
            {\n
                v10 = 228;\n
                return v10;\n
            }\n
            if (v3 != 209)\n
            {\n
                v9 = v7;\n
                v8 = v7;\n
            }\n
            else\n
            {\n
                v1 = 0;\n
                v7 += 1;\n
                v6 = v7;\n
                while (true)\n
                {\n
                    v0 = 0;\n
                    if (*(v7) != 208)\n
                        v0 = *(v7);\n
                    if (!(v0 & 1))\n
                        break;\n
                    v1 += 1;\n
                    v7 += 1;\n
                }\n
                if (!*(v7))\n
                {\n
                    v10 = 228;\n
                    return v10;\n
                }\n
                if (!v8)\n
                {\n
                    for (v7 = v6; *(v7) == 209; v7 += 1)\n
                    {\n
                        v2 += 1;\n
                    }\n
                    v7 += 1;\n
                    if (v2 != 1)\n
                    {\n
                        if (v2 == v1)\n
                        {\n
                            v8 = v9 + -(v2 * 2);\n
                        }\n
                        else\n
                        {\n
                            v8 = v5;\n
                            cgc_BufCpy(v8 + 1, v7);\n
                        }\n
                        v9 = v8;\n
                    }\n
                    else\n
                    {\n
                        v8 = v5;\n
                        cgc_BufCpy(v8 + 1, v7);\n
                        v9 = v8;\n
                    }\n
                }\n
                else\n
                {\n
                    cgc_BufCpy(v8 + 1, v7 + 1);\n
                    v9 = v8;\n
                }\n
                goto LABEL_40e076;\n
            }\n
        }\n
        v7 += 1;\n
LABEL_40e076:\n
        v4 = *(v7);\n
        v3 = *((v7 + 1));\n
    }\n
}\n
", "4251804:sub_40e09c": null, "4251808:main": "extern struct_0 *cgc_mbServerState;\n
\n
int main(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long v8;  // r8\n
    unsigned long long v9;  // r9\n
\n
    v4 = 0;\n
    v3 = a0;\n
    v2 = a1;\n
    cgc_mbServerState = cgc_calloc(272);\n
    cgc_mbServerState->field_0 = 0;\n
    cgc_mbServerState->field_4 = 0;\n
    cgc_mbServerState->field_8 = 0;\n
    cgc_srand();\n
    cgc_GenerateUsers(272, a1, v6, v7, v8, v9);\n
    cgc_InitializeFileSystem();\n
    cgc_InitializeCGCRPC();\n
    while (true)\n
    {\n
        if (!cgc_ReceiveTransportMessage(&v1) && !cgc_ReceiveCGCMBMessage(*(&v1), &v0) && !cgc_ParseCGCMBMessage(v0) && cgc_HandleCGCMBMessage(v0))\n
            break;\n
        cgc_DestroyCGCMBMessage(&v0);\n
        cgc_DestroyTransportMessage(&v1);\n
    }\n
    return 0;\n
}\n
", "4252055:sub_40e197": null, "4252064:cgc_ReceiveBytes": "long long cgc_ReceiveBytes(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < a1; v2 += *(&v0))\n
    {\n
        v1 = cgc_receive(a0, a1, v5, v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4252236:sub_40e24c": null, "4252240:cgc_TransmitBytes": "long long cgc_TransmitBytes(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    for (v1 = 0; v2 < a1; v2 += *(&v0))\n
    {\n
        v1 = cgc_transmit(a0, a1, v5, v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    return 0;\n
}\n
", "4252386:sub_40e2e2": null, "4252400:cgc_ResetTransportMessage": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_ResetTransportMessage(struct_0 *a0)\n
{\n
    if (a0)\n
        a0->field_10 = 0;\n
    return a0;\n
}\n
", "4252437:sub_40e315": null, "4252448:cgc_ReceiveTransportMessage": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_ReceiveTransportMessage(unsigned long long *a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = cgc_calloc(24);\n
    cgc_ReceiveBytes(v0, 1);\n
    if (!v0->field_0)\n
    {\n
        cgc_ReceiveBytes(&v0->field_4, 4);\n
        if (v0->field_4 <= 0x1000)\n
        {\n
            v0->field_8 = cgc_calloc(v0->field_4);\n
            cgc_ReceiveBytes(v0->field_8, v0->field_4);\n
            *(a0) = v0;\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
    cgc_DestroyTransportMessage(&v0);\n
    *(a0) = 0;\n
    v1 = -1;\n
    return v1;\n
}\n
", "4252653:sub_40e3ed": null, "4252656:cgc_DestroyTransportMessage": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
long long cgc_DestroyTransportMessage(struct_0 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
\n
    if (!a0)\n
        cgc__terminate(a0);\n
    v0 = &a0->field_0->field_0;\n
    if (!v0)\n
        return a0->field_0;\n
    if (*(&v0->field_8))\n
    {\n
        cgc_free(*(&v0->field_8));\n
        *(&v0->field_8) = 0;\n
    }\n
    cgc_free(v0);\n
    a0->field_0 = 0;\n
    return a0;\n
}\n
", "4252782:sub_40e46e": null, "4252784:cgc_SendTransportMessage": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_SendTransportMessage(struct_0 *a0)\n
{\n
    cgc_TransmitBytes(a0, 1);\n
    cgc_TransmitBytes(&a0->field_4, 4);\n
    return cgc_TransmitBytes(a0->field_8, a0->field_4);\n
}\n
", "4252854:sub_40e4b6": null, "4252864:cgc_ReadFromTransportMessage": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_ReadFromTransportMessage(struct_0 *a0, char *a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // rax\n
\n
    v0 = a0;\n
    if (a0 && a1)\n
    {\n
        if (a0->field_8)\n
        {\n
            if (a2 <= 0x1000 && a0->field_10 + a2 <= v0->field_4)\n
            {\n
                cgc_memcpy(a1, v0->field_8 + a0->field_10, a2);\n
                v3 = a0;\n
                v3->field_10 = a2 + v3->field_10;\n
                v1 = 0;\n
                return v1;\n
            }\n
            v1 = -1;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4253052:sub_40e57c": null, "4253056:cgc_GenerateUsers": "long long cgc_GenerateUsers()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4253062:sub_40e586": null, "4253072:cgc_LookupUser": "long long cgc_LookupUser(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = a1;\n
    return 65535;\n
}\n
", "4253092:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_rint": null, "5242928:cgc_log10": null, "5242936:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}