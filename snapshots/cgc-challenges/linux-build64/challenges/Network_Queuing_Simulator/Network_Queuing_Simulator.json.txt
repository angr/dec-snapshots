{"4202496:_init": "extern struct_0 *g_409230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_409230;\n
    if (g_409230)\n
        v1 = g_409230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_409250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_409250;\n
    goto *(4231768);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_logf": "// attributes: PLT stub\n
int cgc_logf()\n
{\n
    ::libc.so.0::cgc_logf();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4231744);\n
}\n
", "4202704:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202741:sub_4020f5": null, "4202742:sub_4020f6": null, "4202752:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_409228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202793:sub_402129": null, "4202800:register_tm_clones": "extern unsigned long long g_409238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202857:sub_402169": null, "4202864:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_409240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_409240)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202917:sub_4021a5": null, "4202921:sub_4021a9": null, "4202928:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202937:sub_4021b9": null, "4202944:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203092:sub_402254": null, "4203104:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203228:sub_4022dc": null, "4203232:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4203360:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4203422:sub_40239e": null, "4203424:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203649:sub_402481": null, "4203664:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_hex(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    struct_0 *v7;  // rax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v4 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v7 = v1;\n
            v7->field_0 = v7->field_0 + 7;\n
        }\n
        v4 = v4 >> 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        v3->field_0 = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203871:sub_40255f": null, "4203872:cgc_float_to_str": "long long cgc_float_to_str(char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x42]\n
    char v1;  // [bp-0x41]\n
    unsigned long long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_40285c;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < 5;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_40285c:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4204652:sub_40286c": null, "4204656:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x120], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x118]\n
    unsigned int v2;  // [bp-0x10c]\n
    unsigned int *v3;  // [bp-0x108], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x100]\n
    unsigned int *v5;  // [bp-0xf8]\n
    unsigned int v6;  // [bp-0xec]\n
    unsigned int *v7;  // [bp-0xe8], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0xe0]\n
    unsigned int v9;  // [bp-0xd4]\n
    unsigned int *v10;  // [bp-0xd0], Other Possible Types: unsigned long\n
    struct_1 *v11;  // [bp-0xc8]\n
    unsigned int v12;  // [bp-0xbc]\n
    unsigned int *v13;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct_1 *v14;  // [bp-0xb0]\n
    unsigned int v15;  // [bp-0xa8]\n
    unsigned int v16;  // [bp-0xa4]\n
    char *v17;  // [bp-0xa0], Other Possible Types: unsigned long\n
    struct_3 *v18;  // [bp-0x98], Other Possible Types: unsigned long\n
    unsigned long v19;  // [bp-0x90]\n
    struct_3 *v20;  // [bp-0x88], Other Possible Types: unsigned long\n
    unsigned int v21;  // [bp-0x7c]\n
    struct_3 *v22;  // [bp-0x78], Other Possible Types: unsigned long\n
    unsigned int v23;  // [bp-0x70]\n
    char v24;  // [bp-0x69]\n
    char v25;  // [bp-0x68]\n
    unsigned int v26;  // [bp-0x24]\n
    char *v27;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v28;  // [bp-0xc]\n
    struct_1 *v30;  // rcx\n
    unsigned long long v31;  // rdx\n
    unsigned int *v32;  // rax\n
    struct_1 *v33;  // rcx\n
    unsigned int *v34;  // rdx\n
    struct_1 *v35;  // rcx\n
    unsigned long long v36;  // rdx\n
    unsigned int *v37;  // rax\n
    struct_1 *v38;  // rcx\n
    unsigned int *v39;  // rdx\n
    unsigned long long v40;  // rdx\n
    unsigned int *v41;  // rax\n
    struct_1 *v42;  // rcx\n
    unsigned int *v43;  // rdx\n
    struct_1 *v44;  // rcx\n
    unsigned long long v45;  // rdx\n
    struct struct_0 **v46;  // rax\n
    struct_1 *v47;  // rcx\n
    struct struct_0 **v48;  // rdx\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned int *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned int *v53;  // rdx\n
\n
    v27 = a0;\n
    v26 = 0;\n
    if (!v27)\n
    {\n
        v28 = -1;\n
        return v28;\n
    }\n
    while (true)\n
    {\n
        if (!*(v27))\n
        {\n
            v28 = v26;\n
            return v28;\n
        }\n
        else if (*(v27) != 64)\n
        {\n
            cgc_putc(*(v27));\n
            v27 += 1;\n
            v26 += 1;\n
        }\n
        else\n
        {\n
            v27 += 1;\n
            v16 = *(v27);\n
            if (!v16)\n
            {\n
                v28 = -1;\n
                return v28;\n
            }\n
            if (v16 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v16 == 99)\n
            {\n
                v14 = a1;\n
                v15 = v14->field_0;\n
                if (v15 <= 40)\n
                {\n
                    v30 = v14;\n
                    v31 = v15;\n
                    v32 = v31 + v30->field_10;\n
                    v30->field_0 = v31 + 8;\n
                    v13 = v32;\n
                }\n
                else\n
                {\n
                    v33 = v14;\n
                    v34 = v33->field_8;\n
                    v33->field_8 = &v34[2];\n
                    v13 = v34;\n
                }\n
                v24 = *(v13);\n
                cgc_putc(v24);\n
            }\n
            else if (v16 == 100)\n
            {\n
                v11 = a1;\n
                v12 = v11->field_0;\n
                if (v12 > 40)\n
                {\n
                    v38 = v11;\n
                    v39 = v38->field_8;\n
                    v38->field_8 = &v39[2];\n
                    v10 = v39;\n
                }\n
                else\n
                {\n
                    v35 = v11;\n
                    v36 = v12;\n
                    v37 = v36 + v35->field_10;\n
                    v35->field_0 = v36 + 8;\n
                    v10 = v37;\n
                }\n
                v23 = *(v10);\n
                cgc_int_to_str(v23, &v25);\n
                for (v22 = &v25; *(v22); v22 += 1)\n
                {\n
                    cgc_putc(*(v22));\n
                    v26 += 1;\n
                }\n
            }\n
            else if (v16 == 102)\n
            {\n
                v4 = a1;\n
                v5 = &v4->field_4;\n
                v6 = v4->field_4;\n
                if (v6 > 160)\n
                {\n
                    v42 = v4;\n
                    v43 = v42->field_8;\n
                    v42->field_8 = &v43[2];\n
                    v3 = v43;\n
                }\n
                else\n
                {\n
                    v40 = v6;\n
                    v41 = v40 + v4->field_10;\n
                    *(v5) = v40 + 16;\n
                    v3 = v41;\n
                }\n
                v19 = *(v3);\n
                cgc_float_to_str(&v25);\n
                for (v18 = &v25; v18->field_0; v18 += 1)\n
                {\n
                    cgc_putc(v18->field_0);\n
                    v26 += 1;\n
                }\n
            }\n
            else if (v16 == 115)\n
            {\n
                v1 = a1;\n
                v2 = v1->field_0;\n
                if (v2 > 40)\n
                {\n
                    v47 = v1;\n
                    v48 = v47->field_8;\n
                    v47->field_8 = &v48[1];\n
                    v0 = v48;\n
                }\n
                else\n
                {\n
                    v44 = v1;\n
                    v45 = v2;\n
                    v46 = v45 + v44->field_10;\n
                    v44->field_0 = v45 + 8;\n
                    v0 = v46;\n
                }\n
                for (v17 = *(v0); *(v17); v17 += 1)\n
                {\n
                    cgc_putc(*(v17));\n
                    v26 += 1;\n
                }\n
            }\n
            else if (v16 == 120)\n
            {\n
                v8 = a1;\n
                v9 = v8->field_0;\n
                if (v9 <= 40)\n
                {\n
                    v49 = v8;\n
                    v50 = v9;\n
                    v51 = v50 + v49->field_10;\n
                    v49->field_0 = v50 + 8;\n
                    v7 = v51;\n
                }\n
                else\n
                {\n
                    v52 = v8;\n
                    v53 = v52->field_8;\n
                    v52->field_8 = &v53[2];\n
                    v7 = v53;\n
                }\n
                v21 = *(v7);\n
                cgc_int_to_hex(v21, &v25);\n
                for (v20 = &v25; *(v20); v20 += 1)\n
                {\n
                    cgc_putc(*(v20));\n
                    v26 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v28 = -1;\n
                return v28;\n
            }\n
            v27 += 1;\n
        }\n
    }\n
}\n
", "4205905:sub_402d51": null, "4205920:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4206080:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return v0;\n
}\n
", "4206163:sub_402e53": null, "4206176:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206227:sub_402e93": null, "4206240:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206291:sub_402ed3": null, "4206304:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_islower(a0);\n
    return v0 | cgc_isupper(a0);\n
}\n
", "4206347:sub_402f0b": null, "4206352:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = cgc_isalpha(a0);\n
    return v0 | cgc_isdigit(a0);\n
}\n
", "4206395:sub_402f3b": null, "4206400:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206451:sub_402f73": null, "4206464:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4206555:sub_402fdb": null, "4206560:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4206588:sub_402ffc": null, "4206592:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4206644:sub_403034": null, "4206656:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_403229;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_403229;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_403229;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_403199:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_403229;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_403199;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_403229:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4207213:sub_40326d": null, "4207216:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 10)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4207608:sub_4033f8": null, "4207616:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a1 + v0)); v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4207719:sub_403467": null, "4207728:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a2)\n
            v0 = v1[a1];\n
        if (!(v0 & 1))\n
            break;\n
        v1[a0] = v1[a1];\n
        v1 += 1;\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        v1[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4207901:sub_40351d": null, "4207904:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4208022:sub_403596": null, "4208032:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, char *a2)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v0 = a2;\n
    while (true)\n
    {\n
        v0 -= 1;\n
        if (!v0)\n
            break;\n
        *((a0 + v0)) = a1;\n
    }\n
    *((a0 + v0)) = a1;\n
    return a0;\n
}\n
", "4208120:sub_4035f8": null, "4208128:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4208246:sub_403676": null, "4208256:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4208465:sub_403751": null, "4208480:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v0;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4208563:sub_4037b3": null, "4208576:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        v2[a0] = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v0 == a1)\n
            return v2;\n
        v2[a0] = v0;\n
        v2 += 1;\n
    }\n
}\n
", "4208777:sub_403889": null, "4208784:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); *((a1 + v1)); v1 += 1)\n
        {\n
            a0[v0] = *((a1 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4208946:sub_403932": null, "4208960:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4209192:sub_403a28": null, "4209200:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x18], Other Possible Types: char\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v1 = 0;\n
    if (!a0)\n
        return v4;\n
    v0 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        v4 = v1;\n
        if (v4 >= v0)\n
        {\n
            v2 = 0;\n
            while (true)\n
            {\n
                if (v2 == 1)\n
                    return v4;\n
                v4 = cgc_transmit(a0, v5, v6, v7);\n
                if (v4)\n
                    return v4;\n
            }\n
        }\n
        else\n
        {\n
            v4 = cgc_transmit(a0, v5, v6, v7);\n
            if (v4)\n
                return v4;\n
            v1 = *(&v2) + v1;\n
        }\n
    }\n
}\n
", "4209394:sub_403af2": null, "4209408:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (*(v0) != a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4209524:sub_403b74": null, "4209536:cgc_strtok": "extern struct_0 *cgc_prev_str;\n
extern unsigned int cgc_prev_str_len;\n
extern struct_0 *cgc_prev_str_ptr;\n
extern struct_0 *cgc_token;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3d]\n
    unsigned int v3;  // [bp-0x3c]\n
    char *v4;  // [bp-0x38]\n
    char *v5;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v6;  // [bp-0x28]\n
    char *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v10;  // rdx\n
\n
    v7 = a0;\n
    if (!a1)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (v7)\n
    {\n
        if (cgc_prev_str)\n
        {\n
            cgc_deallocate(a0, a1);\n
            cgc_prev_str = 0;\n
            cgc_prev_str_len = 0;\n
            cgc_prev_str_ptr = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_prev_str)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (cgc_prev_str_ptr >= &cgc_prev_str[cgc_prev_str_len])\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    if (!cgc_prev_str)\n
    {\n
        if (cgc_strlen(v7) > 0x1000)\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_prev_str_len = cgc_strlen(v7);\n
        if (cgc_allocate(a0, a1, v10))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_strcpy(cgc_prev_str, v7);\n
        cgc_prev_str_ptr = cgc_prev_str;\n
    }\n
    v7 = &cgc_prev_str_ptr->field_0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (cgc_strchr(a1, *(v7)))\n
            v2 = v7 < &cgc_prev_str[cgc_prev_str_len];\n
        if (!(v2 & 1))\n
            break;\n
        v7 += 1;\n
    }\n
    if (v7 >= &cgc_prev_str[cgc_prev_str_len])\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v6 = v7;\n
    v1 = v7;\n
    v5 = &v1[cgc_strlen(v7)];\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_strlen(a1))\n
            break;\n
        v4 = cgc_strchr(v6, a1[v3]);\n
        if (v4 && v4 && v4 < v5)\n
            v5 = v4;\n
        v3 += 1;\n
    }\n
    cgc_token = v6;\n
    *(v5) = 0;\n
    cgc_prev_str_ptr = v5 + 1;\n
    v8 = cgc_token;\n
    return v8;\n
}\n
", "4210246:sub_403e46": null, "4210256:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
        else if (!cgc_transmit(a0, a1, v4, v5))\n
        {\n
            v0 = *(&v1) + v0;\n
        }\n
        else\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4210410:sub_403eea": null, "4210416:cgc_strdup": "long long cgc_strdup(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_strlen(a0);\n
    if (cgc_allocate(a0, v4, v5))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0 = *(&v1);\n
    cgc_bzero(v0, cgc_strlen(a0) + 1);\n
    cgc_strcpy(*(&v1), a0);\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4210565:sub_403f85": null, "4210576:cgc_calloc": "long long cgc_calloc(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    *(&v0) = cgc_malloc(a0 * a1);\n
    cgc_memset(*(&v0), 0, a0 * a1);\n
    return *(&v0);\n
}\n
", "4210640:cgc_malloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    char field_8;\n
} struct_2;\n
\n
extern struct_1 *cgc_heap_manager;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    struct_2 *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    struct_0 *v9;  // rax\n
\n
    if (!cgc_heap_manager)\n
    {\n
        cgc_allocate(a0, v6, v7);\n
        cgc_heap_manager = *(&v2);\n
        cgc_heap_manager->field_0 = 0x1000;\n
        cgc_heap_manager->field_10 = 8;\n
        cgc_heap_manager->field_8 = 0x1000 - cgc_heap_manager->field_10;\n
        cgc_allocate(a0, v6, v7, v8);\n
        cgc_memset(cgc_heap_manager->field_18, 0, 0x1000);\n
        v3 = cgc_heap_manager->field_18;\n
        v3->field_0 = 4072;\n
        v3->field_8 = 0;\n
    }\n
    v3 = cgc_heap_manager->field_18;\n
    if (a0 > v3->field_0)\n
    {\n
        cgc_allocate(a0, 0, 0x1000);\n
        if (!v3->field_8)\n
        {\n
            cgc_puts(\"Not enough space available to allocate more heap.  Failure.\");\n
            cgc__terminate(\"Not enough space available to allocate more heap.  Failure.\");\n
        }\n
        v3 = v3->field_8;\n
        v3->field_0 = 4072;\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v9 = v3;\n
        v9->field_0 = v9->field_0 - a0;\n
        v1 = &v3[1].field_0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if ((*((v1 + 8)) & 1))\n
                v0 = *(v1) < a0 + 16;\n
            if (!(v0 & 1))\n
                break;\n
            v1 = v1 + 16 + *(v1);\n
        }\n
        *(v1) = a0;\n
        *((v1 + 8)) = 1;\n
        v4 = v1 + 16;\n
        return v4;\n
    }\n
}\n
", "4211122:sub_4041b2": null, "4211136:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    char v2;  // [bp-0x10]\n
    unsigned long long *v4;  // rax\n
\n
    v1 = a0 - 16;\n
    v1->field_8 = 2;\n
    v0 = &v2 & -0x1000;\n
    v4 = v0;\n
    *(v4) = v1->field_0 + *(v4);\n
    return v0;\n
}\n
", "4211198:sub_4041fe": null, "4211200:cgc_InitRandom": "extern unsigned int g_400000;\n
extern char gen_rate;\n
extern void* last_pkt_time;\n
\n
long long cgc_InitRandom(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x21]\n
    int tmp_15;  // tmp #15\n
    int tmp_17;  // tmp #17\n
    int tmp_16;  // tmp #16\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x16]\n
    unsigned int v4;  // [bp-0xc]\n
    char v5;  // [bp-0x8]\n
    unsigned long long v7;  // rbp\n
    int v9;  // xmm0\n
\n
    v7 = &v5;\n
    last_pkt_time = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (v2)\n
            v0 = &g_400000 < v2;\n
        if (!(v0 & 1))\n
        {\n
            tmp_15 = DivV(tmp_17, tmp_16);\n
            v9 = tmp_15 * (0 CONCAT 0x4000000000000000);\n
            *(&gen_rate) = v9;\n
            v4 = 0;\n
            return v4;\n
        }\n
        cgc_printf(\"What average bit rate do you want the random generator to produce? (1 - @d bps): \", &g_400000, 10, a3, a4);\n
        v1 = cgc_readUntil(&v3, 9, 10);\n
        if (v1 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = cgc_atoi(&v3);\n
    }\n
}\n
", "4211405:sub_4042cd": null, "4211408:cgc_RandomGenerator": "extern unsigned long long cgc_NextPkt;\n
extern unsigned int g_409318;\n
extern unsigned int g_40931c;\n
extern unsigned long long gen_rate;\n
extern unsigned long long last_pkt_time;\n
\n
long long cgc_RandomGenerator()\n
{\n
    int tmp_17;  // tmp #17\n
    int tmp_19;  // tmp #19\n
    int tmp_18;  // tmp #18\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // rsi\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r8\n
    unsigned long long v11;  // r9\n
\n
    if (g_409318)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    cgc_rand_mt();\n
    tmp_17 = DivV(tmp_19, tmp_18);\n
    *(&v2) = tmp_17;\n
    s_18 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=0x409330<64>, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
    v1 = ((0 CONCAT cgc_rand_mt(v6, v7, v8, v9, v10, v11)) /m 1436 >> 32) + 64;\n
    v0 = cgc_rand_mt(v6, v7, v1, 1436, v10, v11);\n
    v0 &= 63;\n
    cgc_NextPkt =L Conv(128->64, ((0x0<64> CONCAT Load(addr=0x409328<64>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
    last_pkt_time = cgc_NextPkt;\n
    g_409318 = v1;\n
    g_40931c = v0;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4211596:sub_40438c": null, "4211600:cgc_InitPoisson": "extern unsigned int g_400000;\n
extern char gen_rate;\n
extern void* last_pkt_time;\n
\n
long long cgc_InitPoisson(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x21]\n
    int tmp_14;  // tmp #14\n
    int tmp_16;  // tmp #16\n
    int tmp_15;  // tmp #15\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x16]\n
    unsigned int v4;  // [bp-0xc]\n
    char v5;  // [bp-0x8]\n
    unsigned long long v7;  // rbp\n
\n
    v7 = &v5;\n
    last_pkt_time = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (v2)\n
            v0 = &g_400000 < v2;\n
        if (!(v0 & 1))\n
        {\n
            tmp_14 = DivV(tmp_16, tmp_15);\n
            *(&gen_rate) = tmp_14;\n
            v4 = 0;\n
            return v4;\n
        }\n
        cgc_printf(\"What average bit rate do you want the poisson generator to produce? (1 - @d bps): \", &g_400000, 10, a3, a4);\n
        v1 = cgc_readUntil(&v3, 9, 10);\n
        if (v1 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = cgc_atoi(&v3);\n
    }\n
}\n
", "4211793:sub_404451": null, "4211808:cgc_CalcDelta": "double cgc_CalcDelta(long long a0)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_28;  // tmp #28\n
    int tmp_29;  // tmp #29\n
    int tmp_26;  // tmp #26\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long v3;  // xmm0lq\n
\n
    v1 = a0;\n
    v0 = v3;\n
    cgc_logf();\n
    tmp_28 = DivV(tmp_29, tmp_26);\n
    return tmp_28;\n
}\n
", "4211893:sub_4044b5": null, "4211904:cgc_PoissonGenerator": "extern unsigned long long cgc_NextPkt;\n
extern unsigned int g_409318;\n
extern unsigned int g_40931c;\n
extern unsigned long long gen_rate;\n
extern unsigned long long last_pkt_time;\n
\n
long long cgc_PoissonGenerator()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rax\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long long v11;  // rdi\n
\n
    if (g_409318)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    v5 = cgc_rand_mt();\n
    cgc_CalcDelta(v5);\n
    v2 = gen_rate;\n
    v1 = ((0 CONCAT cgc_rand_mt(v5, v6, v7, v8, v9, v10)) /m 1436 >> 32) + 64;\n
    v0 = cgc_rand_mt(v11, v6, v1, 1436, v9, v10);\n
    v0 &= 63;\n
    cgc_NextPkt =L Conv(128->64, ((0x0<64> CONCAT Load(addr=0x409328<64>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
    last_pkt_time = cgc_NextPkt;\n
    g_409318 = v1;\n
    g_40931c = v0;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4212070:sub_404566": null, "4212080:cgc_InitManual": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern void* ManualCurrPkt;\n
extern struct_1 *ManualRingBuffer;\n
extern void* last_pkt_time;\n
extern unsigned int repeat;\n
\n
long long cgc_InitManual(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x90]\n
    unsigned long v1;  // [bp-0x88]\n
    unsigned long v2;  // [bp-0x80]\n
    char v3;  // [bp-0x71]\n
    struct_1 *v4;  // [bp-0x70], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x68]\n
    unsigned int v6;  // [bp-0x60]\n
    unsigned int v7;  // [bp-0x5c]\n
    char *v8;  // [bp-0x58]\n
    unsigned int v9;  // [bp-0x4c]\n
    char *v10;  // [bp-0x48]\n
    unsigned long v11;  // [bp-0x40]\n
    struct_0 *v12;  // [bp-0x38]\n
    unsigned int v13;  // [bp-0x2c]\n
    char v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0xc]\n
    int v17;  // xmm0\n
    unsigned int v18;  // eax\n
\n
    v17 = 0;\n
    last_pkt_time = 0;\n
    ManualCurrPkt = 0;\n
    repeat = -1;\n
    while (repeat == -1)\n
    {\n
        cgc_printf(\"Should the packet generator repeat the manually entered packets? (y,n): \", 2, 10, a3, a4);\n
        a2 = 10;\n
        v13 = cgc_readUntil(&v14, 2, 10);\n
        if (v13 == -1)\n
        {\n
            v15 = -1;\n
            return v15;\n
        }\n
        else if (v14 == 121)\n
        {\n
            repeat = 1;\n
        }\n
        else if (v14 == 110)\n
        {\n
            repeat = 0;\n
        }\n
    }\n
    v5 = -1;\n
    while (true)\n
    {\n
        v3 = 1;\n
        if (v5 >= 1)\n
            v3 = 1000 < v5;\n
        if (!(v3 & 1))\n
            break;\n
        cgc_printf(\"How many packets would you like to enter? (@d - @d): \", 1, 1000, a3, a4);\n
        a2 = 10;\n
        v13 = cgc_readUntil(&v14, 10, 10);\n
        if (v13 == -1)\n
        {\n
            v15 = -1;\n
            return v15;\n
        }\n
        v5 = cgc_atoi(&v14);\n
    }\n
    if (cgc_InitRingBuffer(v5, &ManualRingBuffer))\n
    {\n
        v15 = -1;\n
        return v15;\n
    }\n
    v4 = ManualRingBuffer;\n
    cgc_printf(\"Enter the packets, one per line in this format:\\n
\", &ManualRingBuffer, a2, a3, a4);\n
    cgc_printf(\"time since last packet (s, ##.######),length (bytes 64-1500),priority (0-63)\\n
\", &ManualRingBuffer, a2, a3, a4);\n
    while (true)\n
    {\n
        v18 = v5;\n
        v5 = v18 - 1;\n
        if (!v18)\n
        {\n
            v15 = 0;\n
            return v15;\n
        }\n
        v13 = cgc_readUntil(&v14, 18, 10);\n
        if (v13 == -1)\n
        {\n
            v15 = -1;\n
            return v15;\n
        }\n
        if (v13 > 0 && (&v14)[1 + v13] == 10)\n
            (&v14)[1 + v13] = 0;\n
        v12 = &v14;\n
        v10 = cgc_strchr(&v14, 44);\n
        if (!v10)\n
        {\n
            cgc_puts(\"Invalid bytes\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        *(v10) = 0;\n
        v10 += 1;\n
        v8 = cgc_strchr(v10, 44);\n
        if (!v8)\n
        {\n
            cgc_puts(\"Invalid priority\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        *(v8) = 0;\n
        v8 += 1;\n
        v6 = 0;\n
        while (true)\n
        {\n
            v2 = v6;\n
            if (v2 >= cgc_strlen(v12))\n
                break;\n
            if (!cgc_strchr(\"0123456789.\", v12[v6].field_0))\n
            {\n
                cgc_puts(\"Invalid timestamp\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            v6 += 1;\n
        }\n
        cgc_atof(v12);\n
        v11 = v17;\n
        if ((((CmpF(0, v11) & 69) | ((CmpF(0, v11) & 69) >> 6)) & 1) != 1)\n
        {\n
            cgc_puts(\"Invalid timestamp\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        v6 = 0;\n
        while (true)\n
        {\n
            v1 = v6;\n
            if (v1 >= cgc_strlen(v10))\n
                break;\n
            if (!cgc_strchr(\"0123456789\", v10[v6]))\n
            {\n
                cgc_puts(\"Invalid bytes\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            v6 += 1;\n
        }\n
        v9 = cgc_atoi(v10);\n
        if (v9 < 64)\n
        {\n
LABEL_404937:\n
            cgc_puts(\"Invalid bytes\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        if (!(v9 <= 1500))\n
            goto LABEL_404937;\n
        v6 = 0;\n
        while (true)\n
        {\n
            v0 = v6;\n
            if (v0 >= cgc_strlen(v8))\n
                break;\n
            if (!cgc_strchr(\"0123456789\", v8[v6]))\n
            {\n
                cgc_puts(\"Invalid priority\");\n
                v15 = -1;\n
                return v15;\n
            }\n
            v6 += 1;\n
        }\n
        v7 = cgc_atoi(v8);\n
        if (v7 < 0)\n
        {\n
LABEL_4049ea:\n
            cgc_puts(\"Invalid priority\");\n
            v15 = -1;\n
            return v15;\n
        }\n
        if (!(v7 <= 63))\n
            goto LABEL_4049ea;\n
        *(&v17) = v11;\n
        v4->field_0 = v17;\n
        v4->field_8 = v9;\n
        v4->field_c = v7;\n
        v4 = v4->field_10;\n
    }\n
}\n
", "4213319:sub_404a47": null, "4213328:cgc_ManualGenerator": "extern struct_0 *ManualCurrPkt;\n
extern struct_0 *ManualRingBuffer;\n
extern unsigned long long cgc_NextPkt;\n
extern unsigned int g_409318;\n
extern unsigned int g_40931c;\n
extern unsigned long long last_pkt_time;\n
extern unsigned int repeat;\n
\n
long long cgc_ManualGenerator()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (g_409318)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (!ManualCurrPkt)\n
    {\n
        ManualCurrPkt = ManualRingBuffer;\n
    }\n
    else if (ManualCurrPkt == ManualRingBuffer && !repeat)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    cgc_NextPkt =L Conv(128->64, ((0x0<64> CONCAT Load(addr=0x409328<64>, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=Load(addr=0x4092f8<64>, size=8, endness=Iend_LE), size=8, endness=Iend_LE))))<8>\n
    last_pkt_time = cgc_NextPkt;\n
    g_409318 = ManualCurrPkt->field_8;\n
    g_40931c = ManualCurrPkt->field_c;\n
    ManualCurrPkt = ManualCurrPkt->field_10;\n
    v0 = 1;\n
    return v0;\n
}\n
", "4213545:sub_404b29": null, "4213552:cgc_readUntil": "long long cgc_readUntil(char *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x1e]\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
    char *v7;  // rax\n
\n
    v3 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (cgc_receive(a0, a1, a2, v6))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (*(&v1) != 1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (v2 == a2)\n
            break;\n
        v7 = v3;\n
        v3 = v7 + 1;\n
        *(v7) = v2;\n
    }\n
    *(v3) = 0;\n
    v4 = v0;\n
    return v4;\n
}\n
", "4213732:sub_404be4": null, "4213744:cgc_init_mt": "extern unsigned int mt_state;\n
\n
long long cgc_init_mt(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a0;\n
    mt_state = v2;\n
    for (v0 = 1; v0 < 624; v0 = v2)\n
    {\n
        (&mt_state)[v0] = ((&mt_state)[1 + v0] ^ ((&mt_state)[1 + v0] >> 30)) * 1812433253 + v0;\n
        v2 = v0 + 1;\n
    }\n
    return v2;\n
}\n
", "4213875:sub_404c73": null, "4213888:cgc_gen_mt_state": "extern unsigned int mt_state;\n
\n
long long cgc_gen_mt_state()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    for (v2 = 0; v2 < 624; v2 += 1)\n
    {\n
        v0 = (&mt_state)[v2] & 0x80000000;\n
        v1 = v0 + ((&mt_state)[(v2 + 1 >> 31 CONCAT v2 + 1) /m 624 >> 32] & 2147483647);\n
        (&mt_state)[v2] = (&mt_state)[(v2 + 397 >> 31 CONCAT v2 + 397) /m 624 >> 32] ^ (v1 >> 1);\n
        if ((v1 & 1))\n
            (&mt_state)[v2] = (&mt_state)[v2] ^ 2567483615;\n
    }\n
    return v2 + 1;\n
}\n
", "4214096:cgc_rand_mt": "extern unsigned int cgc_idx;\n
extern unsigned int mt_state;\n
\n
long long cgc_rand_mt()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_idx)\n
        cgc_gen_mt_state();\n
    v0 = (&mt_state)[cgc_idx];\n
    v0 ^= (v0 >> 11);\n
    v0 ^= v0 * 128 & 2636928640;\n
    v0 ^= v0 * 0x8000 & 0xefc60000;\n
    v0 ^= (v0 >> 18);\n
    cgc_idx = (cgc_idx + 1 >> 31 CONCAT cgc_idx + 1) /m 624 >> 32;\n
    return v0;\n
}\n
", "4214242:sub_404de2": null, "4214256:cgc_InitQueues": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[24];\n
    char field_28;\n
    char field_29;\n
    char field_2a;\n
    char padding_2b[5];\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
    unsigned long long field_40;\n
} struct_0;\n
\n
extern char g_40732f;\n
extern char g_407374;\n
extern char g_4073ab;\n
extern unsigned int g_4073f0;\n
extern char g_407430;\n
extern char g_407465;\n
extern unsigned int g_40749b;\n
extern unsigned int g_4074cc;\n
extern char g_4074ff;\n
extern unsigned int g_40751f;\n
extern char g_409d0c;\n
extern char g_409d18;\n
extern char *g_409d20;\n
\n
long long cgc_InitQueues(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    int tmp_47;  // tmp #47\n
    int tmp_49;  // tmp #49\n
    int tmp_48;  // tmp #48\n
    char v4;  // [bp-0x46]\n
    char v5;  // [bp-0x45]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    char v8;  // [bp-0x39]\n
    struct_0 *v9;  // [bp-0x38]\n
    char v10;  // [bp-0x2f]\n
    char v12;  // [bp-0x2d]\n
    char v16;  // [bp-0x1c]\n
    char v17;  // [bp-0x1b]\n
    char v18;  // [bp-0x1a]\n
    unsigned int v19;  // [bp-0x10]\n
    unsigned int v20;  // [bp-0xc]\n
    char v21;  // [bp-0x8]\n
    unsigned long long v23;  // rbp\n
    unsigned long v24;  // rcx\n
    unsigned long v25;  // rcx, Other Possible Types: unsigned int\n
    unsigned long v26;  // rcx\n
    unsigned long long v28;  // xmm0lq\n
    int v31;  // xmm0\n
\n
    v23 = &v21;\n
    v17 = 0;\n
    v12 = 0;\n
    v10 = 0;\n
    v8 = 255;\n
    while (true)\n
    {\n
        v24 = v17;\n
        v4 = 1;\n
        if (v24 >= 1)\n
            v4 = 8 < v17;\n
        if (!(v4 & 1))\n
            break;\n
        cgc_printf(\"How many queues (1-8)?: \", 9, 10, v24, a4);\n
        a2 = 10;\n
        v19 = cgc_readUntil(&v18, 9, 10);\n
        if (v19 == -1)\n
        {\n
            v20 = -1;\n
            return v20;\n
        }\n
        v17 = cgc_atoi(&v18);\n
    }\n
    g_409d0c = v17;\n
    g_409d18 = 0;\n
    if (cgc_allocate(\"How many queues (1-8)?: \", 9, 10))\n
    {\n
        cgc_puts(\"Failed to allocate interface queue pointers\");\n
        v20 = -1;\n
        return v20;\n
    }\n
    cgc_bzero(g_409d20, v17 * 8);\n
    v16 = 0;\n
    v25 = v17;\n
    if (v16 >= v25)\n
    {\n
        v5 = 64;\n
        v6 = 0;\n
        while (true)\n
        {\n
            v26 = v17;\n
            if (v6 >= v26)\n
                break;\n
            v5 -= *((*(&g_409d20[8 * v6]) + 41)) - *((*(&g_409d20[8 * v6]) + 40)) + 1;\n
            v6 += 1;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(\"Queue @d:\\n
\", v16, a2, v25, a4);\n
        a1 = 10;\n
        cgc_bzero(&v18, 10);\n
        while (true)\n
        {\n
            v25 = v18 != 110;\n
            if (!(v18 != 121 & v25))\n
            {\n
LABEL_404faa:\n
            }\n
            else\n
            {\n
                cgc_printf(\"  Is queue #@d a priority queue(y,n): \", v16, a2, v25, a4);\n
                a1 = 2;\n
                a2 = 10;\n
                v19 = cgc_readUntil(&v18, 2, 10);\n
                if (v19 == -1)\n
                {\n
                    v20 = -1;\n
                    return v20;\n
                }\n
                if (v18 == 121)\n
                {\n
                    g_409d18 = 1;\n
                    goto LABEL_404faa;\n
                }\n
            }\n
        }\n
    }\n
    if (v5)\n
    {\n
        cgc_printf(\"Not all priority values from @d to @d are accounted for in the queue definitions.\\n
\", 0, 63, v26, a4);\n
        v20 = -1;\n
        return v20;\n
    }\n
    v7 = (0 CONCAT 150000) /m v8;\n
    for (v6 = 0; v6 < v17; v6 += 1)\n
    {\n
        if (g_409d18 && !v6)\n
            goto LABEL_4055db;\n
        v9 = *(&g_409d20[8 * v6]);\n
        v28 = v7;\n
        tmp_47 = DivV(tmp_49, tmp_48);\n
        v31 = xmm0<16> * tmp_47;\n
        v9->field_c = v31;\n
LABEL_4055db:\n
    }\n
    v20 = 0;\n
    return v20;\n
}\n
", "4216313:sub_4055f9": null, "4216320:cgc_InitRingBuffer": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_InitRingBuffer(unsigned long long a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x41]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    struct_0 *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    char v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned long long v10;  // rdx\n
\n
    v6 = 170;\n
    v7 = (0 CONCAT a0) /m v6 + 1;\n
    v5 = 0;\n
    v3 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v5 >= v7)\n
        {\n
            *((v3 + 16)) = *(a1);\n
            v8 = 0;\n
            return v8;\n
        }\n
        else if (!cgc_allocate(a0, 0x1000, v10))\n
        {\n
            cgc_bzero(*(&v4), 0x1000);\n
            if (!v5)\n
                *(a1) = *(&v4);\n
            if (v3)\n
                *((v3 + 16)) = *(&v4);\n
            v2 = 0;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v2 < v6 - 1)\n
                    v0 = v1 < a0 - 1;\n
                if (!(v0 & 1))\n
                    break;\n
                *((*(&v4) + v2 * 24 + 16)) = *(&v4) + (v2 + 1) * 24;\n
                v2 += 1;\n
                v1 += 1;\n
            }\n
            v3 = *(&v4) + v2 * 24;\n
            v5 += 1;\n
        }\n
        else\n
        {\n
            cgc_puts(\"Failed to allocate pkt page\");\n
            v8 = -1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4216684:sub_40576c": null, "4216688:cgc_DestroyRingBuffer": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
extern char g_409d0c;\n
extern unsigned long long g_409d20;\n
\n
long long cgc_DestroyRingBuffer(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    struct_0 *v1;  // [bp-0x30]\n
    struct_0 *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rsi\n
\n
    if (a0 > g_409d0c - 1)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v5 = 170;\n
    v4 = (0 CONCAT *(*((g_409d20 + a0 * 8)))) /m v5 + 1;\n
    v3 = 0;\n
    v1 = *((*((g_409d20 + a0 * 8)) + 64));\n
    for (v2 = v1; v3 < v4; v3 += 1)\n
    {\n
        while (true)\n
        {\n
            v2 = *((v2 + 16));\n
            if (v2 == *((*((g_409d20 + (a0 << 3))) + 64)))\n
                break;\n
            v0 = 0;\n
            if ((v2 & -0x1000) == (*((v2 + 16)) & -0x1000))\n
                v0 = v2 != v1;\n
            if (!(v0 & 1))\n
                break;\n
        }\n
        if (v2 != *((*((g_409d20 + (a0 << 3))) + 64)))\n
            v2 = *((v2 + 16));\n
        cgc_deallocate(a0, v8);\n
        v1 = v2;\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4217036:sub_4058cc": null, "4217040:cgc_DestroyQueues": "extern char g_409d0c;\n
\n
long long cgc_DestroyQueues()\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x8]\n
    unsigned long long v4;  // rbp\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
\n
    v4 = &v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= g_409d0c)\n
        {\n
            cgc_deallocate(v5, v6);\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (!cgc_DestroyRingBuffer(v0))\n
        {\n
            cgc_deallocate(v5, v6);\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4217180:sub_40595c": null, "4217184:cgc_InitReceive": "extern char cgc_NextPkt;\n
extern unsigned long long cgc_max_wall_clock;\n
extern unsigned long long generator;\n
\n
long long cgc_InitReceive(unsigned int a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x16]\n
    unsigned int v4;  // [bp-0xc]\n
    char v5;  // [bp-0x8]\n
    unsigned long long v7;  // rbp\n
\n
    v7 = &v5;\n
    v2 = 0;\n
    cgc_puts(\"The following packet generators are available:\");\n
    cgc_puts(\"  1 - Random\");\n
    cgc_puts(\"  2 - Poisson\");\n
    cgc_puts(\"  3 - Manual\");\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (v2 >= 1)\n
            v0 = 3 < v2;\n
        if (!(v0 & 1))\n
            break;\n
        cgc_printf(\"Which generator would you like to use? (1-3): \", 29, 10, a3, a4);\n
        a1 = 29;\n
        a2 = 10;\n
        v1 = cgc_readUntil(&v3, 29, 10);\n
        if (v1 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = cgc_atoi(&v3);\n
    }\n
    if (v2 != 1)\n
    {\n
        if (v2 != 2)\n
        {\n
            if (v2 != 3)\n
            {\n
                cgc_puts(\"Invalid Generator\");\n
                v4 = -1;\n
                return v4;\n
            }\n
            if (cgc_InitManual(a0, 29, 10, a3, a4))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            generator = cgc_ManualGenerator;\n
        }\n
        else if (!cgc_InitPoisson(a0, 29, 10, a3, a4))\n
        {\n
            generator = cgc_PoissonGenerator;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_InitRandom(a0, 29, 10, a3, a4))\n
        {\n
            generator = cgc_RandomGenerator;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    cgc_max_wall_clock = 0xbff0000000000000;\n
    while (true)\n
    {\n
        if ((((CmpF(0, cgc_max_wall_clock) & 69) | ((CmpF(0, cgc_max_wall_clock) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_bzero(&cgc_NextPkt, 24);\n
            v4 = 0;\n
            return v4;\n
        }\n
        cgc_printf(\"For how long would you like the simulation to run? (1 - 10s): \", a1, a2, a3, a4);\n
        a1 = 9;\n
        a2 = 10;\n
        v1 = cgc_readUntil(&v3, 9, 10);\n
        if (v1 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        cgc_atof(&v3);\n
        cgc_max_wall_clock = 0;\n
    }\n
}\n
", "4217718:sub_405b76": null, "4217728:cgc_RX": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[16];\n
    unsigned int field_18;\n
    char padding_1c[12];\n
    char field_28;\n
    char field_29;\n
    char padding_2a[6];\n
    struct struct_1 *field_30;\n
    struct struct_1 *field_38;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
extern unsigned long long cgc_NextPkt;\n
extern unsigned long long cgc_wall_clock;\n
extern unsigned int g_409318;\n
extern unsigned int g_40931c;\n
extern char g_409d0c;\n
extern unsigned long long g_409d20;\n
\n
long long cgc_RX(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    struct_2 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_2 *v4;  // rax\n
    struct_2 *v5;  // rax\n
    struct_2 *v6;  // rax\n
\n
    for (; generator(); g_409318 = 0)\n
    {\n
        if (!g_409318)\n
            break;\n
        if ((((CmpF(cgc_NextPkt, cgc_wall_clock) & 69) | ((CmpF(cgc_NextPkt, cgc_wall_clock) & 69) >> 6)) & 1) != 1)\n
            break;\n
        for (v1 = 0; v1 < g_409d0c; v1 += 1)\n
        {\n
            v0 = *((g_409d20 + v1 * 8));\n
            if (v0->field_28 <= g_40931c && v0->field_29 >= g_40931c)\n
                break;\n
        }\n
        if (v1 == g_409d0c)\n
        {\n
            cgc_printf(\"Unable to find target queue for packet with priority @d\\n
\", g_40931c, a2, g_409d0c, a4);\n
            v2 = -1;\n
            return v2;\n
        }\n
        else if (!v0->field_4)\n
        {\n
            v0->field_30->field_0 = cgc_NextPkt;\n
            v0->field_30->field_8 = g_409318;\n
            v0->field_30->field_c = g_40931c;\n
            v0->field_38 = v0->field_30->field_10;\n
            v4 = v0;\n
            v4->field_4 = v4->field_4 + 1;\n
        }\n
        else if (v0->field_4 < v0->field_0)\n
        {\n
            v0->field_38->field_0 = cgc_NextPkt;\n
            v0->field_38->field_8 = g_409318;\n
            v0->field_38->field_c = g_40931c;\n
            v0->field_38 = v0->field_38->field_10;\n
            v5 = v0;\n
            v5->field_4 = v5->field_4 + 1;\n
        }\n
        else\n
        {\n
            v6 = v0;\n
            v6->field_18 = v6->field_18 + 1;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218280:sub_405da8": null, "4218288:main": "extern unsigned long long cgc_max_wall_clock;\n
extern unsigned long long cgc_wall_clock;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long long a4)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v1;  // [bp+0x8]\n
    unsigned long long v2;  // [bp+0x10]\n
    unsigned long long v3;  // r9\n
\n
    v0 = 0;\n
    cgc_puts(\"Welcome to the network queuing simulator\");\n
    if (cgc_InitInterface(\"Welcome to the network queuing simulator\", a1, a2, a3, a4, v3, v1, v2))\n
    {\n
        cgc_puts(\"Unable to init interface\\n
\");\n
        cgc__terminate(\"Unable to init interface\\n
\");\n
    }\n
    if (cgc_InitReceive(a0, a1, a2, a3, a4))\n
    {\n
        cgc_puts(\"Unable to init packet generator\\n
\");\n
        cgc__terminate(\"Unable to init packet generator\\n
\");\n
    }\n
    if (cgc_InitQueues(a0, a1, a2, a3, a4))\n
    {\n
        cgc_puts(\"Failed to initialize queues\\n
\");\n
        cgc__terminate(\"Failed to initialize queues\\n
\");\n
    }\n
    do\n
    {\n
        cgc_RX(a0, a1, a2, a3, a4);\n
        cgc_TX(a0, a1, a2, a3, a4, v3);\n
        cgc_wall_clock =L Conv(128->64, ((0x0<64> CONCAT 0x3ee4f8b588e368f1<64>) + Conv(64->128, Load(addr=0x409d30<64>, size=8, endness=Iend_LE))))<8>\n
    } while ((((CmpF(cgc_wall_clock, cgc_max_wall_clock) & 69) | ((CmpF(cgc_wall_clock, cgc_max_wall_clock) & 69) >> 6)) & 1) == 1);\n
    cgc_PrintStats();\n
    cgc_DestroyQueues();\n
    cgc__terminate(a0);\n
    return cgc_InitInterface(a0, a1, a2, a3, a4, v3);\n
}\n
", "4218544:cgc_InitInterface": "extern unsigned int cgc_iface;\n
extern void* cgc_wall_clock;\n
extern unsigned int g_400000;\n
extern unsigned int g_409d04;\n
extern unsigned int g_409d08;\n
extern char g_409d10;\n
\n
long long cgc_InitInterface(unsigned long a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x21]\n
    int tmp_20;  // tmp #20\n
    int tmp_22;  // tmp #22\n
    int tmp_21;  // tmp #21\n
    char v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    char v5;  // [bp-0x8]\n
    unsigned long long v7;  // rbp\n
\n
    v7 = &v5;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (v3)\n
            v0 = &g_400000 < v3;\n
        if (!(v0 & 1))\n
        {\n
            cgc_iface = v3;\n
            cgc_init_mt(v3);\n
            tmp_20 = DivV(tmp_22, tmp_21);\n
            *(&g_409d10) = tmp_20;\n
            cgc_wall_clock = 0;\n
            g_409d04 = 0;\n
            g_409d08 = 0;\n
            v4 = 0;\n
            return v4;\n
        }\n
        cgc_printf(\"What's the interface speed (in bps up to @d bps): \", &g_400000, 10, a3, a4);\n
        v2 = cgc_readUntil(&v1, 11, 10);\n
        if (v2 == -1)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v3 = cgc_atoi(&v1);\n
    }\n
}\n
", "4218789:sub_405fa5": null, "4218800:cgc_TransmitPktFromQueue": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_4;\n
\n
extern unsigned long long cgc_wall_clock;\n
extern unsigned int g_409d04;\n
extern unsigned int g_409d08;\n
extern char g_409d0c;\n
extern unsigned long long g_409d10;\n
extern char g_409d18;\n
extern unsigned long long g_409d20;\n
\n
long long cgc_TransmitPktFromQueue(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    int tmp_64;  // tmp #64\n
    int tmp_66;  // tmp #66\n
    int tmp_65;  // tmp #65\n
    int tmp_110;  // tmp #110\n
    int tmp_112;  // tmp #112\n
    int tmp_111;  // tmp #111\n
    unsigned int v1;  // [bp-0xc]\n
    struct_5 *v4;  // rcx\n
    int v6;  // xmm0\n
    struct_3 *v7;  // rax\n
    struct_2 *v8;  // rax\n
    struct_1 *v9;  // rax\n
    struct_4 *v10;  // rax\n
\n
    if (a0 >= g_409d0c)\n
    {\n
        cgc_puts(\"Invalid queue number\");\n
        v1 = -1;\n
        return v1;\n
    }\n
    v0 = *((*((g_409d20 + a0 * 8)) + 48));\n
    tmp_64 = SubV(tmp_66, tmp_65);\n
    v4 = *((g_409d20 + a0 * 8));\n
    v4->field_20 = (0 CONCAT v4->field_20) + tmp_64;\n
    tmp_110 = DivV(tmp_112, tmp_111);\n
    xmm0<16> = ((t110 + Conv(64->128, Load(addr=0x409d10<64>, size=8, endness=Iend_LE))) + Conv(64->128, Load(addr=0x409d30<64>, size=8, endness=Iend_LE)))\n
    cgc_wall_clock = v6;\n
    v7 = *((g_409d20 + a0 * 8));\n
    v7->field_4 = v7->field_4 - 1;\n
    if (g_409d18 && !a0)\n
        goto LABEL_4060d1;\n
    v8 = *((g_409d20 + a0 * 8));\n
    v8->field_8 = v8->field_8 - v0->field_8;\n
LABEL_4060d1:\n
    v9 = *((g_409d20 + a0 * 8));\n
    v9->field_10 = v9->field_10 + 1;\n
    v10 = *((g_409d20 + a0 * 8));\n
    v10->field_14 = v0->field_8 + v10->field_14;\n
    g_409d04 = g_409d04 + 1;\n
    g_409d08 = v0->field_8 + g_409d08;\n
    v0->field_8 = 0;\n
    v0->field_c = 0;\n
    v0->field_0 = 0;\n
    *((*((g_409d20 + a0 * 8)) + 48)) = v0->field_10;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4219279:sub_40618f": null, "4219280:cgc_ReplinishTokens": "extern char g_409d0c;\n
extern unsigned long long g_409d20;\n
\n
long long cgc_ReplinishTokens()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[4];  // [bp-0x10]\n
\n
    for (v0 = 0; v0 < g_409d0c; v0 += 1)\n
    {\n
        *(&v1[0]) = *((g_409d20 + v0 * 8));\n
        v1[2] = v1[3];\n
    }\n
    return v0;\n
}\n
", "4219366:sub_4061e6": null, "4219376:cgc_uint_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_uint_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = ((0 CONCAT v4) /m 10 >> 32) + 48;\n
        v4 = (0 CONCAT v4) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v7 = v0;\n
        v0 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v1 -= 1;\n
        v3->field_0 = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4219567:sub_4062af": null, "4219568:cgc_print_uint": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_print_uint(unsigned int a0, unsigned long a1, unsigned long a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x50]\n
    char v1;  // [bp-0x40]\n
    struct_0 *v2;  // [bp-0x20]\n
\n
    v2 = &v1;\n
    cgc_strncpy(&v1, a0, 31);\n
    v0 = &v1;\n
    cgc_uint_to_str(a1, &v0[cgc_strlen(&v1)]);\n
    return cgc_printf(\"@s\\n
\", v2, 31, a3, a4);\n
}\n
", "4219671:sub_406317": null, "4219680:cgc_PrintStats": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
extern unsigned int g_40787d;\n
extern unsigned int g_409d04;\n
extern char g_409d0c;\n
extern unsigned long long g_409d20;\n
\n
long long cgc_PrintStats(unsigned long a0, unsigned int a1, struct struct_0 **a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_1 *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    struct struct_0 **v5;  // rcx\n
    struct struct_0 **v6;  // rcx\n
    struct struct_0 **v7;  // rcx\n
    struct struct_0 **v8;  // rcx\n
    unsigned int v9[7];  // rcx\n
\n
    cgc_printf(\"cgc_wall_clock: @f (s)\\n
\", a1, a2, a3, a4);\n
    for (v3 = 0; v3 < g_409d0c; v3 += 1)\n
    {\n
        cgc_printf(\"Queue @d\\n
\", v3, a2, g_409d0c, a4);\n
        v5 = v3;\n
        cgc_printf(\"  Pkts Transmitted:       @d\\n
\", *((*((g_409d20 + v5 * 8)) + 16)), a2, v5, a4);\n
        v6 = v3;\n
        cgc_printf(\"  Pkts Dropped:           @d\\n
\", *((*((g_409d20 + v6 * 8)) + 24)), a2, v6, a4);\n
        v7 = v3;\n
        if (*((*((g_409d20 + (v7 << 3))) + 16)))\n
            cgc_printf(\"  Average Latency (s):    @f\\n
\", a1, a2, v3, a4);\n
        else\n
            cgc_printf(\"  Average Latency (s):    @f\\n
\", a1, a2, v7, a4);\n
        v8 = v3;\n
        cgc_printf(\"  Enqueued Pkts:          @d\\n
\", *((*((g_409d20 + v8 * 8)) + 4)), a2, v8, a4);\n
        v1 = 0;\n
        v0 = *((*((g_409d20 + v3 * 8)) + 48));\n
        v2 = 0;\n
        while (true)\n
        {\n
            a2 = v3;\n
            v9 = *((g_409d20 + a2 * 8));\n
            if (v2 >= v9[1])\n
                break;\n
            v1 = v0->field_8 + v1;\n
            v0 = v0->field_10;\n
            v2 += 1;\n
        }\n
        cgc_printf(\"  Queue Depth (bytes):    @d\\n
\", v1, a2, v9, a4);\n
    }\n
    cgc_printf(\"Interface Stats\\n
\", a1, a2, g_409d0c, a4);\n
    return cgc_print_uint(4225149, g_409d04, v3, g_409d0c, a4);\n
}\n
", "4220149:sub_4064f5": null, "4220160:cgc_TX": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[36];\n
    struct struct_0 *field_30;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned long long cgc_max_wall_clock;\n
extern unsigned long long cgc_wall_clock;\n
extern char g_409d0c;\n
extern char g_409d18;\n
extern struct_3 *g_409d20;\n
\n
long long cgc_TX(unsigned int a0, unsigned int a1, unsigned long a2, unsigned int a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_1 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    cgc_ReplinishTokens();\n
    if (g_409d18)\n
    {\n
        while (g_409d20->field_0->field_4)\n
        {\n
            if (cgc_TransmitPktFromQueue(0))\n
            {\n
                cgc_puts(\"Packet transmission failed\");\n
                v2 = -1;\n
                return v2;\n
            }\n
            else if ((((CmpF(cgc_wall_clock, cgc_max_wall_clock) & 69) | ((CmpF(cgc_wall_clock, cgc_max_wall_clock) & 69) >> 6)) & 1) == 1)\n
            {\n
                cgc_RX(0, a1, a2, a3, a4);\n
            }\n
            else\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
    }\n
    for (v0 = 0; v0 < g_409d0c; v0 += 1)\n
    {\n
        if (g_409d18 && !v0)\n
            goto LABEL_406673;\n
        v1 = &g_409d20[v0].field_0;\n
        while (v1->field_4)\n
        {\n
            if (v1->field_30->field_8 > v1->field_8)\n
                break;\n
            if (cgc_TransmitPktFromQueue(v0))\n
            {\n
                cgc_puts(\"Packet transmission failed\");\n
                v2 = -1;\n
                return v2;\n
            }\n
            if ((((CmpF(cgc_wall_clock, cgc_max_wall_clock) & 69) | ((CmpF(cgc_wall_clock, cgc_max_wall_clock) & 69) >> 6)) & 1) != 1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            cgc_RX(a0, a1, a2, a3, a4);\n
        }\n
LABEL_406673:\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4220568:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_logf": null, "5242912:cgc_transmit": null, "5242920:cgc_allocate": null, "5242928:cgc_rint": null, "5242936:cgc_deallocate": null, "5242944:cgc_log10": null, "5242952:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}