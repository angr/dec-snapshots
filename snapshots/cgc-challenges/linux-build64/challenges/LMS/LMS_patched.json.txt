{"4202496:_init": "extern struct_0 *g_405970;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_405970;\n
    if (g_405970)\n
        v1 = g_405970();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_405990;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_405990;\n
    goto *(4217240);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4217216);\n
}\n
", "4202656:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202693:sub_4020c5": null, "4202694:sub_4020c6": null, "4202704:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_405968;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202745:sub_4020f9": null, "4202752:register_tm_clones": "extern unsigned long long g_405978;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202809:sub_402139": null, "4202816:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_405980;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_405980)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202869:sub_402175": null, "4202873:sub_402179": null, "4202880:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202889:sub_402189": null, "4202896:cgc_promptc": "long long cgc_promptc(unsigned long long a0, unsigned long a1, unsigned long long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (cgc_sendall(1, a2, cgc_strlen(a2)) < 0)\n
        cgc__terminate(1);\n
    v1 = cgc_recvline(0, a0, a1);\n
    if (v1 >= 0)\n
        return v1;\n
    if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
        cgc__terminate(1);\n
    v1 = cgc__terminate(1);\n
    return v1;\n
}\n
", "4203057:sub_402231": null, "4203072:cgc_sendall": "long long cgc_sendall(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
        else if (!cgc_transmit(a0, a1, a2, v7))\n
        {\n
            v3 = v1 + v3;\n
            v0 = v1 + v0;\n
            v2 -= v1;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4203270:sub_402306": null, "4203280:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4203339:sub_40234b": null, "4203344:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
long long cgc_recvline(unsigned long long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v3)\n
    {\n
        while (v2)\n
        {\n
            v3 += 1;\n
            if (cgc_receive(a0, a1, a2, v7))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v0 += 1;\n
            v2 -= 1;\n
            if (*((v3 - 1)) == 10)\n
                break;\n
        }\n
        if (*((v3 - 1)) != 10)\n
        {\n
            v5 = -2;\n
            return v5;\n
        }\n
        *((v3 - 1)) = 0;\n
        v5 = v0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4203598:sub_40244e": null, "4203600:cgc_sendline": "long long cgc_sendline(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
\n
    v0 = cgc_sendall(a0, a1, a2);\n
    if (v0 < 0)\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    else if (!cgc_transmit(a0, a1, a2, v3))\n
    {\n
        v0 += 1;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4203725:sub_4024cd": null, "4203728:cgc_recv": "long long cgc_recv(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v5 = v0;\n
            return v5;\n
        }\n
        v3 += 1;\n
        if (cgc_receive(a0, a1, a2, v7))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v0 += 1;\n
        v2 -= 1;\n
    }\n
}\n
", "4203923:sub_402593": null, "4203936:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a1;\n
    for (v0 = a0; *(v1); v1 += 1)\n
    {\n
        *(v0) = *(v1);\n
        v0 += 1;\n
    }\n
    v3 = v0;\n
    v0 = v3 + 1;\n
    *(v3) = 0;\n
    return v0 - a0 - 1;\n
}\n
", "4204045:sub_40260d": null, "4204048:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    v2 = a1;\n
    v1 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - a0 < a2)\n
            v0 = *(v2);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(v2);\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
    v4 = v1;\n
    v1 = v4 + 1;\n
    *(v4) = 0;\n
    return -1 + v1 - a0;\n
}\n
", "4204206:sub_4026ae": null, "4204208:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    cgc_strcpy(v0, a1);\n
    return a0;\n
}\n
", "4204285:sub_4026fd": null, "4204288:cgc_streq": "long long cgc_streq(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x22]\n
    char v1;  // [bp-0x21]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(v2);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(v2))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(v2);\n
    v4 = v0 & 1;\n
    return v4;\n
}\n
", "4204469:sub_4027b5": null, "4204480:cgc_startswith": "long long cgc_startswith(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
        {\n
            v3 = !*(v1);\n
            return v3;\n
        }\n
        if (*(v2) != *(v1))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
}\n
", "4204634:sub_40285a": null, "4204640:cgc_uint2str": "long long cgc_uint2str(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rcx\n
    unsigned long v7;  // rcx\n
\n
    v3 = a2;\n
    v2 = 0;\n
    if (a1 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = v3;\n
    do\n
    {\n
        v2 += 1;\n
        v1 = (0 CONCAT v1) /m 10;\n
    } while (v1 > 0);\n
    if (v2 >= a1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v6 = v2;\n
    v2 = v6 - 1;\n
    v6[a0] = 0;\n
    do\n
    {\n
        v0 = (0 CONCAT v3) /m 10 >> 32;\n
        v7 = v2;\n
        v2 = v7 - 1;\n
        *((a0 + v7)) = v0 + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
    } while (v3 > 0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4204850:sub_402932": null, "4204864:cgc_int2str": "long long cgc_int2str(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // rcx\n
    unsigned int v8;  // eax\n
    unsigned long v10;  // rcx\n
    unsigned long v11;  // rcx\n
    unsigned int v12;  // eax\n
\n
    v3 = a2;\n
    v2 = 0;\n
    if (a1 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (v3 >= 0)\n
    {\n
        v3 *= -1;\n
    }\n
    else if (a1 >= 3)\n
    {\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        v6[a0] = 45;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = v3;\n
    do\n
    {\n
        v2 += 1;\n
        v8 = v1;\n
        v1 = (v8 >> 31 CONCAT v8) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v10 = v2;\n
    v2 = v10 - 1;\n
    *((a0 + v10)) = 0;\n
    do\n
    {\n
        v0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) * -1;\n
        v11 = v2;\n
        v2 = v11 - 1;\n
        *((a0 + v11)) = v0 + 48;\n
        v12 = v3;\n
        v3 = (v12 >> 31 CONCAT v12) /m 10;\n
    } while (v3 < 0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4205143:sub_402a57": null, "4205152:cgc_str2uint": "long long cgc_str2uint(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    v1 = 10;\n
    if (!a0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (a0[v0] < 48)\n
        {\n
LABEL_402aef:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(a0[v0] <= 57))\n
                goto LABEL_402aef;\n
            v2 *= 10;\n
            v2 = a0[v0] - 48 + v2;\n
        }\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205330:sub_402b12": null, "4205344:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = a1;\n
    }\n
    return a0;\n
}\n
", "4205421:sub_402b6d": null, "4205424:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
    }\n
    return a0;\n
}\n
", "4205507:sub_402bc3": null, "4205520:cgc_b2hex": "long long cgc_b2hex(unsigned long a0, char a1[3])\n
{\n
    if ((a0 >> 4) < 10)\n
        a1[0] = (a0 >> 4) + 48;\n
    else\n
        a1[0] = (a0 >> 4) - -55;\n
    if ((a0 & 15) < 10)\n
        a1[1] = (a0 & 15) + 48;\n
    else\n
        a1[1] = (a0 & 15) - -55;\n
    a1[2] = 0;\n
    return a1;\n
}\n
", "4205670:sub_402c66": null, "4205680:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) == a1)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4205778:sub_402cd2": null, "4205792:cgc___umoddi3": "long long cgc___umoddi3(unsigned long a0, unsigned long a1)\n
{\n
    return a0 - a1 * (a0 >> 31 CONCAT a0) /m a1;\n
}\n
", "4205828:sub_402d04": null, "4205840:cgc_sleep": "long long cgc_sleep(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
\n
    v0 = a0;\n
    v1 = 0;\n
    return cgc_fdwait(a0, v3, v4, v5, v6);\n
}\n
", "4205892:sub_402d44": null, "4205904:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0[a0] == v0[a1])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206020:sub_402dc4": null, "4206032:cgc_checkheap": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern struct_0 *cgc_allocated;\n
extern struct_0 *cgc_freed;\n
\n
long long cgc_checkheap()\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    for (v1 = cgc_freed; v1->field_8 != cgc_freed; v1 = v1->field_8)\n
    {\n
        for (v0 = cgc_allocated; *((v0 + 8)) != cgc_allocated; v0 = *((v0 + 8)))\n
        {\n
            if (v1 < (v0 + *((v0 + 16))) && v0 < &v1->padding_0[v1->field_10])\n
            {\n
                if (cgc_sendline(1, \"corrupt\", 7) < 0)\n
                    cgc__terminate(1);\n
                cgc__terminate(1);\n
            }\n
        }\n
    }\n
    return v1->field_8;\n
}\n
", "4206247:sub_402ea7": null, "4206256:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_allocated;\n
extern unsigned int cgc_curleft;\n
extern struct_0 *cgc_freed;\n
extern char cgc_heapinit_done;\n
extern struct_0 *cgc_lastpage;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    if (!cgc_heapinit_done)\n
        cgc_heapinit();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = cgc_freed;\n
    v2 += 24;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((v1 + 16)) < v2)\n
            v0 = *((v1 + 8)) != cgc_freed;\n
        if (!(v0 & 1))\n
            break;\n
        v1 = v1->field_8;\n
    }\n
    if (*((v1 + 16)) >= v2)\n
    {\n
        cgc_remove(v1);\n
        cgc_insert(cgc_allocated, v1);\n
        v3 = v1 + 24;\n
        return v3;\n
    }\n
    else if (v2 > cgc_curleft)\n
    {\n
        if (cgc_curleft > 24)\n
        {\n
            v1 = cgc_lastpage;\n
            *((v1 + 16)) = cgc_curleft;\n
            cgc_insert(cgc_freed, v1);\n
        }\n
        if (cgc_allocate(cgc_freed, v5, v6))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        *((v1 + 16)) = v2;\n
        cgc_insert(cgc_allocated, v1);\n
        cgc_lastpage = v1 + v2;\n
        if (!(v2 & 4095))\n
            cgc_curleft = 0;\n
        else\n
            cgc_curleft = 0x1000 - (v2 & 4095);\n
        v3 = v1 + 24;\n
        return v3;\n
    }\n
    else\n
    {\n
        v1 = cgc_lastpage;\n
        *((v1 + 16)) = v2;\n
        cgc_lastpage = &cgc_lastpage->padding_0[v2];\n
        cgc_curleft = cgc_curleft - v2;\n
        cgc_insert(cgc_allocated, v1);\n
        v3 = v1 + 24;\n
        return v3;\n
    }\n
}\n
", "4206802:sub_4030d2": null, "4206816:cgc_remove": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long cgc_remove(struct_1 *a0)\n
{\n
    a0->field_0->field_8 = a0->field_8;\n
    a0->field_8->field_0 = a0->field_0;\n
    a0->field_8 = 0;\n
    a0->field_0 = 0;\n
    return a0;\n
}\n
", "4206886:sub_403126": null, "4206896:cgc_insert": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_insert(unsigned long long *a0, struct_1 *a1)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
\n
    v0 = a1;\n
    a1->field_8 = a0;\n
    a1->field_0 = *(a0);\n
    a1->field_0->field_8 = a1;\n
    *(a0) = a1;\n
    return a0;\n
}\n
", "4206962:sub_403172": null, "4206976:cgc_calloc": "long long cgc_calloc(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v0) = cgc_malloc(a0);\n
    if (!*(&v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_memset(*(&v0), 0, a0);\n
    v1 = *(&v0);\n
    return v1;\n
}\n
", "4207057:sub_4031d1": null, "4207072:cgc_free": "extern unsigned long long *cgc_freed;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned long long v2;  // rax\n
\n
    if (a0)\n
    {\n
        v0 = a0 - 24;\n
        cgc_remove(v0);\n
        v2 = cgc_insert(cgc_freed, v0);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207143:sub_403227": null, "4207152:cgc___stack_cookie_init": "long long cgc___stack_cookie_init()\n
{\n
    unsigned long long v1;  // rdi\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v4 = cgc_random(v1, v2, v3);\n
    if (!v4)\n
        return v4;\n
    if (cgc_sendline(1, \"The essence of chaos.\", 21) < 0)\n
        cgc__terminate(1);\n
    v4 = cgc__terminate(1);\n
    return v4;\n
}\n
", "4207239:sub_403287": null, "4207248:cgc___stack_cookie_fail": "long long cgc___stack_cookie_fail()\n
{\n
    unsigned long long v1;  // rcx\n
    unsigned long long v2;  // r8\n
    unsigned long long v3;  // r9\n
\n
    if (cgc_sendline(1, \"Friend is someone to share the last cookie with.\", 48) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
    return cgc_heapinit(1, \"Friend is someone to share the last cookie with.\", 48, v1, v2, v3);\n
}\n
", "4207312:cgc_heapinit": "extern struct_0 *cgc_allocated;\n
extern unsigned long long cgc_allocatedc[2];\n
extern struct_0 *cgc_freed;\n
extern unsigned long long cgc_freedc[2];\n
extern char cgc_heapinit_done;\n
\n
long long cgc_heapinit()\n
{\n
    cgc_allocated = &cgc_allocatedc[0];\n
    cgc_freed = &cgc_freedc[0];\n
    cgc_allocated->field_8 = cgc_allocated;\n
    cgc_allocated->field_0 = cgc_allocated;\n
    cgc_freed->field_8 = cgc_freed;\n
    cgc_freed->field_0 = cgc_freed;\n
    cgc_heapinit_done = 1;\n
    return cgc_freed;\n
}\n
", "4207423:sub_40333f": null, "4207424:cgc_find_session": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned short field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_head;\n
\n
long long cgc_find_session(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_head;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((v0 + 8)) != a0)\n
        {\n
            v0 = *(v0);\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4207513:sub_403399": null, "4207520:cgc_new_session": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_new_session(unsigned short a0[11])\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned long long v2;  // rax\n
\n
    v0 = 0;\n
    v0 = cgc_calloc(40);\n
    if (!v0)\n
    {\n
        if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v2 = cgc_calloc(a0[10]);\n
    v0->field_10 = v2;\n
    if (!v2)\n
    {\n
        if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    v0->field_8 = a0[8];\n
    v0->field_a = a0[10];\n
    return v0;\n
}\n
", "4207745:sub_403481": null, "4207760:cgc_add_session": "extern struct_0 *cgc_head;\n
\n
long long cgc_add_session(unsigned short a0[11])\n
{\n
    struct struct_0 **v0;  // [bp-0x20]\n
    struct struct_0 **v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = &cgc_head->field_0;\n
    if (!cgc_head)\n
    {\n
        cgc_head = cgc_new_session(a0);\n
        v1 = &cgc_head->field_0;\n
        return v1;\n
    }\n
    *(v0) = cgc_new_session(a0);\n
    v1 = *(v0);\n
    return v1;\n
}\n
", "4207869:sub_4034fd": null, "4207872:cgc_delete_session": "typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned long long field_10;\n
    char padding_18[8];\n
    struct struct_1 *field_20;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    struct struct_5 *field_0;\n
    unsigned short field_8;\n
    char padding_a[6];\n
    unsigned int field_10;\n
    char padding_14[12];\n
    struct struct_1 *field_20;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    struct struct_4 *field_0;\n
    struct struct_3 *field_8;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_3;\n
\n
extern struct_2 *cgc_head;\n
extern unsigned int cgc_outstanding;\n
\n
long long cgc_delete_session(unsigned long a0)\n
{\n
    struct_2 *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_4 *v2;  // [bp-0x20]\n
    struct_5 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    struct_2 *v5;  // rax, Other Possible Types: unsigned long\n
\n
    v5 = cgc_head;\n
    v3 = &cgc_head->field_0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (*((v3 + 8)) == a0)\n
            break;\n
        v0 = v3;\n
        v5 = *(v3);\n
        v3 = v5;\n
    }\n
    if (v3 == cgc_head)\n
        cgc_head = *(v3);\n
    if (v0)\n
        *(v0) = *(v3);\n
    v1 = *((v3 + 32));\n
    while (true)\n
    {\n
        v2 = &v1->field_0;\n
        if (!v2)\n
            break;\n
        v1 = v2->field_0;\n
        cgc_free(*(&v2->field_8->field_18));\n
        cgc_free(v2->field_8);\n
        cgc_free(v2);\n
    }\n
    cgc_free(*((v3 + 16)));\n
    cgc_free(v3);\n
    v5 = cgc_outstanding - 1;\n
    cgc_outstanding = v5;\n
    return v5;\n
}\n
", "4208151:sub_403617": null, "4208160:cgc_add_msg": "typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[18];\n
    unsigned short field_12;\n
    char padding_14[2];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[10];\n
    unsigned short field_a;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    struct struct_2 *field_20;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
    struct struct_0 *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[18];\n
    unsigned short field_12;\n
    char padding_14[2];\n
    unsigned short field_16;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
long long cgc_add_msg(struct_0 *a0, struct_4 *a1)\n
{\n
    char v0;  // [bp-0x41]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned long long v4[2];  // [bp-0x30]\n
    struct_2 *v5;  // [bp-0x28], Other Possible Types: unsigned long, struct_3 *\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v5 = 0;\n
    v4[0] = 0;\n
    v3 = 0;\n
    v1 = 0;\n
    if (a0->field_12 < a1->field_a && !*((a1->field_10 + a0->field_12)))\n
    {\n
        v4[0] = cgc_calloc(16);\n
        if (!v4)\n
        {\n
            if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
                cgc__terminate(1);\n
            cgc__terminate(1);\n
        }\n
        v4[1] = a0;\n
        v4[0] = 0;\n
        if (!a1->field_20)\n
        {\n
            a1->field_20 = &v4[0];\n
        }\n
        else\n
        {\n
            for (v5 = a1->field_20; v5->field_0; v5 = v5->field_0);\n
            *(v5) = v4;\n
        }\n
        *((a1->field_10 + a0->field_12)) = 1;\n
        a1->field_18 = a0->field_16 + a1->field_18;\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2 < a1->field_a)\n
                v0 = *((a1->field_10 + v2));\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
        }\n
        if (v2 != a1->field_a)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v3 = cgc_calloc(a1->field_18);\n
        if (!v3)\n
        {\n
            if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
                cgc__terminate(1);\n
            cgc__terminate(1);\n
        }\n
        for (v2 = 0; v2 < a1->field_a; v2 += 1)\n
        {\n
            for (v5 = &a1->field_20->field_0; v5; v5 = v5->field_0)\n
            {\n
                if (v5->field_8->field_12 == v2)\n
                {\n
                    cgc_memcpy(v3 + v1, *((*((v5 + 8)) + 24)), *((*((v5 + 8)) + 22)));\n
                    v1 = *((*((v5 + 8)) + 22)) + v1;\n
                    break;\n
                }\n
            }\n
        }\n
        v6 = v3;\n
        return v6;\n
    }\n
    cgc_free(*(&a0->field_18));\n
    cgc_free(a0);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4208904:sub_403908": null, "4208912:cgc_process_msg": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    char padding_a[14];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
} struct_0;\n
\n
long long cgc_process_msg(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    struct_1 *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v3;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = 0;\n
    v1 = cgc_find_session(a0->field_10);\n
    if (!v1)\n
        v1 = cgc_add_session(a0);\n
    v3 = cgc_add_msg(a0, v1);\n
    v0 = v3;\n
    if (!v3)\n
        return v3;\n
    if (cgc_sendall(1, v0, *((v1 + 24))) < 0)\n
        cgc__terminate(1);\n
    cgc_free(v0);\n
    v3 = cgc_delete_session(*((v1 + 8)));\n
    return v3;\n
}\n
", "4209069:sub_4039ad": null, "4209072:cgc_recv_msg": "typedef struct struct_0 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_recv_msg()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned long long v2;  // rax\n
\n
    v0 = cgc_calloc(32);\n
    if (!v0)\n
    {\n
        if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (cgc_recv(0, v0, 24) < 0)\n
    {\n
        if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (v0->field_16 >= 1 && v0->field_16 <= 0x100)\n
        goto LABEL_403aa6;\n
    if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
LABEL_403aa6:\n
    v2 = cgc_calloc(v0->field_16);\n
    v0->field_18 = v2;\n
    if (!v2)\n
    {\n
        if (cgc_sendline(1, \"ROFL FALAFELS!\", 14) < 0)\n
            cgc__terminate(1);\n
        cgc__terminate(1);\n
    }\n
    if (cgc_recv(0, v0->field_18, v0->field_16) >= 0)\n
        return v0;\n
    if (cgc_sendline(1, \"You didn't say the magic word.\", 30) < 0)\n
        cgc__terminate(1);\n
    cgc__terminate(1);\n
    return v0;\n
}\n
", "4209497:sub_403b59": null, "4209504:cgc_check_number": "long long cgc_check_number(unsigned long long *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x19]\n
\n
    v0 = 0;\n
    if ((*(a0) & 15) != (*(a1) & 15))\n
        return v0 & 1;\n
    v0 = 0;\n
    if ((*(a0) >> 4 & 15) == (*(a1) >> 4 & 15))\n
    {\n
        v0 = 0;\n
        if ((*(a0) >> 8 & 15) == (*(a1) >> 8 & 15))\n
        {\n
            v0 = 0;\n
            if ((*(a0) >> 12 & 15) == (*(a1) >> 12 & 15))\n
            {\n
                v0 = 0;\n
                if ((*(a0) >> 16 & 15) == (*(a1) >> 16 & 15))\n
                {\n
                    v0 = 0;\n
                    if ((*(a0) >> 20 & 15) == (*(a1) >> 20 & 15))\n
                    {\n
                        v0 = 0;\n
                        if ((*(a0) >> 24 & 15) == (*(a1) >> 24 & 15))\n
                        {\n
                            v0 = 0;\n
                            if ((*(a0) >> 28 & 15) == (*(a1) >> 28 & 15))\n
                            {\n
                                v0 = 0;\n
                                if ((*(a0) >> 32 & 15) == (*(a1) >> 32 & 15))\n
                                {\n
                                    v0 = 0;\n
                                    if ((*(a0) >> 36 & 15) == (*(a1) >> 36 & 15))\n
                                    {\n
                                        v0 = 0;\n
                                        if ((*(a0) >> 40 & 15) == (*(a1) >> 40 & 15))\n
                                        {\n
                                            v0 = 0;\n
                                            if ((*(a0) >> 44 & 15) == (*(a1) >> 44 & 15))\n
                                            {\n
                                                v0 = 0;\n
                                                if ((*(a0) >> 48 & 15) == (*(a1) >> 48 & 15))\n
                                                {\n
                                                    v0 = 0;\n
                                                    if ((*(a0) >> 52 & 15) == (*(a1) >> 52 & 15))\n
                                                        v0 = (*(a0) >> 56 & 15) == (*(a1) >> 56 & 15);\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4210217:sub_403e29": null, "4210224:main": "extern unsigned int cgc_outstanding;\n
\n
int main(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned long long v1;  // [bp-0x28]\n
    unsigned long long *v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v5 = 0;\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 216172784046404401;\n
    v2 = cgc_recv_msg();\n
    cgc_outstanding = *(v2) >> 60;\n
    do\n
    {\n
        if (cgc_check_number(v2, &v1))\n
            cgc_process_msg(v2);\n
        v0 = 0;\n
        if (cgc_outstanding)\n
        {\n
            v2 = cgc_recv_msg();\n
            v0 = v2;\n
        }\n
    } while ((v0 & 1));\n
    return 0;\n
}\n
", "4210384:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_random": null, "5242920:cgc_allocate": null, "5242928:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}