{"4214784:_init": "extern struct_0 *g_4112f8;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_4112f8;\n
    if (g_4112f8)\n
        v1 = g_4112f8();\n
    return v1;\n
}\n
", "4214816:sub_405020": "extern unsigned long long g_411310;\n
\n
long long sub_405020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_411310;\n
    goto *(4264728);\n
}\n
", "4214828:sub_40502c": null, "4214832:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4214848:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4214864:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4214880:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4214896:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4214912:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4214928:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4214944:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4214960:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4214976:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4214992:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4215008:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4264672);\n
}\n
", "4215024:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4215061:sub_405115": null, "4215062:sub_405116": null, "4215072:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_4112f0;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4215113:sub_405149": null, "4215120:register_tm_clones": "extern unsigned long long g_411300;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4215177:sub_405189": null, "4215184:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_4112e0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_4112e0)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4215237:sub_4051c5": null, "4215241:sub_4051c9": null, "4215248:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4215257:sub_4051d9": null, "4215264:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215315:sub_405213": null, "4215328:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215379:sub_405253": null, "4215392:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215443:sub_405293": null, "4215456:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4215529:sub_4052e9": null, "4215536:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4215609:sub_405339": null, "4215616:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215667:sub_405373": null, "4215680:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4215740:sub_4053bc": null, "4215744:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4215804:sub_4053fc": null, "4215808:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4215899:sub_40545b": null, "4215904:_ZN5CUtil6StringC1Ev": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::__ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = operator new[](1);\n
    a0->field_0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4215964:sub_40549c": null, "4215968:_ZN5CUtil6StringC1ERKS0_": "long long CUtil::String::__ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4216018:sub_4054d2": null, "4216032:_ZN5CUtil6String11SetInternalERKS0_": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::SetInternal(struct_0 *a0, unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v2;  // rax\n
\n
    if (a0->field_0)\n
    {\n
        v0 = &a0->field_0->field_0;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    a0->field_8 = a1[1];\n
    a0->field_0 = operator new[](a0->field_8 + 1);\n
    cgc_memcpy(a0->field_0, a1[0], a0->field_8, a1);\n
    v2 = a0->field_0;\n
    v2[a0->field_8] = 0;\n
    return v2;\n
}\n
", "4216180:sub_405574": null, "4216192:_ZN5CUtil6StringC2EPKc": "long long CUtil::String::__base_ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4216242:sub_4055b2": null, "4216256:_ZN5CUtil6String11SetInternalEPKc": "long long CUtil::String::SetInternal(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v4;  // rcx\n
    unsigned long v5;  // rax\n
\n
    if (*(a0))\n
    {\n
        v0 = *(a0);\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    if (!a1)\n
    {\n
        *(a0) = operator new[](1);\n
        *(*(a0)) = 0;\n
        *((a0 + 8)) = 0;\n
        return a0;\n
    }\n
    *((a0 + 8)) = cgc_strlen(a1);\n
    v4 = operator new[](*((a0 + 8)) + 1);\n
    v5 = a0;\n
    *(a0) = v4;\n
    cgc_memcpy(*(v5), a1, *((v5 + 8)), v4);\n
    *((*(a0) + *((a0 + 8)))) = 0;\n
    return *(a0);\n
}\n
", "4216455:sub_405687": null, "4216464:_ZN5CUtil6StringD1Ev": "long long CUtil::String::__dtor__(unsigned long long a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4216547:sub_4056e3": null, "4216560:_ZNK5CUtil6StringeqERKS0_": "long long CUtil::String::operator== const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0[1] != a1[1])\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = !cgc_memcmp(a0[0], a1[0], a0[1], a1);\n
    return v0 & 1;\n
}\n
", "4216659:sub_405753": null, "4216672:_ZNK5CUtil6StringneERKS0_": "long long CUtil::String::operator!= const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    return (CUtil::String::operator== const(a0, a1) ^ 255) & 1;\n
}\n
", "4216714:sub_40578a": null, "4216720:_ZN5CUtil6StringaSERKS0_": "long long CUtil::String::operator=(void* a0, unsigned long long a1[2])\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4216755:sub_4057b3": null, "4216768:_ZN5CUtil6StringaSEPKc": "long long CUtil::String::operator=(unsigned int a0, unsigned int a1)\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4216803:sub_4057e3": null, "4216816:_ZNK5CUtil6StringplERKS0_": "long long CUtil::String::operator+ const(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1[2];  // [bp-0x28]\n
\n
    CUtil::String::__ctor__(v1, a0);\n
    v0 = CUtil::String::operator+=(v1, a1);\n
    CUtil::String::__dtor__(v1);\n
    return v0;\n
}\n
", "4216889:sub_405839": null, "4216896:_ZN5CUtil6StringpLERKS0_": "long long CUtil::String::operator+=(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
\n
    v2 = a0[1] + a1[1];\n
    v1 = operator new[](v2 + 1);\n
    cgc_memcpy(v1, a0[0], a0[1], v1);\n
    cgc_memcpy(&v1[a0[1]], a1[0], a1[1]);\n
    v1[a1[1] + a0[1]] = 0;\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[0] = v1;\n
    a0[1] = v2;\n
    return a0;\n
}\n
", "4217102:sub_40590e": null, "4217104:_ZNK5CUtil6String5c_strEv": "long long CUtil::String::c_str const(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4217121:sub_405921": null, "4217136:_ZNK5CUtil6String5UpperEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Upper const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_islower(*((*(a0) + v0))))\n
            *((*(a0) + v0)) = cgc_toupper(*((*(a0) + v0)));\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4217331:sub_4059f3": null, "4217344:_ZNK5CUtil6String5LowerEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Lower const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_isupper(*((*(a0) + v0))))\n
            *((*(a0) + v0)) = cgc_tolower(*((*(a0) + v0)));\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4217539:sub_405ac3": null, "4217552:_ZNK5CUtil6StringixERKm": "long long CUtil::String::operator[] const(unsigned long long a0[2], unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (*(a1) < a0[1])\n
    {\n
        v0 = *((a0[0] + *(a1)));\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4217663:sub_405b3f": null, "4217664:_ZNK5CUtil6String7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::IsEmpty const(struct_0 *a0)\n
{\n
    return !a0->field_8;\n
}\n
", "4217691:sub_405b5b": null, "4217696:_ZNK5CUtil6String4TrimEm": "long long CUtil::String::Trim const(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    CUtil::String::SubString const();\n
    return a0;\n
}\n
", "4217753:sub_405b99": null, "4217760:_ZNK5CUtil6String9SubStringEmm": "extern unsigned long long g_40e566;\n
\n
long long CUtil::String::SubString const(unsigned long long a0[2], unsigned long long a1[2], char *a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rcx\n
\n
    v5 = a0;\n
    v4 = a3;\n
    if (v4 > a1[1])\n
        v4 = a1[1];\n
    if (a2 < a1[1] && a2 < v4)\n
    {\n
        v3 = v4 - a2;\n
        v2 = operator new[](v3 + 1);\n
        v1 = 0;\n
        for (v0 = a2; v0 < v4; v0 += 1)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v2[v7] = v0[a1[0]];\n
        }\n
        v2[v1] = 0;\n
        CUtil::String::__base_ctor__(a0, v2);\n
        return a0;\n
    }\n
    CUtil::String::__base_ctor__(a0, &g_40e566);\n
    return a0;\n
}\n
", "4218029:sub_405cad": null, "4218032:_ZNK5CUtil6String10TrimSpacesEv": "long long CUtil::String::TrimSpaces const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1[1]; v0 += 1)\n
    {\n
        if (*((a1[0] + v0)) != 32)\n
            break;\n
    }\n
    CUtil::String::SubString const(a0, a1, v0, 4294967295);\n
    return a0;\n
}\n
", "4218176:_ZN5CUtil6String5ToIntERj": "long long CUtil::String::ToInt(unsigned long long *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    *(a1) = cgc_atoi(*(a0));\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4218260:sub_405d94": null, "4218272:_ZNK5CUtil6String9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::GetLength const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4218290:sub_405db2": null, "4218304:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4218683:sub_405f3b": null, "4218688:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4218880:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4218938:sub_40603a": null, "4218944:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4219136:cgc_unlink": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (a0->field_10)\n
        v0->field_10->field_8 = a0->field_8;\n
    v2 = a0;\n
    if (!a0->field_8)\n
        return v2;\n
    v2 = a0->field_8;\n
    *((v2 + 16)) = a0->field_10;\n
}\n
", "4219237:sub_406165": null, "4219248:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = v1->field_8)\n
    {\n
        if (v1->field_0 >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4219529:sub_406289": null, "4219536:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4219641:sub_4062f9": null, "4219648:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4219950:sub_40642e": null, "4219952:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4220078:sub_4064ae": null, "4220080:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4220230:sub_406546": null, "4220240:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v4 = v2;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v4 = v1 + 1;\n
    }\n
    return v4;\n
}\n
", "4220454:sub_406626": null, "4220464:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&v0, 1);\n
}\n
", "4220495:sub_40664f": null, "4220496:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4220805:sub_406785": null, "4220816:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4220984:sub_406838": null, "4220992:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4221075:sub_406893": null, "4221088:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4221129:sub_4068c9": null, "4221136:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    struct struct_0 *field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long v6;  // rcx\n
\n
    if (a0->field_100 >= 0x100)\n
    {\n
        for (v1 = a0; a0->field_100 > 0; v1 = *(&v0) + v1)\n
        {\n
            if (cgc_transmit(a0, a1, a2, rcx<8>))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            else if (*(&v0))\n
            {\n
                v6 = a0->field_100 - *(&v0);\n
                *(&a0->field_100) = v6;\n
            }\n
            else\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(&v6) = a0->field_100;\n
    *(&a0->field_100) = v6 + 1;\n
    (&a0->field_0)[v6] = a1;\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4221395:sub_4069d3": null, "4221408:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4221478:sub_406a26": null, "4221488:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4221652:sub_406ad4": null, "4221664:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x158]\n
    unsigned long v1;  // [bp-0x150]\n
    unsigned int v2;  // [bp-0x144]\n
    void* v3;  // [bp-0x140]\n
    unsigned long long v4;  // [bp-0x138]\n
    char v5;  // [bp-0x130]\n
    unsigned short v6;  // [bp-0x30]\n
    unsigned long long v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, a0, a1);\n
    v1 = &v5;\n
    while (true)\n
    {\n
        if (v6 <= 0)\n
        {\n
            v8 = v2;\n
            return v8;\n
        }\n
        if (cgc_transmit(v4, v7, v3, a0))\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        else if (*(&v0))\n
        {\n
            v6 -= *(&v0);\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4221931:sub_406beb": null, "4221936:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned long long *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    struct struct_0 **v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned long long *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned long long *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned long long *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    struct struct_0 **v70;  // rax\n
    struct_1 *v71;  // rcx\n
    struct struct_0 **v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned long long *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned long long *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[1];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 <= 160)\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    else\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 <= 40)\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4223882:sub_40738a": null, "4223888:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4224048:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4224212:sub_4074d4": null, "4224224:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4224324:sub_407544": null, "4224336:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if (!(v2 & 8))\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
        else\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4224628:sub_407674": null, "4224640:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        v11 = v0 - 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4225277:sub_4078fd": null, "4225280:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned int, unsigned long\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_407f91:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_407f91;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_407f87;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_407f87:\n
            goto LABEL_407f91;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4227626:sub_40822a": null, "4227632:cgc_printf_helper_float": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4228279:sub_4084b7": null, "4228288:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4228822:sub_4086d6": null, "4228832:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4228850:sub_4086f2": null, "4228864:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4228889:sub_408719": null, "4228896:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4229122:sub_408802": null, "4229136:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4229410:sub_408922": null, "4229424:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4229512:sub_408988": null, "4229520:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!v0[a1])\n
            break;\n
        v0[a0] = v0[a1];\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4229677:sub_408a2d": null, "4229680:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4229843:sub_408ad3": null, "4229856:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned long v1;  // [bp-0x48]\n
    void* v2;  // [bp-0x40], Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v3;  // [bp-0x34]\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v6) = a0;\n
    v5 = a2;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    if (v5 >= 16)\n
        v5 = 16;\n
    for (; cgc_isspace(*(v6)); v6 += 1);\n
    if (*(v6) == 45)\n
    {\n
        v3 = 1;\n
        *(&v6) = v6 + 1;\n
    }\n
    else if (*(v6) == 43)\n
    {\n
        *(&v6) = v6 + 1;\n
    }\n
    if (v5 != 16 && !(!v5))\n
        goto LABEL_408bfd;\n
    if (*(v6) != 48)\n
    {\n
LABEL_408bfd:\n
        if (v5 && !(v5 == 2))\n
            goto LABEL_408c56;\n
        if (*(v6) == 48)\n
        {\n
            if (*((v6 + 1)) != 98 && !(*((v6 + 1)) == 66))\n
                goto LABEL_408c56;\n
            *(&v6) = v6 + 2;\n
            v5 = 2;\n
        }\n
LABEL_408c56:\n
    }\n
    else\n
    {\n
        if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
            goto LABEL_408bfd;\n
        *(&v6) = v6 + 2;\n
        v5 = 16;\n
    }\n
    if (!v5)\n
    {\n
        if (*(v6) == 48)\n
            v5 = 8;\n
        else\n
            v5 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = -0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m v5 >> 64;\n
    v2 = (0 CONCAT v2) /m v5;\n
    while (*(v6))\n
    {\n
        v0 = *(v6);\n
        if (cgc_isdigit(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v0))\n
                break;\n
            if (cgc_isupper(v0))\n
                v0 -= 55;\n
            else\n
                v0 -= 87;\n
        }\n
        if (v0 >= v5)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_408d92:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_408d97:\n
            v4 *= v5;\n
            v4 = v0 + v4;\n
            v6 += 1;\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_408d97;\n
            goto LABEL_408d92;\n
        }\n
    }\n
    if (a1)\n
        *(a1) = v6;\n
    if (v3)\n
    {\n
        v7 = -(v4);\n
        return v7;\n
    }\n
    v7 = v4;\n
    return v7;\n
}\n
", "4230658:sub_408e02": null, "4230672:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4230738:sub_408e52": null, "4230752:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4230818:sub_408ea2": null, "4230832:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4231003:sub_408f5b": null, "4231008:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (a0[v1] == a1)\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4231162:sub_408ffa": null, "4231168:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (!cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
        *((v4 + v2)) = 0;\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4231662:sub_4091ee": null, "4231664:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4232033:sub_409361": null, "4232048:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4232222:sub_40941e": null, "4232224:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v1 = v2[a0];\n
            v0 = v2[a1];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4232385:sub_4094c1": null, "4232400:_Z8ReadLinev": "extern unsigned int cgc_g_lineLength;\n
extern char cgc_g_szLineBuffer;\n
\n
long long ReadLine(unsigned long long a0[2])\n
{\n
    char *v0;  // [bp-0x68]\n
    int tmp_45;  // tmp #45\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    unsigned int v3;  // [bp-0x48]\n
    unsigned int v4;  // [bp-0x44]\n
    char v5;  // [bp-0x3d]\n
    unsigned int v6;  // [bp-0x3c]\n
    char v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x2c]\n
    unsigned int v9;  // [bp-0x28]\n
    char v10;  // [bp-0x21]\n
    char *v11;  // [bp-0x20]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned long v13;  // [bp-0x10]\n
    unsigned long long v15;  // rsi\n
    unsigned long long v16;  // rdx\n
    unsigned long long v17;  // rcx\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // rax\n
    unsigned long v20;  // rax\n
    unsigned long v21;  // rax\n
\n
    v13 = a0;\n
    v12 = 0x1000;\n
    v11 = operator new[](v12 + 1);\n
    v10 = 0;\n
    v9 = 0;\n
    while (true)\n
    {\n
        for (v8 = v9; v8 < cgc_g_lineLength; v8 += 1)\n
        {\n
            if ((&cgc_g_szLineBuffer)[v8] == 10)\n
            {\n
                v10 = 1;\n
                break;\n
            }\n
        }\n
        if ((v10 & 1))\n
        {\n
            v9 = v8;\n
            break;\n
        }\n
        else\n
        {\n
            if (v8 == cgc_g_lineLength && cgc_g_lineLength == v12)\n
            {\n
                v9 = v8;\n
                break;\n
            }\n
            v9 = v8;\n
            v6 = v12 - v8;\n
            if (cgc_receive(a0, v15, v16, v17))\n
                cgc__terminate(a0);\n
            if (!*(&v7))\n
                cgc__terminate(a0);\n
            cgc_g_lineLength = cgc_g_lineLength + *(&v7);\n
        }\n
    }\n
    cgc_memcpy(v11, &cgc_g_szLineBuffer, v9);\n
    v11[v9] = 0;\n
    v5 = 0;\n
    CUtil::String::__base_ctor__(a0, v11);\n
    v0 = v11;\n
    if (v0)\n
        operator delete(v0);\n
    v4 = 0;\n
    v3 = v9 + 1;\n
    if ((v10 & 1))\n
    {\n
        for (v2 = 0; v2 < cgc_g_lineLength - (v9 + 1); v2 += 1)\n
        {\n
            v18 = v3;\n
            v3 = v18 + 1;\n
            tmp_45 = (&cgc_g_szLineBuffer)[v18];\n
            v19 = v4;\n
            v4 = v19 + 1;\n
            (&cgc_g_szLineBuffer)[v19] = tmp_45;\n
        }\n
        cgc_g_lineLength = cgc_g_lineLength - (v9 + 1);\n
    }\n
    else\n
    {\n
        for (v1 = 0; v1 < cgc_g_lineLength - v9; v1 += 1)\n
        {\n
            v20 = v3;\n
            v3 = v20 + 1;\n
            tmp_45 = (&cgc_g_szLineBuffer)[v20];\n
            v21 = v4;\n
            v4 = v21 + 1;\n
            (&cgc_g_szLineBuffer)[v21] = tmp_45;\n
        }\n
        cgc_g_lineLength = cgc_g_lineLength - v9;\n
    }\n
    v5 = 1;\n
    if (!(v5 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4233068:sub_40976c": null, "4233072:_Z12HexCharToIntcRh": "long long HexCharToInt(unsigned long a0, char *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0 >= 65 && a0 <= 70)\n
    {\n
        *(a1) = a0 + -55;\n
        goto LABEL_409817;\n
    }\n
    if (a0 >= 97 && a0 <= 102)\n
    {\n
        *(a1) = a0 + -87;\n
        goto LABEL_409817;\n
    }\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        *(a1) = a0 - 48;\n
LABEL_409817:\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4233263:sub_40982f": null, "4233264:_Z13PrintHexBytesPhj": "long long PrintHexBytes(unsigned long a0, unsigned int a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        a3 = v0;\n
        cgc_printf(\"$x$x\", (*((a0 + v0)) >> 4) & 15, a3[a0] & 15, a3, a4);\n
    }\n
    return cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
}\n
", "4233377:sub_4098a1": null, "4233392:_ZN4CECMC1EP7CLANBusy": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned short field_2c;\n
    unsigned short field_2e;\n
    char field_30;\n
    char field_31;\n
    char padding_32[6];\n
    unsigned long long field_38;\n
} struct_0;\n
\n
extern char g_411020;\n
\n
long long CECM::__ctor__(struct_0 *a0, unsigned long long a1, unsigned long a2)\n
{\n
    CSimulationComponent::__base_ctor__(a0, a1);\n
    a0->field_0 = &g_411020;\n
    a0->field_38 = a2;\n
    a0->field_30 = 0;\n
    a0->field_31 = 0;\n
    a0->field_20 = 0;\n
    a0->field_22 = 0;\n
    a0->field_24 = 75;\n
    a0->field_2a = 75;\n
    a0->field_2e = 0;\n
    a0->field_2c = 0;\n
    a0->field_26 = 0;\n
    a0->field_28 = 0;\n
    return a0;\n
}\n
", "4233517:sub_40992d": null, "4233520:_ZN4CECMD2Ev": "long long CECM::__base_dtor__(unsigned long long a0)\n
{\n
    return CSimulationComponent::__base_dtor__(a0);\n
}\n
", "4233547:sub_40994b": null, "4233552:_ZN4CECMD0Ev": "long long CECM::__deleting_dtor__(unsigned long a0)\n
{\n
    CECM::__base_dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4233592:sub_409978": null, "4233600:_ZN4CECM3RunEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long CECM::Run(struct_0 *a0)\n
{\n
    unsigned long v0;  // [bp-0x20], Other Possible Types: unsigned long long\n
    unsigned short v1;  // [bp-0x12]\n
\n
    v1 = 65299;\n
    for (v0 = CLANBus::RecvMessage(a0->field_18, &v1, 2, 0); v0; v0 = CLANBus::RecvMessage(a0->field_18, &v1, 2, v0))\n
    {\n
        if (CLANMessage::GetDestID const(v0) == 19)\n
        {\n
            CECM::ProcessMessage(a0, v0);\n
        }\n
        else if (CLANMessage::GetDestID const(v0) == 255)\n
        {\n
            CECM::ProcessBroadcastMessage(a0, v0);\n
        }\n
    }\n
    return CECM::EngineTick(a0);\n
}\n
", "4233803:sub_409a4b": null, "4233808:_ZN4CECM14ProcessMessageEP11CLANMessage": "typedef struct struct_1 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long CECM::ProcessMessage(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x80]\n
    unsigned long long v1;  // [bp-0x70]\n
    unsigned short v2;  // [bp-0x66]\n
    char v3;  // [bp-0x64]\n
    unsigned short v4;  // [bp-0x63]\n
    char v5;  // [bp-0x61]\n
    unsigned short v6;  // [bp-0x60]\n
    char v7;  // [bp-0x5d]\n
    char v8;  // [bp-0x5c]\n
    unsigned short v9;  // [bp-0x5b]\n
    char v10;  // [bp-0x59]\n
    char v11;  // [bp-0x58]\n
    char v12;  // [bp-0x24]\n
    char v13;  // [bp-0x23]\n
    unsigned short v14;  // [bp-0x22]\n
    struct_1 *v15;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v17;  // rax, Other Possible Types: unsigned long long\n
\n
    v15 = CLANMessage::GetMessageData(a1);\n
    v14 = CLANMessage::GetMessageLen const(a1);\n
    v13 = CLANMessage::GetSourceID const(a1);\n
    v12 = CLANMessage::GetDestID const(a1);\n
    v17 = v14;\n
    if (!v17)\n
        return v14;\n
    CResponse::__base_ctor__(&v11);\n
    do\n
    {\n
        if (v14 < 3)\n
        {\n
            v8 = 5;\n
            v9 = 1;\n
            v10 = 1;\n
            CResponse::AddResponse(&v11, &v8, 4);\n
            break;\n
        }\n
        else\n
        {\n
            v7 = v15->field_0;\n
            v6 = *(&(&v15->field_0)[1]);\n
            if (v14 < v6 + 3)\n
            {\n
                v3 = 5;\n
                v4 = 1;\n
                v5 = 1;\n
                CResponse::AddResponse(&v11, &v3, 4);\n
                break;\n
            }\n
        }\n
        CECM::HandleTLVMessage(a0, v7, v6, &v15->field_1 + 1, &v11);\n
        v14 -= v6 + 3;\n
        v15 = 3 + v15 + v6;\n
    } while (v14 > 0);\n
    v2 = CResponse::GetResponseLength const(&v11);\n
    if (v2 > 0)\n
    {\n
        v1 = operator new[](v2);\n
        if (CResponse::GetResponseData(&v11, v1, v2))\n
            CLANBus::SendMessage(a0->field_18, v12, v13, v1, v2);\n
        *(&v0) = v1;\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    v17 = CResponse::__dtor__(&v11);\n
    return v17;\n
}\n
", "4234276:sub_409c24": null, "4234288:_ZN4CECM23ProcessBroadcastMessageEP11CLANMessage": "long long CECM::ProcessBroadcastMessage(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // rax\n
\n
    v1 = a0;\n
    v0 = a1;\n
    return v3;\n
}\n
", "4234302:sub_409c3e": null, "4234304:_ZN4CECM10EngineTickEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
    char padding_20[16];\n
    char field_30;\n
    char field_31;\n
} struct_0;\n
\n
long long CECM::EngineTick(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned short v1;  // [bp-0x14]\n
    char v2;  // [bp-0x12]\n
\n
    if ((a0->field_31 & 1) != (a0->field_30 & 1))\n
    {\n
        v0 = 1;\n
        v1 = 1;\n
        if ((a0->field_30 & 1))\n
            v2 = 1;\n
        else\n
            v2 = 0;\n
        CLANBus::SendMessage(a0->field_18, 19, 255, &v0, 4);\n
    }\n
    a0->field_31 = a0->field_30 & 1;\n
    return a0;\n
}\n
", "4234438:sub_409cc6": null, "4234448:_ZN4CECM16HandleTLVMessageEhtPhP9CResponse": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned long long field_38;\n
} struct_0;\n
\n
long long CECM::HandleTLVMessage(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long long *a3, unsigned long long a4)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    int tmp_26;  // tmp #26\n
    struct_0 *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3c]\n
    unsigned short v3;  // [bp-0x3b]\n
    char v4;  // [bp-0x39]\n
    unsigned long v5;  // [bp-0x38]\n
    char v6;  // [bp-0x2c]\n
    unsigned short v7;  // [bp-0x2b]\n
    char v8;  // [bp-0x29]\n
    unsigned long v10;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v11;  // rax\n
\n
    v1 = a0;\n
    if (!a4)\n
    {\n
        return a0;\n
    }\n
    else if (!a3)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v10 = a2;\n
        if (!v10)\n
            return a2;\n
        v11 = a1 - 1;\n
        v0 = v11;\n
        tmp_26 = v11;\n
        v10 = v11 - 3;\n
        switch (tmp_26)\n
        {\n
        case 0:\n
            v10 = CECM::HandleReadDataMessage(v1, a3, a2, a4);\n
            return v10;\n
        case 1:\n
            v10 = CECM::HandleSetDataMessage(v1, a3, a2, a4);\n
            return v10;\n
        case 2:\n
            v10 = CECM::HandleActionMessage(v1, a3, a2, a4);\n
            return v10;\n
        case 3:\n
            if (a2 < 8)\n
            {\n
                v6 = 4;\n
                v7 = 1;\n
                v8 = 255;\n
                v10 = CResponse::AddResponse(a4, &v6, 4);\n
            }\n
            else\n
            {\n
                v5 = *(a3);\n
                v2 = 4;\n
                v3 = 1;\n
                if (v5 == v1->field_38)\n
                {\n
                    v4 = 1;\n
                    break;\n
                }\n
                else\n
                {\n
                    v4 = 0;\n
                    break;\n
                }\n
                v10 = CResponse::AddResponse(a4, &v2, 4);\n
            }\n
            return v10;\n
        default:\n
            return v10;\n
        }\n
    }\n
}\n
", "4234804:sub_409e34": null, "4234816:_ZN4CECM21HandleReadDataMessageEPhtP9CResponse": "long long CECM::HandleReadDataMessage(unsigned short a0[24], char a1[2], unsigned long a2, unsigned long long a3)\n
{\n
    unsigned long v0;  // [bp-0x70]\n
    char v1;  // [bp-0x5d]\n
    unsigned short v2;  // [bp-0x5c]\n
    char v3;  // [bp-0x5a]\n
    char v4;  // [bp-0x59]\n
    char v5;  // [bp-0x58]\n
    unsigned short v6;  // [bp-0x57]\n
    char v7;  // [bp-0x55]\n
    unsigned short v8;  // [bp-0x54]\n
    char v9;  // [bp-0x52]\n
    unsigned short v10;  // [bp-0x51]\n
    char v11;  // [bp-0x4f]\n
    unsigned short v12;  // [bp-0x4e]\n
    char v13;  // [bp-0x4c]\n
    unsigned short v14;  // [bp-0x4b]\n
    char v15;  // [bp-0x49]\n
    unsigned short v16;  // [bp-0x48]\n
    char v17;  // [bp-0x46]\n
    unsigned short v18;  // [bp-0x45]\n
    char v19;  // [bp-0x43]\n
    char v20;  // [bp-0x42]\n
    unsigned short v21;  // [bp-0x41]\n
    char v22;  // [bp-0x3f]\n
    unsigned short v23;  // [bp-0x3e]\n
    char v24;  // [bp-0x3c]\n
    char v25;  // [bp-0x3b]\n
    unsigned short v26;  // [bp-0x3a]\n
    char v27;  // [bp-0x38]\n
    unsigned short v28;  // [bp-0x37]\n
    char v29;  // [bp-0x35]\n
    unsigned short v30;  // [bp-0x34]\n
    char v31;  // [bp-0x32]\n
    unsigned short v32;  // [bp-0x31]\n
    char v33;  // [bp-0x2f]\n
    unsigned short v34;  // [bp-0x2e]\n
    char v35;  // [bp-0x2c]\n
    unsigned short v36;  // [bp-0x2b]\n
    char v37;  // [bp-0x29]\n
    unsigned long v39;  // rax, Other Possible Types: unsigned long long\n
\n
    v39 = a2;\n
    if (v39 < 1)\n
        return a2;\n
    v37 = a1[0];\n
    v0 = v37 - 1;\n
    switch (v0)\n
    {\n
    case 0:\n
        v33 = 1;\n
        v34 = 3;\n
        v35 = 1;\n
        v36 = a0[17];\n
        v39 = CResponse::AddResponse(a3, &v33, 6);\n
        return v39;\n
    case 1:\n
        v29 = 1;\n
        v30 = 3;\n
        v31 = 2;\n
        v32 = a0[16];\n
        v39 = CResponse::AddResponse(a3, &v29, 6);\n
        return v39;\n
    case 2:\n
        v25 = 1;\n
        v26 = 3;\n
        v27 = 3;\n
        v28 = a0[18];\n
        v39 = CResponse::AddResponse(a3, &v25, 6);\n
        return v39;\n
    case 3:\n
        if (a2 < 2)\n
        {\n
            v22 = 5;\n
            v23 = 1;\n
            v24 = 1;\n
            v39 = CResponse::AddResponse(a3, &v22, 4);\n
        }\n
        else\n
        {\n
            v17 = 1;\n
            v18 = 4;\n
            v19 = 4;\n
            v20 = a1[1];\n
            if (!a1[1])\n
            {\n
                v21 = a0[19];\n
                break;\n
            }\n
            else\n
            {\n
                v21 = a0[20];\n
                break;\n
            }\n
            v39 = CResponse::AddResponse(a3, &v17, 7);\n
        }\n
        return v39;\n
    case 4:\n
        v13 = 1;\n
        v14 = 3;\n
        v15 = 5;\n
        v16 = a0[21];\n
        v39 = CResponse::AddResponse(a3, &v13, 6);\n
        return v39;\n
    case 5:\n
        v9 = 1;\n
        v10 = 3;\n
        v11 = 6;\n
        v12 = a0[23];\n
        v39 = CResponse::AddResponse(a3, &v9, 6);\n
        return v39;\n
    case 6:\n
        v5 = 1;\n
        v6 = 3;\n
        v7 = 7;\n
        v8 = a0[22];\n
        v39 = CResponse::AddResponse(a3, &v5, 6);\n
        return v39;\n
    default:\n
        v1 = 1;\n
        v2 = 2;\n
        v3 = 255;\n
        v4 = v37;\n
        v39 = CResponse::AddResponse(a3, &v1, 5);\n
        return v39;\n
    }\n
}\n
", "4235401:sub_40a089": null, "4235408:_ZN4CECM20HandleSetDataMessageEPhtP9CResponse": "typedef struct struct_1 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned short field_2c;\n
    unsigned short field_2e;\n
    char field_30;\n
} struct_0;\n
\n
long long CECM::HandleSetDataMessage(struct_0 *a0, struct_1 *a1, unsigned long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    char v1;  // [bp-0x49]\n
    unsigned short v2;  // [bp-0x48]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    char v5;  // [bp-0x44]\n
    unsigned short v6;  // [bp-0x43]\n
    char v7;  // [bp-0x41]\n
    unsigned short v8;  // [bp-0x40]\n
    char v9;  // [bp-0x3e]\n
    unsigned short v10;  // [bp-0x3d]\n
    char v11;  // [bp-0x3b]\n
    char v12;  // [bp-0x3a]\n
    unsigned short v13;  // [bp-0x39]\n
    char v14;  // [bp-0x37]\n
    unsigned short v15;  // [bp-0x36]\n
    char v16;  // [bp-0x34]\n
    unsigned short v17;  // [bp-0x33]\n
    char v18;  // [bp-0x31]\n
    unsigned short v19;  // [bp-0x30]\n
    char v20;  // [bp-0x2d]\n
    char v21;  // [bp-0x2c]\n
    unsigned short v22;  // [bp-0x2b]\n
    char v23;  // [bp-0x29]\n
    unsigned long v25;  // rax, Other Possible Types: unsigned long long\n
\n
    if (a2 < 3)\n
    {\n
        v21 = 2;\n
        v22 = 1;\n
        v23 = 255;\n
        v25 = CResponse::AddResponse(a3, &v21, 4);\n
        return v25;\n
    }\n
    v20 = a1->field_0;\n
    v19 = *(&(&a1->field_0)[1]);\n
    v0 = v20;\n
    if (v0 == 1)\n
    {\n
        if ((a0->field_30 & 1))\n
        {\n
            if (v19 > 100)\n
                v19 = 100;\n
            if (v19 < 10)\n
                v19 = 10;\n
            a0->field_2c = v19;\n
            v12 = 2;\n
            v13 = 3;\n
            v14 = 1;\n
            v15 = v19;\n
            v25 = CResponse::AddResponse(a3, &v12, 6, rcx<8>);\n
            return v25;\n
        }\n
        else\n
        {\n
            v16 = 2;\n
            v17 = 1;\n
            v18 = 254;\n
            v25 = CResponse::AddResponse(a3, &v16, 4);\n
            return v25;\n
        }\n
    }\n
    else\n
    {\n
        if (v0 != 2)\n
        {\n
            v1 = 2;\n
            v2 = 2;\n
            v3 = 253;\n
            v4 = v20;\n
            v25 = CResponse::AddResponse(a3, &v1, 5);\n
            return v25;\n
        }\n
        else if ((a0->field_30 & 1))\n
        {\n
            if (v19 > 400)\n
                v19 = 400;\n
            CECM::CommandTorque(a0, v19);\n
            v5 = 2;\n
            v6 = 3;\n
            v7 = 2;\n
            v8 = a0->field_2e;\n
            v25 = CResponse::AddResponse(a3, &v5, 6);\n
            return v25;\n
        }\n
        else\n
        {\n
            v9 = 2;\n
            v10 = 1;\n
            v11 = 254;\n
            v25 = CResponse::AddResponse(a3, &v9, 4);\n
            return v25;\n
        }\n
    }\n
}\n
", "4235876:sub_40a264": null, "4235888:_ZN4CECM19HandleActionMessageEPhtP9CResponse": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
long long CECM::HandleActionMessage(struct_0 *a0, char *a1, unsigned long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    int tmp_10;  // tmp #10\n
    char v1;  // [bp-0x31]\n
    unsigned short v2;  // [bp-0x30]\n
    char v3;  // [bp-0x2e]\n
    char v4;  // [bp-0x2d]\n
    unsigned short v5;  // [bp-0x2c]\n
    char v6;  // [bp-0x2a]\n
    char v7;  // [bp-0x29]\n
    unsigned long v9;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // rax\n
\n
    v9 = a2;\n
    if (v9 < 1)\n
        return a2;\n
    v7 = *(a1);\n
    v0 = v7;\n
    if (v0 == 1)\n
    {\n
        if (!(a0->field_30 & 1))\n
            CECM::StartEngine(a0, a3);\n
        v4 = 3;\n
        v5 = 1;\n
        v6 = 1;\n
        v9 = CResponse::AddResponse(a3, &v4, 4);\n
        return v9;\n
    }\n
    else\n
    {\n
        v10 = v0;\n
        tmp_10 = v10;\n
        v9 = v10 - 2;\n
        if (tmp_10 != 2)\n
            return v9;\n
        if ((a0->field_30 & 1))\n
            CECM::StopEngine(a0, a3);\n
        v1 = 3;\n
        v2 = 1;\n
        v3 = 0;\n
        v9 = CResponse::AddResponse(a3, &v1, 4);\n
        return v9;\n
    }\n
}\n
", "4236117:sub_40a355": null, "4236128:_ZN4CECM13CommandTorqueEt": "long long CECM::CommandTorque(unsigned short a0[24], unsigned long a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned short v1;  // [bp-0x14]\n
    unsigned short v3[24];  // rax\n
    unsigned short v4[24];  // rax\n
\n
    v0 = 0;\n
    if (a1 < a0[23])\n
    {\n
        v1 = a0[23] - a1;\n
        v0 = 1;\n
    }\n
    else\n
    {\n
        v1 = a1 - a0[23];\n
    }\n
    if ((v0 & 1))\n
    {\n
        v3 = a0;\n
        v3[16] = v3[16] - v1 * 10;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        v4[16] = v4[16] + v1 * 10;\n
    }\n
    a0[23] = a1;\n
    return a0;\n
}\n
", "4236287:sub_40a3ff": null, "4236288:_ZN4CECM11StartEngineEP9CResponse": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned short field_2c;\n
    unsigned short field_2e;\n
    char field_30;\n
} struct_0;\n
\n
long long CECM::StartEngine(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v3 = a0;\n
    v0 = a0;\n
    if ((a0->field_30 & 1))\n
        return v3;\n
    v3 = v0;\n
    *((v3 + 48)) = 1;\n
    *((v3 + 32)) = 700;\n
    *((v3 + 34)) = 90;\n
    *((v3 + 36)) = 75;\n
    *((v3 + 42)) = 90;\n
    *((v3 + 46)) = 0;\n
    *((v3 + 44)) = 10;\n
    *((v3 + 38)) = 17;\n
    *((v3 + 40)) = 17;\n
}\n
", "4236381:sub_40a45d": null, "4236384:_ZN4CECM10StopEngineEP9CResponse": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned short field_2c;\n
    unsigned short field_2e;\n
    char field_30;\n
} struct_0;\n
\n
long long CECM::StopEngine(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v3 = a0;\n
    v0 = a0;\n
    if (!(a0->field_30 & 1))\n
        return v3;\n
    v3 = v0;\n
    *((v3 + 48)) = 0;\n
    *((v3 + 32)) = 0;\n
    *((v3 + 34)) = 0;\n
    *((v3 + 36)) = 75;\n
    *((v3 + 42)) = 75;\n
    *((v3 + 46)) = 0;\n
    *((v3 + 44)) = 0;\n
    *((v3 + 38)) = 0;\n
    *((v3 + 40)) = 0;\n
}\n
", "4236477:sub_40a4bd": null, "4236480:_ZN20CSimulationComponentC2EP7CLANBus": "extern char g_411050;\n
\n
long long CSimulationComponent::__base_ctor__(unsigned long long a0[4], unsigned long a1)\n
{\n
    a0[0] = &g_411050;\n
    CUtil::DoubleLink::__base_ctor__(&a0[1]);\n
    a0[3] = a1;\n
    return a0;\n
}\n
", "4236545:sub_40a501": null, "4236560:_ZN20CSimulationComponentD2Ev": "extern char g_411050;\n
\n
long long CSimulationComponent::__base_dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_411050;\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 1);\n
}\n
", "4236605:sub_40a53d": null, "4236608:_ZNK11CLANMessage9GetDestIDEv": "typedef struct struct_0 {\n
    char padding_0[10];\n
    char field_a;\n
} struct_0;\n
\n
long long CLANMessage::GetDestID const(struct_0 *a0)\n
{\n
    return a0->field_a;\n
}\n
", "4236626:sub_40a552": null, "4236640:_ZN11CLANMessage14GetMessageDataEv": "long long CLANMessage::GetMessageData(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4236657:sub_40a571": null, "4236672:_ZNK11CLANMessage13GetMessageLenEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
long long CLANMessage::GetMessageLen const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4236690:sub_40a592": null, "4236704:_ZNK11CLANMessage11GetSourceIDEv": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
long long CLANMessage::GetSourceID const(struct_0 *a0)\n
{\n
    return a0->field_b;\n
}\n
", "4236722:sub_40a5b2": null, "4236736:_ZNK9CResponse17GetResponseLengthEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long CResponse::GetResponseLength const(struct_0 *a0)\n
{\n
    return a0->field_28;\n
}\n
", "4236754:sub_40a5d2": null, "4236768:_ZN5CUtil10DoubleLinkI20CSimulationComponentEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4236797:sub_40a5fd": null, "4236800:_ZN5CUtil10DoubleLinkI20CSimulationComponentED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4236827:sub_40a61b": null, "4236832:_ZN5CUtil10DoubleLinkI20CSimulationComponentE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4236923:sub_40a67b": null, "4236928:_ZN11CLANMessageC2EhhPht": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned short field_8;\n
    char field_a;\n
    char field_b;\n
} struct_0;\n
\n
long long CLANMessage::__base_ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, char *a3, unsigned long a4)\n
{\n
    a0->field_8 = a4;\n
    a0->field_a = a2;\n
    a0->field_b = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0[1].field_0 + 4);\n
    a0->field_0 = operator new[](a0->field_8);\n
    return cgc_memcpy(a0->field_0, a3, a4);\n
}\n
", "4237045:sub_40a6f5": null, "4237056:_ZN11CLANMessageD2Ev": "long long CLANMessage::__base_dtor__(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (*(a0))\n
    {\n
        *(&v0) = *(a0);\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    *(a0) = 0;\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 2);\n
}\n
", "4237147:sub_40a75b": null, "4237152:_ZN7CLANBusC2Ev": "long long CLANBus::__base_ctor__(unsigned long long a0)\n
{\n
    CUtil::DoubleListDeclare::__base_ctor__(a0);\n
    return CUtil::DoubleListDeclare::__base_ctor__(a0 + 40);\n
}\n
", "4237196:sub_40a78c": null, "4237200:_ZN7CLANBusD2Ev": "long long CLANBus::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleListDeclare::__base_dtor__(a0 + 40);\n
    return CUtil::DoubleListDeclare::__base_dtor__(a0);\n
}\n
", "4237244:sub_40a7bc": null, "4237248:_ZN7CLANBus11SendMessageEhhPht": "long long CLANBus::SendMessage(unsigned long long a0, unsigned long a1, unsigned long a2, char *a3, unsigned long a4)\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned long long v1;  // [bp-0x30]\n
\n
    v0 = operator new(32);\n
    CLANMessage::__base_ctor__(v0, a1, a2, a3, a4);\n
    v1 = v0;\n
    CUtil::DoubleList::AddLast(a0, v1);\n
    return 1;\n
}\n
", "4237364:sub_40a834": null, "4237376:_ZN7CLANBus23InjectSimulationMessageEhhPht": "long long CLANBus::InjectSimulationMessage(unsigned long a0, unsigned long a1, unsigned long a2, char *a3, unsigned long a4)\n
{\n
    void* v0;  // [bp-0x40]\n
    unsigned long long v1;  // [bp-0x30]\n
\n
    v0 = operator new(32);\n
    CLANMessage::__base_ctor__(v0, a1, a2, a3, a4);\n
    v1 = v0;\n
    CUtil::DoubleList::AddLast(a0 + 40, v1);\n
    return 1;\n
}\n
", "4237496:sub_40a8b8": null, "4237504:_ZN7CLANBus11RecvMessageEPhhP11CLANMessage": "long long CLANBus::RecvMessage(unsigned long a0, char *a1, unsigned long a2, unsigned long long a3)\n
{\n
    char v0;  // [bp-0x3a]\n
    char v1;  // [bp-0x39]\n
    void* v2;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (!a3)\n
        v2 = CUtil::DoubleList::GetFirst(a0 + 40);\n
    else\n
        v2 = CUtil::DoubleList::GetNext(a0 + 40, a3);\n
    for (; v2; v2 = CUtil::DoubleList::GetNext(a0 + 40, v2))\n
    {\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            if (CLANMessage::GetDestID const(v2) == a1[v0])\n
            {\n
                v1 = 1;\n
                break;\n
            }\n
        }\n
        if ((v1 & 1))\n
            break;\n
    }\n
    if (!(v1 & 1))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4237777:sub_40a9d1": null, "4237792:_ZN7CLANBus8NextTickEv": "long long CLANBus::NextTick(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0x18]\n
\n
    CUtil::DoubleList::DeleteAll(a0 + 40);\n
    while (true)\n
    {\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (!v0)\n
            break;\n
        CUtil::DoubleLink::Unlink(v0 + 16);\n
        CUtil::DoubleList::AddLast(a0 + 40, v0);\n
    }\n
    return v0;\n
}\n
", "4237885:sub_40aa3d": null, "4237888:_ZN5CUtil10DoubleLinkI11CLANMessageEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4237917:sub_40aa5d": null, "4237920:_ZN5CUtil10DoubleLinkI11CLANMessageED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4237947:sub_40aa7b": null, "4237952:_ZN5CUtil17DoubleListDeclareI11CLANMessageLj16EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 16);\n
}\n
", "4237984:_ZN5CUtil17DoubleListDeclareI11CLANMessageLj16EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4238011:sub_40aabb": null, "4238016:_ZN5CUtil10DoubleListI11CLANMessageE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4238116:sub_40ab24": null, "4238128:_ZN5CUtil10DoubleListI11CLANMessageE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4238204:sub_40ab7c": null, "4238208:_ZN5CUtil10DoubleListI11CLANMessageE7GetNextEPS1_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4238354:sub_40ac12": null, "4238368:_ZN5CUtil10DoubleListI11CLANMessageE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(void* a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
        {\n
            CLANMessage::__base_dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    return v2;\n
}\n
", "4238464:_ZN5CUtil10DoubleLinkI11CLANMessageE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4238555:sub_40acdb": null, "4238560:_ZN5CUtil10DoubleListI11CLANMessageED2Ev": "long long CUtil::DoubleList::__base_dtor__(void* a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4238617:sub_40ad19": null, "4238624:_ZN5CUtil10DoubleListI11CLANMessageEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4238722:sub_40ad82": null, "4238736:_ZN5CUtil10DoubleLinkI11CLANMessageE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4238753:sub_40ada1": null, "4238768:_ZN5CUtil10DoubleListI11CLANMessageE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4238801:sub_40add1": null, "4238816:_ZN9CResponseC2Ev": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long CResponse::__base_ctor__(struct_0 *a0)\n
{\n
    CUtil::DoubleListDeclare::__base_ctor__(a0);\n
    a0->field_28 = 0;\n
    return a0;\n
}\n
", "4238857:sub_40ae09": null, "4238864:_ZN9CResponseD1Ev": "long long CResponse::__dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleListDeclare::__base_dtor__(a0);\n
}\n
", "4238891:sub_40ae2b": null, "4238896:_ZN9CResponse11AddResponseEPht": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long CResponse::AddResponse(struct_0 *a0, unsigned long long a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    unsigned long long v1;  // [bp-0x38]\n
    unsigned short v2;  // [bp-0xa]\n
    struct_0 *v4;  // rax\n
\n
    if (a1 && a2)\n
    {\n
        v0 = a0;\n
        v1 = operator new(32);\n
        CResponse::CResponseElement::__base_ctor__(v1, a1, a2);\n
        CUtil::DoubleList::AddLast(v0, v1);\n
        v4 = a0;\n
        v4->field_28 = v4->field_28 + a2;\n
        v2 = a2;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4239049:sub_40aec9": null, "4239056:_ZN9CResponse15GetResponseDataEPht": "long long CResponse::GetResponseData(void* a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x48]\n
    unsigned long v2;  // [bp-0x30], Other Possible Types: unsigned long long\n
    unsigned short v3;  // [bp-0x24]\n
    unsigned short v4;  // [bp-0xa]\n
\n
    v3 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a2 >= CResponse::GetResponseLength const(a0))\n
    {\n
        for (v2 = CUtil::DoubleList::GetFirst(a0); v2; v2 = CUtil::DoubleList::GetNext(a0, v2))\n
        {\n
            v0 = a1 + v3;\n
            v1 = CResponse::CResponseElement::GetData const(v2);\n
            cgc_memcpy(v0, v1, CResponse::CResponseElement::GetDataLength const(v2));\n
            v3 += CResponse::CResponseElement::GetDataLength const(v2);\n
        }\n
        v4 = v3;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4239303:sub_40afc7": null, "4239312:_ZN9CResponse13ClearResponseEv": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned short field_28;\n
} struct_0;\n
\n
long long CResponse::ClearResponse(struct_0 *a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    a0->field_28 = 0;\n
    return a0;\n
}\n
", "4239353:sub_40aff9": null, "4239360:_ZN5CUtil17DoubleListDeclareIN9CResponse16CResponseElementELj0EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 0);\n
}\n
", "4239389:sub_40b01d": null, "4239392:_ZN5CUtil17DoubleListDeclareIN9CResponse16CResponseElementELj0EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4239419:sub_40b03b": null, "4239424:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEE7AddLastEPS2_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4239524:sub_40b0a4": null, "4239536:_ZN9CResponse16CResponseElementC2EPht": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char *field_10;\n
    unsigned short field_18;\n
} struct_0;\n
\n
long long CResponse::CResponseElement::__base_ctor__(struct_0 *a0, char *a1, unsigned long a2)\n
{\n
    CUtil::DoubleLink::__base_ctor__(a0);\n
    a0->field_10 = operator new[](a2);\n
    cgc_memcpy(a0->field_10, a1, a2);\n
    a0->field_18 = a2;\n
    return a0;\n
}\n
", "4239631:sub_40b10f": null, "4239632:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4239708:sub_40b15c": null, "4239712:_ZNK9CResponse16CResponseElement7GetDataEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long CResponse::CResponseElement::GetData const(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4239730:sub_40b172": null, "4239744:_ZNK9CResponse16CResponseElement13GetDataLengthEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned short field_18;\n
} struct_0;\n
\n
long long CResponse::CResponseElement::GetDataLength const(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4239762:sub_40b192": null, "4239776:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEE7GetNextEPS2_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4239922:sub_40b232": null, "4239936:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(void* a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
        {\n
            CResponse::CResponseElement::__base_dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    return v2;\n
}\n
", "4240032:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEED2Ev": "long long CUtil::DoubleList::__base_dtor__(void* a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4240089:sub_40b2d9": null, "4240096:_ZN5CUtil10DoubleLinkIN9CResponse16CResponseElementEED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4240123:sub_40b2fb": null, "4240128:_ZN5CUtil10DoubleLinkIN9CResponse16CResponseElementEE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4240219:sub_40b35b": null, "4240224:_ZN5CUtil10DoubleLinkIN9CResponse16CResponseElementEEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4240253:sub_40b37d": null, "4240256:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4240354:sub_40b3e2": null, "4240368:_ZN5CUtil10DoubleLinkIN9CResponse16CResponseElementEE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4240385:sub_40b401": null, "4240400:_ZN5CUtil10DoubleListIN9CResponse16CResponseElementEE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4240433:sub_40b431": null, "4240448:_ZN9CResponse16CResponseElementD2Ev": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long CResponse::CResponseElement::__base_dtor__(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (!a0->field_10)\n
        return CUtil::DoubleLink::__base_dtor__(a0);\n
    *(&v0) = a0->field_10;\n
    if (!*(&v0))\n
        return CUtil::DoubleLink::__base_dtor__(a0);\n
    operator delete[](*(&v0));\n
}\n
", "4240530:sub_40b492": null, "4240544:_Z13RunSimulationPh": "long long RunSimulation(unsigned long long a0[2])\n
{\n
    void* v0;  // [bp-0xd0]\n
    unsigned long long v1;  // [bp-0xc8]\n
    unsigned long long v2;  // [bp-0xc0]\n
    unsigned int v3;  // [bp-0xb8]\n
    char v4;  // [bp-0xb0]\n
\n
    CSimulation::__base_ctor__(&v4);\n
    *(&v3) = a0[0];\n
    v2 = a0[1];\n
    v0 = operator new(64);\n
    CECM::__ctor__(v0, CSimulation::GetLanBus(&v4), *(&v3));\n
    CSimulation::AddSimulationComponent(&v4, v0);\n
    v1 = operator new(64);\n
    CTCM::__ctor__(v1, CSimulation::GetLanBus(&v4), v2);\n
    CSimulation::AddSimulationComponent(&v4, v1);\n
    CSimulation::SetupSimulation(&v4);\n
    CSimulation::RunSimulation(&v4);\n
    return CSimulation::__base_dtor__(&v4);\n
}\n
", "4240785:sub_40b591": null, "4240800:main": "int main(unsigned long a0, unsigned long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    void* v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x64]\n
    void* v2;  // [bp-0x60]\n
    unsigned long long v3[2];  // [bp-0x58]\n
    char v4;  // [bp-0x48]\n
    char v5;  // [bp-0x31]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8[4];  // [bp-0x28]\n
    unsigned int v9[4];  // [bp-0x20]\n
    unsigned long v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v14[4];  // rcx\n
    unsigned long v15;  // rcx\n
\n
    v12 = 0;\n
    v11 = a0;\n
    v10 = a1;\n
    v11 = 0x4347c000;\n
    *(&v9[0]) = v11;\n
    *(&v8[0]) = v9;\n
    v14 = v8;\n
    v7 = v8[0] + v8[1] + v8[2] + v14[3];\n
    v6 = 0;\n
    v7 &= 524287;\n
    cgc_printf(\"START::TS=$d\\n
\", v7 + 1452975600, a2, v14, a4);\n
    v5 = 0;\n
    do\n
    {\n
        RunSimulation(v9);\n
        do\n
        {\n
            if (v6 >= 0x400)\n
                v6 = 0;\n
            v15 = v6;\n
            v7 = v8[v15] + v7;\n
            v7 &= 524287;\n
            v6 += 1;\n
            cgc_printf(\"Run another simulation (TS=$d) (y/n)? \", v7 + 1452975600, a2, v15, a4);\n
            CUtil::String::__ctor__(&v4);\n
            ReadLine(v3);\n
            CUtil::String::operator=(&v4, v3);\n
            CUtil::String::__dtor__(v3);\n
            v2 = 0;\n
            if (CUtil::String::operator[] const(&v4, &v2) == 110)\n
            {\n
                v5 = 1;\n
                v1 = 4;\n
            }\n
            else\n
            {\n
                v0 = 0;\n
                if (CUtil::String::operator[] const(&v4, &v0) != 121)\n
                {\n
                    v1 = 0;\n
                }\n
                else\n
                {\n
                    v5 = 0;\n
                    v1 = 4;\n
                }\n
            }\n
            CUtil::String::__dtor__(&v4);\n
        } while (!v1);\n
    } while (((v5 ^ 255) & 1));\n
    return 0;\n
}\n
", "4241219:sub_40b743": null, "4241232:_ZN11CSimulationC2Ev": "long long CSimulation::__base_ctor__(unsigned long long a0)\n
{\n
    CLANBus::__base_ctor__(a0);\n
    CUtil::DoubleListDeclare::__base_ctor__(a0 + 80);\n
    return CUtil::DoubleListDeclare::__base_ctor__(a0 + 120);\n
}\n
", "4241289:sub_40b789": null, "4241296:_ZN11CSimulation9GetLanBusEv": "long long CSimulation::GetLanBus(unsigned long a0)\n
{\n
    return a0;\n
}\n
", "4241310:sub_40b79e": null, "4241312:_ZN11CSimulationD2Ev": "long long CSimulation::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleListDeclare::__base_dtor__(a0 + 120);\n
    CUtil::DoubleListDeclare::__base_dtor__(a0 + 80);\n
    return CLANBus::__base_dtor__(a0);\n
}\n
", "4241369:sub_40b7d9": null, "4241376:_ZN5CUtil17DoubleListDeclareI18CSimulationCommandLj0EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 0);\n
}\n
", "4241405:sub_40b7fd": null, "4241408:_ZN5CUtil17DoubleListDeclareI20CSimulationComponentLj8EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 8);\n
}\n
", "4241440:_ZN5CUtil10DoubleListI18CSimulationCommandEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4241538:sub_40b882": null, "4241552:_ZN5CUtil10DoubleLinkI18CSimulationCommandEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4241581:sub_40b8ad": null, "4241584:_ZN5CUtil10DoubleListI20CSimulationComponentEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4241682:sub_40b912": null, "4241696:_ZN5CUtil17DoubleListDeclareI20CSimulationComponentLj8EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4241723:sub_40b93b": null, "4241728:_ZN5CUtil17DoubleListDeclareI18CSimulationCommandLj0EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4241755:sub_40b95b": null, "4241760:_ZN5CUtil10DoubleListI20CSimulationComponentED2Ev": "long long CUtil::DoubleList::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4241817:sub_40b999": null, "4241824:_ZN5CUtil10DoubleListI20CSimulationComponentE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(unsigned long long a0)\n
{\n
    struct struct_1 **v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
            *(v0)->field_8(v0);\n
    }\n
    return v2;\n
}\n
", "4241912:sub_40b9f8": null, "4241920:_ZN5CUtil10DoubleListI20CSimulationComponentE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4241953:sub_40ba21": null, "4241968:_ZN5CUtil10DoubleListI20CSimulationComponentE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4242044:sub_40ba7c": null, "4242048:_ZN5CUtil10DoubleListI18CSimulationCommandED2Ev": "long long CUtil::DoubleList::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4242105:sub_40bab9": null, "4242112:_ZN5CUtil10DoubleListI18CSimulationCommandE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
        {\n
            CSimulationCommand::__dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    return v2;\n
}\n
", "4242208:_ZN5CUtil10DoubleLinkI18CSimulationCommandED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4242235:sub_40bb3b": null, "4242240:_ZN5CUtil10DoubleListI18CSimulationCommandE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4242273:sub_40bb61": null, "4242288:_ZN5CUtil10DoubleListI18CSimulationCommandE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4242364:sub_40bbbc": null, "4242368:_ZN5CUtil10DoubleLinkI18CSimulationCommandE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4242459:sub_40bc1b": null, "4242464:_ZN20CSimulationComponent11SendMessageEhhPht": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long CSimulationComponent::SendMessage(struct_0 *a0, unsigned long a1, unsigned long a2, char *a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a0->field_18)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = CLANBus::SendMessage(a0->field_18, a1, a2, a3, a4) & 1;\n
    return v0 & 1;\n
}\n
", "4242576:_ZN18CSimulationCommandC1EhhjPht": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
    char field_11;\n
    char padding_12[2];\n
    unsigned int field_14;\n
    char *field_18;\n
    unsigned short field_20;\n
} struct_0;\n
\n
long long CSimulationCommand::__ctor__(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, char *a4, unsigned long a5)\n
{\n
    CUtil::DoubleLink::__base_ctor__(a0);\n
    a0->field_10 = a1;\n
    a0->field_11 = a2;\n
    a0->field_14 = a3;\n
    a0->field_20 = a5;\n
    a0->field_18 = operator new[](a5);\n
    return cgc_memcpy(a0->field_18, a4, a5);\n
}\n
", "4242700:sub_40bd0c": null, "4242704:_ZN18CSimulationCommandD1Ev": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long CSimulationCommand::__dtor__(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (a0->field_18)\n
    {\n
        *(&v0) = a0->field_18;\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0->field_18 = 0;\n
    return CUtil::DoubleLink::__base_dtor__(a0);\n
}\n
", "4242794:sub_40bd6a": null, "4242800:_ZN11CSimulation22AddSimulationComponentEP20CSimulationComponent": "long long CSimulation::AddSimulationComponent(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a0;\n
    v0 = a0;\n
    if (a1)\n
        v2 = CUtil::DoubleList::AddLast(v0 + 120, a1);\n
    return v2;\n
}\n
", "4242863:sub_40bdaf": null, "4242864:_ZN11CSimulation15SetupSimulationEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long CSimulation::SetupSimulation(unsigned long long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0xb0]\n
    char v1;  // [bp-0xa1]\n
    struct_0 *v2;  // [bp-0xa0]\n
    struct_0 *v3;  // [bp-0x98]\n
    unsigned long v4;  // [bp-0x90]\n
    unsigned long long v5[2];  // [bp-0x80]\n
    unsigned int v6;  // [bp-0x6c]\n
    unsigned long long v7[2];  // [bp-0x68]\n
    unsigned int v8;  // [bp-0x54]\n
    unsigned long long v9[2];  // [bp-0x50]\n
    unsigned long long v10[2];  // [bp-0x40]\n
    char v11;  // [bp-0x2e]\n
    char v12;  // [bp-0x2d]\n
    unsigned int v13;  // [bp-0x2c]\n
    unsigned int v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    char v16;  // [bp-0x20]\n
\n
    cgc_printf(\"Enter number of simulation commands: \", a1, a2, a3, a4);\n
    ReadLine(&v16);\n
    CUtil::String::ToInt(&v16, &v15);\n
    for (v14 = 0; v14 < v15; v14 += 1)\n
    {\n
        cgc_printf(\"Enter Source ID: \", a1, a2, a3, a4);\n
        ReadLine(v10);\n
        CUtil::String::operator=(&v16, v10);\n
        CUtil::String::__dtor__(v10);\n
        CUtil::String::ToInt(&v16, &v13);\n
        if (v13 > 255)\n
        {\n
            cgc_printf(\"Invalid source ID. Setting to 255\\n
\", a1, a2, a3, a4);\n
            v12 = 255;\n
        }\n
        else\n
        {\n
            v12 = v13;\n
        }\n
        cgc_printf(\"Enter Dest ID: \", a1, a2, a3, a4);\n
        ReadLine(v9);\n
        CUtil::String::operator=(&v16, v9);\n
        CUtil::String::__dtor__(v9);\n
        CUtil::String::ToInt(&v16, &v13);\n
        if (v13 <= 255)\n
        {\n
            v11 = v13;\n
        }\n
        else\n
        {\n
            cgc_printf(\"Invalid dest ID. Setting to 255\\n
\", a1, a2, a3, a4);\n
            v11 = 255;\n
        }\n
        v1 = 0;\n
        cgc_printf(\"Enter Command Type:\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"0 - Read EGT\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"1 - Read RPM\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"2 - Read IAT\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"3 - Read O2_1\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"4 - Read O2_2\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"5 - Read Engine Temp\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"6 - Read Engine Torque\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"7 - Start Engine\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"8 - Stop Engine\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"9 - Set Throttle Position\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"10 - Set Engine Load\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"11 - Send Binary Message\\n
\", a1, a2, a3, a4);\n
        *(&v0) = v7;\n
        ReadLine(v7);\n
        v3 = &v16;\n
        CUtil::String::operator=(&v16, v0);\n
        CUtil::String::__dtor__(v0);\n
        CUtil::String::ToInt(v3, &v8);\n
        cgc_printf(\"Enter command time (in ms):\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"Simulation will send this command at the specified time in the simulation (max 2 minutes of simulation time):\\n
\", a1, a2, a3, a4);\n
        *(&v2) = v5;\n
        ReadLine(v5);\n
        CUtil::String::operator=(v3, v2);\n
        CUtil::String::__dtor__(v2);\n
        CUtil::String::ToInt(v3, &v6);\n
        v4 = v8;\n
        switch (v4)\n
        {\n
        case 0:\n
            CSimulation::ReadEGT(a0, v6, v12, v11);\n
            break;\n
        case 1:\n
            CSimulation::ReadRPM(a0, v6, v12, v11);\n
            break;\n
        case 2:\n
            CSimulation::ReadIAT(a0, v6, v12, v11);\n
            break;\n
        case 3:\n
            CSimulation::ReadO2(a0, v6, v12, v11, 1);\n
            break;\n
        case 4:\n
            CSimulation::ReadO2(a0, v6, v12, v11, 2);\n
            break;\n
        case 5:\n
            CSimulation::ReadEngineTemp(a0, v6, v12, v11);\n
            break;\n
        case 6:\n
            CSimulation::ReadEngineTorque(a0, v6, v12, v11);\n
            break;\n
        case 7:\n
            CSimulation::StartEngine(a0, v6, v12, v11);\n
            break;\n
        case 8:\n
            CSimulation::StopEngine(a0, v6, v12, v11);\n
            break;\n
        case 9:\n
            CSimulation::SetThrottlePosition(a0, v6, v12, v11);\n
            break;\n
        case 10:\n
            CSimulation::SetEngineLoad(a0, v6, v12, v11);\n
            break;\n
        case 11:\n
            CSimulation::SendBinaryMessage(a0, v6, v12, v11);\n
            break;\n
        }\n
    }\n
    return CUtil::String::__dtor__(&v16);\n
}\n
", "4243965:sub_40c1fd": null, "4243968:_ZN11CSimulation7ReadEGTEjhh": "char CSimulation::ReadEGT(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 1;\n
    v1 = 1;\n
    v2 = 1;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244051:sub_40c253": null, "4244064:_ZN11CSimulation7ReadRPMEjhh": "char CSimulation::ReadRPM(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 1;\n
    v1 = 1;\n
    v2 = 2;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244147:sub_40c2b3": null, "4244160:_ZN11CSimulation7ReadIATEjhh": "char CSimulation::ReadIAT(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 1;\n
    v1 = 1;\n
    v2 = 3;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244243:sub_40c313": null, "4244256:_ZN11CSimulation6ReadO2Ejhhh": "char CSimulation::ReadO2(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x1c]\n
    unsigned short v1;  // [bp-0x1b]\n
    char v2;  // [bp-0x19]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x16]\n
\n
    v4 = a3;\n
    v4 = 19;\n
    v0 = 1;\n
    v1 = 2;\n
    v2 = 4;\n
    v3 = a4;\n
    return CSimulation::SendComponentCommand(a0, a2, v4, a1, &v0, 5);\n
}\n
", "4244347:sub_40c37b": null, "4244352:_ZN11CSimulation14ReadEngineTempEjhh": "char CSimulation::ReadEngineTemp(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 1;\n
    v1 = 1;\n
    v2 = 5;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244435:sub_40c3d3": null, "4244448:_ZN11CSimulation16ReadEngineTorqueEjhh": "char CSimulation::ReadEngineTorque(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 1;\n
    v1 = 1;\n
    v2 = 6;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244531:sub_40c433": null, "4244544:_ZN11CSimulation11StartEngineEjhh": "char CSimulation::StartEngine(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 3;\n
    v1 = 1;\n
    v2 = 1;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244627:sub_40c493": null, "4244640:_ZN11CSimulation10StopEngineEjhh": "char CSimulation::StopEngine(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0x19]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
\n
    v3 = a3;\n
    v3 = 19;\n
    v0 = 3;\n
    v1 = 1;\n
    v2 = 2;\n
    return CSimulation::SendComponentCommand(a0, a2, v3, a1, &v0, 4);\n
}\n
", "4244723:sub_40c4f3": null, "4244736:_ZN11CSimulation19SetThrottlePositionEjhh": "long long CSimulation::SetThrottlePosition(unsigned long long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_17;  // tmp #17\n
    char v0;  // [bp-0x36]\n
    unsigned short v1;  // [bp-0x35]\n
    char v2;  // [bp-0x33]\n
    unsigned short v3;  // [bp-0x32]\n
    char v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x16]\n
    char v7;  // [bp-0x15]\n
    char v9;  // cl\n
\n
    tmp_17 = a3;\n
    v9 = a2;\n
    v7 = a2;\n
    v6 = tmp_17;\n
    cgc_printf(\"Enter throttle position: \", a1, a2, rcx<8>, a4);\n
    ReadLine(&v4);\n
    CUtil::String::ToInt(&v4, &v5);\n
    v6 = 19;\n
    v0 = 2;\n
    v1 = 3;\n
    v2 = 1;\n
    v3 = v5;\n
    CSimulation::SendComponentCommand(a0, v7, v6, a1, &v0, 6);\n
    return CUtil::String::__dtor__(&v4);\n
}\n
", "4244879:sub_40c58f": null, "4244880:_ZN11CSimulation13SetEngineLoadEjhh": "long long CSimulation::SetEngineLoad(unsigned long long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_17;  // tmp #17\n
    char v0;  // [bp-0x36]\n
    unsigned short v1;  // [bp-0x35]\n
    char v2;  // [bp-0x33]\n
    unsigned short v3;  // [bp-0x32]\n
    char v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x16]\n
    char v7;  // [bp-0x15]\n
    char v9;  // cl\n
\n
    tmp_17 = a3;\n
    v9 = a2;\n
    v7 = a2;\n
    v6 = tmp_17;\n
    cgc_printf(\"Set Engine Load: \", a1, a2, rcx<8>, a4);\n
    ReadLine(&v4);\n
    CUtil::String::ToInt(&v4, &v5);\n
    v6 = 19;\n
    v0 = 2;\n
    v1 = 3;\n
    v2 = 2;\n
    v3 = v5;\n
    CSimulation::SendComponentCommand(a0, v7, v6, a1, &v0, 6);\n
    return CUtil::String::__dtor__(&v4);\n
}\n
", "4245023:sub_40c61f": null, "4245024:_ZN11CSimulation17SendBinaryMessageEjhh": "long long CSimulation::SendBinaryMessage(unsigned long long a0, unsigned long a1, unsigned int a2, char *a3, unsigned int a4)\n
{\n
    int tmp_17;  // tmp #17\n
    char *v0;  // [bp-0x68]\n
    unsigned long v1;  // [bp-0x60]\n
    char v2;  // [bp-0x49]\n
    void* v3;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x3c]\n
    char *v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    char v8;  // [bp-0x28]\n
    char v9;  // [bp-0x16]\n
    char v10;  // [bp-0x15]\n
    unsigned long v12;  // rax\n
\n
    tmp_17 = a3;\n
    a3 = a2;\n
    v10 = a2;\n
    v9 = tmp_17;\n
    cgc_printf(\"Enter Binary Message (in hex): \", a1, a2, rcx<8>, a4);\n
    ReadLine(&v8);\n
    if ((CUtil::String::IsEmpty const(&v8) & 1))\n
    {\n
        cgc_printf(\"Message data empty. Not sending.\\n
\", a1, a2, rcx<8>, a4);\n
        v7 = 1;\n
        return CUtil::String::__dtor__(&v8);\n
    }\n
    else if (!(CUtil::String::GetLength const(&v8) & 1))\n
    {\n
        v6 = CUtil::String::GetLength const(&v8) >> 1;\n
        if (v6 > 0x400)\n
        {\n
            cgc_printf(\"Invalid hex message, max message length exceeded.\\n
\", a1, a2, rcx<8>, a4);\n
            v7 = 1;\n
            return CUtil::String::__dtor__(&v8);\n
        }\n
        v5 = operator new[](v6);\n
        cgc_memset(v5, 0, v6);\n
        v4 = 0;\n
        v3 = 0;\n
        while (true)\n
        {\n
            v1 = v3;\n
            if (v1 >= CUtil::String::GetLength const(&v8))\n
                break;\n
            if (!(HexCharToInt(CUtil::String::operator[] const(&v8, &v3), &v2) & 1))\n
            {\n
                cgc_printf(\"Invalid character at position $d, not a hex character -- discarding message.\\n
\", v3, a2, a3, a4);\n
                v7 = 1;\n
                return CUtil::String::__dtor__(&v8);\n
            }\n
            v3 += 1;\n
            v5[v4] = (v2 & 15) * 16;\n
            if (!(HexCharToInt(CUtil::String::operator[] const(&v8, &v3), &v2) & 1))\n
            {\n
                cgc_printf(\"Invalid character at position $d, not a hex character -- discarding message.\\n
\", v3, a2, a3, a4);\n
                v7 = 1;\n
                return CUtil::String::__dtor__(&v8);\n
            }\n
            v3 += 1;\n
            v12 = v5;\n
            a3 = v4;\n
            *((v12 + a3)) = *((v12 + a3)) | v2 & 15;\n
            v4 += 1;\n
        }\n
        CSimulation::SendComponentCommand(a0, v10, v9, a1, v5, v4);\n
        v0 = v5;\n
        if (v0)\n
            operator delete[](v0);\n
        v7 = 0;\n
        return CUtil::String::__dtor__(&v8);\n
    }\n
    else\n
    {\n
        cgc_printf(\"Invalid hex message, must be 2-byte aligned.\\n
\", a1, a2, rcx<8>, a4);\n
        v7 = 1;\n
        return CUtil::String::__dtor__(&v8);\n
    }\n
}\n
", "4245605:sub_40c865": null, "4245616:_ZN11CSimulation13RunSimulationEv": "long long CSimulation::RunSimulation(unsigned long a0, unsigned int a1, unsigned int a2, void* a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x80]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    unsigned int v3;  // [bp-0x70]\n
    unsigned int v4;  // [bp-0x6c]\n
    unsigned int v5;  // [bp-0x68]\n
    char v6;  // [bp-0x62]\n
    char v7;  // [bp-0x61]\n
    char *v8;  // [bp-0x60]\n
    char v9;  // [bp-0x51]\n
    unsigned long long *v10;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned short v11;  // [bp-0x3a]\n
    struct struct_1 **v12;  // [bp-0x38], Other Possible Types: unsigned long\n
    char v13;  // [bp-0x29]\n
    unsigned int v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    unsigned long v16;  // [bp-0x20], Other Possible Types: unsigned long long\n
    unsigned int v17;  // [bp-0x14]\n
    unsigned long v19;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_printf(\"Running simulation:\\n
\", a1, a2, a3, a4);\n
    if ((CUtil::DoubleList::IsEmpty(a0 + 120) & 1))\n
    {\n
        v19 = cgc_printf(\"0 components for simulation.\\n
\", a1, a2, a3, a4);\n
        return v19;\n
    }\n
    v17 = 0;\n
    v16 = CUtil::DoubleList::GetLast(a0 + 80);\n
    if (!v16)\n
    {\n
        v19 = cgc_printf(\"0 commands for simulation.\\n
\", a1, a2, a3, a4);\n
        return v19;\n
    }\n
    v17 = (0 CONCAT CSimulationCommand::GetRunTime const(v16)) /m 50;\n
    v17 += 1;\n
    v15 = 50;\n
    v16 = CUtil::DoubleList::GetFirst(a0 + 80);\n
    for (v14 = 0; v14 < v17; v14 += 1)\n
    {\n
        v13 = 0;\n
        while (true)\n
        {\n
            v9 = 0;\n
            if (v16)\n
                v9 = CSimulationCommand::GetRunTime const(v16) < v15;\n
            if (!(v9 & 1))\n
                break;\n
            if (!(v13 & 1))\n
            {\n
                cgc_printf(\"[TICK][$d]:\\n
\", v14, 2, a3, a4);\n
                v13 = 1;\n
            }\n
            v3 = CSimulationCommand::GetRunTime const(v16);\n
            v4 = CSimulationCommand::GetDataLength const(v16);\n
            v5 = CSimulationCommand::GetSrcID const(v16);\n
            cgc_printf(\"[SENDCMD][TIME=$d][LENGTH=$d][SRC=$d][DEST=$d]\\n
\", v3, v4, v5, CSimulationCommand::GetDestID const(v16));\n
            v6 = CSimulationCommand::GetSrcID const(v16);\n
            v7 = CSimulationCommand::GetDestID const(v16);\n
            v8 = CSimulationCommand::GetData const(v16);\n
            CLANBus::InjectSimulationMessage(a0, v6, v7, v8, CSimulationCommand::GetDataLength const(v16));\n
            v16 = CUtil::DoubleList::GetNext(a0 + 80, v16);\n
        }\n
        for (v12 = CUtil::DoubleList::GetFirst(a0 + 120); v12; v12 = CUtil::DoubleList::GetNext(a0 + 120, v12))\n
        {\n
            *(v12)->field_10(v12);\n
        }\n
        CLANBus::NextTick(a0);\n
        v11 = 255;\n
        a3 = 0;\n
        for (v10 = CLANBus::RecvMessage(a0, &v11, 2, 0); v10; v10 = CLANBus::RecvMessage(a0, &v11, 2, a3))\n
        {\n
            if (!(v13 & 1))\n
            {\n
                cgc_printf(\"[TICK][$d]:\\n
\", v14, 2, a3, a4);\n
                v13 = 1;\n
            }\n
            v0 = CLANMessage::GetSourceID const(v10);\n
            v1 = CLANMessage::GetDestID const(v10);\n
            cgc_printf(\"[MESSAGE][SRC=$d][DEST=$d][LENGTH=$d]\\n
\", v0, v1, CLANMessage::GetMessageLen const(v10), a4);\n
            *(&v2) = CLANMessage::GetMessageData(v10);\n
            a1 = CLANMessage::GetMessageLen const(v10);\n
            PrintHexBytes(*(&v2), a1, 2, a3, a4);\n
            a3 = v10;\n
        }\n
        v15 += 50;\n
    }\n
    CUtil::DoubleList::DeleteAll(a0 + 80);\n
    CUtil::DoubleList::DeleteAll(a0 + 120);\n
    v19 = cgc_printf(\"Simulation complete.\\n
\", a1, 2, a3, a4);\n
    return v19;\n
}\n
", "4246446:sub_40cbae": null, "4246448:_ZN11CSimulation20SendComponentCommandEhhjPht": "long long CSimulation::SendComponentCommand(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, char *a4, unsigned long a5)\n
{\n
    unsigned long long v0;  // [bp-0x80]\n
    unsigned long long v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x70]\n
    unsigned long long v3;  // [bp-0x68]\n
    void* v4;  // [bp-0x60]\n
    unsigned long long v5;  // [bp-0x58]\n
    void* v6;  // [bp-0x50]\n
    void* v7;  // [bp-0x40], Other Possible Types: unsigned long, unsigned long long\n
    void* v8;  // [bp-0x38], Other Possible Types: unsigned long\n
    char v9;  // [bp-0x9]\n
\n
    if (!a4)\n
    {\n
        v9 = 0;\n
        return v9 & 1;\n
    }\n
    else if (!a5)\n
    {\n
        v9 = 0;\n
        return v9 & 1;\n
    }\n
    else if (a3 <= 120000)\n
    {\n
        v8 = 0;\n
        v7 = 0;\n
        for (v7 = CUtil::DoubleList::GetFirst(a0 + 80); v7; v7 = CUtil::DoubleList::GetNext(a0 + 80, v7))\n
        {\n
            if (CSimulationCommand::GetRunTime const(v7) > a3)\n
                break;\n
            v8 = v7;\n
        }\n
        if (!v8)\n
        {\n
            v5 = a0 + 80;\n
            v6 = operator new(40);\n
            CSimulationCommand::__ctor__(v6, a1, a2, a3, a4, a5);\n
            CUtil::DoubleList::AddFirst(v5, v6);\n
        }\n
        else if (!v7)\n
        {\n
            v3 = a0 + 80;\n
            v4 = operator new(40);\n
            CSimulationCommand::__ctor__(v4, a1, a2, a3, a4, a5);\n
            CUtil::DoubleList::AddLast(v3, v4);\n
        }\n
        else\n
        {\n
            v0 = a0 + 80;\n
            v1 = v8;\n
            v2 = operator new(40);\n
            CSimulationCommand::__ctor__(v2, a1, a2, a3, a4, a5);\n
            CUtil::DoubleList::AddAfter(v0, v1, v2);\n
        }\n
        v9 = 1;\n
        return v9 & 1;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        return v9 & 1;\n
    }\n
}\n
", "4246941:sub_40cd9d": null, "4246944:_ZN5CUtil10DoubleListI20CSimulationComponentE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4247044:sub_40ce04": null, "4247056:_ZN5CUtil10DoubleListI18CSimulationCommandE7GetLastEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetLast(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_20 == &a0->padding_4[4])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_20 + -(a0->field_0);\n
    return v0;\n
}\n
", "4247132:sub_40ce5c": null, "4247136:_ZNK18CSimulationCommand10GetRunTimeEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
long long CSimulationCommand::GetRunTime const(struct_0 *a0)\n
{\n
    return a0->field_14;\n
}\n
", "4247153:sub_40ce71": null, "4247168:_ZNK18CSimulationCommand13GetDataLengthEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned short field_20;\n
} struct_0;\n
\n
long long CSimulationCommand::GetDataLength const(struct_0 *a0)\n
{\n
    return a0->field_20;\n
}\n
", "4247186:sub_40ce92": null, "4247200:_ZNK18CSimulationCommand8GetSrcIDEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
long long CSimulationCommand::GetSrcID const(struct_0 *a0)\n
{\n
    return a0->field_10;\n
}\n
", "4247218:sub_40ceb2": null, "4247232:_ZNK18CSimulationCommand9GetDestIDEv": "typedef struct struct_0 {\n
    char padding_0[17];\n
    char field_11;\n
} struct_0;\n
\n
long long CSimulationCommand::GetDestID const(struct_0 *a0)\n
{\n
    return a0->field_11;\n
}\n
", "4247250:sub_40ced2": null, "4247264:_ZNK18CSimulationCommand7GetDataEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long CSimulationCommand::GetData const(struct_0 *a0)\n
{\n
    return a0->field_18;\n
}\n
", "4247282:sub_40cef2": null, "4247296:_ZN5CUtil10DoubleListI18CSimulationCommandE7GetNextEPS1_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4247442:sub_40cf92": null, "4247456:_ZN5CUtil10DoubleListI20CSimulationComponentE7GetNextEPS1_": "long long CUtil::DoubleList::GetNext(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = a1 + *(a0);\n
    v0 = CUtil::DoubleLink::GetNext(v1);\n
    if (v0 == a0 + 6)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = v0 + -(*(a0));\n
    return v2;\n
}\n
", "4247602:sub_40d032": null, "4247616:_ZN5CUtil10DoubleListI18CSimulationCommandE8AddFirstEPS1_": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::AddFirst(struct_1 *a0, unsigned long a1)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_1 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = *((v3 + 8));\n
        v1[1] = v3 + 8;\n
        *((*((v3 + 8)) + 8)) = v1;\n
        *((v3 + 8)) = v1;\n
    }\n
    return v3;\n
}\n
", "4247717:sub_40d0a5": null, "4247728:_ZN5CUtil10DoubleListI18CSimulationCommandE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4247828:sub_40d114": null, "4247840:_ZN5CUtil10DoubleListI18CSimulationCommandE8AddAfterEPS1_S3_": "long long CUtil::DoubleList::AddAfter(struct struct_0 **a0, unsigned long a1, unsigned int a2)\n
{\n
    struct struct_0 **v0;  // [bp-0x38]\n
    unsigned long long v1[2];  // [bp-0x30]\n
    struct struct_0 **v2;  // [bp-0x28]\n
    unsigned long v4;  // rax\n
    struct struct_0 **v5;  // rcx\n
\n
    v0 = a0;\n
    if (!a2)\n
    {\n
        return a0;\n
    }\n
    else if (a1)\n
    {\n
        v5 = v0;\n
        v2 = a1 + *(v5);\n
        v1[0] = a2 + *(v5);\n
        v1[0] = *(v2);\n
        v1[1] = v2;\n
        if (*(v2))\n
            *(v2)->field_8 = v1;\n
        v4 = v2;\n
        *(v4) = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v4 = CUtil::DoubleList::AddFirst(v0, a2);\n
        return v4;\n
    }\n
}\n
", "4248015:sub_40d1cf": null, "4248016:_ZN20CSimulationComponentD0Ev": "long long CSimulationComponent::__deleting_dtor__()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4248016\n
}\n
", "4248026:sub_40d1da": null, "4248032:_ZN5CUtil10DoubleLinkI18CSimulationCommandE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4248049:sub_40d1f1": null, "4248064:_ZN5CUtil10DoubleLinkI20CSimulationComponentE7GetNextEv": "long long CUtil::DoubleLink::GetNext(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4248081:sub_40d211": null, "4248096:_ZN4CTCMC1EP7CLANBusy": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    char field_28;\n
    char padding_29[7];\n
    unsigned long long field_30;\n
    char field_38;\n
} struct_0;\n
\n
extern char g_411080;\n
\n
long long CTCM::__ctor__(struct_0 *a0, unsigned int a1, unsigned long a2)\n
{\n
    CSimulationComponent::__base_ctor__(a0, a1);\n
    a0->field_0 = &g_411080;\n
    a0->field_30 = a2;\n
    a0->field_28 = 0;\n
    a0->field_38 = 0;\n
    a0->field_20 = 0;\n
    a0->field_22 = 0;\n
    a0->field_24 = 0;\n
    a0->field_26 = 0;\n
    return a0;\n
}\n
", "4248197:sub_40d285": null, "4248208:_ZN4CTCMD1Ev": "long long CTCM::__dtor__(unsigned long long *a0)\n
{\n
    return CSimulationComponent::__base_dtor__(a0);\n
}\n
", "4248235:sub_40d2ab": null, "4248240:_ZN4CTCMD0Ev": "long long CTCM::__deleting_dtor__(unsigned long a0)\n
{\n
    CTCM::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4248280:sub_40d2d8": null, "4248288:_ZN4CTCM3RunEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
long long CTCM::Run(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned short v1;  // [bp-0x12]\n
\n
    v1 = 65300;\n
    for (v0 = CLANBus::RecvMessage(*(&a0->field_18), &v1, 2, 0); v0; v0 = CLANBus::RecvMessage(*(&a0->field_18), &v1, 2, v0))\n
    {\n
        if (CLANMessage::GetDestID const(v0) == 20)\n
        {\n
            CTCM::ProcessMessage(a0, v0);\n
        }\n
        else if (CLANMessage::GetDestID const(v0) == 255)\n
        {\n
            CTCM::ProcessBroadcastMessage(a0, v0);\n
        }\n
    }\n
    return CTCM::TCMTick(a0);\n
}\n
", "4248491:sub_40d3ab": null, "4248496:_ZN4CTCM14ProcessMessageEP11CLANMessage": "typedef struct struct_0 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
long long CTCM::ProcessMessage(struct_1 *a0, unsigned long long *a1)\n
{\n
    unsigned long v0;  // [bp-0x70]\n
    unsigned short v1;  // [bp-0x66]\n
    char v2;  // [bp-0x64]\n
    unsigned short v3;  // [bp-0x63]\n
    char v4;  // [bp-0x61]\n
    unsigned short v5;  // [bp-0x60]\n
    char v6;  // [bp-0x5d]\n
    char v7;  // [bp-0x5c]\n
    unsigned short v8;  // [bp-0x5b]\n
    char v9;  // [bp-0x59]\n
    char v10;  // [bp-0x58]\n
    char v11;  // [bp-0x24]\n
    char v12;  // [bp-0x23]\n
    unsigned short v13;  // [bp-0x22]\n
    struct_0 *v14;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v16;  // rax, Other Possible Types: unsigned long long\n
\n
    v14 = CLANMessage::GetMessageData(a1);\n
    v13 = CLANMessage::GetMessageLen const(a1);\n
    v12 = CLANMessage::GetSourceID const(a1);\n
    v11 = CLANMessage::GetDestID const(a1);\n
    v16 = v13;\n
    if (!v16)\n
        return v13;\n
    CResponse::__base_ctor__(&v10);\n
    do\n
    {\n
        if (v13 < 3)\n
        {\n
            v7 = 5;\n
            v8 = 1;\n
            v9 = 1;\n
            CResponse::AddResponse(&v10, &v7, 4);\n
            break;\n
        }\n
        else\n
        {\n
            v6 = v14->field_0;\n
            v5 = *(&(&v14->field_0)[1]);\n
            if (v13 < v5 + 3)\n
            {\n
                v2 = 5;\n
                v3 = 1;\n
                v4 = 1;\n
                CResponse::AddResponse(&v10, &v2, 4);\n
                break;\n
            }\n
        }\n
        CTCM::HandleTLVMessage(a0, v6, v5, &v14->field_1 + 1, &v10);\n
        v13 -= v5 + 3;\n
        v14 = 3 + v14 + v5;\n
    } while (v13 > 0);\n
    v1 = CResponse::GetResponseLength const(&v10);\n
    if (v1 > 0)\n
    {\n
        v0 = operator new[](v1);\n
        if (CResponse::GetResponseData(&v10, v0, v1))\n
            CLANBus::SendMessage(a0->field_18, v11, v12, v0, v1);\n
    }\n
    v16 = CResponse::__dtor__(&v10);\n
    return v16;\n
}\n
", "4248931:sub_40d563": null, "4248944:_ZN4CTCM23ProcessBroadcastMessageEP11CLANMessage": "typedef struct struct_1 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[56];\n
    char field_38;\n
} struct_0;\n
\n
long long CTCM::ProcessBroadcastMessage(struct_0 *a0, unsigned long long *a1)\n
{\n
    char *v0;  // [bp-0x30]\n
    unsigned short v1;  // [bp-0x26]\n
    char v2;  // [bp-0x23]\n
    unsigned short v3;  // [bp-0x22]\n
    struct_1 *v4;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v6;  // rax, Other Possible Types: unsigned long\n
\n
    v6 = CLANMessage::GetSourceID const(a1);\n
    if (v6 != 19)\n
        return v6;\n
    v4 = CLANMessage::GetMessageData(a1);\n
    v3 = CLANMessage::GetMessageLen const(a1);\n
    while (true)\n
    {\n
        v6 = v3;\n
        if (v6 < 3)\n
            break;\n
        v2 = v4->field_0;\n
        v1 = *(&(&v4->field_0)[1]);\n
        v0 = &v4->field_1 + 1;\n
        v6 = v3;\n
        if (v6 < v1 + 3)\n
            break;\n
        if (v2 == 1 && v1 == 1)\n
        {\n
            if (*(v0) == 1)\n
            {\n
                a0->field_38 = 1;\n
            }\n
            else if (!*(v0))\n
            {\n
                a0->field_38 = 0;\n
            }\n
        }\n
        v4 = 3 + v4 + v1;\n
        v3 -= v1 + 3;\n
        v6 = v3;\n
        if (v6 <= 0)\n
            break;\n
    }\n
    return v6;\n
}\n
", "4249241:sub_40d699": null, "4249248:_ZN4CTCM7TCMTickEv": "typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    char field_28;\n
    char padding_29[15];\n
    char field_38;\n
} struct_0;\n
\n
long long CTCM::TCMTick(struct_0 *a0)\n
{\n
    if ((a0->field_28 & 1) && !(a0->field_38 & 1))\n
        a0->field_28 = 0;\n
    if (!(a0->field_28 & 1))\n
    {\n
        a0->field_20 = 0;\n
        a0->field_22 = 0;\n
        a0->field_24 = 0;\n
        a0->field_26 = 0;\n
        return a0;\n
    }\n
    a0->field_20 = 300;\n
    a0->field_22 = 300;\n
    a0->field_24 = 300;\n
    a0->field_26 = 300;\n
    return a0;\n
}\n
", "4249373:sub_40d71d": null, "4249376:_ZN4CTCM16HandleTLVMessageEhtPhP9CResponse": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long CTCM::HandleTLVMessage(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long long *a3, void* a4)\n
{\n
    unsigned long v0;  // [bp-0x50]\n
    int tmp_26;  // tmp #26\n
    struct_0 *v1;  // [bp-0x48]\n
    char v2;  // [bp-0x3c]\n
    unsigned short v3;  // [bp-0x3b]\n
    char v4;  // [bp-0x39]\n
    unsigned long v5;  // [bp-0x38]\n
    char v6;  // [bp-0x2c]\n
    unsigned short v7;  // [bp-0x2b]\n
    char v8;  // [bp-0x29]\n
    unsigned long v10;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v11;  // rax\n
\n
    v1 = a0;\n
    if (!a4)\n
    {\n
        return a0;\n
    }\n
    else if (!a3)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v10 = a2;\n
        if (!v10)\n
            return a2;\n
        v11 = a1 - 1;\n
        v0 = v11;\n
        tmp_26 = v11;\n
        v10 = v11 - 3;\n
        switch (tmp_26)\n
        {\n
        case 0:\n
            v10 = CTCM::HandleReadDataMessage(v1, a3, a2, a4);\n
            return v10;\n
        case 1:\n
            v10 = CTCM::HandleSetDataMessage(v1, a3, a2, a4);\n
            return v10;\n
        case 2:\n
            v10 = CTCM::HandleActionMessage(v1, a3, a2, a4);\n
            return v10;\n
        case 3:\n
            if (a2 < 8)\n
            {\n
                v6 = 4;\n
                v7 = 1;\n
                v8 = 255;\n
                v10 = CResponse::AddResponse(a4, &v6, 4);\n
            }\n
            else\n
            {\n
                v5 = *(a3);\n
                v2 = 4;\n
                v3 = 1;\n
                if (v5 == v1->field_30)\n
                {\n
                    v4 = 1;\n
                    break;\n
                }\n
                else\n
                {\n
                    v4 = 0;\n
                    break;\n
                }\n
                v10 = CResponse::AddResponse(a4, &v2, 4);\n
            }\n
            return v10;\n
        default:\n
            return v10;\n
        }\n
    }\n
}\n
", "4249732:sub_40d884": null, "4249744:_ZN4CTCM21HandleReadDataMessageEPhtP9CResponse": "typedef struct struct_0 {\n
    char padding_0[40];\n
    char field_28;\n
} struct_0;\n
\n
long long CTCM::HandleReadDataMessage(struct_0 *a0, char a1[2], unsigned long a2, void* a3)\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned short v1;  // [bp-0x57]\n
    char v2;  // [bp-0x55]\n
    char v3;  // [bp-0x54]\n
    char v4;  // [bp-0x53]\n
    char v5;  // [bp-0x39]\n
    char v6;  // [bp-0x38]\n
    char v7;  // [bp-0x30]\n
    char v8;  // [bp-0x2f]\n
    unsigned short v9;  // [bp-0x2e]\n
    char v10;  // [bp-0x2c]\n
    char v11;  // [bp-0x29]\n
    unsigned short v12;  // [bp-0x1a]\n
    char v14[2];  // rax, Other Possible Types: unsigned long\n
\n
    v12 = a2;\n
    v14 = v12;\n
    if (v14 <= 1)\n
        return v12;\n
    v14 = a1;\n
    v11 = a1[0];\n
    *(&v14) = v11 - 1;\n
    if (v11 != 1)\n
    {\n
        return v14;\n
    }\n
    else if (!(a0->field_28 & 1))\n
    {\n
        v8 = 1;\n
        v9 = 1;\n
        v10 = 255;\n
        v14 = CResponse::AddResponse(a3, &v8, 4);\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = v12;\n
        if (v14 < 2)\n
            return v12;\n
        v7 = a1[1];\n
        v14 = v7;\n
        if (v14 > 4)\n
            return v7;\n
        v14 = v12;\n
        if (v14 < v7 + 2)\n
            return v12;\n
        for (v5 = 0; v5 < v7; v5 += 1)\n
        {\n
            *(&(&v6)[2 * v5]) = *(&a0->padding_0[32 + 2 * a1[1 + v5]]);\n
        }\n
        v0 = 1;\n
        v1 = v7 * 2 + 2;\n
        v2 = 1;\n
        v3 = v7;\n
        cgc_memcpy(&v4, &v6, v7 * 2);\n
        v14 = CResponse::AddResponse(a3, &v0, v7 * 2 + 5);\n
        return v14;\n
    }\n
}\n
", "4250113:sub_40da01": null, "4250128:_ZN4CTCM20HandleSetDataMessageEPhtP9CResponse": "typedef struct struct_0 {\n
    char padding_0[40];\n
    char field_28;\n
} struct_0;\n
\n
long long CTCM::HandleSetDataMessage(struct_0 *a0, char a1[2], unsigned long a2, void* a3)\n
{\n
    char v0;  // [bp-0x48]\n
    unsigned short v1;  // [bp-0x47]\n
    char v2;  // [bp-0x45]\n
    char v3;  // [bp-0x44]\n
    char v4;  // [bp-0x43]\n
    char v5;  // [bp-0x31]\n
    char v6;  // [bp-0x30]\n
    char v7;  // [bp-0x2f]\n
    unsigned short v8;  // [bp-0x2e]\n
    char v9;  // [bp-0x2c]\n
    char v10;  // [bp-0x29]\n
    unsigned short v11;  // [bp-0x1a]\n
    char v12[2];  // [bp-0x18]\n
    char v14[2];  // rax, Other Possible Types: unsigned long\n
\n
    *(&v12) = a1;\n
    v11 = a2;\n
    v14 = v11;\n
    if (v14 <= 1)\n
        return v11;\n
    v14 = a1;\n
    v10 = a1[0];\n
    *(&v14) = v10 - 1;\n
    if (v10 != 1)\n
        return v14;\n
    if (!(a0->field_28 & 1))\n
    {\n
        v7 = 2;\n
        v8 = 1;\n
        v9 = 255;\n
        v14 = CResponse::AddResponse(a3, &v7, 4);\n
        return v14;\n
    }\n
    v14 = v11;\n
    if (v14 < 2)\n
        return v11;\n
    v6 = a1[1];\n
    v14 = v6;\n
    if (v14 > 4)\n
        return v6;\n
    v14 = v11;\n
    if (v14 < v6 + 2 + v6 * 3)\n
        return v11;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (v5 < v6)\n
        {\n
            v14 = a1[1 + v5];\n
            if (v14 >= 4)\n
                return a1[1 + v5];\n
            *(&a0->padding_0[32 + 2 * a1[1 + v5]]) = *(&v12[1 + v5 + v6]);\n
            v5 += 1;\n
        }\n
        else\n
        {\n
            v0 = 2;\n
            v1 = v6 * 3 + 2;\n
            v2 = 1;\n
            v3 = v6;\n
            cgc_memcpy(&v4, a1 + 1, v6 * 3);\n
            v14 = CResponse::AddResponse(a3, &v0, v6 * 3 + 5);\n
            return v14;\n
        }\n
    }\n
}\n
", "4250542:sub_40dbae": null, "4250544:_ZN4CTCM19HandleActionMessageEPhtP9CResponse": "long long CTCM::HandleActionMessage(char a0[57], char *a1, unsigned long a2, void* a3)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    int tmp_10;  // tmp #10\n
    char v1;  // [bp-0x35]\n
    unsigned short v2;  // [bp-0x34]\n
    char v3;  // [bp-0x32]\n
    char v4;  // [bp-0x31]\n
    char v5;  // [bp-0x2f]\n
    unsigned short v6;  // [bp-0x2e]\n
    char v7;  // [bp-0x2c]\n
    char v8;  // [bp-0x2b]\n
    char v9;  // [bp-0x29]\n
    char v11[57];  // rax, Other Possible Types: unsigned long\n
    unsigned long long v12;  // rax\n
\n
    v11 = a2;\n
    if (v11 < 1)\n
        return a2;\n
    v9 = *(a1);\n
    if (!(a0[56] & 1))\n
        return a0;\n
    v0 = v9;\n
    if (v0 == 1)\n
    {\n
        if ((Not (Not ((Load(addr=(rdi<8> + 0x28<64>), size=1, endness=Iend_LE) & 0x1<8>) == 0x0<8>)))) { Goto None } else { Goto None }\n
        v5 = 3;\n
        v6 = 2;\n
        v7 = 1;\n
        v8 = 1;\n
        CResponse::AddResponse(a3, &v5, 5);\n
        a0[40] = 1;\n
        return a0;\n
    }\n
    v12 = v0;\n
    tmp_10 = v12;\n
    v11 = v12 - 2;\n
    if (tmp_10 == 2)\n
    {\n
        if ((Not (Not ((Load(addr=(rdi<8> + 0x28<64>), size=1, endness=Iend_LE) & 0x1<8>) == 0x0<8>)))) { Goto None } else { Goto None }\n
        v1 = 3;\n
        v2 = 2;\n
        v3 = 1;\n
        v4 = 0;\n
        CResponse::AddResponse(a3, &v1, 5);\n
        a0[40] = 0;\n
        return a0;\n
    }\n
    return v11;\n
}\n
", "4250800:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242888:__libc_start_main": null, "5242896:_Znam": null, "5242904:cgc_receive": null, "5242912:cgc_allocate": null, "5242920:cgc__terminate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:_ZdaPv": null, "5242952:cgc_rint": null, "5242960:cgc_log10": null, "5242968:cgc_transmit": null, "5242976:cgc_pow": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}