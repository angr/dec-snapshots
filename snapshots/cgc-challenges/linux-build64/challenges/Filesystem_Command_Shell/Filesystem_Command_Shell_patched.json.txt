{"4206592:_init": "extern struct_0 *g_40d2f0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40d2f0;\n
    if (g_40d2f0)\n
        v1 = g_40d2f0();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40d310;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40d310;\n
    goto *(4248344);\n
}\n
", "4206636:sub_40302c": null, "4206640:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206656:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206672:memset": "// attributes: PLT stub\n
void* memset(void* block, unsigned int c, unsigned int size)\n
{\n
    return ::libc.so.0::memset(block, c, size);\n
}\n
", "4206688:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206704:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206720:memcpy": "// attributes: PLT stub\n
void* memcpy(void* to, void* from, unsigned int size)\n
{\n
    return ::libc.so.0::memcpy(to, from, size);\n
}\n
", "4206736:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206752:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206768:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206784:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206800:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(0x40d300);\n
}\n
", "4206816:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206853:sub_403105": null, "4206854:sub_403106": null, "4206864:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40d2e8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206905:sub_403139": null, "4206912:register_tm_clones": "extern unsigned long long g_40d2f8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206969:sub_403179": null, "4206976:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40d300;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40d300)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207029:sub_4031b5": null, "4207033:sub_4031b9": null, "4207040:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207049:sub_4031c9": null, "4207056:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207107:sub_403203": null, "4207120:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207171:sub_403243": null, "4207184:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207235:sub_403283": null, "4207248:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207321:sub_4032d9": null, "4207328:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207401:sub_403329": null, "4207408:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207459:sub_403363": null, "4207472:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4207532:sub_4033ac": null, "4207536:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4207596:sub_4033ec": null, "4207600:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207691:sub_40344b": null, "4207696:cgc_receive_bytes": "long long cgc_receive_bytes(unsigned long long a0, unsigned long long a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    if (!a0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a1)\n
        {\n
            v0 = 0;\n
            if (cgc_receive(a0, a1, v4, v5))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            v1 = v0 + v1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4207851:sub_4034eb": null, "4207856:cgc_receive_until": "extern char cgc_receive_until.circ_buffer;\n
extern unsigned int cgc_receive_until.end;\n
extern unsigned int cgc_receive_until.head;\n
\n
long long cgc_receive_until(char *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0x200;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            if (cgc_receive_until.head >= cgc_receive_until.end && cgc_receive_until.head == 0x200)\n
            {\n
                cgc_receive_until.head = 0;\n
                cgc_receive_until.end = 0;\n
                break;\n
            }\n
            if ((&cgc_receive_until.circ_buffer)[cgc_receive_until.head] == a1)\n
            {\n
                *(v4) = 0;\n
                cgc_receive_until.head = cgc_receive_until.head + 1;\n
                goto LABEL_403683;\n
            }\n
            else\n
            {\n
                *(v4) = (&cgc_receive_until.circ_buffer)[cgc_receive_until.head];\n
                v1 += 1;\n
                v4 += 1;\n
                if (v1 == a2)\n
                {\n
                    *(v4) = 0;\n
LABEL_403683:\n
                    v5 = v1;\n
                    return v5;\n
                }\n
                cgc_receive_until.head = cgc_receive_until.head + 1;\n
            }\n
        }\n
        if (cgc_receive_until.end < cgc_receive_until.head)\n
            v2 = cgc_receive_until.head - cgc_receive_until.end;\n
        else\n
            v2 = 0x200 - cgc_receive_until.end;\n
        if (cgc_receive(a0, a1, a2, v7))\n
            cgc__terminate(a0);\n
        cgc_receive_until.end = (cgc_receive_until.end + v0);\n
    }\n
}\n
", "4208269:sub_40368d": null, "4208272:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4208651:sub_40380b": null, "4208656:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
        cgc__terminate(a0);\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4208830:sub_4038be": null, "4208832:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4208890:sub_4038fa": null, "4208896:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
        cgc__terminate(v3);\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4209074:sub_4039b2": null, "4209088:cgc_unlink": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (a0->field_10)\n
        a0->field_10->field_8 = v0->field_8;\n
    v2 = a0;\n
    if (!a0->field_8)\n
        return v2;\n
    v2 = a0->field_8;\n
    *((v2 + 16)) = a0->field_10;\n
}\n
", "4209189:sub_403a25": null, "4209200:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = v1->field_8)\n
    {\n
        if (v1->field_0 >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4209481:sub_403b49": null, "4209488:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4209593:sub_403bb9": null, "4209600:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long long v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4209902:sub_403cee": null, "4209904:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4210030:sub_403d6e": null, "4210032:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4210182:sub_403e06": null, "4210192:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v4 = v2;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v4 = v1 + 1;\n
    }\n
    return v4;\n
}\n
", "4210406:sub_403ee6": null, "4210416:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&v0, 1);\n
}\n
", "4210447:sub_403f0f": null, "4210448:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4210757:sub_404045": null, "4210768:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4210936:sub_4040f8": null, "4210944:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4211027:sub_404153": null, "4211040:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4211081:sub_404189": null, "4211088:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long v3;  // rcx\n
\n
    while (true)\n
    {\n
        if (a0->field_100 < 0x100)\n
        {\n
            a0->field_100 = a0->field_100 + 1;\n
            (&a0->field_0)[rcx<8>] = a1;\n
            v1 = a2 + 1;\n
            return v1;\n
        }\n
        else if (cgc_transmit(a0, a1, a2, v3))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(&v0))\n
        {\n
            a0->field_100 = a0->field_100 - *(&v0);\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4211302:sub_404266": null, "4211312:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4211382:sub_4042b6": null, "4211392:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 != v1)\n
        {\n
            if (cgc_transmit(a0, v5, v6, v7))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (!*(&v2))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4211556:sub_404364": null, "4211568:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x144]\n
    void* v1;  // [bp-0x140]\n
    unsigned long long v2;  // [bp-0x138]\n
    char v3;  // [bp-0x130]\n
    unsigned short v4;  // [bp-0x30]\n
    unsigned long long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    v5 = cgc_WRAPPER_BUFFER_PUTC;\n
    v4 = 0;\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(v2, v5, v1, a0, a1);\n
    if (v4 > 0)\n
    {\n
        if (!cgc_transmit(a0, a1, v8, v9))\n
        {\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v6 = v0;\n
    return v6;\n
}\n
", "4211757:sub_40442d": null, "4211760:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned long long *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned long long *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned long long *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned long long *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned long long *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned long long *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned long long *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned long long *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned long long *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 <= 40)\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    else\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 <= 40)\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    else\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 <= 160)\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    else\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[1];\n
                        v7 = v76;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 > 160)\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    else\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 <= 40)\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    else\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 > 40)\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    else\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4213706:sub_404bca": null, "4213712:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4213872:cgc_vprintf": "long long cgc_vprintf(char *a0, void* a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    void* **v2;  // [bp-0x20]\n
\n
    v2 = &cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, v2, v0, a0, a1);\n
}\n
", "4213946:sub_404cba": null, "4213952:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4214116:sub_404d64": null, "4214128:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4214228:sub_404dd4": null, "4214240:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4214532:sub_404f04": null, "4214544:cgc_printf_helper_int": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_1 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                v7 = v8(a0, 48, v7);\n
            else\n
                v7 = v8(a0, 32, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        v11 = v0 - 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4215181:sub_40518d": null, "4215184:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_405821:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_405821;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (!v8)\n
                {\n
                    v13 -= 1;\n
                }\n
                else\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                goto LABEL_405817;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_405817:\n
            goto LABEL_405821;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4217530:sub_405aba": null, "4217536:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4218183:sub_405d47": null, "4218192:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4218726:sub_405f66": null, "4218736:cgc_write": "long long cgc_write(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < a2)\n
        {\n
            v0 = cgc_transmit(a0, a1, a2, v7);\n
            if (v0)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v1 = (v1 + v2);\n
        }\n
        else\n
        {\n
            v5 = a2;\n
            return v5;\n
        }\n
    }\n
}\n
", "4218878:sub_405ffe": null, "4218880:cgc_minimum": "long long cgc_minimum(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 < a1)\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a1;\n
    return v0;\n
}\n
", "4218924:sub_40602c": null, "4218928:cgc_max": "long long cgc_max(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a1;\n
    return v0;\n
}\n
", "4218972:sub_40605c": null, "4218976:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4218994:sub_406072": null, "4219008:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4219033:sub_406099": null, "4219040:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4219266:sub_406182": null, "4219280:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned long v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v7;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    int v8;  // xmm0\n
    int v9;  // xmm0\n
    unsigned long long v10;  // xmm1lq\n
    int v11;  // xmm1\n
\n
    v5 = a0;\n
    v3 = 1;\n
    for (v1 = 0; *(v5) == 32; v5 += 1);\n
    v7 = *(v5);\n
    if (v7 != 45)\n
    {\n
        v2 = 1;\n
    }\n
    else\n
    {\n
        v2 = -1;\n
        v7 = v5 + 1;\n
        v5 = v7;\n
    }\n
    while (v5)\n
    {\n
        if (*(v5) == 46)\n
        {\n
            v1 = 1;\n
            v7 = v5 + 1;\n
            v5 = v7;\n
            continue;\n
        }\n
        v7 = *(v5);\n
        if (v7 < 48)\n
        {\n
LABEL_406292:\n
            break;\n
        }\n
        else\n
        {\n
            v7 = *(v5);\n
            if (!(v7 <= 57))\n
                goto LABEL_406292;\n
            v0 = *(v5) - 48;\n
            xmm0<16> = ((0x0<64> CONCAT 0x4024000000000000<64>) * Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE)))\n
            v4 = v8;\n
            *(&v8) = v0;\n
            xmm0<16> = (xmm0<16> + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE)))\n
            v4 = v9;\n
            if (v1)\n
                v3 *= 10;\n
            v7 = v5 + 1;\n
            v5 = v7;\n
        }\n
    }\n
    v10 = v2;\n
    v4 = ((0 CONCAT v4) * v11);\n
    if (v1)\n
    {\n
        tmp_10 = DivV(tmp_12, tmp_11);\n
        *(&v4) = tmp_10;\n
    }\n
    return v7;\n
}\n
", "4219615:sub_4062df": null, "4219616:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4219704:sub_406338": null, "4219712:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4219869:sub_4063dd": null, "4219872:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(&v3) = *(&v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4220035:sub_406483": null, "4220048:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4220114:sub_4064d2": null, "4220128:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && v1)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(v1);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v3 = *(v2) - *(v1);\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4220291:sub_406583": null, "4220304:cgc_strncmp": "long long cgc_strncmp(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    if (v3 && v2)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
            {\n
                v0 = 0;\n
                if (*(v3) == *(v2))\n
                    v0 = v1 < a2;\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v3 += 1;\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        v4 = *(v3) - *(v2);\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4220510:sub_40665e": null, "4220512:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4220578:sub_4066a2": null, "4220592:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
    char *v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(&v5) = v0;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        *(v6) = a1;\n
    }\n
    return v1;\n
}\n
", "4220762:sub_40675a": null, "4220768:cgc_authenticate": "long long cgc_authenticate(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned long long v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    char v4;  // [bp-0x31]\n
    char v5;  // [bp-0x2a]\n
    char v6;  // [bp-0x29]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v10 = a1;\n
    v1 = 0x4347c000;\n
    v0 = 128;\n
    for (v9 = 0; v9 < v0; v9 += 1)\n
    {\n
        v7 = v9 * 32;\n
        for (v8 = 0; v8 < 7; v8 += 1)\n
        {\n
            v6 = *((v1 + v7 + v8));\n
            v6 = ((v6 >> 31 CONCAT v6) /m 26 >> 32) + 97;\n
            (&v4)[v8] = v6;\n
        }\n
        v5 = 0;\n
        if (!cgc_strncmp(a0, &v4, 7))\n
        {\n
            v3 = 0;\n
            for (v8 = 14; v8 < 28; v8 += 1)\n
            {\n
                v3 = *((v1 + v7 + v8)) + v3;\n
            }\n
            if (v3 == a1)\n
            {\n
                v2 = *((v1 + v7 + 28));\n
                v2 &= 2147483647;\n
                v11 = v2;\n
                return v11;\n
            }\n
        }\n
    }\n
    if (!cgc_strcmp(a0, \"GUEST\") && (1 < v10 & a1 < 8) && !(a1 & 1))\n
    {\n
        v11 = a1;\n
        return v11;\n
    }\n
    v11 = 0;\n
    return v11;\n
}\n
", "4221185:sub_406901": null, "4221200:cgc_lookupName": "long long cgc_lookupName(char a0[7], unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned long long v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x2a]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0xc]\n
    char v10;  // [bp-0x8]\n
\n
    if (!a0)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    v1 = 0x4347c000;\n
    v0 = 128;\n
    for (v8 = 0; v8 < v0; v8 += 1)\n
    {\n
        v6 = v8 * 32;\n
        v2 = *((v1 + v6 + 28));\n
        v2 &= 2147483647;\n
        if (a1 == v2)\n
        {\n
            for (v7 = 0; v7 < 7; v7 += 1)\n
            {\n
                v5 = *((v1 + v6 + v7));\n
                v5 = ((v5 >> 31 CONCAT v5) /m 26 >> 32) + 97;\n
                (&v10)[41 + v7] = v5;\n
            }\n
            v4 = 0;\n
            cgc_strcpy(a0, &v3);\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (a1 > 2 && a1 < 8)\n
    {\n
        cgc_strcpy(a0, \"GUEST\");\n
        a0[5] = a1 + 48;\n
        a0[6] = 0;\n
        v9 = 0;\n
        return v9;\n
    }\n
    v9 = -1;\n
    return v9;\n
}\n
", "4221538:sub_406a62": null, "4221552:cgc_makeFile": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_makeFile(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (a0 < 2)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v1 = -1;\n
        return v1;\n
    }\n
    v0 = cgc_createFile(a1->field_8, 2, securityID);\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_printf(\"error\\n
\", 2, securityID, a3, a4);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4221684:sub_406af4": null, "4221696:cgc_makeMemFile": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char *field_10;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_makeMemFile(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (a0 < 3)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = cgc_atoi(a1->field_10);\n
    if (v1 >= 0 && v1 <= 0x14000)\n
    {\n
        v0 = cgc_malloc(v1);\n
        if (v0 < 0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        cgc_bzero(v0, v1);\n
        v2 = cgc_makeMemoryFile(a1->field_8, v0, v1, 0, securityID);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        cgc_printf(\"error\\n
\", a1, a2, 0, securityID);\n
        v3 = v2;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4221935:sub_406bef": null, "4221936:cgc_eraseFile": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_eraseFile(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (a0 < 2)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = cgc_openFile(*(&a1->field_8), securityID);\n
    v0 = v1;\n
    if (v0 == -14)\n
    {\n
        cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
    }\n
    else if (v0 == -2)\n
    {\n
        cgc_printf(\"bad type for erase\\n
\", securityID, a2, a3, a4);\n
    }\n
    else if (v0 == -1)\n
    {\n
        cgc_printf(\"file $s not found\\n
\", *(&a1->field_8), a2, a3, a4);\n
    }\n
    if (v1 < 0)\n
    {\n
        v3 = v1;\n
        return v3;\n
    }\n
    v2 = cgc_deleteFile(v1, securityID);\n
    if (v2 >= 0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_printf(\"error erasing $s\\n
\", *(&a1->field_8), a2, &securityID, a4);\n
    cgc_closeFile(v1);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4222243:sub_406d23": null, "4222256:cgc_listFiles": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned long long g_40b1d7;\n
extern unsigned long long g_40d010;\n
extern unsigned long long g_40d018;\n
extern unsigned long long g_40d020;\n
extern unsigned long long g_40d028;\n
\n
long long cgc_listFiles(unsigned long a0, struct_0 *a1, unsigned long a2, unsigned int a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0x82]\n
    char v1;  // [bp-0x78], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x70]\n
    unsigned long v3;  // [bp-0x68]\n
    unsigned long v4;  // [bp-0x60]\n
    unsigned long v5;  // [bp-0x58]\n
    unsigned long v6;  // [bp-0x48]\n
    unsigned long v7;  // [bp-0x40]\n
    unsigned long v8;  // [bp-0x38]\n
    unsigned long v9;  // [bp-0x30]\n
    struct struct_1 **v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x1c]\n
\n
    v6 = g_40d010;\n
    v7 = g_40d018;\n
    v8 = g_40d020;\n
    v9 = g_40d028;\n
    memset(&v1, 0, 40);\n
    v1 = &g_40b1d7;\n
    v2 = \"DIR\";\n
    v3 = \"REG\";\n
    v4 = \"MEM\";\n
    v5 = \"ROM\";\n
    v10 = 0;\n
    if (a0 <= 1)\n
        v11 = cgc_findFiles(&g_40b1d7, &v10);\n
    else\n
        v11 = cgc_findFiles(a1->field_8, &v10);\n
    cgc_printf(\"FILENAME                   SIZE        OWNER     O-PERMS    TYPE\\n
\", 0, 40, a3, a4);\n
    cgc_printf(\"----------------------------------------------------------------\\n
\", 0, 40, a3, a4);\n
    for (; !v11; v11 = cgc_findNextFile(v10))\n
    {\n
        if (cgc_lookupName(&v0, *(v10)->field_4) == -1)\n
            cgc_strcpy(&v0, \"       \");\n
        a4 = (&v6)[*(v10)->field_8];\n
        cgc_printf(\"$-25s  $10d  $-8s  $2s    $3s\\n
\", &(*(v10))[1].field_8, *(v10)->field_c, &v0, a4);\n
    }\n
    cgc_printf(\"\\n
\", 0, 40, a3, a4);\n
    return 0;\n
}\n
", "4222645:sub_406eb5": null, "4222656:cgc_overwriteFile": "typedef struct struct_1 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_overwriteFile(unsigned long a0, struct_1 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x438]\n
    char v1;  // [bp-0x42d]\n
    unsigned int v2;  // [bp-0x42c]\n
    char v3;  // [bp-0x428]\n
    char v4;  // [bp-0x1d]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0xc]\n
    char v7;  // [bp-0x8]\n
    unsigned long long v9;  // rbp\n
\n
    v9 = &v7;\n
    if (a0 < 2)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = cgc_openFile(*(&a1->field_8), securityID);\n
    if (v4 < 0)\n
    {\n
        v2 = v4;\n
        if (v2 == -14)\n
        {\n
            cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
        }\n
        else if (v2 == -2)\n
        {\n
            cgc_printf(\"unable to write files of this type\\n
\", securityID, a2, a3, a4);\n
        }\n
        else if (v2 != -1)\n
        {\n
            cgc_printf(\"Error opening $s\\n
\", *(&a1->field_8), a2, a3, a4);\n
        }\n
        else\n
        {\n
            cgc_printf(\"file $s not found\\n
\", *(&a1->field_8), a2, a3, a4);\n
        }\n
        v6 = v4;\n
        return v6;\n
    }\n
    else\n
    {\n
        v5 = cgc_truncateFile(v4, securityID);\n
        if (v5 < 0)\n
        {\n
            if (v5 != -14)\n
                cgc_printf(\"Error writing to $s\\n
\", *(&a1->field_8), a2, &securityID, a4);\n
            else\n
                cgc_printf(\"permission denied for write\\n
\", securityID, a2, &securityID, a4);\n
            cgc_closeFile(v4);\n
            v6 = v5;\n
            return v6;\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                cgc_receive_until(&v3, 10, 0x400);\n
                if (!cgc_strlen(&v3))\n
                {\n
                    cgc_closeFile(v4);\n
                    v6 = 0;\n
                    return v6;\n
                }\n
                v1 = v4;\n
                v0 = &v3;\n
                v5 = cgc_writeFile(v1, v0, cgc_strlen(&v3), securityID);\n
                if (v5 < 0)\n
                {\n
                    cgc_printf(\"Error writing to $s\\n
\", *(&a1->field_8), a2, securityID, a4);\n
                    cgc_closeFile(v4);\n
                    v6 = v5;\n
                    return v6;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4223234:sub_407102": null, "4223248:cgc_dumpFile": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_dumpFile(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    char v1;  // [bp-0x42c]\n
    char v2;  // [bp-0x428]\n
    char v3;  // [bp-0x1d]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    if (a0 < 2)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v5 = -1;\n
        return v5;\n
    }\n
    v3 = cgc_openFile(*(&a1->field_8), securityID);\n
    if (v3 < 0)\n
    {\n
        v0 = v3;\n
        if (v0 == -14)\n
        {\n
            cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
        }\n
        else if (v0 == -2)\n
        {\n
            cgc_printf(\"unable to display files of this type\\n
\", securityID, a2, a3, a4);\n
        }\n
        else if (v0 != -1)\n
        {\n
            cgc_printf(\"Error opening $s\\n
\", *(&a1->field_8), a2, a3, a4);\n
        }\n
        else\n
        {\n
            cgc_printf(\"file $s not found\\n
\", *(&a1->field_8), a2, a3, a4);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    else\n
    {\n
        cgc_bzero(&v2, 0x400);\n
        v4 = cgc_readFile(v3, &v2, 0x400, 0, &v1, securityID);\n
        if (v4 < 0 && v4 != -7)\n
        {\n
            if (v4 != -14)\n
                cgc_printf(\"Error reading from $s\\n
\", *(&a1->field_8), 0x400, 0, a4);\n
            else\n
                cgc_printf(\"permission denied for read\\n
\", 0x400, 0x400, 0, a4);\n
            cgc_closeFile(v3);\n
            v5 = v4;\n
            return v5;\n
        }\n
        for (v4 = 0; !v4; v4 = cgc_readFile(v3, &v2, 0x400, 0, &v1, securityID))\n
        {\n
            cgc_write(1, &v2, *(&v1));\n
            cgc_bzero(&v2, 0x400);\n
        }\n
        cgc_closeFile(v3);\n
        cgc_printf(\"\\n
\", 0x400, 0x400, 0, a4);\n
        if (v4 == -7)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        cgc_printf(\"Error reading file\\n
\", 0x400, 0x400, 0, a4);\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4223850:sub_40736a": null, "4223856:cgc_readFromEnd": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
    char padding_9[7];\n
    char *field_10;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_readFromEnd(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x444]\n
    char v1;  // [bp-0x43d]\n
    unsigned int v2;  // [bp-0x43c]\n
    char v3;  // [bp-0x438]\n
    char v4;  // [bp-0x434]\n
    char v5;  // [bp-0x42c]\n
    char v6;  // [bp-0x428]\n
    char v7;  // [bp-0x1d]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0xc]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // rdx, Other Possible Types: unsigned long long\n
\n
    v12 = &v10;\n
    if (a0 < 3)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v9 = -1;\n
        return v9;\n
    }\n
    else if (!cgc_statusFile(*(&a1->field_8), &v3))\n
    {\n
        v7 = cgc_openFile(*(&a1->field_8), securityID);\n
        if (v7 < 0)\n
        {\n
            v2 = v7;\n
            if (v2 == -14)\n
            {\n
                cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
            }\n
            else if (v2 != -1)\n
            {\n
                cgc_printf(\"Error opening $s\\n
\", *(&a1->field_8), a2, a3, a4);\n
            }\n
            else\n
            {\n
                cgc_printf(\"file $s not found\\n
\", *(&a1->field_8), a2, a3, a4);\n
            }\n
            v9 = v7;\n
            return v9;\n
        }\n
        else\n
        {\n
            v1 = v7;\n
            v0 = *(&v4);\n
            cgc_fileReadPosition(v1, v0 - cgc_atoi(a1->field_10));\n
            cgc_bzero(&v6, 0x400);\n
            v13 = 0x400;\n
            v8 = cgc_readFile(v7, &v6, 0x400, 0, &v5, securityID);\n
            if (v8 < 0 && v8 != -7)\n
            {\n
                if (v8 == -14)\n
                {\n
                    cgc_printf(\"permission denied for read\\n
\", 0x400, 0x400, 0, a4);\n
                }\n
                else\n
                {\n
                    cgc_printf(\"Error reading from $s\\n
\", *(&a1->field_8), 0x400, 0, a4);\n
                    cgc_printf(\"errno is $d\\n
\", v8, 0x400, 0, a4);\n
                }\n
                cgc_closeFile(v7);\n
                v9 = v8;\n
                return v9;\n
            }\n
            v8 = 0;\n
            if (*(&v5) > 0)\n
            {\n
                v13 = *(&v5);\n
                cgc_write(1, &v6, v13);\n
            }\n
            while (!v8)\n
            {\n
                cgc_bzero(&v6, 0x400);\n
                v8 = cgc_readFile(v7, &v6, 0x400, 0, &v5, securityID);\n
                v13 = *(&v5);\n
                cgc_write(1, &v6, v13);\n
            }\n
            cgc_closeFile(v7);\n
            cgc_printf(\"\\n
\", 0x400, v13, 0, a4);\n
            if (v8 == -7)\n
            {\n
                v9 = 0;\n
                return v9;\n
            }\n
            cgc_printf(\"Error reading file\\n
\", 0x400, v13, 0, a4);\n
            v9 = -1;\n
            return v9;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(\"unable to stat file $s\\n
\", *(&a1->field_8), a2, a3, a4);\n
        v9 = -1;\n
        return v9;\n
    }\n
}\n
", "4224600:sub_407658": null, "4224608:cgc_readFirstN": "typedef struct struct_1 {\n
    char padding_0[8];\n
    char field_8;\n
    char padding_9[7];\n
    char *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_readFirstN(unsigned long a0, struct_1 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x458]\n
    char v1;  // [bp-0x44a]\n
    char v2;  // [bp-0x449]\n
    struct_0 *v3;  // [bp-0x448]\n
    char v4;  // [bp-0x439]\n
    unsigned int v5;  // [bp-0x438]\n
    unsigned int v6;  // [bp-0x434]\n
    unsigned int v7;  // [bp-0x430]\n
    char v8;  // [bp-0x42c]\n
    char v9;  // [bp-0x428]\n
    char v10;  // [bp-0x1d]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0xc]\n
    char v13;  // [bp-0x8]\n
    unsigned long long v15;  // rbp\n
\n
    v15 = &v13;\n
    if (a0 < 3)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v12 = -1;\n
        return v12;\n
    }\n
    v10 = cgc_openFile(*(&a1->field_8), securityID);\n
    if (v10 < 0)\n
    {\n
        v5 = v10;\n
        if (v5 == -14)\n
        {\n
            cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
        }\n
        else if (v5 != -1)\n
        {\n
            cgc_printf(\"Error opening $s\\n
\", *(&a1->field_8), a2, a3, a4);\n
        }\n
        else\n
        {\n
            cgc_printf(\"file $s not found\\n
\", *(&a1->field_8), a2, a3, a4);\n
        }\n
        v12 = v10;\n
        return v12;\n
    }\n
    else\n
    {\n
        v7 = cgc_atoi(a1->field_10);\n
        if (!v7)\n
        {\n
            v12 = 0;\n
            return v12;\n
        }\n
        v6 = 0;\n
        cgc_bzero(&v9, 0x400);\n
        v4 = v10;\n
        v3 = &v9;\n
        v11 = cgc_readFile(v4, v3, cgc_minimum(0x400, v7 - v6), 0, &v8, securityID);\n
        if (v11 < 0 && v11 != -7)\n
        {\n
            if (v11 == -14)\n
            {\n
                cgc_printf(\"permission denied for read\\n
\", a1, a2, 0, a4);\n
            }\n
            else\n
            {\n
                cgc_printf(\"Error reading from $s\\n
\", *(&a1->field_8), a2, 0, a4);\n
                cgc_printf(\"errno is $d\\n
\", v11, a2, 0, a4);\n
            }\n
            cgc_closeFile(v10);\n
            v12 = v11;\n
            return v12;\n
        }\n
        v11 = 0;\n
        if (*(&v8) > 0)\n
        {\n
            v6 = *(&v8) + v6;\n
            a2 = *(&v8);\n
            cgc_write(1, &v9, a2);\n
        }\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (!v11)\n
                v2 = v6 < v7;\n
            if (!(v2 & 1))\n
                break;\n
            cgc_bzero(&v9, 0x400);\n
            v1 = v10;\n
            v0 = &v9;\n
            v11 = cgc_readFile(v1, v0, cgc_minimum(0x400, v7 - v6), 0, &v8, securityID);\n
            a2 = *(&v8);\n
            cgc_write(1, &v9, a2);\n
            v6 = *(&v8) + v6;\n
        }\n
        cgc_closeFile(v10);\n
        cgc_printf(\"\\n
\", a1, a2, 0, a4);\n
        if (v11 != -7 && v11)\n
        {\n
            cgc_printf(\"Error reading file\\n
\", a1, a2, 0, a4);\n
            v12 = -1;\n
            return v12;\n
        }\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4225469:sub_4079bd": null, "4225472:cgc_copyFile": "extern char securityID;\n
\n
long long cgc_copyFile(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x43c]\n
    char v1;  // [bp-0x438]\n
    char v2;  // [bp-0x42c]\n
    char v3;  // [bp-0x428]\n
    char v4;  // [bp-0x1e]\n
    char v5;  // [bp-0x1d]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    if (a0 < 3)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = cgc_openFile(*((a1 + 8)), securityID);\n
    if (v5 < 0)\n
    {\n
        v0 = v5;\n
        if (v0 == -14)\n
        {\n
            cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
        }\n
        else\n
        {\n
            if (v0 != -1)\n
                cgc_printf(\"error opening $s\\n
\", *((a1 + 8)), a2, a3, a4);\n
            else\n
                cgc_printf(\"file $s not found\\n
\", *((a1 + 8)), a2, a3, a4);\n
        }\n
        v7 = v5;\n
        return v7;\n
    }\n
    else if (!cgc_statusFile(*((a1 + 16)), &v1))\n
    {\n
        cgc_printf(\"file $s already exists\\n
\", *((a1 + 16)), a2, a3, a4);\n
        cgc_closeFile(v5);\n
        v7 = -1;\n
        return v7;\n
    }\n
    else\n
    {\n
        v6 = cgc_createFile(*((a1 + 16)), 2, securityID);\n
        if (v6)\n
        {\n
            cgc_printf(\"error creating $s\\n
\", *((a1 + 16)), securityID, a3, a4);\n
            v7 = -1;\n
            return v7;\n
        }\n
        v4 = cgc_openFile(*((a1 + 16)), securityID);\n
        if (v4 < 0)\n
        {\n
            cgc_printf(\"unable to open $s for writing\\n
\", *((a1 + 16)), securityID, a3, a4);\n
            cgc_closeFile(v5);\n
            v7 = -1;\n
            return v7;\n
        }\n
        v6 = 0;\n
        while (!v6)\n
        {\n
            cgc_bzero(&v3, 0x400);\n
            a2 = 0x400;\n
            a3 = 0;\n
            v6 = cgc_readFile(v5, &v3, 0x400, 0, &v2, securityID);\n
            if (*(&v2) > 0)\n
            {\n
                a2 = *(&v2);\n
                a3 = securityID;\n
                cgc_writeFile(v4, &v3, a2, securityID);\n
            }\n
        }\n
        cgc_closeFile(v5);\n
        if (v6 == -7)\n
        {\n
            cgc_closeFile(v4);\n
            v7 = 0;\n
            return v7;\n
        }\n
        else if (v6 == -14)\n
        {\n
            cgc_printf(\"permission denied for read\\n
\", 0x400, a2, a3, a4);\n
            v6 = cgc_deleteFile(v4, securityID);\n
            cgc_closeFile(v4);\n
            v7 = -1;\n
            return v7;\n
        }\n
        else\n
        {\n
            v6 = cgc_deleteFile(v4, securityID);\n
            cgc_printf(\"error reading file\\n
\", securityID, a2, &securityID, a4);\n
            cgc_closeFile(v4);\n
            v7 = -1;\n
            return v7;\n
        }\n
    }\n
}\n
", "4226223:sub_407caf": null, "4226224:cgc_setPermissions": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
    char padding_9[7];\n
    char *field_10;\n
} struct_0;\n
\n
extern unsigned int securityID;\n
\n
long long cgc_setPermissions(unsigned long a0, struct_0 *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1e]\n
    char v2;  // [bp-0x1d]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0xc]\n
    char v6;  // cl\n
\n
    if (a0 < 3)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v4 = -1;\n
        return v4;\n
    }\n
    v2 = cgc_atoi(a1->field_10);\n
    if (v2 > 3)\n
    {\n
        cgc_printf(\"invalid usage\\n
\", a1, a2, a3, a4);\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = cgc_openFile(*(&a1->field_8), securityID);\n
    if (v1 < 0)\n
    {\n
        v0 = v1;\n
        if (v0 == -14)\n
        {\n
            cgc_printf(\"permission denied\\n
\", securityID, a2, a3, a4);\n
            v4 = v1;\n
            return v4;\n
        }\n
        else if (v0 == -1)\n
        {\n
            cgc_printf(\"file $s not found\\n
\", *(&a1->field_8), a2, a3, a4);\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    v6 = v1;\n
    v3 = cgc_setPerms(v1, v2, securityID, rcx<8>);\n
    if (!v3)\n
    {\n
        cgc_closeFile(v1);\n
        v4 = 0;\n
        return v4;\n
    }\n
    cgc_closeFile(v1);\n
    cgc_printf(\"permission denied\\n
\", a1, securityID, rcx<8>, a4);\n
    v4 = -1;\n
    return v4;\n
}\n
", "4226570:sub_407e0a": null, "4226576:cgc_initFileSystem": "extern unsigned int fileCursors;\n
extern struct_0 *fileSystem;\n
extern char freeList;\n
extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_initFileSystem(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if ((0 CONCAT a1) /m a0 >> 32)\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
    v1 = (0 CONCAT a2) /m a1;\n
    v2 = (0 CONCAT a2) /m a0;\n
    if (v1 > (a1 << 3))\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
    v0 = cgc_allocate(a0, a1, a2);\n
    if (v0 == 3)\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    else if (!v0)\n
    {\n
        cgc_bzero(fileSystem, a2);\n
        masterBlocks = fileSystem;\n
        masterBlocks->field_0 = 1;\n
        masterBlocks->field_4 = a2;\n
        masterBlocks->field_8 = a1;\n
        masterBlocks->field_c = v1;\n
        masterBlocks->field_10 = 2;\n
        masterBlocks->field_14 = 1;\n
        masterBlocks->field_18 = a1 - 8 >> 6;\n
        masterBlocks->field_1c = a1 - 8 >> 2;\n
        masterBlocks->field_20 = 0;\n
        *(&freeList) = fileSystem + a1;\n
        rootDir = &fileSystem->field_0 + 2 * a1;\n
        cgc_setBlockInUse(0);\n
        cgc_setBlockInUse(1);\n
        cgc_setBlockInUse(2);\n
        rootDir->field_0 = a1 - 8 >> 6;\n
        rootDir->field_2 = 0;\n
        cgc_bzero(&fileCursors, 0x190);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
}\n
", "4227055:sub_407fef": null, "4227056:cgc_setBlockInUse": "extern unsigned long long freeList;\n
\n
long long cgc_setBlockInUse(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v3;  // rcx\n
\n
    v1 = a0 >> 3;\n
    v0 = a0 & 7;\n
    v3 = v1;\n
    v3[freeList] = v3[freeList] | (1 << (v0 & 31));\n
    return freeList;\n
}\n
", "4227113:sub_408029": null, "4227120:cgc_statusFile": "extern struct_0 *rootDir;\n
\n
long long cgc_statusFile(char *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v1 = -6;\n
        return v1;\n
    }\n
    else if (rootDir)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= rootDir->field_0)\n
            {\n
                v1 = -1;\n
                return v1;\n
            }\n
            if (!cgc_strcmp(&rootDir[1 + 32 * v0 + 12], a0))\n
                break;\n
            v0 += 1;\n
        }\n
        if (a1)\n
        {\n
            a1[1] = *(&rootDir[8 + 32 * v0]);\n
            a1[0] = *(&rootDir[10 + 32 * v0]);\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -9;\n
        return v1;\n
    }\n
}\n
", "4227378:sub_408132": null, "4227392:cgc_openFile": "extern unsigned int fileCursors;\n
extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_openFile(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x9]\n
\n
    if (!a0)\n
    {\n
        v2 = 250;\n
        return v2;\n
    }\n
    else if (rootDir)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= rootDir->field_0)\n
            {\n
                v2 = 255;\n
                return v2;\n
            }\n
            if (!cgc_strcmp(&rootDir[1 + 32 * v1 + 12], a0))\n
                break;\n
            v1 += 1;\n
        }\n
        if (a1 != 1 && *(&rootDir[4 + 32 * v1]) != a1 && !rootDir[6 + 32 * v1].field_0)\n
        {\n
            v2 = 242;\n
            return v2;\n
        }\n
        for (v0 = 0; v0 < 10; v0 += 1)\n
        {\n
            if ((&fileCursors)[10 * v0] == 1 && (&fileCursors)[1 + 10 * v0] == v1)\n
            {\n
                v2 = 243;\n
                return v2;\n
            }\n
        }\n
        for (v0 = 0; v0 < 10; v0 += 1)\n
        {\n
            if (!(&fileCursors)[10 * v0])\n
                break;\n
        }\n
        if (v0 == 10)\n
        {\n
            v2 = 246;\n
            return v2;\n
        }\n
        (&fileCursors)[10 * v0] = 1;\n
        (&fileCursors)[1 + 10 * v0] = v1;\n
        (&fileCursors)[2 + 10 * v0] = 0;\n
        (&fileCursors)[4 + 10 * v0] = 0;\n
        (&fileCursors)[3 + 10 * v0] = 0;\n
        (&fileCursors)[5 + 10 * v0] = 0;\n
        (&fileCursors)[6 + 10 * v0] = *(&rootDir[8 + 32 * v1]);\n
        (&fileCursors)[7 + 10 * v0] = *(&rootDir[4 + 32 * v1]);\n
        *(&(&fileCursors)[8 + 10 * v0]) = rootDir[6 + 32 * v1].field_0;\n
        (&fileCursors)[9 + 10 * v0] = *(&rootDir[10 + 32 * v1]);\n
        if (*(&rootDir[8 + 32 * v1]) > 0)\n
        {\n
            (&fileCursors)[4 + 10 * v0] = (0 CONCAT *(&rootDir[8 + 32 * v1])) /m masterBlocks->field_8;\n
            (&fileCursors)[5 + 10 * v0] = *(&rootDir[8 + 32 * v1]);\n
        }\n
        v2 = v0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 247;\n
        return v2;\n
    }\n
}\n
", "4228318:sub_4084de": null, "4228320:cgc_setPerms": "extern char fileCursors;\n
\n
long long cgc_setPerms(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (*(&(&fileCursors)[40 * a0]))\n
    {\n
        if (a2 != *(&(&fileCursors)[28 + 40 * a0]) && a2 != 1)\n
        {\n
            v0 = -14;\n
            return v0;\n
        }\n
        if (a1 > 3)\n
        {\n
            v0 = -6;\n
            return v0;\n
        }\n
        (&fileCursors)[32 + 40 * a0] = a1;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
}\n
", "4228519:sub_4085a7": null, "4228528:cgc_closeFile": "extern char fileCursors;\n
\n
long long cgc_closeFile(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (*(&(&fileCursors)[40 * a0]))\n
    {\n
        cgc_flushFile(a0);\n
        *(&(&fileCursors)[40 * a0]) = 0;\n
        *(&(&fileCursors)[4 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[20 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[12 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[24 + 40 * a0]) = 0;\n
        (&fileCursors)[32 + 40 * a0] = 0;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
}\n
", "4228784:cgc_flushFile": "extern char fileCursors;\n
extern unsigned long long rootDir;\n
\n
long long cgc_flushFile(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (rootDir)\n
    {\n
        *((rootDir + 4 + *(&(&fileCursors)[4 + 40 * a0]) * 64 + 12)) = *(&(&fileCursors)[24 + 40 * a0]);\n
        *((rootDir + 4 + *(&(&fileCursors)[4 + 40 * a0]) * 64 + 8)) = (&fileCursors)[32 + 40 * a0];\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -9;\n
        return v0;\n
    }\n
}\n
", "4229027:sub_4087a3": null, "4229040:cgc_createFile": "extern struct_0 *masterBlocks;\n
extern struct_1 *rootDir;\n
\n
long long cgc_createFile(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v2 = -6;\n
        return v2;\n
    }\n
    else if (!rootDir)\n
    {\n
        v2 = -9;\n
        return v2;\n
    }\n
    else if (cgc_statusFile(a0, NULL))\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= masterBlocks->field_18)\n
            {\n
                v2 = -10;\n
                return v2;\n
            }\n
            if (!rootDir[7 + 16 * v1].padding_0[0])\n
                break;\n
            v1 += 1;\n
        }\n
        cgc_strncpy(&rootDir[16 * v1].padding_0[1 + 24], a0, 40);\n
        *(&rootDir[4 + 16 * v1].padding_0) = 0;\n
        *(&rootDir[5 + 16 * v1].padding_0) = a1;\n
        *(&rootDir[2 + 16 * v1].padding_0) = a2;\n
        rootDir[3 + 16 * v1].padding_0[0] = 0;\n
        if (cgc_findFreeBlock(&v0))\n
        {\n
            v2 = -5;\n
            return v2;\n
        }\n
        cgc_eraseBlock(*(&v0));\n
        cgc_setBlockInUse(*(&v0));\n
        *(&rootDir[6 + 16 * v1].padding_0) = *(&v0);\n
        rootDir->field_2 = rootDir->field_2 + 1;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -12;\n
        return v2;\n
    }\n
}\n
", "4229498:sub_40897a": null, "4229504:cgc_findFreeBlock": "extern unsigned long long freeList;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_findFreeBlock(unsigned int *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v3 = -6;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < masterBlocks->field_8; v2 += 1)\n
    {\n
        if (*((freeList + v2)) != 255)\n
            break;\n
    }\n
    if (v2 >= masterBlocks->field_c)\n
    {\n
        v3 = -5;\n
        return v3;\n
    }\n
    v0 = *((freeList + v2));\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (!(v0 & 1))\n
            break;\n
        v0 >>= 1;\n
    }\n
    *(a0) = v2 * 8 + v1;\n
    if (*(a0) >= masterBlocks->field_c)\n
    {\n
        v3 = -5;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4229787:sub_408a9b": null, "4229792:cgc_eraseBlock": "extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_eraseBlock(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = masterBlocks->field_8;\n
    return cgc_bzero(fileSystem + a0 * v0, v0);\n
}\n
", "4229851:sub_408adb": null, "4229856:cgc_writeFile": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char fileCursors;\n
extern struct_1 *masterBlocks;\n
extern unsigned long long rootDir;\n
\n
long long cgc_writeFile(unsigned long long a0, char *a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long long v0;  // [bp-0xa8]\n
    unsigned int v1;  // [bp-0x9c]\n
    unsigned int v2;  // [bp-0x6c]\n
    char v3;  // [bp-0x60]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x4c]\n
    char v6;  // [bp-0x48]\n
    unsigned int v7;  // [bp-0x3c]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x24]\n
    unsigned int v11;  // [bp-0x20]\n
    unsigned int v12;  // [bp-0x1c]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned long v15;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v16;  // rcx\n
    struct_0 *v17;  // rax\n
\n
    v12 = a2;\n
    v11 = a3;\n
    if (a0 > 10)\n
    {\n
        v13 = -11;\n
        return v13;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v13 = -11;\n
        return v13;\n
    }\n
    else if (!a1)\n
    {\n
        v13 = -6;\n
        return v13;\n
    }\n
    else if (v12)\n
    {\n
        if (v11 != *(&(&fileCursors)[28 + 40 * a0]) && v11 != 1 && !((&fileCursors)[32 + 40 * a0] & 1))\n
        {\n
            v13 = -14;\n
            return v13;\n
        }\n
        if (*(&(&fileCursors)[36 + 40 * a0]) > 2)\n
        {\n
            v1 = cgc_writeMemoryFile(a0, a1, v12);\n
            v13 = v1;\n
            return v13;\n
        }\n
        v10 = v12;\n
        v8 = *(&(&fileCursors)[20 + 40 * a0]);\n
        v7 = masterBlocks->field_8;\n
        while (true)\n
        {\n
            if (v10 > 0)\n
            {\n
                v15 = (0 CONCAT v8) /m v7 >> 32;\n
                v9 = v15;\n
                if (!v9)\n
                {\n
                    v15 = a0 * 40;\n
                    if (v8 == *(&(&fileCursors)[24 + v15]) && cgc_addNewBlock(a0) == -1)\n
                    {\n
                        v13 = -5;\n
                        return v13;\n
                    }\n
                }\n
                v4 = *(&(&fileCursors)[4 + 40 * a0]);\n
                v16 = v4 * 64;\n
                if (cgc_readBlock(*((rootDir + 4 + v16 + 20)), &v3))\n
                {\n
                    v13 = -8;\n
                    return v13;\n
                }\n
                v0 = *(&v3);\n
                v5 = *((v0 + (0 CONCAT v8) /m v7 * 4));\n
                cgc_deallocate(a0, a1, v15, v16);\n
                v2 = cgc_minimum(v7 - v9, v10);\n
                if (cgc_readBlock(v5, &v6))\n
                {\n
                    v13 = -8;\n
                    return v13;\n
                }\n
                cgc_memcpy(*(&v6) + v9, a1, v2);\n
                cgc_writeBlock(*(&v6), v5);\n
                cgc_deallocate(a0, a1);\n
                v10 -= v2;\n
                v17 = &(&fileCursors)[40 * a0];\n
                v17->field_18 = v2 - (*(&(&fileCursors)[24 + 40 * a0]) - v8) + v17->field_18;\n
                v8 = v2 + v8;\n
            }\n
            else\n
            {\n
                *(&(&fileCursors)[20 + 40 * a0]) = v8;\n
                v13 = 0;\n
                return v13;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v13 = -6;\n
        return v13;\n
    }\n
}\n
", "4230641:sub_408df1": null, "4230656:cgc_writeMemoryFile": "extern char fileCursors;\n
extern unsigned long long rootDir;\n
\n
long long cgc_writeMemoryFile(unsigned long long a0, char *a1, unsigned long a2)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    char v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    v2 = a2;\n
    v5 = a0 * 40;\n
    v6 = *(&(&fileCursors)[4 + v5]) * 64;\n
    if (cgc_readBlock(*((rootDir + 4 + v6 + 20)), &v1, v5, v6))\n
    {\n
        v3 = -8;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    if (v2 > *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    cgc_memcpy(*(v0), a1, v2);\n
    *(&(&fileCursors)[24 + 40 * a0]) = v2;\n
    cgc_deallocate(a0, a1, v5, v6);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4230885:sub_408ee5": null, "4230896:cgc_addNewBlock": "extern char fileCursors;\n
extern struct_0 *masterBlocks;\n
extern unsigned long long rootDir;\n
\n
long long cgc_addNewBlock(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // rsi\n
\n
    if (a0 > 10)\n
    {\n
        v5 = -11;\n
        return v5;\n
    }\n
    else if (*(&(&fileCursors)[40 * a0]))\n
    {\n
        v2 = *(&(&fileCursors)[4 + 40 * a0]);\n
        v0 = cgc_readBlock(*((rootDir + 4 + v2 * 64 + 20)), &v3);\n
        if (v0)\n
        {\n
            v5 = -8;\n
            return v5;\n
        }\n
        for (v1 = 0; v1 < masterBlocks->field_1c; v1 += 1)\n
        {\n
            if (!*((*(&v3) + (v1 << 2))))\n
                break;\n
        }\n
        if (v1 == masterBlocks->field_1c)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (!cgc_findFreeBlock(&v4))\n
        {\n
            cgc_setBlockInUse(v4);\n
            v7 = v4;\n
            *((*(&v3) + v1 * 4)) = v7;\n
            v8 = v2 * 64;\n
            cgc_writeBlock(*(&v3), *((rootDir + 4 + v8 + 20)), v7, v8);\n
            cgc_deallocate(a0, v9);\n
            v5 = v4;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = -5;\n
            return v5;\n
        }\n
    }\n
    else\n
    {\n
        v5 = -11;\n
        return v5;\n
    }\n
}\n
", "4231278:sub_40906e": null, "4231280:cgc_readBlock": "extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_readBlock(unsigned long long a0, unsigned long long *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
\n
    if (!fileSystem)\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
    v1 = masterBlocks->field_8;\n
    v0 = cgc_allocate(a0, a1, v5);\n
    if (v0 == 3)\n
    {\n
        v3 = -0x4;\n
        return v3;\n
    }\n
    else if (!v0)\n
    {\n
        cgc_memcpy(*(&v2), fileSystem + a0 * v1, v1);\n
        *(a1) = *(&v2);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -3;\n
        return v3;\n
    }\n
}\n
", "4231457:sub_409121": null, "4231472:cgc_writeBlock": "extern unsigned long long fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
long long cgc_writeBlock(char *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!fileSystem)\n
    {\n
        v1 = -9;\n
        return v1;\n
    }\n
    v0 = masterBlocks->field_8;\n
    cgc_memcpy(fileSystem + a1 * v0, a0, v0);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4231575:sub_409197": null, "4231584:cgc_readFile": "extern char fileCursors;\n
extern struct_0 *masterBlocks;\n
extern unsigned long long rootDir;\n
\n
long long cgc_readFile(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned int *a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x78]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    unsigned int v3;  // [bp-0x68]\n
    unsigned int v4;  // [bp-0x64]\n
    unsigned int v5;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x5c]\n
    unsigned long long v7;  // [bp-0x58]\n
    unsigned long long v8;  // [bp-0x50]\n
    unsigned int v9;  // [bp-0x48]\n
    unsigned int v10;  // [bp-0x44]\n
    unsigned int v11;  // [bp-0x40]\n
    unsigned int v12;  // [bp-0x3c]\n
    unsigned int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0xc]\n
\n
    *(a4) = 0;\n
    if (a0 > 10)\n
    {\n
        v14 = -11;\n
        return v14;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v14 = -11;\n
        return v14;\n
    }\n
    else if (!a1)\n
    {\n
        v14 = -6;\n
        return v14;\n
    }\n
    else if (a2)\n
    {\n
        if (a5 != *(&(&fileCursors)[28 + 40 * a0]) && a5 != 1 && !((&fileCursors)[32 + 40 * a0] & 2))\n
        {\n
            v14 = -14;\n
            return v14;\n
        }\n
        if (*(&(&fileCursors)[36 + 40 * a0]) > 2)\n
        {\n
            v0 = cgc_readMemoryFile(a0, a1, a2, a4);\n
            v14 = v0;\n
            return v14;\n
        }\n
        v13 = a2;\n
        v12 = 0;\n
        if (a3 && cgc_fileReadPosRelative(a0, a3))\n
        {\n
            v14 = -6;\n
            return v14;\n
        }\n
        v6 = *(&(&fileCursors)[4 + 40 * a0]);\n
        v11 = *(&(&fileCursors)[12 + 40 * a0]);\n
        for (v3 = masterBlocks->field_8; v13; v11 = v4 + v11)\n
        {\n
            if (v11 == *((rootDir + 4 + (v6 << 6) + 12)))\n
                break;\n
            v10 = (0 CONCAT v11) /m v3;\n
            if (cgc_readBlock(*((rootDir + 4 + (v6 << 6) + 20)), &v7))\n
            {\n
                v14 = -8;\n
                return v14;\n
            }\n
            v9 = *((v7 + v10 * 4));\n
            cgc_deallocate(a0, a1);\n
            if (cgc_readBlock(v9, &v8))\n
            {\n
                v14 = -8;\n
                return v14;\n
            }\n
            v5 = (0 CONCAT v11) /m v3 >> 32;\n
            v1 = v3 - v5;\n
            v2 = *((rootDir + 4 + v6 * 64 + 12)) - v11;\n
            v4 = cgc_minimum(cgc_minimum(v2, v1), v13);\n
            cgc_memcpy(a1 + v12, v8 + v5, v4);\n
            cgc_deallocate(a0, a1);\n
            v12 = v4 + v12;\n
            v13 -= v4;\n
        }\n
        *(&(&fileCursors)[12 + 40 * a0]) = v11;\n
        *(a4) = v12;\n
        if (v11 == *((rootDir + 4 + (v6 << 6) + 12)))\n
        {\n
            v14 = -7;\n
            return v14;\n
        }\n
        v14 = 0;\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = -6;\n
        return v14;\n
    }\n
}\n
", "4232441:sub_4094f9": null, "4232448:cgc_readMemoryFile": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char fileCursors;\n
extern unsigned long long rootDir;\n
\n
long long cgc_readMemoryFile(unsigned long long a0, char *a1, unsigned long long a2, unsigned int *a3)\n
{\n
    unsigned int *v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned long long v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0xc]\n
    struct_0 *v5;  // rax\n
\n
    if (cgc_readBlock(*((rootDir + 4 + (*(&(&fileCursors)[4 + 40 * a0]) << 6) + 20)), &v2))\n
    {\n
        v3 = -8;\n
        return v3;\n
    }\n
    v0 = v2;\n
    if (*(&(&fileCursors)[12 + 40 * a0]) >= *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        v3 = -7;\n
        return v3;\n
    }\n
    v1 = cgc_minimum(a2, *(&(&fileCursors)[24 + 40 * a0]) - *(&(&fileCursors)[12 + 40 * a0]));\n
    cgc_memcpy(a1, *(v0) + *(&(&fileCursors)[12 + 40 * a0]), v1);\n
    *(a3) = v1;\n
    v5 = &(&fileCursors)[40 * a0];\n
    v5->field_c = v1 + v5->field_c;\n
    cgc_deallocate(a0, a1, a2, a3);\n
    if (*(&(&fileCursors)[12 + 40 * a0]) >= *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        v3 = -7;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4232854:sub_409696": null, "4232864:cgc_fileReadPosRelative": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char fileCursors;\n
\n
long long cgc_fileReadPosRelative(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct_0 *v2;  // rax\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (*(&(&fileCursors)[12 + 40 * a0]) + a1 <= *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        if (*(&(&fileCursors)[12 + 40 * a0]) + a1 < 0)\n
        {\n
            *(&(&fileCursors)[12 + 40 * a0]) = 0;\n
        }\n
        else\n
        {\n
            v2 = &(&fileCursors)[40 * a0];\n
            v2->field_c = a1 + v2->field_c;\n
        }\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
}\n
", "4233112:sub_409798": null, "4233120:cgc_fileReadPosition": "extern char fileCursors;\n
\n
long long cgc_fileReadPosition(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (a1 <= *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        *(&(&fileCursors)[12 + 40 * a0]) = a1;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
}\n
", "4233278:sub_40983e": null, "4233280:cgc_fileWritePosition": "extern char fileCursors;\n
\n
long long cgc_fileWritePosition(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (a1 <= *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        *(&(&fileCursors)[20 + 40 * a0]) = a1;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
}\n
", "4233438:sub_4098de": null, "4233440:cgc_fileWritePosRelative": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char fileCursors;\n
\n
long long cgc_fileWritePosRelative(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct_0 *v2;  // rax\n
\n
    if (a0 > 10)\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v0 = -11;\n
        return v0;\n
    }\n
    else if (*(&(&fileCursors)[20 + 40 * a0]) + a1 <= *(&(&fileCursors)[24 + 40 * a0]))\n
    {\n
        if (*(&(&fileCursors)[20 + 40 * a0]) + a1 < 0)\n
        {\n
            *(&(&fileCursors)[20 + 40 * a0]) = 0;\n
        }\n
        else\n
        {\n
            v2 = &(&fileCursors)[40 * a0];\n
            v2->field_14 = a1 + v2->field_14;\n
        }\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
}\n
", "4233688:sub_4099d8": null, "4233696:cgc_deleteFile": "extern char fileCursors;\n
extern struct_0 *rootDir;\n
\n
long long cgc_deleteFile(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v5 = -11;\n
        return v5;\n
    }\n
    else if (*(&(&fileCursors)[40 * a0]))\n
    {\n
        if (a1 != *(&(&fileCursors)[28 + 40 * a0]) && a1 != 1 && !((&fileCursors)[32 + 40 * a0] & 1))\n
        {\n
            v5 = -14;\n
            return v5;\n
        }\n
        v4 = *(&(&fileCursors)[4 + 40 * a0]);\n
        v1 = cgc_readBlock(*(&rootDir[6 + 16 * v4].padding_0), &v3);\n
        if (v1)\n
        {\n
            v5 = -8;\n
            return v5;\n
        }\n
        if (*(&(&fileCursors)[36 + 40 * a0]) > 2)\n
        {\n
            v0 = v3;\n
            if (*(v0) > 0)\n
                cgc_free(*(v0));\n
        }\n
        else\n
        {\n
            for (v2 = v3; *(v2); v2 += 4)\n
            {\n
                cgc_eraseBlock(*(v2));\n
                cgc_setBlockAsFree(*(v2));\n
            }\n
        }\n
        cgc_deallocate(a0, a1);\n
        cgc_eraseBlock(*(&rootDir[6 + 16 * v4].padding_0));\n
        cgc_setBlockAsFree(*(&rootDir[6 + 16 * v4].padding_0));\n
        rootDir[7 + 16 * v4].padding_0[0] = 0;\n
        *(&rootDir[4 + 16 * v4].padding_0) = 0;\n
        *(&rootDir[6 + 16 * v4].padding_0) = 0;\n
        rootDir->field_2 = rootDir->field_2 - 1;\n
        *(&(&fileCursors)[4 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[40 * a0]) = 0;\n
        *(&(&fileCursors)[20 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[12 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[24 + 40 * a0]) = 0;\n
        (&fileCursors)[32 + 40 * a0] = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -11;\n
        return v5;\n
    }\n
}\n
", "4234429:sub_409cbd": null, "4234432:cgc_setBlockAsFree": "extern unsigned long long freeList;\n
\n
long long cgc_setBlockAsFree(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v3;  // rcx\n
\n
    v1 = a0 >> 3;\n
    v0 = a0 & 7;\n
    v3 = v1;\n
    v3[freeList] = v3[freeList] & ((1 << (v0 & 31)) ^ -1);\n
    return freeList;\n
}\n
", "4234492:sub_409cfc": null, "4234496:cgc_truncateFile": "extern char fileCursors;\n
extern unsigned long long rootDir;\n
\n
long long cgc_truncateFile(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > 10)\n
    {\n
        v4 = -11;\n
        return v4;\n
    }\n
    else if (!*(&(&fileCursors)[40 * a0]))\n
    {\n
        v4 = -11;\n
        return v4;\n
    }\n
    else if (*(&(&fileCursors)[36 + 40 * a0]) <= 2)\n
    {\n
        if (a1 != *(&(&fileCursors)[28 + 40 * a0]) && a1 != 1 && !((&fileCursors)[32 + 40 * a0] & 1))\n
        {\n
            v4 = -14;\n
            return v4;\n
        }\n
        v3 = *(&(&fileCursors)[4 + 40 * a0]);\n
        v0 = cgc_readBlock(*((rootDir + 4 + v3 * 64 + 20)), &v2);\n
        if (v0)\n
        {\n
            v4 = -8;\n
            return v4;\n
        }\n
        for (v1 = v2; *(v1); v1 += 4)\n
        {\n
            cgc_eraseBlock(*(v1));\n
            cgc_setBlockAsFree(*(v1));\n
        }\n
        cgc_deallocate(a0, a1);\n
        cgc_eraseBlock(*((rootDir + 4 + v3 * 64 + 20)));\n
        *((rootDir + 4 + v3 * 64 + 12)) = 0;\n
        *(&(&fileCursors)[20 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[12 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[8 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[16 + 40 * a0]) = 0;\n
        *(&(&fileCursors)[24 + 40 * a0]) = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4235074:sub_409f42": null, "4235088:cgc_findFiles": "typedef struct struct_0 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_0;\n
\n
extern struct_0 *cgc_findFiles.fileHandle;\n
extern unsigned int g_40d9a8;\n
extern struct_1 *rootDir;\n
\n
long long cgc_findFiles(char *a0, unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x68]\n
    char v1;  // [bp-0x40]\n
    struct_0 *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (!rootDir)\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
    v2 = &rootDir[2];\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= rootDir->field_0)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        if (!*((v2 + 24)))\n
        {\n
            v2 += 64;\n
        }\n
        else\n
        {\n
            cgc_strncpy(&v0, v2 + 24, 40);\n
            v1 = 0;\n
            if (!*(a0))\n
                break;\n
            if (cgc_wildcard_search(a0, &v0) == 1)\n
                break;\n
            v2 += 64;\n
        }\n
        v3 += 1;\n
    }\n
    cgc_findFiles.fileHandle = v2;\n
    cgc_strncpy(&g_40d9a8, a0, 40);\n
    *(a1) = &cgc_findFiles.fileHandle;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4235381:sub_40a075": null, "4235392:cgc_findNextFile": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    char field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_1;\n
\n
extern struct_0 *rootDir;\n
\n
long long cgc_findNextFile(struct_2 *a0)\n
{\n
    struct_2 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_2 *v3;  // rax\n
\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        do\n
        {\n
            if (a0->field_0 >= &rootDir[1 + 32 * rootDir->field_0])\n
            {\n
                v1 = -1;\n
                return v1;\n
            }\n
            v3 = a0;\n
            v3->field_0 = &v3->field_0[2].padding_0[14];\n
        } while (!a0->field_0->field_18);\n
        if (!a0->field_8)\n
            break;\n
        if (cgc_wildcard_search(&v0->field_8, &a0->field_0->field_18) == 1)\n
            break;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4235598:sub_40a14e": null, "4235600:cgc_getFileSystemInfo": "extern struct_0 *masterBlocks;\n
\n
long long cgc_getFileSystemInfo(unsigned int a0[6])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v0 = -6;\n
        return v0;\n
    }\n
    else if (masterBlocks)\n
    {\n
        a0[0] = masterBlocks->field_4;\n
        a0[1] = masterBlocks->field_8;\n
        a0[2] = masterBlocks->field_c;\n
        a0[3] = 0;\n
        a0[4] = masterBlocks->field_18;\n
        a0[5] = masterBlocks->field_1c;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -9;\n
        return v0;\n
    }\n
}\n
", "4235764:sub_40a1f4": null, "4235776:cgc_makeMemoryFile": "extern struct_0 *rootDir;\n
\n
long long cgc_makeMemoryFile(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (!a0)\n
    {\n
        v3 = -6;\n
        return v3;\n
    }\n
    else if (!rootDir)\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
    else if (cgc_statusFile(a0, NULL))\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (v2 >= rootDir->field_0)\n
            {\n
                v3 = -10;\n
                return v3;\n
            }\n
            if (!rootDir[7 + 16 * v2].field_0)\n
                break;\n
            v2 += 1;\n
        }\n
        cgc_strncpy(&(&rootDir[16 * v2].field_0)[12] + 1, a0, 40);\n
        *(&rootDir[4 + 16 * v2].field_0) = a2;\n
        *(&rootDir[5 + 16 * v2].field_0) = a3 + 3;\n
        *(&rootDir[2 + 16 * v2].field_0) = a4;\n
        *(&rootDir[3 + 16 * v2].field_0) = 0;\n
        if (cgc_findFreeBlock(&v1))\n
        {\n
            v3 = -5;\n
            return v3;\n
        }\n
        cgc_eraseBlock(v1);\n
        cgc_setBlockInUse(v1);\n
        *(&rootDir[6 + 16 * v2].field_0) = v1;\n
        rootDir->field_2 = rootDir->field_2 + 1;\n
        cgc_readBlock(v1, &v0);\n
        *(v0) = a1;\n
        v0[1] = a2;\n
        *(&v0[2]) = a3;\n
        cgc_writeBlock(v0, v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -12;\n
        return v3;\n
    }\n
}\n
", "4236301:sub_40a40d": null, "4236304:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern void g_40d030;\n
extern unsigned int securityID;\n
\n
int main(unsigned long a0, unsigned long long a1, unsigned int a2, unsigned long a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x578]\n
    char v1;  // [bp-0x569]\n
    struct_0 *v2;  // [bp-0x568]\n
    char v3;  // [bp-0x559]\n
    char v4;  // [bp-0x558]\n
    char v5;  // [bp-0x4b1]\n
    char v6;  // [bp-0x4b0]\n
    unsigned int v7;  // [bp-0x4a8]\n
    unsigned int v8;  // [bp-0x4a4]\n
    unsigned int v9;  // [bp-0x4a0]\n
    unsigned int v10;  // [bp-0x49c]\n
    unsigned int v11;  // [bp-0x498]\n
    char v12[7];  // [bp-0x492]\n
    char v13;  // [bp-0x488]\n
    char v14;  // [bp-0x418]\n
    unsigned long v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x10]\n
    unsigned int v17;  // [bp-0xc]\n
\n
    v17 = 0;\n
    v16 = a0;\n
    v15 = a1;\n
    v10 = 1;\n
    memcpy(&v4, &g_40d030, 160);\n
    v11 = cgc_initFileSystem(0x1000, 0x2000, 0x258000);\n
    if (v11)\n
    {\n
        cgc_printf(\"Error making filesystem\\n
\", 0x2000, 0x258000, a3, a4);\n
        cgc__terminate(\"Error making filesystem\\n
\");\n
    }\n
    v11 = cgc_createFile(\"README.txt\", 2, 1);\n
    if (v11)\n
    {\n
        cgc_printf(\"error making README\\n
\", 2, 1, a3, a4);\n
        cgc__terminate(\"error making README\\n
\");\n
    }\n
    v5 = cgc_openFile(\"README.txt\", 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(\"error making README\\n
\", 1, 1, a3, a4);\n
        cgc__terminate(\"error making README\\n
\");\n
    }\n
    cgc_strcpy(&v13, \"Welcome to the interactive filesystem shell. \");\n
    v3 = v5;\n
    v2 = &v13;\n
    v11 = cgc_writeFile(v3, v2, cgc_strlen(&v13), 1);\n
    if (v11 < 0)\n
    {\n
        cgc_printf(\"error making README\\n
\", a1, a2, 1, a4);\n
        cgc__terminate(\"error making README\\n
\");\n
    }\n
    cgc_strcpy(&v13, \"Valid commands are make, makememfile, erase, list, copy, write, show, first, last, and perms.\");\n
    v1 = v5;\n
    v0 = &v13;\n
    v11 = cgc_writeFile(v1, v0, cgc_strlen(&v13), 1);\n
    if (v11 < 0)\n
    {\n
        cgc_printf(\"error making Message of the Day\\n
\", a1, a2, 1, a4);\n
        cgc__terminate(\"error making Message of the Day\\n
\");\n
    }\n
    cgc_setPerms(v5, 3, 1);\n
    cgc_closeFile(v5);\n
    cgc_makeMemoryFile(\"authentication.db\", 0x4347c000, 0x1000, 1, 0);\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            while (true)\n
            {\n
                do\n
                {\n
                    if (!v10)\n
                        cgc_printf(\"> \", a1, 0x400, a3, 0);\n
                    else\n
                        cgc_printf(\"login: \", a1, 0x400, a3, 0);\n
                    a1 = 10;\n
                    v11 = cgc_receive_until(&v14, 10, 0x400);\n
                } while (!cgc_strlen(&v14));\n
                a1 = 32;\n
                v7 = cgc_tokenize(&v14, 32, &v6);\n
                if (!v10)\n
                    break;\n
                if (v7 != 2)\n
                {\n
                    cgc_free(*(&v6));\n
                }\n
                else\n
                {\n
                    v9 = cgc_atoi(*((*(&v6) + 8)));\n
                    securityID = cgc_authenticate(*(*(&v6)), v9);\n
                    if (!securityID)\n
                    {\n
                        cgc_printf(\"Invalid login\\n
\", 32, 0x400, a3, 0);\n
                        cgc_free(*(&v6));\n
                    }\n
                    else\n
                    {\n
                        cgc_printf(\"Access allowed\\n
\", 32, 0x400, a3, 0);\n
                        a1 = securityID;\n
                        cgc_lookupName(v12, securityID);\n
                        cgc_printf(\"Welcome $s\\n
\", v12, 0x400, a3, 0);\n
                        v10 = 0;\n
                        cgc_free(*(&v6));\n
                    }\n
                }\n
            }\n
            if (cgc_strcmp(*(*(&v6)), \"logout\"))\n
                break;\n
            cgc_printf(\"bye felicia\\n
\", \"logout\", 0x400, a3, 0);\n
            v10 = 1;\n
        }\n
        if (!cgc_strcmp(*(*(&v6)), \"exit\"))\n
            break;\n
        for (v8 = 0; v8 < 10; v8 += 1)\n
        {\n
            if (!cgc_strcmp(*(*(&v6)), *(&(&v4)[16 * v8])))\n
            {\n
                a3 = v8 * 16;\n
                v11 = *(&(&v4)[8 + 16 * v8])(v7, *(&v6));\n
                break;\n
            }\n
        }\n
        if (v8 == 10 && cgc_strlen(*(*(&v6))) > 0)\n
            cgc_printf(\"unknown command $s\\n
\", *(*(&v6)), 0x400, a3, 0);\n
    }\n
    return v17;\n
}\n
", "4237549:sub_40a8ed": null, "4237552:cgc_tokenize": "long long cgc_tokenize(char *a0, unsigned long a1, unsigned long long *a2)\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x33]\n
    char v2;  // [bp-0x32]\n
    char v3;  // [bp-0x31]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    char v6;  // [bp-0x19]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v6 = a1;\n
    if (!cgc_strlen(a0))\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v5 = 0;\n
    v4 = 0;\n
    while (a0[v5])\n
    {\n
        while (true)\n
        {\n
            v3 = 0;\n
            if (cgc_isspace(a0[v5]))\n
                v3 = a0[v5];\n
            if (!(v3 & 1))\n
                break;\n
            v5 += 1;\n
        }\n
        if (!a0[v5])\n
            break;\n
        v4 += 1;\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (!cgc_isspace(a0[v5]))\n
                v2 = a0[v5];\n
            if (!(v2 & 1))\n
                break;\n
            v5 += 1;\n
        }\n
        if (!a0[v5])\n
            break;\n
    }\n
    *(a2) = cgc_malloc(v4 * 8);\n
    if (!*(a2))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = 0;\n
    for (v4 = 0; a0[v5]; v5 += 1)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (cgc_isspace(a0[v5]))\n
                v1 = a0[v5];\n
            if (!(v1 & 1))\n
                break;\n
            v5 += 1;\n
        }\n
        if (!a0[v5])\n
            break;\n
        *((*(a2) + v4 * 8)) = &a0[v5];\n
        v4 += 1;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (!cgc_isspace(a0[v5]))\n
                v0 = a0[v5];\n
            if (!(v0 & 1))\n
                break;\n
            v5 += 1;\n
        }\n
        if (!a0[v5])\n
            break;\n
        a0[v5] = 0;\n
    }\n
    v7 = v4;\n
    return v7;\n
}\n
", "4238264:sub_40abb8": null, "4238272:cgc_wildcard_search": "long long cgc_wildcard_search(char a0[2], char *a1)\n
{\n
    char v0;  // [bp-0x2a]\n
    char v1;  // [bp-0x29]\n
    char v2[2];  // [bp-0x28]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char v4[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    *(&v4) = a0;\n
    v3 = a1;\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = v4[0];\n
        if (!(v1 & 1))\n
            break;\n
        if (v4[0] == 42)\n
        {\n
            if (!v4[1])\n
            {\n
                v5 = 1;\n
                return v5;\n
            }\n
            *(&v4) = &v4[1];\n
            *(&v2) = v4;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v4[0] != *(v3))\n
                    v0 = *(v3);\n
                if (!(v0 & 1))\n
                    break;\n
                v3 += 1;\n
            }\n
            if (!*(v3))\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            v4 = &v4[1];\n
            v3 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(v3) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else if (v4[0] == 63)\n
        {\n
            v4 = &v4[1];\n
            v3 += 1;\n
        }\n
        else if (v4[0] == *(v3))\n
        {\n
            v4 = &v4[1];\n
            v3 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(v3) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
            if (v4 == v2)\n
            {\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                v4 = v2;\n
                continue;\n
            }\n
        }\n
    }\n
    if (*(v3))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (*(v4))\n
    {\n
        if (*(v4) != 42)\n
        {\n
LABEL_40ae4d:\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (!(!*((v4 + 1))))\n
        {\n
            goto LABEL_40ae4d;\n
        }\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4238949:sub_40ae65": null, "4238960:cgc_contains_wildcards": "long long cgc_contains_wildcards(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) == 42)\n
            break;\n
        if (*(v0) == 63)\n
            break;\n
        v0 += 1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4239060:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:memset": null, "5242912:cgc_transmit": null, "5242920:cgc_allocate": null, "5242928:memcpy": null, "5242936:cgc_rint": null, "5242944:cgc_deallocate": null, "5242952:cgc_log10": null, "5242960:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}