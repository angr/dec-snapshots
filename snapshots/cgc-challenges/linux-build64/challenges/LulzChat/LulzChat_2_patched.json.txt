{"4202496:_init": "extern struct_0 *g_409730;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_409730;\n
    if (g_409730)\n
        v1 = g_409730();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_409750;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_409750;\n
    goto *(4233048);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202576:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4233024);\n
}\n
", "4202656:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202693:sub_4020c5": null, "4202694:sub_4020c6": null, "4202704:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_409728;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202745:sub_4020f9": null, "4202752:register_tm_clones": "extern unsigned long long g_409738;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202809:sub_402139": null, "4202816:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_409740;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_409740)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202869:sub_402175": null, "4202873:sub_402179": null, "4202880:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202889:sub_402189": null, "4202896:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = a1 * a0;\n
        if ((0 CONCAT v1) /m a1 != a0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = cgc_malloc(v1);\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = cgc_memset(v0, 0, v1);\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203061:sub_402235": null, "4203072:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = cgc_isdigit(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203138:sub_402282": null, "4203152:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = cgc_isupper(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203218:sub_4022d2": null, "4203232:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4203258:sub_4022fa": null, "4203264:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4203290:sub_40231a": null, "4203296:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4203322:sub_40233a": null, "4203328:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return ((a0 & -128) ^ 255) & 1;\n
}\n
", "4203356:sub_40235c": null, "4203360:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 32)\n
        v0 = a0 == 9;\n
    return v0 & 1;\n
}\n
", "4203402:sub_40238a": null, "4203408:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 127)\n
        v0 = a0 < 32;\n
    return v0 & 1;\n
}\n
", "4203450:sub_4023ba": null, "4203456:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 != 32)\n
    {\n
        v0 = cgc_isprint(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203513:sub_4023f9": null, "4203520:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 != 127;\n
    return v0 & 1;\n
}\n
", "4203562:sub_40242a": null, "4203568:cgc_ispunct": "extern char _punct;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return (&_punct)[a0];\n
}\n
", "4203592:sub_402448": null, "4203600:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    if (a0 > 8)\n
    {\n
        v0 = 1;\n
        if (a0 < 14)\n
            return v0 & 1;\n
    }\n
    v0 = a0 == 32;\n
    return v0 & 1;\n
}\n
", "4203652:sub_402484": null, "4203664:cgc_isxdigit": "extern char _xdigit;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return (&_xdigit)[a0];\n
}\n
", "4203688:sub_4024a8": null, "4203696:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4203711:sub_4024bf": null, "4203712:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "4203769:sub_4024f9": null, "4203776:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & 95;\n
    return v0;\n
}\n
", "4203833:sub_402539": null, "4203840:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0 - 24;\n
    v2 = v0;\n
    if (v2->field_8)\n
    {\n
        return v0;\n
    }\n
    else if (v0->field_0 < 0x40000)\n
    {\n
        cgc_insert_into_flist(v0);\n
        v2 = cgc_coalesce(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_free_huge(v0);\n
        return v2;\n
    }\n
}\n
", "4203955:sub_4025b3": null, "4203968:cgc_free_huge": "long long cgc_free_huge(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
\n
    v0 = a0;\n
    return cgc_deallocate(a0, v2);\n
}\n
", "4204002:sub_4025e2": null, "4204016:cgc_malloc": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern struct_1 *cgc_free_lists;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 + 24 < 0x40000)\n
    {\n
        if ((v4 & 7))\n
            v4 = v4 - -7 & -8;\n
        v4 += 24;\n
        v3 = 0;\n
        v2 = cgc_find_fit(v4, &v3);\n
        if (!v3)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v2 = 31;\n
                v3 = (&cgc_free_lists)[v2];\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_remove_from_flist(v3);\n
        v1 = *(v3) - v4;\n
        if (v1 > 48)\n
        {\n
            v0 = v3 + v4;\n
            v0->field_0 = v1;\n
            v0->field_8 = 1;\n
            v0->field_10 = 0;\n
            v0->field_18 = 0;\n
            *(v3) = v4;\n
            v0->field_28 = v3;\n
            v0->field_20 = *((v3 + 32));\n
            if (*((v3 + 32)))\n
                *((*((v3 + 32)) + 40)) = v0;\n
            *((v3 + 32)) = v0;\n
            cgc_insert_into_flist(v0);\n
        }\n
        v5 = v3 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc_huge(v4);\n
        return v5;\n
    }\n
}\n
", "4204442:sub_40279a": null, "4204448:cgc_malloc_huge": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_malloc_huge(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    v2 += 24;\n
    if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    v0->field_0 = v2;\n
    v0->field_8 = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v0->field_28 = 0;\n
    v0->field_20 = 0;\n
    v3 = v0 + 24;\n
    return v3;\n
}\n
", "4204610:sub_402842": null, "4204624:cgc_find_fit": "extern unsigned long long cgc_free_lists;\n
\n
long long cgc_find_fit(unsigned long long a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    for (v0 = cgc_get_size_class(a0); v0 < 32; v0 += 1)\n
    {\n
        for (*(a1) = (&cgc_free_lists)[v0]; *(a1); *(a1) = *(a1)->field_10)\n
        {\n
            if (*(a1)->field_0 >= a0)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a1) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4204803:sub_402903": null, "4204816:cgc_allocate_new_blk": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_allocate_new_blk()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v0 = 0x40000;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1 = *(&v2);\n
        v1->field_0 = v0;\n
        v1->field_8 = 1;\n
        v1->field_18 = 0;\n
        v1->field_10 = 0;\n
        v1->field_28 = 0;\n
        v1->field_20 = 0;\n
        cgc_insert_into_flist(v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4204994:sub_4029c2": null, "4205008:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(a0 <= size_class_limits[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4205103:sub_402a2f": null, "4205104:cgc_insert_into_flist": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_1 cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(a0->field_0);\n
    a0->field_8 = 1;\n
    if (!(&cgc_free_lists.field_0)[v0])\n
    {\n
        (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
        return &cgc_free_lists.field_0;\n
    }\n
    a0->field_10 = (&cgc_free_lists.field_0)[v0];\n
    (&cgc_free_lists.field_0)[v0]->field_18 = a0;\n
    (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4205271:sub_402ad7": null, "4205280:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_free_lists[4];\n
\n
long long cgc_remove_from_flist(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(*(&a0->field_0));\n
    if (a0->field_18)\n
        a0->field_18->field_10 = a0->field_10;\n
    if (a0->field_10)\n
        a0->field_10->field_18 = a0->field_18;\n
    if (cgc_free_lists[v0] == a0)\n
        cgc_free_lists[v0] = a0->field_10;\n
    a0->field_10 = 0;\n
    a0->field_18 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4205466:sub_402b9a": null, "4205472:cgc_coalesce": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_coalesce(struct_1 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    struct_1 *v4;  // rax\n
    struct_1 *v5;  // rax, Other Possible Types: unsigned long long, struct_0 *, unsigned long\n
\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0->field_20);\n
        cgc_remove_from_flist(a0);\n
        v1 = a0->field_28;\n
        v1->field_0 = a0->field_0 + v1->field_0;\n
        v2 = a0->field_28;\n
        v2->field_0 = a0->field_20->field_0 + v2->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        cgc_remove_from_blist(a0->field_20);\n
        v5 = cgc_remove_from_blist(a0);\n
        return v5;\n
    }\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && !a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0);\n
        v3 = a0->field_28;\n
        v3->field_0 = a0->field_0 + v3->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        v5 = cgc_remove_from_blist(a0);\n
        goto LABEL_402d72;\n
    }\n
    v5 = a0;\n
    if (a0->field_28)\n
    {\n
        v5 = a0->field_28;\n
        if (!v5->field_8)\n
        {\n
            v5 = a0;\n
            if (a0->field_20)\n
            {\n
                v5 = a0->field_20;\n
                if (v5->field_8)\n
                {\n
                    cgc_remove_from_flist(a0->field_20);\n
                    cgc_remove_from_flist(a0);\n
                    v4 = a0;\n
                    v4->field_0 = a0->field_20->field_0 + v4->field_0;\n
                    cgc_insert_into_flist(a0);\n
                    v5 = cgc_remove_from_blist(a0->field_20);\n
                }\n
            }\n
        }\n
    }\n
LABEL_402d72:\n
    return v5;\n
}\n
", "4205954:sub_402d82": null, "4205968:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[32];\n
    struct struct_1 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[32];\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long cgc_remove_from_blist(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (a0->field_28)\n
        a0->field_28->field_20 = v0->field_20;\n
    v2 = a0;\n
    if (a0->field_20)\n
    {\n
        v2 = a0->field_20;\n
        *((v2 + 40)) = a0->field_28;\n
    }\n
    return v2;\n
}\n
", "4206048:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0[a0] != a1)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206161:sub_402e51": null, "4206176:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x40], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a2)\n
        {\n
            if (*(v2) != *(v1))\n
            {\n
                v3 = *(v2) - *(v1);\n
                return v3;\n
            }\n
            v2 += 1;\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206334:sub_402efe": null, "4206336:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4206435:sub_402f63": null, "4206448:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = a0;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4206594:sub_403002": null, "4206608:cgc_output_number_printf": "long long cgc_output_number_printf(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    char v3;  // [bp-0x49]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0x10]\n
\n
    v8 = a1;\n
    v7 = a3;\n
    v6 = 0;\n
    if (v8 >= a2)\n
    {\n
        v6 = cgc_output_number_printf(a0, (0 CONCAT v8) /m a2, a2, v7 - 1, a4);\n
        v8 = (0 CONCAT v8) /m a2 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 = v7 - 1;\n
            if (!v7)\n
                break;\n
            if (!(a4 & 1))\n
                v4 = 32;\n
            else\n
                v5 = 48;\n
            cgc_transmit(a0, a1, a2, a3);\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
    }\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v6 + 1;\n
}\n
", "4207009:sub_4031a1": null, "4207024:cgc_fdprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_fdprintf(unsigned long long a0, char *a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1c0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1b8]\n
    unsigned int v2;  // [bp-0x1ac]\n
    struct struct_0 **v3;  // [bp-0x1a8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1a0]\n
    unsigned int v5;  // [bp-0x194]\n
    unsigned long v6;  // [bp-0x190]\n
    struct struct_0 **v7;  // [bp-0x188]\n
    struct_1 *v8;  // [bp-0x180]\n
    unsigned int v9;  // [bp-0x174]\n
    unsigned int v10;  // [bp-0x170]\n
    unsigned int v11;  // [bp-0x16c]\n
    char v12;  // [bp-0x168]\n
    unsigned long v13;  // [bp-0x158]\n
    unsigned long v14;  // [bp-0x150]\n
    unsigned long v15;  // [bp-0x148]\n
    unsigned long v16;  // [bp-0x140]\n
    int v17;  // [bp-0x138]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    char v25;  // [bp-0xa9]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    unsigned int v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x54]\n
    unsigned long v33;  // [bp-0x50]\n
    unsigned long v34;  // [bp-0x48]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30]\n
    unsigned int v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    unsigned int v40;  // [bp-0x24]\n
    char *v41;  // [bp-0x20]\n
    char *v42;  // [bp-0x18], Other Possible Types: unsigned long\n
    char v43;  // [bp-0x8]\n
    unsigned long v44;  // [bp+0x8]\n
    unsigned long long v45;  // rbp\n
    char v46;  // al\n
    int v47;  // xmm0\n
    int v48;  // xmm1\n
    int v49;  // xmm2\n
    int v50;  // xmm3\n
    int v51;  // xmm4\n
    int v52;  // xmm5\n
    int v53;  // xmm6\n
    int v54;  // xmm7\n
    unsigned long v55;  // r9\n
    char *v56;  // rax\n
    char *v57;  // rax\n
    unsigned long long v58;  // rdx\n
    struct struct_0 **v59;  // rax\n
    unsigned long long v60;  // rdx\n
    struct struct_0 **v61;  // rax, Other Possible Types: unsigned long\n
    struct struct_0 **v62;  // rdx\n
    unsigned int *v63;  // rax\n
\n
    v45 = &v43;\n
    if (v46)\n
    {\n
        v17 = v47;\n
        v18 = v48;\n
        v19 = v49;\n
        v20 = v50;\n
        v21 = v51;\n
        v22 = v52;\n
        v23 = v53;\n
        v24 = v54;\n
    }\n
    v16 = v55;\n
    v15 = a4;\n
    v14 = a3;\n
    v13 = a2;\n
    v42 = a1;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v44;\n
    v32 = 48;\n
    v31 = 16;\n
    while (*(v42))\n
    {\n
        v56 = v42;\n
        v42 = v56 + 1;\n
        v30 = *(v56);\n
        if (v30 != 37)\n
        {\n
            v25 = v30;\n
            cgc_transmit(a0, a1, a2, a3);\n
LABEL_40361e:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v57 = v42;\n
                    a3 = v57 + 1;\n
                    v42 = a3;\n
                    v30 = *(v57);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                a2 = 10;\n
                v36 = cgc_strtol(v42 - 1, &v42, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_4035dd;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        a3 = v4;\n
                        v58 = v5;\n
                        v59 = v58 + a3->field_10;\n
                        a2 = v58 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v3 = v59;\n
                    }\n
                    else\n
                    {\n
                        a3 = v4;\n
                        a2 = *((a3 + 8));\n
                        *((a3 + 8)) = a2 + 1;\n
                        v3 = a2;\n
                    }\n
                    v40 = *(v3);\n
                    if (v40 < 0)\n
                    {\n
                        v27 = 45;\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v40 = -(v40);\n
                    }\n
                    cgc_output_number_printf(a0, v40, 10, v36, v37);\n
                    goto LABEL_4035dd;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 <= 40)\n
                    {\n
                        a3 = v8;\n
                        v60 = v9;\n
                        v61 = v60 + a3->field_10;\n
                        a2 = v60 + 8;\n
                        *(&a3->field_0) = a2;\n
                    }\n
                    else\n
                    {\n
                        a3 = v8;\n
                        v62 = *((a3 + 8));\n
                        v61 = v62;\n
                        a2 = v62 + 1;\n
                        *((a3 + 8)) = a2;\n
                    }\n
                    v7 = v61;\n
                    v41 = &*(v7)->field_0;\n
                    v39 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v39;\n
                        if (v6 >= cgc_strlen(v41))\n
                            break;\n
                        v28 = v41[v39];\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v39 += 1;\n
                    }\n
                    goto LABEL_4035dd;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v26 = v30;\n
                    cgc_transmit(a0, a1, a2, a3);\n
LABEL_4035dd:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_40361e;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 <= 40)\n
            {\n
                a3 = v1;\n
                a2 = v2;\n
                v63 = a2 + a3->field_10;\n
                *(&a3->field_0) = a2 + 8;\n
                v0 = v63;\n
            }\n
            else\n
            {\n
                a3 = v1;\n
                a2 = a3->field_8;\n
                a3->field_8 = &a2[2];\n
                v0 = a2;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number_printf(a0, v35, 16, v36, v37);\n
            goto LABEL_4035dd;\n
        }\n
    }\n
    return v38;\n
}\n
", "4208180:sub_403634": null, "4208192:cgc_output_number_sprintf": "long long cgc_output_number_sprintf(unsigned int *a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned int v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    char v2;  // [bp-0x61]\n
    char v3;  // [bp-0x51]\n
    char v4;  // [bp-0x41]\n
    char v5;  // [bp-0x31]\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x1c], Other Possible Types: unsigned long\n
    struct struct_0 **v9;  // rax\n
    unsigned int *v10;  // rax\n
    struct struct_0 **v11;  // rax\n
    unsigned int *v12;  // rax\n
\n
    v7 = a2;\n
    v6 = a4;\n
    if (v7 >= a3)\n
    {\n
        cgc_output_number_sprintf(a0, a1, (0 CONCAT v7) /m a3, a3, v6 - 1, a5);\n
        v7 = (0 CONCAT v7) /m a3 >> 32;\n
    }\n
    if (v7 < a3 && v6 > 0)\n
    {\n
        while (true)\n
        {\n
            v6 = v6 - 1;\n
            if (!v6)\n
                break;\n
            if ((a5 & 1))\n
            {\n
                v5 = 48;\n
                *(a1)->field_0 = v5;\n
            }\n
            else\n
            {\n
                v4 = 32;\n
                *(a1)->field_0 = v4;\n
            }\n
            v9 = a1;\n
            *(v9) = *(v9) + 1;\n
            v10 = a0;\n
            *(v10) = *(v10) + 1;\n
        }\n
    }\n
    if ((a5 & 2))\n
    {\n
        if (v7 < 10)\n
            v1 = v7 + 48;\n
        else\n
            v1 = v7 + 55;\n
        v3 = v1;\n
        *(a1)->field_0 = v3;\n
    }\n
    else\n
    {\n
        if (v7 < 10)\n
            v0 = v7 + 48;\n
        else\n
            v0 = v7 + 87;\n
        v2 = v0;\n
        *(a1)->field_0 = v2;\n
    }\n
    v11 = a1;\n
    *(v11) = *(v11) + 1;\n
    v12 = a0;\n
    *(v12) = *(v12) + 1;\n
    return a0;\n
}\n
", "4208656:cgc_sprintf": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_sprintf(char *a0, char *a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1c0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0x1b8]\n
    unsigned int v2;  // [bp-0x1ac]\n
    unsigned int *v3;  // [bp-0x1a8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0x1a0]\n
    unsigned int v5;  // [bp-0x194]\n
    unsigned long v6;  // [bp-0x190]\n
    struct struct_0 **v7;  // [bp-0x188]\n
    struct_1 *v8;  // [bp-0x180]\n
    unsigned int v9;  // [bp-0x174]\n
    unsigned int v10;  // [bp-0x170]\n
    unsigned int v11;  // [bp-0x16c]\n
    char v12;  // [bp-0x168]\n
    unsigned long v13;  // [bp-0x158]\n
    unsigned long v14;  // [bp-0x150]\n
    unsigned long v15;  // [bp-0x148]\n
    unsigned long v16;  // [bp-0x140]\n
    int v17;  // [bp-0x138]\n
    int v18;  // [bp-0x128]\n
    int v19;  // [bp-0x118]\n
    int v20;  // [bp-0x108]\n
    int v21;  // [bp-0xf8]\n
    int v22;  // [bp-0xe8]\n
    int v23;  // [bp-0xd8]\n
    int v24;  // [bp-0xc8]\n
    char v25;  // [bp-0xa9]\n
    char v26;  // [bp-0x99]\n
    char v27;  // [bp-0x89]\n
    char v28;  // [bp-0x79]\n
    char v29;  // [bp-0x69]\n
    char v30;  // [bp-0x59]\n
    unsigned int v31;  // [bp-0x58]\n
    unsigned int v32;  // [bp-0x54]\n
    unsigned long v33;  // [bp-0x50]\n
    unsigned long v34;  // [bp-0x48]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30]\n
    unsigned int v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    unsigned int v40;  // [bp-0x24]\n
    char *v41;  // [bp-0x20]\n
    char *v42;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v43;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v44;  // [bp-0x8]\n
    unsigned long v45;  // [bp+0x8]\n
    unsigned long long v46;  // rbp\n
    char v47;  // al\n
    int v48;  // xmm0\n
    int v49;  // xmm1\n
    int v50;  // xmm2\n
    int v51;  // xmm3\n
    int v52;  // xmm4\n
    int v53;  // xmm5\n
    int v54;  // xmm6\n
    int v55;  // xmm7\n
    unsigned long v56;  // r9\n
    char *v57;  // rax\n
    char *v58;  // rax\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    struct struct_0 **v66;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v67;  // rcx\n
    struct_1 *v68;  // rcx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    char *v73;  // rax\n
\n
    v46 = &v44;\n
    if (v47)\n
    {\n
        v17 = v48;\n
        v18 = v49;\n
        v19 = v50;\n
        v20 = v51;\n
        v21 = v52;\n
        v22 = v53;\n
        v23 = v54;\n
        v24 = v55;\n
    }\n
    v16 = v56;\n
    v15 = a4;\n
    v14 = a3;\n
    v13 = a2;\n
    v43 = a0;\n
    v42 = a1;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v45;\n
    v32 = 48;\n
    v31 = 16;\n
    while (*(v42))\n
    {\n
        v57 = v42;\n
        v42 = v57 + 1;\n
        v30 = *(v57);\n
        if (v30 != 37)\n
        {\n
            v25 = v30;\n
            *(v43) = v25;\n
            v43 += 1;\n
            v38 += 1;\n
LABEL_403cb7:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v58 = v42;\n
                    v42 = v58 + 1;\n
                    v30 = *(v58);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                v36 = cgc_strtol(v42 - 1, &v42, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                *(v43) = v29;\n
                v43 += 1;\n
                v38 += 1;\n
                goto LABEL_403c70;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        v59 = v4;\n
                        v60 = v5;\n
                        v61 = v60 + v59->field_10;\n
                        *(&v59->field_0) = v60 + 8;\n
                        v3 = v61;\n
                    }\n
                    else\n
                    {\n
                        v62 = v4;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v3 = v63;\n
                    }\n
                    v40 = *(v3);\n
                    if (v40 < 0)\n
                    {\n
                        v27 = 45;\n
                        *(v43) = v27;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v40 = -(v40);\n
                    }\n
                    cgc_output_number_sprintf(&v38, &v43, v40, 10, v36, v37);\n
                    goto LABEL_403c70;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 > 40)\n
                    {\n
                        v67 = v8;\n
                        v66 = v67->field_8;\n
                        v67->field_8 = v66 + 8;\n
                    }\n
                    else\n
                    {\n
                        v64 = v8;\n
                        v65 = v9;\n
                        v66 = v65 + v64->field_10;\n
                        *(&v64->field_0) = v65 + 8;\n
                    }\n
                    v7 = v66;\n
                    v41 = &*(v7)->field_0;\n
                    v39 = 0;\n
                    while (true)\n
                    {\n
                        v6 = v39;\n
                        if (v6 >= cgc_strlen(v41))\n
                            break;\n
                        v28 = v41[v39];\n
                        *(v43) = v28;\n
                        v43 += 1;\n
                        v38 += 1;\n
                        v39 += 1;\n
                    }\n
                    goto LABEL_403c70;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v26 = v30;\n
                    *(v43) = v26;\n
                    v43 += 1;\n
                    v38 += 1;\n
LABEL_403c70:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_403cb7;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 <= 40)\n
            {\n
                v68 = v1;\n
                v69 = v2;\n
                v70 = v69 + v68->field_10;\n
                *(&v68->field_0) = v69 + 8;\n
                v0 = v70;\n
            }\n
            else\n
            {\n
                v71 = v1;\n
                v72 = v71->field_8;\n
                v71->field_8 = &v72[2];\n
                v0 = v72;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number_sprintf(&v38, &v43, v35, 16, v36, v37);\n
            goto LABEL_403c70;\n
        }\n
    }\n
    v73 = v43;\n
    v43 = v73 + 1;\n
    *(v73) = 0;\n
    return v38;\n
}\n
", "4209882:sub_403cda": null, "4209888:cgc_realloc": "long long cgc_realloc(unsigned int a0, unsigned int a1)\n
{\n
    unsigned long long *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = cgc_malloc(a1);\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        *(&v1) = cgc_malloc(a1);\n
        if (!*(&v1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a0 - 24;\n
        if (a1 >= *(v0) - 24)\n
            cgc_memcpy(*(&v1), a0, *(v0) - 24);\n
        else\n
            cgc_memcpy(*(&v1), a0, a1);\n
        cgc_free(a0);\n
        v2 = *(&v1);\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210113:sub_403dc1": null, "4210128:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v3 = v0;\n
            v0 = v3 + 1;\n
            if (*(v3) == a1)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4210219:sub_403e2b": null, "4210224:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(v1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v1) - *(v2);\n
}\n
", "4210363:sub_403ebb": null, "4210368:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    unsigned long v4;  // rcx\n
\n
    v1 = a1;\n
    for (v0 = 0; *(v1); *((a0 + v4)) = *(v3))\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4210463:sub_403f1f": null, "4210464:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4210523:sub_403f5b": null, "4210528:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = v3;\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    v1[v0] = 0;\n
    return v1;\n
}\n
", "4210645:sub_403fd5": null, "4210656:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = cgc_strchr(v2, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = &*(a0)->field_0;\n
    if (!*(v1))\n
    {\n
        *(a0) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(a0) = v1 + 1;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4210877:sub_4040bd": null, "4210880:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    char v0[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x47]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6[2];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x1c]\n
\n
    v12 = a2;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = a0;\n
    if (v12 == 1)\n
    {\n
LABEL_40410a:\n
    }\n
    else\n
    {\n
        if (!(v12 <= 36))\n
            goto LABEL_40410a;\n
        if (v12 < 0)\n
            goto LABEL_40410a;\n
        while (true)\n
        {\n
            if (v6[0] != 32 && v6[0] != 9 && v6[0] != 12 && v6[0] != 10 && v6[0] != 11)\n
                break;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 43)\n
            v6 = &v6[1];\n
        v5 = v12;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                v12 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_404214:\n
                v6 += 2;\n
                v12 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_404214;\n
                v6 = &v6[1];\n
                v12 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_404295;\n
                    v6 += 2;\n
                    v12 = 16;\n
                }\n
LABEL_404295:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_404401;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_4043be;\n
            }\n
            if (!v7)\n
            {\n
LABEL_4043be:\n
                if (v8 >= v12)\n
                    goto LABEL_404401;\n
                v10 *= v12;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                v6 = &v6[1];\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_4043b5;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_4043b5:\n
                v8 += 10;\n
                goto LABEL_4043be;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_40432f;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_40432f:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_404401:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a1)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = a0;\n
    *(a1) = v0;\n
    return v10;\n
}\n
", "4211795:sub_404453": null, "4211808:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4211849:sub_404489": null, "4211856:cgc_protect": "long long cgc_protect(unsigned int a0[4], unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
\n
    v7 = 0;\n
    v6 = a1[0];\n
    v5 = a1[1];\n
    v4 = a0[0];\n
    v3 = a0[1];\n
    v2 = a0[2];\n
    v1 = a0[3];\n
    v0 = 3111729054;\n
    for (v8 = 0; v8 < 32; v8 += 1)\n
    {\n
        v7 = v0 + v7;\n
        v6 = (v5 * 16 + v4 ^ v5 + v7 ^ (v5 >> 5) + v3) + v6;\n
        v5 = (v6 * 16 + v2 ^ v6 + v7 ^ (v6 >> 5) + v1) + v5;\n
    }\n
    a1[0] = v6;\n
    a1[1] = v5;\n
    return a1;\n
}\n
", "4212069:sub_404565": null, "4212080:cgc_protect_msg": "long long cgc_protect_msg(unsigned int a0[4], unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
\n
    for (v0 = 0; v0 < a2 >> 3; v0 += 1)\n
    {\n
        cgc_protect(a0, a1 + v0 * 8);\n
    }\n
    return v0;\n
}\n
", "4212171:sub_4045cb": null, "4212176:cgc_unprotect": "long long cgc_unprotect(unsigned int a0[4], unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
\n
    v7 = 791081920;\n
    v6 = a1[0];\n
    v5 = a1[1];\n
    v4 = a0[0];\n
    v3 = a0[1];\n
    v2 = a0[2];\n
    v1 = a0[3];\n
    v0 = 3111729054;\n
    for (v8 = 0; v8 < 32; v8 += 1)\n
    {\n
        v5 -= v6 * 16 + v2 ^ v6 + v7 ^ (v6 >> 5) + v1;\n
        v6 -= v5 * 16 + v4 ^ v5 + v7 ^ (v5 >> 5) + v3;\n
        v7 -= v0;\n
    }\n
    a1[0] = v6;\n
    a1[1] = v5;\n
    return a1;\n
}\n
", "4212395:sub_4046ab": null, "4212400:cgc_unprotect_msg": "long long cgc_unprotect_msg(unsigned int a0[4], unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
\n
    for (v0 = 0; v0 < a2 >> 3; v0 += 1)\n
    {\n
        cgc_unprotect(a0, a1 + v0 * 8);\n
    }\n
    return v0;\n
}\n
", "4212491:sub_40470b": null, "4212496:cgc_is_alnum_str": "long long cgc_is_alnum_str(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
\n
    v1 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(a0))\n
            break;\n
        v1 = (cgc_isalnum(a0[v2]) ^ 255) & 1 | v1;\n
        v2 += 1;\n
    }\n
    return (v1 ^ 255) & 1;\n
}\n
", "4212631:sub_404797": null, "4212640:cgc_quit": "char cgc_quit(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    cgc_fdprintf(1, \"[INFO] Bye!\\n
\", a2, a3, a4);\n
    v0 = 0;\n
    cgc_send_request(&v0, 6);\n
    return cgc_exit(0);\n
}\n
", "4212701:sub_4047dd": null, "4212704:cgc_exit": "long long cgc_exit(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    v0 = a0;\n
    cgc__terminate(a0);\n
    return cgc_help(a0, v2, v3, v4, v5, v6);\n
}\n
", "4212736:cgc_help": "char cgc_help(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    cgc_fdprintf(1, \"---- Commands --------------------\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'h'elp - display this help menu\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'r'egister - register a user\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'l'ogin - login\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'o'ut - logout\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'e'numerate - list messages\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'v'iew - view a message\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 's'end - send a message\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'd'elete - delete a message\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" 'q'uit - quit\\n
\", a2, a3, a4);\n
    return cgc_fdprintf(1, \"----------------------------------\\n
\", a2, a3, a4);\n
}\n
", "4212951:sub_4048d7": null, "4212960:cgc_register_user": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
long long cgc_register_user(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xe0]\n
    char v1;  // [bp-0xa0]\n
    char v2;  // [bp-0x60]\n
    char v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1c]\n
    unsigned long v5;  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_1 *v8;  // rax, Other Possible Types: unsigned long long, unsigned long\n
\n
    v6 = 0;\n
    cgc_fdprintf(1, \"\\n
[[[ REGISTER ]]]\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \"- username: \", a2, a3, a4);\n
    v8 = cgc_read_until(0, &v0, 64, 10);\n
    if (v8 >= 0)\n
    {\n
        cgc_fdprintf(1, \"- password: \", 64, 10, a4);\n
        v8 = cgc_read_until(0, &v1, 64, 10);\n
        if (v8 >= 0)\n
        {\n
            cgc_fdprintf(1, \"- password confirm: \", 64, 10, a4);\n
            v8 = cgc_read_until(0, &v2, 64, 10);\n
            if (v8 >= 0)\n
            {\n
                cgc_send_request(&v0, 0);\n
                cgc_fdprintf(1, \"\\n
\", 64, 10, a4);\n
                v8 = cgc_parse_packet(4);\n
                v6 = v8;\n
                if (v6)\n
                {\n
                    v8 = *((v6 + 4));\n
                    if (v8 >= 8)\n
                    {\n
                        cgc_memcpy(&v3, *((v6 + 8)), 8);\n
                        if (*(&v4) > 0)\n
                            v5 = *((v6 + 8)) + 8;\n
                        v8 = cgc_handle_response(*((v6 + 1)), &v3);\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v6)\n
        v8 = cgc_free(v6);\n
    return v8;\n
}\n
", "4213359:sub_404a6f": null, "4213360:cgc_logout_user": "extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
extern char g_4099b8;\n
extern char g_4099f8;\n
\n
long long cgc_logout_user(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!cur_user)\n
    {\n
        v1 = cgc_fdprintf(1, \"[ERROR] Not logged in.\\n
\", a2, a3, a4);\n
        return v1;\n
    }\n
    cgc_memset(&g_4099b8, 0, 64);\n
    cgc_memset(&g_4099f8, 0, 64);\n
    cur_user = 0;\n
    g_4099b4 = 0;\n
    v1 = cgc_fdprintf(1, \"[INFO] Successfully logged out.\\n
\", 64, a3, a4);\n
    return v1;\n
}\n
", "4213490:sub_404af2": null, "4213504:cgc_login_user": "typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
} struct_0;\n
\n
extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
extern unsigned int g_4099b8;\n
extern unsigned int g_4099f8;\n
\n
long long cgc_login_user(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xa0]\n
    char v1;  // [bp-0x60]\n
    char v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    struct_0 *v4;  // [bp-0x18]\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_1 *v7;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v8;  // rsi\n
    unsigned long v9;  // rdi\n
    unsigned long long v10;  // rcx\n
\n
    v5 = 0;\n
    cgc_fdprintf(1, \"\\n
[[[ LOGIN ]]]\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \"- username: \", a2, a3, a4);\n
    v7 = cgc_read_until(0, &v0, 64, 10);\n
    if (v7 >= 0)\n
    {\n
        cgc_fdprintf(1, \"- password: \", 64, 10, a4);\n
        v7 = cgc_read_until(0, &v1, 64, 10);\n
        if (v7 >= 0)\n
        {\n
            cgc_send_request(&v0, 1);\n
            v7 = cgc_parse_packet(4);\n
            v5 = v7;\n
            if (v5)\n
            {\n
                v7 = *((v5 + 4));\n
                if (v7 >= 8)\n
                {\n
                    v8 = *((v5 + 8));\n
                    cgc_memcpy(&v2, v8, 8);\n
                    if (*(&v3) > 0)\n
                        v4 = *((v5 + 8)) + 8;\n
                    v9 = *((v5 + 1));\n
                    v7 = cgc_handle_response(v9, &v2);\n
                    if (!v7)\n
                    {\n
                        v7 = *((v5 + 4)) - 8;\n
                        v10 = *(&v3);\n
                        if (v7 >= v10)\n
                        {\n
                            v7 = *(&v3);\n
                            if (v7 >= 6)\n
                            {\n
                                if (cur_user)\n
                                    cgc_logout_user(v9, v8, 8, v10, a4);\n
                                cgc_strcpy(&g_4099b8, &v0);\n
                                cgc_strcpy(&g_4099f8, &v1);\n
                                cur_user = v4->field_0;\n
                                v7 = *(&(&v4->field_0)[1]);\n
                                g_4099b4 = v7;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v5)\n
        v7 = cgc_free(v5);\n
    return v7;\n
}\n
", "4213976:sub_404cd8": null, "4213984:cgc_list_messages": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
\n
long long cgc_list_messages(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned short v0;  // [bp-0x46]\n
    unsigned short v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x42]\n
    unsigned short *v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned short v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    char v7;  // [bp-0x28]\n
    char v8;  // [bp-0x24]\n
    unsigned short *v9;  // [bp-0x20]\n
    struct_0 *v10;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned short v11;  // [bp-0xc]\n
    unsigned short v12;  // [bp-0xa]\n
    unsigned long long v14;  // rcx\n
    unsigned long long v15;  // rcx\n
\n
    v12 = 0;\n
    v10 = 0;\n
    if (!cur_user)\n
    {\n
        cgc_fdprintf(1, \"[ERROR] Login first, please.\\n
\", a2, a3, a4);\n
    }\n
    else\n
    {\n
        v5 = cur_user;\n
        v6 = g_4099b4;\n
        cgc_send_request(&v5, 2);\n
        v10 = cgc_parse_packet(4);\n
        if (v10 && *((v10 + 4)) >= 8)\n
        {\n
            cgc_memcpy(&v7, *((v10 + 8)), 8);\n
            if (*(&v8) > 0)\n
                v9 = *((v10 + 8)) + 8;\n
            if (!cgc_handle_response(*((v10 + 1)), &v7) && *((v10 + 4)) - 8 >= *(&v8) && *(&v8) >= 2)\n
            {\n
                v12 = *(v9);\n
                v14 = v12 * 8;\n
                if (*(&v8) - 2 < v14)\n
                    goto LABEL_404f3f;\n
                v4 = 0;\n
                v3 = v9 + 1;\n
                cgc_fdprintf(1, \"\\n
[[[ MESSAGES ]]]\\n
\", 8, v14, a4);\n
                cgc_fdprintf(1, \"idx. <from_id, length, type>\\n
\", 8, v14, a4);\n
                cgc_fdprintf(1, \"----------------------------\\n
\", 8, v14, a4);\n
                v11 = 0;\n
                v4 = 0;\n
                while (true)\n
                {\n
                    v15 = v12;\n
                    if (v4 >= v15)\n
                        break;\n
                    v2 = *((v3 + v11));\n
                    v1 = *((4 + v3 + v11));\n
                    v0 = *((6 + v3 + v11));\n
                    if (v2 == 1)\n
                        cgc_fdprintf(1, \"%d. <%d, N/A, Protected>\\n
\", v4 + 1, v1, a4);\n
                    else\n
                        cgc_fdprintf(1, \"%d. <%d, %d bytes, Normal>\\n
\", v4 + 1, v1, v0 - 1);\n
                    v11 += 8;\n
                    v4 += 1;\n
                }\n
                cgc_fdprintf(1, \"Total %d message(s).\\n
\\n
\", v12, v15, a4);\n
            }\n
        }\n
    }\n
LABEL_404f3f:\n
    if (v10)\n
        cgc_free(v10);\n
    return v12;\n
}\n
", "4214621:sub_404f5d": null, "4214624:cgc_display_message": "extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
\n
long long cgc_display_message(unsigned long a0, char *a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    unsigned int v1[4];  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned long long v5;  // [bp-0x28]\n
    char *v6;  // [bp-0x20], Other Possible Types: unsigned long, void*\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned long v10;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = a0;\n
    v6 = 0;\n
    *(&v5) = (v7 == 1 ? \"Normal\" : \"Protected\");\n
    cgc_fdprintf(1, \"From: USER_%d\\n
\", *((&v7 + 4)), \"Protected\", a4);\n
    cgc_fdprintf(1, \"Type: %s\\n
\", v5, \"Protected\", a4);\n
    if (v7 != 1)\n
    {\n
        v6 = a1;\n
    }\n
    else\n
    {\n
        v0 = cgc_malloc(513);\n
        if (!v0)\n
        {\n
            v10 = cgc_fdprintf(1, \"Message: N/A (Error occurred)\\n
\", a2, \"Protected\", a4);\n
            return v10;\n
        }\n
        cgc_memset(v0, 0, 513);\n
        cgc_strncpy(v0, a1, 0x200);\n
        *(v1) = g_4099b4;\n
        v2 = g_4099b4 ^ cur_user;\n
        v3 = g_4099b4 ^ cur_user;\n
        v4 = g_4099b4;\n
        cgc_unprotect_msg(v1, v0, 0x200);\n
        v6 = v0;\n
        cgc_free(v0);\n
    }\n
    if (v6)\n
    {\n
        cgc_fdprintf(1, \"Length: %d byte(s)\\n
\", cgc_strlen(v6), \"Protected\", a4);\n
        v10 = cgc_fdprintf(1, \"Message: %s\\n
\", v6, \"Protected\", a4);\n
        return v10;\n
    }\n
    cgc_fdprintf(1, \"Length: N/A\\n
\", 0x200, \"Protected\", a4);\n
    v10 = cgc_fdprintf(1, \"Message: N/A (Error occurred)\\n
\", 0x200, \"Protected\", a4);\n
    return v10;\n
}\n
", "4215035:sub_4050fb": null, "4215040:cgc_view_message": "typedef struct struct_1 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
\n
long long cgc_view_message(unsigned int a0, unsigned int a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x70]\n
    char *v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned short v3;  // [bp-0x58]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    char v7[2];  // [bp-0x48]\n
    unsigned long long v8;  // [bp-0x28]\n
    char v9;  // [bp-0x20]\n
    char v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    struct_1 *v12;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_2 *v14;  // rax, Other Possible Types: unsigned long long, unsigned long, struct_0 *\n
\n
    v12 = 0;\n
    v6 = -1;\n
    if (!cur_user)\n
    {\n
        v14 = cgc_fdprintf(1, \"[ERROR] Login first, please.\\n
\", a2, a3, a4);\n
        return v14;\n
    }\n
    v2 = cgc_list_messages(a0, a1, a2, a3, a4);\n
    if (!v2)\n
    {\n
        v14 = cgc_fdprintf(1, \"[INFO] You have no message.\\n
\", a2, a3, a4);\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"Select idx > \", a2, a3, a4);\n
        v14 = cgc_read_until(0, v7, 32, 10);\n
        if (v14 >= 0)\n
        {\n
            v6 = cgc_strtol(v7, &v8, 10);\n
            v14 = v7;\n
            if (v7 != v8)\n
            {\n
                if (v6 < 1)\n
                {\n
LABEL_4051dd:\n
                    v14 = cgc_fdprintf(1, \"[ERROR] Invalid idx.\\n
\", 10, 10, a4);\n
                }\n
                else\n
                {\n
                    if (!(v6 <= v2))\n
                        goto LABEL_4051dd;\n
                    v3 = cur_user;\n
                    v4 = g_4099b4;\n
                    v5 = v6;\n
                    cgc_send_request(&v3, 3);\n
                    cgc_fdprintf(1, \"\\n
\", 10, 10, a4);\n
                    v14 = cgc_parse_packet(4);\n
                    v12 = v14;\n
                    if (v12)\n
                    {\n
                        v14 = *((v12 + 4));\n
                        if (v14 >= 8)\n
                        {\n
                            cgc_memcpy(&v9, *((v12 + 8)), 8);\n
                            if (*(&v10) > 0)\n
                                *(&v11) = *((v12 + 8)) + 8;\n
                            v14 = cgc_handle_response(*((v12 + 1)), &v9);\n
                            if (!v14)\n
                            {\n
                                v14 = *((v12 + 4)) - 8;\n
                                if (v14 >= *(&v10))\n
                                {\n
                                    v14 = *(&v10);\n
                                    if (v14 >= 8)\n
                                    {\n
                                        cgc_memcpy(&v0, *(&v11), 8);\n
                                        v1 = *(&v11) - -8;\n
                                        v14 = cgc_display_message(*(&v0), v1, 8, 10, a4);\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (!v12)\n
        return v14;\n
    v14 = cgc_free(v12);\n
}\n
", "4215589:sub_405325": null, "4215600:cgc_send_message": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_2;\n
\n
extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
\n
long long cgc_send_message(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0[4];  // [bp-0x2a8]\n
    unsigned int v1;  // [bp-0x2a4]\n
    unsigned int v2;  // [bp-0x2a0]\n
    unsigned int v3;  // [bp-0x29c]\n
    unsigned short v4;  // [bp-0x298]\n
    unsigned int v5;  // [bp-0x294]\n
    char v6;  // [bp-0x290]\n
    struct_1 *v7;  // [bp-0x250]\n
    unsigned short v8;  // [bp-0x248]\n
    unsigned short v9;  // [bp-0x246]\n
    unsigned short v10;  // [bp-0x244]\n
    unsigned short v11;  // [bp-0x242]\n
    struct_1 *v12;  // [bp-0x240]\n
    char v13;  // [bp-0x238]\n
    unsigned long long v14;  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    char v17;  // [bp-0x20]\n
    char v18;  // [bp-0x1c]\n
    unsigned long v19;  // [bp-0x18]\n
    struct_0 *v20;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_2 *v22;  // rax, Other Possible Types: unsigned long long, unsigned long, struct_1 *\n
\n
    v20 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    if (!cur_user)\n
    {\n
        v22 = cgc_fdprintf(1, \"[ERROR] Login first, please.\\n
\", a2, a3, a4);\n
        return v22;\n
    }\n
    cgc_fdprintf(1, \"\\n
[[[ SEND ]]]\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \" - To: \", a2, a3, a4);\n
    v22 = cgc_read_until(0, &v6, 64, 10);\n
    if (v22 >= 0)\n
    {\n
        cgc_fdprintf(1, \" - Type (0: normal, 1: protected): \", 64, 10, a4);\n
        v22 = cgc_read_until(0, &v13, 0x200, 10);\n
        if (v22 >= 0)\n
        {\n
            v16 = cgc_strtol(&v13, &v14, 10);\n
            v22 = &v13;\n
            if (&v13 != v14)\n
            {\n
                cgc_memset(&v13, 0, 0x200);\n
                cgc_fdprintf(1, \" - Message: \", 0x200, 10, a4);\n
                v22 = cgc_read_until(0, &v13, 0x200, 10);\n
                v15 = v22;\n
                if (v22 >= 0)\n
                {\n
                    cgc_fdprintf(1, \"\\n
\", 0x200, 10, a4);\n
                    *(&v8) = (v16 == 1 ? 0 : 1);\n
                    v9 = 65535;\n
                    v10 = cur_user;\n
                    v11 = v15;\n
                    if (v8 == 1)\n
                    {\n
                        *(v0) = g_4099b4;\n
                        v1 = g_4099b4 ^ cur_user;\n
                        v2 = g_4099b4 ^ cur_user;\n
                        v3 = g_4099b4;\n
                        cgc_protect_msg(v0, &v13, 0x200);\n
                        v11 = 0x200;\n
                    }\n
                    v12 = &v13;\n
                    v4 = cur_user;\n
                    v5 = g_4099b4;\n
                    v7 = &v8;\n
                    cgc_send_request(&v4, 4);\n
                    v22 = cgc_parse_packet(4);\n
                    v20 = v22;\n
                    if (v20)\n
                    {\n
                        v22 = *((v20 + 4));\n
                        if (v22 >= 8)\n
                        {\n
                            cgc_memcpy(&v17, *((v20 + 8)), 8);\n
                            if (*(&v18) > 0)\n
                                v19 = *((v20 + 8)) + 8;\n
                            v22 = cgc_handle_response(*((v20 + 1)), &v17);\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (!v20)\n
        return v22;\n
    v22 = cgc_free(v20);\n
}\n
", "4216342:sub_405616": null, "4216352:cgc_delete_message": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern unsigned short cur_user;\n
extern unsigned int g_4099b4;\n
\n
long long cgc_delete_message(unsigned int a0, unsigned int a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    unsigned short v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    char v5[2];  // [bp-0x48]\n
    unsigned long long v6;  // [bp-0x28]\n
    char v7;  // [bp-0x20]\n
    char v8;  // [bp-0x1c]\n
    unsigned int *v9;  // [bp-0x18]\n
    struct_2 *v10;  // [bp-0x10], Other Possible Types: unsigned long\n
    struct_1 *v12;  // rax, Other Possible Types: unsigned long long, unsigned long, struct_0 *\n
    unsigned long long v13;  // rcx\n
\n
    v10 = 0;\n
    v4 = -1;\n
    if (!cur_user)\n
    {\n
        v12 = cgc_fdprintf(1, \"[ERROR] Login first, please.\\n
\", a2, a3, a4);\n
        return v12;\n
    }\n
    v0 = cgc_list_messages(a0, a1, a2, a3, a4);\n
    if (!v0)\n
    {\n
        v12 = cgc_fdprintf(1, \"[INFO] You have no message.\\n
\", a2, a3, a4);\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, \"Select idx > \", a2, a3, a4);\n
        v12 = cgc_read_until(0, v5, 32, 10);\n
        if (v12 >= 0)\n
        {\n
            v4 = cgc_strtol(v5, &v6, 10);\n
            v12 = v5;\n
            if (v5 != v6)\n
            {\n
                v1 = cur_user;\n
                v2 = g_4099b4;\n
                v3 = v4;\n
                cgc_send_request(&v1, 5);\n
                cgc_fdprintf(1, \"\\n
\", 10, 10, a4);\n
                v12 = cgc_parse_packet(4);\n
                v10 = v12;\n
                if (v10)\n
                {\n
                    v12 = *((v10 + 4));\n
                    if (v12 >= 8)\n
                    {\n
                        cgc_memcpy(&v7, *((v10 + 8)), 8);\n
                        if (*(&v8) > 0)\n
                            v9 = *((v10 + 8)) + 8;\n
                        v12 = cgc_handle_response(*((v10 + 1)), &v7);\n
                        if (!v12)\n
                        {\n
                            v12 = *((v10 + 4)) - 8;\n
                            v13 = *(&v8);\n
                            if (v12 >= v13)\n
                            {\n
                                v12 = *(&v8);\n
                                if (v12 >= 4)\n
                                {\n
                                    v0 = *(v9);\n
                                    v12 = cgc_fdprintf(1, \"%d message(s) left.\\n
\", v0, v13, a4);\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (!v10)\n
        return v12;\n
    v12 = cgc_free(v10);\n
}\n
", "4216839:sub_405807": null, "4216848:main": "extern unsigned short cur_user;\n
extern unsigned long long g_407110;\n
\n
int main(unsigned long a0, unsigned long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x1038]\n
    void* v1;  // [bp-0x1030]\n
    void* v2;  // [bp-0x1028]\n
    void* v3;  // [bp-0x1020]\n
    char v4;  // [bp-0x1018]\n
    unsigned long v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned long long v9;  // rax\n
\n
    v7 = 0;\n
    v6 = a0;\n
    v5 = a1;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    cur_user = 0;\n
    cgc_fdprintf(1, \"[INFO] LulzChat Client v0.1\\n
\", a2, a3, a4);\n
    cgc_fdprintf(1, \"[INFO] Type 'h' for help menu\\n
\", a2, a3, a4);\n
    while (true)\n
    {\n
        cgc_fdprintf(1, \"> \", 0x1000, a3, a4);\n
        if (cgc_read_until(0, &v4, 0x1000, 10) <= 0)\n
            cgc_quit(0, \"> \", 0x1000, 10, a4);\n
        v9 = v4 - 68;\n
        a3 = v9;\n
        v0 = v9;\n
        switch (v9)\n
        {\n
        case 0: case 32:\n
            cgc_delete_message(0, 4224219, 0x1000, &g_407110, a4);\n
            break;\n
        case 1: case 33:\n
            cgc_list_messages(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 4: case 36:\n
            cgc_help(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 8: case 40:\n
            cgc_login_user(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 11: case 43:\n
            cgc_logout_user(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 13: case 45:\n
            cgc_quit(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 14: case 46:\n
            cgc_register_user(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 15: case 47:\n
            cgc_send_message(0, \"> \", 0x1000, &g_407110, a4);\n
            break;\n
        case 18: case 50:\n
            cgc_view_message(0, 4224219, 0x1000, &g_407110, a4);\n
            break;\n
        default:\n
            cgc_fdprintf(0, \"[ERROR] Unknown command.\\n
\", 0x1000, a3, a4);\n
        }\n
    }\n
}\n
", "4217172:sub_405954": null, "4217184:cgc_parse_message": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_2;\n
\n
long long cgc_parse_message(unsigned short a0[4], struct_2 *a1, struct_2 *a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x60]\n
    unsigned int v1[4];  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    struct_0 *v5;  // [bp-0x40], Other Possible Types: struct_1 *\n
    unsigned long long v6;  // [bp-0x38]\n
    struct_0 *v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v6 = 8;\n
    v5 = 0;\n
    v5 = cgc_malloc(16);\n
    if (!v5)\n
    {\n
LABEL_405bf4:\n
        cgc_free_message(v5);\n
        v7 = 0;\n
        return v7;\n
    }\n
    if (!(v6 <= a3))\n
        goto LABEL_405bf4;\n
    v5->field_0 = a0[0];\n
    v5->field_2 = a2->field_0;\n
    v5->field_4 = a0[2];\n
    v5->field_6 = a0[3];\n
    if (!(v5->field_4 == a1->field_0))\n
        goto LABEL_405bf4;\n
    if (v5->field_6 > 0 && v5->field_6 <= 0x200)\n
    {\n
        if (a3 - v6 >= v5->field_6)\n
        {\n
            if (v5->field_0 != 1)\n
            {\n
                v5->field_0 = 0;\n
                *(&v5->field_8) = cgc_malloc(v5->field_6 + 1);\n
                if (*(&v5->field_8))\n
                {\n
                    cgc_strncpy(*(&v5->field_8), a0 + 1, v5->field_6);\n
LABEL_405be7:\n
                    v7 = v5;\n
                    return v7;\n
                }\n
            }\n
            else\n
            {\n
                v0 = cgc_malloc(513);\n
                if (v0)\n
                {\n
                    cgc_memset(v0, 0, 513);\n
                    cgc_strncpy(v0, *(&v5->field_8), 0x200);\n
                    *(v1) = a1->field_4;\n
                    v2 = a1->field_4 ^ a1->field_0;\n
                    v3 = a1->field_4 ^ -1;\n
                    v4 = a1->field_4;\n
                    cgc_unprotect_msg(v1, v0, 0x200);\n
                    *(v1) = a2->field_4;\n
                    v2 = a2->field_4 ^ a2->field_0;\n
                    v3 = a2->field_4 ^ a1->field_0;\n
                    v4 = a2->field_4;\n
                    cgc_protect_msg(v1, v0, 0x200);\n
                    *(&v5->field_8) = cgc_malloc(0x200);\n
                    if (*(&v5->field_8))\n
                    {\n
                        cgc_memcpy(*(&v5->field_8), v0, 0x200);\n
                        v5->field_6 = 0x200;\n
                        goto LABEL_405be7;\n
                    }\n
                }\n
            }\n
        }\n
        goto LABEL_405bf4;\n
    }\n
    goto LABEL_405bf4;\n
}\n
", "4217871:sub_405c0f": null, "4217872:cgc_free_message": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free_message(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
        return v1;\n
    if (*(&a0->field_8))\n
        cgc_free(*(&a0->field_8));\n
    v1 = cgc_free(a0);\n
    return v1;\n
}\n
", "4217938:sub_405c52": null, "4217952:cgc_enq_msg": "long long cgc_enq_msg(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (a1)\n
    {\n
        if (*(a0))\n
        {\n
            v0 = cgc_malloc(16);\n
            if (!v0)\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            *(v0) = a1;\n
            *((v0 + 8)) = 0;\n
            for (v1 = *(a0); *((v1 + 8)); v1 = *((v1 + 8)));\n
            *((v1 + 8)) = v0;\n
        }\n
        else\n
        {\n
            *(a0) = cgc_malloc(16);\n
            if (!*(a0))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            *(*(a0)) = a1;\n
            *((*(a0) + 8)) = 0;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218214:sub_405d66": null, "4218224:cgc_deq_msg": "long long cgc_deq_msg(struct struct_0 **a0)\n
{\n
    unsigned long long v0[2];  // [bp-0x20]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (!*(a0))\n
        return v1;\n
    if (*(a0)->field_8)\n
    {\n
        v0[0] = *(a0);\n
        v1 = v0[0];\n
        *(a0) = v0[1];\n
        cgc_free(v0);\n
    }\n
    else\n
    {\n
        v1 = *(a0)->field_0;\n
        cgc_free(*(a0));\n
        *(a0) = 0;\n
    }\n
    return v1;\n
}\n
", "4218379:sub_405e0b": null, "4218384:cgc_deq_msg_at": "long long cgc_deq_msg_at(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x18]\n
\n
    v2 = 0;\n
    if (!*(a0))\n
        return v2;\n
    if (!*((*(a0) + 8)) && a1 == 1)\n
    {\n
        v2 = *(*(a0));\n
        cgc_free(*(a0));\n
        *(a0) = 0;\n
        goto LABEL_405f16;\n
    }\n
    v0 = 0;\n
    v3 = 0;\n
    for (v1 = *(a0); v1; v1 = *((v1 + 8)))\n
    {\n
        if (v3 != a1)\n
        {\n
            v0 = v1;\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            if (v0)\n
                *((v0 + 8)) = *((v1 + 8));\n
            else\n
                *(a0) = *((v1 + 8));\n
            v2 = *(v1);\n
            cgc_free(v1);\n
            break;\n
        }\n
    }\n
LABEL_405f16:\n
    return v2;\n
}\n
", "4218666:sub_405f2a": null, "4218672:cgc_parse_packet": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_parse_packet(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v1 = cgc_malloc(16);\n
    if (v1)\n
    {\n
        v3 = 8;\n
        if (cgc_read_n(a0, v1, v3) == v3 && v1->field_4 <= 0x2000)\n
        {\n
            v2 = cgc_malloc(v1->field_4);\n
            if (v2)\n
            {\n
                v3 = v1->field_4;\n
                if (cgc_read_n(a0, v2, v3) == v1->field_4)\n
                {\n
                    v1->field_8 = v2;\n
                    v0 = v1->field_2;\n
                    if (v0 == cgc_calc_checksum(v1))\n
                    {\n
                        v4 = v1;\n
                        return v4;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v2)\n
        cgc_free(v2);\n
    if (v1)\n
        cgc_free(v1);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4219004:sub_40607c": null, "4219008:cgc_calc_checksum": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
long long cgc_calc_checksum(struct_0 *a0)\n
{\n
    unsigned short v0;  // [bp-0x24]\n
    unsigned short v1;  // [bp-0x22]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    struct_0 *v4;  // [bp-0x18]\n
\n
    v4 = a0;\n
    v2 = 8;\n
    v1 = 0;\n
    v0 = a0->field_2;\n
    a0->field_2 = 0;\n
    for (v3 = 0; v3 < v2; v3 += 1)\n
    {\n
        v1 += (v1 ^ (&v4->field_0)[v3]);\n
    }\n
    v4 = a0->field_8;\n
    for (v3 = 0; v3 < a0->field_4; v3 += 1)\n
    {\n
        v1 += (v1 ^ (&v4->field_0)[v3]);\n
    }\n
    a0->field_2 = v0;\n
    return v1;\n
}\n
", "4219215:sub_40614f": null, "4219216:cgc_new_packet": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_new_packet(unsigned long a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = cgc_malloc(16);\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0->field_0 = a0;\n
    v0->field_1 = a1;\n
    v0->field_2 = 0;\n
    v0->field_4 = 0;\n
    v0->field_8 = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4219344:cgc_free_packet": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free_packet(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (!a0)\n
        return v1;\n
    if (*(&a0->field_8))\n
        cgc_free(*(&a0->field_8));\n
    v1 = cgc_free(a0);\n
    return v1;\n
}\n
", "4219410:sub_406212": null, "4219424:cgc_send_request": "typedef struct struct_2 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    char padding_0[72];\n
    struct struct_0 *field_48;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[72];\n
    struct struct_3 *field_48;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
    unsigned int field_8;\n
} struct_3;\n
\n
long long cgc_send_request(struct_1 *a0, unsigned long long a1)\n
{\n
    struct_4 *v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned long long v2;  // [bp-0x30]\n
    struct_1 *v3;  // [bp-0x28]\n
    struct_5 *v4;  // [bp-0x20]\n
    struct_2 *v6;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
\n
    v6 = cgc_new_packet(0, a1);\n
    v4 = &v6->padding_0;\n
    if (!v4)\n
        return v6;\n
    switch (a1)\n
    {\n
    case 0:\n
        v4->field_4 = 192;\n
        goto LABEL_406302;\n
    case 1:\n
        v4->field_4 = 128;\n
        goto LABEL_406302;\n
    case 2:\n
        v4->field_4 = 8;\n
        goto LABEL_406302;\n
    case 3:\n
        v4->field_4 = 12;\n
        goto LABEL_406302;\n
    case 4:\n
        v3 = a0;\n
        v4->field_4 = v3->field_48->field_6 + 80;\n
        goto LABEL_406302;\n
    case 5:\n
        v4->field_4 = 12;\n
        goto LABEL_406302;\n
    case 6:\n
        v4->field_4 = 4;\n
        goto LABEL_406302;\n
    }\n
LABEL_406302:\n
    *(&v4->field_8) = cgc_malloc(v4->field_4);\n
    if (*(&v4->field_8))\n
    {\n
        if (a1 != 4)\n
        {\n
            cgc_memcpy(*(&v4->field_8), a0, v4->field_4);\n
        }\n
        else\n
        {\n
            *(&v1) = *(&v4->field_8);\n
            v0 = &a0->padding_0;\n
            v2 = 72;\n
            cgc_memcpy(*(&v1), a0, v2);\n
            *(&v1) = v2 + *(&v1);\n
            v2 = 8;\n
            cgc_memcpy(*(&v1), v0->field_48, v2);\n
            *(&v1) = v2 + *(&v1);\n
            cgc_memcpy(*(&v1), *(&v0->field_48->field_8), v0->field_48->field_6);\n
        }\n
        v4->field_2 = cgc_calc_checksum(v4);\n
        v2 = 8;\n
        cgc_transmit(a0, a1, v7, v8);\n
        cgc_transmit(a0, a1, v7, v8);\n
    }\n
    v6 = cgc_free_packet(v4);\n
    return v6;\n
}\n
", "4219968:cgc_send_response": "typedef struct struct_1 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_send_response(unsigned int a0[3], unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    struct_1 *v3;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
\n
    v3 = cgc_new_packet(1, a1);\n
    v1 = &v3->padding_0;\n
    if (!v1)\n
        return v3;\n
    v1->field_4 = a0[1] + 8;\n
    *(&v1->field_8) = cgc_malloc(v1->field_4);\n
    if (*(&v1->field_8))\n
    {\n
        cgc_memcpy(*(&v1->field_8), a0, 8);\n
        if (a0[1] > 0 && *(&a0[2]))\n
            cgc_memcpy(*(&v1->field_8) + 8, *(&a0[2]), a0[1]);\n
        v1->field_2 = cgc_calc_checksum(v1);\n
        v0 = v1->field_4 + 8;\n
        cgc_transmit(a0, a1, v4, v5);\n
    }\n
    v3 = cgc_free_packet(v1);\n
    return v3;\n
}\n
", "4220237:sub_40654d": null, "4220240:cgc_send_register_res": "long long cgc_send_register_res(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0[3];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v4 = a0;\n
    *(v0) = v4;\n
    if (a0)\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
    }\n
    else if (a1)\n
    {\n
        v2 = a1 + 8;\n
        v1 = 64;\n
    }\n
    else\n
    {\n
        return a0;\n
    }\n
    v4 = cgc_send_response(v0, 0);\n
    return v4;\n
}\n
", "4220343:sub_4065b7": null, "4220352:cgc_send_login_res": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_1;\n
\n
long long cgc_send_login_res(unsigned long a0, struct_1 *a1)\n
{\n
    unsigned int v0[3];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_0 *v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    *(v0) = v4;\n
    if (a0)\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a0;\n
        v4 = cgc_malloc(6);\n
        v2 = v4;\n
        if (!v2)\n
            return v4;\n
        *(v2) = a1->field_0;\n
        *((v2 + 2)) = a1->field_4;\n
        v1 = 6;\n
    }\n
    v4 = cgc_send_response(v0, 1);\n
    if (v2)\n
    {\n
        v4 = cgc_free(v2);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4220524:sub_40666c": null, "4220528:cgc_send_list_res": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    unsigned short field_6;\n
} struct_1;\n
\n
long long cgc_send_list_res(unsigned long a0, struct_0 *a1, unsigned long a2)\n
{\n
    unsigned int v0[3];  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned short v2[4];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned short v3[4];  // [bp-0x38]\n
    unsigned short *v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    struct_0 *v7;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned short v9[4];  // rax, Other Possible Types: unsigned long\n
\n
    v7 = a1;\n
    v9 = a0;\n
    *(v0) = v9;\n
    if (a0)\n
    {\n
        *(&v2[0]) = 0;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        if (!v7)\n
            return a0;\n
        v9 = cgc_malloc(a2 * 8 + 2);\n
        v2 = v9;\n
        if (!v2)\n
            return v9;\n
        *(v2) = a2;\n
        v4 = v2 + 2;\n
        v6 = 0;\n
        for (v5 = 0; v5 < a2; v5 += 1)\n
        {\n
            v9 = v7->field_0;\n
            *(&v3[0]) = v9;\n
            if (!v3)\n
                return v7->field_0;\n
            *((v4 + v6)) = v3[0];\n
            *((2 + v4 + v6)) = v3[1];\n
            *((4 + v4 + v6)) = v3[2];\n
            *((6 + v4 + v6)) = v3[3];\n
            v6 += 8;\n
            v7 = v7->field_8;\n
        }\n
    }\n
    v9 = cgc_send_response(v0, 2);\n
    if (v2)\n
    {\n
        v9 = cgc_free(v2);\n
        return v9;\n
    }\n
    return v9;\n
}\n
", "4220872:sub_4067c8": null, "4220880:cgc_send_view_res": "long long cgc_send_view_res(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0[3];  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v4 = a0;\n
    *(v0) = v4;\n
    if (a0)\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
    }\n
    else if (a1)\n
    {\n
        v2 = a1;\n
        v1 = 16;\n
    }\n
    else\n
    {\n
        return a0;\n
    }\n
    v4 = cgc_send_response(v0, 3);\n
    return v4;\n
}\n
", "4220982:sub_406836": null, "4220992:cgc_send_send_res": "long long cgc_send_send_res(unsigned int a0[3])\n
{\n
    unsigned int v0[3];  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
\n
    *(v0) = *(a0);\n
    v2 = 0;\n
    v1 = 0;\n
    return cgc_send_response(v0, 4);\n
}\n
", "4221044:sub_406874": null, "4221056:cgc_send_delete_res": "long long cgc_send_delete_res(unsigned int a0[3], unsigned long a1)\n
{\n
    unsigned int v0[3];  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int *v4;  // rax, Other Possible Types: unsigned long\n
\n
    *(v0) = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = 0;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        v4 = cgc_malloc(4);\n
        v2 = v4;\n
        if (!v2)\n
            return v4;\n
        *(v2) = a1;\n
        v1 = 4;\n
    }\n
    v4 = cgc_send_response(v0, 5);\n
    if (v2)\n
    {\n
        v4 = cgc_free(v2);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4221192:sub_406908": null, "4221200:cgc_handle_response": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern char g_4075dc;\n
extern char g_407602;\n
extern char g_407624;\n
extern char g_407643;\n
extern char g_407658;\n
extern char g_407672;\n
extern char g_407689;\n
extern char g_40769f;\n
extern char g_4076b5;\n
extern char g_4076cb;\n
extern char g_4076e9;\n
\n
int cgc_handle_response()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_11;  // tmp #11\n
    unsigned long v5;  // rsi\n
    char v6;  // dil\n
    unsigned long long v7;  // rax\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rdx\n
    unsigned long long v10;  // rcx\n
    unsigned int v11;  // r8\n
\n
    v0 = v5;\n
    v7 = v6;\n
    tmp_11 = v7;\n
    v8 = v7 - 5;\n
    if (tmp_11 <= 5)\n
        goto *((4224452 + rax<8> * 4)) + 4224452;\n
    else\n
        cgc_fdprintf(1, \"[ERROR] Unknown command type.\\n
\", v9, v10, v11);\n
}\n
", "4221875:sub_406bb3": null, "4221888:cgc_add_user": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    char padding_8[128];\n
    unsigned long long field_88;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[134];\n
    struct struct_0 *field_88;\n
} struct_0;\n
\n
long long cgc_add_user(struct struct_0 **a0, struct_1 *a1)\n
{\n
    char v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rdx\n
\n
    if (!a1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    cgc_random(a0, a1, v4);\n
    if (!*(a0))\n
    {\n
        a1->field_0 = 1;\n
        *(a0) = &a1->field_0;\n
    }\n
    else\n
    {\n
        for (v1 = *(a0); v1->field_88; v1 = v1->field_88);\n
        a1->field_0 = *(v1) + 1;\n
        *((v1 + 136)) = a1;\n
    }\n
    a1->field_4 = *(&v0);\n
    a1->field_88 = 0;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4222114:sub_406ca2": null, "4222128:cgc_find_user": "typedef struct struct_0 {\n
    char padding_0[136];\n
    struct struct_0 *field_88;\n
} struct_0;\n
\n
long long cgc_find_user(struct_0 *a0, char *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x20], Other Possible Types: struct_0 *, unsigned long\n
\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (!a1)\n
    {\n
        return v1;\n
    }\n
    else\n
    {\n
        for (v0 = a0; v0; v0 = v0->field_88)\n
        {\n
            if (!cgc_strcmp(a1, &v0->padding_0[8]))\n
            {\n
                v1 = v0;\n
                break;\n
            }\n
        }\n
        return v1;\n
    }\n
}\n
", "4222272:cgc_find_user_by_id": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[134];\n
    struct struct_0 *field_88;\n
} struct_0;\n
\n
long long cgc_find_user_by_id(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long, struct_0 *\n
\n
    v1 = 0;\n
    if (!a0)\n
        return v1;\n
    for (v0 = a0; v0; v0 = v0->field_88)\n
    {\n
        if (a1 == v0->field_0)\n
        {\n
            v1 = v0;\n
            break;\n
        }\n
    }\n
    return v1;\n
}\n
", "4222393:sub_406db9": null, "4222400:cgc_read_n": "long long cgc_read_n(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rcx\n
\n
    v3 = a0;\n
    v1 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v1 - a1;\n
        if (cgc_receive(a0, a1, a2, v5))\n
            break;\n
        if (!*(&v0))\n
            break;\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
    return v1 - a1;\n
}\n
", "4222541:sub_406e4d": null, "4222544:cgc_read_until": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_read_until(unsigned long long a0, struct_0 *a1, unsigned long long a2, unsigned long long a3)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    struct_0 *v5;  // rax\n
\n
    v3 = a0;\n
    v1 = a1;\n
    for (v2 = 0; v2 < a2; v2 += 1)\n
    {\n
        if (cgc_receive(a0, a1, a2, a3))\n
        {\n
LABEL_406eaf:\n
            break;\n
        }\n
        else\n
        {\n
            if (!*(&v0))\n
                goto LABEL_406eaf;\n
            v5 = v1;\n
            v1 = &v5->field_0;\n
            if (v5->field_-1 == a3)\n
                break;\n
        }\n
    }\n
    *((v1 - 1)) = 0;\n
    return v1 - a1;\n
}\n
", "4222728:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_random": null, "5242912:cgc_allocate": null, "5242920:cgc_deallocate": null, "5242928:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}