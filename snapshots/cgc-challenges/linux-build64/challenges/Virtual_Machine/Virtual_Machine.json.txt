{"4210688:_init": "extern struct_0 *g_40e310;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40e310;\n
    if (g_40e310)\n
        v1 = g_40e310();\n
    return v1;\n
}\n
", "4210720:sub_404020": "extern unsigned long long g_40e328;\n
\n
long long sub_404020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40e328;\n
    goto *(4252464);\n
}\n
", "4210732:sub_40402c": null, "4210736:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4210752:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4210768:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4210784:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4210800:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4210816:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4210832:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4210848:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4210864:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4210880:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4210896:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4210912:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4252408);\n
}\n
", "4210928:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4210965:sub_404115": null, "4210966:sub_404116": null, "4210976:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40e308;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4211017:sub_404149": null, "4211024:register_tm_clones": "extern unsigned long long g_40e318;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4211081:sub_404189": null, "4211088:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40e2f8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40e2f8)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4211141:sub_4041c5": null, "4211145:sub_4041c9": null, "4211152:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211161:sub_4041d9": null, "4211168:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211219:sub_404213": null, "4211232:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211283:sub_404253": null, "4211296:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211347:sub_404293": null, "4211360:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211433:sub_4042e9": null, "4211440:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211513:sub_404339": null, "4211520:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211571:sub_404373": null, "4211584:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4211644:sub_4043bc": null, "4211648:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4211708:sub_4043fc": null, "4211712:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211803:sub_40445b": null, "4211808:_ZN5CUtil6StringC1Ev": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::__ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = operator new[](1);\n
    a0->field_0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4211868:sub_40449c": null, "4211872:_ZN5CUtil6StringC1ERKS0_": "long long CUtil::String::__ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4211922:sub_4044d2": null, "4211936:_ZN5CUtil6String11SetInternalERKS0_": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CUtil::String::SetInternal(struct_0 *a0, unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v2;  // rax\n
\n
    if (a0->field_0)\n
    {\n
        v0 = &a0->field_0->field_0;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    a0->field_8 = a1[1];\n
    a0->field_0 = operator new[](a0->field_8 + 1);\n
    cgc_memcpy(a0->field_0, a1[0], a0->field_8, a1);\n
    v2 = a0->field_0;\n
    v2[a0->field_8] = 0;\n
    return v2;\n
}\n
", "4212084:sub_404574": null, "4212096:_ZN5CUtil6StringC2EPKc": "long long CUtil::String::__base_ctor__(unsigned long long a0[2], unsigned long long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x10]\n
    unsigned long long v2[2];  // rdi\n
\n
    v0[0] = a0;\n
    v2 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    return CUtil::String::SetInternal(v0, a1);\n
}\n
", "4212146:sub_4045b2": null, "4212160:_ZN5CUtil6String11SetInternalEPKc": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::SetInternal(struct_0 *a0, unsigned long long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v4;  // rcx\n
    struct_0 *v5;  // rax\n
\n
    if (a0->field_0)\n
    {\n
        v0 = a0->field_0;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    if (!a1)\n
    {\n
        a0->field_0 = operator new[](1);\n
        *(&a0->field_0->field_0) = 0;\n
        a0->field_8 = 0;\n
        return a0;\n
    }\n
    a0->field_8 = cgc_strlen(a1);\n
    v4 = operator new[](a0->field_8 + 1);\n
    v5 = a0;\n
    a0->field_0 = v4;\n
    cgc_memcpy(v5->field_0, a1, v5->field_8, v4);\n
    *(&a0->field_0->field_0 + a0->field_8) = 0;\n
    return a0->field_0;\n
}\n
", "4212359:sub_404687": null, "4212368:_ZN5CUtil6StringD1Ev": "long long CUtil::String::__dtor__(unsigned long long a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4212451:sub_4046e3": null, "4212464:_ZNK5CUtil6StringeqERKS0_": "long long CUtil::String::operator== const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0[1] != a1[1])\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    v0 = !cgc_memcmp(a0[0], a1[0], a0[1], a1);\n
    return v0 & 1;\n
}\n
", "4212563:sub_404753": null, "4212576:_ZNK5CUtil6StringneERKS0_": "long long CUtil::String::operator!= const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    return (CUtil::String::operator== const(a0, a1) ^ 255) & 1;\n
}\n
", "4212618:sub_40478a": null, "4212624:_ZN5CUtil6StringaSERKS0_": "long long CUtil::String::operator=(void* a0, unsigned long long a1[2])\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4212659:sub_4047b3": null, "4212672:_ZN5CUtil6StringaSEPKc": "long long CUtil::String::operator=(void* a0, unsigned long long a1)\n
{\n
    return CUtil::String::SetInternal(a0, a1);\n
}\n
", "4212707:sub_4047e3": null, "4212720:_ZNK5CUtil6StringplERKS0_": "long long CUtil::String::operator+ const(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long long v1[2];  // [bp-0x28]\n
\n
    CUtil::String::__ctor__(v1, a0);\n
    v0 = CUtil::String::operator+=(v1, a1);\n
    CUtil::String::__dtor__(v1);\n
    return v0;\n
}\n
", "4212793:sub_404839": null, "4212800:_ZN5CUtil6StringpLERKS0_": "long long CUtil::String::operator+=(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
\n
    v2 = a0[1] + a1[1];\n
    v1 = operator new[](v2 + 1);\n
    cgc_memcpy(v1, a0[0], a0[1], v1);\n
    cgc_memcpy(&v1[a0[1]], a1[0], a1[1]);\n
    v1[a1[1] + a0[1]] = 0;\n
    if (a0[0])\n
    {\n
        *(&v0) = a0[0];\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0[0] = v1;\n
    a0[1] = v2;\n
    return a0;\n
}\n
", "4213006:sub_40490e": null, "4213008:_ZNK5CUtil6String5c_strEv": "long long CUtil::String::c_str const(unsigned long long *a0)\n
{\n
    return *(a0);\n
}\n
", "4213025:sub_404921": null, "4213040:_ZNK5CUtil6String5UpperEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Upper const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_islower(v0[*(a0)]))\n
            v0[*(a0)] = cgc_toupper(v0[*(a0)]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4213235:sub_4049f3": null, "4213248:_ZNK5CUtil6String5LowerEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::Lower const(unsigned long long *a0, struct_0 *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x19]\n
    unsigned long long *v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = 0;\n
    CUtil::String::__ctor__(a0, a1);\n
    for (v0 = 0; v0 < a1->field_8; v0 += 1)\n
    {\n
        if (cgc_isupper(v0[*(a0)]))\n
            v0[*(a0)] = cgc_tolower(v0[*(a0)]);\n
    }\n
    v1 = 1;\n
    if (!(v1 & 1))\n
        CUtil::String::__dtor__(a0);\n
    return a0;\n
}\n
", "4213443:sub_404ac3": null, "4213456:_ZNK5CUtil6StringixERKm": "long long CUtil::String::operator[] const(unsigned long long a0[2], unsigned long long *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (*(a1) < a0[1])\n
    {\n
        v0 = *((a0[0] + *(a1)));\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
}\n
", "4213567:sub_404b3f": null, "4213568:_ZNK5CUtil6String7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::IsEmpty const(struct_0 *a0)\n
{\n
    return !a0->field_8;\n
}\n
", "4213595:sub_404b5b": null, "4213600:_ZNK5CUtil6String4TrimEm": "long long CUtil::String::Trim const(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    CUtil::String::SubString const();\n
    return a0;\n
}\n
", "4213657:sub_404b99": null, "4213664:_ZNK5CUtil6String9SubStringEmm": "extern unsigned long long g_40c275;\n
\n
long long CUtil::String::SubString const(unsigned long long a0[2], unsigned long long a1[2], char *a2, unsigned long a3)\n
{\n
    char *v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x10]\n
    unsigned long v7;  // rcx\n
\n
    v5 = a0;\n
    v4 = a3;\n
    if (v4 > a1[1])\n
        v4 = a1[1];\n
    if (a2 < a1[1] && a2 < v4)\n
    {\n
        v3 = v4 - a2;\n
        v2 = operator new[](v3 + 1);\n
        v1 = 0;\n
        for (v0 = a2; v0 < v4; v0 += 1)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v2[v7] = v0[a1[0]];\n
        }\n
        v2[v1] = 0;\n
        CUtil::String::__base_ctor__(a0, v2);\n
        return a0;\n
    }\n
    CUtil::String::__base_ctor__(a0, &g_40c275);\n
    return a0;\n
}\n
", "4213933:sub_404cad": null, "4213936:_ZNK5CUtil6String10TrimSpacesEv": "long long CUtil::String::TrimSpaces const(unsigned long long a0[2], unsigned long long a1[2])\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x10]\n
\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1[1]; v0 += 1)\n
    {\n
        if (v0[a1[0]] != 32)\n
            break;\n
    }\n
    CUtil::String::SubString const(a0, a1, v0, 4294967295);\n
    return a0;\n
}\n
", "4214080:_ZN5CUtil6String5ToIntERj": "long long CUtil::String::ToInt(unsigned long long *a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if ((CUtil::String::IsEmpty const(a0) & 1))\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    *(a1) = cgc_atoi(*(a0));\n
    v0 = 1;\n
    return v0 & 1;\n
}\n
", "4214164:sub_404d94": null, "4214176:_ZNK5CUtil6String9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::String::GetLength const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4214194:sub_404db2": null, "4214208:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4214587:sub_404f3b": null, "4214592:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4214784:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4214842:sub_40503a": null, "4214848:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4215040:cgc_unlink": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long cgc_unlink(struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_1 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (a0->field_10)\n
        v0->field_10->field_8 = a0->field_8;\n
    v2 = a0;\n
    if (!a0->field_8)\n
        return v2;\n
    v2 = a0->field_8;\n
    *((v2 + 16)) = a0->field_10;\n
}\n
", "4215141:sub_405165": null, "4215152:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = *((v1 + 8)))\n
    {\n
        if (*(v1) >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4215433:sub_405289": null, "4215440:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4215545:sub_4052f9": null, "4215552:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long v3;  // [bp-0x18], Other Possible Types: unsigned long long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4215854:sub_40542e": null, "4215856:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4215982:sub_4054ae": null, "4215984:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4216134:sub_405546": null, "4216144:cgc_seed_prng_array": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_seed_prng_array(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a1;\n
    cgc_bzero(&state, 128);\n
    state_n = 0;\n
    if (v2 > 32)\n
        v2 = 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        (&state)[v1] = a0[v1];\n
    }\n
    v4 = v2;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= 32)\n
            break;\n
        v0 = (&state)[v1 - 1 & 31];\n
        (&state)[v1] = (v0 ^ (v0 >> 30) + v1) * 524287;\n
        v4 = v1 + 1;\n
    }\n
    return v4;\n
}\n
", "4216358:sub_405626": null, "4216368:cgc_seed_prng": "long long cgc_seed_prng(unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = a0;\n
    return cgc_seed_prng_array(&a0, 1);\n
}\n
", "4216399:sub_40564f": null, "4216400:cgc_prng": "extern unsigned int state;\n
extern unsigned int state_n;\n
\n
long long cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = (&state)[state_n];\n
    v7 = (&state)[state_n + 3 & 31];\n
    v6 = (&state)[state_n + 24 & 31];\n
    v5 = (&state)[state_n + 10 & 31];\n
    v4 = (&state)[state_n + 31 & 31];\n
    v3 = v8 ^ v7 ^ (v7 >> 8);\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    (&state)[state_n] = v1;\n
    (&state)[state_n + 31 & 31] = v0;\n
    state_n = state_n + 31 & 31;\n
    return v0;\n
}\n
", "4216709:sub_405785": null, "4216720:cgc_random_in_range": "long long cgc_random_in_range(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    if (a0 > a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0 != a1)\n
    {\n
        v2 = a1 - a0 + 1;\n
        if (!v2)\n
        {\n
            v4 = cgc_prng();\n
            return v4;\n
        }\n
        v1 = (0 CONCAT -1) /m v2;\n
        do\n
        {\n
            v3 = cgc_prng();\n
        } while (v3 >= v2 * v1);\n
        v0 = a0;\n
        v4 = v0 + (0 CONCAT v3) /m v1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = a0;\n
        return v4;\n
    }\n
}\n
", "4216888:sub_405838": null, "4216896:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4216979:sub_405893": null, "4216992:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4217033:sub_4058c9": null, "4217040:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    struct struct_0 *field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long v6;  // rcx\n
\n
    if (a0->field_100 >= 0x100)\n
    {\n
        for (v1 = a0; a0->field_100 > 0; v1 = &(&v1->field_0)[*(&v0)])\n
        {\n
            if (cgc_transmit(a0, a1, a2, rcx<8>))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
            else if (*(&v0))\n
            {\n
                v6 = a0->field_100 - *(&v0);\n
                *(&a0->field_100) = v6;\n
            }\n
            else\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(&v6) = a0->field_100;\n
    *(&a0->field_100) = v6 + 1;\n
    (&a0->field_0)[v6] = a1;\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4217299:sub_4059d3": null, "4217312:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4217382:sub_405a26": null, "4217392:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        if (!*(&v2))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v0 = *(&v2) + v0;\n
    }\n
}\n
", "4217556:sub_405ad4": null, "4217568:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x158]\n
    unsigned long v1;  // [bp-0x150]\n
    unsigned int v2;  // [bp-0x144]\n
    void* v3;  // [bp-0x140]\n
    unsigned long long v4;  // [bp-0x138]\n
    char v5;  // [bp-0x130]\n
    unsigned short v6;  // [bp-0x30]\n
    unsigned long long v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, a0, a1);\n
    v1 = &v5;\n
    while (true)\n
    {\n
        if (v6 <= 0)\n
        {\n
            v8 = v2;\n
            return v8;\n
        }\n
        else if (cgc_transmit(v4, v7, v3, a0))\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        else if (*(&v0))\n
        {\n
            v6 -= *(&v0);\n
            v1 = *(&v0) + v1;\n
        }\n
        else\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4217835:sub_405beb": null, "4217840:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    struct struct_0 **v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned int *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned long long *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    struct struct_0 **v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    struct struct_0 **v51;  // rax\n
    struct_1 *v52;  // rcx\n
    struct struct_0 **v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned long long *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned long long *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned int *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned int *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    struct struct_0 **v84;  // rax\n
    struct_1 *v85;  // rcx\n
    struct struct_0 **v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 <= 40)\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    else\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[1];\n
                        v1 = v86;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 <= 40)\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    else\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[2];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 <= 160)\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    else\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[1];\n
                        v11 = v72;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 > 40)\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    else\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[1];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 > 40)\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    else\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4219786:sub_40638a": null, "4219792:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf_buffered(a0, &v15);\n
    return v14;\n
}\n
", "4219952:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4220116:sub_4064d4": null, "4220128:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4220228:sub_406544": null, "4220240:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4220532:sub_406674": null, "4220544:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        v11 = v0 - 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4221181:sub_4068fd": null, "4221184:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned int, unsigned long\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_406f91:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_406f91;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (v8)\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                else\n
                {\n
                    v13 -= 1;\n
                }\n
                goto LABEL_406f87;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_406f87:\n
            goto LABEL_406f91;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4223530:sub_40722a": null, "4223536:cgc_printf_helper_float": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_0 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_1 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_0 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4224183:sub_4074b7": null, "4224192:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(v6 & 4))\n
                v3 = v4(a0, 32, v3);\n
            else\n
                v3 = v4(a0, 48, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4224726:sub_4076d6": null, "4224736:cgc_rand": "long long cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4224754:sub_4076f2": null, "4224768:cgc_srand": "long long cgc_srand(unsigned long a0)\n
{\n
    return cgc_seed_prng(a0);\n
}\n
", "4224793:sub_407719": null, "4224800:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4225026:sub_407802": null, "4225040:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4225314:sub_407922": null, "4225328:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4225416:sub_407988": null, "4225424:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = 0;\n
    }\n
    return a0;\n
}\n
", "4225581:sub_407a2d": null, "4225584:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4225747:sub_407ad3": null, "4225760:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned long v1;  // [bp-0x48]\n
    void* v2;  // [bp-0x40], Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v3;  // [bp-0x34]\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x24], Other Possible Types: unsigned long\n
    char v6[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v6) = a0;\n
    v5 = a2;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    if (v5 >= 16)\n
        v5 = 16;\n
    for (; cgc_isspace(*(v6)); v6 += 1);\n
    if (*(v6) == 45)\n
    {\n
        v3 = 1;\n
        *(&v6) = v6 + 1;\n
    }\n
    else if (*(v6) == 43)\n
    {\n
        *(&v6) = v6 + 1;\n
    }\n
    if (v5 != 16 && !(!v5))\n
        goto LABEL_407bfd;\n
    if (*(v6) != 48)\n
    {\n
LABEL_407bfd:\n
        if (v5 && !(v5 == 2))\n
            goto LABEL_407c56;\n
        if (*(v6) == 48)\n
        {\n
            if (*((v6 + 1)) != 98 && !(*((v6 + 1)) == 66))\n
                goto LABEL_407c56;\n
            *(&v6) = v6 + 2;\n
            v5 = 2;\n
        }\n
LABEL_407c56:\n
    }\n
    else\n
    {\n
        if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
            goto LABEL_407bfd;\n
        *(&v6) = v6 + 2;\n
        v5 = 16;\n
    }\n
    if (!v5)\n
    {\n
        if (*(v6) == 48)\n
            v5 = 8;\n
        else\n
            v5 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = -0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m v5 >> 64;\n
    v2 = (0 CONCAT v2) /m v5;\n
    while (*(v6))\n
    {\n
        v0 = *(v6);\n
        if (cgc_isdigit(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v0))\n
                break;\n
            if (cgc_isupper(v0))\n
                v0 -= 55;\n
            else\n
                v0 -= 87;\n
        }\n
        if (v0 >= v5)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_407d92:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_407d97:\n
            v4 *= v5;\n
            v4 = v0 + v4;\n
            *(&v6) = v6 + 1;\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_407d97;\n
            goto LABEL_407d92;\n
        }\n
    }\n
    if (a1)\n
        *(a1) = v6;\n
    if (v3)\n
    {\n
        v7 = -(v4);\n
        return v7;\n
    }\n
    v7 = v4;\n
    return v7;\n
}\n
", "4226562:sub_407e02": null, "4226576:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4226642:sub_407e52": null, "4226656:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4226722:sub_407ea2": null, "4226736:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4226907:sub_407f5b": null, "4226912:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (a0[v1] == a1)\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4227066:sub_407ffa": null, "4227072:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (!cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
        *((v4 + v2)) = 0;\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4227566:sub_4081ee": null, "4227568:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227937:sub_408361": null, "4227952:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4228126:sub_40841e": null, "4228128:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v1 = *((a0 + v2));\n
            v0 = *((a1 + v2));\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4228289:sub_4084c1": null, "4228304:_ZN4CCLFC1Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_0;\n
\n
long long CCLF::__ctor__(struct_0 *a0)\n
{\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    return a0;\n
}\n
", "4228330:sub_4084ea": null, "4228336:_ZN4CCLFD1Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
} struct_0;\n
\n
long long CCLF::__dtor__(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
\n
    if (a0->field_8)\n
    {\n
        *(&v0) = a0->field_8;\n
        if (*(&v0))\n
            operator delete[](*(&v0));\n
    }\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    return a0;\n
}\n
", "4228425:sub_408549": null, "4228432:_ZN4CCLF8LoadFileEPhj": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
    char padding_11[1];\n
    unsigned short field_12;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    unsigned short field_1;\n
    unsigned short field_3;\n
    unsigned int field_5;\n
} struct_1;\n
\n
long long CCLF::LoadFile(struct_0 *a0, struct_2 *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    struct_0 *v1;  // [bp-0x58]\n
    struct_1 *v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x44]\n
    struct_1 *v4;  // [bp-0x40]\n
    char v5;  // [bp-0x31]\n
    unsigned short v6;  // [bp-0x30]\n
    unsigned short v7;  // [bp-0x2e]\n
    unsigned int v8;  // [bp-0x2c]\n
    unsigned int v9;  // [bp-0x28]\n
    struct_0 *v10;  // [bp-0x18]\n
    char v11;  // [bp-0x9]\n
    struct_0 *v13;  // rax\n
    unsigned long long v14;  // rax\n
    unsigned long v15;  // rdi, Other Possible Types: unsigned long long\n
    struct_0 *v16;  // rax\n
    struct_0 *v17;  // rax\n
\n
    v10 = a0;\n
    v1 = v10;\n
    if (!a1)\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    else if (a2 > 0xfa00)\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    else if (!a2)\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
    else if (a2 >= 8)\n
    {\n
        v9 = a1->field_0;\n
        if (v9 != 3277347921)\n
        {\n
            v11 = 0;\n
            return v11 & 1;\n
        }\n
        v8 = a1->field_4;\n
        if (a2 != v8)\n
        {\n
            v11 = 0;\n
            return v11 & 1;\n
        }\n
        else if (a2 >= 12)\n
        {\n
            v7 = a1->field_8;\n
            v6 = a1->field_a;\n
            if (v7 > 10)\n
            {\n
                v11 = 0;\n
                return v11 & 1;\n
            }\n
            else if (a2 - 12 >= v7 * 9)\n
            {\n
                for (v5 = 0; v5 < v7; v5 += 1)\n
                {\n
                    v4 = 12 + &a1->field_0 + 9 * v5;\n
                    if (v4->field_0 && v4->field_0 != 1 && v4->field_0 != 2)\n
                    {\n
                        v11 = 0;\n
                        return v11 & 1;\n
                    }\n
                    if (*(&(&v4->field_0)[1]) + *((&v4->field_3 + 1)) > a2)\n
                    {\n
                        v11 = 0;\n
                        return v11 & 1;\n
                    }\n
                    v3 = *((&v4->field_1 + 1));\n
                    v3 = *(&(&v4->field_0)[1]) + v3;\n
                    if (v3 > 0x10000)\n
                    {\n
                        v11 = 0;\n
                        return v11 & 1;\n
                    }\n
                }\n
                v13 = v1;\n
                v13->field_12 = v6;\n
                v13->field_10 = v7;\n
                if (v13->field_8)\n
                {\n
                    *(&v0) = v1->field_8;\n
                    if (*(&v0))\n
                        operator delete[](*(&v0));\n
                }\n
                v14 = v1->field_10;\n
                v15 = v14 * 16;\n
                if ([D] amd64g_calculate_condition(0x0<64>, 0x30<64>, rax<8>, 0x10<64>, cc_ndep<8>))\n
                    v15 = -1;\n
                v1->field_8 = operator new[](v15);\n
                for (v5 = 0; v5 < v7; v5 += 1)\n
                {\n
                    v16 = v1;\n
                    v2 = 12 + &a1->field_0 + 9 * v5;\n
                    *((v16->field_8 + v5 * 16)) = v2->field_0;\n
                    *((v16->field_8 + v5 * 16 + 2)) = *(&(&v2->field_0)[1]);\n
                    *((v16->field_8 + v5 * 16 + 4)) = *((&v2->field_1 + 1));\n
                    v17 = v1;\n
                    *((v17->field_8 + v5 * 16 + 8)) = operator new[](*(&(&v2->field_0)[1]));\n
                    cgc_memcpy(*((v17->field_8 + v5 * 16 + 8)), a1 + *((&v2->field_3 + 1)), *(&(&v2->field_0)[1]));\n
                }\n
                v11 = 1;\n
                return v11 & 1;\n
            }\n
            else\n
            {\n
                v11 = 0;\n
                return v11 & 1;\n
            }\n
        }\n
        else\n
        {\n
            v11 = 0;\n
            return v11 & 1;\n
        }\n
    }\n
    else\n
    {\n
        v11 = 0;\n
        return v11 & 1;\n
    }\n
}\n
", "4229257:sub_408889": null, "4229264:_Z9ReadBytesPhj": "long long ReadBytes(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    char v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    for (v2 = 0; v2 < a1; v2 = *(&v1) + v2)\n
    {\n
        v0 = a1 - v2;\n
        if (cgc_receive(a0, a1, v5, v6))\n
            cgc__terminate(a0);\n
        if (!*(&v1))\n
            cgc__terminate(a0);\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4229441:sub_408941": null, "4229456:_ZN4CCPUC2EPv": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned long long field_50;\n
} struct_0;\n
\n
long long CCPU::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    CUtil::String::__ctor__(&a0->padding_0[64]);\n
    a0->field_50 = a1;\n
    return a0;\n
}\n
", "4229507:sub_408983": null, "4229520:_ZN4CCPUD1Ev": "long long CCPU::__dtor__(unsigned long a0)\n
{\n
    return CUtil::String::__dtor__(a0 + 64);\n
}\n
", "4229551:sub_4089af": null, "4229552:_ZN4CCPU4InitEP4CMMUP3CVMP4CDMAt": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    char padding_18[28];\n
    unsigned short field_34;\n
    unsigned short field_36;\n
    unsigned int field_38;\n
    char field_3c;\n
} struct_0;\n
\n
extern unsigned long long g_40c275;\n
\n
long long CCPU::Init(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    char v1;  // [bp-0x33]\n
    struct_0 *v2;  // [bp-0x18]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // rax\n
    struct_0 *v6;  // rdi\n
\n
    v2 = a0;\n
    v0 = v2;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    else if (!a2)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    else if (a3)\n
    {\n
        v5 = v0;\n
        v5->field_0 = a3;\n
        v5->field_8 = a1;\n
        v5->field_10 = a2;\n
        for (v1 = 0; v1 < 16; v1 += 1)\n
        {\n
            *(&v0->padding_18[2 * v1]) = 0;\n
        }\n
        v6 = v0;\n
        v6->field_36 = a4;\n
        v6->field_34 = 65532;\n
        v6->field_38 = 0;\n
        v6->field_3c = 0;\n
        CUtil::String::operator=(&v6[1].field_0 + 3, &g_40c275);\n
        v3 = 1;\n
        return v3 & 1;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
}\n
", "4229787:sub_408a9b": null, "4229792:_ZN4CCPU3RunEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    char padding_18[36];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::Run(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (a0->field_8 && a0->field_10)\n
    {\n
        do\n
        { } while ((CCPU::RunSingleInstruction(a0) & 1));\n
        if ((a0->field_3c & 1))\n
        {\n
            v0 = 0;\n
            return v0 & 1;\n
        }\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    v0 = 0;\n
    return v0 & 1;\n
}\n
", "4229920:_ZN4CCPU20RunSingleInstructionEv": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    char padding_10[40];\n
    unsigned int field_38;\n
    char field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long CCPU::RunSingleInstruction(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x58]\n
    unsigned long v1;  // [bp-0x50]\n
    struct_1 *v2;  // [bp-0x48]\n
    unsigned long long v3;  // [bp-0x40]\n
    char v4;  // [bp-0x30]\n
    unsigned short v5;  // [bp-0x1a]\n
    char v6;  // [bp-0x9]\n
    unsigned int v9;  // eax\n
    unsigned long v10;  // rdx\n
\n
    *(&v5) = CCPU::FetchNextInstruction(a0);\n
    if ((a0->field_3c & 1))\n
    {\n
        v6 = 0;\n
        return v6 & 1;\n
    }\n
    v9 = a0->field_38;\n
    v10 = v9 + 1;\n
    a0->field_38 = v10;\n
    if (v9 > 400)\n
    {\n
        CUtil::String::operator=(&a0[1].field_0 + 3, \"Max instructions reached\");\n
        a0->field_3c = 1;\n
        v6 = 0;\n
        return v6 & 1;\n
    }\n
    v2 = &v4;\n
    CCPU::DumpRegisters(&v4, a0);\n
    cgc_printf(\"DEBUG:$s\\n
=====\\n
\", CUtil::String::c_str const(v2), v10, a0, a4);\n
    CUtil::String::__dtor__(v2);\n
    CDMA::ServiceDMA(a0->field_0, a0->field_8);\n
    v3 = v5 >> 13;\n
    switch (v3)\n
    {\n
    case 0:\n
        if (((v5 >> 12) & 1))\n
            CCPU::LoadImmediateLO(a0, (v5 >> 8) & 15, v5 & 255, 16577 CONCAT ((v5 >> 8) & 15));\n
        else\n
            CCPU::LoadImmediateHI(a0, (v5 >> 8) & 15, v5 & 255, 16577 CONCAT ((v5 >> 8) & 15));\n
        break;\n
    case 1:\n
        if (((v5 >> 12) & 1))\n
            CCPU::SubReg(a0, (v5 >> 8) & 15, (v5 >> 4) & 15, v5 & 15);\n
        else\n
            CCPU::AddReg(a0, (v5 >> 8) & 15, (v5 >> 4) & 15, v5 & 15);\n
        break;\n
    case 2:\n
        if (((v5 >> 12) & 1))\n
            CCPU::DivReg(a0, (v5 >> 8) & 15, (v5 >> 4) & 15, v5 & 15);\n
        else\n
            CCPU::MulReg(a0, (v5 >> 8) & 15, (v5 >> 4) & 15, v5 & 15);\n
        break;\n
    case 3:\n
        v1 = *(&v5 + 1) & 15;\n
        switch (v1)\n
        {\n
        case 0:\n
            CCPU::MovReg(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 1:\n
            CCPU::SwapReg(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 2:\n
            CCPU::JumpRegZero(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 3:\n
            CCPU::JumpRegNotZero(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 4:\n
            CCPU::DMAInit(a0, v5 & 255);\n
            break;\n
        case 5:\n
            CCPU::DMARead(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 6:\n
            CCPU::DMAWrite(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 7:\n
            CCPU::JumpOffset(a0, 0, v5 & 255);\n
            break;\n
        case 8:\n
            CCPU::JumpOffset(a0, 1, v5 & 255);\n
            break;\n
        case 9:\n
            CCPU::JumpReg(a0, v5 & 15);\n
            break;\n
        case 10:\n
            CCPU::GetInstructionCount(a0, v5 & 15, (v5 >> 4) & 15, 16577 CONCAT (v5 & 15));\n
            break;\n
        case 11:\n
            CCPU::GetRand(a0, v5 & 15);\n
            break;\n
        case 12:\n
            CCPU::GetSeedMaterial(a0, v5 & 15);\n
            break;\n
        case 13:\n
            CCPU::LoadRegister(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        case 14:\n
            CCPU::StoreRegister(a0, (v5 >> 4) & 15, v5 & 15, 16577 CONCAT ((v5 >> 4) & 15));\n
            break;\n
        default:\n
            CUtil::String::operator=(&a0[1].field_0 + 3, \"Invalid opcode\");\n
            a0->field_3c = 1;\n
            break;\n
        }\n
        break;\n
    case 4:\n
        v0 = (v5 >> 11) & 3;\n
        switch (v0)\n
        {\n
        case 0:\n
            CCPU::AddImm(a0, (v5 >> 7) & 15, v5 & 127, 16577 CONCAT ((v5 >> 7) & 15));\n
            break;\n
        case 1:\n
            CCPU::SubImm(a0, (v5 >> 7) & 15, v5 & 127, 16577 CONCAT ((v5 >> 7) & 15));\n
            break;\n
        case 2:\n
            CCPU::MulImm(a0, (v5 >> 7) & 15, v5 & 127, 16577 CONCAT ((v5 >> 7) & 15));\n
            break;\n
        case 3:\n
            CCPU::DivImm(a0, (v5 >> 7) & 15, v5 & 127, 16577 CONCAT ((v5 >> 7) & 15));\n
        }\n
        break;\n
    case 5:\n
        if (((v5 >> 12) & 1))\n
            CCPU::JumpGTReg(a0, (v5 >> 8) & 15, (v5 >> 4) & 15, v5 & 15);\n
        else\n
            CCPU::JumpLTReg(a0, (v5 >> 8) & 15, (v5 >> 4) & 15, v5 & 15);\n
        break;\n
    case 6:\n
        CCPU::JumpOffsetZero(a0, (v5 >> 9) & 15, (v5 >> 8) & 1, v5 & 255);\n
        break;\n
    case 7:\n
        CCPU::JumpOffsetNotZero(a0, (v5 >> 9) & 15, (v5 >> 8) & 1, v5 & 255);\n
    }\n
    if ((a0->field_3c & 1))\n
    {\n
        v6 = 0;\n
        return v6 & 1;\n
    }\n
    v6 = 1;\n
    return v6 & 1;\n
}\n
", "4231649:sub_4091e1": null, "4231664:_ZN4CCPU13DumpRegistersEv": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned short field_18;\n
    unsigned short field_1a;\n
    char padding_1c[2];\n
    unsigned short field_1e;\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    unsigned short field_24;\n
    unsigned short field_26;\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned short field_2c;\n
    unsigned short field_2e;\n
    unsigned short field_30;\n
    unsigned short field_32;\n
    unsigned short field_34;\n
    unsigned short field_36;\n
    unsigned int field_38;\n
} struct_0;\n
\n
long long CCPU::DumpRegisters(unsigned long long a0[2], struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x4d8]\n
    unsigned int v1;  // [bp-0x4d0]\n
    unsigned int v2;  // [bp-0x4c8]\n
    unsigned int v3;  // [bp-0x4c0]\n
    unsigned int v4;  // [bp-0x4b8]\n
    unsigned int v5;  // [bp-0x4b0]\n
    unsigned int v6;  // [bp-0x4a8]\n
    unsigned int v7;  // [bp-0x4a0]\n
    unsigned int v8;  // [bp-0x498]\n
    unsigned int v9;  // [bp-0x490]\n
    unsigned int v10;  // [bp-0x488]\n
    unsigned int v11;  // [bp-0x480]\n
    unsigned int v12;  // [bp-0x478]\n
    unsigned int v13;  // [bp-0x46c]\n
    unsigned int v14;  // [bp-0x468]\n
    unsigned int v15;  // [bp-0x464]\n
    unsigned int v16;  // [bp-0x460]\n
    unsigned int v17;  // [bp-0x45c]\n
    char v18;  // [bp-0x448]\n
    struct_0 *v19;  // [bp-0x40]\n
    unsigned long v20;  // [bp-0x38]\n
    struct_0 *v22;  // rsi\n
    unsigned long v23;  // rdx\n
    unsigned long v24;  // rcx\n
    unsigned long v25;  // r8\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // r13d\n
    unsigned int v28;  // r12d\n
    unsigned int v29;  // r15d\n
    unsigned int v30;  // r14d\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // r11d\n
    unsigned int v33;  // r10d\n
\n
    v20 = a0;\n
    v19 = a1;\n
    v22 = v19;\n
    v23 = v22->field_38;\n
    v24 = v22->field_18;\n
    v25 = v22->field_1a;\n
    v26 = v22->field_1e;\n
    v13 = v22->field_20;\n
    v14 = v22->field_22;\n
    v15 = v22->field_24;\n
    v16 = v22->field_26;\n
    v27 = v22->field_28;\n
    v28 = v22->field_2a;\n
    v29 = v22->field_2c;\n
    v30 = v22->field_2e;\n
    v31 = v22->field_30;\n
    v32 = v22->field_32;\n
    v33 = v22->field_34;\n
    v17 = v22->field_36;\n
    v0 = v26;\n
    v1 = v13;\n
    v2 = v14;\n
    v3 = v15;\n
    v4 = v16;\n
    v5 = v27;\n
    v6 = v28;\n
    v7 = v29;\n
    v8 = v30;\n
    v9 = v31;\n
    v10 = v32;\n
    v11 = v33;\n
    v12 = v17;\n
    cgc_sprintf(&v18, \"Instructions: $d\\n
R0  = $08X R1  = $08X R2  = $08X R3  = $08X\\n
R4  = $08X R5  = $08X R6  = $08X R7  = $08X\\n
R8  = $08X R9  = $08X R10 = $08X R11 = $08X\\n
R12 = $08X R13 = $08X SP  = $08X PC  = $08X\", v23, v24, v25);\n
    CUtil::String::__base_ctor__(a0, &v18);\n
    return a0;\n
}\n
", "4231978:sub_40932a": null, "4231984:_ZN4CCPU20FetchNextInstructionEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[38];\n
    unsigned short field_36;\n
    char padding_38[4];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::FetchNextInstruction(struct_0 *a0)\n
{\n
    char v0;  // [bp-0x1a]\n
    unsigned short v1;  // [bp-0xa]\n
    struct_0 *v3;  // rax\n
    struct_0 *v4;  // rax\n
\n
    if ((CMMU::Fetch16(a0->field_8, a0->field_36, &v0) & 1))\n
    {\n
        v3 = a0;\n
        v3->field_36 = v3->field_36 + 2;\n
        v1 = *(&v0);\n
        return v1;\n
    }\n
    CUtil::String::operator=(&a0[1].padding_0[3], \"MMU Fetch Exception\");\n
    v4 = a0;\n
    a0->field_3c = 1;\n
    v4->field_36 = v4->field_36 + 2;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4232112:_ZN4CCPU15LoadImmediateHIEhh": "long long CCPU::LoadImmediateHI(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a1 * 2 + 24)) & 255 | a2 * 0x100;\n
    return a0;\n
}\n
", "4232176:_ZN4CCPU15LoadImmediateLOEhh": "long long CCPU::LoadImmediateLO(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a1 * 2 + 24)) & 0xff00 | a2;\n
    return a0;\n
}\n
", "4232234:sub_40942a": null, "4232240:_ZN4CCPU6AddRegEhhh": "long long CCPU::AddReg(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a2 * 2 + 24)) + *((a0 + a3 * 2 + 24));\n
    return a0;\n
}\n
", "4232302:sub_40946e": null, "4232304:_ZN4CCPU6SubRegEhhh": "long long CCPU::SubReg(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a2 * 2 + 24)) - *((a0 + a3 * 2 + 24));\n
    return a0;\n
}\n
", "4232366:sub_4094ae": null, "4232368:_ZN4CCPU6MulRegEhhh": "long long CCPU::MulReg(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a3 * 2 + 24)) * *((a0 + a2 * 2 + 24));\n
    return a0;\n
}\n
", "4232431:sub_4094ef": null, "4232432:_ZN4CCPU6DivRegEhhh": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::DivReg(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (*(&a0->padding_0[24 + 2 * a3]))\n
    {\n
        v1 = *(&a0->padding_0[24 + 2 * a2]);\n
        *(&a0->padding_0[24 + 2 * a1]) = (v1 >> 31 CONCAT v1) /m *(&a0->padding_0[24 + 2 * a3]);\n
        return a0;\n
    }\n
    CUtil::String::operator=(&a0[1].padding_0[3], \"Divide by zero\");\n
    a0->field_3c = 1;\n
    return a0;\n
}\n
", "4232568:sub_409578": null, "4232576:_ZN4CCPU6MovRegEhh": "long long CCPU::MovReg(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a2 * 2 + 24));\n
    return a0;\n
}\n
", "4232619:sub_4095ab": null, "4232624:_ZN4CCPU7SwapRegEhh": "long long CCPU::SwapReg(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned short v0;  // [bp-0x14]\n
\n
    v0 = *((a0 + a1 * 2 + 24));\n
    *((a0 + a1 * 2 + 24)) = *((a0 + a2 * 2 + 24));\n
    *((a0 + a2 * 2 + 24)) = v0;\n
    return a0;\n
}\n
", "4232693:sub_4095f5": null, "4232704:_ZN4CCPU11JumpRegZeroEhh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpRegZero(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = *(&a0->padding_0[24 + 2 * a1]);\n
    if (!v1)\n
    {\n
        v1 = a0;\n
        a0->field_36 = a0->field_36 + *(&a0->padding_0[24 + 2 * a2]);\n
    }\n
    return v1;\n
}\n
", "4232774:sub_409646": null, "4232784:_ZN4CCPU14JumpRegNotZeroEhh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpRegNotZero(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = *(&a0->padding_0[24 + 2 * a1]);\n
    if (v1)\n
    {\n
        v1 = a0;\n
        a0->field_36 = a0->field_36 + *(&a0->padding_0[24 + 2 * a2]);\n
    }\n
    return v1;\n
}\n
", "4232854:sub_409696": null, "4232864:_ZN4CCPU7DMAInitEh": "typedef struct struct_0 {\n
    char padding_0[88];\n
    char field_58;\n
} struct_0;\n
\n
long long CCPU::DMAInit(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_58 = a1;\n
    return a0;\n
}\n
", "4232890:sub_4096ba": null, "4232896:_ZN4CCPU7DMAReadEhh": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[80];\n
    char field_58;\n
} struct_0;\n
\n
long long CCPU::DMARead(struct_0 *a0, unsigned long a1, unsigned long long a2)\n
{\n
    return CDMA::InitReadWorker(a0->field_0, a0->field_58, *(&a0->padding_8[16 + 2 * a1]), *(&a0->padding_8[16 + 2 * *(&a0->padding_8[16 + 2 * a1])]));\n
}\n
", "4232966:sub_409706": null, "4232976:_ZN4CCPU8DMAWriteEhh": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char padding_8[80];\n
    char field_58;\n
} struct_0;\n
\n
long long CCPU::DMAWrite(struct_0 *a0, unsigned long a1, unsigned long long a2)\n
{\n
    return CDMA::InitWriteWorker(a0->field_0, a0->field_58, *(&a0->padding_8[16 + 2 * a1]), *(&a0->padding_8[16 + 2 * *(&a0->padding_8[16 + 2 * a1])]));\n
}\n
", "4233046:sub_409756": null, "4233056:_ZN4CCPU10JumpOffsetEht": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpOffset(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a1)\n
    {\n
        v1 = a0;\n
        v1->field_36 = v1->field_36 + a2;\n
        return a0;\n
    }\n
    v1 = a0;\n
    *((v1 + 54)) = *((v1 + 54)) - a2;\n
    return a0;\n
}\n
", "4233141:sub_4097b5": null, "4233152:_ZN4CCPU7JumpRegEh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpReg(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_36 = *(&a0->padding_0[24 + 2 * a1]);\n
    return a0;\n
}\n
", "4233185:sub_4097e1": null, "4233200:_ZN4CCPU19GetInstructionCountEhh": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_0;\n
\n
long long CCPU::GetInstructionCount(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    *(&a0->padding_0[24 + 2 * a1]) = (a0->field_38 >> 16) & 65535;\n
    *(&a0->padding_0[24 + 2 * a2]) = a0->field_38 & 65535;\n
    return a0;\n
}\n
", "4233270:sub_409836": null, "4233280:_ZN4CCPU7GetRandEh": "long long CCPU::GetRand(unsigned long a0, unsigned long a1)\n
{\n
    *((a0 + a1 * 2 + 24)) = cgc_prng();\n
    return a0;\n
}\n
", "4233341:sub_40987d": null, "4233344:_ZN4CCPU15GetSeedMaterialEh": "long long CCPU::GetSeedMaterial(unsigned long long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
\n
    v0 = cgc_prng();\n
    *((a0 + a1 * 2 + 24)) = v0 ^ CCPU::GetMagicPageSeed(a0);\n
    return a0;\n
}\n
", "4233425:sub_4098d1": null, "4233440:_ZN4CCPU12LoadRegisterEhh": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[44];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::LoadRegister(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x14]\n
    unsigned long long v2;  // rcx\n
\n
    v2 = a2;\n
    if ((CMMU::Read16(a0->field_8, *(&a0->padding_10[8 + 2 * v2]), &v0, v2) & 1))\n
    {\n
        *(&a0->padding_10[8 + 2 * a1]) = *(&v0);\n
        return a0;\n
    }\n
    CUtil::String::operator=(&a0[1].padding_0[3], \"MMU Read Exception\");\n
    a0->field_3c = 1;\n
    return a0;\n
}\n
", "4233557:sub_409955": null, "4233568:_ZN4CCPU13StoreRegisterEhh": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[44];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::StoreRegister(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v2;  // rax\n
    unsigned long long v3;  // rcx\n
    struct_0 *v4;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v0 = a0;\n
    v3 = a1;\n
    v4 = CMMU::Write16(v0->field_8, *(&v2->padding_10[8 + 2 * a2]), *(&v2->padding_10[8 + 2 * v3]), v3);\n
    if (!(v4 & 1))\n
    {\n
        CUtil::String::operator=(&v0[1].padding_0[3], \"MMU Write Exception\");\n
        v4 = v0;\n
        *((v4 + 60)) = 1;\n
        return v0;\n
    }\n
    return v4;\n
}\n
", "4233671:sub_4099c7": null, "4233680:_ZN4CCPU6AddImmEhh": "long long CCPU::AddImm(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rcx\n
\n
    v1 = a1;\n
    *((a0 + v1 * 2 + 24)) = *((a0 + v1 * 2 + 24)) + a2;\n
    return a0;\n
}\n
", "4233725:sub_4099fd": null, "4233728:_ZN4CCPU6SubImmEhh": "long long CCPU::SubImm(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rcx\n
\n
    v1 = a1;\n
    *((a0 + v1 * 2 + 24)) = *((a0 + v1 * 2 + 24)) - a2;\n
    return a0;\n
}\n
", "4233773:sub_409a2d": null, "4233776:_ZN4CCPU6MulImmEhh": "long long CCPU::MulImm(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rcx\n
\n
    v1 = a1;\n
    *((a0 + v1 * 2 + 24)) = a2 * *((a0 + v1 * 2 + 24));\n
    return a0;\n
}\n
", "4233822:sub_409a5e": null, "4233824:_ZN4CCPU6DivImmEhh": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::DivImm(struct_0 *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v1;  // rcx\n
    unsigned int v2;  // eax\n
\n
    if (a2)\n
    {\n
        v1 = a1;\n
        v2 = *(&a0->padding_0[24 + 2 * v1]);\n
        *(&a0->padding_0[24 + 2 * v1]) = (v2 >> 31 CONCAT v2) /m a2;\n
        return a0;\n
    }\n
    CUtil::String::operator=(&a0[1].padding_0[3], \"Divide by zero\");\n
    a0->field_3c = 1;\n
    return a0;\n
}\n
", "4233938:sub_409ad2": null, "4233952:_ZN4CCPU9JumpLTRegEhhh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpLTReg(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = *(&a0->padding_0[24 + 2 * a1]);\n
    if (v1 < *(&a0->padding_0[24 + 2 * a2]))\n
    {\n
        v1 = a0;\n
        a0->field_36 = a0->field_36 + *(&a0->padding_0[24 + 2 * a3]);\n
    }\n
    return v1;\n
}\n
", "4234035:sub_409b33": null, "4234048:_ZN4CCPU9JumpGTRegEhhh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpGTReg(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = *(&a0->padding_0[24 + 2 * a1]);\n
    if (v1 > *(&a0->padding_0[24 + 2 * a2]))\n
    {\n
        v1 = a0;\n
        a0->field_36 = a0->field_36 + *(&a0->padding_0[24 + 2 * a3]);\n
    }\n
    return v1;\n
}\n
", "4234131:sub_409b93": null, "4234144:_ZN4CCPU14JumpOffsetZeroEhhh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpOffsetZero(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long long, unsigned long\n
\n
    v1 = *(&a0->padding_0[24 + 2 * a1]);\n
    if (v1)\n
        return *(&a0->padding_0[24 + 2 * a1]);\n
    if (!a2)\n
    {\n
        v1 = a0;\n
        v1->field_36 = v1->field_36 + a3 * 2;\n
    }\n
    else\n
    {\n
        v1 = a0;\n
        v1->field_36 = v1->field_36 - a3 * 2;\n
    }\n
    return v1;\n
}\n
", "4234267:sub_409c1b": null, "4234272:_ZN4CCPU17JumpOffsetNotZeroEhhh": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned short field_36;\n
} struct_0;\n
\n
long long CCPU::JumpOffsetNotZero(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long long, unsigned long\n
\n
    v1 = *(&a0->padding_0[24 + 2 * a1]);\n
    if (!v1)\n
        return *(&a0->padding_0[24 + 2 * a1]);\n
    if (!a2)\n
    {\n
        v1 = a0;\n
        v1->field_36 = v1->field_36 + a3 * 2;\n
    }\n
    else\n
    {\n
        v1 = a0;\n
        v1->field_36 = v1->field_36 - a3 * 2;\n
    }\n
    return v1;\n
}\n
", "4234395:sub_409c9b": null, "4234400:_ZN4CCPU16GetMagicPageSeedEv": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
    char padding_3c[20];\n
    unsigned long long field_50;\n
} struct_0;\n
\n
long long CCPU::GetMagicPageSeed(struct_0 *a0)\n
{\n
    unsigned short v0;  // [bp-0x12]\n
\n
    v0 = (a0->field_38 & 255) * 4;\n
    return *((a0->field_50 + v0));\n
}\n
", "4234445:sub_409ccd": null, "4234448:_ZN4CDMAC1Ev": "long long CDMA::__ctor__(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x40]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned long v6;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = a0 + 60;\n
    v3 = a0;\n
    do\n
    {\n
        v0 = v3;\n
        CDMA::CDMAWorker::__base_ctor__(v0);\n
        v6 = v0 + 12;\n
        v1 = v6;\n
        v3 = v6;\n
    } while (v6 != v2);\n
    for (v4 = 0; v4 < 0x100; v4 = v6)\n
    {\n
        *((a0 + v4 * 8 + 64)) = 0;\n
        v6 = v4 + 1;\n
    }\n
    return v6;\n
}\n
", "4234581:sub_409d55": null, "4234592:_ZN4CDMAD1Ev": "long long CDMA::__dtor__(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x18]\n
\n
    v1 = a0 + 60;\n
    do\n
    {\n
        v0 = v1 - 12;\n
        CDMA::CDMAWorker::__base_dtor__(v0);\n
        v1 = v0;\n
    } while (v1 != a0);\n
    return v0;\n
}\n
", "4234664:sub_409da8": null, "4234672:_ZN4CDMA7InitDMAEv": "long long CDMA::InitDMA(char a0[62])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    for (v0 = 0; v0 < 5; v0 += 1)\n
    {\n
        CDMA::CDMAWorker::ClearWorker(&a0[12 * v0]);\n
    }\n
    a0[61] = 0;\n
    a0[60] = 0;\n
    return a0;\n
}\n
", "4234760:sub_409e08": null, "4234768:_ZN4CDMA13AddPeripheralEhP11CPeripheral": "long long CDMA::AddPeripheral(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (!a2)\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
    else if (!*((a0 + (a1 << 3) + 64)))\n
    {\n
        *((a0 + a1 * 8 + 64)) = a2;\n
        v0 = 1;\n
        return v0 & 1;\n
    }\n
    else\n
    {\n
        v0 = 0;\n
        return v0 & 1;\n
    }\n
}\n
", "4234874:sub_409e7a": null, "4234880:_ZN4CDMA14InitReadWorkerEhtt": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
long long CDMA::InitReadWorker(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_47;  // tmp #47\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x9]\n
\n
    tmp_47 = a0->field_3c;\n
    a0->field_3c = a0->field_3c + 1;\n
    v0 = tmp_47;\n
    if (v0 > 5)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    CDMA::CDMAWorker::StartWorker(&a0->padding_0[12 * v0], 1, a1, a2, a3);\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4235016:sub_409f08": null, "4235024:_ZN4CDMA15InitWriteWorkerEhtt": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
long long CDMA::InitWriteWorker(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_47;  // tmp #47\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x9]\n
\n
    tmp_47 = a0->field_3c;\n
    a0->field_3c = a0->field_3c + 1;\n
    v0 = tmp_47;\n
    if (v0 > 5)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    CDMA::CDMAWorker::StartWorker(&a0->padding_0[12 * v0], 2, a1, a2, a3);\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4235160:sub_409f98": null, "4235168:_ZN4CDMA10ServiceDMAEP4CMMU": "long long CDMA::ServiceDMA(char a0[62], unsigned long long a1)\n
{\n
    char v0[62];  // [bp-0x40]\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x28]\n
    unsigned short v5;  // [bp-0x26]\n
    unsigned short v6;  // [bp-0x24]\n
    char v7;  // [bp-0x21]\n
    unsigned int v8;  // [bp-0x20]\n
    char v9;  // [bp-0x1b]\n
    char v10;  // [bp-0x1a]\n
    char v11;  // [bp-0x19]\n
    char v12[62];  // [bp-0x10]\n
    char v14[62];  // rax, Other Possible Types: unsigned long\n
    char v15[62];  // rdi\n
    struct struct_2 **v16;  // rdi\n
    char v17[62];  // rax\n
    struct struct_1 **v18;  // rdi\n
    char v19[62];  // rdi\n
\n
    *(&v12[0]) = a0;\n
    v14 = v12;\n
    *(&v0[0]) = v14;\n
    if (!a1)\n
        return v12;\n
    v11 = 0;\n
    v11 = 0;\n
    while (true)\n
    {\n
        v14 = v11;\n
        if (v14 >= v0[60])\n
            return v11;\n
        v14 = v11;\n
        if (v14 >= 4)\n
            return v11;\n
        v10 = v0[61];\n
        v9 = 0;\n
        v8 = 0;\n
        for (v8 = 0; v8 < 5; v8 += 1)\n
        {\n
            if (v10 >= 5)\n
                v10 = 0;\n
            if (!(CDMA::CDMAWorker::IsWorkerAvailable const(&v0[12 * v10]) & 1))\n
            {\n
                v10 += 1;\n
            }\n
            else\n
            {\n
                v9 = 1;\n
                break;\n
            }\n
        }\n
        if (!(v9 & 1))\n
        {\n
            v14 = v0;\n
            *((v14 + 61)) = 0;\n
            return v0;\n
        }\n
        v7 = CDMA::CDMAWorker::GetDeviceID const(&v0[12 * v10]);\n
        v6 = CDMA::CDMAWorker::GetAddress const(&v0[12 * v10]);\n
        v5 = CDMA::CDMAWorker::GetLength const(&v0[12 * v10]);\n
        v4 = CDMA::CDMAWorker::GetPosition const(&v0[12 * v10]);\n
        v3 = CDMA::CDMAWorker::GetType const(&v0[12 * v10]);\n
        v2 = v5 - v4;\n
        if (v2 > 4)\n
            v2 = 4;\n
        if (!v2)\n
        {\n
            v15 = v0;\n
            v15[60] = v15[60] - 1;\n
            CDMA::CDMAWorker::ClearWorker(&v15[12 * v10]);\n
        }\n
        else if (!*(&v0[1 + 2 + 8 * v7]))\n
        {\n
            CDMA::CDMAWorker::ClearWorker(&v0[12 * v10]);\n
            v17 = v0;\n
            v17[60] = v17[60] - 1;\n
        }\n
        else\n
        {\n
            if (v3 == 1)\n
            {\n
                if ((*(v16)->field_18(*(&v0[1 + 2 + 8 * v7]), &v1, v2, v2) & 1))\n
                    CMMU::WriteDMA(a1, v6 + v4, &v1, v2);\n
            }\n
            else\n
            {\n
                if ((CMMU::ReadDMA(a1, v6 + v4, &v1, v2) & 1))\n
                    *(v18)->field_20(*(&v0[1 + 2 + 8 * v7]), &v1, v2, v2);\n
            }\n
            if (v4 + v2 < v5)\n
            {\n
                CDMA::CDMAWorker::AdvancePosition(&v0[12 * v10], v2);\n
            }\n
            else\n
            {\n
                v19 = v0;\n
                v19[60] = v19[60] - 1;\n
                CDMA::CDMAWorker::ClearWorker(&v19[12 * v10]);\n
            }\n
        }\n
        tmp_12 = v10;\n
        v10 += 1;\n
        v0[61] = tmp_12;\n
        v11 += 1;\n
    }\n
}\n
", "4235955:sub_40a2b3": null, "4235968:_ZN4CDMA10CDMAWorkerC2Ev": "long long CDMA::CDMAWorker::__base_ctor__(unsigned int *a0)\n
{\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4235988:sub_40a2d4": null, "4236000:_ZN4CDMA10CDMAWorkerD2Ev": "long long CDMA::CDMAWorker::__base_dtor__(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    return v2;\n
}\n
", "4236010:sub_40a2ea": null, "4236016:_ZN4CDMA10CDMAWorker11ClearWorkerEv": "long long CDMA::CDMAWorker::ClearWorker(unsigned int *a0)\n
{\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4236036:sub_40a304": null, "4236048:_ZN4CDMA10CDMAWorker11StartWorkerENS_16eDMAWorkerActionEhtt": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
    char padding_5[1];\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_0;\n
\n
long long CDMA::CDMAWorker::StartWorker(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    a0->field_0 = a1;\n
    a0->field_8 = a3;\n
    a0->field_4 = a2;\n
    a0->field_a = a4;\n
    a0->field_6 = 0;\n
    return a0;\n
}\n
", "4236113:sub_40a351": null, "4236128:_ZNK4CDMA10CDMAWorker17IsWorkerAvailableEv": "long long CDMA::CDMAWorker::IsWorkerAvailable const(unsigned int *a0)\n
{\n
    return *(a0);\n
}\n
", "4236153:sub_40a379": null, "4236160:_ZNK4CDMA10CDMAWorker11GetDeviceIDEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
long long CDMA::CDMAWorker::GetDeviceID const(struct_0 *a0)\n
{\n
    return a0->field_4;\n
}\n
", "4236178:sub_40a392": null, "4236192:_ZNK4CDMA10CDMAWorker10GetAddressEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
long long CDMA::CDMAWorker::GetAddress const(struct_0 *a0)\n
{\n
    return a0->field_8;\n
}\n
", "4236210:sub_40a3b2": null, "4236224:_ZNK4CDMA10CDMAWorker9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[10];\n
    unsigned short field_a;\n
} struct_0;\n
\n
long long CDMA::CDMAWorker::GetLength const(struct_0 *a0)\n
{\n
    return a0->field_a;\n
}\n
", "4236242:sub_40a3d2": null, "4236256:_ZNK4CDMA10CDMAWorker11GetPositionEv": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
} struct_0;\n
\n
long long CDMA::CDMAWorker::GetPosition const(struct_0 *a0)\n
{\n
    return a0->field_6;\n
}\n
", "4236274:sub_40a3f2": null, "4236288:_ZNK4CDMA10CDMAWorker7GetTypeEv": "long long CDMA::CDMAWorker::GetType const(unsigned int *a0)\n
{\n
    return *(a0);\n
}\n
", "4236304:_ZN4CDMA10CDMAWorker15AdvancePositionEt": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
} struct_0;\n
\n
long long CDMA::CDMAWorker::AdvancePosition(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_6 = a0->field_6 + a1;\n
    return a0;\n
}\n
", "4236339:sub_40a433": null, "4236352:_ZN4CMMUC1Ev": "long long CMMU::__ctor__(unsigned long long *a0)\n
{\n
    unsigned short v0;  // [bp-0x12]\n
\n
    for (v0 = 0; v0 < 128; v0 += 1)\n
    {\n
        a0[2 * v0] = 0;\n
        *(&a0[1 + 2 * v0]) = 0;\n
    }\n
    return v0;\n
}\n
", "4236450:sub_40a4a2": null, "4236464:_ZN4CMMUD1Ev": "long long CMMU::__dtor__(unsigned long long *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned short v1;  // [bp-0x12]\n
\n
    for (v1 = 0; v1 < 128; v1 += 1)\n
    {\n
        if (a0[2 * v1])\n
        {\n
            *(&v0) = a0[2 * v1];\n
            if (*(&v0))\n
                operator delete[](*(&v0));\n
        }\n
        a0[2 * v1] = 0;\n
        *(&a0[1 + 2 * v1]) = 0;\n
    }\n
    return v1;\n
}\n
", "4236641:sub_40a561": null, "4236656:_ZN4CMMU16AddMemorySectionEtPhth": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_0;\n
\n
long long CMMU::AddMemorySection(unsigned int *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned short v0;  // [bp-0x36]\n
    unsigned short v1;  // [bp-0x34]\n
    unsigned short v2;  // [bp-0x32]\n
    unsigned short v3;  // [bp-0x30]\n
    unsigned short v4;  // [bp-0x2e]\n
    unsigned short v5;  // [bp-0x2a]\n
    unsigned short v6;  // [bp-0x1a]\n
    char v7;  // [bp-0x9]\n
    unsigned int v9;  // eax\n
    struct_0 *v10;  // rcx\n
\n
    v6 = a1;\n
    v5 = a3;\n
    v6 &= 65534;\n
    if (!a2)\n
    {\n
        v7 = 0;\n
        return v7 & 1;\n
    }\n
    else if (!(v5 >> 31 CONCAT v5) /m 0x200 >> 32)\n
    {\n
        v4 = v5;\n
        for (v3 = 0; v4 > 0; v4 -= v0)\n
        {\n
            v9 = v6 + v3;\n
            v2 = (v9 >> 31 CONCAT v9) /m 0x200;\n
            v1 = (v6 + v3 >> 31 CONCAT v6 + v3) /m 0x200 >> 32;\n
            v0 = v4;\n
            if (v4 > 0x200 - v1)\n
                v0 = 0x200 - v1;\n
            if (!*(&a0[4 * v2]))\n
            {\n
                *(&a0[4 * v2]) = operator new[](0x200);\n
                cgc_bzero(*(&a0[4 * v2]), 0x200);\n
            }\n
            v10 = &a0[4 * v2];\n
            v10->field_8 = v10->field_8 | a4;\n
            cgc_memcpy(*(&a0[4 * v2]) + v1, a2 + v3, v0);\n
            v3 += v0;\n
        }\n
        v7 = 1;\n
        return v7 & 1;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7 & 1;\n
    }\n
}\n
", "4237093:sub_40a725": null, "4237104:_ZN4CMMU7Fetch16EtRt": "long long CMMU::Fetch16(unsigned long long *a0, unsigned long a1, unsigned short *a2)\n
{\n
    unsigned short v0;  // [bp-0x2c]\n
    unsigned short v1;  // [bp-0x2a]\n
    unsigned short v2;  // [bp-0x1a]\n
    char v3;  // [bp-0x9]\n
    unsigned int v5;  // eax\n
\n
    v2 = a1;\n
    v2 &= 65534;\n
    v5 = v2;\n
    v1 = (v5 >> 31 CONCAT v5) /m 0x200;\n
    v0 = (v2 >> 31 CONCAT v2) /m 0x200 >> 32;\n
    if (!(a0[1 + 2 * v1] & 4))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *(a2) = *((a0[2 * v1] + v0));\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4237266:sub_40a7d2": null, "4237280:_ZN4CMMU6Read16EtRt": "long long CMMU::Read16(unsigned long long *a0, unsigned long a1, unsigned short *a2)\n
{\n
    unsigned short v0;  // [bp-0x2c]\n
    unsigned short v1;  // [bp-0x2a]\n
    unsigned short v2;  // [bp-0x1a]\n
    char v3;  // [bp-0x9]\n
    unsigned int v5;  // eax\n
\n
    v2 = a1;\n
    v2 &= 65534;\n
    v5 = v2;\n
    v1 = (v5 >> 31 CONCAT v5) /m 0x200;\n
    v0 = (v2 >> 31 CONCAT v2) /m 0x200 >> 32;\n
    if (!(a0[1 + 2 * v1] & 1))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *(a2) = *((a0[2 * v1] + v0));\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4237442:sub_40a882": null, "4237456:_ZN4CMMU7Write16Ett": "long long CMMU::Write16(unsigned long long *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned short v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1e]\n
    unsigned short v2;  // [bp-0x1a]\n
    char v3;  // [bp-0x9]\n
    unsigned int v5;  // eax\n
\n
    v2 = a1;\n
    v2 &= 65534;\n
    v5 = v2;\n
    v1 = (v5 >> 31 CONCAT v5) /m 0x200;\n
    v0 = (v2 >> 31 CONCAT v2) /m 0x200 >> 32;\n
    if (!(a0[1 + 2 * v1] & 2))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    *((a0[2 * v1] + v0)) = a2;\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4237618:sub_40a932": null, "4237632:_ZN4CMMU7ReadDMAEtPht": "long long CMMU::ReadDMA(unsigned long long *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned short v0;  // [bp-0x32]\n
    unsigned short v1;  // [bp-0x30]\n
    unsigned short v2;  // [bp-0x2e]\n
    unsigned short v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v4 = a3;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v4 > 0)\n
        {\n
            v7 = a1 + v3;\n
            v2 = (v7 >> 31 CONCAT v7) /m 0x200;\n
            v1 = (a1 + v3 >> 31 CONCAT a1 + v3) /m 0x200 >> 32;\n
            if (!(a0[1 + 2 * v2] & 1))\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
            v0 = v4;\n
            if (v1 + v0 > 0x200)\n
                v0 = 0x200 - (v1 + v0);\n
            cgc_memcpy(a2 + v3, a0[2 * v2] + v1, v0);\n
            v3 += v0;\n
            v4 -= v0;\n
        }\n
        else\n
        {\n
            v5 = 1;\n
            return v5 & 1;\n
        }\n
    }\n
}\n
", "4237929:sub_40aa69": null, "4237936:_ZN4CMMU8WriteDMAEtPht": "long long CMMU::WriteDMA(unsigned long long *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned short v0;  // [bp-0x32]\n
    unsigned short v1;  // [bp-0x30]\n
    unsigned short v2;  // [bp-0x2e]\n
    unsigned short v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v4 = a3;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v4 > 0)\n
        {\n
            v7 = a1 + v3;\n
            v2 = (v7 >> 31 CONCAT v7) /m 0x200;\n
            v1 = (a1 + v3 >> 31 CONCAT a1 + v3) /m 0x200 >> 32;\n
            if (!(a0[1 + 2 * v2] & 2))\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
            v0 = v4;\n
            if (v1 + v0 > 0x200)\n
                v0 = 0x200 - (v1 + v0);\n
            cgc_memcpy(a0[2 * v2] + v1, a2 + v3, v0);\n
            v3 += v0;\n
            v4 -= v0;\n
        }\n
        else\n
        {\n
            v5 = 1;\n
            return v5 & 1;\n
        }\n
    }\n
}\n
", "4238232:sub_40ab98": null, "4238240:_ZN11CPeripheralC2Eh": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    char field_8;\n
} struct_0;\n
\n
extern char g_40e020;\n
\n
long long CPeripheral::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v2;  // rdi\n
\n
    v0 = a0;\n
    v2 = v0;\n
    v2->field_0 = &g_40e020;\n
    v2->field_8 = a1;\n
    return CUtil::DoubleLink::__base_ctor__(&v0[1].field_0 + 7);\n
}\n
", "4238297:sub_40abd9": null, "4238304:_ZN11CPeripheralD1Ev": "extern char g_40e020;\n
\n
long long CPeripheral::__dtor__(unsigned long long *a0)\n
{\n
    *(a0) = &g_40e020;\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 2);\n
}\n
", "4238349:sub_40ac0d": null, "4238352:_ZN11CPeripheralD0Ev": "long long CPeripheral::__deleting_dtor__()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4238352\n
}\n
", "4238362:sub_40ac1a": null, "4238368:_ZN11CSendDeviceC2Eh": "extern char g_40e058;\n
\n
long long CSendDevice::__base_ctor__(unsigned long long *a0, unsigned long a1)\n
{\n
    CPeripheral::__base_ctor__(a0, a1);\n
    *(a0) = &g_40e058;\n
    return a0;\n
}\n
", "4238427:sub_40ac5b": null, "4238432:_ZN11CSendDeviceD1Ev": "long long CSendDevice::__dtor__(unsigned long long *a0)\n
{\n
    return CPeripheral::__dtor__(a0);\n
}\n
", "4238459:sub_40ac7b": null, "4238464:_ZN11CSendDeviceD0Ev": "long long CSendDevice::__deleting_dtor__(unsigned long a0)\n
{\n
    CSendDevice::__dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4238504:sub_40aca8": null, "4238512:_ZN11CSendDevice4InitEv": "long long CSendDevice::Init(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 1;\n
}\n
", "4238529:sub_40acc1": null, "4238544:_ZN11CSendDevice4ReadEPht": "long long CSendDevice::Read(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    return 1;\n
}\n
", "4238572:sub_40acec": null, "4238576:_ZN11CSendDevice5WriteEPht": "long long CSendDevice::Write(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    char v4;  // [bp-0x9]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    for (v2 = 0; v2 < a2; v2 += *(&v1))\n
    {\n
        v0 = a2 - v2;\n
        if (cgc_transmit(a0, a1, a2, v6))\n
            cgc__terminate(a0);\n
        if (!*(&v1))\n
            cgc__terminate(a0);\n
    }\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4238756:sub_40ada4": null, "4238768:_ZN11CReadDeviceC1Eh": "extern char g_40e090;\n
\n
long long CReadDevice::__ctor__(unsigned long long *a0, unsigned long a1)\n
{\n
    CPeripheral::__base_ctor__(a0, a1);\n
    *(a0) = &g_40e090;\n
    return a0;\n
}\n
", "4238827:sub_40adeb": null, "4238832:_ZN11CReadDeviceD2Ev": "long long CReadDevice::__base_dtor__(unsigned long long *a0)\n
{\n
    return CPeripheral::__dtor__(a0);\n
}\n
", "4238859:sub_40ae0b": null, "4238864:_ZN11CReadDeviceD0Ev": "long long CReadDevice::__deleting_dtor__(unsigned long a0)\n
{\n
    CReadDevice::__base_dtor__(a0);\n
    return operator delete(a0);\n
}\n
", "4238904:sub_40ae38": null, "4238912:_ZN11CReadDevice4InitEv": "long long CReadDevice::Init(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    return 1;\n
}\n
", "4238929:sub_40ae51": null, "4238944:_ZN11CReadDevice4ReadEPht": "long long CReadDevice::Read(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    char v4;  // [bp-0x9]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    for (v2 = 0; v2 < a2; v2 += *(&v1))\n
    {\n
        v0 = a2 - v2;\n
        if (cgc_receive(a0, a1, a2, v6))\n
            cgc__terminate(a0);\n
        if (!*(&v1))\n
            cgc__terminate(a0);\n
    }\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4239121:sub_40af11": null, "4239136:_ZN11CReadDevice5WriteEPht": "long long CReadDevice::Write(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned short v0;  // [bp-0x1a]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = a2;\n
    return 1;\n
}\n
", "4239164:sub_40af3c": null, "4239168:_ZN5CUtil10DoubleLinkI11CPeripheralEC2Ev": "long long CUtil::DoubleLink::__base_ctor__(unsigned long long a0[2])\n
{\n
    a0[0] = 0;\n
    a0[1] = 0;\n
    return a0;\n
}\n
", "4239197:sub_40af5d": null, "4239200:_ZN5CUtil10DoubleLinkI11CPeripheralED2Ev": "long long CUtil::DoubleLink::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleLink::Unlink(a0);\n
}\n
", "4239227:sub_40af7b": null, "4239232:_ZN5CUtil10DoubleLinkI11CPeripheralE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long CUtil::DoubleLink::Unlink(struct_1 *a0)\n
{\n
    struct_1 *v1;  // rax\n
    struct_1 *v2;  // rax\n
\n
    if (a0->field_8)\n
    {\n
        v1 = a0;\n
        v1->field_8->field_0 = v1->field_0;\n
    }\n
    if (a0->field_0)\n
    {\n
        v2 = a0;\n
        v2->field_0->field_8 = v2->field_8;\n
    }\n
    a0->field_0 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4239323:sub_40afdb": null, "4239328:_Z7InitRNGPv": "long long InitRNG(unsigned int *a0)\n
{\n
    return cgc_seed_prng_array(a0, 32);\n
}\n
", "4239360:main": "int main(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1120]\n
    char v1;  // [bp-0x1118]\n
    void* v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x40]\n
    char v4;  // [bp-0x3c]\n
    char v5;  // [bp-0x38]\n
    unsigned int *v6;  // [bp-0x20]\n
    unsigned long v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v9 = 0;\n
    v8 = a0;\n
    *(&v7) = a1;\n
    v8 = 0x4347c000;\n
    v6 = v8;\n
    InitRNG(v6);\n
    CCLF::__ctor__(&v5);\n
    ReadBytes(&v4, 4);\n
    if (*(&v4) <= 0xfa00)\n
    {\n
        v2 = operator new[](*(&v4));\n
        ReadBytes(v2, *(&v4));\n
        if ((CCLF::LoadFile(&v5, v2, *(&v4)) & 1))\n
        {\n
            *(&v0) = v2;\n
            if (*(&v0))\n
                operator delete(*(&v0));\n
            CVM::__ctor__(&v1, v6);\n
            if ((CVM::Init(&v1, &v5) & 1))\n
            {\n
                CVM::Run(&v1);\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                cgc_printf(\"Exiting\\n
\", a1, a2, a3, a4);\n
                v9 = -1;\n
            }\n
            v3 = 1;\n
            CVM::__dtor__(&v1);\n
        }\n
        else\n
        {\n
            cgc_printf(\"Exiting\\n
\", a1, a2, a3, a4);\n
            v9 = -1;\n
            v3 = 1;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(\"Exiting\\n
\", 4, a2, a3, a4);\n
        v9 = -1;\n
        v3 = 1;\n
    }\n
    CCLF::__dtor__(&v5);\n
    return v9;\n
}\n
", "4239726:sub_40b16e": null, "4239728:_ZN3CVMC1EPv": "typedef struct struct_0 {\n
    char padding_0[4256];\n
    unsigned long long field_10a0;\n
} struct_0;\n
\n
long long CVM::__ctor__(struct_0 *a0, unsigned int a1)\n
{\n
    CMMU::__ctor__(a0);\n
    CCPU::__base_ctor__(&a0->padding_0[0x800], a1);\n
    CDMA::__ctor__(&a0->padding_0[2144]);\n
    *(&a0->field_10a0) = a1;\n
    return CUtil::DoubleListDeclare::__base_ctor__(a0 + 1);\n
}\n
", "4239826:sub_40b1d2": null, "4239840:_ZN3CVMD1Ev": "long long CVM::__dtor__(unsigned long long *a0)\n
{\n
    CUtil::DoubleListDeclare::__base_dtor__(a0 + 533);\n
    CDMA::__dtor__(a0 + 268);\n
    CCPU::__dtor__(a0 + 0x100);\n
    return CMMU::__dtor__(a0);\n
}\n
", "4239919:sub_40b22f": null, "4239920:_ZN3CVM4InitEP4CCLF": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char field_10;\n
    char padding_11[1];\n
    unsigned short field_12;\n
} struct_0;\n
\n
long long CVM::Init(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned long long *v0;  // [bp-0x60]\n
    unsigned long long *v1;  // [bp-0x58]\n
    unsigned long v2;  // [bp-0x48]\n
    unsigned long v3;  // [bp-0x40]\n
    char v4;  // [bp-0x32]\n
    char v5;  // [bp-0x31]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned short v7;  // [bp-0x28]\n
    unsigned short v8;  // [bp-0x26]\n
    unsigned int v9;  // [bp-0x24]\n
    char v10;  // [bp-0x9]\n
\n
    if (!a1)\n
    {\n
        v10 = 0;\n
        return v10 & 1;\n
    }\n
    else if (!a1->field_10)\n
    {\n
        v10 = 0;\n
        return v10 & 1;\n
    }\n
    else if (a1->field_8)\n
    {\n
        v9 = 0;\n
        while (true)\n
        {\n
            if (v9 >= a1->field_10)\n
            {\n
                CDMA::InitDMA(a0 + 2144);\n
                CCPU::Init(a0 + 0x800, a0, a0, a0 + 2144, a1->field_12);\n
                v0 = operator new(32);\n
                CSendDevice::__base_ctor__(v0, 1);\n
                v3 = v0;\n
                v1 = operator new(32);\n
                CReadDevice::__ctor__(v1, 2);\n
                v2 = v1;\n
                CUtil::DoubleList::AddLast(a0 + 4264, v3);\n
                CUtil::DoubleList::AddLast(a0 + 4264, v2);\n
                CDMA::AddPeripheral(a0 + 2144, 1, v3);\n
                CDMA::AddPeripheral(a0 + 2144, 2, v2);\n
                v10 = 1;\n
                return v10 & 1;\n
            }\n
            v8 = *((a1->field_8 + v9 * 16 + 4));\n
            v7 = *((a1->field_8 + v9 * 16 + 2));\n
            *(&v6) = *((a1->field_8 + v9 * 16 + 8));\n
            v5 = *((a1->field_8 + v9 * 16));\n
            v4 = 0;\n
            if (!v5)\n
            {\n
                v4 |= 5;\n
            }\n
            else if (v5 == 1)\n
            {\n
                v4 |= 3;\n
            }\n
            else if (v5 == 2)\n
            {\n
                goto LABEL_40b39b;\n
            }\n
            if (!(CMMU::AddMemorySection(a0, v8, *(&v6), v7, v4) & 1))\n
            {\n
                v10 = 0;\n
                return v10 & 1;\n
            }\n
LABEL_40b39b:\n
            v9 += 1;\n
        }\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        return v10 & 1;\n
    }\n
}\n
", "4240532:sub_40b494": null, "4240544:_ZN3CVM3RunEv": "long long CVM::Run(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x30]\n
    char v1;  // [bp-0x20]\n
\n
    CCPU::Run(a0 + 0x800);\n
    if ((CCPU::HasException(a0 + 0x800) & 1))\n
    {\n
        CCPU::GetExceptionText(&v1, a0 + 0x800);\n
        cgc_printf(\"Exception: $s\\n
\", CUtil::String::c_str const(&v1), a2, a3, a4);\n
        CUtil::String::__dtor__(&v1);\n
    }\n
    CCPU::DumpRegisters(&v0, a0 + 0x800);\n
    cgc_printf(\"Registers:\\n
$s\\n
End Registers\\n
\", CUtil::String::c_str const(&v0), a2, a3, a4);\n
    CUtil::String::__dtor__(&v0);\n
    return 1;\n
}\n
", "4240728:sub_40b558": null, "4240736:_ZN5CUtil17DoubleListDeclareI11CPeripheralLj16EEC2Ev": "long long CUtil::DoubleListDeclare::__base_ctor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_ctor__(a0, 16);\n
}\n
", "4240768:_ZN5CUtil17DoubleListDeclareI11CPeripheralLj16EED2Ev": "long long CUtil::DoubleListDeclare::__base_dtor__(unsigned long long a0)\n
{\n
    return CUtil::DoubleList::__base_dtor__(a0);\n
}\n
", "4240795:sub_40b59b": null, "4240800:_ZN5CUtil10DoubleListI11CPeripheralE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[28];\n
    struct struct_1 *field_20;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
long long CUtil::DoubleList::AddLast(struct_0 *a0, unsigned long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned long long v1[2];  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v0 = a0;\n
    if (a1)\n
    {\n
        v3 = v0;\n
        v1[0] = a1 + *(v3);\n
        v1[0] = v3 + 24;\n
        v1[1] = *((v3 + 32));\n
        *(*((v3 + 32))) = v1;\n
        *((v3 + 32)) = v1;\n
    }\n
    return v3;\n
}\n
", "4240900:sub_40b604": null, "4240912:_ZN4CCPU12HasExceptionEv": "typedef struct struct_0 {\n
    char padding_0[60];\n
    char field_3c;\n
} struct_0;\n
\n
long long CCPU::HasException(struct_0 *a0)\n
{\n
    return a0->field_3c & 1;\n
}\n
", "4240934:sub_40b626": null, "4240944:_ZN4CCPU16GetExceptionTextEv": "long long CCPU::GetExceptionText(unsigned long long a0[2], unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
\n
    v0 = a0;\n
    CUtil::String::__ctor__(a0, a1 + 64);\n
    return a0;\n
}\n
", "4240993:sub_40b661": null, "4241008:_ZN5CUtil10DoubleListI11CPeripheralED2Ev": "long long CUtil::DoubleList::__base_dtor__(unsigned long long a0)\n
{\n
    CUtil::DoubleList::DeleteAll(a0);\n
    CUtil::DoubleLink::__base_dtor__(a0 + 24);\n
    return CUtil::DoubleLink::__base_dtor__(a0 + 8);\n
}\n
", "4241065:sub_40b6a9": null, "4241072:_ZN5CUtil10DoubleListI11CPeripheralE9DeleteAllEv": "long long CUtil::DoubleList::DeleteAll(unsigned long long a0)\n
{\n
    struct struct_1 **v0;  // [bp-0x20]\n
    unsigned long long v2;  // rax\n
\n
    while (true)\n
    {\n
        v2 = CUtil::DoubleList::IsEmpty(a0);\n
        *(&v2) = v2 ^ 255;\n
        if (!(*(&v2) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(a0);\n
        if (v0)\n
            *(v0)->field_8(v0);\n
    }\n
    return v2;\n
}\n
", "4241160:sub_40b708": null, "4241168:_ZN5CUtil10DoubleListI11CPeripheralE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::IsEmpty(struct_0 *a0)\n
{\n
    return a0->field_8 == &a0[1].field_8;\n
}\n
", "4241201:sub_40b731": null, "4241216:_ZN5CUtil10DoubleListI11CPeripheralE8GetFirstEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long CUtil::DoubleList::GetFirst(struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0->field_8 == &a0[1].field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = a0->field_8 + -(a0->field_0);\n
    return v0;\n
}\n
", "4241292:sub_40b78c": null, "4241296:_ZN5CUtil10DoubleListI11CPeripheralEC2Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
} struct_0;\n
\n
long long CUtil::DoubleList::__base_ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    a0->field_0 = a1;\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_8);\n
    CUtil::DoubleLink::__base_ctor__(&a0->field_18);\n
    a0->field_8 = &a0->field_18;\n
    a0->field_10 = 0;\n
    a0->field_20 = &a0->field_8;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4241396:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242888:__libc_start_main": null, "5242896:_Znam": null, "5242904:cgc_receive": null, "5242912:cgc_allocate": null, "5242920:cgc__terminate": null, "5242928:_ZdlPv": null, "5242936:_Znwm": null, "5242944:_ZdaPv": null, "5242952:cgc_rint": null, "5242960:cgc_log10": null, "5242968:cgc_transmit": null, "5242976:cgc_pow": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}