{"4202496:_init": "extern struct_0 *g_40b4c8;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40b4c8;\n
    if (g_40b4c8)\n
        v1 = g_40b4c8();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_40b4e8;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40b4e8;\n
    goto *(4240624);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202624:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4240600);\n
}\n
", "4202672:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202709:sub_4020d5": null, "4202710:sub_4020d6": null, "4202720:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40b4c0;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202761:sub_402109": null, "4202768:register_tm_clones": "extern unsigned long long g_40b4d0;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202825:sub_402149": null, "4202832:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_40b4d8;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40b4d8)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202885:sub_402185": null, "4202889:sub_402189": null, "4202896:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202905:sub_402199": null, "4202912:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202963:sub_4021d3": null, "4202976:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203027:sub_402213": null, "4203040:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203091:sub_402253": null, "4203104:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0) && !cgc_islower(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203177:sub_4022a9": null, "4203184:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0) && !cgc_isdigit(a0))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203257:sub_4022f9": null, "4203264:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 32 && a0 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203315:sub_402333": null, "4203328:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + -32;\n
    return v0;\n
}\n
", "4203388:sub_40237c": null, "4203392:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 + 32;\n
    return v0;\n
}\n
", "4203452:sub_4023bc": null, "4203456:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203547:sub_40241b": null, "4203552:cgc_link": "extern char cgc_lookaside;\n
\n
long long cgc_link(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned long v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned long v5;  // rax\n
\n
    v3 = cgc_lookaside;\n
    if (!a0)\n
        return cgc_lookaside;\n
    v5 = a0;\n
    if (*(a0) <= 1016)\n
    {\n
        if (*(a0) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(a0) >> 3;\n
        *((a0 + 8)) = (&cgc_lookaside)[v2];\n
        v1 = a0;\n
        if (*(a0) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(a0) >> 3;\n
        (&cgc_lookaside)[v0] = v1;\n
        return &cgc_lookaside;\n
    }\n
    while (true)\n
    {\n
        if (!v3)\n
            return v5;\n
        if (!*((v3 + 8)))\n
        {\n
            *((v3 + 8)) = a0;\n
            *((a0 + 16)) = v3;\n
            *((a0 + 8)) = 0;\n
            return a0;\n
        }\n
        if (*(a0) < *(*((v3 + 8))))\n
        {\n
            *((a0 + 8)) = *((v3 + 8));\n
            *((a0 + 16)) = v3;\n
            *((*((v3 + 8)) + 16)) = a0;\n
            v5 = v3;\n
            *((v5 + 8)) = a0;\n
            return v3;\n
        }\n
        v5 = *((v3 + 8));\n
        v3 = v5;\n
    }\n
}\n
", "4203931:sub_40259b": null, "4203936:cgc_add_freelist_block": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_add_freelist_block(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned long long *v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    unsigned long long *v8;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 += 4;\n
    v2 = v2 + 4095 & 0xfffff000;\n
    if (cgc_allocate(a0, v4, v5, v6))\n
    {\n
        cgc_printf(\"[ERROR] Allocating a free list block failed: $d\\n
\", v2);\n
        cgc__terminate(\"[ERROR] Allocating a free list block failed: $d\\n
\");\n
    }\n
    cgc_bzero(v1, v2);\n
    *(v1) = v2 - 4;\n
    if (!cgc_lookaside)\n
    {\n
        v8 = v1;\n
        cgc_lookaside = v8;\n
        return v1;\n
    }\n
    v8 = cgc_link(v1);\n
    return v8;\n
}\n
", "4204128:cgc_free": "long long cgc_free(unsigned long a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    if (a0)\n
        *(&v0) = a0 - 4;\n
    return cgc_link(*(&v0));\n
}\n
", "4204186:sub_40269a": null, "4204192:cgc_init_freelist": "extern struct_0 *cgc_lookaside;\n
\n
long long cgc_init_freelist()\n
{\n
    unsigned long long v0[3];  // [bp-0x18]\n
    unsigned long long v1[3];  // [bp-0x10]\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v1[0] = 0;\n
    v0[0] = 0;\n
    if (cgc_allocate(v3, v4, v5))\n
    {\n
        cgc_printf(\"[ERROR] Malloc fail terminate\\n
\");\n
        cgc__terminate(\"[ERROR] Malloc fail terminate\\n
\");\n
    }\n
    cgc_bzero(cgc_lookaside, 0x1000);\n
    v1[0] = cgc_lookaside;\n
    v0[0] = v1 + 1;\n
    v1[0] = 0;\n
    v1[1] = v0;\n
    v1[2] = 0;\n
    v0[0] = 4068;\n
    v0[2] = v1;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4204384:cgc_unlink": "long long cgc_unlink(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (!a0)\n
        return v2;\n
    if (*((a0 + 16)))\n
        *((*((a0 + 16)) + 8)) = *((v0 + 8));\n
    v2 = a0;\n
    if (!*((a0 + 8)))\n
        return v2;\n
    v2 = *((a0 + 8));\n
    *((v2 + 16)) = *((a0 + 16));\n
}\n
", "4204485:sub_4027c5": null, "4204496:cgc_freelist_alloc": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern struct_0 *cgc_lookaside;\n
\n
long long cgc_freelist_alloc(unsigned long long a0)\n
{\n
    unsigned long long *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v1 = cgc_lookaside; v1; v1 = v1->field_8)\n
    {\n
        if (v1->field_0 >= a0)\n
            break;\n
    }\n
    if (!v1)\n
    {\n
        cgc_add_freelist_block(a0);\n
        v2 = cgc_freelist_alloc(a0);\n
        return v2;\n
    }\n
    cgc_unlink(v1);\n
    if (*(v1) - a0 < 24)\n
    {\n
        v2 = v1 + 4;\n
        return v2;\n
    }\n
    v0 = v1 + 4 + a0;\n
    *(v0) = *(v1) - (a0 + 4);\n
    *(v1) = a0;\n
    cgc_link(v0);\n
    v2 = v1 + 4;\n
    return v2;\n
}\n
", "4204777:sub_4028e9": null, "4204784:cgc_calloc": "long long cgc_calloc(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0x20]\n
    unsigned long long v1;  // [bp-0x18]\n
    unsigned long v2;  // [bp-0x10]\n
\n
    v1 = a0;\n
    v0 = cgc_malloc(v1);\n
    if (!v0)\n
    {\n
        v2 = v0;\n
        return v2;\n
    }\n
    v1 = v1 + 7 & 4294967288;\n
    cgc_bzero(v0, v1);\n
    v2 = v0;\n
    return v2;\n
}\n
", "4204889:sub_402959": null, "4204896:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
extern struct_1 cgc_lookaside;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x30], Other Possible Types: unsigned long long\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned long long v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10]\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 < 8)\n
        v3 = 8;\n
    v3 = v3 + 7 & 4294967288;\n
    if (v3 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v3 >> 3;\n
    if (!v2)\n
    {\n
        v4 = cgc_freelist_alloc(v3);\n
        return v4;\n
    }\n
    for (v2 = v0; v2 < 128; v2 += 1)\n
    {\n
        if ((&cgc_lookaside.field_0)[v2])\n
            break;\n
    }\n
    if (v2 != 128)\n
    {\n
        v1 = (&cgc_lookaside.field_0)[v2];\n
        (&cgc_lookaside.field_0)[v2] = v1->field_8;\n
        v4 = &v1->padding_0[4];\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v3);\n
    return v4;\n
}\n
", "4205198:sub_402a8e": null, "4205200:cgc_round": "long long cgc_round()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4205326:sub_402b0e": null, "4205328:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v7;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v7 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v7;\n
        return v5;\n
    }\n
    else if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = v0;\n
        return v5;\n
    }\n
}\n
", "4205478:sub_402ba6": null, "4205488:cgc_WRAPPER_PUTC": "long long cgc_WRAPPER_PUTC(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0;\n
    v0 = a1;\n
    if (cgc_transmit(a0, a1, a2, v4))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a2 + 1;\n
    return v2;\n
}\n
", "4205571:sub_402c03": null, "4205584:cgc_WRAPPER_OUTC": "long long cgc_WRAPPER_OUTC(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    a0[a2] = a1;\n
    return a2 + 1;\n
}\n
", "4205625:sub_402c39": null, "4205632:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
long long cgc_WRAPPER_BUFFER_PUTC(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long v3;  // rcx\n
\n
    while (true)\n
    {\n
        if (a0->field_100 < 0x100)\n
        {\n
            a0->field_100 = a0->field_100 + 1;\n
            (&a0->field_0)[rcx<8>] = a1;\n
            v1 = a2 + 1;\n
            return v1;\n
        }\n
        else if (cgc_transmit(a0, a1, a2, v3))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(&v0))\n
        {\n
            a0->field_100 = a0->field_100 - *(&v0);\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4205846:sub_402d16": null, "4205856:cgc_putchar": "long long cgc_putchar(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
\n
    if (cgc_transmit(a0, v2, v3, v4))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4205926:sub_402d66": null, "4205936:cgc_puts": "long long cgc_puts(unsigned long long a0)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x28]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v0 = 0;\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (v0 == v1)\n
        {\n
            cgc_putchar(10);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (cgc_transmit(a0, v5, v6, v7))\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(&v2))\n
        {\n
            v0 = *(&v2) + v0;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4206100:sub_402e14": null, "4206112:cgc_vprintf_buffered": "long long cgc_vprintf_buffered(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x144]\n
    void* v1;  // [bp-0x140]\n
    unsigned long long v2;  // [bp-0x138]\n
    char v3;  // [bp-0x130]\n
    unsigned short v4;  // [bp-0x30]\n
    unsigned long long v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    v5 = cgc_WRAPPER_BUFFER_PUTC;\n
    v4 = 0;\n
    v2 = &v3;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(v2, v5, v1, a0, a1);\n
    if (v4 > 0)\n
    {\n
        if (!cgc_transmit(a0, a1, v8, v9))\n
        {\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
    }\n
    v6 = v0;\n
    return v6;\n
}\n
", "4206301:sub_402edd": null, "4206304:cgc_wrapper_output": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
long long cgc_wrapper_output(unsigned long long a0, struct struct_3 **a1, unsigned long a2, char *a3, struct_1 *a4)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    unsigned int *v1;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_1 *v2;  // [bp-0x160]\n
    unsigned int v3;  // [bp-0x154]\n
    struct struct_0 **v4;  // [bp-0x150], Other Possible Types: unsigned long\n
    struct_1 *v5;  // [bp-0x148]\n
    unsigned int v6;  // [bp-0x13c]\n
    unsigned int *v7;  // [bp-0x138], Other Possible Types: unsigned long\n
    struct_1 *v8;  // [bp-0x130]\n
    unsigned int *v9;  // [bp-0x128]\n
    unsigned int v10;  // [bp-0x11c]\n
    unsigned int *v11;  // [bp-0x118], Other Possible Types: unsigned long\n
    struct_1 *v12;  // [bp-0x110]\n
    unsigned int *v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0xfc]\n
    unsigned int *v15;  // [bp-0xf8], Other Possible Types: unsigned long\n
    struct_1 *v16;  // [bp-0xf0]\n
    unsigned int v17;  // [bp-0xe4]\n
    unsigned int *v18;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v19;  // [bp-0xd8]\n
    unsigned int v20;  // [bp-0xcc]\n
    unsigned int *v21;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v22;  // [bp-0xc0]\n
    unsigned int v23;  // [bp-0xb4]\n
    unsigned int *v24;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v25;  // [bp-0xa8]\n
    unsigned int v26;  // [bp-0x9c]\n
    unsigned long v27;  // [bp-0x98]\n
    char v28;  // [bp-0x8b]\n
    char v29;  // [bp-0x8a]\n
    char v30;  // [bp-0x89]\n
    unsigned int *v31;  // [bp-0x88]\n
    unsigned long v32;  // [bp-0x80]\n
    unsigned long v33;  // [bp-0x78]\n
    unsigned int v34;  // [bp-0x6c]\n
    unsigned int v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    unsigned long long v37;  // [bp-0x60]\n
    char *v38;  // [bp-0x58]\n
    char *v39;  // [bp-0x50]\n
    char v40;  // [bp-0x41]\n
    unsigned int v41;  // [bp-0x40]\n
    unsigned int v42;  // [bp-0x3c]\n
    unsigned int v43;  // [bp-0x38]\n
    unsigned int v44;  // [bp-0x34]\n
    char *v45;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v46;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_3 **v47;  // [bp-0x18]\n
    struct_1 *v49;  // rcx\n
    unsigned long long v50;  // rdx\n
    unsigned int *v51;  // rax\n
    struct_1 *v52;  // rcx\n
    unsigned int *v53;  // rdx\n
    struct_1 *v54;  // rcx\n
    unsigned long long v55;  // rdx\n
    unsigned int *v56;  // rax\n
    struct_1 *v57;  // rcx\n
    unsigned int *v58;  // rdx\n
    struct_1 *v59;  // rcx\n
    unsigned long long v60;  // rdx\n
    unsigned int *v61;  // rax\n
    struct_1 *v62;  // rcx\n
    unsigned int *v63;  // rdx\n
    struct_1 *v64;  // rcx\n
    unsigned long long v65;  // rdx\n
    unsigned int *v66;  // rax\n
    struct_1 *v67;  // rcx\n
    unsigned int *v68;  // rdx\n
    unsigned long long v69;  // rdx\n
    unsigned int *v70;  // rax\n
    struct_1 *v71;  // rcx\n
    unsigned int *v72;  // rdx\n
    unsigned long long v73;  // rdx\n
    unsigned int *v74;  // rax\n
    struct_1 *v75;  // rcx\n
    unsigned int *v76;  // rdx\n
    struct_1 *v77;  // rcx\n
    unsigned long long v78;  // rdx\n
    struct struct_0 **v79;  // rax\n
    struct_1 *v80;  // rcx\n
    struct struct_0 **v81;  // rdx\n
    struct_1 *v82;  // rcx\n
    unsigned long long v83;  // rdx\n
    unsigned int *v84;  // rax\n
    struct_1 *v85;  // rcx\n
    unsigned int *v86;  // rdx\n
\n
    v47 = a1;\n
    v46 = a2;\n
    v45 = a3;\n
    v44 = 0;\n
    v43 = 0;\n
    v42 = 0;\n
    v41 = 0;\n
    while (true)\n
    {\n
        if (!*(v45))\n
            return v46;\n
        v40 = *(v45);\n
        v45 += 1;\n
        if (v40 != 36)\n
        {\n
            v46 = v47(a0, v40, v46);\n
        }\n
        else\n
        {\n
            v41 = 0;\n
            v42 = 0;\n
            v43 = 0;\n
            v44 = 0;\n
            if (!*(v45))\n
                return v46;\n
            if (*(v45) != 36)\n
            {\n
                if (*(v45) == 45)\n
                {\n
                    v44 |= 1;\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (cgc_isdigit(*(v45)))\n
                {\n
                    if (*(v45) == 48)\n
                        v44 |= 4;\n
                    for (v39 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v43 = cgc_atoi(v39);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                if (*(v45) == 46)\n
                {\n
                    v45 += 1;\n
                    if (!*(v45))\n
                        return v46;\n
                    for (v38 = v45; cgc_isdigit(*(v45)); v45 += 1);\n
                    v41 = cgc_atoi(v38);\n
                    if (!*(v45))\n
                        return v46;\n
                }\n
                v27 = *(v45) - 88;\n
                switch (v27)\n
                {\n
                case 0:\n
                    v44 |= 8;\n
                    v16 = a4;\n
                    v17 = v16->field_0;\n
                    if (v17 > 40)\n
                    {\n
                        v67 = v16;\n
                        v68 = v67->field_8;\n
                        v67->field_8 = &v68[2];\n
                        v15 = v68;\n
                    }\n
                    else\n
                    {\n
                        v64 = v16;\n
                        v65 = v17;\n
                        v66 = v65 + v64->field_10;\n
                        v64->field_0 = v65 + 8;\n
                        v15 = v66;\n
                    }\n
                    v34 = *(v15);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v34, 16, v43, v41);\n
                    break;\n
                case 11:\n
                    v2 = a4;\n
                    v3 = v2->field_0;\n
                    if (v3 > 40)\n
                    {\n
                        v85 = v2;\n
                        v86 = v85->field_8;\n
                        v85->field_8 = &v86[2];\n
                        v1 = v86;\n
                    }\n
                    else\n
                    {\n
                        v82 = v2;\n
                        v83 = v3;\n
                        v84 = v83 + v82->field_10;\n
                        v82->field_0 = v83 + 8;\n
                        v1 = v84;\n
                    }\n
                    v30 = *(v1);\n
                    v28 = v30;\n
                    v29 = 0;\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, &v28, v43, 0);\n
                    break;\n
                case 12:\n
                    v22 = a4;\n
                    v23 = v22->field_0;\n
                    if (v23 > 40)\n
                    {\n
                        v57 = v22;\n
                        v58 = v57->field_8;\n
                        v57->field_8 = &v58[2];\n
                        v21 = v58;\n
                    }\n
                    else\n
                    {\n
                        v54 = v22;\n
                        v55 = v23;\n
                        v56 = v55 + v54->field_10;\n
                        v54->field_0 = v55 + 8;\n
                        v21 = v56;\n
                    }\n
                    v36 = *(v21);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v36, 10, v43, v41);\n
                    break;\n
                case 13:\n
                    v44 |= 16;\n
                    v8 = a4;\n
                    v9 = &v8->field_4;\n
                    v10 = v8->field_4;\n
                    if (v10 > 160)\n
                    {\n
                        v75 = v8;\n
                        v76 = v75->field_8;\n
                        v75->field_8 = &v76[2];\n
                        v7 = v76;\n
                    }\n
                    else\n
                    {\n
                        v73 = v10;\n
                        v74 = v73 + v8->field_10;\n
                        *(v9) = v73 + 16;\n
                        v7 = v74;\n
                    }\n
                    v32 = *(v7);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 14:\n
                    v12 = a4;\n
                    v13 = &v12->field_4;\n
                    v14 = v12->field_4;\n
                    if (v14 <= 160)\n
                    {\n
                        v69 = v14;\n
                        v70 = v69 + v12->field_10;\n
                        *(v13) = v69 + 16;\n
                        v11 = v70;\n
                    }\n
                    else\n
                    {\n
                        v71 = v12;\n
                        v72 = v71->field_8;\n
                        v71->field_8 = &v72[2];\n
                        v11 = v72;\n
                    }\n
                    v33 = *(v11);\n
                    v46 = cgc_printf_helper_float(a0, a1, v46, v43, v41, v44);\n
                    break;\n
                case 22:\n
                    v5 = a4;\n
                    v6 = v5->field_0;\n
                    if (v6 <= 40)\n
                    {\n
                        v77 = v5;\n
                        v78 = v6;\n
                        v79 = v78 + v77->field_10;\n
                        v77->field_0 = v78 + 8;\n
                        v4 = v79;\n
                    }\n
                    else\n
                    {\n
                        v80 = v5;\n
                        v81 = v80->field_8;\n
                        v80->field_8 = &v81[1];\n
                        v4 = v81;\n
                    }\n
                    v31 = *(v4);\n
                    *(v31) = v46;\n
                    break;\n
                case 27:\n
                    v25 = a4;\n
                    v26 = v25->field_0;\n
                    if (v26 > 40)\n
                    {\n
                        v52 = v25;\n
                        v53 = v52->field_8;\n
                        v52->field_8 = &v53[2];\n
                        v24 = v53;\n
                    }\n
                    else\n
                    {\n
                        v49 = v25;\n
                        v50 = v26;\n
                        v51 = v50 + v49->field_10;\n
                        v49->field_0 = v50 + 8;\n
                        v24 = v51;\n
                    }\n
                    v37 = *(v24);\n
                    v46 = cgc_printf_helper_string(a0, a1, v46, v37, v43, v41);\n
                    break;\n
                case 32:\n
                    v19 = a4;\n
                    v20 = v19->field_0;\n
                    if (v20 > 40)\n
                    {\n
                        v62 = v19;\n
                        v63 = v62->field_8;\n
                        v62->field_8 = &v63[2];\n
                        v18 = v63;\n
                    }\n
                    else\n
                    {\n
                        v59 = v19;\n
                        v60 = v20;\n
                        v61 = v60 + v59->field_10;\n
                        v59->field_0 = v60 + 8;\n
                        v18 = v61;\n
                    }\n
                    v35 = *(v18);\n
                    v0 = v44;\n
                    v46 = cgc_printf_helper_int(a0, a1, v46, v35, 16, v43, v41);\n
                    break;\n
                default:\n
                    break;\n
                }\n
                v45 += 1;\n
            }\n
            else\n
            {\n
                v46 = v47(a0, 36, v46);\n
                continue;\n
            }\n
        }\n
    }\n
}\n
", "4208250:sub_40367a": null, "4208256:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4208416:cgc_vprintf": "long long cgc_vprintf(char *a0, void* a1)\n
{\n
    void* v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x28]\n
    void* **v2;  // [bp-0x20]\n
\n
    v2 = &cgc_WRAPPER_PUTC;\n
    v1 = 0;\n
    v0 = 0;\n
    return cgc_wrapper_output(v1, v2, v0, a0, a1);\n
}\n
", "4208490:sub_40376a": null, "4208496:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xf8]\n
    unsigned long v1;  // [bp-0xe8]\n
    unsigned long v2;  // [bp-0xe0]\n
    unsigned long v3;  // [bp-0xd8]\n
    unsigned long v4;  // [bp-0xd0]\n
    int v5;  // [bp-0xc8]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    unsigned int v13;  // [bp-0x3c]\n
    unsigned int v14;  // [bp-0x38]\n
    unsigned int v15;  // [bp-0x34]\n
    unsigned long v16;  // [bp-0x30]\n
    unsigned long v17;  // [bp-0x28]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v5 = v20;\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
    }\n
    v4 = v28;\n
    v3 = a4;\n
    v2 = a3;\n
    v1 = a2;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 16;\n
    v13 = cgc_vsprintf(a0, a1, &v14);\n
    return v13;\n
}\n
", "4208660:sub_403814": null, "4208672:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, char *a1, void* a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    struct struct_0 **v2;  // [bp-0x28]\n
\n
    v2 = &cgc_WRAPPER_OUTC;\n
    v1 = 0;\n
    v0 = cgc_wrapper_output(a0, v2, v1, a1, a2);\n
    v2(a0, 0, v0);\n
    return v0;\n
}\n
", "4208772:sub_403884": null, "4208784:cgc_debug_print": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_debug_print(char *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    struct_0 *v0;  // [bp-0x8c0]\n
    char v1;  // [bp-0x8b8]\n
    unsigned long v2;  // [bp-0x8b0]\n
    unsigned long v3;  // [bp-0x8a8]\n
    unsigned long v4;  // [bp-0x8a0]\n
    unsigned long v5;  // [bp-0x898]\n
    unsigned long v6;  // [bp-0x890]\n
    int v7;  // [bp-0x888]\n
    int v8;  // [bp-0x878]\n
    int v9;  // [bp-0x868]\n
    int v10;  // [bp-0x858]\n
    int v11;  // [bp-0x848]\n
    int v12;  // [bp-0x838]\n
    int v13;  // [bp-0x828]\n
    int v14;  // [bp-0x818]\n
    unsigned int v15;  // [bp-0x7fc]\n
    char v16;  // [bp-0x7f8]\n
    unsigned int v17;  // [bp-0x28]\n
    unsigned int v18;  // [bp-0x24]\n
    unsigned long v19;  // [bp-0x20]\n
    unsigned long v20;  // [bp-0x18]\n
    unsigned long v21;  // [bp+0x8]\n
    char v22;  // al\n
    int v23;  // xmm0\n
    int v24;  // xmm1\n
    int v25;  // xmm2\n
    int v26;  // xmm3\n
    int v27;  // xmm4\n
    int v28;  // xmm5\n
    int v29;  // xmm6\n
    int v30;  // xmm7\n
    unsigned long v31;  // r9\n
\n
    if (v22)\n
    {\n
        v7 = v23;\n
        v8 = v24;\n
        v9 = v25;\n
        v10 = v26;\n
        v11 = v27;\n
        v12 = v28;\n
        v13 = v29;\n
        v14 = v30;\n
    }\n
    v6 = v31;\n
    v5 = a4;\n
    v4 = a3;\n
    v3 = a2;\n
    v2 = a1;\n
    v20 = &v1;\n
    v19 = &v21;\n
    v18 = 48;\n
    v17 = 8;\n
    v0 = &v16;\n
    v15 = cgc_vsprintf(&v16, a0, &v17);\n
    cgc_strlen(v0);\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v15;\n
}\n
", "4209015:sub_403977": null, "4209024:cgc_printf_int_to_string": "long long cgc_printf_int_to_string(unsigned long a0, unsigned long a1, char *a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v6;  // rcx\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rcx\n
\n
    v3 = a0;\n
    v2 = a3;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a2) = 48;\n
        v4 = 1;\n
        return v4;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a1 >> 32;\n
        v3 = (0 CONCAT v3) /m a1;\n
        if (a1 != 16)\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a2[v6] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a2[v7] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v8 = v1;\n
            v1 = v8 + 1;\n
            a2[v8] = v0 + 55;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            v1 = v9 + 1;\n
            a2[v9] = v0 + 87;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4209316:sub_403aa4": null, "4209328:cgc_printf_helper_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_int(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned int v9, unsigned int a6)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x50]\n
    char v3;  // [bp-0x41]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned long v7;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v8;  // [bp-0x18]\n
    unsigned long long v10;  // rax\n
    unsigned long v11;  // rcx\n
    unsigned long long v12;  // rax\n
\n
    v8 = a1;\n
    v7 = a2;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (a4 == 10 && v6 < 0)\n
    {\n
        v3 = 1;\n
        v6 = -(v6);\n
        v5 += 1;\n
    }\n
    v2 = cgc_printf_int_to_string(v6, a4, &v1, a6);\n
    v5 = &v2[v5];\n
    if (a5 > 0 && v5 < a5)\n
        v4 = a5 - v5;\n
    if (v9 > 0)\n
    {\n
        a6 |= 4;\n
        if (v2 < v9)\n
            v4 = v9 - v2;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a6 & 4))\n
        {\n
            v7 = v8(a0, 45, v7);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v10 = v4;\n
            v4 = v10 - 1;\n
            if (v10 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                v7 = v8(a0, 32, v7);\n
            else\n
                v7 = v8(a0, 48, v7);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v7 = v8(a0, 45, v7);\n
        v3 = 0;\n
    }\n
    for (v0 = v2; v0 > 0; v0 -= 1)\n
    {\n
        v11 = v0 - 1;\n
        v7 = v8(a0, (&v1)[v11], v7, v11);\n
    }\n
    if (!(a6 & 1))\n
        return v7;\n
    while (true)\n
    {\n
        v12 = v4;\n
        v4 = v12 - 1;\n
        if (v12 <= 0)\n
            break;\n
        v7 = v8(a0, 32, v7);\n
    }\n
    return v7;\n
}\n
", "4209965:sub_403d2d": null, "4209968:cgc_printf_float_to_string": "long long cgc_printf_float_to_string(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    int tmp_10;  // tmp #10\n
    int tmp_12;  // tmp #12\n
    int tmp_11;  // tmp #11\n
    char v0;  // [bp-0x7d]\n
    char v1;  // [bp-0x7c]\n
    char v2;  // [bp-0x7b]\n
    unsigned short v3;  // [bp-0x7a]\n
    char v4;  // [bp-0x77]\n
    unsigned short v5;  // [bp-0x76]\n
    char v6;  // [bp-0x73]\n
    char v7;  // [bp-0x72]\n
    char v8;  // [bp-0x71]\n
    unsigned long long v9;  // [bp-0x70]\n
    unsigned short v10;  // [bp-0x62]\n
    char v11;  // [bp-0x5f]\n
    unsigned short v12;  // [bp-0x5e]\n
    unsigned short v13;  // [bp-0x5c]\n
    unsigned short v14;  // [bp-0x5a]\n
    unsigned long v15;  // [bp-0x58]\n
    unsigned short v16;  // [bp-0x4c]\n
    char v17;  // [bp-0x49]\n
    unsigned long v18;  // [bp-0x48], Other Possible Types: unsigned long long\n
    char *v19;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v20;  // [bp-0x2c]\n
    unsigned long v21;  // [bp-0x18]\n
    char *v22;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v24;  // xmm0lq\n
    unsigned long long v25;  // xmm0lq\n
    unsigned long v26;  // rcx\n
    unsigned long v27;  // rcx\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rcx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // rcx\n
    int v33;  // xmm0\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rcx\n
    unsigned long v36;  // rcx\n
    unsigned long v37;  // rcx\n
    unsigned long v38;  // rcx\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rcx\n
    unsigned long v41;  // rcx\n
    unsigned long v43;  // rcx\n
    unsigned long v44;  // rcx\n
    unsigned long v45;  // rcx\n
    char *v46;  // rax, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v47;  // rcx\n
    unsigned long v48;  // rcx\n
    unsigned long v50;  // rcx\n
    unsigned long v51;  // rcx\n
    unsigned long v52;  // rcx\n
    unsigned long v53;  // rcx\n
    unsigned long v54;  // rcx\n
    unsigned long v56;  // rcx\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    unsigned long v60;  // rcx\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned int v64;  // eax\n
    unsigned long v65;  // rcx\n
\n
    v21 = v24;\n
    v20 = a2;\n
    v19 = 0;\n
    cgc_pow();\n
    v18 = 0x4024000000000000;\n
    v25 = v21;\n
    if ((((CmpF(v25, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v26 = v19;\n
        v19 = v26 + 1;\n
        *((a1 + v26)) = 48;\n
        v27 = v19;\n
        v19 = v27 + 1;\n
        *((a1 + v27)) = 46;\n
        for (v17 = 0; v17 < a0; v17 += 1)\n
        {\n
            v29 = v19;\n
            v19 = v29 + 1;\n
            *((a1 + v29)) = 48;\n
        }\n
        if ((v20 & 16))\n
        {\n
            v34 = v19;\n
            v19 = v34 + 1;\n
            *((a1 + v34)) = 101;\n
            v35 = v19;\n
            v19 = v35 + 1;\n
            *((a1 + v35)) = 43;\n
            v36 = v19;\n
            v19 = v36 + 1;\n
            *((a1 + v36)) = 48;\n
            v37 = v19;\n
            v19 = v37 + 1;\n
            *((a1 + v37)) = 48;\n
            v38 = v19;\n
            v19 = v38 + 1;\n
            *((a1 + v38)) = 48;\n
        }\n
        v22 = v19;\n
        return v22;\n
    }\n
    if ((((CmpF(v21, v21) & 69) >> 2) & 1))\n
    {\n
        v30 = v19;\n
        v19 = v30 + 1;\n
        *((a1 + v30)) = 78;\n
        v31 = v19;\n
        v19 = v31 + 1;\n
        *((a1 + v31)) = 97;\n
        v32 = v19;\n
        v19 = v32 + 1;\n
        *((a1 + v32)) = 78;\n
        v22 = v19;\n
        return v22;\n
    }\n
    v33 = (0 CONCAT v21) & 170141183460469231722463931679029329919;\n
    if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
    {\n
        v39 = v19;\n
        v19 = v39 + 1;\n
        *((a1 + v39)) = 73;\n
        v40 = v19;\n
        v19 = v40 + 1;\n
        *((a1 + v40)) = 78;\n
        v41 = v19;\n
        v19 = v41 + 1;\n
        *((a1 + v41)) = 70;\n
        v22 = v19;\n
        return v22;\n
    }\n
    if (!(CmpF(v21, 0x4202a05f20000000) & 1))\n
        v20 |= 16;\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) == 1)\n
        v21 = (0 CONCAT v18) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    else\n
        v21 = (0 CONCAT v18 ^ 0x8000000000000000) * (0 CONCAT 0x3fe0000000000000) + (0 CONCAT v21);\n
    cgc_log10();\n
    v16 = v21;\n
    if ((v20 & 16))\n
    {\n
        v14 = v16 - a0;\n
        if ((((CmpF(0x3ff0000000000000, v21) & 69) | ((CmpF(0x3ff0000000000000, v21) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        else\n
        {\n
            cgc_pow();\n
            v15 = 0x4024000000000000;\n
        }\n
        v18 = v15;\n
    }\n
    if ((((CmpF(0, v21) & 69) | ((CmpF(0, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v21 ^= 0x8000000000000000;\n
        v19[a1] = 45;\n
        v19 += 1;\n
    }\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    *(&v33) = v18;\n
    if ((((CmpF(v33, v21) & 69) | ((CmpF(v33, v21) & 69) >> 6)) & 1) != 1)\n
    {\n
        v43 = v19;\n
        v19 = v43 + 1;\n
        *((a1 + v43)) = 48;\n
        v44 = v19;\n
        v19 = v44 + 1;\n
        *((a1 + v44)) = 46;\n
        v11 = 1;\n
    }\n
    else if (v16 < 0)\n
    {\n
        *(&v33) = v21;\n
        if ((((CmpF(v33, v18) & 69) | ((CmpF(v33, v18) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
        {\n
            v45 = v19;\n
            v19 = v45 + 1;\n
            *((a1 + v45)) = 48;\n
            v46 = a1;\n
            v47 = v19;\n
            v19 = v47 + 1;\n
            *((a1 + v47)) = 46;\n
            v10 = v16;\n
            while (true)\n
            {\n
                *(&v46) = v10 + 1;\n
                v10 = v46;\n
                if (v46 >= 0)\n
                    break;\n
                v46 = a1;\n
                v48 = v19;\n
                v19 = v48 + 1;\n
                *((a1 + v48)) = 48;\n
                v12 += 1;\n
            }\n
            v11 = 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v16 < 0)\n
        {\n
            *(&v33) = v21;\n
            v1 = !((CmpF(v33, v18) & 69 | (CmpF(v33, v18) & 69) >> 6) & 1);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        cgc_pow();\n
        v9 = 0x4024000000000000;\n
        *(&v33) = v9;\n
        if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) == 1)\n
        {\n
LABEL_4043c1:\n
            if ((((CmpF(v16, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                *(&v33) = v21;\n
                if ((((CmpF(v33, 0) & 69) | ((CmpF(v33, 0) & 69) >> 6)) & 1) != 1 && !(v20 & 16))\n
                {\n
                    v56 = v19;\n
                    v19 = v56 + 1;\n
                    *((a1 + v56)) = 46;\n
                    v11 = 1;\n
                }\n
            }\n
            if (v12 >= a0)\n
                break;\n
            v16 -= 1;\n
        }\n
        else\n
        {\n
            v33 = (0 CONCAT v9) & 170141183460469231722463931679029329919;\n
            if ((((CmpF(v33, 0x7ff0000000000000) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x7ff0000000000000<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
                goto LABEL_4043c1;\n
            tmp_10 = DivV(tmp_12, tmp_11);\n
            v33 = tmp_10;\n
            cgc_floor();\n
            v8 = v33;\n
            v21 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v9) + (0 CONCAT v21);\n
            if ((v20 & 16) && !v11)\n
            {\n
                if (!v13)\n
                    v13 = v16;\n
                if (v8)\n
                {\n
                    v52 = v19;\n
                    v19 = v52 + 1;\n
                    *((a1 + v52)) = v8 + 48;\n
                    v53 = v19;\n
                    v19 = v53 + 1;\n
                    *((a1 + v53)) = 46;\n
                    v11 = 1;\n
                }\n
                else\n
                {\n
                    v13 -= 1;\n
                }\n
                goto LABEL_4043b7;\n
            }\n
            if ((((CmpF(0, v16) & 69) | ((CmpF(0, v16) & 69) >> 6)) & 1) != 1 && !v11)\n
            {\n
                v50 = v19;\n
                v19 = v50 + 1;\n
                *((a1 + v50)) = 48;\n
                v51 = v19;\n
                v19 = v51 + 1;\n
                *((a1 + v51)) = 46;\n
                v11 = 1;\n
            }\n
            v54 = v19;\n
            v19 = v54 + 1;\n
            *((a1 + v54)) = v8 + 48;\n
            if (v11)\n
                v12 += 1;\n
LABEL_4043b7:\n
            goto LABEL_4043c1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v11)\n
            v0 = v12 < a0;\n
        if (!(v0 & 1))\n
            break;\n
        v57 = v19;\n
        v19 = v57 + 1;\n
        *((a1 + v57)) = 48;\n
        v12 += 1;\n
    }\n
    if ((v20 & 16))\n
    {\n
        v58 = v19;\n
        v19 = v58 + 1;\n
        *((a1 + v58)) = 101;\n
        if (v13 >= 0)\n
        {\n
            v60 = v19;\n
            v19 = v60 + 1;\n
            *((a1 + v60)) = 43;\n
        }\n
        else\n
        {\n
            v13 = -(v13);\n
            v59 = v19;\n
            v19 = v59 + 1;\n
            *((a1 + v59)) = 45;\n
        }\n
        if (v13)\n
        {\n
            v6 = 0;\n
            cgc_log10();\n
            v5 = v13;\n
            for (v4 = v5; v4 < 2; v4 += 1)\n
            {\n
                v62 = v19;\n
                v19 = v62 + 1;\n
                *((a1 + v62)) = 48;\n
                v6 += 1;\n
            }\n
            while (true)\n
            {\n
                tmp_10 = v6;\n
                v6 += 1;\n
                if (tmp_10 >= 3)\n
                    break;\n
                cgc_pow();\n
                v3 = 0;\n
                v64 = v13;\n
                v2 = (v64 >> 31 CONCAT v64) /m v3;\n
                v65 = v19;\n
                v19 = v65 + 1;\n
                *((a1 + v65)) = v2 + 48;\n
                v13 -= (v3 * v2);\n
                v5 -= 1;\n
            }\n
        }\n
        else\n
        {\n
            for (v7 = 0; v7 < 3; v7 += 1)\n
            {\n
                v61 = v19;\n
                v19 = v61 + 1;\n
                *((a1 + v61)) = 48;\n
            }\n
        }\n
    }\n
    v22 = v19;\n
    return v22;\n
}\n
", "4212314:sub_40465a": null, "4212320:cgc_printf_helper_float": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_printf_helper_float(unsigned long long a0, struct struct_1 **a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    struct_0 *v0;  // [bp-0x80], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x78]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x49]\n
    void* v4;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned long v8;  // [bp-0x20], Other Possible Types: unsigned long long\n
    struct struct_1 **v9;  // [bp-0x18]\n
    unsigned long v11;  // xmm0lq\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx\n
    unsigned long long v14;  // rax\n
\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = v11;\n
    v6 = a3;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if ((((CmpF(0, v7) & 69) | ((CmpF(0, v7) & 69) >> 6)) & 1) != 1)\n
    {\n
        v7 ^= 0x8000000000000000;\n
        v3 = 1;\n
        v5 += 1;\n
    }\n
    if (!a4)\n
        v2 = cgc_printf_float_to_string(6, &v1, a5);\n
    else\n
        v2 = cgc_printf_float_to_string(a4, &v1, a5);\n
    v5 = v2 + v5;\n
    if (v6 > 0 && v5 < v6)\n
        v4 = v6 - v5;\n
    if (!(a5 & 1))\n
    {\n
        if (v3 && v4 > 0 && (a5 & 4))\n
        {\n
            v8 = v9(a0, 45, v8);\n
            v3 = 0;\n
        }\n
        while (true)\n
        {\n
            v12 = v4;\n
            v4 = v12 - 1;\n
            if (v12 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
                v8 = v9(a0, 32, v8);\n
            else\n
                v8 = v9(a0, 48, v8);\n
        }\n
    }\n
    if (v3)\n
    {\n
        v8 = v9(a0, 45, v8);\n
        v3 = 0;\n
    }\n
    for (v0 = 0; v0 < v2; v0 += 1)\n
    {\n
        v13 = v0;\n
        v8 = v9(a0, (&v1)[v13], v8, v13);\n
    }\n
    if (!(a5 & 1))\n
        return v8;\n
    while (true)\n
    {\n
        v14 = v4;\n
        v4 = v14 - 1;\n
        if (v14 <= 0)\n
            break;\n
        v8 = v9(a0, 32, v8);\n
    }\n
    return v8;\n
}\n
", "4212967:sub_4048e7": null, "4212976:cgc_printf_helper_string": "long long cgc_printf_helper_string(unsigned long long a0, struct struct_0 **a1, unsigned long a2, char *a3, unsigned long a4, unsigned long a5, unsigned int v6)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    struct struct_0 **v4;  // [bp-0x20]\n
    unsigned long v5;  // [bp-0x10]\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx\n
    unsigned long long v11;  // rax\n
\n
    v4 = a1;\n
    v3 = a2;\n
    if (!a5 && !a4)\n
    {\n
        for (v2 = a3; *(v2); v2 += 1)\n
        {\n
            v7 = v2;\n
            v3 = v4(a0, *(v7), v3, v7);\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v2);\n
    v0 = 0;\n
    if (a5 > 0 && v1 > a5)\n
        v1 = a5;\n
    if (a4 > 0 && v1 < a4)\n
        v0 = a4 - v1;\n
    if (!(v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v8 = v0;\n
            v0 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((v6 & 4))\n
                v3 = v4(a0, 48, v3);\n
            else\n
                v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    while (true)\n
    {\n
        v9 = v1;\n
        v1 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v10 = v2;\n
        v2 = v10 + 1;\n
        v3 = v4(a0, *(v10), v3, v10);\n
    }\n
    if ((v6 & 1))\n
    {\n
        while (true)\n
        {\n
            v11 = v0;\n
            v0 = v11 - 1;\n
            if (v11 <= 0)\n
                break;\n
            v3 = v4(a0, 32, v3);\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4213510:sub_404b06": null, "4213520:cgc_receive_fixed": "long long cgc_receive_fixed(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < a1; v2 += *(&v0))\n
    {\n
        v1 = cgc_receive(a0, a1, v5, v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4213692:sub_404bbc": null, "4213696:cgc_transmit_fixed": "long long cgc_transmit_fixed(unsigned long long a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x10]\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    for (v1 = 0; v2 < a1; v2 += *(&v0))\n
    {\n
        v1 = cgc_transmit(a0, a1, v5, v6);\n
        if (v1)\n
            cgc__terminate(a0);\n
        if (!*(&v0))\n
            cgc__terminate(a0);\n
    }\n
    return 0;\n
}\n
", "4213842:sub_404c52": null, "4213856:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // rcx\n
\n
    v2 = a0;\n
    v1 = 0;\n
    for (v0 = 0; cgc_isspace(*(v2)); v2 += 1);\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v0 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*(v2)); v1 = v1 * 10 + *(v5) - 48)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    if (v0)\n
    {\n
        v3 = -(v1);\n
        return v3;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4214082:sub_404d42": null, "4214096:cgc_atof": "double cgc_atof(long long a0)\n
{\n
    char v0;  // [bp-0x31]\n
    int tmp_12;  // tmp #12\n
    int tmp_14;  // tmp #14\n
    int tmp_13;  // tmp #13\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x18]\n
\n
    v3 = 0;\n
    v2 = a0;\n
    for (v1 = a0; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == 46)\n
        {\n
            *(v1) = 0;\n
            v1 += 1;\n
            break;\n
        }\n
    }\n
    v4 = cgc_atoi(v2);\n
    if (!*(v1))\n
        return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
    v3 = cgc_atoi(v1);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = cgc_isdigit(*(v1));\n
        if (!(v0 & 1))\n
            break;\n
        tmp_12 = DivV(tmp_14, tmp_13);\n
        *(&v3) = tmp_12;\n
        v1 += 1;\n
    }\n
    return Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))));\n
}\n
", "4214370:sub_404e62": null, "4214384:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
    char *v5;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4214472:sub_404ec8": null, "4214480:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!v0[a1])\n
            break;\n
        v0[a0] = v0[a1];\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4214637:sub_404f6d": null, "4214640:cgc_memcpy": "long long cgc_memcpy(char *a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = a2;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(&v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4214803:sub_405013": null, "4214816:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned long v1;  // [bp-0x48]\n
    void* v2;  // [bp-0x40], Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v3;  // [bp-0x34]\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x24], Other Possible Types: unsigned long\n
    char v6[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    *(&v6) = a0;\n
    v5 = a2;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!v6)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    if (v5 >= 16)\n
        v5 = 16;\n
    for (; cgc_isspace(*(v6)); v6 += 1);\n
    if (*(v6) == 45)\n
    {\n
        v3 = 1;\n
        *(&v6) = v6 + 1;\n
    }\n
    else if (*(v6) == 43)\n
    {\n
        *(&v6) = v6 + 1;\n
    }\n
    if (v5 != 16 && !(!v5))\n
        goto LABEL_40513d;\n
    if (*(v6) != 48)\n
    {\n
LABEL_40513d:\n
        if (v5 && !(v5 == 2))\n
            goto LABEL_405196;\n
        if (*(v6) == 48)\n
        {\n
            if (*((v6 + 1)) != 98 && !(*((v6 + 1)) == 66))\n
                goto LABEL_405196;\n
            *(&v6) = v6 + 2;\n
            v5 = 2;\n
        }\n
LABEL_405196:\n
    }\n
    else\n
    {\n
        if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
            goto LABEL_40513d;\n
        *(&v6) = v6 + 2;\n
        v5 = 16;\n
    }\n
    if (!v5)\n
    {\n
        if (*(v6) == 48)\n
            v5 = 8;\n
        else\n
            v5 = 10;\n
    }\n
    v2 = 0;\n
    if (v3)\n
        v2 = -0x80000000;\n
    else\n
        v2 = 2147483647;\n
    v1 = (0 CONCAT v2) /m v5 >> 64;\n
    v2 = (0 CONCAT v2) /m v5;\n
    while (*(v6))\n
    {\n
        v0 = *(v6);\n
        if (cgc_isdigit(v0))\n
        {\n
            v0 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v0))\n
                break;\n
            if (!cgc_isupper(v0))\n
                v0 -= 87;\n
            else\n
                v0 -= 55;\n
        }\n
        if (v0 >= v5)\n
            break;\n
        if (v4 > v2)\n
        {\n
LABEL_4052d2:\n
            break;\n
        }\n
        else if (v4 != v2)\n
        {\n
LABEL_4052d7:\n
            v4 *= v5;\n
            v4 = v0 + v4;\n
            *(&v6) = v6 + 1;\n
        }\n
        else\n
        {\n
            if (v0 <= v1)\n
                goto LABEL_4052d7;\n
            goto LABEL_4052d2;\n
        }\n
    }\n
    if (a1)\n
        *(a1) = v6;\n
    if (v3)\n
    {\n
        v7 = -(v4);\n
        return v7;\n
    }\n
    v7 = v4;\n
    return v7;\n
}\n
", "4215618:sub_405342": null, "4215632:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215698:sub_405392": null, "4215712:cgc_bzero": "long long cgc_bzero(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // rcx\n
\n
    for (v0 = a1; v0; v2[1 + a0] = 0)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4215778:sub_4053e2": null, "4215792:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    unsigned long v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v5;  // rax\n
\n
    v3 = a0;\n
    v2 = a2;\n
    v1 = v3;\n
    for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v2 >= 4; v2 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; v2 > 0; v2 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = a1;\n
    }\n
    return v1;\n
}\n
", "4215963:sub_40549b": null, "4215968:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a0[v1] != a1)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = &a0[v1];\n
            return v2;\n
        }\n
    }\n
}\n
", "4216122:sub_40553a": null, "4216128:cgc_strtok": "extern struct_0 *cgc_StrtokNext;\n
\n
long long cgc_strtok(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!a1)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v4)\n
    {\n
        if (cgc_StrtokNext)\n
        {\n
            v4 = cgc_StrtokNext;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a1, *(v4)))\n
            v0 = *(v4);\n
        if (!(v0 & 1))\n
            break;\n
        v4 += 1;\n
    }\n
    if (!*(v4))\n
    {\n
        cgc_StrtokNext = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v1 = cgc_strlen(v4);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= v1)\n
        {\n
            cgc_StrtokNext = 0;\n
            v5 = v4;\n
            return v5;\n
        }\n
        if (cgc_strchr(a1, *((v4 + v3))))\n
            break;\n
        v3 += 1;\n
    }\n
    *((v4 + v3)) = 0;\n
    for (v2 = v3 + 1; v2 < v1; v2 += 1)\n
    {\n
        if (!cgc_strchr(a1, *((v4 + v2))))\n
        {\n
            cgc_StrtokNext = v4 + v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
        *((v4 + v2)) = 0;\n
    }\n
    if (v2 == v1)\n
        cgc_StrtokNext = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4216622:sub_40572e": null, "4216624:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    if (v2 && !v1)\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!v2 && v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (!v2 && !v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(v1))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        else if (*(v2) >= *(v1))\n
        {\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
    if (*(v2) && !*(v1))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    if (!*(v2) && *(v1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4216993:sub_4058a1": null, "4217008:cgc_strcat": "long long cgc_strcat(char *a0, char *a1)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a1))\n
                break;\n
            a0[v2] = a1[v1];\n
            v2 += 1;\n
            v1 += 1;\n
        }\n
        a0[v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4217182:sub_40595e": null, "4217184:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x32]\n
    char v1;  // [bp-0x31]\n
    char *v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = *((a0 + v2));\n
        v0 = *((a1 + v2));\n
        if (v1 < v0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (v1 <= v0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217345:sub_405a01": null, "4217360:cgc_msls_handle_application": "typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    struct struct_1 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    unsigned short field_1;\n
    unsigned long long field_3;\n
} struct_3;\n
\n
extern char APPLICATION_MSG_BOARD;\n
extern unsigned int cgc_numMessages;\n
extern unsigned long long g_409120;\n
\n
long long cgc_msls_handle_application(unsigned long a0, unsigned long long a1, struct_2 *a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0xd0]\n
    int tmp_28;  // tmp #28\n
    char *v1;  // [bp-0xc8]\n
    struct_3 *v2;  // [bp-0xc0]\n
    struct_0 *v3;  // [bp-0xb8]\n
    char *v4;  // [bp-0xb0]\n
    unsigned long long v5;  // [bp-0xa8]\n
    struct_3 *v6;  // [bp-0xa0]\n
    struct_0 *v7;  // [bp-0x98]\n
    unsigned long long v8;  // [bp-0x90]\n
    struct_3 *v9;  // [bp-0x88]\n
    struct_0 *v10;  // [bp-0x80]\n
    unsigned int v11;  // [bp-0x74]\n
    char *v12;  // [bp-0x70]\n
    unsigned long long v13;  // [bp-0x68]\n
    struct_3 *v14;  // [bp-0x60]\n
    struct_0 *v15;  // [bp-0x58]\n
    unsigned int v16;  // [bp-0x4c]\n
    char *v17;  // [bp-0x48]\n
    unsigned long long v18;  // [bp-0x40]\n
    struct_3 *v19;  // [bp-0x38]\n
    struct_0 *v20;  // [bp-0x30]\n
    struct_1 *v21;  // [bp-0x28]\n
    unsigned long v22;  // [bp-0x10]\n
    unsigned long v24;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v25;  // rax\n
    unsigned long long v26;  // rax\n
    unsigned long v27;  // rcx\n
    unsigned long v28;  // rcx\n
    unsigned long v29;  // rcx\n
\n
    v22 = a0;\n
    cgc_debug_print(\"Handling Application Message ($d)\\n
\", a2->field_10, a2, a3, a4);\n
    v24 = a2->field_10;\n
    if (v24 < 3)\n
        return a2->field_10;\n
    v21 = a2->field_18;\n
    v25 = v21;\n
    cgc_debug_print(\"Type: $d Len: $d\\n
\", v25->field_0, *(&(&v25->field_0)[1]), a3, a4);\n
    v26 = v21->field_0 - 160;\n
    v0 = v26;\n
    tmp_28 = v26;\n
    v24 = v26 - 4;\n
    switch (tmp_28)\n
    {\n
    case 0:\n
        cgc_debug_print(\"APP: List Board\\n
\", a1, a2, &g_409120, a4);\n
        v20 = cgc_calloc(32);\n
        v19 = cgc_calloc(11);\n
        v18 = cgc_calloc(128);\n
        v20->field_4 = 4;\n
        v20->field_2 = 65281;\n
        v20->field_c = a2->field_c;\n
        v20->field_18 = v19;\n
        v20->field_0 = 146;\n
        v20->field_10 = 131;\n
        v19->field_0 = 170;\n
        *(&(&v19->field_0)[1]) = 128;\n
        *((&v19->field_1 + 1)) = v18;\n
        cgc_sprintf(v18, \"$d of $d slots filled\\n
\", cgc_numMessages, 64, a4);\n
        cgc_msls_encrypt(*((&v19->field_1 + 1)), *(&(&v19->field_0)[1]), a1);\n
        cgc_msls_send_msg(v20);\n
        v24 = cgc_msls_destroy_msg(v20);\n
        return v24;\n
    case 1:\n
        v24 = *(&(&v21->field_0)[1]);\n
        if (v24 >= 128)\n
        {\n
            cgc_msls_decrypt(&v21->field_1 + 1, *(&(&v21->field_0)[1]), a1);\n
            v17 = &v21->field_1 + 1;\n
            v16 = cgc_post_new_message(v17);\n
            cgc_debug_print(\"Posting to slot $d\\n
\", cgc_numMessages - 1, a2, &g_409120, a4);\n
            v15 = cgc_calloc(32);\n
            v14 = cgc_calloc(11);\n
            v13 = cgc_calloc(128);\n
            v15->field_4 = 4;\n
            v15->field_2 = 65281;\n
            v15->field_c = a2->field_c;\n
            v15->field_18 = v14;\n
            v15->field_0 = 146;\n
            v15->field_10 = 131;\n
            v14->field_0 = 170;\n
            *(&(&v14->field_0)[1]) = 128;\n
            v28 = v13;\n
            *((&v14->field_1 + 1)) = v28;\n
            cgc_sprintf(v13, \"POST returned: $d\\n
\", v16, v28, a4);\n
            cgc_msls_encrypt(*((&v14->field_1 + 1)), *(&(&v14->field_0)[1]), a1);\n
            cgc_msls_send_msg(v15);\n
            v24 = cgc_msls_destroy_msg(v15);\n
            return v24;\n
        }\n
        return *(&(&v21->field_0)[1]);\n
    case 2:\n
        v24 = *(&(&v21->field_0)[1]);\n
        if (v24 >= 1)\n
        {\n
            cgc_msls_decrypt(&v21->field_1 + 1, *(&(&v21->field_0)[1]), a1);\n
            v12 = &v21->field_1 + 1;\n
            v11 = cgc_delete_message(*(v12));\n
            cgc_debug_print(\"Deleting message $d\\n
\", *(v12), a2, &g_409120, a4);\n
            v10 = cgc_calloc(32);\n
            v9 = cgc_calloc(11);\n
            v8 = cgc_calloc(128);\n
            v10->field_4 = 4;\n
            v10->field_2 = 65281;\n
            v10->field_c = a2->field_c;\n
            v10->field_18 = v9;\n
            v10->field_0 = 146;\n
            v10->field_10 = 131;\n
            v9->field_0 = 170;\n
            *(&(&v9->field_0)[1]) = 128;\n
            v29 = v8;\n
            *((&v9->field_1 + 1)) = v29;\n
            cgc_sprintf(v8, \"DELETE returned: $d\\n
\", v11, v29, a4);\n
            cgc_msls_encrypt(*((&v9->field_1 + 1)), *(&(&v9->field_0)[1]), a1);\n
            cgc_msls_send_msg(v10);\n
            v24 = cgc_msls_destroy_msg(v10);\n
            return v24;\n
        }\n
        return *(&(&v21->field_0)[1]);\n
    case 3:\n
        cgc_clear_message_board();\n
        v7 = cgc_calloc(32);\n
        v6 = cgc_calloc(11);\n
        v5 = cgc_calloc(128);\n
        v7->field_4 = 4;\n
        v7->field_2 = 65281;\n
        v7->field_c = a2->field_c;\n
        v7->field_18 = v6;\n
        v7->field_0 = 146;\n
        v7->field_10 = 131;\n
        v6->field_0 = 170;\n
        *(&(&v6->field_0)[1]) = 128;\n
        *((&v6->field_1 + 1)) = v5;\n
        cgc_sprintf(v5, \"Cleared Board\\n
\", cgc_numMessages, 64, a4);\n
        cgc_msls_encrypt(*((&v6->field_1 + 1)), *(&(&v6->field_0)[1]), a1);\n
        cgc_msls_send_msg(v7);\n
        v24 = cgc_msls_destroy_msg(v7);\n
        return v24;\n
    case 4:\n
        v24 = *(&(&v21->field_0)[1]);\n
        if (v24 < 1)\n
            return *(&(&v21->field_0)[1]);\n
        cgc_msls_decrypt(&v21->field_1 + 1, *(&(&v21->field_0)[1]), a1);\n
        v4 = &v21->field_1 + 1;\n
        cgc_debug_print(\"Reading slot $d\\n
\", *(v4), a2, &g_409120, a4);\n
        v3 = cgc_calloc(32);\n
        v2 = cgc_calloc(11);\n
        v1 = cgc_calloc(128);\n
        v3->field_4 = 4;\n
        v3->field_2 = 65281;\n
        v3->field_c = a2->field_c;\n
        v3->field_18 = v2;\n
        v3->field_0 = 146;\n
        v3->field_10 = 131;\n
        v2->field_0 = 170;\n
        *(&(&v2->field_0)[1]) = 128;\n
        v27 = v1;\n
        *((&v2->field_1 + 1)) = v27;\n
        if (*(v4) < 64)\n
        {\n
            cgc_memcpy(v1, &(&APPLICATION_MSG_BOARD)[128 * *(v4)], 128);\n
        }\n
        else\n
        {\n
            cgc_sprintf(v1, \"INVALID MESSAGE\", a2, v27, a4);\n
            break;\n
        }\n
        cgc_msls_encrypt(*((&v2->field_1 + 1)), *(&(&v2->field_0)[1]), a1);\n
        cgc_msls_send_msg(v3);\n
        v24 = cgc_msls_destroy_msg(v3);\n
        return v24;\n
    default:\n
        return v24;\n
    }\n
}\n
", "4219046:sub_4060a6": null, "4219056:cgc_post_new_message": "extern char APPLICATION_MSG_BOARD;\n
extern unsigned int cgc_numMessages;\n
\n
long long cgc_post_new_message(char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_numMessages >= 64)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    cgc_memcpy(&(&APPLICATION_MSG_BOARD)[128 * cgc_numMessages], a0, 128);\n
    cgc_numMessages = cgc_numMessages + 1;\n
    v0 = 1;\n
    return v0;\n
}\n
", "4219159:sub_406117": null, "4219168:cgc_delete_message": "extern char APPLICATION_MSG_BOARD;\n
extern unsigned int cgc_numMessages;\n
\n
long long cgc_delete_message(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (a0 >= 64)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    cgc_memset(&(&APPLICATION_MSG_BOARD)[128 * a0], 0, 128);\n
    for (v0 = a0; v0 < 63; v0 += 1)\n
    {\n
        cgc_memcpy(&(&APPLICATION_MSG_BOARD)[128 * v0], &(&APPLICATION_MSG_BOARD)[128 + 128 * v0], 128);\n
    }\n
    cgc_numMessages = cgc_numMessages - 1;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4219349:sub_4061d5": null, "4219360:cgc_clear_message_board": "extern char APPLICATION_MSG_BOARD;\n
extern unsigned int cgc_numMessages;\n
\n
long long cgc_clear_message_board()\n
{\n
    cgc_numMessages = 0;\n
    return cgc_memset(&APPLICATION_MSG_BOARD, 0, 0x2000);\n
}\n
", "4219395:sub_406203": null, "4219408:cgc_get_cgc_random": "extern struct_0 *pRandom;\n
\n
long long cgc_get_cgc_random()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = pRandom->field_0 ^ pRandom->field_4;\n
    pRandom = pRandom + 1;\n
    if (pRandom + 1 >= 0x4347d000)\n
        pRandom = 0x4347c800;\n
    return v0;\n
}\n
", "4219494:sub_406266": null, "4219504:cgc_msls_get_sls_functions": "long long cgc_msls_get_sls_functions()\n
{\n
    unsigned long long v0[15];  // [bp-0x10]\n
\n
    v0[0] = cgc_calloc(120);\n
    v0[0] = cgc_msls_receive_msg;\n
    v0[1] = cgc_msls_send_msg;\n
    v0[2] = cgc_msls_cleanup;\n
    v0[3] = cgc_msls_version_check;\n
    v0[4] = cgc_msls_send_error_msg;\n
    v0[5] = cgc_msls_generate_checksum;\n
    v0[6] = cgc_msls_handle_heartbeat;\n
    v0[7] = cgc_msls_destroy_msg;\n
    v0[8] = cgc_msls_handle_handshake;\n
    v0[9] = cgc_msls_get_connection;\n
    v0[10] = cgc_msls_set_cookie;\n
    v0[11] = cgc_msls_lookup_context;\n
    v0[12] = cgc_msls_handle_application;\n
    v0[13] = cgc_msls_handle_changespec;\n
    v0[14] = cgc_msls_handle_error;\n
    return v0;\n
}\n
", "4219760:cgc_msls_receive_msg": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    struct struct_1 *field_18;\n
    struct struct_1 *field_20;\n
    struct struct_1 *field_28;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
long long cgc_msls_receive_msg(struct_2 *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    cgc_debug_print(\"Receive MSG\\n
\", a1, a2, a3, a4);\n
    v0 = cgc_calloc(32);\n
    cgc_receive_fixed(v0, 2);\n
    cgc_debug_print(\"msg length: $d\\n
\", v0->field_0, a2, a3, a4);\n
    if (v0->field_0 >= 15 && v0->field_0 <= 0x800)\n
    {\n
        cgc_receive_fixed(&v0->field_2, 2);\n
        cgc_receive_fixed(&v0->padding_4, 1);\n
        cgc_receive_fixed(&v0->field_8, 4);\n
        cgc_receive_fixed(&v0->padding_c, 4);\n
        cgc_receive_fixed(&v0->field_10, 2);\n
        if (v0->field_10 != v0->field_0 - 15)\n
        {\n
            cgc_debug_print(\"Length: $d expected: $d received: $d\\n
\", v0->field_0, v0->field_0 - 15, v0->field_10, a4);\n
            a0->field_8->field_20(224, 161);\n
        }\n
        else\n
        {\n
            if (v0->field_10 > 0)\n
            {\n
                v0->field_18 = cgc_calloc(v0->field_10);\n
                cgc_receive_fixed(v0->field_18, v0->field_10);\n
            }\n
            if (!a0->field_8->field_18(v0->field_2))\n
            {\n
                a0->field_8->field_20(225, 161);\n
            }\n
            else if (a0->field_8->field_28(v0) != v0->field_8)\n
            {\n
                a0->field_8->field_20(226, 161);\n
            }\n
            else\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
LABEL_40656b:\n
        cgc_msls_destroy_msg(v0);\n
        v1 = 0;\n
        return v1;\n
    }\n
    a0->field_8->field_20(224, 161);\n
    goto LABEL_40656b;\n
}\n
", "4220294:sub_406586": null, "4220304:cgc_msls_send_msg": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
    unsigned long long field_3;\n
    char padding_b[1];\n
    unsigned long long field_c;\n
} struct_0;\n
\n
long long cgc_msls_send_msg(struct_1 *a0, unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x30]\n
    struct_0 *v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rax\n
\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v6 = cgc_msls_generate_checksum_outgoing(a0);\n
    a0->field_8 = v6;\n
    cgc_debug_print(\"Send MSG\\n
\", a1, a2, v6, a4);\n
    cgc_transmit_fixed(a0, 2);\n
    cgc_transmit_fixed(&a0->padding_0[2], 2);\n
    cgc_transmit_fixed(&a0->field_4, 1);\n
    cgc_transmit_fixed(&a0->field_8, 4);\n
    cgc_transmit_fixed(&a0->padding_c, 4);\n
    cgc_transmit_fixed(&a0->field_10, 2);\n
    if (a0->field_10 > 0)\n
    {\n
        v0 = a0->field_4 - 1;\n
        switch (v0)\n
        {\n
        case 0:\n
            break;\n
        case 1:\n
            cgc_transmit_fixed(a0->field_18, a0->field_10);\n
            break;\n
        case 2:\n
            v3 = a0->field_18;\n
            if (v3)\n
            {\n
                cgc_transmit_fixed(v3, 12);\n
                if (*((&v3->field_3 + 2)) > 0 && *((&v3->field_3 + 4)))\n
                    cgc_transmit_fixed(*((&v3->field_3 + 4)), *((&v3->field_3 + 2)));\n
                break;\n
            }\n
        case 3:\n
            v2 = a0->field_18;\n
            cgc_transmit_fixed(v2, 1);\n
            cgc_transmit_fixed(&(&v2->padding_0)[1], 2);\n
            if (*(&(&v2->padding_0)[1]) > 0 && *((&v2->field_1 + 1)))\n
                cgc_transmit_fixed(*((&v2->field_1 + 1)), *(&(&v2->padding_0)[1]));\n
            break;\n
        case 4:\n
            v1 = a0->field_18;\n
            if (v1)\n
            {\n
                cgc_transmit_fixed(v1, 1);\n
                cgc_transmit_fixed(&(&v1->padding_0)[1], 2);\n
                if (*(&(&v1->padding_0)[1]) > 0 && *((&v1->field_1 + 1)))\n
                    cgc_transmit_fixed(*((&v1->field_1 + 1)), *(&(&v1->padding_0)[1]));\n
                break;\n
            }\n
        case 5:\n
            break;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4220920:sub_4067f8": null, "4220928:cgc_msls_cleanup": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
} struct_0;\n
\n
long long cgc_msls_cleanup(unsigned int a0[69], unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
\n
    cgc_debug_print(\"Exiting\\n
\", a1, a2, a3, a4);\n
    v1 = cgc_calloc(32);\n
    v1->field_4 = 6;\n
    v1->field_2 = 65281;\n
    v1->field_0 = 15;\n
    cgc_msls_send_msg(v1, a1, a2, a3, a4);\n
    cgc_free(v1);\n
    for (v0 = 0; v0 < 32; v0 += 1)\n
    {\n
        cgc_destroy_context(*(&a0[4 + 2 * v0]));\n
    }\n
    cgc_free(*(&a0[68]));\n
    return cgc_free(*(&a0[2]));\n
}\n
", "4221097:sub_4068a9": null, "4221104:cgc_msls_version_check": "long long cgc_msls_version_check(unsigned long a0)\n
{\n
    return a0 == 65281;\n
}\n
", "4221134:sub_4068ce": null, "4221136:cgc_msls_send_error_msg": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    char field_4;\n
    char padding_5[11];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char field_2;\n
} struct_1;\n
\n
long long cgc_msls_send_error_msg(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned short v2;  // [bp-0xa]\n
    struct_1 *v4;  // rcx\n
\n
    v2 = a0;\n
    cgc_debug_print(\"Error: $x\\n
\", v2, a2, a0, a4);\n
    v1 = cgc_calloc(32);\n
    v1->field_4 = 2;\n
    v0 = cgc_calloc(3);\n
    v0->field_0 = v2;\n
    v0->field_2 = a1;\n
    v4 = v0;\n
    v1->field_18 = v4;\n
    v1->field_10 = 3;\n
    *(&v4) = v1->field_10 + 15;\n
    v1->field_0 = v4;\n
    cgc_msls_send_msg(v1, a1, a2, v4, a4);\n
    return cgc_msls_destroy_msg(v1);\n
}\n
", "4221299:sub_406973": null, "4221312:cgc_msls_generate_checksum": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
long long cgc_msls_generate_checksum(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < a0->field_10; v0 += 1)\n
    {\n
        v1 = (v1 * 0x100 | (v1 >> 24)) ^ *((a0->field_18 + v0));\n
    }\n
    return v1;\n
}\n
", "4221407:sub_4069df": null, "4221408:cgc_msls_destroy_msg": "typedef struct struct_3 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[19];\n
    struct struct_2 *field_18;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
    unsigned long long field_3;\n
    char padding_b[1];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
    unsigned int field_3;\n
    char padding_7[5];\n
    unsigned long long field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
    unsigned long long field_3;\n
    char padding_b[1];\n
    unsigned long long field_c;\n
} struct_2;\n
\n
long long cgc_msls_destroy_msg(struct_3 *a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x20]\n
    struct_1 *v3;  // [bp-0x18]\n
    unsigned long long v5;  // rax\n
\n
    if (!a0)\n
        return v5;\n
    v0 = a0->field_4 - 1;\n
    switch (v0)\n
    {\n
    case 0:\n
        break;\n
    case 1:\n
        cgc_free(a0->field_18);\n
        break;\n
    case 2:\n
        v3 = &a0->field_18->padding_0;\n
        if (v3)\n
        {\n
            cgc_free(*((&v3->field_3 + 4)));\n
            cgc_free(v3);\n
        }\n
        break;\n
    case 3:\n
        v2 = &a0->field_18->padding_0;\n
        if (*(&(&v2->padding_0)[1]) > 0 && *((&v2->field_1 + 1)))\n
            cgc_free(*((&v2->field_1 + 1)));\n
        break;\n
    case 4:\n
        v1 = &a0->field_18->padding_0;\n
        if (v1)\n
        {\n
            cgc_free(*((&v1->field_1 + 1)));\n
            cgc_free(v1);\n
        }\n
    case 5:\n
        break;\n
    }\n
    v5 = cgc_free(a0);\n
    return v5;\n
}\n
", "4221687:sub_406af7": null, "4221696:cgc_msls_generate_checksum_outgoing": "typedef struct struct_3 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    unsigned short field_1;\n
    struct struct_1 *field_3;\n
    char padding_b[1];\n
    unsigned long long field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_msls_generate_checksum_outgoing()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_42;  // tmp #42\n
    struct_3 *v14;  // rdi\n
    unsigned long long v15;  // rax\n
    unsigned long long v16;  // rax\n
\n
    v0 = 0;\n
    v15 = v14->field_4 - 1;\n
    tmp_42 = v15;\n
    v16 = v15 - 5;\n
    if (tmp_42 > 5)\n
        return;\n
    goto *((4231748 + rax<8> * 4)) + 4231748;\n
}\n
", "4222369:sub_406da1": null, "4222384:cgc_msls_encrypt": "long long cgc_msls_encrypt(char *a0, unsigned long a1, unsigned long long a2[7])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        a0[v0] = a0[v0] ^ *((a2[3] + v1 * 4)) & 255 ^ *((a2[6] + v1 * 4)) & 255;\n
        v1 += 1;\n
        if (v1 >= 128)\n
            v1 = 0;\n
    }\n
    return v0;\n
}\n
", "4222544:cgc_msls_decrypt": "long long cgc_msls_decrypt(char *a0, unsigned long a1, unsigned long long a2[6])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        a0[v0] = a0[v0] ^ *((a2[4] + v1 * 4)) & 255 ^ *((a2[5] + v1 * 4)) & 255;\n
        v1 += 1;\n
        if (v1 >= 128)\n
            v1 = 0;\n
    }\n
    return v0;\n
}\n
", "4222704:cgc_msls_handle_heartbeat": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    unsigned short field_1;\n
    char *field_3;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    struct struct_3 *field_18;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    unsigned short field_1;\n
    unsigned long long field_3;\n
} struct_2;\n
\n
long long cgc_msls_handle_heartbeat(struct_4 *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    char *v0;  // [bp-0x30]\n
    struct_3 *v1;  // [bp-0x28]\n
    struct_1 *v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned long long v5;  // rax\n
    struct_2 *v6;  // rcx\n
\n
    cgc_debug_print(\"Handling Heartbeat\\n
\", a1, a2, a3, a4);\n
    v3 = cgc_calloc(32);\n
    v2 = cgc_calloc(11);\n
    v3->field_4 = 5;\n
    v3->field_2 = 65281;\n
    v3->field_c = a0->field_c;\n
    v2->field_0 = 66;\n
    v1 = a0->field_18;\n
    v0 = &a0->field_18->field_1 + 1;\n
    *(&(&v2->field_0)[1]) = *(&(&v1->padding_0)[1]);\n
    if (*(&(&v2->field_0)[1]) > a0->field_10 - 3)\n
        *(&(&v2->field_0)[1]) = a0->field_10 - 3;\n
    if (*(&(&v2->field_0)[1]) > 64)\n
        *(&(&v2->field_0)[1]) = 64;\n
    if (*(&(&v2->field_0)[1]) > 0)\n
    {\n
        v5 = cgc_calloc(*(&(&v2->field_0)[1]));\n
        *((&v2->field_1 + 1)) = v5;\n
        cgc_debug_print(\"Reading heartbeats from $x to $x\\n
\", v0, &v0[*(&(&v2->field_0)[1])], v5, a4);\n
        cgc_memcpy(*((&v2->field_1 + 1)), v0, *(&(&v2->field_0)[1]));\n
    }\n
    v3->field_10 = *(&(&v2->field_0)[1]) + 3;\n
    v6 = v2;\n
    v3->field_18 = v6;\n
    *(&v6) = v3->field_10 + 15;\n
    v3->field_0 = v6;\n
    cgc_debug_print(\"Sending HB response. Length: $d\\n
\", *(&(&v2->field_0)[1]), a2, v6, a4);\n
    cgc_msls_send_msg(v3, a1, a2, v6, a4);\n
    return cgc_msls_destroy_msg(v3);\n
}\n
", "4223123:sub_407093": null, "4223136:cgc_msls_handle_changespec": "typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_2 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
} struct_2;\n
\n
long long cgc_msls_handle_changespec(unsigned long a0, struct_0 *a1, struct_1 *a2)\n
{\n
    unsigned short *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x10]\n
    unsigned short *v3;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    v3 = a2->field_18;\n
    v0 = v3;\n
    if (v0 && a1)\n
    {\n
        a1->field_10 = *(v0);\n
        v3 = cgc_msls_send_server_hello(a1);\n
    }\n
    return v3;\n
}\n
", "4223230:sub_4070fe": null, "4223232:cgc_msls_handle_error": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[5];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[8];\n
    struct struct_2 *field_18;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[88];\n
    struct struct_0 *field_58;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_msls_handle_error(struct_2 *a0, struct_4 *a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    int tmp_10;  // tmp #10\n
    struct_2 *v1;  // [bp-0x28]\n
    struct_3 *v2;  // [bp-0x20]\n
    struct_2 *v3;  // [bp-0x10]\n
    struct_2 *v5;  // rax, Other Possible Types: unsigned long, unsigned long long, struct_3 *\n
    unsigned long long v6;  // rax\n
\n
    v3 = a0;\n
    v2 = a0->field_8->field_58(v3, a1->field_c);\n
    v5 = a1->field_18;\n
    v1 = v5;\n
    if (!v1)\n
        return a1->field_18;\n
    v0 = v1->field_2;\n
    if (v0 == 160)\n
    {\n
        v5 = cgc_debug_print(\"Received Client Warning $x\\n
\", v1->field_0, a2, a1, a4);\n
        return v5;\n
    }\n
    v6 = v0;\n
    tmp_10 = v6;\n
    v5 = v6 - 161;\n
    if (tmp_10 == 161)\n
    {\n
        if (!v2)\n
            return v5;\n
        cgc_debug_print(\"Received Critical Error $x. Shutting down connection.\\n
\", v1->field_0, a2, a1, a4);\n
        v5 = v2;\n
        v5->field_c = 0;\n
    }\n
    else if (v0 == 162)\n
    {\n
        cgc_debug_print(\"Received Fatal Error $x. Shutting down server\\n
\", v1->field_0, a2, a1, a4);\n
        *(&a0->field_0 + 1) = 1;\n
        return a0;\n
    }\n
    else\n
    {\n
        v5 = cgc_debug_print(\"Unknown Error Code $x $x\\n
\", v1->field_0, v1->field_2, a1, a4);\n
        return v5;\n
    }\n
}\n
", "4223510:sub_407216": null, "4223520:cgc_msls_handle_handshake": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    char field_c;\n
    char field_d;\n
    char field_e;\n
    char padding_f[1];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    struct struct_1 *field_38;\n
    unsigned long long field_40;\n
    char padding_48[200];\n
    unsigned long long field_110;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    struct struct_3 *field_18;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned short field_a;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    char field_c;\n
    char field_d;\n
    char field_e;\n
    char padding_f[1];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    char *field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    struct struct_1 *field_38;\n
    unsigned long long field_40;\n
    char padding_48[200];\n
    unsigned long long field_110;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    char field_c;\n
    char field_d;\n
    char field_e;\n
    char padding_f[1];\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    struct struct_1 *field_38;\n
    unsigned int field_40;\n
    char padding_44[204];\n
    unsigned long long field_110;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern unsigned long long g_4093b0;\n
\n
long long cgc_msls_handle_handshake(struct_0 *a0, struct_5 *a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int *v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x44]\n
    unsigned int *v4;  // [bp-0x40]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x34]\n
    unsigned int *v7;  // [bp-0x30]\n
    struct_2 *v8;  // [bp-0x28], Other Possible Types: struct_4 *\n
    struct_3 *v9;  // [bp-0x20]\n
    struct_0 *v11;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v12;  // rax\n
    unsigned long v13;  // rcx, Other Possible Types: unsigned long long\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // rdx\n
    unsigned long long v16;  // rcx\n
    unsigned int v17;  // eax\n
    struct_0 *v18;  // rdx\n
    unsigned long long v19;  // rcx\n
    unsigned int v20;  // eax\n
    struct_0 *v21;  // rdx\n
    unsigned long long v22;  // rcx\n
    unsigned int *v23;  // rdx\n
    unsigned long long v24;  // rcx\n
\n
    if (!(a0 && a1))\n
        return v11;\n
    if (a1->field_10 < 12)\n
    {\n
        v11 = cgc_msls_send_error_msg(224, 161, a2, a3, a4);\n
        return v11;\n
    }\n
    v9 = a1->field_18;\n
    if (*((&v9->field_2 + 2)) != a1->field_c)\n
    {\n
        cgc_debug_print(\"client_id $x != connection id $x\\n
\", *((&v9->field_2 + 2)), a1->field_c, a1, a4);\n
        v11 = cgc_msls_send_error_msg(227, 161, a2, a1, a4);\n
        return v11;\n
    }\n
    v8 = cgc_msls_lookup_context(a0, a1->field_c);\n
    v12 = v9->field_0 - 81;\n
    v13 = v12;\n
    v0 = v12;\n
    switch (v12)\n
    {\n
    case 0:\n
        cgc_debug_print(\"Received Client Hello\\n
\", a1, a2, &g_4093b0, a4);\n
        if (*((&v9->field_6 + 2)) != 546)\n
        {\n
            v11 = cgc_msls_send_error_msg(224, 161, a2, &g_4093b0, a4);\n
            return v11;\n
        }\n
        v7 = &v9->field_a;\n
        for (v6 = 0; v6 < 128; v6 += 1)\n
        {\n
            v13 = *((a0->field_110 + v6 * 4)) ^ a1->field_c;\n
            if (*((&v7[2 + v6] + 2)) != v13)\n
            {\n
                cgc_debug_print(\"Cookie failed\\n
\", a1, a1, v13, a4);\n
                v11 = cgc_msls_send_hello_verify(a0, a1->field_c);\n
                return v11;\n
            }\n
        }\n
        cgc_debug_print(\"Done checking cookie\\n
\", a1, a1, v13, a4);\n
        v8 = cgc_msls_get_connection(a0, a1->field_c);\n
        if (!v8)\n
        {\n
            cgc_msls_send_error_msg(227, 162, a1, v13, a4);\n
            a0->field_1 = 1;\n
            return a0;\n
        }\n
        v8->field_c = 0;\n
        v8->field_4 = 1;\n
        v8->field_e = 0;\n
        v8->field_d = 0;\n
        v8->field_8 = 0;\n
        v5 = (0 CONCAT cgc_get_cgc_random()) /m 11 >> 32;\n
        v8->field_10 = *((522 + v7 + 2 * v5));\n
        cgc_msls_send_server_hello(v8);\n
        cgc_msls_send_keyx(v8);\n
        cgc_msls_send_hello_done(v8);\n
        v11 = v8;\n
        if (!v11->field_40)\n
            return v11;\n
        cgc_free(*(&v8->field_40));\n
        v11 = v8;\n
        v11->field_40 = 0;\n
        break;\n
    case 5:\n
        cgc_debug_print(\"Received Client Keyx\\n
\", a1, a2, &g_4093b0, a4);\n
        if (!v8)\n
        {\n
            v11 = cgc_msls_send_error_msg(227, 161, a2, &g_4093b0, a4);\n
            return v11;\n
        }\n
        else if (!v8->field_4)\n
        {\n
            v11 = cgc_msls_send_error_msg(229, 160, a2, &g_4093b0, a4);\n
            return v11;\n
        }\n
        else if (*((&v9->field_6 + 2)) != 0x400)\n
        {\n
            v11 = cgc_msls_send_error_msg(224, 161, a2, &g_4093b0, a4);\n
            return v11;\n
        }\n
        else\n
        {\n
            v14 = *(&(&v9->field_0)[1]);\n
            v15 = v8;\n
            v16 = v15->field_8 + 1;\n
            v15->field_8 = v16;\n
            if (v14 != v16)\n
            {\n
                v11 = cgc_msls_send_error_msg(230, 160, v15, v16, a4);\n
                return v11;\n
            }\n
            v4 = &v9->field_a;\n
            v8->field_18 = cgc_calloc(0x200);\n
            cgc_memcpy(v8->field_18, v4, 0x200);\n
            v8->field_e = 1;\n
            v11 = v8;\n
            *((v11 + 40)) = cgc_calloc(0x200);\n
            for (v3 = 0; v3 < 128; v3 = v11)\n
            {\n
                *((v8->field_28 + v3 * 4)) = *((v8->field_20 + v3 * 4)) ^ v4[128 + v3];\n
                v11 = v3 + 1;\n
            }\n
            return v11;\n
        }\n
    case 7:\n
        cgc_debug_print(\"Received Client Done\\n
\", a1, a2, &g_4093b0, a4);\n
        if (!v8)\n
        {\n
            v11 = cgc_msls_send_error_msg(227, 161, a2, &g_4093b0, a4);\n
            return v11;\n
        }\n
        if (v8->field_4 && v8->field_e)\n
        {\n
            if (*((&v9->field_6 + 2)))\n
            {\n
                cgc_debug_print(\"expected length: $d got length: $d\\n
\", 0x200, *((&v9->field_6 + 2)), &g_4093b0, a4);\n
                v11 = cgc_msls_send_error_msg(224, 161, a2, &g_4093b0, a4);\n
                return v11;\n
            }\n
            v17 = *(&(&v9->field_0)[1]);\n
            v18 = v8;\n
            v19 = v18->field_8 + 1;\n
            v18->field_8 = v19;\n
            if (v17 != v19)\n
            {\n
                v11 = cgc_msls_send_error_msg(230, 160, v18, v19, a4);\n
                return v11;\n
            }\n
            cgc_msls_send_finish(v8);\n
            v11 = v8;\n
            *((v11 + 13)) = 1;\n
            return v8;\n
        }\n
        v11 = cgc_msls_send_error_msg(229, 160, a2, &g_4093b0, a4);\n
        return v11;\n
    case 8:\n
        cgc_debug_print(\"received client finished\\n
\", a1, a2, &g_4093b0, a4);\n
        if (!v8)\n
        {\n
            v11 = cgc_msls_send_error_msg(227, 161, a2, &g_4093b0, a4);\n
            return v11;\n
        }\n
        if (v8->field_4 && v8->field_e && v8->field_d)\n
        {\n
            if (*((&v9->field_6 + 2)) != 0x200)\n
            {\n
                cgc_debug_print(\"expected length: $d got length: $d\\n
\", 0x200, *((&v9->field_6 + 2)), &g_4093b0, a4);\n
                v11 = cgc_msls_send_error_msg(224, 161, a2, &g_4093b0, a4);\n
                return v11;\n
            }\n
            v20 = *(&(&v9->field_0)[1]);\n
            v21 = v8;\n
            v22 = v21->field_8 + 1;\n
            v21->field_8 = v22;\n
            if (v20 != v22)\n
            {\n
                v11 = cgc_msls_send_error_msg(230, 160, v21, v22, a4);\n
                return v11;\n
            }\n
            v2 = &v9->field_a;\n
            v1 = 0;\n
            while (true)\n
            {\n
                if (v1 < 128)\n
                {\n
                    v23 = v8->field_38;\n
                    v24 = *((v8->field_30 + v1 * 4)) ^ *((v8->field_20 + v1 * 4)) ^ v23[v1];\n
                    if (v2[v1] != v24)\n
                    {\n
                        v11 = cgc_msls_send_error_msg(231, 161, v23, v24, a4);\n
                        return v11;\n
                    }\n
                    v1 += 1;\n
                }\n
                else\n
                {\n
                    v8->field_c = 1;\n
                    v11 = v8;\n
                    *((v11 + 4)) = 0;\n
                    return v8;\n
                }\n
            }\n
        }\n
        v11 = cgc_msls_send_error_msg(229, 160, a2, &g_4093b0, a4);\n
        return v11;\n
    default:\n
        cgc_msls_send_error_msg(228, 162, a2, v13, a4);\n
        a0->field_1 = 1;\n
        return a0;\n
    }\n
}\n
", "4225130:sub_40786a": null, "4225136:cgc_msls_lookup_context": "long long cgc_msls_lookup_context(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int *v1;  // [bp-0x28]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < 32)\n
        {\n
            v1 = *((a0 + v0 * 8 + 16));\n
            if (v1 && *(v1) == a1)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4225285:sub_407905": null, "4225296:cgc_msls_send_hello_verify": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned short field_a;\n
    unsigned long long field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[272];\n
    unsigned long long field_110;\n
} struct_2;\n
\n
long long cgc_msls_send_hello_verify(struct_2 *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned short *v1;  // [bp-0x30]\n
    struct_1 *v2;  // [bp-0x28]\n
    struct_0 *v3;  // [bp-0x20]\n
    struct_1 *v5;  // rcx\n
\n
    v3 = cgc_calloc(32);\n
    v2 = cgc_calloc(20);\n
    v1 = cgc_calloc(514);\n
    *(v1) = 65281;\n
    for (v0 = 0; v0 < 128; v0 += 1)\n
    {\n
        a2 = *((a0->field_110 + v0 * 4)) ^ a1;\n
        *(&v1[1 + 2 * v0]) = a2;\n
    }\n
    v2->field_0 = 82;\n
    *(&(&v2->field_0)[1]) = 0;\n
    *((&v2->field_2 + 2)) = a1;\n
    *((&v2->field_6 + 2)) = 514;\n
    *(&v2->field_a) = v1;\n
    v3->field_0 = 541;\n
    v3->field_2 = 65281;\n
    v3->field_4 = 3;\n
    v3->field_c = a1;\n
    v3->field_10 = 526;\n
    v5 = v2;\n
    v3->field_18 = v5;\n
    cgc_msls_send_msg(v3, a1, a2, v5, a4);\n
    return cgc_msls_destroy_msg(v3);\n
}\n
", "4225564:sub_407a1c": null, "4225568:cgc_msls_get_connection": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[52];\n
    unsigned long long field_38;\n
    unsigned long long field_40;\n
} struct_0;\n
\n
long long cgc_msls_get_connection(unsigned int a0, unsigned long a1, unsigned long long a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int *v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x2c]\n
    struct_0 *v4;  // [bp-0x28]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = cgc_msls_lookup_context(a0, a1);\n
    if (v4)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= 32)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (*((a0 + (v3 << 3) + 16)))\n
        {\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v4 = cgc_calloc(72);\n
            cgc_debug_print(\"Created connection at $x\\n
\", v4, a2, a3, a4);\n
            v4->field_0 = a1;\n
            *((a0 + v3 * 8 + 16)) = v4;\n
            v2 = cgc_calloc(0x200);\n
            v1 = cgc_calloc(0x200);\n
            cgc_memcpy(v2, 0x4347c000, 0x200);\n
            cgc_memcpy(v1, 0x4347c200, 0x200);\n
            for (v0 = 0; v0 < 128; v0 += 1)\n
            {\n
                a2 = *((v2 + v0 * 4)) ^ v1[v0] ^ a1;\n
                a3 = v0;\n
                *((v2 + a3 * 4)) = a2;\n
            }\n
            cgc_debug_print(\"leaving some magic at: $x\\n
\", v1, a2, a3, a4);\n
            v4->field_40 = v1;\n
            v4->field_38 = v2;\n
            v5 = v4;\n
            return v5;\n
        }\n
    }\n
}\n
", "4225970:sub_407bb2": null, "4225984:cgc_msls_send_server_hello": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned short field_a;\n
    unsigned long long field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned short field_6;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned short field_10;\n
} struct_0;\n
\n
long long cgc_msls_send_server_hello(struct_0 *a0, unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_3 *v0;  // [bp-0x28]\n
    struct_2 *v1;  // [bp-0x20]\n
    struct_1 *v2;  // [bp-0x18]\n
    unsigned int v4;  // ecx\n
    struct_2 *v5;  // rcx\n
\n
    v2 = cgc_calloc(32);\n
    v1 = cgc_calloc(20);\n
    v0 = cgc_calloc(8);\n
    v0->field_0 = 65281;\n
    *(&(&v0->field_0)[1]) = cgc_get_cgc_random();\n
    *((&v0->field_2 + 2)) = a0->field_10;\n
    v1->field_0 = 83;\n
    v4 = a0->field_8 + 1;\n
    a0->field_8 = v4;\n
    *(&(&v1->field_0)[1]) = v4;\n
    *((&v1->field_2 + 2)) = a0->field_0;\n
    *((&v1->field_6 + 2)) = 8;\n
    *(&v1->field_a) = v0;\n
    v2->field_0 = 35;\n
    v2->field_2 = 65281;\n
    v2->field_4 = 3;\n
    v2->field_c = a0->field_0;\n
    v2->field_10 = 20;\n
    v5 = v1;\n
    v2->field_18 = v5;\n
    cgc_msls_send_msg(v2, a1, a2, v5, a4);\n
    return cgc_msls_destroy_msg(v2);\n
}\n
", "4226229:sub_407cb5": null, "4226240:cgc_msls_send_keyx": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned short field_a;\n
    unsigned long long field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[20];\n
    unsigned long long field_20;\n
} struct_1;\n
\n
long long cgc_msls_send_keyx(struct_1 *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x20]\n
    struct_2 *v3;  // [bp-0x18]\n
    unsigned int v5;  // ecx\n
    struct_0 *v6;  // rcx\n
\n
    v3 = cgc_calloc(32);\n
    v2 = cgc_calloc(20);\n
    v1 = cgc_calloc(0x200);\n
    a0->field_20 = cgc_calloc(0x200);\n
    for (v0 = 0; v0 < 128; v0 += 1)\n
    {\n
        *((a0->field_20 + v0 * 4)) = *((0x4347c400 + v0 * 4)) ^ *((0x4347c600 + v0 * 4));\n
        a2 = *((a0->field_20 + v0 * 4));\n
        v1[v0] = a2;\n
    }\n
    v2->field_0 = 85;\n
    v5 = a0->field_8 + 1;\n
    a0->field_8 = v5;\n
    *(&(&v2->field_0)[1]) = v5;\n
    *((&v2->field_2 + 2)) = a0->field_0;\n
    *((&v2->field_6 + 2)) = 0x200;\n
    *(&v2->field_a) = v1;\n
    v3->field_0 = 539;\n
    v3->field_2 = 65281;\n
    v3->field_4 = 3;\n
    v3->field_c = a0->field_0;\n
    v3->field_10 = 524;\n
    v6 = v2;\n
    v3->field_18 = v6;\n
    cgc_msls_send_msg(v3, a1, a2, v6, a4);\n
    return cgc_msls_destroy_msg(v3);\n
}\n
", "4226564:sub_407e04": null, "4226576:cgc_msls_send_hello_done": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned short field_a;\n
    unsigned long long field_c;\n
} struct_1;\n
\n
long long cgc_msls_send_hello_done(unsigned int a0[3], unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned long a4)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v3;  // ecx\n
    struct_1 *v4;  // rcx\n
\n
    v1 = cgc_calloc(32);\n
    v0 = cgc_calloc(20);\n
    v0->field_0 = 87;\n
    v3 = a0[2] + 1;\n
    a0[2] = v3;\n
    *(&(&v0->field_0)[1]) = v3;\n
    *((&v0->field_2 + 2)) = a0[0];\n
    *((&v0->field_6 + 2)) = 0;\n
    *(&v0->field_a) = 0;\n
    v1->field_0 = 27;\n
    v1->field_2 = 65281;\n
    v1->field_4 = 3;\n
    v1->field_c = a0[0];\n
    v1->field_10 = 12;\n
    v4 = v0;\n
    v1->field_18 = v4;\n
    cgc_msls_send_msg(v1, a1, a2, v4, a4);\n
    return cgc_msls_destroy_msg(v1);\n
}\n
", "4226766:sub_407ece": null, "4226768:cgc_msls_send_finish": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    char padding_12[6];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned short field_a;\n
    unsigned long long field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned long long field_18;\n
    char padding_20[8];\n
    unsigned long long field_28;\n
    unsigned long long field_30;\n
    unsigned long long field_38;\n
} struct_2;\n
\n
long long cgc_msls_send_finish(struct_2 *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28]\n
    struct_1 *v3;  // [bp-0x20]\n
    struct_0 *v4;  // [bp-0x18]\n
    unsigned int v6;  // ecx\n
    struct_1 *v7;  // rcx\n
\n
    v4 = cgc_calloc(32);\n
    v3 = cgc_calloc(20);\n
    v2 = cgc_calloc(0x200);\n
    a0->field_30 = cgc_calloc(0x200);\n
    for (v1 = 0; v1 < 128; v1 += 1)\n
    {\n
        a2 = *((0x4347c200 + v1 * 4)) ^ *((0x4347c400 + v1 * 4));\n
        *((a0->field_30 + v1 * 4)) = a2;\n
    }\n
    for (v0 = 0; v0 < 128; v0 += 1)\n
    {\n
        a2 = *((a0->field_30 + v0 * 4)) ^ *((a0->field_28 + v0 * 4)) ^ *((a0->field_18 + v0 * 4)) ^ *((a0->field_38 + v0 * 4));\n
        v2[v0] = a2;\n
    }\n
    v3->field_0 = 89;\n
    v6 = a0->field_8 + 1;\n
    a0->field_8 = v6;\n
    *(&(&v3->field_0)[1]) = v6;\n
    *((&v3->field_2 + 2)) = a0->field_0;\n
    *((&v3->field_6 + 2)) = 0x200;\n
    *(&v3->field_a) = v2;\n
    v4->field_0 = 539;\n
    v4->field_2 = 65281;\n
    v4->field_4 = 3;\n
    v4->field_c = a0->field_0;\n
    v4->field_10 = 524;\n
    v7 = v3;\n
    v4->field_18 = v7;\n
    cgc_msls_send_msg(v4, a1, a2, v7, a4);\n
    return cgc_msls_destroy_msg(v4);\n
}\n
", "4227171:sub_408063": null, "4227184:cgc_msls_destroy_connection": "long long cgc_msls_destroy_connection(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int *v1;  // [bp-0x20]\n
\n
    if (!a0)\n
        return v0 + 1;\n
    v1 = 0;\n
    for (v0 = 0; v0 < 32; v0 += 1)\n
    {\n
        v1 = *((a0 + v0 * 8 + 16));\n
        if (v1 && *(v1) == a1)\n
        {\n
            cgc_destroy_context(v1);\n
            *((a0 + v0 * 8 + 16)) = 0;\n
        }\n
    }\n
    return v0 + 1;\n
}\n
", "4227334:sub_408106": null, "4227344:cgc_destroy_context": "long long cgc_destroy_context(unsigned int a0[15])\n
{\n
    unsigned long long v1;  // rax\n
\n
    if (a0)\n
    {\n
        cgc_free(*(&a0[14]));\n
        cgc_free(*(&a0[6]));\n
        cgc_free(*(&a0[8]));\n
        cgc_free(*(&a0[12]));\n
        v1 = cgc_free(*(&a0[10]));\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4227438:sub_40816e": null, "4227440:cgc_msls_set_cookie": "typedef struct struct_0 {\n
    char padding_0[272];\n
    unsigned long long field_110;\n
} struct_0;\n
\n
long long cgc_msls_set_cookie(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    a0->field_110 = cgc_calloc(0x200);\n
    for (v0 = 0; v0 < 128; v0 = v2)\n
    {\n
        *((a0->field_110 + v0 * 4)) = *((v0 * 4 + 0x4347c000)) ^ *((v0 * 4 + 0x4347c200));\n
        v2 = v0 + 1;\n
    }\n
    return v2;\n
}\n
", "4227564:sub_4081ec": null, "4227568:main": "typedef struct struct_2 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[7];\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
    char padding_8[8];\n
    struct struct_1 *field_10;\n
    char padding_18[24];\n
    struct struct_1 *field_30;\n
    char padding_38[8];\n
    struct struct_1 *field_40;\n
    char padding_48[8];\n
    struct struct_1 *field_50;\n
    struct struct_1 *field_58;\n
    struct struct_1 *field_60;\n
    struct struct_1 *field_68;\n
    struct struct_1 *field_70;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char g_4094d4;\n
\n
int main(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    char v1[13];  // [bp-0x30]\n
    struct_0 *v2;  // [bp-0x28]\n
    struct_2 *v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_4 *v8;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
\n
    v6 = 0;\n
    v5 = a0;\n
    v4 = a1;\n
    v3 = cgc_calloc(280);\n
    v8 = cgc_msls_get_sls_functions();\n
    v3->field_8 = v8;\n
    v3->field_8->field_50(v3);\n
    v3->field_0 = 1;\n
    while (((v3->field_1 ^ 255) & 1))\n
    {\n
        v2 = v3->field_8->field_0(v3);\n
        if (!v2)\n
        {\n
            cgc_debug_print(\"Skipping invalid MSG\\n
\", a1, a2, v8, a4);\n
        }\n
        else\n
        {\n
            v8 = v2;\n
            *(&v1[0]) = v3->field_8->field_58(v3, v8->field_c);\n
            v0 = v2->field_4 - 1;\n
            switch (v0)\n
            {\n
            case 0:\n
                if (v1 && v1[12])\n
                    v3->field_8->field_68(v3, v1, v2);\n
                goto LABEL_4083c1;\n
            case 1:\n
                v3->field_8->field_70(v3, v2);\n
                goto LABEL_4083c1;\n
            case 2:\n
                v3->field_8->field_40(v3, v2);\n
                goto LABEL_4083c1;\n
            case 3:\n
                if (v1 && v1[12])\n
                    v3->field_8->field_60(v3, v1, v2);\n
                goto LABEL_4083c1;\n
            case 4:\n
                if (v1)\n
                {\n
                    if (!(!v1[4]))\n
                        goto LABEL_4083aa;\n
                    break;\n
                }\n
                v3->field_8->field_30(v2);\n
LABEL_4083aa:\n
                goto LABEL_4083c1;\n
            case 5:\n
                v3->field_1 = 1;\n
                goto LABEL_4083c1;\n
            default:\n
LABEL_4083c1:\n
                cgc_free(*(&v2->field_18));\n
                cgc_free(v2);\n
                continue;\n
            }\n
        }\n
    }\n
    v3->field_8->field_10(v3);\n
    cgc_free(v3);\n
    return 0;\n
}\n
", "4228096:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_rint": null, "5242928:cgc_log10": null, "5242936:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}