{"4202496:_init": "extern struct_0 *g_406bc0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406bc0;\n
    if (g_406bc0)\n
        v1 = g_406bc0();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_406be0;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406be0;\n
    goto *(4221928);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202560:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202624:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202640:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4221904);\n
}\n
", "4202688:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202725:sub_4020e5": null, "4202726:sub_4020e6": null, "4202736:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406bb8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202777:sub_402119": null, "4202784:register_tm_clones": "extern unsigned long long g_406bc8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202841:sub_402159": null, "4202848:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406bd0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406bd0)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202901:sub_402195": null, "4202905:sub_402199": null, "4202912:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202921:sub_4021a9": null, "4202928:cgc_floor": "long long cgc_floor()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_3;  // tmp #3\n
    int tmp_5;  // tmp #5\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
    int v8;  // xmm0\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        tmp_3 = SubV(tmp_5, tmp_4);\n
        *(&v1) = tmp_3;\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        v8 = tmp_8 + (0 CONCAT 0x3ff0000000000000);\n
        v1 = v8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203076:sub_402244": null, "4203088:cgc_round_away_from_zero": "long long cgc_round_away_from_zero()\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    int tmp_8;  // tmp #8\n
    int tmp_10;  // tmp #10\n
    int tmp_9;  // tmp #9\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v3;  // xmm0lq\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = v3;\n
    if ((((CmpF(v0, 0) & 69) | ((CmpF(v0, 0) & 69) >> 6)) & 1) != 1)\n
    {\n
        v5 = cgc_rint();\n
        s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3fe0000000000000<64>) + Conv(64->128, Load(addr=stack_base-24, size=8, endness=Iend_LE))))<8>\n
        return v5;\n
    }\n
    else if ((((CmpF(0, v0) & 69) | ((CmpF(0, v0) & 69) >> 6)) & 1) != 1)\n
    {\n
        tmp_8 = SubV(tmp_10, tmp_9);\n
        v5 = cgc_rint();\n
        *(&v1) = tmp_8;\n
        return v5;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v5;\n
    }\n
}\n
", "4203212:sub_4022cc": null, "4203216:cgc_round": "double cgc_round()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    unsigned long long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned long v4;  // xmm1lq\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    unsigned long v11;  // xmm0lq\n
\n
    v2 = v4;\n
    cgc_rint();\n
    v2 = v2;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v1 = 0x4024000000000000;\n
    cgc_pow(v5, v6, v7, v8, v9, v10);\n
    v0 = 0x4024000000000000;\n
    cgc_round_away_from_zero();\n
    return Conv(128->64, (((0x0<64> CONCAT xmm0lq<8>) * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE))) * Conv(64->128, Load(addr=stack_base-40, size=8, endness=Iend_LE))));\n
}\n
", "4203344:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4203406:sub_40238e": null, "4203408:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_int_to_str(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct_0 *v1;  // [bp-0x40], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x38]\n
    struct_0 *v3;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0xc], Other Possible Types: unsigned long\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!v3)\n
        return &v2;\n
    if (v4 < 0)\n
    {\n
        v3->field_0 = 45;\n
        v3 += 1;\n
        v4 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v4 >> 31 CONCAT v4) /m 10 >> 32) + 48;\n
        v7 = v4;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v4);\n
    while (true)\n
    {\n
        v9 = v0;\n
        v0 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(v3) = *(v1);\n
        v3 += 1;\n
    }\n
    *(v3) = 0;\n
    return v3;\n
}\n
", "4203633:sub_402471": null, "4203648:cgc_float_to_str": "long long cgc_float_to_str(char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    int tmp_9;  // tmp #9\n
    int tmp_8;  // tmp #8\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    char v0;  // [bp-0x42]\n
    char v1;  // [bp-0x41]\n
    unsigned long long v2;  // [bp-0x40]\n
    char *v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned long v9;  // [bp-0x10]\n
    char v10;  // [bp-0x8]\n
    unsigned long long v12;  // rbp\n
    unsigned long v13;  // xmm0lq\n
    char *v14;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v15;  // xmm0lq\n
    char *v16;  // rax\n
    int v18;  // xmm0, Other Possible Types: unsigned long long\n
    char *v19;  // rax\n
    char *v20;  // rax\n
    char *v21;  // rax\n
\n
    v12 = &v10;\n
    v9 = v13;\n
    if (!a0)\n
    {\n
        return v14;\n
    }\n
    else if (!cgc_isnan())\n
    {\n
        if (cgc_isinf())\n
        {\n
            v14 = cgc_strcpy(a0, \"inf\");\n
        }\n
        else\n
        {\n
            v15 = v9;\n
            if ((((CmpF(v15, 0) & 69) >> 6) & 1) == 1 && !([D] amd64g_calculate_condition(0xa<64>, 0x0<64>, Conv(32->64, ((xmm0lq<8> CmpF 0x0<64>) & 0x45<32>)), 0x0<64>, cc_ndep<8>)))\n
            {\n
                v14 = cgc_strcpy(a0, \"0.00000\");\n
                goto LABEL_40277c;\n
            }\n
            v4 = 0;\n
            v3 = a0;\n
            v18 = v9;\n
            if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) == 1)\n
            {\n
                tmp_7 = SubV(tmp_9, tmp_8);\n
                v18 = tmp_7;\n
                v9 = v18;\n
            }\n
            else\n
            {\n
                s_10 =L Conv(128->64, ((0x0<64> CONCAT 0x3ed4f8b588e368f1<64>) + Conv(64->128, Load(addr=stack_base-16, size=8, endness=Iend_LE))))<8>\n
            }\n
            if ((((CmpF(0, v9) & 69) | ((CmpF(0, v9) & 69) >> 6)) & 1) != 1)\n
            {\n
                v4 = 1;\n
                v16 = v3;\n
                v3 = v16 + 1;\n
                *(v16) = 45;\n
                v9 ^= 0x8000000000000000;\n
            }\n
            cgc_log10();\n
            v7 = v9;\n
            if ((((CmpF(0x3ff0000000000000, v7) & 69) | ((CmpF(0x3ff0000000000000, v7) & 69) >> 6)) & 1) != 1)\n
                v7 = 0;\n
            v6 = 0;\n
            v5 = 0;\n
            while (true)\n
            {\n
                *(&v18) = v9;\n
                v1 = 1;\n
                if ((((CmpF(v18, 4532020583610935537) & 69) | ((CmpF(v18, 4532020583610935537) & 69) >> 6)) & 1) == 1)\n
                    v1 = 0 <= v7;\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_pow();\n
                v2 = 0x4024000000000000;\n
                *(&v18) = v2;\n
                if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1 && !cgc_isinf())\n
                {\n
                    tmp_12 = DivV(tmp_13, tmp_10);\n
                    v18 = tmp_12;\n
                    cgc_floor();\n
                    v8 = v18;\n
                    v9 = (0 CONCAT v8 ^ 0x8000000000000000) * (0 CONCAT v2) + (0 CONCAT v9);\n
                    v19 = v3;\n
                    v3 = v19 + 1;\n
                    *(v19) = v8 + 48;\n
                    if (v5)\n
                        v6 += 1;\n
                }\n
                if (!v7)\n
                {\n
                    *(&v18) = v9;\n
                    if ((((CmpF(v18, 0) & 69) | ((CmpF(v18, 0) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v20 = v3;\n
                        v3 = v20 + 1;\n
                        *(v20) = 46;\n
                        v5 = 1;\n
                        v6 = 0;\n
                    }\n
                }\n
                v7 -= 1;\n
            }\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5)\n
                    v0 = v6 < 5;\n
                if (!(v0 & 1))\n
                    break;\n
                v21 = v3;\n
                v3 = v21 + 1;\n
                *(v21) = 48;\n
                v6 += 1;\n
            }\n
            v14 = v3;\n
            *(v14) = 0;\n
LABEL_40277c:\n
        }\n
        return v14;\n
    }\n
    else\n
    {\n
        v14 = cgc_strcpy(a0, \"nan\");\n
        return v14;\n
    }\n
}\n
", "4204428:sub_40278c": null, "4204432:cgc_vprintf": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_vprintf(char *a0, struct_0 *a1)\n
{\n
    unsigned long long *v0;  // [bp-0xc0], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0xb8]\n
    unsigned int *v2;  // [bp-0xb0]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int *v4;  // [bp-0xa0], Other Possible Types: unsigned long\n
    struct_0 *v5;  // [bp-0x98]\n
    unsigned int v6;  // [bp-0x90]\n
    unsigned int v7;  // [bp-0x8c]\n
    struct_2 *v8;  // [bp-0x88], Other Possible Types: unsigned long\n
    unsigned long v9;  // [bp-0x80]\n
    struct_2 *v10;  // [bp-0x78], Other Possible Types: unsigned long\n
    unsigned int v11;  // [bp-0x6c]\n
    char v12;  // [bp-0x68]\n
    unsigned int v13;  // [bp-0x24]\n
    char *v14;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v15;  // [bp-0xc]\n
    struct_0 *v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    unsigned int *v19;  // rax\n
    struct_0 *v20;  // rcx\n
    unsigned int *v21;  // rdx\n
    unsigned long long v22;  // rdx\n
    unsigned long long *v23;  // rax\n
    struct_0 *v24;  // rcx\n
    unsigned long long *v25;  // rdx\n
\n
    v14 = a0;\n
    v13 = 0;\n
    if (!v14)\n
    {\n
        v15 = -1;\n
        return v15;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v15 = v13;\n
            return v15;\n
        }\n
        else if (*(v14) != 64)\n
        {\n
            cgc_putc(*(v14));\n
            v14 += 1;\n
            v13 += 1;\n
        }\n
        else\n
        {\n
            v14 += 1;\n
            v7 = *(v14);\n
            if (!v7)\n
            {\n
                v15 = -1;\n
                return v15;\n
            }\n
            if (v7 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v7 == 100)\n
            {\n
                v5 = a1;\n
                v6 = v5->field_0;\n
                if (v6 > 40)\n
                {\n
                    v20 = v5;\n
                    v21 = v20->field_8;\n
                    v20->field_8 = &v21[2];\n
                    v4 = v21;\n
                }\n
                else\n
                {\n
                    v17 = v5;\n
                    v18 = v6;\n
                    v19 = v18 + v17->field_10;\n
                    v17->field_0 = v18 + 8;\n
                    v4 = v19;\n
                }\n
                v11 = *(v4);\n
                cgc_int_to_str(v11, &v12);\n
                for (v10 = &v12; *(v10); v10 += 1)\n
                {\n
                    cgc_putc(*(v10));\n
                    v13 += 1;\n
                }\n
            }\n
            else if (v7 == 102)\n
            {\n
                v1 = a1;\n
                v2 = &v1->field_4;\n
                v3 = v1->field_4;\n
                if (v3 > 160)\n
                {\n
                    v24 = v1;\n
                    v25 = v24->field_8;\n
                    v24->field_8 = &v25[1];\n
                    v0 = v25;\n
                }\n
                else\n
                {\n
                    v22 = v3;\n
                    v23 = v22 + v1->field_10;\n
                    *(v2) = v22 + 16;\n
                    v0 = v23;\n
                }\n
                v9 = *(v0);\n
                cgc_float_to_str(&v12);\n
                for (v8 = &v12; v8->field_0; v8 += 1)\n
                {\n
                    cgc_putc(v8->field_0);\n
                    v13 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v15 = -1;\n
                return v15;\n
            }\n
            v14 += 1;\n
        }\n
    }\n
}\n
", "4205119:sub_402a3f": null, "4205120:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4205280:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4205371:sub_402b3b": null, "4205376:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205427:sub_402b73": null, "4205440:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4205468:sub_402b9c": null, "4205472:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4205524:sub_402bd4": null, "4205536:cgc_atof": "long long cgc_atof(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_45;  // tmp #45\n
    int tmp_47;  // tmp #47\n
    int tmp_46;  // tmp #46\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned long v2;  // [bp-0x28], Other Possible Types: unsigned long long\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    int v7;  // xmm0\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    int v9;  // xmm0\n
    int v10;  // xmm0\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    v7 = 0;\n
    v2 = 4591870180066957722;\n
    for (v1 = 1; cgc_isspace(*(v4)); v4 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        v8 = *(v4);\n
        if (!v8)\n
            break;\n
        v8 = *(v4);\n
        if (v8 == 45)\n
        {\n
            if (!v0)\n
            {\n
                v1 = -1;\n
                v0 += 1;\n
                goto LABEL_402dc9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 43)\n
        {\n
            if (!v0)\n
            {\n
                v0 += 1;\n
                goto LABEL_402dc9;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
        }\n
        v8 = *(v4);\n
        if (v8 == 46)\n
        {\n
            if (v0 && v0 != 1)\n
            {\n
                v5 = 0;\n
                return *(v4);\n
            }\n
            v0 = 2;\n
            goto LABEL_402dc9;\n
        }\n
        v8 = cgc_isdigit(*(v4));\n
        if (!v8)\n
            break;\n
        if (!v0)\n
        {\n
LABEL_402d39:\n
            v0 = 1;\n
            v7 = (0 CONCAT v3) * (0 CONCAT 0x4024000000000000) + (0 CONCAT *(v4) - 48);\n
            v3 = v7;\n
            goto LABEL_402dc9;\n
        }\n
        else\n
        {\n
            if (v0 == 1)\n
                goto LABEL_402d39;\n
            if (v0 != 2)\n
            {\n
                v5 = 0;\n
                return v8;\n
            }\n
            *(&v7) = *(v4) - 48;\n
            v9 = v7 * (0 CONCAT v2) + (0 CONCAT v3);\n
            v3 = v9;\n
            tmp_45 = DivV(tmp_47, tmp_46);\n
            v7 = tmp_45;\n
            v2 = v7;\n
LABEL_402dc9:\n
            v4 += 1;\n
        }\n
    }\n
    *(&v7) = v1;\n
    xmm0<16> = (xmm0<16> * Conv(64->128, Load(addr=stack_base-32, size=8, endness=Iend_LE)))\n
    v5 = v10;\n
    return v8;\n
}\n
", "4206093:sub_402e0d": null, "4206096:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4206488:sub_402f98": null, "4206496:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a1 + v0)); v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4206599:sub_403007": null, "4206608:cgc_bzero": "long long cgc_bzero(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = a0;\n
    if (!a0)\n
    {\n
        return a0;\n
    }\n
    else if (!a1)\n
    {\n
        return a0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= a1)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4206726:sub_403086": null, "4206736:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v2) == *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "4206854:sub_403106": null, "4206864:cgc_strncat": "long long cgc_strncat(char *a0, char *a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned long v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = cgc_strlen(a0);\n
    if (a0 && a1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1 < a2)\n
                v0 = a1[v1];\n
            if (!(v0 & 1))\n
                break;\n
            a0[v1 + v2] = a1[v1];\n
            v1 += 1;\n
        }\n
        a0[v1 + v2] = 0;\n
        v3 = a0;\n
        return v3;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4207073:sub_4031e1": null, "4207088:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v0;\n
    for (v0 = 0; v0[a0]; v0 += 1);\n
    return v0;\n
}\n
", "4207171:sub_403243": null, "4207184:cgc_receive_until": "long long cgc_receive_until(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a2)\n
            return v2;\n
        v2[a0] = 0;\n
        if (cgc_receive(a0, a1, a2, v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v0 != a1)\n
        {\n
            v2[a0] = v0;\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            return v2;\n
        }\n
    }\n
}\n
", "4207361:sub_403301": null, "4207376:cgc_strcat": "long long cgc_strcat(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        for (v0 = cgc_strlen(a0); *((a1 + v1)); v1 += 1)\n
        {\n
            a0[v0] = *((a1 + v1));\n
            v0 += 1;\n
        }\n
        v1 = v0;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4207538:sub_4033b2": null, "4207552:cgc_itoa": "long long cgc_itoa(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
\n
    v3 = a1;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = v3;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a2)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((a0 + v1)) = ((0 CONCAT v3) /m 10 >> 64) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 -= 1;\n
    } while (v3);\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4207784:sub_4034a8": null, "4207792:cgc_puts": "long long cgc_puts(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    v0 = a0;\n
    cgc_strlen(a0);\n
    v5 = cgc_transmit(a0, v2, v3, v4);\n
    if (v5)\n
    {\n
        v5 = cgc__terminate(a0);\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4207867:sub_4034fb": null, "4207872:cgc_list_users": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
long long cgc_list_users(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v2 = *(a0);\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (!v0)\n
            break;\n
        cgc_puts(v0);\n
        v2 = v0->field_18;\n
    }\n
    return v2;\n
}\n
", "4207967:sub_40355f": null, "4207968:cgc_init_users": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_init_users()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v0 = 0;\n
    if (!cgc_allocate(v2, v3, v4))\n
    {\n
        v0->field_0 = 0;\n
        v0->field_8 = 0;\n
        return v0;\n
    }\n
    cgc_puts(\"[-] Error Failed to allocate buffer\\n
\");\n
    return v0;\n
}\n
", "4208058:sub_4035ba": null, "4208064:cgc_create_user": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[15];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
long long cgc_create_user(struct_1 *a0, unsigned long a1)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v4;  // rdx\n
    struct_1 *v6;  // rax\n
    struct_1 *v7;  // rax\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        return v2;\n
    }\n
    else if (cgc_strlen(a1) > 15)\n
    {\n
        cgc_puts(\"[-] Error username too long\\n
\");\n
        return v2;\n
    }\n
    else\n
    {\n
        for (v1 = a0->field_0; v1; v1 = *((v1 + 24)))\n
        {\n
            if (!cgc_strcmp(v1, a1))\n
            {\n
                cgc_puts(\"[-] Error user exists\\n
\");\n
                return v2;\n
            }\n
        }\n
        if (cgc_allocate(a0, a1, v4))\n
        {\n
            cgc_puts(\"[-] Error allocating user structure\\n
\");\n
            return v2;\n
        }\n
        v0->field_18 = 0;\n
        v0->field_0 = 0;\n
        v0->field_10 = cgc_init_manager();\n
        cgc_strncat(v0, a1, 16);\n
        if (!a0->field_0)\n
        {\n
            a0->field_0 = &v0->field_0;\n
            v6 = a0;\n
            v6->field_8 = v6->field_8 + 1;\n
            v2 = a0->field_8;\n
            return v2;\n
        }\n
        v0->field_18 = a0->field_0;\n
        a0->field_0 = &v0->field_0;\n
        v7 = a0;\n
        v7->field_8 = v7->field_8 + 1;\n
        v2 = a0->field_8;\n
        return v2;\n
    }\n
}\n
", "4208459:sub_40374b": null, "4208464:cgc_init_manager": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_init_manager()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
\n
    v0 = 0;\n
    if (!cgc_allocate(v2, v3, v4))\n
    {\n
        v0->field_0 = 0;\n
        v0->field_8 = 0;\n
        return v0;\n
    }\n
    cgc_puts(\"[-] Error Failed to allocate buffer\\n
\");\n
    return v0;\n
}\n
", "4208554:sub_4037aa": null, "4208560:cgc_add_message": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc_add_message(struct_1 *a0, struct_2 *a1)\n
{\n
    struct struct_0 **v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_1 *v3;  // rax\n
    struct_1 *v4;  // rax\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a1)\n
    {\n
        return v1;\n
    }\n
    else if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (!a0->field_0)\n
    {\n
        a0->field_0 = &a1->padding_0[0];\n
        v3 = a0;\n
        v3->field_8 = v3->field_8 + 1;\n
        a1->field_8 = a0->field_8;\n
        v1 = a1->field_8;\n
        return v1;\n
    }\n
    else\n
    {\n
        for (v0 = &a0->field_0->field_0; *(v0); v0 = *(v0));\n
        *(v0) = a1;\n
        v4 = a0;\n
        v4->field_8 = v4->field_8 + 1;\n
        a1->field_8 = a0->field_8;\n
        v1 = a1->field_8;\n
        return v1;\n
    }\n
}\n
", "4208784:cgc_create_message": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
long long cgc_create_message(char *a0)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        return v2;\n
    }\n
    else if (cgc_strlen(a0) > 31)\n
    {\n
        cgc_puts(\"[-] Error Message too long\\n
\");\n
        return v2;\n
    }\n
    else if (!cgc_allocate(a0, v4, v5))\n
    {\n
        v2->field_0 = 0;\n
        v2->field_8 = 0;\n
        v2->field_c = 0;\n
        cgc_bzero(v2 + 1, 32);\n
        v1 = 0;\n
        while (true)\n
        {\n
            v0 = v1;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            *(16 + &v2->field_0 + v1) = a0[v1];\n
            v1 += 1;\n
        }\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_puts(\"[-] Error Failed to allocate message struct\\n
\");\n
        return v2;\n
    }\n
}\n
", "4209048:sub_403998": null, "4209056:cgc_delete_message": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
long long cgc_delete_message(struct_1 *a0, unsigned long long a1)\n
{\n
    struct_0 *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x20]\n
    struct_0 *v3;  // rax, Other Possible Types: unsigned long, unsigned long long\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v3;\n
    }\n
    else if (a1 <= a0->field_8)\n
    {\n
        v3 = a0->field_0;\n
        while (true)\n
        {\n
            v1 = v3;\n
            if (!v1)\n
            {\n
                if (v1)\n
                    return v3;\n
                v3 = cgc_puts(\"[-] Message ID not found\\n
\");\n
            }\n
            if (v1->field_8 == a1)\n
                break;\n
            v0 = v1;\n
            v3 = v1->field_0;\n
        }\n
        if (!v0)\n
            a0->field_0 = v1->field_0;\n
        else\n
            *(v0) = v1->field_0;\n
        v3 = cgc_deallocate(a0, a1);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = cgc_puts(\"[-] Message ID out of range\\n
\");\n
        return v3;\n
    }\n
}\n
", "4209301:sub_403a95": null, "4209312:cgc_read_message": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
} struct_1;\n
\n
long long cgc_read_message(struct_1 *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x128]\n
    struct_0 *v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    struct_0 *v4;  // rax, Other Possible Types: unsigned long, unsigned long long\n
\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        return v4;\n
    }\n
    else if (a1 <= a0->field_8)\n
    {\n
        cgc_bzero(&v0, 0x100);\n
        cgc_strncat(&v0, \"***********************************\\n
\", 0x100);\n
        v4 = a0->field_0;\n
        while (true)\n
        {\n
            v1 = v4;\n
            if (!v1)\n
                break;\n
            if (v1->field_8 == a1)\n
            {\n
                v2 = cgc_strlen(&v0);\n
                cgc_itoa(&(&v0)[v2], a1, 0x100 - v2);\n
                cgc_strncat(&v0, \":  \", 0x100);\n
                cgc_strncat(&v0, v1 + 1, 0x100);\n
                cgc_strncat(&v0, \"\\n
***********************************\\n
\", 0x100);\n
                cgc_puts(&v0);\n
                v4 = v1;\n
                *((v4 + 12)) = 1;\n
                return v1;\n
            }\n
            v4 = v1->field_0;\n
        }\n
        if (v1)\n
            return v4;\n
        v4 = cgc_puts(\"[-] Message ID not found\\n
\");\n
    }\n
    else\n
    {\n
        v4 = cgc_puts(\"[-] Message ID out of range\\n
\");\n
        return v4;\n
    }\n
}\n
", "4209679:sub_403c0f": null, "4209680:cgc_list_unread_messages": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_-8;\n
} struct_1;\n
\n
extern char g_403d01;\n
\n
long long cgc_list_unread_messages(struct struct_0 **a0)\n
{\n
    char v0;  // [bp-0x48]\n
    struct_1 *v1;  // [bp-0x40]\n
    unsigned long v2;  // [bp-0x38]\n
    unsigned long v3;  // [bp-0x30]\n
    char v4;  // [bp-0x21]\n
    void* v5;  // [bp-0x20], Other Possible Types: unsigned long, unsigned int\n
    struct_0 *v6;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned long long v8;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v9;  // rax\n
\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!a0)\n
        return v8;\n
    for (v6 = *(a0); v6; v6 = *(v6))\n
    {\n
        if (!*((v6 + 12)))\n
            v4 += 1;\n
    }\n
    v8 = v4;\n
    if (!v8)\n
        return v4;\n
    cgc_puts(\"Unread messages:\\n
\");\n
    v5 = v4 * 32;\n
    v5 += v4 * 8 * 9;\n
    *(&v5) = v5 + v4 * 8;\n
    v9 = *(&v5);\n
    v3 = &v0;\n
    v1 = &(&v0)[-1 * (v9 + 15 & -0x10)];\n
    v2 = v9;\n
    v1[1].field_-8 = &g_403d01;\n
    cgc_bzero(v1, *(&v5));\n
    for (v6 = *(a0); v6; v6 = v6->field_0)\n
    {\n
        if (!*((v6 + 12)))\n
        {\n
            v6->field_c = 1;\n
            cgc_strcat(v1, \"***********************************\\n
\");\n
            cgc_itoa(v1 + cgc_strlen(v1), v6->field_8, 4);\n
            cgc_strcat(v1, \":  \");\n
            cgc_strcat(v1, v6 + 1);\n
            cgc_strcat(v1, \"\\n
\");\n
            cgc_strcat(v1, \"***********************************\\n
\");\n
        }\n
    }\n
    cgc_puts(v1);\n
    return v3;\n
}\n
", "4210121:sub_403dc9": null, "4210128:cgc_list_messages": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_list_messages(struct struct_0 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v2 = *(a0);\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (!v0)\n
            break;\n
        cgc_read_message(a0, v0->field_8);\n
        v2 = v0->field_0;\n
    }\n
    return v2;\n
}\n
", "4210231:sub_403e37": null, "4210240:cgc_get_user": "typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
long long cgc_get_user(struct struct_0 **a0, char *a1)\n
{\n
    struct_0 *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        v0 = *(a0);\n
        while (true)\n
        {\n
            if (!v0)\n
                return v0;\n
            if (!cgc_strcmp(v0, a1))\n
                return v0;\n
            v0 = *((v0 + 24));\n
        }\n
    }\n
    return v0;\n
}\n
", "4210372:sub_403ec4": null, "4210384:cgc_send_user_message": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_1;\n
\n
long long cgc_send_user_message(struct struct_0 **a0, char *a1, char *a2)\n
{\n
    void* v0;  // [bp-0x38]\n
    struct_1 *v1;  // [bp-0x30], Other Possible Types: struct_0 *\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!(a0 && a1 && a2))\n
        return v2;\n
    v1 = cgc_get_user(a0, a1);\n
    if (!v1)\n
    {\n
        cgc_puts(\"[-] Error invalid user\\n
\");\n
        return v2;\n
    }\n
    v0 = cgc_create_message(a2);\n
    if (!v0)\n
    {\n
        cgc_puts(\"[-] Failed to create message\\n
\");\n
        return v2;\n
    }\n
    v2 = cgc_add_message(v1->field_10, v0);\n
    if (!v2)\n
    {\n
        cgc_puts(\"[-] Failed to add message\\n
\");\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4210615:sub_403fb7": null, "4210624:cgc_handle_loggedin": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 **field_10;\n
} struct_0;\n
\n
long long cgc_handle_loggedin(struct struct_0 **a0, struct_0 *a1)\n
{\n
    char v0;  // [bp-0x58]\n
    char v1;  // [bp-0x48]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long, unsigned long long\n
    unsigned long long v4;  // rax\n
\n
    v2 = 0;\n
    if (!(a0 && a1))\n
        return v4;\n
    while (true)\n
    {\n
        cgc_list_unread_messages(a1->field_10);\n
        cgc_puts(\"1) Send Message\\n
\");\n
        cgc_puts(\"2) Read Message\\n
\");\n
        cgc_puts(\"3) List Messages\\n
\");\n
        cgc_puts(\"4) Delete Message\\n
\");\n
        cgc_puts(\"5) Logout\\n
\");\n
        cgc_puts(\"6) Exit\\n
\");\n
        cgc_puts(\": \");\n
        v2 = 0;\n
        if (!cgc_receive_until(&v2, 10, 2))\n
        {\n
            cgc_puts(\"[-] Receive failed\\n
\");\n
            cgc__terminate(\"[-] Receive failed\\n
\");\n
        }\n
        v2 -= 48;\n
        if (v2 > 6)\n
        {\n
LABEL_4040b3:\n
            cgc_puts(\"[-] Invalid choice\\n
\");\n
        }\n
        else\n
        {\n
            if (v2 < 1)\n
                goto LABEL_4040b3;\n
            if (v2 == 6)\n
            {\n
                cgc_puts(\"Exiting...\\n
\");\n
                cgc__terminate(\"Exiting...\\n
\");\n
            }\n
            if (v2 == 5)\n
                break;\n
            if (v2 == 4)\n
            {\n
                cgc_puts(\"ID: \");\n
                cgc_bzero(&v1, 32);\n
                cgc_receive_until(&v1, 10, 4);\n
                v2 = cgc_atoi(&v1);\n
                cgc_delete_message(a1->field_10, v2);\n
            }\n
            else if (v2 == 3)\n
            {\n
                cgc_list_messages(a1->field_10);\n
            }\n
            else if (v2 == 2)\n
            {\n
                cgc_puts(\"ID: \");\n
                cgc_bzero(&v1, 32);\n
                cgc_receive_until(&v1, 10, 4);\n
                v2 = cgc_atoi(&v1);\n
                cgc_read_message(a1->field_10, v2);\n
            }\n
            else if (v2 == 1)\n
            {\n
                cgc_bzero(&v1, 32);\n
                cgc_bzero(&v0, 16);\n
                cgc_puts(\"To: \");\n
                cgc_receive_until(&v0, 10, 15);\n
                cgc_puts(\"Message: \");\n
                cgc_receive_until(&v1, 10, 31);\n
                cgc_send_user_message(a0, &v0, &v1);\n
            }\n
        }\n
    }\n
    v4 = cgc_puts(\"Logging out...\\n
\");\n
    return v4;\n
}\n
", "4211311:sub_40426f": null, "4211312:cgc_handle_menu": "long long cgc_handle_menu()\n
{\n
    char v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x10]\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v4 = cgc_init_users();\n
    if (!v4)\n
        return v4;\n
    while (true)\n
    {\n
        v2 = 0;\n
        cgc_puts(\"1) Create User\\n
\");\n
        cgc_puts(\"2) Login\\n
\");\n
        cgc_puts(\"3) Exit\\n
\");\n
        cgc_puts(\": \");\n
        if (!cgc_receive_until(&v2, 10, 2))\n
        {\n
            cgc_puts(\"[-] Receive Failed\\n
\");\n
            cgc__terminate(\"[-] Receive Failed\\n
\");\n
        }\n
        v2 -= 48;\n
        if (v2 > 3)\n
        {\n
LABEL_404340:\n
            cgc_puts(\"[-] Invalid choice\\n
\");\n
        }\n
        else\n
        {\n
            if (v2 < 1)\n
                goto LABEL_404340;\n
            cgc_bzero(&v0, 16);\n
            if (v2 == 3)\n
            {\n
                cgc_puts(\"Exiting...\\n
\");\n
                cgc__terminate(\"Exiting...\\n
\");\n
            }\n
            if (v2 == 1)\n
            {\n
                cgc_puts(\"username: \");\n
                cgc_receive_until(&v0, 10, 15);\n
                cgc_create_user(v4, &v0);\n
            }\n
            else if (v2 == 2)\n
            {\n
                cgc_puts(\"username: \");\n
                cgc_receive_until(&v0, 10, 15);\n
                v3 = cgc_get_user(v4, &v0);\n
                if (!v3)\n
                {\n
                    cgc_puts(\"Login Failed\\n
\");\n
                }\n
                else\n
                {\n
                    cgc_puts(\"Login Success\\n
\");\n
                    cgc_handle_loggedin(v4, v3);\n
                    v3 = 0;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4211787:sub_40444b": null, "4211792:main": "int main(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v2 = 0;\n
    v1 = a0;\n
    v0 = a1;\n
    cgc_handle_menu();\n
    return 0;\n
}\n
", "4211828:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_pow": null, "5242896:cgc__terminate": null, "5242904:cgc_transmit": null, "5242912:cgc_allocate": null, "5242920:cgc_rint": null, "5242928:cgc_deallocate": null, "5242936:cgc_log10": null, "5242944:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}