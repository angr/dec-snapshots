{"4202496:_init": "extern struct_0 *g_405230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_405230;\n
    if (g_405230)\n
        v1 = g_405230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_405250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_405250;\n
    goto *(4215384);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202560:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202576:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202592:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4215360);\n
}\n
", "4202608:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202645:sub_402095": null, "4202646:sub_402096": null, "4202656:deregister_tm_clones": "extern char __TMC_END__;\n
extern unsigned long long g_405228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__TMC_END__;\n
}\n
", "4202697:sub_4020c9": null, "4202704:register_tm_clones": "extern unsigned long long g_405238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202761:sub_402109": null, "4202768:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_405240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_405240)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202821:sub_402145": null, "4202825:sub_402149": null, "4202832:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202841:sub_402159": null, "4202848:cgc_readLine": "long long cgc_readLine(unsigned long long a0, unsigned long a1, unsigned long long a2)\n
{\n
    char v0;  // [bp-0x40]\n
    char *v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x29]\n
    unsigned int v4;  // [bp-0x14]\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v7;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
    do\n
    {\n
        v2 = cgc_receive(a0, a1, a2, v7);\n
        if (!v2 && !(!*(&v0)))\n
            continue;\n
        cgc__terminate(a0);\n
        v1[a1] = v3;\n
        v1 += 1;\n
        if (v1 >= a2)\n
            v1 = a2 - 1;\n
    } while (v3 != 10);\n
    v1[a1] = 0;\n
    v5 = v1;\n
    return v5;\n
}\n
", "4203076:sub_402244": null, "4203088:cgc_myStrLen": "long long cgc_myStrLen(char *a0)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; a0[v0]; v0 += 1);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4203193:sub_4022b9": null, "4203200:cgc_my_printf": "long long cgc_my_printf(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x10], Other Possible Types: unsigned long long\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = cgc_myStrLen(a0);\n
    do\n
    {\n
        v0 = cgc_transmit(a0, v6, v7, v8);\n
        if (v0)\n
            cgc__terminate(a0);\n
        v2 = *(&v3) + v2;\n
    } while (v2 < v1);\n
    v4 = v2;\n
    return v4;\n
}\n
", "4203367:sub_402367": null, "4203376:cgc_snprintdecimal": "long long cgc_snprintdecimal(char a0[2], unsigned long a1, unsigned long a2)\n
{\n
    char v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a2;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 48;\n
    if (a0 && a1 >= 2)\n
    {\n
        if (v4)\n
        {\n
            for (v0 = 0; v4; v3 += 1)\n
            {\n
                v1 = (0 CONCAT v4) /m 10 >> 32;\n
                (&v0)[v3] = v1 + 48;\n
                v4 = (0 CONCAT v4) /m 10;\n
            }\n
            if (v3 >= a1)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            for (v3 -= 1; v3 >= 0; v3 -= 1)\n
            {\n
                a0[v2] = (&v0)[v3];\n
                v2 += 1;\n
            }\n
            a0[v2] = 0;\n
            v5 = v2;\n
            return v5;\n
        }\n
        else\n
        {\n
            a0[0] = 48;\n
            a0[1] = 0;\n
            v5 = 1;\n
            return v5;\n
        }\n
    }\n
    v5 = -1;\n
    return v5;\n
}\n
", "4203676:sub_40249c": null, "4203680:cgc_strToUint32": "long long cgc_strToUint32(char *a0)\n
{\n
    char v0;  // [bp-0x2d]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a0[v3] >= 48)\n
            v0 = a0[v3] <= 57;\n
        if (!(v0 & 1))\n
            break;\n
        v1 = a0[v3] - 48;\n
        v2 *= 10;\n
        v2 = v1 + v2;\n
        v3 += 1;\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4203865:sub_402559": null, "4203872:cgc_printLargeInt": "long long cgc_printLargeInt(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long long v2;  // rax\n
\n
    v0 = 0;\n
    if (!a0)\n
        return v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v2 = v0;\n
        if (v2 >= 8)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4203945:sub_4025a9": null, "4203952:cgc_largeIntAdd": "long long cgc_largeIntAdd(unsigned int *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x28], Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rax\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 && a1 && a2)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            v5 = v0;\n
            if (v5 >= 8)\n
                break;\n
            v2 = a1[7 + -1 * v0];\n
            v1 = a2[7 + -1 * v0];\n
            v3 = v3 + v2 + v1;\n
            a0[7 + -1 * v0] = 4294967295 & v3;\n
            v3 >>= 32;\n
            v0 += 1;\n
        }\n
        return v0;\n
    }\n
    return v5;\n
}\n
", "4204183:sub_402697": null, "4204192:cgc_largeIntShl1": "long long cgc_largeIntShl1(unsigned int a0[8])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 0;\n
    if (!a0)\n
        return a0;\n
    for (v0 = 0; v0 < 7; v0 += 1)\n
    {\n
        a0[v0] = a0[v0] * 2;\n
        a0[v0] = a0[v0] | ((a0[1 + v0] & 0x80000000) >> 31);\n
    }\n
    a0[7] = a0[7] * 2;\n
    return a0;\n
}\n
", "4204350:sub_40273e": null, "4204352:cgc_largeIntShl": "long long cgc_largeIntShl(unsigned int a0[8], unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = a1;\n
    v0 = 0;\n
    v3 = v1;\n
    v4 = (v3 >> 31 CONCAT v3) /m 0x100;\n
    v1 = v4 / 0x100000000;\n
    for (v0 = 0; v0 < 0x100; v0 = v4)\n
    {\n
        cgc_largeIntShl1(a0);\n
        v4 = v0 + 1;\n
    }\n
    return v4;\n
}\n
", "4204437:sub_402795": null, "4204448:cgc_largeIntMul": "long long cgc_largeIntMul(unsigned int *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    char v5;  // [bp-0x40]\n
\n
    v3 = 0;\n
    if (a0 && a1 && a2)\n
    {\n
        for (v2 = 0; v2 < 8; v2 += 1)\n
        {\n
            (&v4)[v2] = 0;\n
        }\n
        for (v1 = 0; v1 < 8; v1 += 1)\n
        {\n
            *(&(&v5)[4 * v1]) = a1[v1];\n
        }\n
        for (v3 = 0; v3 < 0x100; v3 += 1)\n
        {\n
            if ((a2[7 + -1 * (v3 >> 5)] & (1 << (v3 & 31 & 31))))\n
                cgc_largeIntAdd(&v4, &v4, &v5);\n
            cgc_largeIntShl1(&v5);\n
        }\n
        for (v0 = 0; v0 < 8; v0 += 1)\n
        {\n
            a0[v0] = (&v4)[v0];\n
        }\n
        return v0;\n
    }\n
    return v0;\n
}\n
", "4204814:sub_40290e": null, "4204816:cgc_largeIntCmp": "long long cgc_largeIntCmp(unsigned int *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (a0 && a1)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= 8)\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
            if (a0[v0] > a1[v0])\n
            {\n
                v1 = 1;\n
                return v1;\n
            }\n
            else if (a0[v0] >= a1[v0])\n
            {\n
                v0 += 1;\n
            }\n
            else\n
            {\n
                v1 = -1;\n
                return v1;\n
            }\n
        }\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4205006:sub_4029ce": null, "4205008:cgc_userMenu1": "long long cgc_userMenu1()\n
{\n
    return cgc_userMenu(1);\n
}\n
", "4205024:cgc_userMenu": "extern char g_404004;\n
\n
long long cgc_userMenu(unsigned long a0)\n
{\n
    unsigned int *v0;  // [bp-0x70]\n
    char v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char v5;  // [bp-0xd]\n
    unsigned long long v7;  // rax, Other Possible Types: unsigned long\n
\n
    v5 = 0;\n
    while (true)\n
    {\n
        cgc_readLine(0, &v1, 64);\n
        v0 = v1 - 65;\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_my_printf(\"First Secret\\n
\");\n
            cgc_readLine(0, &v1, 64);\n
            v4 = cgc_strToUint32(&v1);\n
            cgc_my_printf(\"Second Secret\\n
\");\n
            cgc_readLine(0, &v1, 64);\n
            v3 = cgc_strToUint32(&v1);\n
            cgc_my_printf(\"Third Secret\\n
\");\n
            cgc_readLine(0, &v1, 64);\n
            v2 = cgc_strToUint32(&v1);\n
            v7 = cgc_addPW(a0, v4, v3, v2);\n
            break;\n
        case 11:\n
            goto LABEL_402b21__0;\n
        case 15:\n
            v7 = cgc_printPW(a0);\n
            break;\n
        case 17:\n
            cgc_my_printf(\"Remove PW NUm?\\n
\");\n
            cgc_readLine(0, &v1, 64);\n
            v4 = cgc_strToUint32(&v1);\n
            v7 = cgc_rmPW(a0, v4);\n
            break;\n
        default:\n
            v7 = cgc_my_printf(\"Bad command\\n
\");\n
        }\n
        *(&v7) = 1;\n
    }\n
LABEL_402b21__0:\n
    return &(&g_404004)[*((&g_404004 + 0x4 * v0))];\n
}\n
", "4205351:sub_402b27": null, "4205360:cgc_userMenu2": "long long cgc_userMenu2()\n
{\n
    return cgc_userMenu(2);\n
}\n
", "4205376:cgc_userMenu3": "long long cgc_userMenu3()\n
{\n
    return cgc_userMenu(3);\n
}\n
", "4205392:cgc_userMenu4": "long long cgc_userMenu4()\n
{\n
    return cgc_userMenu(4);\n
}\n
", "4205408:cgc_userMenu5": "long long cgc_userMenu5()\n
{\n
    return cgc_userMenu(5);\n
}\n
", "4205424:cgc_userMenu6": "long long cgc_userMenu6()\n
{\n
    return cgc_userMenu(6);\n
}\n
", "4205440:cgc_userMenu7": "long long cgc_userMenu7()\n
{\n
    return cgc_userMenu(7);\n
}\n
", "4205456:cgc_userMenu8": "long long cgc_userMenu8()\n
{\n
    return cgc_userMenu(8);\n
}\n
", "4205472:cgc_userMenu9": "long long cgc_userMenu9()\n
{\n
    return cgc_userMenu(9);\n
}\n
", "4205488:cgc_userMenu10": "long long cgc_userMenu10()\n
{\n
    return cgc_userMenu(10);\n
}\n
", "4205504:cgc_userMenu11": "long long cgc_userMenu11()\n
{\n
    return cgc_userMenu(11);\n
}\n
", "4205520:cgc_userMenu12": "long long cgc_userMenu12()\n
{\n
    return cgc_userMenu(12);\n
}\n
", "4205536:cgc_userMenu13": "long long cgc_userMenu13()\n
{\n
    return cgc_userMenu(13);\n
}\n
", "4205552:cgc_userMenu14": "long long cgc_userMenu14()\n
{\n
    return cgc_userMenu(14);\n
}\n
", "4205568:cgc_userMenu15": "long long cgc_userMenu15()\n
{\n
    return cgc_userMenu(15);\n
}\n
", "4205584:cgc_userMenu16": "long long cgc_userMenu16()\n
{\n
    return cgc_userMenu(16);\n
}\n
", "4205600:cgc_userMenu17": "long long cgc_userMenu17()\n
{\n
    return cgc_userMenu(17);\n
}\n
", "4205616:cgc_userMenu18": "long long cgc_userMenu18()\n
{\n
    return cgc_userMenu(18);\n
}\n
", "4205632:cgc_userMenu19": "long long cgc_userMenu19()\n
{\n
    return cgc_userMenu(19);\n
}\n
", "4205648:cgc_userMenu20": "long long cgc_userMenu20()\n
{\n
    return cgc_userMenu(20);\n
}\n
", "4205664:cgc_userMenu21": "long long cgc_userMenu21()\n
{\n
    return cgc_userMenu(21);\n
}\n
", "4205680:cgc_initTable": "extern unsigned long long g_40aac0;\n
extern unsigned long long g_4143c8;\n
extern unsigned long long g_414d90;\n
extern unsigned long long g_415a40;\n
extern unsigned long long g_41a6c0;\n
extern unsigned long long g_4209c0;\n
extern unsigned long long g_423490;\n
extern unsigned long long g_424820;\n
extern unsigned long long g_425ac8;\n
extern unsigned long long g_428c48;\n
extern unsigned long long g_432558;\n
extern unsigned long long g_43c6a8;\n
extern unsigned long long g_441620;\n
extern unsigned long long g_44c590;\n
extern unsigned long long g_4506e8;\n
extern unsigned long long g_455a38;\n
extern unsigned long long g_45ef98;\n
extern unsigned long long g_45f7b0;\n
extern unsigned long long g_46e878;\n
extern unsigned long long g_47d940;\n
extern unsigned long long g_48c068;\n
extern char handlerTable;\n
\n
long long cgc_initTable()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    for (v2 = 0; v2 < 50; v2 += 1)\n
    {\n
        for (v1 = 0; v1 < 50; v1 += 1)\n
        {\n
            for (v0 = 0; v0 < 50; v0 += 1)\n
            {\n
                *(&(&handlerTable)[20000 * v2 + 400 * v1 + 8 * v0]) = 0;\n
            }\n
        }\n
    }\n
    g_4143c8 = cgc_userMenu1;\n
    g_40aac0 = cgc_userMenu2;\n
    g_423490 = cgc_userMenu3;\n
    g_432558 = cgc_userMenu4;\n
    g_414d90 = cgc_userMenu5;\n
    g_428c48 = cgc_userMenu6;\n
    g_441620 = cgc_userMenu7;\n
    g_41a6c0 = cgc_userMenu8;\n
    g_415a40 = cgc_userMenu9;\n
    g_45ef98 = cgc_userMenu10;\n
    g_43c6a8 = cgc_userMenu11;\n
    g_4506e8 = cgc_userMenu12;\n
    g_45f7b0 = cgc_userMenu13;\n
    g_424820 = cgc_userMenu14;\n
    g_44c590 = cgc_userMenu15;\n
    g_425ac8 = cgc_userMenu16;\n
    g_46e878 = cgc_userMenu17;\n
    g_455a38 = cgc_userMenu18;\n
    g_4209c0 = cgc_userMenu19;\n
    g_48c068 = cgc_userMenu20;\n
    g_47d940 = cgc_userMenu21;\n
    return cgc_userMenu21;\n
}\n
", "4206151:sub_402e47": null, "4206160:cgc_initPasswords": "extern char userPasswords;\n
\n
long long cgc_initPasswords()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    for (v1 = 0; v1 < 21; v1 += 1)\n
    {\n
        for (v0 = 0; v0 < 10; v0 += 1)\n
        {\n
            *(&(&userPasswords)[120 * v1 + 12 * v0]) = 0;\n
            *(&(&userPasswords)[4 + 120 * v1 + 12 * v0]) = 0;\n
            *(&(&userPasswords)[8 + 120 * v1 + 12 * v0]) = 0;\n
        }\n
    }\n
    return v1 + 1;\n
}\n
", "4206340:sub_402f04": null, "4206352:cgc_addPW": "extern char userPasswords;\n
\n
long long cgc_addPW(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 10)\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        if (!*(&(&userPasswords)[120 * a0 + 12 * v0]) && !*(&(&userPasswords)[4 + 120 * a0 + 12 * v0]) && !*(&(&userPasswords)[8 + 120 * a0 + 12 * v0]))\n
        {\n
            *(&(&userPasswords)[120 * a0 + 12 * v0]) = a1;\n
            *(&(&userPasswords)[4 + 120 * a0 + 12 * v0]) = a2;\n
            *(&(&userPasswords)[8 + 120 * a0 + 12 * v0]) = a3;\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206661:sub_403045": null, "4206672:cgc_rmPW": "extern char userPasswords;\n
\n
long long cgc_rmPW(unsigned long a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < 10)\n
        {\n
            if (*(&(&userPasswords)[120 * a0 + 12 * v1]) && *(&(&userPasswords)[4 + 120 * a0 + 12 * v1]) && *(&(&userPasswords)[8 + 120 * a0 + 12 * v1]))\n
            {\n
                if (v0 != a1)\n
                {\n
                    v0 += 1;\n
                }\n
                else\n
                {\n
                    *(&(&userPasswords)[120 * a0 + 12 * v1]) = 0;\n
                    *(&(&userPasswords)[4 + 120 * a0 + 12 * v1]) = 0;\n
                    *(&(&userPasswords)[8 + 120 * a0 + 12 * v1]) = 0;\n
                    v2 = 0;\n
                    return v2;\n
                }\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4207011:sub_4031a3": null, "4207024:cgc_printPW": "extern char userPasswords;\n
\n
long long cgc_printPW(unsigned long a0)\n
{\n
    char v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
\n
    v2 = 0;\n
    v1 = 0;\n
    for (v2 = 0; v2 < 10; v2 += 1)\n
    {\n
        if (!*(&(&userPasswords)[120 * a0 + 12 * v2]) && !*(&(&userPasswords)[4 + 120 * a0 + 12 * v2]) && !*(&(&userPasswords)[8 + 120 * a0 + 12 * v2]))\n
            goto LABEL_403357;\n
        cgc_my_printf(\"Password \");\n
        cgc_snprintdecimal(&v0, 64, v1);\n
        cgc_my_printf(&v0);\n
        cgc_my_printf(\" : \");\n
        cgc_snprintdecimal(&v0, 64, *(&(&userPasswords)[120 * a0 + 12 * v2]));\n
        cgc_my_printf(&v0);\n
        cgc_my_printf(\" , \");\n
        cgc_snprintdecimal(&v0, 64, *(&(&userPasswords)[4 + 120 * a0 + 12 * v2]));\n
        cgc_my_printf(&v0);\n
        cgc_my_printf(\" , \");\n
        cgc_snprintdecimal(&v0, 64, *(&(&userPasswords)[8 + 120 * a0 + 12 * v2]));\n
        cgc_my_printf(&v0);\n
        cgc_my_printf(\"\\n
\");\n
        v1 += 1;\n
LABEL_403357:\n
    }\n
    return v2 + 1;\n
}\n
", "4207472:cgc_checkLogin": "long long cgc_checkLogin(unsigned int *a0, unsigned int *a1, unsigned int *a2, unsigned int *a3)\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    if (cgc_largeIntCmp(a1, a2) <= 0 && cgc_largeIntCmp(a2, a3) <= 0 && cgc_largeIntCmp(a3, a0) <= 0)\n
    {\n
        for (v0 = 0; v0 < 8; v0 += 1)\n
        {\n
            (&v2)[v0] = 0;\n
        }\n
        cgc_largeIntMul(&v1, a1, a1);\n
        cgc_largeIntMul(&v1, &v1, a1);\n
        cgc_largeIntAdd(&v2, &v2, &v1);\n
        cgc_largeIntMul(&v1, a2, a2);\n
        cgc_largeIntMul(&v1, &v1, a2);\n
        cgc_largeIntAdd(&v2, &v2, &v1);\n
        cgc_largeIntMul(&v1, a3, a3);\n
        cgc_largeIntMul(&v1, &v1, a3);\n
        cgc_largeIntAdd(&v2, &v2, &v1);\n
        cgc_largeIntMul(&v1, a0, a0);\n
        cgc_largeIntMul(&v1, &v1, a0);\n
        v3 = !cgc_largeIntCmp(&v1, &v2);\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4207847:sub_4034e7": null, "4207856:main": "extern unsigned int userToPassword;\n
\n
int main(unsigned long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned int v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    unsigned int v3;  // [bp-0xa0]\n
    unsigned int v4;  // [bp-0x9c]\n
    unsigned int v5;  // [bp-0x98]\n
    unsigned int v6;  // [bp-0x78]\n
    unsigned int v7;  // [bp-0x58]\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned long v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v11 = 0;\n
    v10 = a0;\n
    v9 = a1;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_initTable();\n
    cgc_initPasswords();\n
    while (true)\n
    {\n
        cgc_my_printf(\"Welcome to the Diophantine Password Wallet\\n
\");\n
        cgc_my_printf(\"Login\\n
\");\n
        cgc_readLine(0, &v0, 64);\n
        v4 = cgc_strToUint32(&v0);\n
        cgc_my_printf(\"First Secret\\n
\");\n
        cgc_readLine(0, &v0, 64);\n
        v3 = cgc_strToUint32(&v0);\n
        cgc_my_printf(\"Second Secret\\n
\");\n
        cgc_readLine(0, &v0, 64);\n
        v2 = cgc_strToUint32(&v0);\n
        cgc_my_printf(\"Third Secret\\n
\");\n
        cgc_readLine(0, &v0, 64);\n
        v1 = cgc_strToUint32(&v0);\n
        if (v4 >= 21)\n
        {\n
            cgc_my_printf(\"User Not Found\\n
\");\n
            v11 = 0;\n
            return v11;\n
        }\n
        cgc_intToLargeInt(&v8, (&userToPassword)[v4]);\n
        cgc_intToLargeInt(&v7, v3);\n
        cgc_intToLargeInt(&v6, v2);\n
        cgc_intToLargeInt(&v5, v1);\n
        if (!cgc_checkLogin(&v8, &v7, &v6, &v5))\n
        {\n
            cgc_my_printf(\"Login failed\\n
\");\n
            v11 = 0;\n
            return v11;\n
        }\n
        *(&(&handlerTable)[20000 * v3 + 400 * v2 + 8 * v1])();\n
    }\n
}\n
", "4208395:sub_40370b": null, "4208400:cgc_intToLargeInt": "long long cgc_intToLargeInt(unsigned int a0[8], unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    if (!a0)\n
        return a0;\n
    for (v0 = 0; v0 < 8; v0 += 1)\n
    {\n
        a0[v0] = 0;\n
    }\n
    a0[7] = a1;\n
    return a0;\n
}\n
", "4208500:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}