{"4198400:_init": "extern struct_0 *g_406920;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_406920;\n
    if (g_406920)\n
        v1 = g_406920();\n
    return v1;\n
}\n
", "4198432:sub_401020": "extern unsigned long long g_406940;\n
\n
long long sub_401020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_406940;\n
    goto *(4221256);\n
}\n
", "4198444:sub_40102c": null, "4198448:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198464:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198480:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198496:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198512:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198528:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4221232);\n
}\n
", "4198544:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4198581:sub_4010b5": null, "4198582:sub_4010b6": null, "4198592:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_406918;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4198633:sub_4010e9": null, "4198640:register_tm_clones": "extern unsigned long long g_406928;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4198697:sub_401129": null, "4198704:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_406930;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_406930)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4198757:sub_401165": null, "4198761:sub_401169": null, "4198768:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198777:sub_401179": null, "4198784:cgc_putc": "long long cgc_putc(unsigned long long a0)\n
{\n
    unsigned long long v1;  // rsi\n
    unsigned long long v2;  // rdx\n
    unsigned long long v3;  // rcx\n
\n
    if (cgc_transmit(a0, v1, v2, v3))\n
    {\n
        cgc__terminate(a0);\n
        return a0;\n
    }\n
    return a0;\n
}\n
", "4198846:sub_4011be": null, "4198848:cgc_vprintf": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_vprintf(char *a0, struct_1 *a1)\n
{\n
    unsigned int *v0;  // [bp-0xe0], Other Possible Types: unsigned long\n
    struct_1 *v1;  // [bp-0xd8]\n
    unsigned int v2;  // [bp-0xcc]\n
    unsigned int *v3;  // [bp-0xc8], Other Possible Types: unsigned long\n
    struct_1 *v4;  // [bp-0xc0]\n
    unsigned int v5;  // [bp-0xb4]\n
    struct struct_0 **v6;  // [bp-0xb0], Other Possible Types: unsigned long\n
    struct_1 *v7;  // [bp-0xa8]\n
    unsigned int v8;  // [bp-0x9c]\n
    unsigned int v9;  // [bp-0x98]\n
    unsigned int v10;  // [bp-0x94]\n
    unsigned int v11;  // [bp-0x90]\n
    unsigned int v12;  // [bp-0x8c]\n
    char v13;  // [bp-0x88]\n
    unsigned int v14;  // [bp-0x60]\n
    unsigned int v15;  // [bp-0x5c]\n
    char v16;  // [bp-0x58]\n
    char *v17;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v18;  // [bp-0x24]\n
    char *v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0xc]\n
    struct_1 *v22;  // rcx\n
    unsigned long long v23;  // rdx\n
    unsigned int *v24;  // rax\n
    struct_1 *v25;  // rcx\n
    unsigned int *v26;  // rdx\n
    struct_1 *v27;  // rcx\n
    unsigned long long v28;  // rdx\n
    struct struct_0 **v29;  // rax\n
    struct_1 *v30;  // rcx\n
    struct struct_0 **v31;  // rdx\n
    struct_1 *v32;  // rcx\n
    unsigned long long v33;  // rdx\n
    unsigned int *v34;  // rax\n
    struct_1 *v35;  // rcx\n
    unsigned int *v36;  // rdx\n
    struct_3 *v37;  // rax\n
    unsigned long v38;  // rax\n
    unsigned long v39;  // rax\n
    unsigned int v40;  // eax\n
    unsigned long v41;  // rax\n
    unsigned int v42;  // eax\n
    unsigned int v44;  // eax\n
\n
    v19 = a0;\n
    v18 = 0;\n
    if (!v19)\n
    {\n
        v20 = -1;\n
        return v20;\n
    }\n
    while (true)\n
    {\n
        if (!*(v19))\n
        {\n
            v20 = v18;\n
            return v20;\n
        }\n
        if (*(v19) == 36)\n
            break;\n
        cgc_putc(*(v19));\n
        v19 += 1;\n
        v18 += 1;\n
LABEL_401682:\n
    }\n
    v19 += 1;\n
    v9 = *(v19);\n
    if (!v9)\n
    {\n
        v20 = -1;\n
        return v20;\n
    }\n
    if (v9 == 36)\n
    {\n
        cgc_putc(36);\n
        goto LABEL_401650;\n
    }\n
    if (v9 != 88)\n
    {\n
        if (v9 == 100)\n
        {\n
            v4 = a1;\n
            v5 = v4->field_0;\n
            if (v5 > 40)\n
            {\n
                v25 = v4;\n
                v26 = v25->field_8;\n
                v25->field_8 = &v26[2];\n
                v3 = v26;\n
            }\n
            else\n
            {\n
                v22 = v4;\n
                v23 = v5;\n
                v24 = v23 + v22->field_10;\n
                v22->field_0 = v23 + 8;\n
                v3 = v24;\n
            }\n
            v14 = *(v3);\n
            v15 = 0;\n
            if (v14 < 0)\n
            {\n
                v14 = -(v14);\n
                cgc_putc(45);\n
                v18 += 1;\n
            }\n
            else\n
            {\n
                if (!v14)\n
                {\n
                    v15 = 1;\n
                    v16 = 48;\n
                }\n
            }\n
            while (v14)\n
            {\n
                v41 = v15;\n
                v15 = v41 + 1;\n
                (&v16)[v41] = ((v14 >> 31 CONCAT v14) /m 10 >> 32) + 48;\n
                v42 = v14;\n
                v14 = (v42 >> 31 CONCAT v42) /m 10;\n
                if (v15 >= 32)\n
                    break;\n
            }\n
            while (true)\n
            {\n
                v44 = v15;\n
                v15 = v44 - 1;\n
                if (v44 <= 0)\n
                    break;\n
                cgc_putc((&v16)[v15]);\n
                v18 += 1;\n
            }\n
            goto LABEL_401650;\n
        }\n
        else if (v9 == 115)\n
        {\n
            v7 = a1;\n
            v8 = v7->field_0;\n
            if (v8 > 40)\n
            {\n
                v30 = v7;\n
                v31 = v30->field_8;\n
                v30->field_8 = &v31[1];\n
                v6 = v31;\n
            }\n
            else\n
            {\n
                v27 = v7;\n
                v28 = v8;\n
                v29 = v28 + v27->field_10;\n
                v27->field_0 = v28 + 8;\n
                v6 = v29;\n
            }\n
            v17 = *(v6);\n
            while (*(v17))\n
            {\n
                cgc_putc(*(v17));\n
                v18 += 1;\n
                v17 += 1;\n
                if (!v17)\n
                    break;\n
            }\n
            goto LABEL_401650;\n
        }\n
        else if (v9 != 120)\n
        {\n
            v20 = -1;\n
            return v20;\n
        }\n
    }\n
    v1 = a1;\n
    v2 = v1->field_0;\n
    if (v2 <= 40)\n
    {\n
        v32 = v1;\n
        v33 = v2;\n
        v34 = v33 + v32->field_10;\n
        v32->field_0 = v33 + 8;\n
        v0 = v34;\n
    }\n
    else\n
    {\n
        v35 = v1;\n
        v36 = v35->field_8;\n
        v35->field_8 = &v36[2];\n
        v0 = v36;\n
    }\n
    v11 = *(v0);\n
    v12 = 0;\n
    while (v11)\n
    {\n
        v10 = v11 & 15;\n
        v11 >>= 4;\n
        if (v10 < 10)\n
        {\n
            v37 = v12;\n
            v12 = v37 + 1;\n
            *((&v13 + v37)) = v10 + 48;\n
        }\n
        else if (*(v19) != 120)\n
        {\n
            v39 = v12;\n
            v12 = v39 + 1;\n
            (&v13)[v39] = v10 + 55;\n
        }\n
        else\n
        {\n
            v38 = v12;\n
            v12 = v38 + 1;\n
            (&v13)[v38] = v10 + 87;\n
        }\n
        if (v12 >= 32)\n
            break;\n
    }\n
    while (true)\n
    {\n
        v40 = v12;\n
        v12 = v40 - 1;\n
        if (v40 <= 0)\n
            break;\n
        cgc_putc((&v13)[v12]);\n
        v18 += 1;\n
    }\n
LABEL_401650:\n
    v19 += 1;\n
    goto LABEL_401682;\n
}\n
", "4200089:sub_401699": null, "4200096:cgc_printf": "long long cgc_printf(char *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    unsigned long v3;  // [bp-0xd0]\n
    unsigned long v4;  // [bp-0xc8]\n
    unsigned long v5;  // [bp-0xc0]\n
    int v6;  // [bp-0xb8]\n
    int v7;  // [bp-0xa8]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned long v17;  // [bp-0x20]\n
    unsigned long v18;  // [bp-0x18]\n
    unsigned long v19;  // [bp+0x8]\n
    char v20;  // al\n
    int v21;  // xmm0\n
    int v22;  // xmm1\n
    int v23;  // xmm2\n
    int v24;  // xmm3\n
    int v25;  // xmm4\n
    int v26;  // xmm5\n
    int v27;  // xmm6\n
    int v28;  // xmm7\n
    unsigned long v29;  // r9\n
\n
    if (v20)\n
    {\n
        v6 = v21;\n
        v7 = v22;\n
        v8 = v23;\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
    }\n
    v5 = v29;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v18 = &v0;\n
    v17 = &v19;\n
    v16 = 48;\n
    v15 = 8;\n
    v14 = cgc_vprintf(a0, &v15);\n
    return v14;\n
}\n
", "4200256:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 != 32 && a0 != 9 && a0 != 10 && a0 != 11 && a0 != 12 && a0 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4200347:sub_40179b": null, "4200352:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 48 && a0 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4200403:sub_4017d3": null, "4200416:cgc_isnan": "long long cgc_isnan()\n
{\n
    return ((CmpF(0, 0) & 69) >> 2 & 1);\n
}\n
", "4200444:sub_4017fc": null, "4200448:cgc_isinf": "double cgc_isinf()\n
{\n
    return 0;\n
}\n
", "4200500:sub_401834": null, "4200512:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 65 && a0 <= 90)\n
    {\n
        v0 = a0 + 32;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4200567:sub_401877": null, "4200576:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 >= 97 && a0 <= 122)\n
    {\n
        v0 = a0 + -32;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4200631:sub_4018b7": null, "4200640:cgc_strcmp": "long long cgc_strcmp(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((a0 + v0)) && !*((a1 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!*((a1 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) < *((a1 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((a0 + v0)) <= *((a1 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4200895:sub_4019bf": null, "4200896:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a1 + v0)); v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4200999:sub_401a27": null, "4201008:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        if (!*((a1 + v0)))\n
            break;\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4201129:sub_401aa9": null, "4201136:cgc_memcpy": "long long cgc_memcpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    if (a2 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a2; v0 += 4)\n
        {\n
            *((a0 + v0)) = *((a1 + v0));\n
        }\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        *((a0 + v0)) = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4201302:sub_401b56": null, "4201312:cgc_memset": "long long cgc_memset(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    v1 = 0;\n
    if (a2 >= 4)\n
    {\n
        for (v0 = a1 * 0x1000000 | a1 * 0x10000 | a1 * 0x100 | a1; v1 + 3 < a2; v1 += 4)\n
        {\n
            *((a0 + v1)) = v0;\n
        }\n
    }\n
    for (; v1 < a2; v1 += 1)\n
    {\n
        *((a0 + v1)) = a1;\n
    }\n
    return a0;\n
}\n
", "4201496:sub_401c18": null, "4201504:cgc_atoi": "long long cgc_atoi(char *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 1;\n
    for (v0 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    for (v1 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45)\n
        {\n
            if (!v1)\n
            {\n
                v2 = -1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v4) != 43)\n
            {\n
                if (!cgc_isdigit(*(v4)))\n
                    break;\n
                if (v1 && v1 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v1 = 1;\n
                v3 = v3 * 10 + *(v4) - 48;\n
                v0 += 1;\n
                if (v0 == 9)\n
                    break;\n
            }\n
            else if (!v1)\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v3 * v2;\n
    return v5;\n
}\n
", "4201896:sub_401da8": null, "4201904:cgc_strlen": "long long cgc_strlen(unsigned long a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; *((a0 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4201964:sub_401dec": null, "4201968:cgc_abs": "long long cgc_abs(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0 < 0)\n
    {\n
        v0 = -(a0);\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4202009:sub_401e19": null, "4202016:cgc_CreateCanvas": "long long cgc_CreateCanvas(unsigned long long *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned short *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (a3 > 6)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (cgc_allocate(a0, a1, a2))\n
        cgc__terminate(a0);\n
    cgc_memset(v1, 0, 120);\n
    *(v1) = a1;\n
    v1[1] = a2;\n
    for (v0 = 0; v0 < a3; v0 += 1)\n
    {\n
        if (cgc_allocate(a0, a1, a2, a3))\n
            cgc__terminate(a0);\n
        cgc_memset(*(&v1[4 + 4 * v0]), 20, a2 * a1);\n
    }\n
    *(&v1[2]) = a3;\n
    *(a0) = v1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4202315:sub_401f4b": null, "4202320:cgc_DestroyCanvas": "long long cgc_DestroyCanvas(struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned long long v3;  // rsi\n
\n
    if (!*(a0))\n
        return a0;\n
    for (v0 = 0; v0 < *(a0)->field_4; v0 += 1)\n
    {\n
        if (*(&*(a0)->padding_0[8 * v0 + 8]))\n
        {\n
            cgc_deallocate(a0, v3);\n
            *(&*(a0)->padding_0[8 * v0 + 8]) = 0;\n
        }\n
    }\n
    cgc_deallocate(a0, v3);\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4202524:sub_40201c": null, "4202528:cgc_FlattenCanvas": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
} struct_0;\n
\n
long long cgc_FlattenCanvas(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned short v5;  // si\n
    unsigned short v6;  // dx\n
\n
    for (v3 = 1; v3 < a0->field_4; v3 += 1)\n
    {\n
        for (v2 = 0; v2 < a0->field_0; v2 += 1)\n
        {\n
            for (v1 = 0; v1 < a0->field_2; v1 += 1)\n
            {\n
                v0 = cgc_GetColorIndex(a0, v2, v1, v3);\n
                if (v0 != 20)\n
                {\n
                    v5 = v2;\n
                    v6 = v1;\n
                    cgc_SetColor(a0, rsi<8>, rdx<8>, 0, v0);\n
                }\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4202762:sub_40210a": null, "4202768:cgc_SendAll": "long long cgc_SendAll(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = cgc_transmit(a0, a1, v6, v7);\n
        if (v0)\n
            break;\n
        if (!*(&v2))\n
            break;\n
        v1 = *(&v2) + v1;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4202905:sub_402199": null, "4202912:cgc_SendNull": "long long cgc_SendNull(unsigned long long a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
    unsigned long long v8;  // rcx\n
\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = cgc_transmit(a0, v6, v7, v8);\n
        if (v0)\n
            break;\n
        if (*(&v1) != 1)\n
            break;\n
        v2 += 1;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4203042:sub_402222": null, "4203056:cgc_ReceiveAll": "long long cgc_ReceiveAll(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = cgc_receive(a0, a1, v6, v7);\n
        if (v0)\n
            break;\n
        if (!*(&v1))\n
            break;\n
        v2 = *(&v1) + v2;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_GetColor": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
long long cgc_GetColor(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned long v1;  // [bp-0x20]\n
\n
    v1 = *(&a0[2 + 2 * a3]);\n
    v0 = *((v1 + a0->field_2 * a1 + a2));\n
    return 14 + a0 + 3 * v0;\n
}\n
", "4203300:sub_402324": null, "4203312:cgc_GetColorIndex": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
long long cgc_GetColorIndex(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
\n
    v0 = *(&a0[2 + 2 * a3]);\n
    return *((v0 + a0->field_2 * a1 + a2));\n
}\n
", "4203390:sub_40237e": null, "4203392:cgc_SetColor": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
long long cgc_SetColor(struct_0 *a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long v0;  // [bp-0x20]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = *(&a0[2 + 2 * a3]);\n
    v0 = v2;\n
    if (v0)\n
    {\n
        v2 = v0;\n
        *((v2 + a0->field_2 * a1 + a2)) = a4;\n
    }\n
    return v2;\n
}\n
", "4203486:sub_4023de": null, "4203488:cgc_PaintTriangle": "long long cgc_PaintTriangle(unsigned short a0[2], unsigned long a1, unsigned long a2, unsigned long a3, unsigned short a4[6])\n
{\n
    unsigned int v0;  // [bp-0x88]\n
    unsigned int v1;  // [bp-0x80]\n
    unsigned int v2;  // [bp-0x7c]\n
    unsigned int v3;  // [bp-0x78]\n
    unsigned int v4;  // [bp-0x74]\n
    unsigned int v5;  // [bp-0x70]\n
    unsigned int v6;  // [bp-0x6c]\n
    unsigned int v7;  // [bp-0x68]\n
    unsigned int v8;  // [bp-0x64]\n
    unsigned int v9;  // [bp-0x60]\n
    unsigned int v10;  // [bp-0x5c]\n
    unsigned int v11;  // [bp-0x58]\n
    unsigned int v12;  // [bp-0x54]\n
    unsigned short *v13;  // [bp-0x50], Other Possible Types: unsigned long\n
    unsigned short v14[6];  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned short *v15;  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned short v16[6];  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned short *v17;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned short v18[6];  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned short v19[6];  // [bp-0x20]\n
    unsigned long long v21;  // rax, Other Possible Types: unsigned long\n
    unsigned short v22;  // r8w\n
    unsigned short v23;  // r9w\n
    unsigned long long v24;  // r9\n
    unsigned short v25;  // r8w\n
    unsigned short v26;  // r9w\n
    unsigned short v27;  // r8w\n
    unsigned short v28;  // r9w\n
    unsigned short v29;  // r8w\n
    unsigned short v30;  // r9w\n
    unsigned long long v31;  // r9\n
    unsigned int v32;  // eax\n
    unsigned int v34;  // eax\n
    unsigned short v36;  // r9w\n
    unsigned long v37;  // r9\n
    unsigned short v38;  // r9w\n
    unsigned int v39;  // eax\n
    unsigned int v41;  // eax\n
\n
    *(&v19[0]) = a4;\n
    v21 = a4[0];\n
    if (v21 >= a0[1])\n
        return v21;\n
    v21 = a4[2];\n
    if (v21 < a0[1])\n
    {\n
        v21 = a4[4];\n
        if (v21 < a0[1])\n
        {\n
            v21 = a4[1];\n
            if (v21 >= a0[0])\n
                return v21;\n
            v21 = a4[3];\n
            if (v21 < a0[0])\n
            {\n
                v21 = a4[5];\n
                if (v21 < a0[0])\n
                {\n
                    if (a3)\n
                    {\n
                        if (v19[1] > a4[3])\n
                        {\n
                            *(&v18[0]) = &a4[2];\n
                            v17 = &a4[3];\n
                            *(&v16[0]) = a4;\n
                            v15 = &a4[1];\n
                        }\n
                        else\n
                        {\n
                            v18 = a4;\n
                            v17 = &a4[1];\n
                            v16 = &a4[2];\n
                            v15 = &a4[3];\n
                        }\n
                        if (*(v15) <= a4[5])\n
                        {\n
                            v14 = &a4[4];\n
                            v13 = &a4[5];\n
                        }\n
                        else\n
                        {\n
                            *(&v14[0]) = v16;\n
                            v13 = v15;\n
                            if (*(v17) > a4[5])\n
                            {\n
                                *(&v16[0]) = v18;\n
                                v15 = v17;\n
                                *(&v18[0]) = &a4[4];\n
                                v17 = &a4[5];\n
                            }\n
                            else\n
                            {\n
                                *(&v16[0]) = &a4[4];\n
                                v15 = &a4[5];\n
                            }\n
                        }\n
                        v11 = *(v18);\n
                        v10 = *(v18);\n
                        if (*(v16) < v11)\n
                        {\n
                            v11 = *(v16);\n
                        }\n
                        else if (*(v16) > v10)\n
                        {\n
                            v10 = *(v16);\n
                        }\n
                        if (*(v14) < v11)\n
                        {\n
                            v11 = *(v14);\n
                        }\n
                        else if (*(v14) > v10)\n
                        {\n
                            v10 = *(v14);\n
                        }\n
                        if (*(v13) != *(v17))\n
                        {\n
                            if (*(v15) == *(v13))\n
                                v12 = *(v15);\n
                            else\n
                                v12 = *(v15) - 1;\n
                            v8 = 0;\n
                            v7 = 0;\n
                            if (*(v17) == *(v15))\n
                            {\n
                                v11 = *(v18);\n
                                v10 = *(v16);\n
                                if (v11 > v10)\n
                                {\n
                                    v10 = *(v18);\n
                                    v11 = *(v16);\n
                                }\n
                                if (v10 > v11)\n
                                {\n
                                    a4 = *(v17);\n
                                    v38 = v10 - 1;\n
                                    v0 = *(v17);\n
                                    cgc_ConnectPoints(a0, a1, a2, v11, r8<8>, v37);\n
                                }\n
                                v9 = *(v15);\n
                            }\n
                            else\n
                            {\n
                                for (v9 = *(v17); v9 <= v12; v9 += 1)\n
                                {\n
                                    v3 = *(v18);\n
                                    v32 = v7;\n
                                    v10 = v3 + (v32 >> 31 CONCAT v32) /m (*(v13) - *(v17));\n
                                    v4 = *(v18);\n
                                    v34 = v8;\n
                                    v11 = v4 + (v34 >> 31 CONCAT v34) /m (*(v15) - *(v17));\n
                                    v7 = *(v14) - *(v18) + v7;\n
                                    v8 = *(v16) - *(v18) + v8;\n
                                    if (v11 > v10)\n
                                    {\n
                                        v6 = v11;\n
                                        v11 = v10;\n
                                        v10 = v6;\n
                                    }\n
                                    if (v10 > v11)\n
                                    {\n
                                        a4 = v9;\n
                                        v36 = v10 - 1;\n
                                        v0 = v9;\n
                                        cgc_ConnectPoints(a0, a1, a2, v11, r8<8>, r9<8>);\n
                                    }\n
                                }\n
                            }\n
                            v7 = (v9 - *(v17)) * (*(v14) - *(v18));\n
                            v8 = (v9 - *(v15)) * (*(v14) - *(v16));\n
                            while (true)\n
                            {\n
                                v21 = v9;\n
                                if (v21 > *(v13))\n
                                    break;\n
                                v1 = *(v18);\n
                                v39 = v7;\n
                                v10 = v1 + (v39 >> 31 CONCAT v39) /m (*(v13) - *(v17));\n
                                v2 = *(v16);\n
                                v41 = v8;\n
                                v11 = v2 + (v41 >> 31 CONCAT v41) /m (*(v13) - *(v15));\n
                                v7 = *(v14) - *(v18) + v7;\n
                                v8 = *(v14) - *(v16) + v8;\n
                                if (v11 > v10)\n
                                {\n
                                    v5 = v11;\n
                                    v11 = v10;\n
                                    v10 = v5;\n
                                }\n
                                if (v10 > v11)\n
                                {\n
                                    *(&a4) = v9;\n
                                    *(&v37) = v10 - 1;\n
                                    v0 = v9;\n
                                    cgc_ConnectPoints(a0, a1, a2, v11, a4, v37);\n
                                }\n
                                v9 += 1;\n
                            }\n
                            return v9;\n
                        }\n
                        else\n
                        {\n
                            v21 = v10;\n
                            if (v21 <= v11)\n
                                return v21;\n
                            v29 = *(v17);\n
                            v30 = v10 - 1;\n
                            v0 = *(v17);\n
                            v21 = cgc_ConnectPoints(a0, a1, a2, v11, r8<8>, v31);\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v22 = a4[1];\n
                        v23 = a4[2];\n
                        v0 = a4[3];\n
                        cgc_ConnectPoints(a0, a1, a2, a4[0], r8<8>, v24);\n
                        v25 = a4[5];\n
                        v26 = a4[0];\n
                        v0 = a4[1];\n
                        cgc_ConnectPoints(a0, a1, a2, a4[4], r8<8>, r9<8>);\n
                        v27 = a4[3];\n
                        v28 = a4[4];\n
                        v0 = a4[5];\n
                        v21 = cgc_ConnectPoints(a0, a1, a2, a4[2], r8<8>, r9<8>);\n
                        return v21;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4205290:sub_402aea": null, "4205296:cgc_ConnectPoints": "long long cgc_ConnectPoints(void* a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned short v10)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    unsigned int v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
\n
    if (a5 > a3)\n
    {\n
        v9 = a5 - a3;\n
        v6 = 1;\n
    }\n
    else\n
    {\n
        v9 = a3 - a5;\n
        v6 = -1;\n
    }\n
    if (v10 > a4)\n
    {\n
        v8 = v10 - a4;\n
        v5 = 1;\n
    }\n
    else\n
    {\n
        v8 = a4 - v10;\n
        v5 = -1;\n
    }\n
    if (v8 > v9)\n
        v7 = v8;\n
    else\n
        v7 = v9;\n
    v4 = a3;\n
    v3 = a4;\n
    v2 = 0;\n
    v1 = 0;\n
    for (v0 = 0; v0 <= v7 + 1; v0 += 1)\n
    {\n
        cgc_SetColor(a0, v3, v4, a1, a2);\n
        v2 = v9 + v2;\n
        v1 = v8 + v1;\n
        if (v2 > v7)\n
        {\n
            v4 = v6 + v4;\n
            v2 -= v7;\n
        }\n
        if (v1 > v7)\n
        {\n
            v3 = v5 + v3;\n
            v1 -= v7;\n
        }\n
    }\n
    return v0;\n
}\n
", "4205714:sub_402c92": null, "4205728:cgc_PaintRectangle": "long long cgc_PaintRectangle(unsigned short a0[2], unsigned long a1, unsigned long a2, unsigned long a3, unsigned short a4[4])\n
{\n
    unsigned short v0;  // [bp-0x22]\n
    unsigned short v1[4];  // [bp-0x20]\n
    char v2;  // [bp-0x13]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned short v5;  // r8w\n
    unsigned short v6;  // r9w\n
    unsigned int v7;  // r9\n
    unsigned long v8;  // r8\n
    unsigned long v9;  // r9\n
    unsigned long v10;  // rcx\n
    unsigned long v11;  // r9\n
    unsigned long v12;  // r9\n
    unsigned long v13;  // r8\n
    unsigned long v14;  // r9\n
\n
    v2 = a3;\n
    *(&v1[0]) = a4;\n
    v4 = v1[0];\n
    if (v4 >= a0[1])\n
        return v4;\n
    v4 = v1[1];\n
    if (v4 < a0[0])\n
    {\n
        v4 = v1[0] + v1[2];\n
        if (v4 >= a0[1])\n
            return v1[0] + v1[2];\n
        v4 = v1[1] + v1[3];\n
        if (v4 >= a0[0])\n
            return v1[1] + v1[3];\n
        if (!v1[2])\n
        {\n
            v4 = v1[3];\n
            if (!v4)\n
                return v1[3];\n
        }\n
        v5 = v1[1];\n
        v6 = v1[0];\n
        cgc_ConnectPoints(a0, a1, a2, v1[0], r8<8>, v7, v1[1] + v1[3]);\n
        v8 = v1[3];\n
        *(&v8) = v1[1] + v8;\n
        v9 = v1[2];\n
        *(&v9) = v1[0] + v9;\n
        cgc_ConnectPoints(a0, a1, a2, v1[0], v8, v9, v1[1] + v1[3]);\n
        v10 = v1[2];\n
        *(&v10) = v1[0] + v10;\n
        v11 = v1[2];\n
        *(&v11) = v1[0] + v11;\n
        cgc_ConnectPoints(a0, a1, a2, v10, v1[1], v11, v1[1] + v1[3]);\n
        v12 = v1[2];\n
        *(&v12) = v1[0] + v12;\n
        cgc_ConnectPoints(a0, a1, a2, v1[0], v1[1], v12, v1[1]);\n
        v4 = v2;\n
        if (v4 != 1)\n
            return v2;\n
        v4 = v1[2];\n
        if (v4 <= 1)\n
            return v1[2];\n
        v0 = 1;\n
        while (true)\n
        {\n
            v4 = v0;\n
            if (v4 >= v1[3])\n
                break;\n
            v13 = v0;\n
            *(&v13) = v1[1] + v13;\n
            v14 = v1[2];\n
            *(&v14) = v1[0] + v14 - 1;\n
            cgc_ConnectPoints(a0, a1, a2, v1[0] + 1, v13, v14, v1[1] + v0);\n
            v0 += 1;\n
        }\n
        return v0;\n
    }\n
}\n
", "4206519:sub_402fb7": null, "4206528:cgc_PaintSquare": "long long cgc_PaintSquare(unsigned short a0[2], unsigned long a1, unsigned long a2, unsigned long a3, unsigned short a4[3])\n
{\n
    unsigned short v0;  // [bp-0x22]\n
    unsigned short v1[3];  // [bp-0x20]\n
    char v2;  // [bp-0x13]\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned short v5;  // r8w\n
    unsigned short v6;  // r9w\n
    unsigned int v7;  // r9\n
    unsigned long v8;  // r8\n
    unsigned long v9;  // r9\n
    unsigned long v10;  // rcx\n
    unsigned long v11;  // r9\n
    unsigned long v12;  // r9\n
    unsigned long v13;  // r8\n
    unsigned long v14;  // r9\n
\n
    v2 = a3;\n
    *(&v1) = a4;\n
    v4 = v1[0];\n
    if (v4 >= a0[1])\n
        return v4;\n
    v4 = v1[1];\n
    if (v4 < a0[0])\n
    {\n
        v4 = v1[0] + v1[2];\n
        if (v4 >= a0[1])\n
            return v1[0] + v1[2];\n
        v4 = v1[1] + v1[2];\n
        if (v4 >= a0[0])\n
            return v1[1] + v1[2];\n
        v4 = v1[2];\n
        if (!v4)\n
            return v1[2];\n
        v5 = v1[1];\n
        v6 = v1[0];\n
        cgc_ConnectPoints(a0, a1, a2, v1[0], r8<8>, v7, v1[1] + v1[2]);\n
        v8 = v1[2];\n
        *(&v8) = v1[1] + v8;\n
        v9 = v1[2];\n
        *(&v9) = v1[0] + v9;\n
        cgc_ConnectPoints(a0, a1, a2, v1[0], v8, v9, v1[1] + v1[2]);\n
        v10 = v1[2];\n
        *(&v10) = v1[0] + v10;\n
        v11 = v1[2];\n
        *(&v11) = v1[0] + v11;\n
        cgc_ConnectPoints(a0, a1, a2, v10, v1[1], v11, v1[1] + v1[2]);\n
        v12 = v1[2];\n
        *(&v12) = v1[0] + v12;\n
        cgc_ConnectPoints(a0, a1, a2, v1[0], v1[1], v12, v1[1]);\n
        v4 = v2;\n
        if (v4 != 1)\n
            return v2;\n
        v4 = v1[2];\n
        if (v4 <= 1)\n
            return v1[2];\n
        v0 = 1;\n
        while (true)\n
        {\n
            v4 = v0;\n
            if (v4 >= v1[2])\n
                break;\n
            v13 = v0;\n
            *(&v13) = v1[1] + v13;\n
            v14 = v1[2];\n
            *(&v14) = v1[0] + v14 - 1;\n
            cgc_ConnectPoints(a0, a1, a2, v1[0] + 1, v13, v14, v1[1] + v0);\n
            v0 += 1;\n
        }\n
        return v0;\n
    }\n
}\n
", "4207302:sub_4032c6": null, "4207312:cgc_PaintLine": "long long cgc_PaintLine(unsigned short a0[2], unsigned long a1, unsigned long a2, unsigned long a3, unsigned short a4[4])\n
{\n
    char v0;  // [bp-0x13]\n
    unsigned long long v2;  // rax, Other Possible Types: unsigned long\n
    unsigned short v3;  // r8w\n
    unsigned short v4;  // r9w\n
    unsigned int v5;  // r9\n
\n
    v0 = a3;\n
    v2 = a4[0];\n
    if (v2 >= a0[1])\n
        return v2;\n
    v2 = a4[0];\n
    if (v2 <= a4[2])\n
    {\n
        v2 = a4[1];\n
        if (v2 >= a0[0])\n
            return v2;\n
        v2 = a4[1];\n
        if (v2 <= a4[3])\n
        {\n
            v2 = a4[3];\n
            if (v2 >= a0[0])\n
                return v2;\n
            v2 = a4[2];\n
            if (v2 < a0[1])\n
            {\n
                v3 = a4[1];\n
                v4 = a4[2];\n
                v2 = cgc_ConnectPoints(a0, a1, a2, a4[0], r8<8>, v5, a4[3]);\n
                return v2;\n
            }\n
        }\n
    }\n
}\n
", "4207575:sub_4033d7": null, "4207584:cgc_PaintCircle": "long long cgc_PaintCircle(unsigned short a0[2], unsigned long a1, unsigned long a2, unsigned long a3, unsigned short a4[3])\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned long long v8;  // rax, Other Possible Types: unsigned long\n
    unsigned short v9;  // r8w\n
    unsigned short v10;  // r9w\n
    unsigned long v11;  // r9, Other Possible Types: unsigned short\n
    unsigned short v12;  // r9w\n
\n
    v8 = a4[0];\n
    if (v8 >= a0[1])\n
        return v8;\n
    v8 = a4[1];\n
    if (v8 < a0[0])\n
    {\n
        v8 = a4[0] + a4[2];\n
        if (v8 >= a0[1])\n
            return v8;\n
        v8 = a4[1] + a4[2];\n
        if (v8 < a0[0])\n
        {\n
            v8 = a4[0] - a4[2];\n
            if (v8 < 0)\n
                return v8;\n
            v8 = a4[1] - a4[2];\n
            if (v8 >= 0)\n
            {\n
                v6 = 0;\n
                v5 = a4[2];\n
                v2 = 1 - a4[2];\n
                v1 = 1;\n
                v0 = a4[2] * -2;\n
                v4 = a4[0];\n
                v3 = a4[1];\n
                if (a3)\n
                {\n
                    v9 = v3 - v5;\n
                    v10 = v4;\n
                    cgc_ConnectPoints(a0, a1, a2, v4, r8<8>, v11, v3 + v5 - 1);\n
                }\n
                else\n
                {\n
                    cgc_SetColor(a0, v3 + a4[2], v4, a1, a2);\n
                    cgc_SetColor(a0, v3 - a4[2], v4, a1, a2);\n
                    cgc_SetColor(a0, v3, v4 + a4[2], a1, a2);\n
                    cgc_SetColor(a0, v3, v4 - a4[2], a1, a2);\n
                }\n
                while (true)\n
                {\n
                    v8 = v6;\n
                    if (v8 >= v5)\n
                        break;\n
                    if (v2 >= 0)\n
                    {\n
                        v5 -= 1;\n
                        v0 += 2;\n
                        v2 = v0 + v2;\n
                    }\n
                    v6 += 1;\n
                    v1 += 2;\n
                    v2 = v1 + v2;\n
                    if (!a3)\n
                    {\n
                        cgc_SetColor(a0, v3 + v5, v4 + v6, a1, a2);\n
                        cgc_SetColor(a0, v3 + v5, v4 - v6, a1, a2);\n
                        cgc_SetColor(a0, v3 - v5, v4 + v6, a1, a2);\n
                        cgc_SetColor(a0, v3 - v5, v4 - v6, a1, a2);\n
                        cgc_SetColor(a0, v3 + v6, v4 + v5, a1, a2);\n
                        cgc_SetColor(a0, v3 + v6, v4 - v5, a1, a2);\n
                        cgc_SetColor(a0, v3 - v6, v4 + v5, a1, a2);\n
                        cgc_SetColor(a0, v3 - v6, v4 - v5, a1, a2);\n
                    }\n
                    else\n
                    {\n
                        if (v5 > 0)\n
                        {\n
                            v12 = v4 + v6;\n
                            cgc_ConnectPoints(a0, a1, a2, v4 + v6, v3 - v5, r9<8>, v3 + v5 - 1);\n
                            v11 = v4 - v6;\n
                            cgc_ConnectPoints(a0, a1, a2, v4 - v6, v3 - v5, r9<8>, v3 + v5 - 1);\n
                        }\n
                        if (v6 > 0)\n
                        {\n
                            *(&v11) = v4 + v5;\n
                            cgc_ConnectPoints(a0, a1, a2, v4 + v5, v3 - v6, v11, v3 + v6 - 1);\n
                            *(&v11) = v4 - v5;\n
                            cgc_ConnectPoints(a0, a1, a2, v4 - v5, v3 - v6, v11, v3 + v6 - 1);\n
                        }\n
                    }\n
                }\n
                return v6;\n
            }\n
        }\n
    }\n
}\n
", "4208958:sub_40393e": null, "4208960:cgc_PaintSpray": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_PaintSpray(unsigned short a0[2], unsigned long a1, unsigned long a2, unsigned long a3, struct_0 *a4)\n
{\n
    char v0;  // [bp-0x34]\n
    char v1;  // [bp-0x33]\n
    char v2;  // [bp-0x32]\n
    char v3;  // [bp-0x31]\n
    unsigned int v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    struct_0 *v8;  // [bp-0x20]\n
    char v9;  // [bp-0x13]\n
    unsigned long long v11;  // rax, Other Possible Types: unsigned long\n
\n
    v9 = a3;\n
    v8 = a4;\n
    v11 = a4->field_0;\n
    if (v11 >= a0[1])\n
        return v11;\n
    v11 = a4->field_2;\n
    if (v11 < a0[0])\n
    {\n
        if (a4->field_8 != 1500797300)\n
            return a4;\n
        v11 = a4->field_6;\n
        if (v11 > 100)\n
            return v11;\n
        v11 = a4->field_6;\n
        if (v11)\n
        {\n
            v11 = (0 CONCAT 100) /m a4->field_6;\n
            v7 = v11;\n
            if (v7 <= 0)\n
                return (0 CONCAT 100) /m a4->field_6;\n
            v6 = a4->field_0;\n
            v5 = a4->field_2;\n
            v4 = a4->field_4;\n
            while (true)\n
            {\n
                v3 = 0;\n
                if (v6 < a4->field_0 + v4)\n
                    v3 = v6 < a0[1];\n
                if (!(v3 & 1))\n
                    break;\n
                cgc_SetColor(a0, v5, v6, a1, a2);\n
                v6 = v7 + v6;\n
            }\n
            v6 = a4->field_0;\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (v6 > a4->field_0 - v4)\n
                    v2 = 0 <= v6;\n
                if (!(v2 & 1))\n
                    break;\n
                cgc_SetColor(a0, v5, v6, a1, a2);\n
                v6 -= v7;\n
            }\n
            v6 = a4->field_0;\n
            while (true)\n
            {\n
                v1 = 0;\n
                if (v5 < a4->field_2 + v4)\n
                    v1 = v5 < a0[0];\n
                if (!(v1 & 1))\n
                    break;\n
                cgc_SetColor(a0, v5, v6, a1, a2);\n
                v5 = v7 + v5;\n
            }\n
            v5 = a4->field_2;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v5 > a4->field_2 - v4)\n
                    v0 = 0 <= v5;\n
                if (!(v0 & 1))\n
                    break;\n
                cgc_SetColor(a0, v5, v6, a1, a2);\n
                v5 -= v7;\n
            }\n
            cgc_SetColor(a0, a4->field_2, v8->field_0 + v4, a1, a2);\n
            cgc_SetColor(a0, a4->field_2, v8->field_0 - v4, a1, a2);\n
            cgc_SetColor(a0, a4->field_2 + v4, v8->field_0, a1, a2);\n
            v11 = cgc_SetColor(a0, v8->field_2 - v4, a4->field_0, a1, a2);\n
            return v11;\n
        }\n
    }\n
}\n
", "4209834:sub_403caa": null, "4209840:cgc_PMPGenerate": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned int field_2;\n
    unsigned int field_6;\n
    unsigned int field_a;\n
    unsigned int field_e;\n
    unsigned int field_12;\n
    unsigned int field_16;\n
    unsigned int field_1a;\n
    unsigned int field_1e;\n
    unsigned int field_22;\n
    unsigned int field_26;\n
    unsigned int field_2a;\n
    unsigned int field_2e;\n
    unsigned int field_32;\n
    unsigned int field_36;\n
    unsigned int field_3a;\n
} struct_0;\n
\n
long long cgc_PMPGenerate(struct_0 *a0, unsigned short a1[2])\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned long v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v8;  // eax\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
\n
    v6 = 0;\n
    v8 = a1[1] * 3;\n
    v5 = (v8 >> 31 CONCAT v8) /m 4 / 0x100000000;\n
    if (v5)\n
        v6 = 4 - v5;\n
    a0->field_0 = 19792;\n
    *((&a0->field_2 + 2)) = 0;\n
    *((&a0->field_6 + 2)) = 54;\n
    *(&(&a0->field_0)[1]) = *((&a0->field_6 + 2)) + (a1[1] * 3 + v6) * a1[0];\n
    v4 = 0;\n
    v5 = *(&(&a0->field_0)[1]) & 3;\n
    if (v5)\n
    {\n
        v4 = 4 - v5;\n
        *(&(&a0->field_0)[1]) = *(&(&a0->field_0)[1]) + v4;\n
    }\n
    *((&a0->field_32 + 2)) = (a1[1] * 3 + v6) * a1[0] + v4;\n
    if (cgc_allocate(a0, a1, v10, v11))\n
        cgc__terminate(a0);\n
    cgc_memset(*((&a0->field_36 + 2)), 0, *((&a0->field_32 + 2)));\n
    *((&a0->field_a + 2)) = 40;\n
    *((&a0->field_12 + 2)) = a1[0];\n
    *((&a0->field_e + 2)) = a1[1];\n
    *((&a0->field_16 + 2)) = 1572865;\n
    *((&a0->field_1a + 2)) = 0;\n
    *((&a0->field_1e + 2)) = (a1[1] * 3 + v6) * a1[0];\n
    *((&a0->field_22 + 2)) = 2835;\n
    *((&a0->field_26 + 2)) = 2835;\n
    *((&a0->field_2a + 2)) = 0;\n
    *((&a0->field_2e + 2)) = 0;\n
    *(&v3) = *((&a0->field_36 + 2));\n
    for (v1 = a1[0] - 1; v1 >= 0; v1 -= 1)\n
    {\n
        for (v2 = 0; v2 < a1[1]; v2 += 1)\n
        {\n
            *(&v0) = cgc_GetColor(a1, v1, v2, 0);\n
            cgc_memcpy(v3, *(&v0), 3);\n
            v3 += 3;\n
        }\n
        v3 += v6;\n
    }\n
    return 0;\n
}\n
", "4210445:sub_403f0d": null, "4210448:cgc_PMPTransmit": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned int field_36;\n
    unsigned long long field_3a;\n
} struct_0;\n
\n
long long cgc_PMPTransmit(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_SendAll(a0, 14))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    else if (cgc_SendAll(&a0->padding_0[14], 40))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    else if (!cgc_SendAll(*((&a0->field_36 + 2)), *(&(&a0->padding_0)[1])))\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
}\n
", "4210592:cgc_PMPDeallocate": "typedef struct struct_0 {\n
    char padding_0[54];\n
    unsigned int field_36;\n
    unsigned long long field_3a;\n
} struct_0;\n
\n
long long cgc_PMPDeallocate(struct_0 *a0)\n
{\n
    unsigned long long v1;  // rsi\n
\n
    if (*((&a0->field_36 + 2)))\n
        cgc_deallocate(a0, v1);\n
    *(&(&a0->padding_0)[1]) = 0;\n
    return a0;\n
}\n
", "4210657:sub_403fe1": null, "4210672:main": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    char field_a;\n
} struct_0;\n
\n
int main(unsigned long long a0, unsigned long a1)\n
{\n
    char v0;  // [bp-0x90]\n
    unsigned int v1;  // [bp-0x48]\n
    char v2;  // [bp-0x41]\n
    struct_0 *v3;  // [bp-0x40]\n
    struct_0 *v4;  // [bp-0x38]\n
    unsigned long long v5;  // [bp-0x30]\n
    char v6[3];  // [bp-0x28], Other Possible Types: unsigned long\n
    char v7;  // [bp-0x1a]\n
    unsigned long v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned long long v12;  // rdx\n
\n
    v10 = 0;\n
    v9 = a0;\n
    v8 = a1;\n
    if (cgc_ReceiveAll(&v7, 2))\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    if (cgc_allocate(a0, 2, v12))\n
        cgc__terminate(a0);\n
    v5 = &v6[*(&v7)];\n
    if (cgc_ReceiveAll(v6, *(&v7)))\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    v4 = &v6;\n
    *(&v6) = &v6[3 + 2];\n
    if (v6 >= v5)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (cgc_VGFVerify(v4))\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (cgc_CreateCanvas(&v3, v4->field_6, v4->field_8, v4->field_a))\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    else if (!cgc_VGFProcess(v6, v5, v3))\n
    {\n
        v2 = v6[0];\n
        *(&v6) = &v6[1];\n
        if (v2 > 20)\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
        for (v1 = 0; v1 < v2; v1 += 1)\n
        {\n
            if (v6 < v5)\n
            {\n
                v3[5].padding_0[1 + 3 * v1] = v6[2];\n
                v3[5].padding_0[2 + 3 * v1] = v6[1];\n
                v3[5].padding_0[3 + 3 * v1] = v6[0];\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                v10 = -1;\n
                return v10;\n
            }\n
        }\n
        cgc_FlattenCanvas(v3);\n
        if (cgc_PMPGenerate(&v0, v3))\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
        else if (!cgc_PMPTransmit(&v0))\n
        {\n
            cgc_PMPDeallocate(&v0);\n
            cgc_DestroyCanvas(&v3);\n
            v10 = 0;\n
            return v10;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            return v10;\n
        }\n
    }\n
    else\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
}\n
", "4211320:sub_404278": null, "4211328:cgc_VGFVerify": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned short field_8;\n
} struct_0;\n
\n
long long cgc_VGFVerify(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (a0->field_0 != 2016610569)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    else if (a0->field_4 != 1)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    else if (a0->field_6 > 0x200)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    else if (a0->field_8 <= 0x200)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
}\n
", "4211467:sub_40430b": null, "4211472:cgc_VGFProcess": "long long cgc_VGFProcess(struct struct_0 **a0, unsigned long a1, unsigned short a2[2])\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    char v1[4];  // [bp-0x38]\n
    char v2[4];  // [bp-0x30], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    *(&v2) = *(a0);\n
    while (true)\n
    {\n
        do\n
        {\n
            do\n
            {\n
                if (v2 >= a1)\n
                {\n
                    v3 = -1;\n
                    return v3;\n
                }\n
                *(&v1) = v2;\n
                v2 += 4;\n
                if (v1[0] == 100)\n
                {\n
                    *(a0) = v2;\n
                    v3 = 0;\n
                    return v3;\n
                }\n
            } while (v1[1] >= 6);\n
        } while (v1[2] >= 20);\n
        v0 = v1[0];\n
        switch (v0)\n
        {\n
        case 0:\n
            cgc_PaintRectangle(a2, v1[1], v1[2], v1[3], v2);\n
            *(&v2) = v2 + 8;\n
            break;\n
        case 1:\n
            cgc_PaintTriangle(a2, v1[1], v1[2], v1[3], v2);\n
            *(&v2) = v2 + 12;\n
            break;\n
        case 2:\n
            cgc_PaintLine(a2, v1[1], v1[2], v1[3], v2);\n
            *(&v2) = v2 + 8;\n
            break;\n
        case 3:\n
            cgc_PaintCircle(a2, v1[1], v1[2], v1[3], v2);\n
            *(&v2) = v2 + 6;\n
            break;\n
        case 4:\n
            cgc_PaintSquare(a2, v1[1], v1[2], v1[3], v2);\n
            *(&v2) = v2 + 6;\n
            break;\n
        case 5:\n
            cgc_PaintSpray(a2, v1[1], v1[2], v1[3], v2);\n
            *(&v2) = v2 + 12;\n
            break;\n
        }\n
    }\n
}\n
", "4212048:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc__terminate": null, "5242896:cgc_transmit": null, "5242904:cgc_allocate": null, "5242912:cgc_deallocate": null, "5242920:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}