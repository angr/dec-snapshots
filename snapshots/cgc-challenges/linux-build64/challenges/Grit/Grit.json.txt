{"4206592:_init": "extern struct_0 *g_40e680;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_40e680;\n
    if (g_40e680)\n
        v1 = g_40e680();\n
    return v1;\n
}\n
", "4206624:sub_403020": "extern unsigned long long g_40e698;\n
\n
long long sub_403020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_40e698;\n
    goto *(4253344);\n
}\n
", "4206636:sub_40302c": null, "4206640:_Znam": "// attributes: PLT stub\n
int operator new[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206672:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206688:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206704:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206720:_Znwm": "// attributes: PLT stub\n
int operator new(unsigned long a0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206736:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206752:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned long a0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206768:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4206784:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206800:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4253288);\n
}\n
", "4206816:_start": "long long _start()\n
{\n
    unsigned long v0;  // [bp+0x0], Other Possible Types: char\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4206853:sub_403105": null, "4206854:sub_403106": null, "4206864:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_40e678;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4206905:sub_403139": null, "4206912:register_tm_clones": "extern unsigned long long g_40e688;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4206969:sub_403179": null, "4206976:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_40e668;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_40e668)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4207029:sub_4031b5": null, "4207033:sub_4031b9": null, "4207040:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207049:sub_4031c9": null, "4207056:cgc_calloc": "extern unsigned long long g_heap;\n
\n
long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rbx\n
    unsigned long long v2;  // rax\n
\n
    v1 = a0 * a1;\n
    v2 = cgc_malloc_alloc(&g_heap, v1);\n
    if (v2)\n
    {\n
        cgc_memset(v2, 0, v1);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207122:sub_403212": null, "4207136:cgc_isascii": "extern char __ctype;\n
\n
long long cgc_isascii(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 1;\n
}\n
", "4207167:sub_40323f": null, "4207168:cgc_isdigit": "extern char __ctype;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 2;\n
}\n
", "4207199:sub_40325f": null, "4207200:cgc_isprint": "extern char __ctype;\n
\n
long long cgc_isprint(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 16;\n
}\n
", "4207231:sub_40327f": null, "4207232:cgc_isalnum": "extern char __ctype;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 14;\n
}\n
", "4207263:sub_40329f": null, "4207264:cgc_isalpha": "extern char __ctype;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 12;\n
}\n
", "4207295:sub_4032bf": null, "4207296:cgc_islower": "extern char __ctype;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4;\n
}\n
", "4207327:sub_4032df": null, "4207328:cgc_isupper": "extern char __ctype;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 8;\n
}\n
", "4207359:sub_4032ff": null, "4207360:cgc_isspace": "extern char __ctype;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 64;\n
}\n
", "4207391:sub_40331f": null, "4207392:cgc_ispunct": "extern char __ctype;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 32;\n
}\n
", "4207423:sub_40333f": null, "4207424:cgc_iscntrl": "extern char __ctype;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return *(&(&__ctype)[a0]) & 4294967168;\n
}\n
", "4207455:sub_40335f": null, "4207456:cgc_isxdigit": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    struct_0 *v1;  // rax\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&__ctype)[v1 ^ 32] & 2) >> 1);\n
    return v1 - 65 < 6 | ((*((v1 + &__ctype)) & 2) >> 1);\n
}\n
", "4207513:sub_403399": null, "4207520:cgc_toupper": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_toupper(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4207556:sub_4033c4": null, "4207568:cgc_digittoint": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_digittoint(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
    unsigned int v3;  // ecx\n
    unsigned long long v4;  // rax\n
    unsigned long long v6;  // rax\n
\n
    v1 = a0;\n
    v2 = v1 ^ 32;\n
    if (!(*((v1 + &__ctype)) & 8))\n
        v2 = v1;\n
    if (!((&__ctype)[v2] & 2))\n
    {\n
        v3 = v2 - 65;\n
        v4 = v2 - 55;\n
        return (v3 < 6 ? 0 : v4);\n
    }\n
    v6 = v2 - 48;\n
    return v6;\n
}\n
", "4207634:sub_403412": null, "4207648:cgc_tolower": "typedef struct struct_0 {\n
    char padding_0[4239376];\n
    char field_40b010;\n
} struct_0;\n
\n
extern char __ctype;\n
\n
long long cgc_tolower(unsigned long a0)\n
{\n
    struct_0 *v1;  // rcx\n
\n
    v1 = a0;\n
    if ((*((v1 + &__ctype)) & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4207684:sub_403444": null, "4207696:__cxa_pure_virtual": "long long __cxa_pure_virtual()\n
{\n
    unsigned long long v1;  // rdi\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    cgc__terminate(v1);\n
    return cgc_exit(v1, v2, v3, v4, v5, v6);\n
}\n
", "4207728:cgc_exit": "long long cgc_exit()\n
{\n
    unsigned long long v1;  // rdi\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rdx\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // r8\n
    unsigned long long v6;  // r9\n
\n
    cgc__terminate();\n
    return cgc_fflush(v1, v2, v3, v4, v5, v6);\n
}\n
", "4207744:cgc_fflush": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fflush(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x48]\n
    char v1;  // [bp-0x40]\n
    unsigned long long v3;  // r8\n
    void* v4;  // rax, Other Possible Types: unsigned long, unsigned long long\n
    char *v5;  // rcx\n
    unsigned long long v6;  // rdx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // r13\n
    unsigned long v10;  // rax\n
    char *v11;  // rsi, Other Possible Types: unsigned long\n
    unsigned long v12;  // rax\n
    unsigned long v13;  // r13, Other Possible Types: unsigned long long\n
    void* v14;  // r15, Other Possible Types: unsigned long\n
\n
    v3 = a0->field_8;\n
    if (v3 == -1)\n
        return 0;\n
    if (a0->field_4 != 1)\n
    {\n
        v5 = a0->field_10;\n
        v6 = a0->padding_c;\n
        v13 = v6 - v3;\n
        if (v5 && v13)\n
        {\n
            v8 = v13 & 3;\n
            if (~(v3) + v6 < 3)\n
            {\n
                v11 = 0;\n
            }\n
            else\n
            {\n
                v9 = v13 & -4;\n
                v10 = &a0->padding_0[v3 + 35];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v10 + v11 - 3)) = v5[*((v10 + v11 - 3))];\n
                    *((v10 + v11 - 2)) = v5[*((v10 + v11 - 2))];\n
                    *((v10 + v11 - 1)) = v5[*((v10 + v11 - 1))];\n
                    *((v10 + v11)) = v5[*((v10 + v11))];\n
                    v11 += 4;\n
                } while (v9 != v11);\n
            }\n
            if (v8)\n
            {\n
                v12 = &a0->padding_0[v3 + v11 + 32];\n
                v11 = 0;\n
                do\n
                {\n
                    *((v12 + v11)) = v5[*((v12 + v11))];\n
                    v11 += 1;\n
                } while (v8 != v11);\n
            }\n
            v13 = (a0->padding_c - a0->field_8);\n
        }\n
        v0 = a0;\n
        v14 = 0;\n
        while (v13 > v14)\n
        {\n
            v14 += *(&v1);\n
            if (cgc_transmit(a0, v11))\n
            {\n
                v4 = 4294967295;\n
                a0 = v0;\n
                goto LABEL_4035c2;\n
            }\n
        }\n
        a0 = v0;\n
    }\n
    v4 = 0;\n
LABEL_4035c2:\n
    *((a0 + 8)) = 0;\n
    return v4;\n
}\n
", "4208089:sub_4035d9": null, "4208096:cgc_fbuffered": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fbuffered(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int *v1;  // [bp-0x50]\n
    struct_0 *v2;  // [bp-0x48]\n
    char v3;  // [bp-0x40]\n
    unsigned long long v5;  // r8\n
    unsigned int *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rcx\n
    unsigned long long v8;  // rdx\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // r13\n
    unsigned long v12;  // rax\n
    char *v13;  // rax\n
    unsigned long v14;  // r13, Other Possible Types: unsigned long long\n
    void* v15;  // r15, Other Possible Types: unsigned long\n
\n
    v5 = a0->field_8;\n
    if (v5 == -1)\n
    {\n
        *((a0 + 8)) = -(a1 < 1);\n
        *((a0 + 12)) = 0;\n
        return -(a1 < 1);\n
    }\n
    if (a0->field_4 == 1)\n
    {\n
        v6 = &a0->field_c;\n
    }\n
    else\n
    {\n
        v7 = a0->field_10;\n
        v8 = a0->field_c;\n
        v14 = v8 - v5;\n
        v0 = a1;\n
        if (v7 && v14)\n
        {\n
            v10 = v14 & 3;\n
            if (~(v5) + v8 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v11 = v14 & -4;\n
                v12 = &a0->padding_0[v5 + 35];\n
                a1 = 0;\n
                do\n
                {\n
                    *((v12 + a1 - 3)) = v7[*((v12 + a1 - 3))];\n
                    *((v12 + a1 - 2)) = v7[*((v12 + a1 - 2))];\n
                    *((v12 + a1 - 1)) = v7[*((v12 + a1 - 1))];\n
                    *((v12 + a1)) = v7[*((v12 + a1))];\n
                    a1 += 4;\n
                } while (v11 != a1);\n
            }\n
            if (v10)\n
            {\n
                v13 = &a0->padding_0[v5 + a1 + 32];\n
                a1 = 0;\n
                do\n
                {\n
                    v13[a1] = v7[v13[a1]];\n
                    a1 += 1;\n
                } while (v10 != a1);\n
            }\n
            v14 = a0->field_c - a0->field_8;\n
        }\n
        v1 = &a0->field_c;\n
        v2 = a0;\n
        v15 = 0;\n
        while (v14 > v15)\n
        {\n
            v15 += *(&v3);\n
            if (cgc_transmit(a0, a1))\n
                break;\n
        }\n
        a0 = v2;\n
        a1 = v0;\n
        v6 = v1;\n
    }\n
    *(v6) = 0;\n
}\n
", "4208449:sub_403741": null, "4208464:cgc_fopen": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
} struct_0;\n
\n
long long cgc_fopen(unsigned long a0, unsigned long a1)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = cgc_malloc(1056);\n
    if (v1)\n
    {\n
        v1->field_0 = a0;\n
        v1->field_4 = 2 - (a1 < 1);\n
        v1->field_8 = 0;\n
        v1->field_10 = 0;\n
        return v1;\n
    }\n
    return 0;\n
}\n
", "4208540:sub_40379c": null, "4208544:cgc_fread": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_1 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
long long cgc_fread(unsigned long long a0, unsigned long long a1, struct_0 *a2)\n
{\n
    unsigned long v0;  // [bp-0x48], Other Possible Types: char\n
    unsigned long v1;  // [bp-0x40]\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // r14\n
    unsigned long long v5;  // r15\n
    unsigned long long v6;  // rax\n
    char *v7;  // rax\n
    unsigned long long v9;  // rax\n
    char *v10;  // rcx, Other Possible Types: unsigned long, unsigned long long\n
    unsigned long v11;  // rax, Other Possible Types: unsigned long long\n
    void* v12;  // r13, Other Possible Types: unsigned long\n
    unsigned int v13;  // eax\n
    unsigned long long v15;  // r8\n
    char *v16;  // rax\n
\n
    v3 = a2;\n
    v4 = a1;\n
    v5 = a0;\n
    v11 = a2->field_8;\n
    if (v11 == *(&a2->padding_c[0]))\n
    {\n
        *(&a2->field_8) = 0;\n
        v6 = cgc_receive(a0, a1, a2, v10);\n
        if (!v6)\n
        {\n
            v7 = *(&v0);\n
            if (v7)\n
            {\n
                *(&a2->padding_c[0]) = v7;\n
                v10 = v7 * 0x100000000;\n
                if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(rax<8>, 0x20<8>), Shl(rax<8>, 0x1f<8>), cc_ndep<8>)))\n
                {\n
                    v10 = a2->field_18;\n
                    if (v10)\n
                    {\n
                        a2 = v7;\n
                        v9 = v7 & 3;\n
                        if (v7 + 1 < 3)\n
                        {\n
                            a1 = 0;\n
                        }\n
                        else\n
                        {\n
                            a2 = &a2[-1 * v9];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                v3[1].padding_0[a1] = *((v10 + v3[1].padding_0[a1]));\n
                                v3[1].padding_0[1 + a1] = *((v10 + v3[1].padding_0[1 + a1]));\n
                                v3[1].padding_0[2 + a1] = *((v10 + v3[1].padding_0[2 + a1]));\n
                                v3[1].padding_0[3 + a1] = *((v10 + v3[1].padding_0[3 + a1]));\n
                                a1 += 4;\n
                            } while (a2 != a1);\n
                        }\n
                        if (v9)\n
                        {\n
                            a2 = &v3->padding_0[a1 + 32];\n
                            a1 = 0;\n
                            do\n
                            {\n
                                a2[a1] = *((v10 + a2[a1]));\n
                                a1 += 1;\n
                            } while (v9 != a1);\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        v11 = v3->field_8;\n
    }\n
    if (v11 != -1)\n
    {\n
        v12 = *(&v3->padding_c[0]) - v11;\n
        if (v12 > v4)\n
            v12 = v4;\n
        v0 = v12;\n
        a1 = &v3->padding_0[v11 + 32];\n
        a2 = v12;\n
        cgc_memcpy();\n
        v13 = v3->field_8 + v12;\n
        v3->field_8 = v13;\n
        if (v13 == *(&v3->padding_c[0]))\n
            *(&v3->field_8) = 0;\n
        if (!(v12 < v4))\n
            goto LABEL_403a25;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        if (0 >= v4)\n
        {\n
LABEL_403a25:\n
            return v12;\n
        }\n
    }\n
    v1 = v5 + 3;\n
    while (true)\n
    {\n
        v10 = cgc_receive(a0, a1, a2, v10);\n
        if (v10)\n
            return -1;\n
        v15 = v0;\n
        if (!v15)\n
            return -1;\n
        v16 = v3->field_18;\n
        if (v16)\n
        {\n
            a2 = v15 & 3;\n
            if (v15 - 1 < 3)\n
            {\n
                a1 = 0;\n
            }\n
            else\n
            {\n
                v10 = v1 + v12;\n
                a1 = 0;\n
                do\n
                {\n
                    *((v10 + a1 - 3)) = v16[*((v10 + a1 - 3))];\n
                    *((v10 + a1 - 2)) = v16[*((v10 + a1 - 2))];\n
                    *((v10 + a1 - 1)) = v16[*((v10 + a1 - 1))];\n
                    *((v10 + a1)) = v16[*((v10 + a1))];\n
                    a1 += 4;\n
                } while ((v15 & -4) != a1);\n
            }\n
            if (a2)\n
            {\n
                a1 = a1 + v12 + v5;\n
                v10 = 0;\n
                do\n
                {\n
                    a1[v10] = v16[a1[v10]];\n
                    v10 += 1;\n
                } while (a2 != v10);\n
            }\n
        }\n
        v12 += v15;\n
        if (v12 >= v4)\n
            return v12;\n
    }\n
}\n
", "4208924:sub_40391c": null, "4209028:sub_403984": null, "4209207:sub_403a37": null, "4209216:cgc_freaduntil": "long long cgc_freaduntil(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long long a3)\n
{\n
    int tmp_1;  // tmp #1\n
    char *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v2;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = 0;\n
    v2 = a1 - 1;\n
    if (a1 != 1)\n
    {\n
        while (true)\n
        {\n
            v3 = cgc__getc(a3);\n
            if (v3 == -1)\n
                return -1;\n
            if (v3 == a2)\n
                break;\n
            *((a0 + v1)) = v3;\n
            v1 += 1;\n
            goto LABEL_403aa0;\n
        }\n
    }\n
    tmp_1 = v2;\n
    v2 = v1;\n
    if (!(v1 == tmp_1))\n
        goto LABEL_403ab2;\n
    while (true)\n
    {\n
LABEL_403aa0:\n
        v4 = cgc__getc(a3);\n
        if (v4 == -1)\n
            break;\n
        if (v4 == a2)\n
            goto LABEL_403ab2;\n
    }\n
LABEL_403ab2:\n
    *((a0 + v2)) = 0;\n
    return v2;\n
}\n
", "4209362:sub_403ad2": null, "4209376:cgc__getc": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
long long cgc__getc(struct_1 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x21]\n
    char v1;  // [bp-0x20]\n
    struct_1 *v3;  // rbx\n
    unsigned long v4;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long long v7;  // rcx\n
    unsigned long long v9;  // rsi\n
    unsigned long long v10;  // rdx\n
    unsigned long long v11;  // rcx\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // rax\n
    unsigned long long v15;  // r8\n
    unsigned long v16;  // rcx\n
    struct struct_0 **v17;  // rcx\n
    unsigned long long v18;  // rdx\n
    void* v19;  // rdi, Other Possible Types: unsigned long\n
    char *v20;  // rsi\n
    unsigned long v21;  // rdi\n
    unsigned long long v22;  // rax\n
\n
    v3 = a0;\n
    v4 = a0->field_8;\n
    if (v4 == -1)\n
    {\n
        v13 = cgc_receive(a0, v5, v6, v7);\n
        v14 = 4294967295;\n
        if (v13)\n
        {\n
            return 4294967295;\n
        }\n
        else if (!*(&v1))\n
        {\n
            return 4294967295;\n
        }\n
        else\n
        {\n
            v16 = a0->field_18;\n
            *(&v14) = v0;\n
            if (!v16)\n
                return v14;\n
            *(&v14) = *(v16 + v14);\n
        }\n
    }\n
    else\n
    {\n
        if (v4 != *(&a0->padding_c[0]))\n
        {\n
            v3->field_8 = v4 + 1;\n
            v22 = v3[1].padding_0[v4];\n
            return v22;\n
        }\n
        *(&a0->field_8) = 0;\n
        if (cgc_receive(a0, v9, v10, v11))\n
            return 4294967295;\n
        v15 = *(&v1);\n
        if (!v15)\n
            return 4294967295;\n
        *(&a0->padding_c[0]) = v15;\n
        if (!([D] amd64g_calculate_condition(0x4<64>, 0x20<64>, Shl(r8<8>, 0x20<8>), Shl(r8<8>, 0x1f<8>), cc_ndep<8>)))\n
        {\n
            v17 = a0->field_18;\n
            if (v17)\n
            {\n
                v18 = v15 & 3;\n
                if (v15 - 1 < 3)\n
                {\n
                    v19 = 0;\n
                }\n
                else\n
                {\n
                    v19 = 0;\n
                    do\n
                    {\n
                        v3[1].padding_0[v19] = *(v17 + v3[1].padding_0[v19]);\n
                        v3[1].padding_0[1 + v19] = *(v17 + v3[1].padding_0[1 + v19]);\n
                        v3[1].padding_0[2 + v19] = *(v17 + v3[1].padding_0[2 + v19]);\n
                        v3[1].padding_0[3 + v19] = *(v17 + v3[1].padding_0[3 + v19]);\n
                        v19 += 4;\n
                    } while (v15 - v18 != v19);\n
                }\n
                if (v18)\n
                {\n
                    v20 = &v3->padding_0[v19 + 32];\n
                    v21 = 0;\n
                    do\n
                    {\n
                        v20[v21] = *(v17 + v20[v21]);\n
                        v21 += 1;\n
                    } while (v18 != v21);\n
                }\n
            }\n
        }\n
        if (v15 < 0)\n
            return 4294967295;\n
        v4 = v3->field_8;\n
    }\n
}\n
", "4209740:sub_403c4c": null, "4209744:cgc_free": "extern unsigned long long g_heap;\n
\n
long long cgc_free(unsigned long long a0)\n
{\n
    return malloc_free(&g_heap, a0);\n
}\n
", "4209772:sub_403c6c": null, "4209776:cgc_fwrite": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
long long cgc_fwrite(unsigned long long a0, unsigned long long a1, struct_1 *a2)\n
{\n
    unsigned long v0;  // [bp-0x458]\n
    unsigned long v1;  // [bp-0x450]\n
    char v2;  // [bp-0x448]\n
    unsigned long long v3;  // [bp-0x440], Other Possible Types: char\n
    unsigned long long v4;  // [bp-0x43f]\n
    unsigned long long v5;  // [bp-0x43e]\n
    unsigned long long v6;  // [bp-0x43d]\n
    struct_1 *v8;  // rbx\n
    unsigned long v9;  // r12, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // rax\n
    char *v11;  // r14\n
    void* v12;  // r15, Other Possible Types: unsigned long\n
    unsigned long long v14;  // rcx\n
    void* v15;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v16;  // r15, Other Possible Types: unsigned long long\n
    unsigned long long v17;  // rsi\n
    unsigned long long v18;  // rdx\n
    unsigned long long v19;  // rax\n
    unsigned long v20;  // rcx\n
    char *v21;  // rcx\n
    unsigned long v22;  // rdx\n
    void* v23;  // rbx, Other Possible Types: unsigned long\n
    void* v24;  // rcx, Other Possible Types: unsigned long\n
    struct_0 *v25;  // rdi\n
    unsigned long long v26;  // r13\n
\n
    v8 = a2;\n
    v9 = a1;\n
    if (a2->field_8 != -1)\n
    {\n
        if (a1 >= 0x400)\n
        {\n
            cgc_fflush(a2);\n
        }\n
        else\n
        {\n
            v10 = a2->field_c;\n
            if (v10 + a1 >= 0x400)\n
            {\n
                v12 = 0x400 - v10;\n
                cgc_memcpy(&a2->padding_0[v10 + 32], a0, v12);\n
                v8->field_c = v8->field_c + v12;\n
                cgc_fflush(a2);\n
                if (v12 < a1)\n
                    goto LABEL_403e74;\n
            }\n
            else\n
            {\n
                v12 = 0;\n
                if (0 < a1)\n
                {\n
LABEL_403e74:\n
                    v26 = a1 - v12;\n
                    cgc_memcpy(&v8->padding_0[v8->field_c + 32], a0 + v12, v26);\n
                    v8->field_c = v8->field_c + v26;\n
                    return a1;\n
                }\n
            }\n
            return v12;\n
        }\n
    }\n
    v0 = a0;\n
    v11 = a2->field_10;\n
    if (!v11)\n
    {\n
        v15 = 0;\n
        do\n
        {\n
            if (v15 >= a1)\n
                return a1;\n
            v15 += *(&v3);\n
        } while (!cgc_transmit(a2, a1, a2, v14));\n
    }\n
    else\n
    {\n
        if (!a1)\n
            return a1;\n
        v24 = 0;\n
LABEL_403cd6:\n
        v16 = v9 - v24;\n
        if (0x400 <= v16)\n
            v16 = 0x400;\n
        v1 = v24;\n
        v17 = v0 + v24;\n
        v18 = v16;\n
        cgc_memcpy();\n
        if (v16)\n
        {\n
            v19 = v16 & 3;\n
            if (v16 - 1 < 3)\n
            {\n
                v20 = 0;\n
            }\n
            else\n
            {\n
                v20 = 0;\n
                do\n
                {\n
                    *(&v3 + v20) = v11[*(&v3 + v20)];\n
                    *(&v4 + v20) = v11[*(&v4 + v20)];\n
                    *(&v5 + v20) = v11[*(&v5 + v20)];\n
                    *(&v6 + v20) = v11[*(&v6 + v20)];\n
                    v20 += 4;\n
                } while ((v16 & 2044) != v20);\n
            }\n
            if (v19)\n
            {\n
                v21 = &v3 + v20;\n
                v22 = 0;\n
                do\n
                {\n
                    v21[v22] = v11[v21[v22]];\n
                    v22 += 1;\n
                } while (v19 != v22);\n
            }\n
        }\n
        v23 = 0;\n
        do\n
        {\n
            if (v16 <= v23)\n
            {\n
                v24 = v1 + v16;\n
                v25 = &v3;\n
                if (v24 >= v9)\n
                    return v9;\n
                goto LABEL_403cd6;\n
            }\n
            v23 += *(&v2);\n
        } while (!cgc_transmit(&v3, v17));\n
    }\n
    return -1;\n
}\n
", "4210123:sub_403dcb": null, "4210346:sub_403eaa": null, "4210352:cgc_fxlat": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[15];\n
    uint128_t field_10;\n
    char padding_20[80];\n
    uint128_t field_70;\n
    uint128_t field_80;\n
    uint128_t field_90;\n
    uint128_t field_a0;\n
    uint128_t field_b0;\n
    uint128_t field_c0;\n
    uint128_t field_d0;\n
    uint128_t field_e0;\n
    uint128_t field_f0;\n
} struct_1;\n
\n
long long cgc_fxlat(struct_0 *a0, char a1[2])\n
{\n
    struct_0 *v1;  // r15\n
    unsigned long long v2;  // rdi\n
    char v3[2];  // r14\n
    unsigned long v4;  // rbx\n
    unsigned long v7;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v8;  // rdx, Other Possible Types: char\n
    unsigned long v9;  // rax\n
    unsigned long v10;  // rdi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
    unsigned long v13;  // rdx\n
    char v14;  // al\n
\n
    v1 = a0;\n
    v2 = a0->field_10;\n
    if (!a1)\n
    {\n
        *(&v1->field_10) = 0;\n
        return cgc_free(v2);\n
    }\n
    v3 = a1;\n
    v4 = cgc_realloc(v2, 0x100);\n
    v1->field_10 = v4;\n
    *(&v1[1].padding_0[0]) = cgc_realloc(*(&v1[1].padding_0[0]), 0x100);\n
    v8 = a1[0];\n
    v7 = 826981510;\n
    if (v3[0])\n
    {\n
        v9 = 1;\n
        do\n
        {\n
            v7 = __ROL__((v7 + v7 * 36) ^ v8, 13);\n
            v8 = v3[v9];\n
            v9 = v9 + 1;\n
        } while (v8);\n
    }\n
    *(v4) = 0xf0e0d0c0b0a09080706050403020100;\n
    *((v4 + 16)) = 41362427191743139026751447860679676176;\n
    strncpy(v4 + 32, \" !\\\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmno\", 80);\n
    *((v4 + 112)) = 169468730032567031154139535364404179312;\n
    *((v4 + 128)) = 190819780506037679842037549948358263168;\n
    *((v4 + 144)) = 212170830979508328529935564532312347024;\n
    *((v4 + 160)) = 233521881452978977217833579116266430880;\n
    *((v4 + 176)) = 254872931926449625905731593700220514736;\n
    *((v4 + 192)) = 276223982399920274593629608284174598592;\n
    *((v4 + 208)) = 297575032873390923281527622868128682448;\n
    *((v4 + 224)) = 318926083346861571969425637452082766304;\n
    *((v4 + 240)) = 340277133820332220657323652036036850160;\n
    v10 = 255;\n
    while (true)\n
    {\n
        v11 = v7;\n
        v12 = v7 * 3;\n
        v13 = (0 CONCAT v11) /m v10 >> 32;\n
        v7 = v12 / 0x200000 ^ __ROL__(v12, 13);\n
        v14 = *((v4 + v10));\n
        *((v4 + v10)) = *((v4 + v13));\n
        *((v4 + v13)) = v14;\n
        v10 -= 1;\n
    }\n
}\n
", "4210818:sub_404082": null, "4210832:cgc_malloc": "extern unsigned long long g_heap;\n
\n
long long cgc_malloc(unsigned long long a0)\n
{\n
    return cgc_malloc_alloc(&g_heap, a0);\n
}\n
", "4210860:sub_4040ac": null, "4210864:cgc_malloc_alloc": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_10;\n
    char padding_18[1016];\n
    unsigned long long field_410;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    struct struct_4 *field_18;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_2;\n
\n
extern unsigned long long g_40b210;\n
extern unsigned long long g_40b242;\n
\n
long long cgc_malloc_alloc(struct_1 *a0, unsigned long long a1)\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned long long v2;  // rbx\n
    unsigned long v3;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long long v4;  // rax, Other Possible Types: unsigned long\n
    struct_1 *v5;  // rbx\n
    struct_1 *v6;  // r12\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rax\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // rbx\n
    void* v12;  // r15, Other Possible Types: unsigned long, struct_0 *\n
    void* v18;  // r15, Other Possible Types: unsigned long\n
\n
    if (a1 > 2147483647)\n
        v18 = 0;\n
    v2 = a1 + 3 & -4;\n
    if (!v2)\n
    {\n
        v3 = 4;\n
LABEL_4040fc:\n
        v4 = tiny_alloc(a0, v3);\n
        return v4;\n
    }\n
    if (v2 <= 15)\n
    {\n
        v3 = v2;\n
        goto LABEL_4040fc;\n
    }\n
    else\n
    {\n
        if (v2 > 131071)\n
        {\n
            v18 = 0;\n
            v9 = cgc_allocate(a0, a1, v8);\n
            v12 = *(&v0);\n
            *(v12) = a0;\n
            *((v12 + 8)) = v2 + 4111 & -0x1000;\n
        }\n
        v5 = v2 + 31;\n
        v6 = v5 & -0x10;\n
        if (!(v5 & -0x10))\n
        {\n
            v10 = 4294967295;\n
        }\n
        else if (v6 < 513)\n
        {\n
            v11 = v5 / 16;\n
            v10 = v11 + 2;\n
            if (v11 > 128)\n
                v12 = 0;\n
        }\n
        else if (v6 <= 0x1200)\n
        {\n
            v10 = (&v6[524576157].padding_18[816] >> 7) + 34;\n
        }\n
        else\n
        {\n
            v10 = 130;\n
            if (v6 <= 0x20000)\n
                v10 = (&v6[8393218528].padding_18[232] >> 11) + 66;\n
        }\n
        v12 = (&a0->field_0)[v10];\n
        if (!v12)\n
            goto LABEL_0x40434e;\n
        else\n
            goto LABEL_0x404370;\n
    }\n
}\n
", "4211776:tiny_alloc": "long long tiny_alloc(unsigned long a0, unsigned long long a1)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    char v1;  // [bp-0x40]\n
    unsigned long long v3;  // rbx\n
    struct struct_0 *v4[648];  // rax, Other Possible Types: unsigned long\n
    unsigned long v5;  // r15\n
    unsigned int v6;  // edx\n
    unsigned short *v7;  // rcx, Other Possible Types: unsigned long\n
    unsigned short *v8;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v9;  // rdx\n
    unsigned long long v11;  // r13\n
    unsigned long v12;  // rcx, Other Possible Types: unsigned long long\n
    unsigned short *v13;  // r12\n
    unsigned long v14;  // rdx\n
    unsigned short v15[2];  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v16;  // rax\n
    unsigned long long v17;  // rbx\n
\n
    v3 = a1;\n
    if (a1 <= 15)\n
    {\n
        v4 = a1 / 4 - 1;\n
    }\n
    else if (a1 <= 0x200)\n
    {\n
        v4 = (a1 >> 4) + 2;\n
    }\n
    else if (a1 <= 0x1200)\n
    {\n
        v4 = (0x7ffffffe00 + a1 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v4 = 130;\n
        if (a1 <= 0x20000)\n
            v4 = (0x7ffffffee00 + a1 >> 11) + 66;\n
    }\n
    v5 = v4;\n
    v8 = *((a0 + v4 * 8));\n
    if (v8)\n
    {\n
        *((a0 + v5 * 8)) = *(&v8);\n
        return v8;\n
    }\n
    v15 = *((a0 + v5 * 8 + 5144));\n
    if (v15)\n
    {\n
        v6 = v15[0];\n
        a1 = v15[1];\n
    }\n
    else\n
    {\n
        v7 = *((a0 + 5168));\n
        if (v7)\n
        {\n
            v8 = *((a0 + 5176));\n
        }\n
        else if (cgc_allocate(a0, a1, v9))\n
        {\n
            *((a0 + 5168)) = 0;\n
            return 0;\n
        }\n
        else\n
        {\n
            v11 = *(&v1);\n
            v12 = v11 + 1048575;\n
            v13 = v12 & -0x100000;\n
            if (v13 > v11)\n
            {\n
                v0 = v12;\n
                cgc_deallocate(a0);\n
                v12 = v0;\n
            }\n
            if ((v11 + 0x200000) > (v13 + 0x80000))\n
                cgc_deallocate(a0);\n
            *((a0 + (v12 >> 20) + 1048)) = 1;\n
            v7 = v13;\n
            *((a0 + 5168)) = v13;\n
            v8 = 0;\n
            if (!v13)\n
                return 0;\n
        }\n
        v14 = v7;\n
        v15 = v7 + v8;\n
        *((a0 + v5 * 8 + 5144)) = v15;\n
        *((v14 + v8)) = v3;\n
        *((v14 + v8 + 2)) = v3;\n
        v16 = v8 + 0x1000;\n
        *((a0 + 5176)) = v16;\n
        if (v16 == 0x100000)\n
            *((a0 + 5168)) = 0;\n
        v6 = a1;\n
    }\n
    v17 = v3 + a1;\n
    *((v15 + 2)) = v17;\n
    if (v6 + v17 < 4097)\n
        return a1 + v15;\n
    *((a0 + v5 * 8 + 5144)) = 0;\n
}\n
", "4212244:sub_404614": null, "4212256:malloc_free": "long long malloc_free(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rcx\n
    unsigned long v2;  // r9\n
    unsigned long v3;  // rax\n
    unsigned long v4;  // rsi\n
    unsigned long v5;  // rdi\n
    unsigned long v6;  // r11\n
    unsigned long v7;  // r8\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // rax\n
    unsigned long v11;  // rax\n
    unsigned long v12;  // r10\n
    unsigned long v13;  // rcx\n
    unsigned long v14;  // r10\n
    unsigned long v15;  // rcx\n
    unsigned long v16;  // rdi\n
    unsigned long v17;  // r11\n
    unsigned long v18;  // rax\n
    unsigned long v19;  // rax\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // rdx\n
    unsigned long v22;  // rdi\n
    unsigned long v23;  // rax\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rsi\n
\n
    if (!a1)\n
        return v11;\n
    v1 = a1;\n
    v2 = a0;\n
    v11 = a1 / 0x100000;\n
    *(&v11) = *((a0 + v11 + 1048));\n
    if (*(&v11) != 2)\n
    {\n
        if (*(&v11) == 1)\n
        {\n
            v3 = (*((a1 & -0x1000)) <= 15 ? (*((a1 & -0x1000)) <= 0x200 ? (*((a1 & -0x1000)) <= 0x1200 ? (*((a1 & -0x1000)) + 0x7ffffffee00 >> 11) + 66 : (*((a1 & -0x1000)) + 0x7ffffffe00 >> 7) + 34) : (*((a1 & -0x1000)) >> 4) + 2) : *((a1 & -0x1000)) / 4 - 1);\n
            *(a1) = *((a0 + v3 * 8));\n
            *((a0 + v3 * 8)) = a1;\n
            return v3;\n
        }\n
        if (*(&v11))\n
            return v11;\n
        if ((a1 & 4095) != 16)\n
        {\n
            v9 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_404a12;\n
        }\n
        else\n
        {\n
            if (*((a1 - 16)) != a0)\n
            {\n
                v1 = a0;\n
                v10 = cgc_heap_error(\"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\", a1);\n
            }\n
            else\n
            {\n
                v10 = *((a1 - 8));\n
                if (v10 - 0x20000 <= 2147356671 && !(v10 & 4095))\n
                {\n
                    v11 = cgc_deallocate(a0, a1);\n
                    return v11;\n
                }\n
            }\n
            cgc_heap_error(\"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\", v1, v10);\n
        }\n
    }\n
    else if (!(v1 & 7))\n
    {\n
        v4 = a1 - 16;\n
        v5 = *((v4 + 8));\n
        if ((v5 & 1))\n
        {\n
            v9 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_404a12;\n
        }\n
        else if (v5 - 131073 <= -131058)\n
        {\n
            v9 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_404a12;\n
        }\n
        else\n
        {\n
            v6 = *(v4);\n
            v7 = v5 + v4;\n
            v8 = v4 - v6;\n
            if (!v6)\n
                v8 = v6;\n
            if (!v8)\n
            {\n
                if (*(v7) == v5)\n
                    goto LABEL_404762;\n
                goto LABEL_404a1b;\n
            }\n
            else\n
            {\n
                v12 = *((v8 + 8));\n
                if (!((v12 & -2) == v6))\n
                    goto LABEL_404a35;\n
                if (*(v7) == v5)\n
                {\n
                    if ((v12 & 1))\n
                    {\n
                        if (v6 <= 15)\n
                        {\n
                            v14 = v12 / 4 - 1;\n
                        }\n
                        else if (v6 <= 0x200)\n
                        {\n
                            v14 = (v12 >> 4) + 2;\n
                        }\n
                        else if (v6 <= 0x1200)\n
                        {\n
                            v14 = (0x7ffffffe00 + v6 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v14 = 130;\n
                            if (v6 <= 0x20000)\n
                                v14 = (0x7ffffffee00 + v6 >> 11) + 66;\n
                        }\n
                        *((v8 + 8)) = v6;\n
                        v15 = *((v8 + 16));\n
                        if (v15)\n
                            *((v15 + 24)) = *((v8 + 24));\n
                        v16 = *((v8 + 24));\n
                        if (v16)\n
                            *((v16 + 16)) = v15;\n
                        if (*((v2 + (v14 << 3))) == v8)\n
                            *((v2 + v14 * 8)) = v16;\n
                        *((v8 + 16)) = 0;\n
                        v17 = v6 + *((v4 + 8));\n
                        *((v8 + 8)) = v17;\n
                        *(v7) = v17;\n
                        v4 = v8;\n
                        v13 = *((v7 + 8));\n
                        if (!(!(v13 & 1)))\n
                            goto LABEL_40487a;\n
                        goto LABEL_40476f;\n
                    }\n
LABEL_404762:\n
                    v13 = *((v7 + 8));\n
                    if ((v13 & 1))\n
                    {\n
LABEL_40487a:\n
                        v19 = v13 & -2;\n
                        if (v19 <= 15)\n
                        {\n
                            v20 = v13 / 4 - 1;\n
                        }\n
                        else if (v19 <= 0x200)\n
                        {\n
                            v20 = (v13 >> 4) + 2;\n
                        }\n
                        else if (v19 <= 0x1200)\n
                        {\n
                            v20 = (0x7ffffffe00 + v19 >> 7) + 34;\n
                        }\n
                        else\n
                        {\n
                            v20 = 130;\n
                            if (v19 <= 0x20000)\n
                                v20 = (0x7ffffffee00 + v19 >> 11) + 66;\n
                        }\n
                        *((v7 + 8)) = v19;\n
                        v21 = *((v7 + 16));\n
                        if (v21)\n
                            *((v21 + 24)) = *((v7 + 24));\n
                        v22 = *((v7 + 24));\n
                        if (v22)\n
                            *((v22 + 16)) = v21;\n
                        if (*((v2 + (v20 << 3))) == v7)\n
                            *((v2 + v20 * 8)) = v22;\n
                        *((v7 + 16)) = 0;\n
                        v23 = v19 + *((v4 + 8));\n
                        *((v4 + 8)) = v23;\n
                        *((v4 + v23)) = v23;\n
                        v18 = *((v4 + 8));\n
                        if (v18 > 15)\n
                        {\n
LABEL_404937:\n
                            if (v18 <= 0x200)\n
                            {\n
                                v1 = (v18 >> 4) + 2;\n
                            }\n
                            else if (v18 <= 0x1200)\n
                            {\n
                                v1 = (0x7ffffffe00 + v18 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v1 = 130;\n
                                if (v18 <= 0x20000)\n
                                    v1 = (0x7ffffffee00 + v18 >> 11) + 66;\n
                            }\n
LABEL_40498d:\n
                            if ((v18 & 1))\n
                            {\n
                                v8 = cgc_heap_error(\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\");\n
                            }\n
                            else\n
                            {\n
                                *((v4 + 8)) = v18 | 1;\n
                                *((v4 + 16)) = 0;\n
                                *((v4 + 24)) = *((v2 + v1 * 8));\n
                                *((v2 + v1 * 8)) = v4;\n
                                v11 = *((v4 + 24));\n
                                if (!v11)\n
                                    return v11;\n
                                *((v11 + 16)) = v4;\n
                                return v11;\n
                            }\n
LABEL_404a35:\n
                            v24 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
                            v25 = v8;\n
LABEL_404a3e:\n
                            cgc_heap_error(v24, v25, v1);\n
                            return cgc_malloc_size(v24, v25, v1, v1, v7, v2);\n
                        }\n
LABEL_40477d:\n
                        v1 = v18 / 4 - 1;\n
                        goto LABEL_40498d;\n
                    }\n
LABEL_40476f:\n
                    v18 = *((v4 + 8));\n
                    if (!(v18 <= 15))\n
                        goto LABEL_404937;\n
                    goto LABEL_40477d;\n
                }\n
            }\n
        }\n
    }\n
    v9 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_404a12:\n
    cgc_heap_error(v9, v1);\n
LABEL_404a1b:\n
    v24 = \"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\";\n
    v25 = v7;\n
    goto LABEL_404a3e;\n
}\n
", "4213328:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_size(unsigned long a0, struct_0 *a1)\n
{\n
    char v1;  // al\n
\n
    v1 = *((a0 + (a1 >> 20) + 1048));\n
    if (!(v1 & 253))\n
    {\n
        return a1[1].field_-8 - 16;\n
    }\n
    else if (v1 == 1)\n
    {\n
        return *((a1 & -0x1000));\n
    }\n
    else\n
    {\n
        return 0;\n
    }\n
}\n
", "4213392:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned long long field_-8;\n
} struct_0;\n
\n
long long cgc_malloc_realloc(unsigned long a0, struct_0 *a1, unsigned long long a2)\n
{\n
    unsigned long v1;  // r12\n
    struct_0 *v3;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v4;  // rax\n
\n
    if (a2 > 2147483647)\n
    {\n
LABEL_404aa8:\n
        v3 = 0;\n
        goto LABEL_404b7c;\n
    }\n
    if (!a2)\n
    {\n
        malloc_free(a0, a1);\n
        v3 = 0;\n
        goto LABEL_404b7c;\n
    }\n
    if (!a1)\n
        return cgc_malloc_alloc(a0, a2);\n
    v1 = a1 / 0x100000;\n
    if (!(*((a0 + v1 + 1048)) & 253))\n
    {\n
        if (a1[1].field_-8 - 16 < a2)\n
            goto LABEL_404b1a;\n
    }\n
    else\n
    {\n
        if (*((a0 + v1 + 1048)) == 1)\n
        {\n
            if (*((a1 & -0x1000)) < a2)\n
                goto LABEL_404b1a;\n
        }\n
        else\n
        {\n
            if (0 < a2)\n
            {\n
LABEL_404b1a:\n
                v4 = cgc_malloc_alloc(a0, a2);\n
                if (v4)\n
                {\n
                    v3 = v4;\n
                    cgc_memcpy(v4, a1);\n
                    malloc_free(a0, a1);\n
LABEL_404b7c:\n
                    return v3;\n
                }\n
                goto LABEL_404aa8;\n
            }\n
        }\n
    }\n
    v3 = a1;\n
    goto LABEL_404b7c;\n
}\n
", "4213644:sub_404b8c": null, "4213648:cgc_heap_error": "extern unsigned long long cgc_stderr;\n
\n
long long cgc_heap_error(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xb0]\n
    unsigned long v5;  // [bp-0xa8]\n
    unsigned long v6;  // [bp-0xa0]\n
    unsigned long v7;  // [bp-0x98]\n
    unsigned long v8;  // [bp-0x90]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    int v16;  // [bp-0x18]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long long v19;  // rdx\n
    unsigned long long v20;  // rcx\n
    unsigned long long v21;  // r8\n
    unsigned long long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    cgc_vfprintf(cgc_stderr, a0, &v0);\n
    cgc__terminate(cgc_stderr);\n
    return cgc_memchr(cgc_stderr, a0, v19, v20, v21, v22);\n
}\n
", "4213824:cgc_memchr": "long long cgc_memchr(char *a0, unsigned long a1, unsigned long long a2)\n
{\n
    int tmp_5;  // tmp #5\n
    char *v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a2)\n
    {\n
        v1 = a0;\n
        do\n
        {\n
            if (*(v1) == a1)\n
                return v1;\n
            v1 += 1;\n
            tmp_5 = a2;\n
            a2 -= 1;\n
        } while (tmp_5 != 1);\n
    }\n
    return 0;\n
}\n
", "4213864:sub_404c68": null, "4213872:cgc_memcmp": "long long cgc_memcmp(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v1;  // rcx, Other Possible Types: unsigned long\n
\n
    if (!a2)\n
        return 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v1)) != *((a1 + v1)))\n
            return *((a0 + v1)) - *((a1 + v1));\n
        v1 += 1;\n
        if (a2 == v1)\n
            return 0;\n
    }\n
}\n
", "4213926:sub_404ca6": null, "4213936:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    unsigned long v2;  // r11\n
    unsigned long long v3;  // rdi\n
    unsigned long long v4;  // r9\n
    unsigned long long v5;  // r8\n
    int v6;  // xmm1\n
    int v7;  // xmm1\n
    int v8;  // xmm1\n
    int v9;  // xmm1\n
    unsigned long v10;  // rdi\n
    unsigned long v11;  // r9, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r9\n
    unsigned long v13;  // r10\n
    unsigned long v15;  // rdi\n
    int v16;  // xmm1\n
    unsigned long v17;  // r8\n
    unsigned long long v18;  // r8\n
    char *v19;  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 >= 8)\n
    {\n
        if (&a2[a1] <= a0)\n
        {\n
LABEL_404d58:\n
            if (a2 < 32)\n
            {\n
                v2 = 0;\n
            }\n
            else\n
            {\n
                v2 = a2 & -0x20;\n
                v3 = v2 - 32;\n
                v4 = (v3 >> 5) + 1;\n
                v5 = v4 & 3;\n
                if (v3 < 96)\n
                {\n
                    v10 = 0;\n
                }\n
                else\n
                {\n
                    v11 = v4 & -4;\n
                    v10 = 0;\n
                    do\n
                    {\n
                        v6 = *((a1 + v10 + 16));\n
                        *(&v1[v10]) = *((a1 + v10));\n
                        *(&v1[16 + v10]) = v6;\n
                        v7 = *((a1 + v10 + 48));\n
                        *(&v1[32 + v10]) = *((a1 + v10 + 32));\n
                        *(&v1[48 + v10]) = v7;\n
                        v8 = *((a1 + v10 + 80));\n
                        *(&v1[64 + v10]) = *((a1 + v10 + 64));\n
                        *(&v1[80 + v10]) = v8;\n
                        v9 = *((a1 + v10 + 112));\n
                        *(&v1[96 + v10]) = *((a1 + v10 + 96));\n
                        *(&v1[112 + v10]) = v9;\n
                        v10 -= -128;\n
                        tmp_21 = v11;\n
                        v11 -= 4;\n
                    } while (tmp_21 != 4);\n
                }\n
                if (v5)\n
                {\n
                    v12 = &v1[v10 + 16];\n
                    v13 = a1 + v10 + 16;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        v16 = *((v13 + v15));\n
                        *((-16 + v12 + v15)) = *((v13 + v15 - 16));\n
                        *((v12 + v15)) = v16;\n
                        v15 += 32;\n
                    } while (v5 * 32 != v15);\n
                }\n
                if (v2 == a2)\n
                    return v1;\n
                if (!(a2 & 24))\n
                    goto LABEL_404ce3;\n
            }\n
            v17 = v2;\n
            v2 = a2 & -8;\n
            do\n
            {\n
                *(&v1[v17]) = *((a1 + v17));\n
                v17 += 8;\n
            } while (v2 != v17);\n
            if (v2 == a2)\n
                return v1;\n
LABEL_404ce3:\n
            v18 = &a2[~(v2)];\n
            v19 = a2 & 3;\n
            if ((a2 & 3))\n
            {\n
                do\n
                {\n
                    v1[v2] = *((a1 + v2));\n
                    v2 += 1;\n
                    tmp_7 = v19;\n
                    v19 -= 1;\n
                } while (tmp_7 != 1);\n
            }\n
            if (v18 < 3)\n
                return v1;\n
            do\n
            {\n
                v1[v2] = *((a1 + v2));\n
                v1[1 + v2] = *((a1 + v2 + 1));\n
                v1[2 + v2] = *((a1 + v2 + 2));\n
                v1[3 + v2] = *((a1 + v2 + 3));\n
                v2 += 4;\n
            } while (a2 != v2);\n
        }\n
        else if (a0 + a2 <= a1)\n
        {\n
            goto LABEL_404d58;\n
        }\n
    }\n
    v2 = 0;\n
    goto LABEL_404ce3;\n
}\n
", "4214399:sub_404e7f": null, "4214400:cgc_memmove": "long long cgc_memmove(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    int tmp_21;  // tmp #21\n
    int tmp_7;  // tmp #7\n
    char *v1;  // rax\n
    char *v2;  // r8, Other Possible Types: unsigned long\n
    unsigned long v3;  // r11\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // r9\n
    unsigned long long v7;  // rdi\n
    unsigned long long v8;  // r9\n
    unsigned long long v9;  // r8\n
    uint128_t *v10;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v11;  // rdi, Other Possible Types: unsigned long long\n
    uint128_t *v12;  // r10\n
    unsigned long v13;  // r11\n
    unsigned long v14;  // rcx\n
    unsigned long v15;  // rdi\n
    unsigned long v16;  // r9, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    int v18;  // xmm1\n
    int v19;  // xmm1\n
    int v20;  // xmm1\n
    uint128_t *v21;  // r9\n
    unsigned long v22;  // r10\n
    unsigned long v24;  // rdi\n
    unsigned long long v25;  // rdi\n
    uint128_t *v27;  // rcx, Other Possible Types: unsigned long\n
    int v28;  // xmm1\n
    unsigned long v29;  // r8\n
    char *v30;  // rcx\n
    char *v31;  // rcx, Other Possible Types: unsigned long\n
    unsigned long long v32;  // r8\n
    char *v33;  // rdi, Other Possible Types: unsigned long\n
    unsigned long long v34;  // r9\n
    char *v35;  // rcx, Other Possible Types: unsigned long\n
    unsigned long v36;  // rdx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    if (a0 > a1)\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 4)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_404fda:\n
                if (a2 < 16)\n
                {\n
                    v2 = 0;\n
                }\n
                else\n
                {\n
                    v2 = a2 & -0x10;\n
                    v4 = v2 - 16;\n
                    v5 = (v4 >> 4) + 1;\n
                    v6 = v5 & 3;\n
                    if (v4 < 48)\n
                    {\n
                        v10 = 0;\n
                    }\n
                    else\n
                    {\n
                        v11 = v5 & -4;\n
                        v12 = v1 + a2 - 16;\n
                        v13 = &a2[a1 + 16];\n
                        v14 = 0;\n
                        do\n
                        {\n
                            *((v12 + v14)) = *((v13 + v14));\n
                            *((-16 + v12 + v14)) = *((v13 + v14 - 16));\n
                            *((-32 + v12 + v14)) = *((v13 + v14 - 32));\n
                            *((-48 + v12 + v14)) = *((v13 + v14 - 48));\n
                            v14 -= 64;\n
                            tmp_13 = v11;\n
                            v11 -= 4;\n
                        } while (tmp_13 != 4);\n
                        v10 = -(v14);\n
                    }\n
                    if (v6)\n
                    {\n
                        v25 = &a2[-1 * v10];\n
                        v27 = 0;\n
                        do\n
                        {\n
                            *(&v1[16 + v27 + v25]) = *((a1 + v25 - 16 + v27));\n
                            v27 -= 16;\n
                        } while (v6 * 16 + v27);\n
                    }\n
                    if (v2 == a2)\n
                        return v1;\n
                    if (!(a2 & 12))\n
                        goto LABEL_404ec1;\n
                }\n
                v30 = v2;\n
                v2 = a2 & -4;\n
                v31 = -(v30);\n
                do\n
                {\n
                    *((v1 + a2 - 4 + v31)) = *(&a2[4 + v31 + a1]);\n
                    v31 -= 4;\n
                } while (!(v2) != v31);\n
                if (v2 == a2)\n
                    return v1;\n
LABEL_404ec1:\n
                v34 = &a2[~(v2)];\n
                if ((a2 & 3))\n
                {\n
                    v35 = 0;\n
                    do\n
                    {\n
                        v1[v35 + v34] = *((a1 + v34 + v35));\n
                        v35 -= 1;\n
                    } while (!(a2 & 3) != v35);\n
                    v2 -= v35;\n
                }\n
                if (v34 < 3)\n
                    return v1;\n
                v36 = &a2[-1 * v2];\n
                do\n
                {\n
                    v1[1 + v36] = *((a1 + v36 - 1));\n
                    v1[2 + v36] = *((a1 + v36 - 2));\n
                    v1[3 + v36] = *((a1 + v36 - 3));\n
                    v1[4 + v36] = *((a1 + v36 - 4));\n
                    tmp_10 = v36;\n
                    v36 -= 4;\n
                } while (tmp_10 != 4);\n
                return v1;\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_404fda;\n
            }\n
        }\n
        v2 = 0;\n
        goto LABEL_404ec1;\n
    }\n
    else\n
    {\n
        if (!a2)\n
            return a0;\n
        if (a2 >= 8)\n
        {\n
            if (&a2[a1] <= a0)\n
            {\n
LABEL_404fe8:\n
                if (a2 < 32)\n
                {\n
                    v3 = 0;\n
                }\n
                else\n
                {\n
                    v3 = a2 & -0x20;\n
                    v7 = v3 - 32;\n
                    v8 = (v7 >> 5) + 1;\n
                    v9 = v8 & 3;\n
                    if (v7 < 96)\n
                    {\n
                        v15 = 0;\n
                    }\n
                    else\n
                    {\n
                        v16 = v8 & -4;\n
                        v15 = 0;\n
                        do\n
                        {\n
                            v17 = *((a1 + v15 + 16));\n
                            *(&v1[v15]) = *((a1 + v15));\n
                            *(&v1[16 + v15]) = v17;\n
                            v18 = *((a1 + v15 + 48));\n
                            *(&v1[32 + v15]) = *((a1 + v15 + 32));\n
                            *(&v1[48 + v15]) = v18;\n
                            v19 = *((a1 + v15 + 80));\n
                            *(&v1[64 + v15]) = *((a1 + v15 + 64));\n
                            *(&v1[80 + v15]) = v19;\n
                            v20 = *((a1 + v15 + 112));\n
                            *(&v1[96 + v15]) = *((a1 + v15 + 96));\n
                            *(&v1[112 + v15]) = v20;\n
                            v15 -= -128;\n
                            tmp_21 = v16;\n
                            v16 -= 4;\n
                        } while (tmp_21 != 4);\n
                    }\n
                    if (v9)\n
                    {\n
                        v21 = &v1[v15 + 16];\n
                        v22 = a1 + v15 + 16;\n
                        v24 = 0;\n
                        do\n
                        {\n
                            v28 = *((v22 + v24));\n
                            *((-16 + v21 + v24)) = *((v22 + v24 - 16));\n
                            *((v21 + v24)) = v28;\n
                            v24 += 32;\n
                        } while (v9 * 32 != v24);\n
                    }\n
                    if (v3 == a2)\n
                        return v1;\n
                    if (!(a2 & 24))\n
                        goto LABEL_404f6b;\n
                }\n
                v29 = v3;\n
                v3 = a2 & -8;\n
                do\n
                {\n
                    *(&v1[v29]) = *((a1 + v29));\n
                    v29 += 8;\n
                } while (v3 != v29);\n
                if (v3 == a2)\n
                    return v1;\n
LABEL_404f6b:\n
                v32 = &a2[~(v3)];\n
                v33 = a2 & 3;\n
                if ((a2 & 3))\n
                {\n
                    do\n
                    {\n
                        v1[v3] = *((a1 + v3));\n
                        v3 += 1;\n
                        tmp_7 = v33;\n
                        v33 -= 1;\n
                    } while (tmp_7 != 1);\n
                }\n
                if (v32 < 3)\n
                    return v1;\n
                do\n
                {\n
                    v1[v3] = *((a1 + v3));\n
                    v1[1 + v3] = *((a1 + v3 + 1));\n
                    v1[2 + v3] = *((a1 + v3 + 2));\n
                    v1[3 + v3] = *((a1 + v3 + 3));\n
                    v3 += 4;\n
                } while (a2 != v3);\n
            }\n
            else if (a0 + a2 <= a1)\n
            {\n
                goto LABEL_404fe8;\n
            }\n
        }\n
        v3 = 0;\n
        goto LABEL_404f6b;\n
    }\n
}\n
", "4215343:sub_40522f": null, "4215344:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, char *a2)\n
{\n
    int tmp_43;  // tmp #43\n
    int tmp_44;  // tmp #44\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    char *v1;  // rax\n
    unsigned long v2;  // rcx\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v5;  // xmm0\n
    unsigned long long v6;  // rdi\n
    unsigned long long v7;  // r10\n
    unsigned long long v8;  // r9\n
    unsigned long v9;  // rdi\n
    unsigned long v10;  // r10, Other Possible Types: unsigned long long\n
    uint128_t *v11;  // r10\n
    unsigned long v13;  // rdi\n
    unsigned long v14;  // rdi\n
    int v15;  // xmm0\n
\n
    v1 = a0;\n
    if (!a2)\n
        return a0;\n
    if (a2 < 8)\n
    {\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v2 = 0;\n
        }\n
        else\n
        {\n
            v2 = a2 & -0x20;\n
            tmp_43 = InterleaveLOV(tmp_44, tmp_44);\n
            v3 = tmp_43;\n
            v4 = v3 / 0x10000000000000000 CONCAT v3 CONCAT v3 CONCAT v3 CONCAT v3;\n
            v5 = v4 CONCAT v4 CONCAT v4 CONCAT v4;\n
            v6 = v2 - 32;\n
            v7 = (v6 >> 5) + 1;\n
            v8 = v7 & 7;\n
            if (v6 < 224)\n
            {\n
                v9 = 0;\n
            }\n
            else\n
            {\n
                v10 = v7 & -8;\n
                v9 = 0;\n
                do\n
                {\n
                    *(&v1[v9]) = v5;\n
                    *(&v1[16 + v9]) = v5;\n
                    *(&v1[32 + v9]) = v5;\n
                    *(&v1[48 + v9]) = v5;\n
                    *(&v1[64 + v9]) = v5;\n
                    *(&v1[80 + v9]) = v5;\n
                    *(&v1[96 + v9]) = v5;\n
                    *(&v1[112 + v9]) = v5;\n
                    *(&v1[128 + v9]) = v5;\n
                    *(&v1[144 + v9]) = v5;\n
                    *(&v1[160 + v9]) = v5;\n
                    *(&v1[176 + v9]) = v5;\n
                    *(&v1[192 + v9]) = v5;\n
                    *(&v1[208 + v9]) = v5;\n
                    *(&v1[224 + v9]) = v5;\n
                    *(&v1[240 + v9]) = v5;\n
                    v9 += 0x100;\n
                    tmp_21 = v10;\n
                    v10 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v8)\n
            {\n
                v11 = &v1[v9 + 16];\n
                v13 = 0;\n
                do\n
                {\n
                    *((-16 + v11 + v13)) = v5;\n
                    *((v11 + v13)) = v5;\n
                    v13 += 32;\n
                } while (v8 * 32 != v13);\n
            }\n
            if (v2 == a2)\n
                return v1;\n
            if (!(a2 & 24))\n
                goto LABEL_4053b0;\n
        }\n
        v14 = v2;\n
        v2 = a2 & -8;\n
        tmp_20 = InterleaveLOV(tmp_21, tmp_21);\n
        v15 = tmp_20;\n
        do\n
        {\n
            *(&v1[v14]) = v15 / 0x10000000000000000 CONCAT v15 CONCAT v15 CONCAT v15 CONCAT v15;\n
            v14 += 8;\n
        } while (v2 != v14);\n
        if (v2 == a2)\n
            return v1;\n
    }\n
    do\n
    {\n
LABEL_4053b0:\n
        v1[v2] = a1;\n
        v2 += 1;\n
    } while (a2 != v2);\n
    return v1;\n
}\n
", "4215746:sub_4053c2": null, "4215760:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_printf(unsigned long a0)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xc0]\n
    unsigned long v5;  // [bp-0xb8]\n
    unsigned long v6;  // [bp-0xb0]\n
    unsigned long v7;  // [bp-0xa8]\n
    unsigned long v8;  // [bp-0xa0]\n
    int v9;  // [bp-0x98]\n
    int v10;  // [bp-0x88]\n
    int v11;  // [bp-0x78]\n
    int v12;  // [bp-0x68]\n
    int v13;  // [bp-0x58]\n
    int v14;  // [bp-0x48]\n
    int v15;  // [bp-0x38]\n
    int v16;  // [bp-0x28]\n
    unsigned long v17;  // [bp+0x8]\n
    unsigned long v18;  // rsi\n
    unsigned long v19;  // rdx\n
    unsigned long v20;  // rcx\n
    unsigned long v21;  // r8\n
    unsigned long v22;  // r9\n
    char v23;  // al\n
    int v24;  // xmm0\n
    int v25;  // xmm1\n
    int v26;  // xmm2\n
    int v27;  // xmm3\n
    int v28;  // xmm4\n
    int v29;  // xmm5\n
    int v30;  // xmm6\n
    int v31;  // xmm7\n
    unsigned long v32;  // r14, Other Possible Types: unsigned long long\n
\n
    v4 = v18;\n
    v5 = v19;\n
    v6 = v20;\n
    v7 = v21;\n
    v8 = v22;\n
    if (v23)\n
    {\n
        v9 = v24;\n
        v10 = v25;\n
        v11 = v26;\n
        v12 = v27;\n
        v13 = v28;\n
        v14 = v29;\n
        v15 = v30;\n
        v16 = v31;\n
    }\n
    v2 = &v3;\n
    v1 = &v17;\n
    v0 = 206158430216;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v32 = cgc__vsfprintf();\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v32;\n
    }\n
    v32 = cgc__vsfprintf();\n
    return v32;\n
}\n
", "4215979:sub_4054ab": null, "4215984:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
long long cgc_vprintf()\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (cgc_stdout->field_8 != -1)\n
    {\n
        v1 = cgc__vsfprintf();\n
        return v1;\n
    }\n
    cgc_stdout->field_8 = 0;\n
    v1 = cgc__vsfprintf();\n
    cgc_fflush(cgc_stdout);\n
    cgc_stdout->field_8 = -1;\n
    return v1;\n
}\n
", "4216070:sub_405506": null, "4216080:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_fprintf(struct_0 *a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xe8]\n
    unsigned long v1;  // [bp-0xe0]\n
    unsigned long v2;  // [bp-0xd8]\n
    char v3;  // [bp-0xc8]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    unsigned long v6;  // [bp-0xa8]\n
    unsigned long v7;  // [bp-0xa0]\n
    int v8;  // [bp-0x98]\n
    int v9;  // [bp-0x88]\n
    int v10;  // [bp-0x78]\n
    int v11;  // [bp-0x68]\n
    int v12;  // [bp-0x58]\n
    int v13;  // [bp-0x48]\n
    int v14;  // [bp-0x38]\n
    int v15;  // [bp-0x28]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
    unsigned long v30;  // r14, Other Possible Types: unsigned long long\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v30;\n
    }\n
    v30 = cgc__vsfprintf(a1, &v0, a0, 0);\n
    return v30;\n
}\n
", "4216296:sub_4055e8": null, "4216304:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_vfprintf(struct_0 *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (a0->field_8 == -1)\n
    {\n
        a0->field_8 = 0;\n
        v1 = cgc__vsfprintf(a1, a2, a0, 0);\n
        cgc_fflush(a0);\n
        a0->field_8 = -1;\n
        return v1;\n
    }\n
    v1 = cgc__vsfprintf(a1, a2, a0, 0);\n
    return v1;\n
}\n
", "4216395:sub_40564b": null, "4216400:cgc_sprintf": "long long cgc_sprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    unsigned long long v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    char v3;  // [bp-0xb8]\n
    unsigned long v4;  // [bp-0xa8]\n
    unsigned long v5;  // [bp-0xa0]\n
    unsigned long v6;  // [bp-0x98]\n
    unsigned long v7;  // [bp-0x90]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    int v14;  // [bp-0x28]\n
    int v15;  // [bp-0x18]\n
    unsigned long v16;  // [bp+0x8]\n
    unsigned long v17;  // rdx\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // r8\n
    unsigned long v20;  // r9\n
    char v21;  // al\n
    int v22;  // xmm0\n
    int v23;  // xmm1\n
    int v24;  // xmm2\n
    int v25;  // xmm3\n
    int v26;  // xmm4\n
    int v27;  // xmm5\n
    int v28;  // xmm6\n
    int v29;  // xmm7\n
\n
    v4 = v17;\n
    v5 = v18;\n
    v6 = v19;\n
    v7 = v20;\n
    if (v21)\n
    {\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
        v14 = v28;\n
        v15 = v29;\n
    }\n
    v2 = &v3;\n
    v1 = &v16;\n
    v0 = 206158430224;\n
    return cgc__vsfprintf(a1, &v0, 0, a0);\n
}\n
", "4216554:sub_4056ea": null, "4216560:cgc_vsprintf": "long long cgc_vsprintf(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc__vsfprintf(a1, a2, 0, a0);\n
}\n
", "4216589:sub_40570d": null, "4216592:cgc__vsfprintf": "long long cgc__vsfprintf(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    int tmp_14;  // tmp #14\n
    int tmp_2;  // tmp #2\n
    int tmp_1;  // tmp #1\n
    unsigned long v0;  // [bp-0x1d0]\n
    int tmp_49;  // tmp #49\n
    int tmp_69;  // tmp #69\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0xa9]\n
    unsigned long v2;  // [bp-0xa8]\n
    unsigned long v3;  // [bp-0xa0]\n
    unsigned long v4;  // [bp-0x98]\n
    unsigned long v5;  // [bp-0x90]\n
    unsigned long v6;  // [bp-0x88]\n
    char v7;  // [bp-0x80]\n
    char v8;  // [bp-0x7f]\n
    char v9;  // [bp-0x6e]\n
    char v10;  // [bp-0x6d]\n
    char v11;  // [bp-0x6c]\n
    unsigned long v12;  // [bp-0x40]\n
    unsigned long v13;  // [bp-0x28]\n
    unsigned long v15;  // r12\n
    unsigned long v16;  // r14\n
    unsigned long v17;  // r12\n
    unsigned int v18;  // eax\n
    char v19;  // r13b\n
    unsigned long v20;  // rax\n
    char v21;  // bl\n
    char v22;  // cc_dep1\n
    char v23;  // cc_dep2\n
    unsigned long v24;  // rbx\n
    unsigned long v25;  // rcx\n
    unsigned long v26;  // rsi\n
    unsigned long v27;  // rcx\n
    unsigned long v28;  // rdi\n
    unsigned long v29;  // rcx\n
    unsigned long v30;  // rbx\n
    unsigned long v31;  // rcx\n
    unsigned long v32;  // r14\n
    unsigned long v33;  // rax\n
    unsigned long v34;  // rdx\n
    unsigned int v35;  // cc_dep1\n
    unsigned long v36;  // rdx\n
    unsigned long v37;  // r10\n
    unsigned long v38;  // rsi\n
    unsigned long v39;  // rcx\n
    unsigned long v40;  // rax\n
    unsigned long v41;  // rcx\n
    unsigned long v42;  // r13\n
    unsigned long v43;  // rax\n
    unsigned long v44;  // r15\n
    unsigned long v45;  // r13\n
    unsigned long v46;  // rcx\n
    unsigned int v47;  // edi\n
    unsigned long v48;  // r12\n
    unsigned long v49;  // rdx\n
    unsigned long v50;  // rbx\n
    unsigned long v51;  // cc_dep1\n
    unsigned long v52;  // cc_dep2\n
    unsigned long v53;  // r13\n
    unsigned long v54;  // r12\n
    unsigned long v55;  // rax\n
    unsigned int v56;  // ebx\n
    unsigned long v57;  // rax, Other Possible Types: char\n
    unsigned long v58;  // r13\n
\n
    v13 = v15;\n
    v16 = a3;\n
    v17 = a0 + 1;\n
    v4 = v17;\n
    v57 = *(a0);\n
    if (!*(a0))\n
    {\n
        v44 = 0;\n
    }\n
    else\n
    {\n
        v41 = &v7;\n
        v12 = 20 + -0x1 * &v7;\n
        v44 = 0;\n
        v3 = v16;\n
        v2 = a2;\n
        v5 = a1;\n
        while (true)\n
        {\n
            if (v57 != 37)\n
            {\n
                if (v44 < 2147483647)\n
                {\n
                    v1 = v57;\n
                    if (a2)\n
                    {\n
                        cgc_fwrite(&v1, 1, v2);\n
                        a2 = v2;\n
                    }\n
                    if (v16)\n
                        *((v16 + v44)) = v1;\n
                    v17 = v4;\n
                }\n
                else if (v44 == -1)\n
                {\n
                    goto LABEL_405e1d;\n
                }\n
                v44 += 1;\n
                v41 = v17 + 1;\n
                v4 = v41;\n
                tmp_14 = *(v17);\n
                v57 = *(v17);\n
                v17 = v41;\n
                if (!(!tmp_14))\n
                    continue;\n
                goto LABEL_405d91;\n
            }\n
            a0 = v17 + 1;\n
            v4 = a0;\n
            v18 = *(v17);\n
            v19 = 32;\n
            if (v18 == 32)\n
            {\n
LABEL_4057db:\n
                if (!(*(a0) - 48 <= 9))\n
                    goto LABEL_405872;\n
                goto LABEL_4057e7;\n
            }\n
            else if (v18 != 48)\n
            {\n
                if (!v18)\n
                    goto LABEL_405d91;\n
                v4 = v17;\n
                a0 = v17;\n
                goto LABEL_4057db;\n
            }\n
            else\n
            {\n
                v19 = 48;\n
                if (*(a0) - 48 <= 9)\n
                {\n
LABEL_4057e7:\n
                    v20 = cgc_strtoul();\n
                    a0 = v4;\n
                    goto LABEL_405874;\n
                }\n
                else\n
                {\n
LABEL_405872:\n
                    v20 = 0;\n
LABEL_405874:\n
                    v41 = a0 + 1;\n
                    v4 = v41;\n
                    a2 = *(a0);\n
                    v21 = 1;\n
                    if (a2 == 104)\n
                    {\n
                        a2 = a0 + 2;\n
                        v22 = *((a0 + 1));\n
                        v23 = 104;\n
                    }\n
                    else if (a2 == 108)\n
                    {\n
                        v22 = *((a0 + 1));\n
                        v23 = 108;\n
                        a2 = a0 + 2;\n
                        v21 = *((a0 + 1)) != 108;\n
                    }\n
                    else\n
                    {\n
                        if (!a2)\n
                        {\n
                            v16 = v3;\n
LABEL_405d91:\n
                            if (v44 < 2147483647)\n
                                break;\n
                            if (v44 == -1)\n
                            {\n
LABEL_405e1d:\n
                                cgc__terminate(a0);\n
                                return cgc_realloc(a0, a1, a2, v41, 3435973837, \"0123456789abcdef\");\n
                            }\n
                            return v44;\n
                        }\n
                        goto LABEL_4058b1;\n
                    }\n
                    if (v22 == v23)\n
                        v41 = a2;\n
                    a0 = v41;\n
LABEL_4058b1:\n
                    v4 = a0 + 1;\n
                    *(&a2) = *(a0);\n
                    v41 = *(a0);\n
                    a1 = v41 - 88;\n
                    if (a1 > 32)\n
                    {\n
                        v32 = v4 - v17;\n
                        if (!v41)\n
                        {\n
                            a2 = v2;\n
                            if (v44 >= 2147483647)\n
                            {\n
                                tmp_2 = v44;\n
                                tmp_1 = v32;\n
                                v44 += v32;\n
                                v16 = v3;\n
                                if (__CFADD__(tmp_2, tmp_1))\n
                                    goto LABEL_405e1d;\n
                                goto LABEL_405d91;\n
                            }\n
                            else\n
                            {\n
                                v58 = 2147483647 - v44;\n
                                if (v58 > v32)\n
                                    v58 = v32;\n
                                if (a2)\n
                                    cgc_fwrite(v17, v58, a2);\n
                                if (v32)\n
                                    cgc_memcpy(v32 + v44, v17, v58);\n
                                tmp_2 = v44;\n
                                tmp_1 = v32;\n
                                v44 += v32;\n
                                v32 = v3;\n
                                if (__CFADD__(tmp_2, tmp_1))\n
                                    goto LABEL_405e1d;\n
                                goto LABEL_405d91;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            a2 = v2;\n
                            if (v44 < 2147483647)\n
                            {\n
                                v45 = 2147483647 - v44;\n
                                if (v45 > v32)\n
                                    v45 = v32;\n
                                if (a2)\n
                                {\n
                                    cgc_fwrite(v17, v45, v2);\n
                                    a2 = v2;\n
                                }\n
                                if (v32)\n
                                {\n
                                    cgc_memcpy(v32 + v44, v17, v45);\n
                                    a2 = v2;\n
                                }\n
                                v51 = v44;\n
                                v52 = v32;\n
                                v44 += v32;\n
                                v32 = v3;\n
                                goto LABEL_405d5a;\n
                            }\n
                            else\n
                            {\n
                                tmp_1 = v32;\n
                                v44 += v32;\n
                                v16 = v3;\n
                                if (__CFADD__(0, tmp_1))\n
                                    goto LABEL_405e1d;\n
                                goto LABEL_405d6d;\n
                            }\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v0 = 4831842305;\n
                        if (((*(&v0 + ((a1 & 63) >> 3)) >> (a1 & 63 & 7)) & 1))\n
                        {\n
                            v6 = v20;\n
                            if (a2 != 100)\n
                            {\n
                                v16 = v3;\n
                                v54 = &v7;\n
                                if (!v21)\n
                                    goto LABEL_405d91;\n
                                v28 = v5;\n
                                v29 = *(v28);\n
                                if (v29 > 40)\n
                                {\n
                                    v38 = *((v28 + 8));\n
                                    *((v28 + 8)) = v38 + 8;\n
                                }\n
                                else\n
                                {\n
                                    v38 = v29 + *((v28 + 16));\n
                                    *(v28) = v29 + 8;\n
                                }\n
                                v39 = *(v38);\n
                                if (a2 == 117)\n
                                    v47 = 10;\n
                                else\n
                                    v47 = 16;\n
                                v50 = (a2 == 88 ? \"0123456789abcdef\" : \"0123456789ABCDEF\");\n
                                v10 = 0;\n
                                a1 = &v10;\n
                                if (!v39)\n
                                {\n
                                    v9 = *(v50);\n
                                    a1 = &v9;\n
                                }\n
                                else\n
                                {\n
                                    do\n
                                    {\n
                                        *((a1 - 1)) = *((v50 + ((0 CONCAT v39) /m v47 >> 32)));\n
                                        a1 = &v9;\n
                                        tmp_49 = v39;\n
                                        v39 = (0 CONCAT v39) /m v47;\n
                                    } while (tmp_49 >= v47);\n
                                }\n
                                v49 = v12 + a1;\n
                                a0 = &v7;\n
                                goto LABEL_405b40;\n
                            }\n
                            v16 = v3;\n
                            v54 = &v7;\n
                            if (!v21)\n
                                goto LABEL_405d91;\n
                            v26 = v5;\n
                            v27 = *(v26);\n
                            if (v27 <= 40)\n
                            {\n
                                v34 = v27 + *((v26 + 16));\n
                                *(v26) = v27 + 8;\n
                                v37 = *(v34);\n
                                v35 = v37;\n
                                if (v37 < 0)\n
                                    goto LABEL_405a72;\n
                                goto LABEL_405924;\n
                            }\n
                            else\n
                            {\n
                                v36 = *((v26 + 8));\n
                                *((v26 + 8)) = v36 + 8;\n
                                v37 = *(v36);\n
                                v35 = v37;\n
                                if (v37 >= 0)\n
                                {\n
LABEL_405924:\n
                                    v10 = 0;\n
                                    a1 = &v10;\n
                                    a0 = &v7;\n
                                    if (!v35)\n
                                    {\n
                                        v9 = 48;\n
                                        a0 = &v7;\n
                                        a1 = &v9;\n
                                        goto LABEL_405abb;\n
                                    }\n
                                }\n
                                else\n
                                {\n
LABEL_405a72:\n
                                    v7 = 45;\n
                                    v37 = -(v37);\n
                                    v11 = 0;\n
                                    a1 = &v11;\n
                                    a0 = &v8;\n
                                    do\n
                                    {\n
                                        v46 = 3435973837 * v37 >> 35;\n
                                        *((a1 - 1)) = *((4240380 + v37 + -10 * v46));\n
                                        a1 -= 1;\n
                                        tmp_69 = v37;\n
                                        v37 = v46;\n
                                    } while (tmp_69 > 9);\n
LABEL_405abb:\n
                                    v49 = a1 - a0 + 20;\n
LABEL_405b40:\n
                                    cgc_memmove(a0, a1, v49);\n
                                    v55 = cgc_strlen(v54);\n
                                    v48 = v55;\n
                                    v41 = v6;\n
                                    if (v41 <= v55)\n
                                    {\n
                                        a2 = v2;\n
                                    }\n
                                    else\n
                                    {\n
                                        v56 = v55 - v41;\n
                                        a2 = v2;\n
                                        do\n
                                        {\n
                                            if (v44 < 2147483647)\n
                                            {\n
                                                v1 = v19;\n
                                                if (a2)\n
                                                {\n
                                                    cgc_fwrite(&v1, 1, v2);\n
                                                    a2 = v2;\n
                                                }\n
                                                if (v16)\n
                                                    *((v16 + v44)) = v1;\n
                                            }\n
                                            else\n
                                            {\n
                                                if (!(v44 == -1))\n
                                                    continue;\n
                                            }\n
                                            tmp_2 = v44;\n
                                            v44 += 1;\n
                                            tmp_12 = v56 + 1;\n
                                            v56 += 1;\n
                                        } while (!([D] amd64g_calculate_condition(0x4<64>, 0x17<64>, t12, 0x0<64>, ((((t2 + 0x1<64>) <= t2)) ? (0x1<64>) : (0x0<64>)))));\n
                                    }\n
                                    if (v44 >= 2147483647)\n
                                    {\n
                                        tmp_2 = v44;\n
                                        v44 += v55;\n
                                        if (__CFADD__(tmp_2, v55))\n
                                            goto LABEL_405e1d;\n
                                        goto LABEL_405d6d;\n
                                    }\n
                                    v53 = 2147483647 - v44;\n
                                    if (v53 > v55)\n
                                        v53 = v55;\n
                                    if (a2)\n
                                    {\n
                                        a1 = v53;\n
                                        cgc_fwrite(&v7, v53, v2);\n
                                        a2 = v2;\n
                                    }\n
                                    if (!v16)\n
                                        goto LABEL_405d57;\n
                                    a0 = v16 + v44;\n
                                    a1 = &v7;\n
LABEL_405d4a:\n
                                    cgc_memcpy(a0, a1, v53);\n
                                    a2 = v2;\n
LABEL_405d57:\n
                                    v51 = v44;\n
                                    v52 = v48;\n
                                    v44 += v48;\n
LABEL_405d5a:\n
                                    if (__CFADD__(v51, v52))\n
                                        goto LABEL_405e1d;\n
LABEL_405d6d:\n
                                    v57 = v4;\n
                                    v17 = v57 + 1;\n
                                    v4 = v17;\n
                                    *(&v57) = *(v57);\n
                                    if (!*(&v57))\n
                                        goto LABEL_405d91;\n
                                }\n
                            }\n
                        }\n
                        else if (a1 == 11)\n
                        {\n
                            v24 = v5;\n
                            v25 = *(v24);\n
                            if (v25 <= 40)\n
                            {\n
                                v33 = v25 + *((v24 + 16));\n
                                v41 = v25 + 8;\n
                                *(v24) = v41;\n
                                v16 = v3;\n
                                a2 = v2;\n
                                if (!(v44 < 2147483647))\n
                                    goto LABEL_405cf6;\n
                            }\n
                            else\n
                            {\n
                                v33 = *((v24 + 8));\n
                                v41 = v33 + 8;\n
                                *((v24 + 8)) = v41;\n
                                v16 = v3;\n
                                a2 = v2;\n
                                if (v44 >= 2147483647)\n
                                {\n
LABEL_405cf6:\n
                                    if (v44 == -1)\n
                                        goto LABEL_405e1d;\n
LABEL_405d00:\n
                                    v44 += 1;\n
                                    goto LABEL_405d6d;\n
                                }\n
                            }\n
                            v1 = *(v33);\n
                            if (a2)\n
                            {\n
                                cgc_fwrite(&v1, 1, v2);\n
                                a2 = v2;\n
                            }\n
                            if (v16)\n
                            {\n
                                *((v16 + v44)) = v1;\n
                                goto LABEL_405d00;\n
                            }\n
                        }\n
                        else if (a1 == 27)\n
                        {\n
                            v30 = v5;\n
                            v31 = *(v30);\n
                            if (v31 > 40)\n
                            {\n
                                v40 = *((v30 + 8));\n
                                v41 = v40 + 8;\n
                                *((v30 + 8)) = v41;\n
                            }\n
                            else\n
                            {\n
                                v40 = v31 + *((v30 + 16));\n
                                v41 = v31 + 8;\n
                                *(v30) = v41;\n
                            }\n
                            v16 = v3;\n
                            v42 = *(v40);\n
                            v43 = cgc_strlen(v42);\n
                            v48 = v43;\n
                            if (v44 >= 2147483647)\n
                            {\n
                                v51 = v44;\n
                                v52 = v43;\n
                                v44 += v43;\n
                                a2 = v2;\n
                                goto LABEL_405d5a;\n
                            }\n
                            v6 = v42;\n
                            v53 = 2147483647 - v44;\n
                            if (v53 > v43)\n
                                v53 = v43;\n
                            a2 = v2;\n
                            if (a2)\n
                            {\n
                                cgc_fwrite(v6, v53, v2);\n
                                a2 = v2;\n
                            }\n
                            if (!v16)\n
                                goto LABEL_405d57;\n
                            a0 = v16 + v44;\n
                            a1 = v6;\n
                            goto LABEL_405d4a;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v16)\n
        *((v16 + v44)) = 0;\n
    return v44;\n
}\n
", "4216692:sub_405774": null, "4216842:sub_40580a": null, "4217717:sub_405b75": null, "4218416:cgc_realloc": "extern unsigned int g_heap;\n
\n
long long cgc_realloc(void* a0, unsigned long long a1)\n
{\n
    return cgc_malloc_realloc(&g_heap, a0, a1);\n
}\n
", "4218447:sub_405e4f": null, "4218448:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
long long cgc_strcasecmp(char *a0, char *a1)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    void* v2;  // al, Other Possible Types: unsigned long\n
    unsigned long long v3;  // rax\n
    struct_0 *v5;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1;\n
    v2 = *(a0);\n
    if (*(a0))\n
    {\n
        v5 = a0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v3 = cgc_tolower(v2);\n
            v2 = cgc_tolower(*(v1));\n
            if (v3 != v2)\n
            {\n
                *(&v2) = *((v5 - 1));\n
                return v2 - *(v1);\n
            }\n
            v1 += 1;\n
            v2 = *(v5);\n
            v5 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4218569:sub_405ec9": null, "4218576:cgc_strcasestr": "long long cgc_strcasestr(char a0[2], unsigned long long a1)\n
{\n
    unsigned long long v2;  // r15\n
    char v3[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rax\n
    char v5[2];  // r13, Other Possible Types: unsigned long\n
\n
    if (a0[0])\n
    {\n
        v2 = cgc_strlen(a1);\n
        v3 = 1;\n
        v5 = a0;\n
        do\n
        {\n
            if (!cgc_strncasecmp(v5, a1, v2))\n
                return v5;\n
            v4 = v3;\n
            v5 = &a0[v3];\n
            v3 = v3 + 1;\n
        } while (a0[v4]);\n
    }\n
    return 0;\n
}\n
", "4218695:sub_405f47": null, "4218704:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // cl, Other Possible Types: char\n
    unsigned long v2;  // rax\n
    unsigned long v4;  // rax\n
\n
    v1 = *(a0);\n
    v2 = 0;\n
    if (*(a0))\n
    {\n
        do\n
        {\n
            if (v1 == a1)\n
                return &a0[v2];\n
            v2 = v2 + 1;\n
            v1 = a0[v2];\n
        } while (v1);\n
    }\n
    v4 = (!a1 ? 0 : &a0[v2]);\n
    return v4;\n
}\n
", "4218769:sub_405f91": null, "4218784:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    void* v1;  // al, Other Possible Types: unsigned long\n
    char *v2;  // rdi, Other Possible Types: unsigned long\n
    char v3;  // cl\n
\n
    v1 = *(a0);\n
    if (*(a0))\n
    {\n
        v2 = a0 + 1;\n
        do\n
        {\n
            v3 = *(a1);\n
            if (!v3)\n
                return v1 - *(a1);\n
            if (v1 != v3)\n
                return v1 - *(a1);\n
            a1 += 1;\n
            v1 = *(v2);\n
            v2 += 1;\n
        } while (v1);\n
    }\n
    return 0 - *(a1);\n
}\n
", "4218857:sub_405fe9": null, "4218864:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char v1;  // cl\n
    char *v2;  // rdx, Other Possible Types: unsigned long\n
    char *v3;  // rsi, Other Possible Types: unsigned long\n
\n
    v1 = *(a1);\n
    v2 = a0;\n
    if (*(a1))\n
    {\n
        v3 = a1 + 1;\n
        v2 = a0;\n
        do\n
        {\n
            *(v2) = v1;\n
            v2 += 1;\n
            v1 = *(v3);\n
            v3 += 1;\n
        } while (v1);\n
    }\n
    *(v2) = 0;\n
    return a0;\n
}\n
", "4218921:sub_406029": null, "4218928:cgc_strdup": "long long cgc_strdup(unsigned int a0)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // rax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, a0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4219006:sub_40607e": null, "4219008:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v1;  // rcx, Other Possible Types: unsigned long\n
    char v2;  // cc_dep1\n
\n
    if (!*(a0))\n
        return 0;\n
    v1 = 0;\n
    do\n
    {\n
        v2 = a0[1 + v1];\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4219050:sub_4060aa": null, "4219056:cgc_strncasecmp": "long long cgc_strncasecmp(char a0[2], char *a1, unsigned long a2)\n
{\n
    char *v1;  // r14, Other Possible Types: unsigned long\n
    char v2[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v3;  // r15\n
    unsigned long v4;  // al, Other Possible Types: char\n
    unsigned long long v5;  // rax\n
    unsigned long v6;  // rax\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = &a0[a2];\n
    v4 = a0[0];\n
    if (a0[0])\n
    {\n
        while (*(v1))\n
        {\n
            v5 = cgc_tolower(v4);\n
            if (v5 != cgc_tolower(*(v1)))\n
                break;\n
            if (v2 >= v3)\n
                break;\n
            v1 += 1;\n
            v4 = *((v2 + 1));\n
            v2 += 1;\n
            if (!v4)\n
                break;\n
        }\n
    }\n
    v6 = (v2 == v3 ? *(v2) - *(v1) : 0);\n
    return v6;\n
}\n
", "4219187:sub_406133": null, "4219200:cgc_strncpy": "long long cgc_strncpy(char *a0, char *a1, unsigned long a2)\n
{\n
    int tmp_21;  // tmp #21\n
    char *v1;  // rax\n
    char v2;  // cl\n
    char *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned long v4;  // rdi\n
    unsigned long v5;  // r8, Other Possible Types: unsigned long long\n
    unsigned long v6;  // r10\n
    char *v7;  // r10\n
    unsigned long v8;  // rdi\n
    unsigned long long v9;  // rcx\n
    unsigned long long v10;  // r11\n
    unsigned long long v11;  // r9\n
    unsigned long v12;  // rsi\n
    unsigned long v13;  // r11, Other Possible Types: unsigned long long\n
    uint128_t *v14;  // rcx\n
    unsigned long v16;  // rsi\n
    char *v17;  // rsi, Other Possible Types: unsigned long\n
    unsigned long long v18;  // r8\n
    unsigned long long v19;  // rcx\n
    unsigned long v20;  // rcx, Other Possible Types: unsigned long long\n
\n
    v1 = a0;\n
    v2 = *(a1);\n
    v4 = 0;\n
    v3 = v1;\n
    if (*(a1) && a2)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1[v4] = v2;\n
            v2 = a1[1 + v4];\n
            v4 += 1;\n
            if (!v2)\n
                break;\n
            if (v4 >= a2)\n
                break;\n
        }\n
        v3 = &v1[v4];\n
    }\n
    if (v4 >= a2)\n
        return v1;\n
    v5 = 1 + v3 - v1;\n
    v6 = (!(a2 <= v5) ? v5 : a2);\n
    v7 = &v1[v6 + -1 * v3];\n
    if (v7 < 8)\n
    {\n
LABEL_4061a4:\n
        v17 = v3;\n
        goto LABEL_4062d6;\n
    }\n
    else\n
    {\n
        if (v7 < 32)\n
        {\n
            v8 = 0;\n
        }\n
        else\n
        {\n
            v8 = v7 & -0x20;\n
            v9 = v8 - 32;\n
            v10 = (v9 >> 5) + 1;\n
            v11 = v10 & 7;\n
            if (v9 < 224)\n
            {\n
                v12 = 0;\n
            }\n
            else\n
            {\n
                v13 = v10 & -8;\n
                v12 = 0;\n
                do\n
                {\n
                    *((v3 + v12)) = 0;\n
                    *((v3 + v12 + 16)) = 0;\n
                    *((v3 + v12 + 32)) = 0;\n
                    *((v3 + v12 + 48)) = 0;\n
                    *((v3 + v12 + 64)) = 0;\n
                    *((v3 + v12 + 80)) = 0;\n
                    *((v3 + v12 + 96)) = 0;\n
                    *((v3 + v12 + 112)) = 0;\n
                    *((v3 + v12 + 128)) = 0;\n
                    *((v3 + v12 + 144)) = 0;\n
                    *((v3 + v12 + 160)) = 0;\n
                    *((v3 + v12 + 176)) = 0;\n
                    *((v3 + v12 + 192)) = 0;\n
                    *((v3 + v12 + 208)) = 0;\n
                    *((v3 + v12 + 224)) = 0;\n
                    *((v3 + v12 + 240)) = 0;\n
                    v12 += 0x100;\n
                    tmp_21 = v13;\n
                    v13 -= 8;\n
                } while (tmp_21 != 8);\n
            }\n
            if (v11)\n
            {\n
                v14 = v12 + v3 + 16;\n
                v16 = 0;\n
                do\n
                {\n
                    *((-16 + v14 + v16)) = 0;\n
                    *((v14 + v16)) = 0;\n
                    v16 += 32;\n
                } while (v11 * 32 != v16);\n
            }\n
            if (v7 == v8)\n
                return v1;\n
            if (!(v7 & 24))\n
            {\n
                v3 += v8;\n
                goto LABEL_4061a4;\n
            }\n
        }\n
        if (a2 > v5)\n
            v5 = a2;\n
        v18 = &v1[v5 + -1 * v3];\n
        v19 = v18 & -8;\n
        v17 = v3 + v19;\n
        do\n
        {\n
            *((v3 + v8)) = 0;\n
            v8 += 8;\n
        } while (v19 != v8);\n
        if (v18 == v19)\n
            return v1;\n
LABEL_4062d6:\n
        v20 = v17 - v1;\n
        do\n
        {\n
            *(v17) = 0;\n
            v17 += 1;\n
            v20 += 1;\n
        } while (v20 < a2);\n
        return v1;\n
    }\n
}\n
", "4219647:sub_4062ff": null, "4219648:cgc_strndup": "long long cgc_strndup(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v1;  // rax\n
    char *v2;  // rbx\n
    unsigned long v3;  // rax\n
\n
    v1 = cgc_strlen(a0);\n
    v2 = (!(v1 <= a1) ? v1 : a1);\n
    v3 = cgc_malloc(v2 + 1);\n
    if (v3)\n
    {\n
        cgc_memcpy(v3, a0, v2);\n
        v2[v3] = 0;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4219736:sub_406358": null, "4219744:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char *v1;  // r15\n
    unsigned long v2;  // al, Other Possible Types: char\n
    unsigned long v3;  // rbx\n
    unsigned long long v4;  // rax\n
    char *v5;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    char *v6;  // rax, Other Possible Types: unsigned long\n
    char *v7;  // rbx\n
    void* v8;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = *(a0);\n
    if (!v1)\n
        return *(a0);\n
    v2 = *(v1);\n
    v3 = 0;\n
    if (!*(v1))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v4 = cgc_strchr(a1, v2);\n
            if (v4)\n
            {\n
                v5 = &v1[v3];\n
                if (!v1[v3])\n
                    goto LABEL_4063b5;\n
                v7 = v3 + 1;\n
                v8 = v7 + v1;\n
                goto LABEL_4063b7;\n
            }\n
            v3 = v3 + 1;\n
            v2 = v1[v3];\n
        } while (v2);\n
        v6 = v3;\n
    }\n
    v5 = &v1[v6];\n
LABEL_4063b5:\n
    v8 = 0;\n
LABEL_4063b7:\n
    *(a0) = v8;\n
    *(v5) = 0;\n
    return *(a0);\n
}\n
", "4219874:sub_4063e2": null, "4219888:cgc_strstr": "long long cgc_strstr(char a0[2], char *a1)\n
{\n
    char v1[2];  // rbx, Other Possible Types: unsigned long\n
    char v2[2];  // r12, Other Possible Types: unsigned long\n
    unsigned long v3;  // rax\n
\n
    if (a0[0])\n
    {\n
        v1 = 1;\n
        v2 = a0;\n
        do\n
        {\n
            if (!cgc_strcmp(v2, a1))\n
                return v2;\n
            v3 = v1;\n
            v2 = &a0[v1];\n
            v1 = v1 + 1;\n
        } while (a0[v3]);\n
    }\n
    return 0;\n
}\n
", "4219986:sub_406452": null, "4220000:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int s_54;  // [bp-0x54]\n
    unsigned long long *v0;  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1[2];  // [bp-0x48]\n
    unsigned long v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // r14\n
    char v16[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v19;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v20;  // r13, Other Possible Types: unsigned long\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // r12d\n
    unsigned long long v23;  // rax\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v27;  // rdi\n
    unsigned int v28;  // r13d\n
    void* v29;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v30;  // r15d\n
    unsigned long long *v31;  // r12, Other Possible Types: unsigned long\n
    unsigned int v32;  // edx, Other Possible Types: unsigned long\n
    char v33[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v34;  // rcx\n
    unsigned long v35;  // rax, Other Possible Types: unsigned long long\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v20 = a2;\n
    v31 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v1) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v28 = 0;\n
                v32 = 1;\n
                goto LABEL_406651;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v19 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!v20)\n
            goto LABEL_406529;\n
        goto LABEL_4064ce;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v19 = 4294967295;\n
        if (v20)\n
        {\n
LABEL_4064ce:\n
            if (v20 == 16)\n
            {\n
                *(&v18) = *(v16);\n
                v20 = 16;\n
                if (!(*(v16) == 48))\n
                    goto LABEL_406595;\n
                v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
                v20 = 16;\n
                goto LABEL_406593;\n
            }\n
        }\n
        else\n
        {\n
LABEL_406529:\n
            *(&v18) = *(v16);\n
            if (*(v16) == 48)\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    s_54 = v19;\n
                    v0 = a1;\n
                    v16 += 1;\n
                    v20 = 8;\n
                    goto LABEL_4065a6;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                    v20 = 16;\n
                    goto LABEL_406593;\n
                }\n
            }\n
            s_54 = v19;\n
            v18 = cgc_isdigit(v18);\n
            v20 = 10;\n
            if (!v18)\n
            {\n
                v28 = 0;\n
                v30 = 1;\n
                v29 = 0;\n
                v32 = s_54;\n
                if (!a1)\n
                    goto LABEL_40666f;\n
LABEL_40665f:\n
                v33 = v1;\n
                if (!v30)\n
                    v33 = v16;\n
                *(v31) = v33;\n
            }\n
            else\n
            {\n
                v21 = s_54;\n
LABEL_406593:\n
                *(&v18) = *(v16);\n
LABEL_406595:\n
                if (v18)\n
                {\n
                    s_54 = v32;\n
                    v0 = a1;\n
                }\n
                else\n
                {\n
                    v28 = 0;\n
LABEL_406651:\n
                    v30 = 1;\n
                    v29 = 0;\n
                    if (!a1)\n
                        goto LABEL_40666f;\n
                    goto LABEL_40665f;\n
                }\n
LABEL_4065a6:\n
                v22 = v20;\n
                v2 = v20;\n
                v29 = 0;\n
                v28 = 0;\n
                v30 = 1;\n
                do\n
                {\n
                    v23 = cgc_isdigit(v18);\n
                    v24 = *(v16);\n
                    if (v23)\n
                    {\n
                        v25 = v24 - 48;\n
                        if (v25 >= v22)\n
                            break;\n
                        continue;\n
                    }\n
                    else\n
                    {\n
                        v27 = *(v16);\n
                        if (cgc_islower(v24))\n
                        {\n
                            v25 = v27 - 87;\n
                            if (v25 >= v22)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_isupper(v27))\n
                                break;\n
                            v25 = *(v16) - 55;\n
                            if (v25 >= v22)\n
                                break;\n
                            continue;\n
                        }\n
                    }\n
                    v29 = v25 + v2 * v29;\n
                    if (v29 > 2147483647)\n
                        v28 = 1;\n
                    v18 = *((v16 + 1));\n
                    v16 += 1;\n
                    v30 = 0;\n
                } while (v18);\n
                v31 = v0;\n
                v32 = s_54;\n
                if (!v31)\n
                    goto LABEL_40666f;\n
                goto LABEL_40665f;\n
            }\n
        }\n
    }\n
LABEL_40666f:\n
    v34 = (!v28 ? -0x80000000 : -(v29));\n
    v35 = (!v28 ? 2147483647 : v29);\n
    if (v32 < 0)\n
        v35 = v34;\n
    return v35;\n
}\n
", "4220377:sub_4065d9": null, "4220600:sub_4066b8": null, "4220608:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    unsigned int s_54;  // [bp-0x54]\n
    unsigned long long *v0;  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1[2];  // [bp-0x48]\n
    unsigned long v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x30]\n
    unsigned long v4;  // [bp-0x28]\n
    unsigned long v5;  // [bp-0x20]\n
    unsigned long v6;  // [bp-0x18]\n
    unsigned long v7;  // [bp-0x10]\n
    unsigned long v9;  // r15\n
    unsigned long v10;  // r14\n
    unsigned long v11;  // r13\n
    unsigned long v12;  // r12\n
    unsigned long v13;  // rbx\n
    char v14[2];  // r14\n
    char v16[2];  // rbx, Other Possible Types: unsigned long\n
    unsigned long v17;  // rdi\n
    unsigned long v18;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v19;  // rdx, Other Possible Types: unsigned long long\n
    unsigned long long v20;  // r13, Other Possible Types: unsigned long\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // r12d\n
    unsigned long long v23;  // rax\n
    unsigned long v24;  // rdi\n
    unsigned long v25;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v27;  // rdi\n
    void* v28;  // r13, Other Possible Types: unsigned long, unsigned long long, unsigned int\n
    void* v29;  // r14, Other Possible Types: unsigned long, unsigned long long\n
    unsigned int v30;  // r15d\n
    unsigned long long *v31;  // r12, Other Possible Types: unsigned long\n
    unsigned int v32;  // edx, Other Possible Types: unsigned long\n
    char v33[2];  // rax, Other Possible Types: unsigned long\n
    unsigned int v34;  // eax\n
    unsigned long v35;  // rax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v4 = v12;\n
    v3 = v13;\n
    v20 = a2;\n
    v31 = a1;\n
    v14 = a0;\n
    v18 = cgc_isspace(a0[0]);\n
    v16 = v14;\n
    *(&v1) = v14;\n
    if (v18)\n
    {\n
        v16 = v14;\n
        do\n
        {\n
            if (!*(v16))\n
            {\n
                v28 = 0;\n
                v32 = 1;\n
                goto LABEL_4068b1;\n
            }\n
            v17 = *((v16 + 1));\n
            v16 += 1;\n
            v18 = cgc_isspace(v17);\n
        } while (v18);\n
    }\n
    if (*(v16) != 45)\n
    {\n
        v19 = 1;\n
        if (*(v16) == 43)\n
            v16 += 1;\n
        if (!v20)\n
            goto LABEL_406789;\n
        goto LABEL_40672e;\n
    }\n
    else\n
    {\n
        v16 += 1;\n
        v19 = 4294967295;\n
        if (v20)\n
        {\n
LABEL_40672e:\n
            if (v20 == 16)\n
            {\n
                *(&v18) = *(v16);\n
                v20 = 16;\n
                if (!(*(v16) == 48))\n
                    goto LABEL_4067f5;\n
                v16 += (cgc_tolower(*((v16 + 1))) == 120) * 2;\n
                v20 = 16;\n
                goto LABEL_4067f3;\n
            }\n
        }\n
        else\n
        {\n
LABEL_406789:\n
            *(&v18) = *(v16);\n
            if (*(v16) == 48)\n
            {\n
                *(&v18) = *((v16 + 1));\n
                if ((v18 & 248) == 48)\n
                {\n
                    s_54 = v19;\n
                    v0 = a1;\n
                    v16 += 1;\n
                    v20 = 8;\n
                    goto LABEL_406806;\n
                }\n
                v18 = cgc_tolower(v18);\n
                if (v18 != 120)\n
                {\n
                    *(&v18) = *(v16);\n
                }\n
                else\n
                {\n
                    v16 += 2;\n
                    v20 = 16;\n
                    goto LABEL_4067f3;\n
                }\n
            }\n
            s_54 = v19;\n
            v18 = cgc_isdigit(v18);\n
            v20 = 10;\n
            if (!v18)\n
            {\n
                v28 = 0;\n
                v30 = 1;\n
                v29 = 0;\n
                v32 = s_54;\n
                if (!a1)\n
                    goto LABEL_4068cf;\n
LABEL_4068bf:\n
                v33 = v1;\n
                if (!v30)\n
                    v33 = v16;\n
                *(v31) = v33;\n
            }\n
            else\n
            {\n
                v21 = s_54;\n
LABEL_4067f3:\n
                *(&v18) = *(v16);\n
LABEL_4067f5:\n
                if (v18)\n
                {\n
                    s_54 = v32;\n
                    v0 = a1;\n
                }\n
                else\n
                {\n
                    v28 = 0;\n
LABEL_4068b1:\n
                    v30 = 1;\n
                    v29 = 0;\n
                    if (!a1)\n
                        goto LABEL_4068cf;\n
                    goto LABEL_4068bf;\n
                }\n
LABEL_406806:\n
                v22 = v20;\n
                v2 = v20;\n
                v29 = 0;\n
                v28 = 0;\n
                v30 = 1;\n
                do\n
                {\n
                    v23 = cgc_isdigit(v18);\n
                    v24 = *(v16);\n
                    if (v23)\n
                    {\n
                        v25 = v24 - 48;\n
                        if (v25 >= v22)\n
                            break;\n
                        continue;\n
                    }\n
                    else\n
                    {\n
                        v27 = *(v16);\n
                        if (cgc_islower(v24))\n
                        {\n
                            v25 = v27 - 87;\n
                            if (v25 >= v22)\n
                                break;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_isupper(v27))\n
                                break;\n
                            v25 = *(v16) - 55;\n
                            if (v25 >= v22)\n
                                break;\n
                            continue;\n
                        }\n
                    }\n
                    v29 = v25 + v2 * v29;\n
                    if (v29 >> 32)\n
                        v28 = 1;\n
                    v18 = *((v16 + 1));\n
                    v16 += 1;\n
                    v30 = 0;\n
                } while (v18);\n
                v31 = v0;\n
                v32 = s_54;\n
                if (!v31)\n
                    goto LABEL_4068cf;\n
                goto LABEL_4068bf;\n
            }\n
        }\n
    }\n
LABEL_4068cf:\n
    if (v32 < 0)\n
    {\n
        v34 = (v29 == -0x80000000 ? 1 : v28);\n
        if (v29 <= 2147483647)\n
            v34 = v28;\n
        v29 = -(v29);\n
        v28 = v34;\n
    }\n
    v35 = (!v28 ? 4294967295 : v29);\n
    return v35;\n
}\n
", "4220985:sub_406839": null, "4221222:sub_406926": null, "4221232:_ZN11AudioStreamC1Ej": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long AudioStream::__ctor__(struct_0 *a0, unsigned int a1)\n
{\n
    unsigned long long v1;  // rax\n
\n
    a0->field_0 = a1;\n
    a0->field_4 = a1;\n
    v1 = operator new[](a1 * 4);\n
    a0->field_8 = v1;\n
    return v1;\n
}\n
", "4221275:sub_40695b": null, "4221280:_ZN11AudioStreamD2Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long AudioStream::__base_dtor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rdi\n
\n
    v1 = a0->field_8;\n
    return operator delete(v1);\n
}\n
", "4221307:sub_40697b": null, "4221312:_ZN11AudioStream11fromSilenceEj": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long AudioStream::fromSilence(unsigned int a0)\n
{\n
    int tmp_21;  // tmp #21\n
    unsigned long long v1;  // r15\n
    struct_0 *v2;  // r14\n
    unsigned int *v3;  // rax\n
    unsigned long long v4;  // rdi\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
    unsigned long v7;  // rdi\n
    unsigned long v8;  // rsi, Other Possible Types: unsigned long long\n
    uint128_t *v9;  // rsi\n
    unsigned long v11;  // rdi\n
    unsigned long v12;  // rcx\n
\n
    v1 = a0;\n
    v2 = operator new(16);\n
    v2->field_0 = a0;\n
    v2->field_4 = a0;\n
    v3 = operator new[](a0 * 4);\n
    v2->field_8 = v3;\n
    if (!a0)\n
        return v2;\n
    if (a0 < 8)\n
    {\n
        v12 = 0;\n
    }\n
    else\n
    {\n
        v12 = a0 & -8;\n
        v4 = v12 - 8;\n
        v5 = (v4 >> 3) + 1;\n
        v6 = v5 & 7;\n
        if (v4 < 56)\n
        {\n
            v7 = 0;\n
        }\n
        else\n
        {\n
            v8 = v5 & -8;\n
            v7 = 0;\n
            do\n
            {\n
                *(&v3[v7]) = 0;\n
                *(&v3[4 + v7]) = 0;\n
                *(&v3[8 + v7]) = 0;\n
                *(&v3[12 + v7]) = 0;\n
                *(&v3[16 + v7]) = 0;\n
                *(&v3[20 + v7]) = 0;\n
                *(&v3[24 + v7]) = 0;\n
                *(&v3[28 + v7]) = 0;\n
                *(&v3[32 + v7]) = 0;\n
                *(&v3[36 + v7]) = 0;\n
                *(&v3[40 + v7]) = 0;\n
                *(&v3[44 + v7]) = 0;\n
                *(&v3[48 + v7]) = 0;\n
                *(&v3[52 + v7]) = 0;\n
                *(&v3[56 + v7]) = 0;\n
                *(&v3[60 + v7]) = 0;\n
                v7 += 64;\n
                tmp_21 = v8;\n
                v8 -= 8;\n
            } while (tmp_21 != 8);\n
        }\n
        if (v6)\n
        {\n
            v9 = &v3[v7 + 4];\n
            v11 = 0;\n
            do\n
            {\n
                *((-16 + v9 + v11)) = 0;\n
                *((v9 + v11)) = 0;\n
                v11 += 32;\n
            } while (v6 * 32 != v11);\n
        }\n
        if (v12 == v1)\n
            return v2;\n
    }\n
    do\n
    {\n
        v3[v12] = 0;\n
        v12 += 1;\n
    } while (v1 != v12);\n
    return v2;\n
}\n
", "4221662:sub_406ade": null, "4221664:_ZN11AudioStream12fromSineWaveEjj": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long AudioStream::fromSineWave(unsigned int a0, unsigned long a1)\n
{\n
    int tmp_24;  // tmp #24\n
    int tmp_25;  // tmp #25\n
    int tmp_22;  // tmp #22\n
    unsigned long v0;  // [bp-0x40]\n
    struct_0 *v2;  // r14\n
    unsigned int *v4;  // rbx, Other Possible Types: unsigned long\n
\n
    v2 = operator new(16);\n
    v2->field_0 = a0;\n
    v2->field_4 = a0;\n
    v2->field_8 = operator new[](a0 * 4);\n
    if (!a0)\n
        return v2;\n
    tmp_24 = DivV(tmp_25, tmp_22);\n
    *(&v0) = tmp_24;\n
    v4 = 0;\n
    do\n
    {\n
        cgc_sin();\n
        STORE(addr=(rax<8> + (rbx<8> * 0x4<64>)), data=Conv(128->32, (((0x0<64> CONCAT rbx<8>) * Conv(64->128, Load(addr=stack_base-64, size=8, endness=Iend_LE))) * 0x41cfffffff800000<128>)), size=4, endness=Iend_LE, guard=None)\n
        v4 += 1;\n
    } while (a0 != v4);\n
    return v2;\n
}\n
", "4221839:sub_406b8f": null, "4221840:_ZN11AudioStream14fromSquareWaveEjj": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long AudioStream::fromSquareWave(unsigned int a0, unsigned long a1)\n
{\n
    int tmp_79;  // tmp #79\n
    int tmp_48;  // tmp #48\n
    int tmp_47;  // tmp #47\n
    int tmp_50;  // tmp #50\n
    int tmp_49;  // tmp #49\n
    int tmp_70;  // tmp #70\n
    int tmp_69;  // tmp #69\n
    int tmp_72;  // tmp #72\n
    int tmp_71;  // tmp #71\n
    int tmp_18;  // tmp #18\n
    int tmp_17;  // tmp #17\n
    int tmp_21;  // tmp #21\n
    int tmp_20;  // tmp #20\n
    int tmp_19;  // tmp #19\n
    unsigned long long v1;  // rbx\n
    struct_0 *v2;  // r14\n
    unsigned int *v3;  // rax\n
    unsigned long v4;  // rcx\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rsi\n
    unsigned long v7;  // rdx\n
    int v9;  // xmm3\n
    int v12;  // xmm5\n
    int v14;  // xmm2\n
    unsigned long v15;  // rdi, Other Possible Types: unsigned long long\n
    int v17;  // xmm1\n
    unsigned int v20;  // esi\n
\n
    v1 = a0;\n
    v2 = operator new(16);\n
    v2->field_0 = a0;\n
    v2->field_4 = a0;\n
    v3 = operator new[](a0 * 4);\n
    v2->field_8 = v3;\n
    if (!a0)\n
        return v2;\n
    if (a0 < 4)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v4 = a0 & -0x4;\n
        v5 = v4 - 4;\n
        v6 = (v5 >> 2) + 1;\n
        if (v5)\n
        {\n
            v15 = v6 & -2;\n
            v14 = 0x3000000020000000100000000;\n
            v7 = 0;\n
            do\n
            {\n
                tmp_48 = SarNV(tmp_47, 31);\n
                v9 = ~(tmp_48) & 255211775329353132029775348499035979777;\n
                tmp_50 = ShrNV(tmp_49, 2);\n
                *(&v3[v7]) = tmp_50 | v9;\n
                tmp_70 = SarNV(tmp_69, 31);\n
                v12 = ~(tmp_70) & 255211775329353132029775348499035979777;\n
                tmp_72 = ShrNV(tmp_71, 2);\n
                *(&v3[4 + v7]) = tmp_72 | v12;\n
                v7 += 8;\n
                v14 += 633825300261688653372387753992;\n
                tmp_79 = v15;\n
                v15 -= 2;\n
            } while (tmp_79 != 2);\n
            if (!(v6 & 1))\n
                goto LABEL_406d6f;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            if (!(v6 & 1))\n
                goto LABEL_406d6f;\n
        }\n
        tmp_18 = SarNV(tmp_17, 31);\n
        v17 = ~(tmp_18) & 255211775329353132029775348499035979777;\n
        tmp_21 = ShrNV(tmp_20, 2);\n
        *(&v3[v7]) = tmp_21 | v17;\n
LABEL_406d6f:\n
        if (v4 == v1)\n
            return v2;\n
    }\n
    do\n
    {\n
        tmp_17 = DivV(tmp_19, tmp_18);\n
        v20 = (!(tmp_17 & 1) ? 1073741823 : 3221225473);\n
        v3[v4] = v20;\n
        v4 += 1;\n
    } while (v1 != v4);\n
    return v2;\n
}\n
", "4222424:sub_406dd8": null, "4222432:_ZN11AudioStream7enlargeEj": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
} struct_0;\n
\n
long long AudioStream::enlarge(struct_0 *a0, unsigned long a1)\n
{\n
    int tmp_13;  // tmp #13\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v2[3];  // r14\n
    unsigned long v3;  // rcx\n
    unsigned long long v4;  // rax\n
    char *v5;  // r15, Other Possible Types: unsigned long\n
    unsigned long v6;  // rdi\n
\n
    v1 = a0->field_0;\n
    if (v1 >= a1)\n
        return a0->field_0;\n
    v2 = a0;\n
    v3 = a0->field_4;\n
    if (v3 >= a1)\n
    {\n
        v5 = a0->field_8;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v4 = v3 + 0x8000;\n
            tmp_13 = v3;\n
            v3 *= 2;\n
            if (0x8000 <= tmp_13)\n
                v3 = v4;\n
        } while (v3 < a1);\n
        a0->field_4 = v3;\n
        v5 = operator new[](v3 * 4);\n
        cgc_memcpy(v5, *(&v2[2]), v2[0] * 4);\n
        v6 = a0->field_8;\n
        if (v6)\n
            operator delete[](v6);\n
        *(&v2[2]) = v5;\n
        v1 = v2[0];\n
    }\n
    v1 = cgc_memset(v5 + v1 * 4, 0, (a1 - v1) * 4);\n
    v2[0] = a1;\n
    return v1;\n
}\n
", "4222601:sub_406e89": null, "4222608:_ZN11AudioStream9setLengthEj": "long long AudioStream::setLength(unsigned int *a0, unsigned int a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    if (*(a0) <= a1)\n
        return AudioStream::enlarge(a0, a1);\n
    *(a0) = a1;\n
    return v1;\n
}\n
", "4222637:sub_406ead": null, "4222640:_ZN11AudioStream10addSilenceEj": "long long AudioStream::addSilence(unsigned int *a0, unsigned long a1)\n
{\n
    return AudioStream::enlarge(a0, a1 + *(a0));\n
}\n
", "4222660:sub_406ec4": null, "4222672:_ZN11AudioStream3mixERKS_4Gain": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long AudioStream::mix(struct_0 *a0, struct_0 *a1, unsigned long a2)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_11;  // tmp #11\n
    int tmp_10;  // tmp #10\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    unsigned int *v2;  // r9\n
    unsigned long v3;  // r8\n
    unsigned long long v4;  // xmm0lq\n
    int v5;  // xmm0\n
    int v6;  // xmm0\n
    int v9;  // xmm3\n
    unsigned long v10;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long long v11;  // rdi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned long v14;  // rdx\n
    int v15;  // xmm3\n
    unsigned long v16;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long long v17;  // rdi\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // eax\n
    unsigned long v20;  // rdx\n
\n
    v1 = a1->field_0;\n
    if (a0->field_0 < v1)\n
    {\n
        return a1->field_0;\n
    }\n
    else if (!v1)\n
    {\n
        return a1->field_0;\n
    }\n
    else\n
    {\n
        v2 = a0->field_8;\n
        v3 = a1->field_8;\n
        v4 = a2;\n
        v6 = v5 * 0x3e34000000280000;\n
        if (!(CmpF(v6, 0) & 1))\n
        {\n
            v20 = 0;\n
            do\n
            {\n
                v15 = (0 CONCAT *((v3 + v20 * 4))) * (v6 + (0 CONCAT 0x3ff0000000000000));\n
                v16 = 2147483647;\n
                if ((CmpF(v9, 0x41dfffffffc00000) & 1))\n
                {\n
                    v16 = 0x80000000;\n
                    if ((CmpF(0xc1e0000000000000, v9) & 1))\n
                        v16 = v15;\n
                }\n
                v17 = v16 + v2[v20];\n
                v18 = 0x80000000;\n
                if (v17 >= -2147483647)\n
                    v18 = v17;\n
                v19 = 2147483647;\n
                if (v17 < 2147483647)\n
                    v19 = v18;\n
                v2[v20] = v19;\n
                v20 += 1;\n
                v1 = a1->field_0;\n
            } while (v20 < v1);\n
            return a1->field_0;\n
        }\n
        else\n
        {\n
            tmp_9 = DivV(tmp_11, tmp_10);\n
            v14 = 0;\n
            do\n
            {\n
                v9 = (0 CONCAT *((v3 + v14 * 4))) * tmp_9;\n
                v10 = 2147483647;\n
                if ((CmpF(v9, 0x41dfffffffc00000) & 1))\n
                {\n
                    v10 = 0x80000000;\n
                    if ((CmpF(0xc1e0000000000000, v9) & 1))\n
                        v10 = v9;\n
                }\n
                v11 = v10 + v2[v14];\n
                v12 = 0x80000000;\n
                if (v11 >= -2147483647)\n
                    v12 = v11;\n
                v13 = 2147483647;\n
                if (v11 < 2147483647)\n
                    v13 = v12;\n
                v2[v14] = v13;\n
                v14 += 1;\n
                v1 = a1->field_0;\n
            } while (v14 < v1);\n
            return a1->field_0;\n
        }\n
    }\n
}\n
", "4222772:sub_406f34": null, "4222910:sub_406fbe": null, "4223015:sub_407027": null, "4223024:_ZN10AudioTrackC1Ev": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
    char field_20;\n
} struct_0;\n
\n
long long AudioTrack::__ctor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_18 = 0;\n
    a0->field_20 = 0;\n
    return v1;\n
}\n
", "4223049:sub_407049": null, "4223056:_ZN10AudioTrackC1EP11AudioStream": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned long long field_8;\n
    char padding_10[8];\n
    unsigned long long field_18;\n
    char field_20;\n
} struct_0;\n
\n
long long AudioTrack::__ctor__(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    a0->field_18 = 0;\n
    a0->field_20 = 0;\n
    a0->field_4 = 0;\n
    a0->field_8 = a1;\n
    return v1;\n
}\n
", "4223089:sub_407071": null, "4223104:_ZN10AudioTrackC2EP11AudioStreamS1_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    char field_20;\n
} struct_0;\n
\n
long long AudioTrack::__base_ctor__(struct_0 *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v2;  // rcx\n
    unsigned int *v3;  // rdi, Other Possible Types: unsigned long\n
    unsigned int v4;  // esi\n
\n
    a0->field_18 = 0;\n
    a0->field_20 = 0;\n
    a0->field_4 = 1;\n
    a0->field_8 = a1;\n
    a0->field_10 = a2;\n
    v1 = *(a1);\n
    v2 = *(a2);\n
    if (v1 < v2)\n
    {\n
        v3 = a1;\n
        v4 = v2;\n
    }\n
    else if (!([D] amd64g_calculate_condition(0x6<64>, 0x7<64>, rax<8>, rcx<8>, cc_ndep<8>)))\n
    {\n
        v3 = a2;\n
        v4 = v1;\n
    }\n
    else\n
    {\n
        return *(a1);\n
    }\n
    v1 = AudioStream::setLength(v3, v4);\n
    return v1;\n
}\n
", "4223168:_ZN10AudioTrackD2Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long AudioTrack::__base_dtor__(struct_0 *a0)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v3;  // rbx\n
\n
    v1 = a0->field_8;\n
    if (v1)\n
    {\n
        AudioStream::__base_dtor__(v1);\n
        v2 = operator delete(v1);\n
    }\n
    if (!a0->field_4)\n
        return v2;\n
    v3 = a0->field_10;\n
    if (v3)\n
    {\n
        AudioStream::__base_dtor__(v3);\n
        v2 = operator delete(v3);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4223248:_ZN10AudioTrack9setLengthEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int *field_8;\n
    unsigned int *field_10;\n
} struct_0;\n
\n
long long AudioTrack::setLength(struct_0 *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    v1 = AudioStream::setLength(a0->field_8, a1);\n
    if (a0->field_4)\n
    {\n
        v1 = AudioStream::setLength(a0->field_10, a1);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4223301:sub_407145": null, "4223312:_ZN10AudioTrack3mixERKS_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_10;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long AudioTrack::mix(struct_2 *a0, struct_0 *a1)\n
{\n
    int tmp_6;  // tmp #6\n
    int tmp_8;  // tmp #8\n
    int tmp_7;  // tmp #7\n
    int tmp_19;  // tmp #19\n
    int tmp_20;  // tmp #20\n
    int tmp_17;  // tmp #17\n
    int tmp_14;  // tmp #14\n
    int tmp_15;  // tmp #15\n
    int tmp_12;  // tmp #12\n
    struct_0 *v1;  // r15\n
    struct_2 *v2;  // r14\n
    unsigned int *v3;  // rdi\n
    unsigned int v4;  // ebx\n
    char v5;  // cl\n
    unsigned int v6;  // edx\n
    unsigned long v7;  // rax\n
    unsigned int *v8;  // rdi\n
    unsigned long long v9;  // xmm0lq\n
    unsigned int *v10;  // rsi\n
    int v11;  // xmm0\n
    int v12;  // xmm0\n
    int v14;  // xmm0\n
    int v16;  // xmm0\n
    int v20;  // xmm1\n
    int v22;  // xmm1\n
    int v23;  // xmm0\n
    unsigned long v24;  // rdx, Other Possible Types: unsigned long long\n
    int v25;  // xmm0\n
    unsigned long v26;  // rdx, Other Possible Types: unsigned long long\n
    int v28;  // xmm1\n
    int v30;  // xmm0\n
    int v32;  // xmm1\n
    int v34;  // xmm0\n
    unsigned long long v35;  // rcx\n
    unsigned long long v37;  // rcx\n
    int v38;  // xmm0\n
    int v40;  // xmm0\n
    int v42;  // xmm0\n
    int v43;  // xmm1\n
    int v44;  // xmm1\n
    int v45;  // xmm1\n
    int v46;  // xmm1\n
    int v48;  // xmm1\n
    int v50;  // xmm1\n
    unsigned int *v51;  // rsi, Other Possible Types: unsigned long\n
    unsigned int *v52;  // rdi, Other Possible Types: unsigned long\n
    int v53;  // xmm0\n
    unsigned long v54;  // rdx, Other Possible Types: unsigned long long\n
    int v56;  // xmm1\n
    int v58;  // xmm0\n
    unsigned int *v59;  // rax, Other Possible Types: unsigned long, unsigned long long\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = a0->field_8;\n
    v59 = a1->field_8;\n
    v4 = *(v59);\n
    if (*(v3) < v4)\n
    {\n
        v59 = AudioStream::setLength(v3, v4);\n
        if (v2->field_4)\n
            v59 = AudioStream::setLength(v2->field_10, v4);\n
    }\n
    v5 = a1->field_4;\n
    if (v2->field_4)\n
    {\n
        v6 = a1->field_1c;\n
        v7 = (v6 > 0 ? 0 : -(v6));\n
        v8 = v2->field_8;\n
        v9 = a1->field_18;\n
        v10 = a1->field_8;\n
        v12 = v11 * 0x3e34000000280000;\n
        if (v5)\n
        {\n
            if (!(CmpF(v38, 0) & 1))\n
            {\n
                v14 = v12 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v14 = tmp_6;\n
            }\n
            if (!(CmpF(v46, 0) & 1))\n
            {\n
                v20 = (0 CONCAT v7) * 0x3e34000000280000 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v20 = tmp_6;\n
            }\n
            v23 = v14 * v20;\n
            v24 = 0;\n
            if ((((CmpF(0, v25) & 69) | ((CmpF(0, v25) & 69) >> 6)) & 1) == 1)\n
            {\n
                v24 = 0x80000000;\n
                if ((CmpF(4576918229304087675, v53) & 1))\n
                {\n
                    v24 = 2147483647;\n
                    if ((CmpF(v53, 0x4024000000000000) & 1))\n
                    {\n
                        if ((CmpF(v53, 0x3ff0000000000000) & 1))\n
                        {\n
                            tmp_19 = DivV(tmp_20, tmp_17);\n
                            v28 = tmp_19 * 0xc1dfffffffc00000;\n
                            v24 = v28;\n
                        }\n
                        else\n
                        {\n
                            tmp_14 = DivV(tmp_15, tmp_12);\n
                            v30 = tmp_14 * 0x41dfffffffc00000;\n
                            v24 = v30;\n
                        }\n
                    }\n
                }\n
            }\n
            AudioStream::mix(v8, v10, v24);\n
            v35 = v1->field_1c;\n
            if (!(CmpF(v38, 0) & 1))\n
            {\n
                v40 = (0 CONCAT v1->field_18) * 0x3e34000000280000 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v40 = tmp_6;\n
            }\n
            v43 = 0;\n
            *(&v43) = (v35 >> 31) & v35;\n
            v44 = v43 * 0x3e34000000280000;\n
            if (!(CmpF(v46, 0) & 1))\n
            {\n
                v48 = v44 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v48 = tmp_6;\n
            }\n
            v53 = v40 * v48;\n
            v52 = v2->field_10;\n
            v51 = v1->field_10;\n
            v54 = 0;\n
            if (!(((CmpF(0, v53) & 69 | (CmpF(0, v53) & 69) >> 6) & 1) == 1))\n
                goto LABEL_407591;\n
        }\n
        else\n
        {\n
            if (!(CmpF(v38, 0) & 1))\n
            {\n
                v16 = v12 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v16 = tmp_6;\n
            }\n
            if (!(CmpF(v46, 0) & 1))\n
            {\n
                v22 = (0 CONCAT v7) * 0x3e34000000280000 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v22 = tmp_6;\n
            }\n
            v25 = v16 * v22;\n
            v26 = 0;\n
            if ((((CmpF(0, v25) & 69) | ((CmpF(0, v25) & 69) >> 6)) & 1) == 1)\n
            {\n
                v26 = 0x80000000;\n
                if ((CmpF(4576918229304087675, v53) & 1))\n
                {\n
                    v26 = 2147483647;\n
                    if ((CmpF(v53, 0x4024000000000000) & 1))\n
                    {\n
                        if ((CmpF(v53, 0x3ff0000000000000) & 1))\n
                        {\n
                            tmp_19 = DivV(tmp_20, tmp_17);\n
                            v32 = tmp_19 * 0xc1dfffffffc00000;\n
                            v26 = v32;\n
                        }\n
                        else\n
                        {\n
                            tmp_14 = DivV(tmp_15, tmp_12);\n
                            v34 = tmp_14 * 0x41dfffffffc00000;\n
                            v26 = v34;\n
                        }\n
                    }\n
                }\n
            }\n
            AudioStream::mix(v8, v10, v26);\n
            v37 = v1->field_1c;\n
            v38 = (0 CONCAT v1->field_18) * 0x3e34000000280000;\n
            if (!(CmpF(v38, 0) & 1))\n
            {\n
                v42 = v38 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v42 = tmp_6;\n
            }\n
            v45 = 0;\n
            *(&v45) = (v37 >> 31) & v37;\n
            v46 = v45 * 0x3e34000000280000;\n
            if (!(CmpF(v46, 0) & 1))\n
            {\n
                v50 = v46 + 0x3ff0000000000000;\n
            }\n
            else\n
            {\n
                tmp_6 = DivV(tmp_8, tmp_7);\n
                v50 = tmp_6;\n
            }\n
            v53 = v42 * v50;\n
            v52 = v2->field_10;\n
            v51 = v1->field_8;\n
            v54 = 0;\n
            if (!(((CmpF(0, v53) & 69 | (CmpF(0, v53) & 69) >> 6) & 1) == 1))\n
                goto LABEL_407591;\n
        }\n
        v54 = 0x80000000;\n
        if ((CmpF(4576918229304087675, v53) & 1))\n
        {\n
            v54 = 2147483647;\n
            if ((CmpF(v53, 0x4024000000000000) & 1))\n
            {\n
                if ((CmpF(v53, 0x3ff0000000000000) & 1))\n
                {\n
                    tmp_19 = DivV(tmp_20, tmp_17);\n
                    v56 = tmp_19 * 0xc1dfffffffc00000;\n
                    v54 = v56;\n
                }\n
                else\n
                {\n
                    tmp_14 = DivV(tmp_15, tmp_12);\n
                    v58 = tmp_14 * 0x41dfffffffc00000;\n
                    v54 = v58;\n
                }\n
            }\n
        }\n
    }\n
    else if (!v5)\n
    {\n
        v52 = v2->field_8;\n
        v51 = a1->field_8;\n
        v54 = v1->field_18;\n
    }\n
    else\n
    {\n
        return v59;\n
    }\n
LABEL_407591:\n
    v59 = AudioStream::mix(v52, v51, v54);\n
    return v59;\n
}\n
", "4224417:sub_4075a1": null, "4224432:_ZN10AudioTrack8toStereoEPS_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long AudioTrack::toStereo(struct_0 *a0, struct_2 *a1)\n
{\n
    unsigned long v1;  // rbx\n
    unsigned long v2;  // r15\n
    unsigned int *v3;  // rax\n
    unsigned int *v4;  // rdi\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rcx\n
\n
    if (!(!a0->field_4 && !a1->field_4))\n
        return 0;\n
    v1 = a0;\n
    a0->field_4 = 1;\n
    a0->field_10 = a1->field_8;\n
    a1->field_8 = 0;\n
    if (a1->field_4)\n
    {\n
        v2 = a1->field_10;\n
        if (v2)\n
        {\n
            AudioStream::__base_dtor__(v2);\n
            operator delete(v2);\n
        }\n
    }\n
    operator delete(a1);\n
    v3 = a0->field_8;\n
    v4 = a0->field_10;\n
    v5 = *(v3);\n
    v6 = *(v4);\n
    if (v5 < v6)\n
    {\n
        AudioStream::setLength(v3, v6);\n
        *(&v1) = 1;\n
        return v1;\n
    }\n
    *(&v1) = 1;\n
    if (!([D] amd64g_calculate_condition(0x6<64>, 0x7<64>, rsi<8>, rcx<8>, cc_ndep<8>)))\n
    {\n
        AudioStream::setLength(v4, v5);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4224583:sub_407647": null, "4224592:_ZN11CompressionD1Ev": "long long Compression::__dtor__()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "4224605:sub_40765d": null, "4224608:_ZN11CompressionD0Ev": "long long Compression::__deleting_dtor__()\n
{\n
    [D] Unsupported jumpkind Ijk_NoDecode at address 4224608\n
}\n
", "4224618:sub_40766a": null, "4224624:_ZN11Compression6fromIdEj": "extern char g_40e350;\n
\n
long long Compression::fromId(unsigned long long *a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v1;  // [bp-0x8]\n
    char v2;  // [bp+0x0]\n
    unsigned long v4;  // rbx\n
    unsigned long long *v5;  // rax\n
    unsigned long long v6;  // rbx\n
\n
    if (a0 <= 2)\n
    {\n
        v1 = &v2;\n
        v0 = v4;\n
        v5 = operator new(8);\n
        *(v5) = *((&g_40e350 + 0x8 * a0));\n
        v6 = v0;\n
        return v5;\n
    }\n
    return 0;\n
}\n
", "4224679:sub_4076a7": null, "4224688:_ZNK13Compression325getIdEv": "long long Compression32::getId const()\n
{\n
    return 0;\n
}\n
", "4224703:sub_4076bf": null, "4224704:_ZNK13Compression3216getMaxBufferSizeERK10AudioTrack": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long Compression32::getMaxBufferSize const(unsigned long a0, struct_0 *a1)\n
{\n
    return a1->field_8->field_0 * (2 - (a1->field_4 < 1)) * 4;\n
}\n
", "4224739:sub_4076e3": null, "4224752:_ZNK13Compression328compressERK10AudioTrackPh": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long Compression32::compress const(unsigned long a0, struct_2 *a1, unsigned long a2)\n
{\n
    struct_0 *v1;  // r9\n
    unsigned int *v2;  // r8\n
    struct_0 *v3;  // rsi\n
    unsigned int v4;  // ecx\n
    unsigned long v5;  // rdi\n
    unsigned long v6;  // rsi\n
\n
    v1 = a1->field_8;\n
    if (!v1->field_0)\n
        return v1->field_0;\n
    v2 = v1->field_8;\n
    if (a1->field_4)\n
    {\n
        v3 = a1->field_10;\n
        v5 = 0;\n
        do\n
        {\n
            *((a2 + v5 * 8)) = v2[v5];\n
            v4 = 0;\n
            if (v5 < v3->field_0)\n
                v4 = v3->field_8[v5].field_0;\n
            *((a2 + v5 * 8 + 4)) = v4;\n
            v5 += 1;\n
        } while (v5 < v1->field_0);\n
        return v1->field_0;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            *((a2 + v6 * 4)) = v2[v6];\n
            v6 += 1;\n
        } while (v6 < v1->field_0);\n
        return v1->field_0;\n
    }\n
}\n
", "4224788:sub_407714": null, "4224872:sub_407768": null, "4224880:_ZNK13Compression3210decompressER10AudioTrackPh": "typedef struct struct_3 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    unsigned int field_-4;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
long long Compression32::decompress const(unsigned long a0, struct_3 *a1, unsigned int a2[2])\n
{\n
    struct_1 *v1;  // rax, Other Possible Types: unsigned long\n
    struct_4 *v2;  // r15, Other Possible Types: unsigned long, unsigned int [2], unsigned long long\n
    unsigned long v4;  // rcx\n
    struct_0 *v5;  // r12\n
    unsigned int v6;  // r13d\n
    char v7;  // cl\n
    unsigned long v8;  // rbx, Other Possible Types: unsigned long long\n
    unsigned long v9;  // rdx\n
\n
    v1 = a1->field_8;\n
    if (!v1->field_0)\n
        return v1;\n
    v2 = a2;\n
    if (!a1->field_4)\n
    {\n
        v4 = v1->field_8;\n
        *(v4) = a2[0];\n
        if (v1->field_0 < 2)\n
            return v1;\n
        v9 = 1;\n
        do\n
        {\n
            *((v4 + v9 * 4)) = v2[v9];\n
            v9 += 1;\n
        } while (v9 < v1->field_0);\n
        return a1->field_8;\n
    }\n
    v7 = 1;\n
    v8 = 1;\n
    while (true)\n
    {\n
        *((*((v1 + 8)) + v8 * 4 - 4)) = *(v2);\n
        if (!v7)\n
        {\n
            v2 += 4;\n
            if (v8 >= *(v1))\n
                return v1;\n
        }\n
        else\n
        {\n
            v5 = a1->field_10;\n
            v6 = *((v2 + 4));\n
            if (v8 - 1 >= v5->field_0)\n
            {\n
                AudioStream::setLength(v5, v8);\n
                v1 = a1->field_8;\n
            }\n
            v2 += 8;\n
            *((v5->field_8 + v8 * 4 - 4)) = v6;\n
            if (v8 >= *(v1))\n
                return v1;\n
        }\n
        v7 = a1->field_4;\n
        v8 += 1;\n
    }\n
}\n
", "4225017:sub_4077f9": null, "4225105:sub_407851": null, "4225120:_ZN13Compression32D0Ev": "long long Compression32::__deleting_dtor__(unsigned int a0)\n
{\n
    Compression::__dtor__();\n
    return operator delete(a0);\n
}\n
", "4225156:sub_407884": null, "4225168:_ZNK16CompressionEight5getIdEv": "long long CompressionEight::getId const()\n
{\n
    return 2;\n
}\n
", "4225186:sub_4078a2": null, "4225200:_ZNK16CompressionEight16getMaxBufferSizeERK10AudioTrack": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long CompressionEight::getMaxBufferSize const(unsigned long a0, struct_0 *a1)\n
{\n
    return a1->field_8->field_0 * (2 - (a1->field_4 < 1));\n
}\n
", "4225232:_ZNK16CompressionEight8compressERK10AudioTrackPh": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long CompressionEight::compress const(unsigned long a0, struct_2 *a1, char a2[2])\n
{\n
    struct_0 *v1;  // rcx, Other Possible Types: unsigned long\n
    unsigned int *v2;  // r8, Other Possible Types: unsigned long\n
    char v3;  // rax, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long v4;  // rdi\n
    struct_0 *v5;  // rdi\n
    void* v6;  // rcx, Other Possible Types: unsigned long, char\n
    unsigned long v7;  // rdi\n
    unsigned long long v8;  // rax\n
\n
    v1 = a1->field_8;\n
    if (!v1->field_0)\n
        return v8;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = *((*((v1 + 8)) + v2 * 4));\n
        v4 = (v3 >> 31) ^ (v3 >> 18);\n
        *(&v3) = ~(v3 / 0x1000000) & 128;\n
        if (v4 <= 30)\n
        {\n
            *(&v1) = (30 - v4 >> 1) + 112;\n
            goto LABEL_407933;\n
        }\n
        if (v4 <= 94)\n
        {\n
            *(&v1) = (94 - v4 >> 2) + 96;\n
            goto LABEL_407977;\n
        }\n
        else if (v4 > 222)\n
        {\n
            if (v4 <= 478)\n
            {\n
                *(&v3) = v3 | (222 - v4 >> 4) | 64;\n
                goto LABEL_40797b;\n
            }\n
            if (v4 <= 990)\n
            {\n
                *(&v1) = (990 - v4 >> 5) + 48;\n
                goto LABEL_407933;\n
            }\n
            if (v4 <= 2014)\n
            {\n
                *(&v1) = (2014 - v4 >> 6) + 32;\n
                goto LABEL_407933;\n
            }\n
            else if (v4 > 4062)\n
            {\n
                if (v4 <= 8190)\n
                    *(&v3) = v3 | ((8190 - v4) * 16257 >> 22);\n
LABEL_40797b:\n
                *(a2) = v3;\n
                if (!a1->field_4)\n
                {\n
                    a2 += 1;\n
                    continue;\n
                }\n
                v5 = a1->field_10;\n
                v6 = 0;\n
                if (v2 < v5->field_0)\n
                    v6 = v5->field_8[v2].field_0;\n
                v7 = (v6 >> 31) ^ (v6 >> 18);\n
                *(&v6) = ~(v6 / 0x1000000) & 128;\n
                if (v7 <= 30)\n
                {\n
                    *(&v3) = (30 - v7 >> 1) + 112;\n
                    goto LABEL_4079c0;\n
                }\n
                if (v7 <= 94)\n
                {\n
                    *(&v3) = (94 - v7 >> 2) + 96;\n
                    goto LABEL_4079f3;\n
                }\n
                else if (v7 > 222)\n
                {\n
                    if (v7 <= 478)\n
                    {\n
                        *(&v6) = v6 | (222 - v7 >> 4) | 64;\n
                        goto LABEL_4079f7;\n
                    }\n
                    if (v7 <= 990)\n
                    {\n
                        *(&v3) = (990 - v7 >> 5) + 48;\n
                        goto LABEL_4079c0;\n
                    }\n
                    if (v7 <= 2014)\n
                    {\n
                        *(&v3) = (2014 - v7 >> 6) + 32;\n
                        goto LABEL_4079c0;\n
                    }\n
                    else if (v7 > 4062)\n
                    {\n
                        if (v7 <= 8190)\n
                            *(&v6) = v6 | ((8190 - v7) * 16257 >> 22);\n
LABEL_4079f7:\n
                        *((a2 + 1)) = v6;\n
                        a2 += 2;\n
                    }\n
                    else\n
                    {\n
                        *(&v3) = (4062 - v7 >> 7) + 16;\n
LABEL_4079c0:\n
                        v6 = v3 | v6;\n
                        goto LABEL_4079f7;\n
                    }\n
                }\n
                else\n
                {\n
                    *(&v3) = (222 - v7 >> 3) + 80;\n
LABEL_4079f3:\n
                    v6 = v3 | v6;\n
                    goto LABEL_4079f7;\n
                }\n
            }\n
            else\n
            {\n
                *(&v1) = (4062 - v4 >> 7) + 16;\n
LABEL_407933:\n
                v3 = v1 | v3;\n
                goto LABEL_40797b;\n
            }\n
        }\n
        else\n
        {\n
            *(&v1) = (222 - v4 >> 3) + 80;\n
LABEL_407977:\n
            v3 = v1 | v3;\n
            goto LABEL_40797b;\n
        }\n
        v2 += 1;\n
        v1 = a1->field_8;\n
        v8 = *(v1);\n
    } while (v2 < v8);\n
    return *(v1);\n
}\n
", "4225258:sub_4078ea": null, "4225337:sub_407939": null, "4225362:sub_407952": null, "4225478:sub_4079c6": null, "4225821:sub_407b1d": null, "4225824:_ZNK16CompressionEight10decompressER10AudioTrackPh": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char g_40b4d8;\n
extern char g_40b4f8;\n
\n
long long CompressionEight::decompress const(unsigned long a0, struct_2 *a1, char a2[2])\n
{\n
    struct_0 *v1;  // rdi, Other Possible Types: unsigned long\n
    char v2[2];  // r15, Other Possible Types: unsigned long\n
    struct_0 *v3;  // r12\n
    unsigned long long v4;  // rcx\n
    unsigned long long v5;  // rax\n
    unsigned int *v6;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a1->field_8;\n
    if (!v1->field_0)\n
        return v5;\n
    v2 = a2;\n
    v6 = 0;\n
    while (true)\n
    {\n
        *((*((v1 + 8)) + v6 * 4)) = ((*(v2) >> 7) - 1 ^ *(&(&g_40b4d8)[(*(v2) >> 2) & 28]) * (*(v2) & 15) + *(&(&g_40b4f8)[(*(v2) >> 2) & 28])) * 0x40000;\n
        if (a1->field_4)\n
        {\n
            v3 = a1->field_10;\n
            v4 = *((v2 + 1));\n
            if (v6 >= v3->field_0)\n
            {\n
                v5 = AudioStream::setLength(v3, v6 + 1);\n
                v1 = a1->field_8;\n
            }\n
            v2 += 2;\n
            a1->field_10->field_8[v6].field_0 = ((v4 >> 7) - 1 ^ *(&(&g_40b4d8)[(v4 >> 2) & 28]) * (v4 & 15) + *(&(&g_40b4f8)[(v4 >> 2) & 28])) * 0x40000;\n
            v6 += 1;\n
            if (v6 >= *(v1))\n
                return v5;\n
        }\n
        else\n
        {\n
            v2 += 1;\n
            v6 += 1;\n
            if (v6 >= *(v1))\n
                return v5;\n
        }\n
    }\n
}\n
", "4225882:sub_407b5a": null, "4226067:sub_407c13": null, "4226114:sub_407c42": null, "4226128:_ZN16CompressionEightD0Ev": "long long CompressionEight::__deleting_dtor__(unsigned int a0)\n
{\n
    Compression::__dtor__();\n
    return operator delete(a0);\n
}\n
", "4226164:sub_407c74": null, "4226176:_ZNK15CompressionFour5getIdEv": "long long CompressionFour::getId const()\n
{\n
    return 1;\n
}\n
", "4226194:sub_407c92": null, "4226208:_ZNK15CompressionFour16getMaxBufferSizeERK10AudioTrack": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long CompressionFour::getMaxBufferSize const(unsigned long a0, struct_0 *a1)\n
{\n
    unsigned long long v1;  // rax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // edx\n
    unsigned long v4;  // rsi, Other Possible Types: unsigned long long\n
    unsigned int v5;  // edi\n
    unsigned long long v6;  // rax\n
\n
    v1 = a1->field_8->field_0;\n
    if (!a1->field_4)\n
    {\n
        v4 = v1 / 2;\n
        v2 = 3;\n
        v5 = 509;\n
        v3 = 508;\n
    }\n
    else\n
    {\n
        v2 = 7;\n
        v5 = 505;\n
        v3 = 504;\n
        v4 = v1;\n
    }\n
    v6 = v2 * (0 CONCAT v1 + v3) /m v5;\n
    return v6 + v4;\n
}\n
", "4226282:sub_407cea": null, "4226288:_Z9bestIndexi": "extern char _ZL10step_table;\n
\n
long long bestIndex(unsigned long a0)\n
{\n
    unsigned int v1;  // r9d\n
    unsigned long long v2;  // rsi\n
    unsigned long long v3;  // rax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // esi\n
    unsigned int v6[2];  // rax, Other Possible Types: unsigned long\n
    unsigned long v7;  // rdx\n
    unsigned int v8[2];  // rdi, Other Possible Types: unsigned long\n
\n
    v1 = -(a0);\n
    if (-(a0) < 0)\n
        v1 = a0;\n
    v8 = 0;\n
    v7 = 1;\n
    do\n
    {\n
        v2 = v1 - *(&(&_ZL10step_table)[4 * v8]);\n
        v3 = v1 - *(&(&_ZL10step_table)[4 * v7]);\n
        v4 = -(v2);\n
        if (-(v2) < 0)\n
            v4 = v2;\n
        v5 = -(v3);\n
        if (-(v3) < 0)\n
            v5 = v3;\n
        v6 = v7;\n
        if (v5 >= v4)\n
            v6 = v8;\n
        v7 += 1;\n
        v8 = v6;\n
    } while (v7 != 90);\n
    return v6;\n
}\n
", "4226322:sub_407d12": null, "4226394:sub_407d5a": null, "4226400:_ZNK15CompressionFour8compressERK10AudioTrackPh": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
} struct_4;\n
\n
extern char _ZL10step_table;\n
extern char _ZL11index_table;\n
\n
long long CompressionFour::compress const(unsigned long a0, struct_2 *a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)\n
{\n
    unsigned long v0;  // [bp-0x40]\n
    int tmp_221;  // tmp #221\n
    int tmp_224;  // tmp #224\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned int v2;  // [bp+0xc]\n
    unsigned int v3[2];  // [bp+0x10], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp+0x1c]\n
    struct_2 *v5;  // [bp+0x20]\n
    char v6;  // [bp+0x28]\n
    struct_0 *v7;  // [bp+0x30]\n
    struct_0 *v8;  // rbx, Other Possible Types: unsigned long\n
    unsigned int v9;  // r14d\n
    unsigned int v10;  // eax\n
    unsigned long v11;  // rdx\n
    unsigned int v12[2];  // r11\n
    unsigned int v13[2];  // rax, Other Possible Types: unsigned long\n
    void* v14;  // rdi, Other Possible Types: unsigned long\n
    struct_3 *v15;  // rax\n
    void* v16;  // rdx, Other Possible Types: unsigned long, unsigned int\n
    unsigned int v17[2];  // rdi\n
    void* v18;  // r10, Other Possible Types: unsigned long long, unsigned long\n
    unsigned long long v19;  // rdi\n
    unsigned int v20;  // ecx\n
    unsigned long long v21;  // r10\n
    unsigned int v22;  // eax\n
    unsigned long v23;  // rbx\n
    unsigned long long v24;  // rdx\n
    unsigned long long v25;  // rdi\n
    unsigned int v26;  // esi\n
    unsigned int v27;  // edx\n
    unsigned long long v28;  // rsi\n
    unsigned int v29;  // eax\n
    unsigned int *v30;  // rax, Other Possible Types: unsigned long\n
    unsigned short v31[2];  // rcx\n
    char *v32;  // r14\n
    struct_0 *v33;  // rsi\n
    unsigned int v34;  // ebx\n
    void* v35;  // rdi, Other Possible Types: unsigned long\n
    void* v36;  // rax, Other Possible Types: unsigned long\n
    unsigned int *v37;  // r8, Other Possible Types: unsigned long\n
    unsigned int v38;  // eax\n
    unsigned int *v39;  // rax\n
    unsigned long v40;  // r10, Other Possible Types: unsigned long long\n
    unsigned long long v41;  // rdi\n
    unsigned long long v42;  // rdi\n
    unsigned long long v43;  // rsi\n
    unsigned long v44;  // r10\n
    unsigned long long v45;  // rcx, Other Possible Types: unsigned long\n
    unsigned int v46;  // eax\n
    unsigned long v47;  // rbx\n
    unsigned long v48;  // rdi\n
    unsigned long v49;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v50;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v51;  // rsi\n
    unsigned long long v52;  // rcx\n
    unsigned int v53;  // edx\n
    unsigned int v54;  // esi\n
    unsigned long v55;  // r15, Other Possible Types: unsigned long long\n
    unsigned long v56;  // rcx\n
    char *v57;  // rax, Other Possible Types: unsigned long\n
    unsigned short v59[4];  // r13, Other Possible Types: unsigned long, unsigned long long, char *\n
    unsigned long long v60;  // r10, Other Possible Types: unsigned long\n
    unsigned long v61;  // rsi\n
    unsigned long long v62;  // rsi\n
    unsigned int v63;  // eax\n
    unsigned long long v64;  // rsi\n
    unsigned int v65;  // eax\n
    unsigned long long v66;  // rcx\n
    unsigned int v67;  // eax\n
    unsigned int *v68;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v69;  // rcx\n
    unsigned int v70;  // eax\n
    unsigned int *v71;  // rax, Other Possible Types: unsigned long\n
    unsigned int *v72;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v73;  // rax\n
    unsigned long v74;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v75;  // rax\n
    unsigned long v76;  // rsi, Other Possible Types: unsigned long long\n
    unsigned int v77;  // esi\n
    unsigned long long v78;  // rbx\n
    unsigned long v79;  // rsi\n
    unsigned long v80;  // rax, Other Possible Types: unsigned long long\n
    unsigned int v81[2];  // rdi, Other Possible Types: unsigned long, unsigned int\n
    unsigned long v82;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v83;  // rax, Other Possible Types: unsigned int\n
    unsigned long v84;  // rax, Other Possible Types: unsigned long long\n
    unsigned long v85;  // r8\n
    unsigned int v86[2];  // rdi, Other Possible Types: unsigned long\n
\n
    v0 = a2;\n
    v8 = a1->field_4;\n
    v9 = v8->field_0;\n
    if (!v9)\n
        return v57;\n
    v59 = 0;\n
    v4 = v10;\n
    v86 = 0;\n
    v5 = a1;\n
    do\n
    {\n
        v11 = *((v8 + 8));\n
        v12 = v86;\n
        v18 = *((v11 + v86 * 4));\n
        if (!(v59 & 511))\n
        {\n
            v7 = v8;\n
            v60 = v18 >> 16;\n
            *(&v3[0]) = v86;\n
            v85 = v86 + 1;\n
            v13 = 0;\n
            v14 = 0;\n
            if (v9 > v85)\n
                v14 = *((v11 + v85 * 4));\n
            v19 = (v14 >> 16) - v60;\n
            v20 = -(v19);\n
            if (-(v19) < 0)\n
                v20 = v19;\n
            v23 = 1;\n
            do\n
            {\n
                v24 = v20 - *(&(&_ZL10step_table)[4 * v13]);\n
                v25 = v20 - *(&(&_ZL10step_table)[4 * v23]);\n
                v26 = -(v24);\n
                if (-(v24) < 0)\n
                    v26 = v24;\n
                v27 = -(v25);\n
                if (-(v25) < 0)\n
                    v27 = v25;\n
                a5 = v23;\n
                if (v27 >= v26)\n
                    a5 = v13;\n
                v23 += 1;\n
                v13 = a5;\n
            } while (v23 != 90);\n
            v31 = *(&v6);\n
            *((v31 + v59)) = v60;\n
            v57 = v59 + 2;\n
            *((v31 + v57)) = a5;\n
            v32 = v59;\n
            v59 = v59 + 4;\n
            a1 = v5;\n
            if (!(&a1->padding_0)[1])\n
            {\n
                v8 = v7;\n
                goto LABEL_407dd6;\n
            }\n
            else\n
            {\n
                v33 = a1->field_8;\n
                v34 = v33->field_0;\n
                v35 = 0;\n
                v36 = 0;\n
                if (v34 > v3)\n
                    v36 = *((&v33->field_8->field_0 + 0x4 * v12));\n
                v38 = v36 >> 16;\n
                if (v34 > v85)\n
                    v35 = (&v33->field_8->field_0)[v85];\n
                v41 = v35 >> 16;\n
                v2 = v38;\n
                v42 = v41 - v2;\n
                v46 = -(v42);\n
                if (-(v42) < 0)\n
                    v46 = v42;\n
                v47 = 0;\n
                v48 = 1;\n
                do\n
                {\n
                    v51 = v46 - *(&(&_ZL10step_table)[4 * v47]);\n
                    v52 = v46 - *(&(&_ZL10step_table)[4 * v48]);\n
                    v53 = -(v51);\n
                    if (-(v51) < 0)\n
                        v53 = v51;\n
                    v54 = -(v52);\n
                    if (-(v52) < 0)\n
                        v54 = v52;\n
                    v55 = v48;\n
                    if (v54 >= v53)\n
                        v55 = v47;\n
                    v48 += 1;\n
                    v47 = v55;\n
                } while (v48 != 90);\n
                v56 = *(&v6);\n
                *((v56 + &v59[0])) = v2;\n
                v57 = v32 + 6;\n
                *((v56 + v57)) = v55;\n
                v59 = v32 + 8;\n
                a1 = v5;\n
                v8 = v7;\n
            }\n
            continue;\n
        }\n
        *(&v8) = *((a1 + 4));\n
        if (!*((a1 + 4)))\n
        {\n
            v17 = v86 + 1;\n
            v18 = 0;\n
            v3 = v17;\n
            if (v9 > v3)\n
                v18 = *((v11 + v3 * 4));\n
        }\n
        else\n
        {\n
            v15 = *((a1 + 16));\n
            v16 = 0;\n
            v3 = v86;\n
            if (v15->field_0 > 0)\n
                v16 = v15->field_8[v86].field_0;\n
            v4 = v16 / 0x10000;\n
        }\n
        v21 = (v18 >> 16) - a3;\n
        v22 = -(v21);\n
        if (-(v21) < 0)\n
            v22 = v21;\n
        v28 = *(&(&_ZL10step_table)[4 * a5]);\n
        v29 = v22 * 4;\n
        v30 = (v29 >> 31 CONCAT v29) /m v28;\n
        if (7 <= v30)\n
            v30 = 7;\n
        v37 = v30 | 8;\n
        if ((v21 >> 31 & 1 ^ 1))\n
            v37 = v30;\n
        v39 = v37 & 7;\n
        v40 = -(v28);\n
        if (!(v37 & 8))\n
            v40 = v28;\n
        v43 = ((v40 >> 1) & (v37 * 0x40000000 >> 31)) + ((v37 * 0x20000000 >> 31) & v40) + a3;\n
        v44 = (v40 >> 2) & -(v37 & 1);\n
        v60 = v44 + v43;\n
        tmp_221 = a5;\n
        a5 = a5 + *((&_ZL11index_table + 0x4 * v39));\n
        if ([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, t221, Conv(32->64, Load(addr=(0x40b690<64> + (rax<8> << 0x2<8>)), size=4, endness=Iend_LE)), cc_ndep<8>))\n
        {\n
            v50 = 0;\n
            v45 = v4;\n
        }\n
        else\n
        {\n
            v50 = 7;\n
            v45 = v4;\n
            if (a5 < 8)\n
            {\n
                v49 = 32767;\n
                if (!(v60 <= 32766))\n
                    goto LABEL_408095;\n
                goto LABEL_408087;\n
            }\n
        }\n
        a5 = v50;\n
        v49 = 32767;\n
        if (!(v60 <= 32766))\n
            goto LABEL_408095;\n
LABEL_408087:\n
        v49 = 0xffff8000;\n
        if (!(v60 <= -0x8000))\n
            goto LABEL_408098;\n
LABEL_408095:\n
        v60 = v49;\n
LABEL_408098:\n
        *(&v37) = v37 * 16;\n
        v61 = v45;\n
        if (!v8)\n
        {\n
            v64 = v61 - v60;\n
            v65 = -(v64);\n
            if (-(v64) < 0)\n
                v65 = v64;\n
            v69 = *(&(&_ZL10step_table)[4 * a5]);\n
            v70 = v65 * 4;\n
            v71 = (v70 >> 31 CONCAT v70) /m v69;\n
            if (7 <= v71)\n
                v71 = 7;\n
            v72 = v71 | 8;\n
            if ((v64 >> 31 & 1 ^ 1))\n
                v72 = v71;\n
            v75 = v72 & 7;\n
            v76 = -(v69);\n
            if (!(v72 & 8))\n
                v76 = v69;\n
            v78 = ((v76 >> 1) & (v72 * 0x40000000 >> 31)) + ((v72 * 0x20000000 >> 31) & v76) + v60;\n
            v79 = (v76 >> 2) & -(v72 & 1);\n
            v60 = v79 + v78;\n
            tmp_224 = a5;\n
            a5 = a5 + *(&(&_ZL11index_table)[4 * v75]);\n
            if ([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, t221, Conv(32->64, Load(addr=(0x40b690<64> + (rax<8> << 0x2<8>)), size=4, endness=Iend_LE)), cc_ndep<8>))\n
            {\n
                v82 = 0;\n
                v81 = v3;\n
            }\n
            else\n
            {\n
                v82 = 7;\n
                v81 = v3;\n
                if (a5 < 8)\n
                {\n
                    v84 = 32767;\n
                    if (!(v60 <= 32766))\n
                        goto LABEL_408234;\n
                    goto LABEL_408222;\n
                }\n
            }\n
            a5 = v82;\n
            v84 = 32767;\n
            if (!(v60 <= 32766))\n
                goto LABEL_408234;\n
LABEL_408222:\n
            v84 = 0xffff8000;\n
            if (!(v60 <= -0x8000))\n
                goto LABEL_407db4;\n
LABEL_408234:\n
            v60 = v84;\n
LABEL_407db4:\n
            v57 = v59;\n
            v59 = v59 + 1;\n
            *((*(&v6) + v57)) = v37 | v72;\n
            a1 = v5;\n
            v8 = a1->field_4;\n
            v85 = v81 + 1;\n
        }\n
        else\n
        {\n
            v62 = v61 - *((&v1 + 4));\n
            v63 = -(v62);\n
            if (-(v62) < 0)\n
                v63 = v62;\n
            v66 = *(&(&_ZL10step_table)[4 * v55]);\n
            v67 = v63 * 4;\n
            v68 = (v67 >> 31 CONCAT v67) /m v66;\n
            if (7 <= v68)\n
                v68 = 7;\n
            v72 = v68 | 8;\n
            if ((v62 >> 31 & 1 ^ 1))\n
                v72 = v68;\n
            v73 = v72 & 7;\n
            v74 = -(v66);\n
            if (!(v72 & 8))\n
                v74 = v66;\n
            v77 = ((v74 >> 2) & -(v72 & 1)) + ((v74 >> 1) & (v72 * 0x40000000 >> 31)) + ((v72 * 0x20000000 >> 31) & v74) + *((&v1 + 4));\n
            tmp_221 = v55;\n
            v55 = v55 + *(&(&_ZL11index_table)[4 * v73]);\n
            if ([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, t221, Conv(32->64, Load(addr=(0x40b690<64> + (rax<8> << 0x2<8>)), size=4, endness=Iend_LE)), cc_ndep<8>))\n
            {\n
                v80 = 0;\n
                v81 = v3;\n
            }\n
            else\n
            {\n
                v80 = 7;\n
                v81 = v3;\n
                if (v55 < 8)\n
                {\n
                    v83 = 32767;\n
                    if (!(v77 <= 32766))\n
                        goto LABEL_407db0;\n
                    goto LABEL_4081e6;\n
                }\n
            }\n
            v55 = v80;\n
            v83 = 32767;\n
            if (!(v77 <= 32766))\n
                goto LABEL_407db0;\n
LABEL_4081e6:\n
            v83 = -0x8000;\n
            if (v77 > -0x8000)\n
            {\n
                v2 = v77;\n
                goto LABEL_407db4;\n
            }\n
LABEL_407db0:\n
            v2 = v83;\n
            goto LABEL_407db4;\n
        }\n
LABEL_407dd6:\n
        v9 = *(v8);\n
        v86 = v85;\n
        a3 = v60;\n
    } while (v85 < v9);\n
    return v57;\n
}\n
", "4226465:sub_407da1": null, "4226614:sub_407e36": null, "4226680:sub_407e78": null, "4226742:sub_407eb6": null, "4226866:sub_407f32": null, "4226938:sub_407f7a": null, "4227134:sub_40803e": null, "4227183:sub_40806f": null, "4227390:sub_40813e": null, "4227659:sub_40824b": null, "4227664:_ZNK15CompressionFour10decompressER10AudioTrackPh": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned short field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[4241040];\n
    unsigned int field_40b690;\n
} struct_3;\n
\n
extern char _ZL10step_table;\n
extern unsigned int _ZL11index_table;\n
\n
long long CompressionFour::decompress const(unsigned long a0, struct_2 *a1, unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    int tmp_222;  // tmp #222\n
    int tmp_220;  // tmp #220\n
    struct_0 *v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x54]\n
    struct_2 *v3;  // [bp-0x50]\n
    struct_0 *v4;  // [bp-0x48]\n
    unsigned int *v5;  // [bp-0x40], Other Possible Types: unsigned long\n
    struct_1 *v7;  // r12, Other Possible Types: unsigned long\n
    struct_0 *v8;  // r13, Other Possible Types: unsigned long, unsigned int\n
    unsigned int *v9;  // rax\n
    struct_0 *v10;  // r15d\n
    unsigned long long v11;  // r8\n
    unsigned int *v12;  // r11\n
    unsigned long long v13;  // rdi\n
    struct_3 *v14;  // r9\n
    unsigned long v15;  // r14, Other Possible Types: unsigned long long\n
    unsigned long v16;  // r15\n
    unsigned long v17;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v18;  // r12\n
    unsigned long long v20;  // rcx\n
    unsigned long v21;  // rax\n
    unsigned int v23;  // ecx\n
    struct_0 *v24;  // r10d, Other Possible Types: unsigned int\n
    unsigned long long v25;  // r8, Other Possible Types: unsigned long\n
    unsigned long v26;  // rcx, Other Possible Types: unsigned long long\n
    unsigned long v27;  // r15\n
    unsigned long long v28;  // rax\n
    unsigned long v29;  // r9\n
    unsigned long v30;  // rdi, Other Possible Types: unsigned long long\n
    unsigned long v31;  // r15\n
    unsigned long long v32;  // rax\n
    unsigned long v33;  // r10\n
    unsigned long v34;  // rbx, Other Possible Types: unsigned long long\n
    unsigned int v35;  // edi\n
    unsigned int *v36;  // r15\n
    unsigned long long v37;  // rcx\n
    unsigned long v38;  // rbx\n
    unsigned int v39;  // r15d\n
    unsigned int *v40;  // rax, Other Possible Types: unsigned long\n
    unsigned int v41;  // eax\n
    unsigned int v42;  // eax\n
    unsigned long v43;  // rax, Other Possible Types: unsigned long long\n
    struct_1 *v44;  // r15\n
    unsigned long v45;  // rbx\n
    unsigned long v46;  // r11\n
    unsigned long v47;  // rax\n
    struct_0 *v48;  // r10, Other Possible Types: unsigned long, unsigned int, unsigned long long\n
    unsigned long v49;  // r9\n
\n
    v7 = a1->field_8;\n
    if (!v7->field_0)\n
        return v47;\n
    v8 = 0;\n
    v48 = 0;\n
    v5 = v9;\n
    v4 = a2;\n
    v3 = a1;\n
    do\n
    {\n
        if (!(v48 & 511))\n
        {\n
            v15 = *((a2 + v48));\n
            v0 = *((a2 + v48 + 2));\n
            v47 = v48 + 4;\n
            v16 = v8;\n
            *((*((v7 + 8)) + v8 * 4)) = v15 * 0x10000;\n
            if (!*((a1 + 4)))\n
            {\n
                v48 = v47;\n
                goto LABEL_408298;\n
            }\n
            else\n
            {\n
                v5 = *((v48 + a2 + 6));\n
                v18 = *((a1 + 16));\n
                v2 = *((a2 + v47));\n
                if (v18->field_0 <= v8)\n
                {\n
                    v1 = v48;\n
                    AudioStream::setLength(v18, v8 + 1);\n
                    v48 = v1;\n
                    a1 = v3;\n
                    a2 = v4;\n
                }\n
                v48 = v48 + 8;\n
                v47 = v18->field_8;\n
                *((v47 + v16 * 4)) = v2 * 0x10000;\n
            }\n
            continue;\n
        }\n
        v10 = v48;\n
        v11 = *((a2 + v48));\n
        v12 = v0;\n
        v13 = *((&_ZL10step_table + 0x4 * v12));\n
        v14 = v11 / 4 & 28;\n
        v17 = -(v13);\n
        if (!((v11 >> 4) & 8))\n
            v17 = v13;\n
        v20 = ((v17 >> 1) & ((v11 >> 4) * 0x40000000 >> 31)) + (((v11 >> 4) * 0x20000000 >> 31) & v17) + v15;\n
        v21 = (v17 >> 2) & -(v11 / 16 & 1);\n
        v15 = v21 + v20;\n
        tmp_222 = v12;\n
        if ([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, t222, Conv(32->64, Load(addr=(r9<8> + 0x40b690<64>), size=4, endness=Iend_LE)), cc_ndep<8>))\n
        {\n
            v23 = 0;\n
            v24 = v10;\n
        }\n
        else\n
        {\n
            v23 = 7;\n
            v0 = v12 + *((v14 + &_ZL11index_table));\n
            v24 = v10;\n
            if (v0 < 8)\n
            {\n
                v25 = v11 & 15;\n
                v26 = 32767;\n
                if (!(v15 <= 32766))\n
                    goto LABEL_408429;\n
                goto LABEL_40841b;\n
            }\n
        }\n
        v0 = v23;\n
        v25 = v11 & 15;\n
        v26 = 32767;\n
        if (!(v15 <= 32766))\n
            goto LABEL_408429;\n
LABEL_40841b:\n
        v26 = 0xffff8000;\n
        if (!(v15 <= -0x8000))\n
            goto LABEL_40842c;\n
LABEL_408429:\n
        v15 = v26;\n
LABEL_40842c:\n
        v48 = v24 + 1;\n
        v49 = *((v7 + 8));\n
        v46 = v8;\n
        *((v49 + v8 * 4)) = v15 * 0x10000;\n
        if (!*((a1 + 4)))\n
        {\n
            v1 = v48;\n
            v31 = v0;\n
            v32 = *(&(&_ZL10step_table)[4 * v31]);\n
            v33 = v25 & 7;\n
            v34 = -(v32);\n
            if (!(v25 & 8))\n
                v34 = v32;\n
            v37 = ((v34 >> 1) & (v25 * 0x40000000 >> 31)) + ((v25 * 0x20000000 >> 31) & v34) + v15;\n
            v38 = (v34 >> 2) & -(v25 & 1);\n
            v15 = v38 + v37;\n
            tmp_222 = v31;\n
            v39 = v31 + (&_ZL11index_table)[v33];\n
            if ([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, t222, Conv(32->64, Load(addr=(r9<8> + 0x40b690<64>), size=4, endness=Iend_LE)), cc_ndep<8>))\n
            {\n
                v41 = 0;\n
            }\n
            else\n
            {\n
                v41 = 7;\n
                if (v39 < 8)\n
                    goto LABEL_4085c9;\n
            }\n
            v39 = v41;\n
LABEL_4085c9:\n
            v0 = v39;\n
            v43 = 32767;\n
            v48 = v1;\n
            if (v15 <= 32766)\n
            {\n
                v43 = 0xffff8000;\n
                if (!(v15 <= -0x8000))\n
                    goto LABEL_4085f2;\n
            }\n
            v15 = v43;\n
LABEL_4085f2:\n
            v45 = v8 + 1;\n
            if (*(v7) <= v45)\n
            {\n
                AudioStream::setLength(v7, v8 + 2);\n
                v48 = v1;\n
                a1 = v3;\n
                a2 = v4;\n
                v49 = *((v7 + 8));\n
            }\n
            v47 = v45;\n
            *((v49 + v45 * 4)) = v15 * 0x10000;\n
            v8 = v45;\n
        }\n
        else\n
        {\n
            v27 = v5;\n
            v28 = *(&(&_ZL10step_table)[4 * v27]);\n
            v29 = v25 & 7;\n
            v30 = -(v28);\n
            if (!(v25 & 8))\n
                v30 = v28;\n
            v35 = ((v30 >> 2) & -(v25 & 1)) + ((v30 >> 1) & (v25 * 0x40000000 >> 31)) + ((v25 * 0x20000000 >> 31) & v30) + v2;\n
            tmp_220 = v27;\n
            v36 = v27 + (&_ZL11index_table)[v29];\n
            if ([D] amd64g_calculate_condition(0x8<64>, 0x3<64>, t222, Conv(32->64, Load(addr=(r9<8> + 0x40b690<64>), size=4, endness=Iend_LE)), cc_ndep<8>))\n
            {\n
                v40 = 0;\n
            }\n
            else\n
            {\n
                v40 = 7;\n
                if (v36 < 8)\n
                {\n
                    v5 = v36;\n
                    v42 = 32767;\n
                    if (!(v35 <= 32766))\n
                        goto LABEL_408579;\n
                    goto LABEL_40856c;\n
                }\n
            }\n
            v5 = v40;\n
            v42 = 32767;\n
            if (!(v35 <= 32766))\n
                goto LABEL_408579;\n
LABEL_40856c:\n
            v42 = -0x8000;\n
            if (!(v35 <= -0x8000))\n
                goto LABEL_40857b;\n
LABEL_408579:\n
            v35 = v42;\n
LABEL_40857b:\n
            v44 = *((a1 + 16));\n
            v2 = v35;\n
            if (v44->field_0 <= v8)\n
            {\n
                v1 = v46;\n
                AudioStream::setLength(v44, v8 + 1);\n
                v46 = v1;\n
                a1 = v3;\n
                a2 = v4;\n
            }\n
            v47 = v44->field_8;\n
            *((v47 + v46 * 4)) = v35 * 0x10000;\n
            continue;\n
        }\n
LABEL_408298:\n
        v8 = v8 + 1;\n
        v7 = *((a1 + 8));\n
    } while (v8 < *(v7));\n
    return v47;\n
}\n
", "4227723:sub_40828b": null, "4227942:sub_408366": null, "4228081:sub_4083f1": null, "4228315:sub_4084db": null, "4228675:sub_408643": null, "4228688:_ZN15CompressionFourD0Ev": "long long CompressionFour::__deleting_dtor__(unsigned int a0)\n
{\n
    Compression::__dtor__();\n
    return operator delete(a0);\n
}\n
", "4228724:sub_408674": null, "4228736:_ZN6FxGainC1E4Gain": "long long FxGain::__ctor__(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    *(a0) = a1;\n
    return v1;\n
}\n
", "4228751:sub_40868f": null, "4228752:_ZNK6FxGain5applyER10AudioTrack": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long FxGain::apply const(unsigned int *a0, struct_2 *a1)\n
{\n
    int tmp_5;  // tmp #5\n
    int tmp_7;  // tmp #7\n
    int tmp_6;  // tmp #6\n
    struct_0 *v1;  // r8\n
    unsigned int *v2;  // rcx\n
    int v4;  // xmm5\n
    int v5;  // xmm6\n
    unsigned int v6;  // eax\n
    unsigned long v7;  // rdx, Other Possible Types: unsigned long long\n
    struct_0 *v8;  // rax, Other Possible Types: unsigned long\n
    unsigned int *v9;  // rcx\n
    unsigned long v10;  // rdx, Other Possible Types: unsigned long long\n
    int v11;  // xmm5\n
    int v12;  // xmm5\n
    int v13;  // xmm6\n
    unsigned int v14;  // esi\n
\n
    v1 = a1->field_8;\n
    if (v1->field_0)\n
    {\n
        v2 = v1->field_8;\n
        v7 = 0;\n
        do\n
        {\n
            if (!(CmpF(v11, 0) & 1))\n
            {\n
                v4 = (0 CONCAT *(a0)) * (0 CONCAT 0x3e34000000280000) + (0 CONCAT 0x3ff0000000000000);\n
            }\n
            else\n
            {\n
                tmp_5 = DivV(tmp_7, tmp_6);\n
                v4 = tmp_5;\n
            }\n
            v5 = (0 CONCAT v2[v7]) * v4;\n
            v6 = 2147483647;\n
            if ((CmpF(v13, 0x41dfffffffc00000) & 1))\n
            {\n
                v6 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v13) & 1))\n
                    v6 = v5;\n
            }\n
            v2[v7] = v6;\n
            v7 += 1;\n
            v8 = v1->field_0;\n
        } while (v7 < v8);\n
    }\n
    if (!a1->field_4)\n
        return v1->field_0;\n
    v8 = a1->field_10;\n
    if (!*(v8))\n
        return v8;\n
    v9 = *((v8 + 8));\n
    v10 = 0;\n
    do\n
    {\n
        v11 = (0 CONCAT *(a0)) * (0 CONCAT 0x3e34000000280000);\n
        if (!(CmpF(v11, 0) & 1))\n
        {\n
            v12 = v11 + (0 CONCAT 0x3ff0000000000000);\n
        }\n
        else\n
        {\n
            tmp_5 = DivV(tmp_7, tmp_6);\n
            v12 = tmp_5;\n
        }\n
        v13 = (0 CONCAT v9[v10]) * v12;\n
        v14 = 2147483647;\n
        if ((CmpF(v13, 0x41dfffffffc00000) & 1))\n
        {\n
            v14 = 0x80000000;\n
            if ((CmpF(0xc1e0000000000000, v13) & 1))\n
                v14 = v13;\n
        }\n
        v9[v10] = v14;\n
        v10 += 1;\n
    } while (v10 < *(v8));\n
    return v8;\n
}\n
", "4228818:sub_4086d2": null, "4228882:sub_408712": null, "4229007:sub_40878f": null, "4229057:sub_4087c1": null, "4229121:sub_408801": null, "4229136:_ZNK6FxGain5applyER11AudioStream": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long FxGain::apply const(unsigned int *a0, struct_0 *a1)\n
{\n
    int tmp_5;  // tmp #5\n
    int tmp_7;  // tmp #7\n
    int tmp_6;  // tmp #6\n
    unsigned int *v1;  // rax\n
    unsigned long v2;  // rcx, Other Possible Types: unsigned long long\n
    int v3;  // xmm5\n
    int v4;  // xmm5\n
    int v5;  // xmm6\n
    unsigned int v6;  // edx\n
\n
    if (!a1->field_0)\n
        return a1->field_8;\n
    v1 = a1->field_8;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = (0 CONCAT *(a0)) * (0 CONCAT 0x3e34000000280000);\n
        if (!(CmpF(v3, 0) & 1))\n
        {\n
            v4 = v3 + (0 CONCAT 0x3ff0000000000000);\n
        }\n
        else\n
        {\n
            tmp_5 = DivV(tmp_7, tmp_6);\n
            v4 = tmp_5;\n
        }\n
        v5 = (0 CONCAT v1[v2]) * v4;\n
        v6 = 2147483647;\n
        if ((CmpF(v5, 0x41dfffffffc00000) & 1))\n
        {\n
            v6 = 0x80000000;\n
            if ((CmpF(0xc1e0000000000000, v5) & 1))\n
                v6 = v5;\n
        }\n
        v1[v2] = v6;\n
        v2 += 1;\n
    } while (v2 < a1->field_0);\n
    return a1->field_8;\n
}\n
", "4229197:sub_40884d": null, "4229249:sub_408881": null, "4229313:sub_4088c1": null, "4229328:_ZN5FxPanC1Ei": "long long FxPan::__ctor__(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    *(a0) = a1;\n
    return v1;\n
}\n
", "4229343:sub_4088df": null, "4229344:_ZNK5FxPan5applyER10AudioTrack": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long FxPan::apply const(unsigned int *a0, struct_2 *a1)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_11;  // tmp #11\n
    int tmp_10;  // tmp #10\n
    struct_0 *v1;  // r8\n
    unsigned int v2;  // eax\n
    unsigned int *v4;  // rcx\n
    unsigned long long v5;  // xmm0lq\n
    int v6;  // xmm0\n
    int v9;  // xmm0\n
    unsigned long v10;  // rdx\n
    int v11;  // xmm3\n
    unsigned int v12;  // eax\n
    unsigned long v13;  // rdx\n
    int v14;  // xmm3\n
    unsigned int v15;  // eax\n
    struct_0 *v16;  // rax\n
    unsigned long long v17;  // rcx\n
    unsigned int *v19;  // rcx\n
    int v20;  // xmm0\n
    unsigned long v22;  // rdx\n
    unsigned long v24;  // rdx\n
    int v25;  // xmm3\n
    unsigned int v26;  // esi\n
    int v27;  // xmm3\n
    unsigned int v28;  // esi\n
\n
    if (!a1->field_4)\n
        return v16;\n
    v1 = a1->field_8;\n
    if (v1->field_0)\n
    {\n
        v2 = *(a0);\n
        v4 = v1->field_8;\n
        v5 = (v2 > 0 ? 0 : -(v2));\n
        if (!(CmpF(v20, 0) & 1))\n
        {\n
            v9 = v6 * 0x3e34000000280000 + (0 CONCAT 0x3ff0000000000000);\n
            v10 = 0;\n
            do\n
            {\n
                v14 = (0 CONCAT v4[v10]) * v9;\n
                v15 = 2147483647;\n
                if ((CmpF(v25, 0x41dfffffffc00000) & 1))\n
                {\n
                    v15 = 0x80000000;\n
                    if ((CmpF(0xc1e0000000000000, v25) & 1))\n
                        v15 = v14;\n
                }\n
                v4[v10] = v15;\n
                v10 += 1;\n
            } while (v10 < v1->field_0);\n
        }\n
        else\n
        {\n
            tmp_9 = DivV(tmp_11, tmp_10);\n
            v13 = 0;\n
            do\n
            {\n
                v11 = (0 CONCAT v4[v13]) * tmp_9;\n
                v12 = 2147483647;\n
                if ((CmpF(v25, 0x41dfffffffc00000) & 1))\n
                {\n
                    v12 = 0x80000000;\n
                    if ((CmpF(0xc1e0000000000000, v25) & 1))\n
                        v12 = v11;\n
                }\n
                v4[v13] = v12;\n
                v13 += 1;\n
            } while (v13 < v1->field_0);\n
        }\n
    }\n
    v16 = a1->field_10;\n
    if (!v16->field_0)\n
        return v16;\n
    v17 = *(a0);\n
    v19 = v16->field_8;\n
    v20 = (0 CONCAT (v17 >> 31) & v17) * 0x3e34000000280000;\n
    if (!(CmpF(v20, 0) & 1))\n
    {\n
        v24 = 0;\n
        do\n
        {\n
            v27 = (0 CONCAT v19[v24]) * (v20 + (0 CONCAT 0x3ff0000000000000));\n
            v28 = 2147483647;\n
            if ((CmpF(v25, 0x41dfffffffc00000) & 1))\n
            {\n
                v28 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v25) & 1))\n
                    v28 = v27;\n
            }\n
            v19[v24] = v28;\n
            v24 += 1;\n
        } while (v24 < v16->field_0);\n
        return v16;\n
    }\n
    else\n
    {\n
        tmp_9 = DivV(tmp_11, tmp_10);\n
        v22 = 0;\n
        do\n
        {\n
            v25 = (0 CONCAT v19[v22]) * tmp_9;\n
            v26 = 2147483647;\n
            if ((CmpF(v25, 0x41dfffffffc00000) & 1))\n
            {\n
                v26 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v25) & 1))\n
                    v26 = v25;\n
            }\n
            v19[v22] = v26;\n
            v22 += 1;\n
        } while (v22 < v16->field_0);\n
        return v16;\n
    }\n
}\n
", "4229455:sub_40894f": null, "4229535:sub_40899f": null, "4229682:sub_408a32": null, "4229774:sub_408a8e": null, "4229835:sub_408acb": null, "4229840:_ZNK5FxPan5applyER11AudioStream4Gain": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long FxPan::apply const(unsigned long a0, struct_0 *a1, unsigned long a2)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_11;  // tmp #11\n
    int tmp_10;  // tmp #10\n
    unsigned int *v1;  // rax\n
    unsigned long long v2;  // xmm0lq\n
    int v3;  // xmm0\n
    int v4;  // xmm0\n
    int v7;  // xmm3\n
    unsigned int v8;  // edx\n
    unsigned long v9;  // rcx\n
    int v10;  // xmm3\n
    unsigned int v11;  // edx\n
    unsigned long v12;  // rcx\n
\n
    if (!a1->field_0)\n
        return a1->field_8;\n
    v1 = a1->field_8;\n
    v2 = a2;\n
    v4 = v3 * 0x3e34000000280000;\n
    if (!(CmpF(v4, 0) & 1))\n
    {\n
        v12 = 0;\n
        do\n
        {\n
            v10 = (0 CONCAT v1[v12]) * (v4 + (0 CONCAT 0x3ff0000000000000));\n
            v11 = 2147483647;\n
            if ((CmpF(v7, 0x41dfffffffc00000) & 1))\n
            {\n
                v11 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v7) & 1))\n
                    v11 = v10;\n
            }\n
            v1[v12] = v11;\n
            v12 += 1;\n
        } while (v12 < a1->field_0);\n
        return a1->field_8;\n
    }\n
    else\n
    {\n
        tmp_9 = DivV(tmp_11, tmp_10);\n
        v9 = 0;\n
        do\n
        {\n
            v7 = (0 CONCAT v1[v9]) * tmp_9;\n
            v8 = 2147483647;\n
            if ((CmpF(v7, 0x41dfffffffc00000) & 1))\n
            {\n
                v8 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v7) & 1))\n
                    v8 = v7;\n
            }\n
            v1[v9] = v8;\n
            v9 += 1;\n
        } while (v9 < a1->field_0);\n
        return a1->field_8;\n
    }\n
}\n
", "4229923:sub_408b23": null, "4230014:sub_408b7e": null, "4230075:sub_408bbb": null, "4230080:_ZN8FxReverbC1Ej": "long long FxReverb::__ctor__(unsigned int *a0, unsigned long a1)\n
{\n
    unsigned long v1;  // rax\n
\n
    *(a0) = a1;\n
    return v1;\n
}\n
", "4230095:sub_408bcf": null, "4230096:_ZNK8FxReverb5applyER10AudioTrack": "typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long FxReverb::apply const(unsigned int *a0, struct_2 *a1)\n
{\n
    int tmp_51;  // tmp #51\n
    struct_2 *v1;  // r14\n
    unsigned int *v2;  // r15\n
    struct_0 *v3;  // r12\n
    unsigned int *v5;  // r13\n
    unsigned int *v6;  // rsi\n
    unsigned long v7;  // rdx\n
    unsigned long v9;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v10;  // rdi\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned long v13;  // rcx\n
    unsigned long v14;  // rax, Other Possible Types: unsigned long long\n
    struct_0 *v15;  // r14\n
    unsigned int *v16;  // r12\n
    unsigned int *v17;  // rsi\n
    unsigned long v18;  // rcx\n
    unsigned long v19;  // rdx\n
    int v20;  // xmm3\n
    unsigned long v21;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v22;  // rdi\n
    unsigned int v23;  // ebx\n
    unsigned int v24;  // eax\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = a1->field_8;\n
    v5 = operator new[](*(a0) * 4);\n
    cgc_memset(v5, 0, *(v2) * 4);\n
    if (v3->field_0)\n
    {\n
        v6 = v3->field_8;\n
        v13 = 0;\n
        do\n
        {\n
            v7 = (0 CONCAT v13) /m *(v2) >> 32;\n
            v9 = 2147483647;\n
            if ((CmpF(v20, 0x41dfffffffc00000) & 1))\n
            {\n
                v9 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v20) & 1))\n
                    v9 = (0 CONCAT v5[v7]) * (0 CONCAT 4604180019054961550);\n
            }\n
            v10 = v6[v13];\n
            v11 = (v9 + v10 >> 31) ^ 0x80000000;\n
            tmp_51 = v9;\n
            v12 = v9 + v10;\n
            if ((~(tmp_51 ^ v10) & (tmp_51 ^ tmp_51 + v10)) < 0)\n
                v12 = v11;\n
            v5[v7] = v12;\n
            v6[v13] = v12;\n
            v13 += 1;\n
        } while (v13 < v3->field_0);\n
    }\n
    v14 = operator delete(v5);\n
    if (!v1->field_4)\n
        return v14;\n
    v15 = v1->field_10;\n
    v16 = operator new[](*(v2) * 4);\n
    cgc_memset(v16, 0, *(v2) * 4);\n
    if (v15->field_0)\n
    {\n
        v17 = v15->field_8;\n
        v18 = 0;\n
        do\n
        {\n
            v19 = (0 CONCAT v18) /m *(v2) >> 32;\n
            v20 = (0 CONCAT v16[v19]) * (0 CONCAT 4604180019054961550);\n
            v21 = 2147483647;\n
            if ((CmpF(v20, 0x41dfffffffc00000) & 1))\n
            {\n
                v21 = 0x80000000;\n
                if ((CmpF(0xc1e0000000000000, v20) & 1))\n
                    v21 = v20;\n
            }\n
            v22 = v17[v18];\n
            v23 = (v21 + v22 >> 31) ^ 0x80000000;\n
            tmp_51 = v21;\n
            v24 = v21 + v22;\n
            if ((~(tmp_51 ^ v22) & (tmp_51 ^ tmp_51 + v22)) < 0)\n
                v24 = v23;\n
            v16[v19] = v24;\n
            v17[v18] = v24;\n
            v18 += 1;\n
        } while (v18 < v15->field_0);\n
    }\n
    v14 = operator delete(v16);\n
    return v14;\n
}\n
", "4230202:sub_408c3a": null, "4230395:sub_408cfb": null, "4230510:sub_408d6e": null, "4230512:_ZNK8FxReverb5applyER11AudioStream": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long FxReverb::apply const(unsigned int *a0, struct_0 *a1)\n
{\n
    int tmp_51;  // tmp #51\n
    unsigned int *v2;  // r15\n
    unsigned int *v4;  // r12\n
    unsigned int *v5;  // rsi\n
    unsigned long v6;  // rdx\n
    int v7;  // xmm3\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long\n
    unsigned long long v9;  // rdi\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // eax\n
    unsigned long v12;  // rcx\n
\n
    v2 = a0;\n
    v4 = operator new[](*(a0) * 4);\n
    cgc_memset(v4, 0, *(v2) * 4);\n
    if (!a1->field_0)\n
        return operator delete(v4);\n
    v5 = a1->field_8;\n
    v12 = 0;\n
    do\n
    {\n
        v6 = (0 CONCAT v12) /m *(v2) >> 32;\n
        v7 = (0 CONCAT v4[v6]) * (0 CONCAT 4604180019054961550);\n
        v8 = 2147483647;\n
        if ((CmpF(v7, 0x41dfffffffc00000) & 1))\n
        {\n
            v8 = 0x80000000;\n
            if ((CmpF(0xc1e0000000000000, v7) & 1))\n
                v8 = v7;\n
        }\n
        v9 = v5[v12];\n
        v10 = (v8 + v9 >> 31) ^ 0x80000000;\n
        tmp_51 = v8;\n
        v11 = v8 + v9;\n
        if ((~(tmp_51 ^ v9) & (tmp_51 ^ tmp_51 + v9)) < 0)\n
            v11 = v10;\n
        v4[v6] = v11;\n
        v5[v12] = v11;\n
        v12 += 1;\n
    } while (v12 < a1->field_0);\n
    return operator delete(v4);\n
}\n
", "4230602:sub_408dca": null, "4230716:sub_408e3c": null, "4230720:_ZN9InterfaceC1Ev": "long long Interface::__ctor__()\n
{\n
    return Mixer::__base_ctor__();\n
}\n
", "4230738:sub_408e52": null, "4230752:_ZN9InterfaceD1Ev": "long long Interface::__dtor__()\n
{\n
    return Mixer::__base_dtor__();\n
}\n
", "4230770:sub_408e72": null, "4230784:_ZN9Interface3runEv": "long long Interface::run()\n
{\n
    return Interface::menuMain();\n
}\n
", "4230802:sub_408e92": null, "4230816:_ZN9Interface8menuMainEv": "typedef struct struct_5 {\n
    char field_0;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_6 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_6;\n
\n
typedef struct struct_3 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long Interface::menuMain(struct_2 *a0)\n
{\n
    struct_2 *v0;  // [bp-0xb8]\n
    int tmp_25;  // tmp #25\n
    int tmp_26;  // tmp #26\n
    int tmp_23;  // tmp #23\n
    int tmp_16;  // tmp #16\n
    int tmp_17;  // tmp #17\n
    int tmp_14;  // tmp #14\n
    char *v1;  // [bp-0xb0]\n
    unsigned long long v2;  // [bp-0xa8]\n
    char v3;  // [bp-0xa0]\n
    struct_5 *v5;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v6;  // rax\n
    char v7[2];  // rax\n
    char v8[2];  // rax\n
    char v9[2];  // rax\n
    struct_1 *v10;  // rbx, Other Possible Types: unsigned long\n
    void* v11;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v12;  // rsi, Other Possible Types: unsigned long long\n
    struct_6 *v13;  // rax\n
    struct_3 *v14;  // rax\n
    struct_4 *v15;  // rax\n
    char v17[2];  // rax\n
    struct_3 *v18;  // rbx\n
    char v19[2];  // rax\n
    struct_4 *v20;  // rbx\n
    char v21[2];  // rax\n
    unsigned long long v22;  // rax\n
    struct_4 *v23;  // rax\n
    int v25;  // xmm0\n
    int v27;  // xmm0\n
    unsigned long v28;  // rax\n
\n
    cgc_fwrite(\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\", cgc_strlen(\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\"), cgc_stdout);\n
    v5 = &v3;\n
    v2 = cgc_stdin;\n
    if (cgc_freaduntil(&v3, 100, 10, cgc_stdin) >= 0)\n
    {\n
        v0 = a0;\n
        do\n
        {\n
            if (v3 == 57)\n
            {\n
                v28 = cgc_fprintf(cgc_stdout, \"Thank you for trying out Grit! Please leave us a nice review on the app store.\\n
\");\n
                *(&v28) = 1;\n
                return v28;\n
            }\n
            v1 = v5;\n
            cgc_strsep(&v1, \" \");\n
            v6 = v3 - 49;\n
            switch (v6)\n
            {\n
            case 0:\n
                if (!Interface::menuNew(v0))\n
                    goto LABEL_409318;\n
                continue;\n
            case 1:\n
                if (!Interface::importAudio(v0))\n
                    goto LABEL_409318;\n
                continue;\n
            case 2:\n
                if (!Interface::menuExport(v0))\n
                    goto LABEL_409318;\n
                continue;\n
            case 3:\n
                v10 = v0->field_10;\n
                if (v10)\n
                {\n
                    do\n
                    {\n
                        cgc_fprintf(cgc_stdout, \"%d) %s samples=%d\\n
\");\n
                        v10 = *(v10);\n
                    } while (v10);\n
                }\n
            case 4:\n
                v7 = cgc_strsep(&v1, \" \");\n
                if (v7)\n
                {\n
                    v13 = Mixer::getTrack const(v0, cgc_strtol(v7, NULL, 10));\n
                    if (v13)\n
                    {\n
                        v17 = cgc_strsep(&v1, \" \");\n
                        if (!v17)\n
                        {\n
                            v11 = cgc_stdout;\n
                            v12 = \"Missing gain\\n
\";\n
                            break;\n
                        }\n
                        else if (cgc_strtol(v17, NULL, 10) - 1001 <= -2002)\n
                        {\n
                            v11 = cgc_stdout;\n
                            v12 = \"Invalid gain (-10.00...10.00)\\n
\";\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            tmp_25 = DivV(tmp_26, tmp_23);\n
                            v25 = tmp_25 * 0x41dfffffffc00000;\n
                            v13->field_18 = v25;\n
                            continue;\n
                        }\n
                    }\n
                }\n
            case 5:\n
                v8 = cgc_strsep(&v1, \" \");\n
                if (!v8)\n
                {\n
                    v11 = cgc_stdout;\n
                    v12 = \"Missing track\\n
\";\n
                    break;\n
                }\n
                else\n
                {\n
                    v14 = Mixer::getTrack const(v0, cgc_strtol(v8, NULL, 10));\n
                    if (v14)\n
                    {\n
                        v18 = v14;\n
                        v19 = cgc_strsep(&v1, \" \");\n
                        if (!v19)\n
                        {\n
                            v11 = cgc_stdout;\n
                            v12 = \"Missing pan\\n
\";\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            v22 = cgc_strtol(v19, NULL, 10);\n
                            if (v22 - 101 <= -202)\n
                            {\n
                                v11 = cgc_stdout;\n
                                v12 = \"Invalid pan (-1.00...1.00)\\n
\";\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                if (v22 == 100)\n
                                {\n
                                    v18->field_1c = 2147483647;\n
                                    goto LABEL_408f3e;\n
                                }\n
                                else\n
                                {\n
                                    tmp_16 = DivV(tmp_17, tmp_14);\n
                                    v27 = tmp_16 * 0x41dfffffffc00000;\n
                                    v18->field_1c = v27;\n
                                }\n
                                continue;\n
                            }\n
                        }\n
                    }\n
                    v11 = cgc_stdout;\n
                    v12 = \"Invalid track\\n
\";\n
                    cgc_fprintf(v11, v12);\n
                }\n
            case 6:\n
                v9 = cgc_strsep(&v1, \" \");\n
                if (!v9)\n
                {\n
                    v11 = cgc_stdout;\n
                    v12 = \"Missing track 1\\n
\";\n
                    break;\n
                }\n
                else\n
                {\n
                    v15 = Mixer::getTrack const(v0, cgc_strtol(v9, NULL, 10));\n
                    if (!v15)\n
                    {\n
                        v11 = cgc_stdout;\n
                        v12 = \"Invalid track 1\\n
\";\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v20 = v15;\n
                        v21 = cgc_strsep(&v1, \" \");\n
                        if (v21)\n
                        {\n
                            v23 = Mixer::getTrack const(v0, cgc_strtol(v21, NULL, 10));\n
                            if (!v23)\n
                            {\n
                                v11 = cgc_stdout;\n
                                v12 = \"Invalid track 2\\n
\";\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                if (!v20->field_4 && !v23->field_4)\n
                                {\n
                                    Mixer::combineTracks(v0, v20->field_0, v23->field_0);\n
                                    continue;\n
                                }\n
                                v11 = cgc_stdout;\n
                                v12 = \"Cannot combine a stereo track\\n
\";\n
                                break;\n
                            }\n
                        }\n
                        else if (!v20->field_4)\n
                        {\n
                            v11 = cgc_stdout;\n
                            v12 = \"Cannot split a mono track\\n
\";\n
                            break;\n
                        }\n
                        else\n
                        {\n
                            Mixer::splitTrack(v0, v20->field_0);\n
                            continue;\n
                        }\n
                    }\n
                }\n
            case 7:\n
                Interface::menuEffects(v0);\n
                continue;\n
            default:\n
                v11 = cgc_stdout;\n
                v12 = \"Invalid choice\\n
\";\n
                break;\n
            }\n
LABEL_408f3e:\n
            cgc_fwrite(\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\", cgc_strlen(\"1) New track...\\n
2) Import track\\n
3) Export...\\n
4) List tracks\\n
5) Change gain [track] [hundredths]\\n
6) Change pan [track] [hundredths]\\n
7) Combine/split [track] [?track]\\n
8) Effects...\\n
9) Quit\\n
\"), cgc_stdout);\n
            v5 = &v3;\n
        } while (cgc_freaduntil(&v3, 100, 10, v2) >= 0);\n
    }\n
LABEL_409318:\n
    return 0;\n
}\n
", "4231998:sub_40933e": null, "4232000:_ZN9Interface7menuNewEv": "extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long Interface::menuNew(unsigned long long a0)\n
{\n
    unsigned long long v0;  // [bp-0xb0]\n
    char *v1;  // [bp-0xa8]\n
    char v2;  // [bp-0xa0]\n
    unsigned long long v4;  // rax\n
    char v6[2];  // rax\n
    unsigned long long v7;  // r12\n
    unsigned int v8;  // eax\n
    char v9[2];  // rax\n
    unsigned long v10;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long v11;  // r15\n
    unsigned long long v12;  // rax\n
    unsigned long v14;  // rax, Other Possible Types: char\n
    unsigned int v17;  // edi\n
    unsigned long v18;  // rax\n
\n
    cgc_fwrite(\"1) Silence [number of samples]\\n
2) Sine Wave [number of samples] [HZ]\\n
3) Square Wave [number of samples] [HZ]\\n
4) White Noise [number of samples]\\n
5) Cancel\\n
\", cgc_strlen(\"1) Silence [number of samples]\\n
2) Sine Wave [number of samples] [HZ]\\n
3) Square Wave [number of samples] [HZ]\\n
4) White Noise [number of samples]\\n
5) Cancel\\n
\"), cgc_stdout);\n
    v0 = cgc_stdin;\n
    v4 = cgc_freaduntil(&v2, 100, 10, cgc_stdin);\n
    v14 = v4 / 0x8000000000000000;\n
    if (v4 >= 0 && v2 != 53)\n
    {\n
        do\n
        {\n
            v1 = &v2;\n
            cgc_strsep(&v1, \" \");\n
            v6 = cgc_strsep(&v1, \" \");\n
            v10 = \"Missing samples\\n
\";\n
            if (v6)\n
            {\n
                v7 = cgc_strtoul(v6, NULL, 10);\n
                v10 = \"Invalid samples\\n
\";\n
                if (!(v7 & 0x80000000))\n
                {\n
                    v8 = v2;\n
                    if (v8 - 50 < 2)\n
                    {\n
                        v9 = cgc_strsep(&v1, \" \");\n
                        v10 = \"Missing frequency\\n
\";\n
                        if (v9)\n
                        {\n
                            v11 = cgc_strtoul(v9, NULL, 10);\n
                            v10 = \"Invalid frequency\\n
\";\n
                            if (v11 <= 49999)\n
                            {\n
                                v17 = v7;\n
                                if (v2 == 50)\n
                                    v18 = AudioStream::fromSineWave(v17, v11);\n
                                else\n
                                    v18 = AudioStream::fromSquareWave(v17, v11);\n
                                AudioTrack::__ctor__(operator new(40), v18);\n
                                goto LABEL_409597;\n
                            }\n
                        }\n
                    }\n
                    else if (v8 != 52)\n
                    {\n
                        v10 = \"Invalid choice\\n
\";\n
                        if (v8 == 49)\n
                        {\n
                            AudioTrack::__ctor__(operator new(40), AudioStream::fromSilence(v7));\n
                            goto LABEL_40959a;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        AudioTrack::__ctor__(operator new(40), Mixer::generateWhiteNoise(a0, v7));\n
LABEL_409597:\n
LABEL_40959a:\n
                        v14 = Mixer::addTrack();\n
                        *(&v14) = 1;\n
                        return v14;\n
                    }\n
                }\n
            }\n
            cgc_fprintf(cgc_stdout, v10);\n
            cgc_fwrite(\"1) Silence [number of samples]\\n
2) Sine Wave [number of samples] [HZ]\\n
3) Square Wave [number of samples] [HZ]\\n
4) White Noise [number of samples]\\n
5) Cancel\\n
\", cgc_strlen(\"1) Silence [number of samples]\\n
2) Sine Wave [number of samples] [HZ]\\n
3) Square Wave [number of samples] [HZ]\\n
4) White Noise [number of samples]\\n
5) Cancel\\n
\"), cgc_stdout);\n
            v12 = cgc_freaduntil(&v2, 100, 10, v0);\n
            v14 = v12 / 0x8000000000000000;\n
            if (v12 < 0)\n
                break;\n
            continue;\n
        } while (v2 != 53);\n
    }\n
    *(&v14) = v14 ^ 1;\n
    return v14;\n
}\n
", "4232614:sub_4095a6": null, "4232624:_ZN9Interface11importAudioEv": "extern void* cgc_stdin;\n
\n
long long Interface::importAudio(unsigned long a0)\n
{\n
    char v0;  // [bp-0x3c]\n
    unsigned long v3;  // rdi\n
    unsigned int v4[6];  // r14\n
    struct struct_1 **v5;  // rax\n
    struct struct_1 **v6;  // r15\n
    void* v7;  // r12\n
    unsigned long v8;  // rax\n
    unsigned long v9;  // rax\n
\n
    if (cgc_fread(&v0, 4, cgc_stdin) != 4)\n
        return 0;\n
    v3 = *(&v0);\n
    if ((v3 - 2147483647) >= 2147483674)\n
    {\n
        v4 = operator new[](v3);\n
        if (cgc_fread(v4, *(&v0), cgc_stdin) == *(&v0))\n
        {\n
            if (v4[0] == 778138980 && v4[1] == 24 && v4[2] <= 2147483646 && v4[4] == 8000)\n
            {\n
                v5 = Compression::fromId(v4[3]);\n
                if (v5)\n
                {\n
                    v6 = v5;\n
                    v7 = operator new(40);\n
                    v8 = AudioStream::fromSilence(v4[2]);\n
                    if (v4[5] == 1)\n
                        AudioTrack::__ctor__(v7, v8);\n
                    else\n
                        AudioTrack::__base_ctor__(v7, v8, AudioStream::fromSilence(v4[2]));\n
                    *(v6)->field_28(v6, v7, v4 + 1);\n
                    Mixer::addTrack(a0, v7);\n
                    *(v6)->field_8(v6);\n
                }\n
            }\n
            v9 = operator delete(v4);\n
            *(&v9) = 1;\n
            return v9;\n
        }\n
    }\n
}\n
", "4232950:sub_4096f6": null, "4232960:_ZN9Interface10menuExportEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _ZTV13Compression32;\n
extern char _ZTV15CompressionFour;\n
extern char _ZTV16CompressionEight;\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long Interface::menuExport(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0xb0]\n
    char v1;  // [bp-0xa0]\n
    unsigned long v3;  // rbx\n
    unsigned int v4;  // eax\n
    unsigned long v5;  // rax, Other Possible Types: unsigned long long\n
\n
    cgc_fwrite(\"1) Uncompressed 32-bit signed\\n
2) Compressed 4-bit\\n
3) Compressed 8-bit\\n
4) Cancel\\n
\", cgc_strlen(\"1) Uncompressed 32-bit signed\\n
2) Compressed 4-bit\\n
3) Compressed 8-bit\\n
4) Cancel\\n
\"), cgc_stdout);\n
    if (cgc_freaduntil(&v1, 100, 10, cgc_stdin) < 0)\n
        return 0;\n
    while (true)\n
    {\n
        v4 = v1;\n
        if (v4 == 52)\n
            return &_ZL16menuExportPrompt.field_0 CONCAT v4 == 52;\n
        if (v4 == 51)\n
        {\n
            v5 = &_ZTV16CompressionEight;\n
            break;\n
        }\n
        else if (v4 == 50)\n
        {\n
            v5 = &_ZTV15CompressionFour;\n
            break;\n
        }\n
        else if (v4 != 49)\n
        {\n
            cgc_fprintf(cgc_stdout, \"Invalid choice\\n
\");\n
            cgc_fwrite(\"1) Uncompressed 32-bit signed\\n
2) Compressed 4-bit\\n
3) Compressed 8-bit\\n
4) Cancel\\n
\", cgc_strlen(\"1) Uncompressed 32-bit signed\\n
2) Compressed 4-bit\\n
3) Compressed 8-bit\\n
4) Cancel\\n
\"), cgc_stdout);\n
            if (cgc_freaduntil(&v1, 100, 10, cgc_stdin) < 0)\n
                return &_ZL16menuExportPrompt.field_0 CONCAT v4 == 52;\n
        }\n
        else\n
        {\n
            v5 = &_ZTV13Compression32;\n
            break;\n
        }\n
    }\n
    v0 = v5 + 16;\n
    v3 = &v0;\n
    Interface::exportAudio(a0, &v0);\n
    Compression::__dtor__();\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4233267:sub_409833": null, "4233280:_ZN9Interface10listTracksEv": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
extern void* cgc_stdout;\n
\n
long long Interface::listTracks(struct_2 *a0)\n
{\n
    struct_1 *v1;  // rbx, Other Possible Types: unsigned long\n
    unsigned long long v2;  // rax\n
\n
    v1 = a0->field_10;\n
    if (!v1)\n
        return v2;\n
    do\n
    {\n
        v2 = cgc_fprintf(cgc_stdout, \"%d) %s samples=%d\\n
\");\n
        v1 = *(v1);\n
    } while (v1);\n
    return v2;\n
}\n
", "4233404:sub_4098bc": null, "4233408:_ZN9Interface11menuEffectsEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern unsigned long long cgc_stdin;\n
extern void* cgc_stdout;\n
\n
long long Interface::menuEffects(unsigned long a0)\n
{\n
    int tmp_23;  // tmp #23\n
    int tmp_24;  // tmp #24\n
    int tmp_21;  // tmp #21\n
    unsigned int v0;  // [bp-0xc0]\n
    int tmp_12;  // tmp #12\n
    int tmp_13;  // tmp #13\n
    int tmp_10;  // tmp #10\n
    unsigned long long v1;  // [bp-0xb8]\n
    unsigned long long v2;  // [bp-0xb0]\n
    char *v3;  // [bp-0xa8]\n
    char v4;  // [bp-0xa0]\n
    unsigned long long v6;  // rax\n
    unsigned long v8;  // rax, Other Possible Types: unsigned long long, char\n
    char v9[2];  // rax\n
    struct_0 *v10;  // rax\n
    struct_0 *v11;  // r15\n
    char v13[2];  // rax\n
    char v14[2];  // rax\n
    char v15[2];  // rax\n
    char v16[2];  // rax\n
    unsigned long v17;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long long v18;  // rax\n
    unsigned long v19;  // rax\n
    unsigned long long v20;  // rax\n
    unsigned long long v21;  // rax\n
    int v24;  // xmm0\n
    struct_2 *v26;  // rbx, Other Possible Types: unsigned long\n
    struct_2 *v27;  // rdi, Other Possible Types: unsigned long\n
    unsigned long v28;  // rsi, Other Possible Types: unsigned long long\n
    int v30;  // xmm0\n
\n
    v1 = a0;\n
    cgc_fwrite(\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\", cgc_strlen(\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\"), cgc_stdout);\n
    v2 = cgc_stdin;\n
    v6 = cgc_freaduntil(&v4, 100, 10, cgc_stdin);\n
    v8 = v6 / 0x8000000000000000;\n
    if (v6 >= 0 && v4 != 53)\n
    {\n
        do\n
        {\n
            v3 = &v4;\n
            cgc_strsep(&v3, \" \");\n
            v9 = cgc_strsep(&v3, \" \");\n
            v17 = \"Missing track\\n
\";\n
            if (!v9)\n
                goto LABEL_409ae0;\n
            v10 = Mixer::getTrack const(v1, cgc_strtol(v9, NULL, 10));\n
            v17 = \"Invalid track\\n
\";\n
            if (!v10)\n
                goto LABEL_409ae0;\n
            v11 = v10;\n
            v17 = \"Invalid choice\\n
\";\n
            switch (v4)\n
            {\n
            case 49:\n
                v13 = cgc_strsep(&v3, \" \");\n
                v17 = \"Missing gain\\n
\";\n
                if (v13)\n
                {\n
                    v17 = \"Invalid gain (-10.00...10.00)\\n
\";\n
                    if (cgc_strtol(v13, NULL, 10) - 1001 >= -2001)\n
                    {\n
                        tmp_23 = DivV(tmp_24, tmp_21);\n
                        v24 = tmp_23 * 0x41dfffffffc00000;\n
                        FxGain::__ctor__(&v0, v24);\n
                        v8 = FxGain::apply const(&v0, v11);\n
                        break;\n
                    }\n
                }\n
            case 50:\n
                v14 = cgc_strsep(&v3, \" \");\n
                v17 = \"Missing pan\\n
\";\n
                if (v14)\n
                {\n
                    v18 = cgc_strtol(v14, NULL, 10);\n
                    v17 = \"Invalid pan (-1.00...1.00)\\n
\";\n
                    if (v18 - 101 >= -201)\n
                    {\n
                        if (v18 == 100)\n
                        {\n
                            v26 = &v0;\n
                            v27 = &v0;\n
                            v28 = 2147483647;\n
                        }\n
                        else\n
                        {\n
                            tmp_12 = DivV(tmp_13, tmp_10);\n
                            v30 = tmp_12 * 0x41dfffffffc00000;\n
                            v28 = v30;\n
                            v26 = &v0;\n
                            v27 = &v0;\n
                        }\n
                        FxPan::__ctor__(v27, v28);\n
                        v8 = FxPan::apply const(v26, v11);\n
                        break;\n
                    }\n
                }\n
            case 51:\n
                v15 = cgc_strsep(&v3, \" \");\n
                v17 = \"Missing delay\\n
\";\n
                if (v15)\n
                {\n
                    v19 = cgc_strtol(v15, NULL, 10);\n
                    v17 = \"Invalid delay (>0)\\n
\";\n
                    if (v19 > 0)\n
                    {\n
                        FxReverb::__ctor__(&v0, v19);\n
                        v8 = FxReverb::apply const(&v0, v11);\n
                        break;\n
                    }\n
                }\n
            case 52:\n
                v16 = cgc_strsep(&v3, \" \");\n
                v17 = \"Missing samples\\n
\";\n
                if (v16)\n
                {\n
                    v20 = cgc_strtol(v16, NULL, 10);\n
                    v17 = \"Invalid samples (>0)\\n
\";\n
                    if (v20 > 0)\n
                    {\n
                        v8 = AudioTrack::setLength(v11, v20 + v11->field_8->field_0);\n
                        *(&v8) = 1;\n
                        return v8;\n
                    }\n
                }\n
            default:\n
LABEL_409ae0:\n
                cgc_fprintf(cgc_stdout, v17);\n
                cgc_fwrite(\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\", cgc_strlen(\"1) Apply gain [track] [hundredths]\\n
2) Apply pan [track] [hundredths]\\n
3) Echo [track] [delay in samples]\\n
4) Add silence [track] [number of samples]\\n
5) Cancel\\n
\"), cgc_stdout);\n
                v21 = cgc_freaduntil(&v4, 100, 10, v2);\n
                v8 = v21 / 0x8000000000000000;\n
                if (v21 < 0)\n
                    goto LABEL_409b30;\n
                continue;\n
            }\n
        } while (v4 != 53);\n
    }\n
LABEL_409b30:\n
    *(&v8) = v8 ^ 1;\n
    return v8;\n
}\n
", "4234221:sub_409bed": null, "4234224:_ZN9Interface11exportAudioERK11Compression": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern void* cgc_stdout;\n
\n
long long Interface::exportAudio(unsigned long a0, struct struct_3 **a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v2;  // r14\n
    struct_4 *v4;  // rbx\n
\n
    v2 = Mixer::exportMix();\n
    v0 = *(a1)->field_18(a1, v2) + 24;\n
    v4 = operator new[](v0);\n
    v4->field_0 = 103857354084;\n
    v4->field_8 = v2->field_8->field_0;\n
    v4->field_c = *(a1)->field_10(a1);\n
    v4->field_10 = 8000;\n
    v4->field_14 = 2 - (v2->field_4 < 1);\n
    *(a1)->field_20(a1, v2, v4 + 1);\n
    cgc_fwrite(&v0, 4, cgc_stdout);\n
    cgc_fwrite(v4, v0, cgc_stdout);\n
    operator delete(v4);\n
    AudioTrack::__base_dtor__(v2);\n
    return operator delete(v2);\n
}\n
", "4234430:sub_409cbe": null, "4234432:_ZN5MixerC2Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned long long field_8;\n
    uint128_t field_10;\n
    unsigned int field_20;\n
} struct_0;\n
\n
long long Mixer::__base_ctor__(struct_0 *a0)\n
{\n
    a0->field_0 = 0;\n
    a0->field_8 = LinkedList::deleteDestructor;\n
    a0->field_10 = 0;\n
    a0->field_20 = 0;\n
    return Random::__base_ctor__(&a0[1].padding_4);\n
}\n
", "4234485:sub_409cf5": null, "4234496:_ZN5MixerD2Ev": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
long long Mixer::__base_dtor__(struct_2 *a0)\n
{\n
    struct_0 *v1;  // rbx, Other Possible Types: unsigned long\n
    struct_0 *v2;  // r15\n
    struct struct_1 **v3;  // rax\n
    unsigned long long v4;  // rax\n
\n
    v1 = a0->field_10;\n
    if (!v1)\n
        return v4;\n
    do\n
    {\n
        v2 = *(v1);\n
        if (a0->field_8)\n
            v3(*((v1 + 16)));\n
        v4 = operator delete(v1);\n
        v1 = v2;\n
    } while (v2);\n
    return v4;\n
}\n
", "4234527:sub_409d1f": null, "4234575:sub_409d4f": null, "4234576:_ZNK5Mixer9getLengthEv": "typedef struct struct_3 {\n
    char padding_0[16];\n
    struct struct_2 *field_10;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long Mixer::getLength const(struct_3 *a0)\n
{\n
    struct_2 *v1;  // rcx, Other Possible Types: unsigned long\n
    void* v2;  // rax, Other Possible Types: unsigned long\n
    struct_2 *v3;  // rsi\n
    unsigned long long v4;  // rcx\n
\n
    v1 = a0->field_10;\n
    v2 = 0;\n
    if (!v1)\n
        return 0;\n
    do\n
    {\n
        v3 = *(v1);\n
        v4 = *(*((*((v1 + 16)) + 8)));\n
        if (v2 < v2)\n
            v2 = v4;\n
        v1 = v3;\n
    } while (v3);\n
    return v2;\n
}\n
", "4234639:sub_409d8f": null, "4234640:_ZN5Mixer8addTrackEP10AudioTrack": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
    struct struct_2 *field_18;\n
    unsigned int field_20;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned long long field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long Mixer::addTrack(struct_1 *a0, unsigned int *a1)\n
{\n
    unsigned int v1;  // eax\n
    struct_3 *v2;  // rax\n
    unsigned long long *v3;  // rcx\n
    struct_0 *v4;  // rdx, Other Possible Types: unsigned long\n
\n
    v1 = a0->field_0;\n
    a0->field_0 = v1 + 1;\n
    *(a1) = v1;\n
    v2 = operator new(24);\n
    v2->field_10 = a1;\n
    v3 = a0->field_18;\n
    if (v3)\n
    {\n
        v2->field_0 = *(v3);\n
        *(v3) = v2;\n
        v4 = v2->field_0;\n
        v2->field_8 = v3;\n
        if (!v4)\n
            goto LABEL_409dda;\n
    }\n
    else\n
    {\n
        v4 = a0->field_10;\n
        v2->field_0 = v4;\n
        a0->field_10 = &v2->field_0;\n
        v2->field_8 = v3;\n
        if (!v4)\n
            goto LABEL_409dda;\n
    }\n
    *((v4 + 8)) = v2;\n
LABEL_409dda:\n
    a0->field_18 = &v2->field_0;\n
    a0->field_20 = a0->field_20 + 1;\n
    return v2;\n
}\n
", "4234753:sub_409e01": null, "4234768:_ZNK5Mixer8getTrackEj": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[8];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long Mixer::getTrack const(struct_2 *a0, unsigned long a1)\n
{\n
    struct_0 *v1;  // rcx, Other Possible Types: unsigned long\n
    unsigned int *v2;  // rax\n
\n
    v1 = a0->field_10;\n
    if (!v1)\n
        return 0;\n
    while (true)\n
    {\n
        v2 = *((v1 + 16));\n
        if (*(v2) == a1)\n
            return *((v1 + 16));\n
        v1 = *(v1);\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4234830:sub_409e4e": null, "4234832:_ZN5Mixer11removeTrackEj": "typedef struct struct_3 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned long long field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
long long Mixer::removeTrack(struct_3 *a0, unsigned long a1)\n
{\n
    struct_0 *v1;  // rax, Other Possible Types: unsigned long\n
    struct_3 *v2;  // r14\n
    struct_0 *v3;  // rdi, Other Possible Types: unsigned long\n
    unsigned int *v4;  // rbx\n
    unsigned long long *v5;  // rdx\n
\n
    v1 = a0->field_10;\n
    if (!v1)\n
        return v1;\n
    v2 = a0;\n
    v3 = v1;\n
    while (true)\n
    {\n
        v4 = *((v3 + 16));\n
        if (*(v4) == a1)\n
            break;\n
        v3 = *(v3);\n
        if (!v3)\n
            return v1;\n
    }\n
    if (v3)\n
        *((v3 + 8)) = *((v3 + 8));\n
    v5 = *((v3 + 8));\n
    if (v5)\n
        *(v5) = v3;\n
    if (v1 == v3)\n
    {\n
        v2->field_10 = *(v3);\n
        if (!(v2->field_18 == v3))\n
            goto LABEL_409ea9;\n
    }\n
    else if (!(v2->field_18 == v3))\n
    {\n
        goto LABEL_409ea9;\n
    }\n
    v2->field_18 = v5;\n
LABEL_409ea9:\n
    operator delete(v3);\n
    v2->field_20 = v2->field_20 - 1;\n
    AudioTrack::__base_dtor__(v4);\n
    v1 = operator delete(v4);\n
    return v1;\n
}\n
", "4234975:sub_409edf": null, "4234976:_ZN5Mixer10splitTrackEj": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_3 *field_18;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char field_4;\n
    char padding_5[11];\n
    unsigned int field_10;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    struct struct_1 *field_0;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    unsigned long long field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
    char padding_5[11];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long Mixer::splitTrack(struct_2 *a0, unsigned long a1)\n
{\n
    struct_1 *v1;  // rax, Other Possible Types: unsigned long\n
    struct_4 *v2;  // rbx\n
    unsigned int *v3;  // r14\n
    unsigned int v4;  // eax\n
    unsigned long long *v5;  // rcx\n
    struct_1 *v6;  // rdx, Other Possible Types: unsigned long\n
    unsigned long v7;  // rax\n
\n
    v1 = a0->field_10;\n
    if (!v1)\n
        return 0;\n
    do\n
    {\n
        v2 = *((v1 + 16));\n
        if (v2->field_0 == a1)\n
        {\n
            if (!v2->field_4)\n
                break;\n
            v2->field_4 = 0;\n
            v3 = operator new(40);\n
            AudioTrack::__ctor__(v3, *(&v2->field_10));\n
            v4 = a0->field_0;\n
            a0->field_0 = v4 + 1;\n
            *(v3) = v4;\n
            v7 = operator new(24);\n
            *((v7 + 16)) = v3;\n
            v5 = a0->field_18;\n
            if (v5)\n
            {\n
                *(v7) = *(v5);\n
                *(v5) = v7;\n
                v6 = *(v7);\n
                *((v7 + 8)) = v5;\n
                if (!v6)\n
                    goto LABEL_409f81;\n
            }\n
            else\n
            {\n
                v6 = a0->field_10;\n
                *(v7) = v6;\n
                a0->field_10 = v7;\n
                *((v7 + 8)) = v5;\n
                if (!v6)\n
                    goto LABEL_409f81;\n
            }\n
            *((v6 + 8)) = v7;\n
LABEL_409f81:\n
            a0->field_18 = v7;\n
            a0->field_20 = a0->field_20 + 1;\n
            *(&v7) = 1;\n
            return v7;\n
        }\n
        v1 = *(v1);\n
    } while (v1);\n
}\n
", "4235185:sub_409fb1": null, "4235200:_ZN5Mixer13combineTracksEjj": "typedef struct struct_3 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    unsigned long long field_18;\n
    unsigned int field_20;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_8;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
} struct_2;\n
\n
long long Mixer::combineTracks(struct_3 *a0, unsigned long a1, unsigned long a2)\n
{\n
    struct_1 *v1;  // rbx, Other Possible Types: unsigned long\n
    struct_3 *v2;  // r14\n
    struct_1 *v3;  // rax, Other Possible Types: unsigned long\n
    struct_0 *v4;  // rdi\n
    struct_0 *v5;  // rsi\n
    unsigned long v6;  // rax\n
    struct_1 *v7;  // rcx\n
    unsigned long long *v8;  // rax\n
\n
    v1 = a0->field_10;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    v3 = v1;\n
    do\n
    {\n
        v4 = *((v3 + 16));\n
        if (v4->field_0 == a1 && !v4->field_4)\n
        {\n
            do\n
            {\n
                v5 = *((v1 + 16));\n
                if (v5->field_0 == a2 && !v5->field_4)\n
                {\n
                    if (AudioTrack::toStereo(v4, v5))\n
                    {\n
                        v7 = *(v1);\n
                        if (v7)\n
                            v7->field_8 = *((v1 + 8));\n
                        v8 = *((v1 + 8));\n
                        if (v8)\n
                            *(v8) = v7;\n
                        if (v2->field_10 == v1)\n
                            v2->field_10 = *(v1);\n
                        if (v2->field_18 == v1)\n
                            v2->field_18 = v8;\n
                        v6 = operator delete(v1);\n
                        v2->field_20 = v2->field_20 - 1;\n
                        *(&v6) = 1;\n
                        return v6;\n
                    }\n
                    break;\n
                }\n
                v1 = *(v1);\n
            } while (v1);\n
        }\n
        v3 = *(v3);\n
    } while (v3);\n
}\n
", "4235267:sub_40a003": null, "4235379:sub_40a073": null, "4235392:_ZN5Mixer9exportMixEv": "typedef struct struct_3 {\n
    char padding_0[16];\n
    struct struct_2 *field_10;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_2 *field_0;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long Mixer::exportMix(struct_3 *a0)\n
{\n
    struct_2 *v1;  // rax, Other Possible Types: unsigned long\n
    unsigned int v2;  // ebx\n
    struct_2 *v3;  // rdx\n
    unsigned int v4;  // eax\n
    void* v5;  // r15\n
    struct_2 *v6;  // rbx, Other Possible Types: unsigned long\n
\n
    v1 = a0->field_10;\n
    v2 = 0;\n
    if (v1)\n
    {\n
        do\n
        {\n
            v3 = *(v1);\n
            v4 = *(*((*((v1 + 16)) + 8)));\n
            if (v2 < v2)\n
                v2 = v4;\n
            v1 = v3;\n
        } while (v3);\n
    }\n
    v5 = operator new(40);\n
    AudioTrack::__base_ctor__(v5, AudioStream::fromSilence(v2), AudioStream::fromSilence(v2));\n
    v6 = a0->field_10;\n
    if (!v6)\n
        return v5;\n
    do\n
    {\n
        AudioTrack::mix(v5, *((v6 + 16)));\n
        v6 = *(v6);\n
    } while (v6);\n
    return v5;\n
}\n
", "4235540:sub_40a114": null, "4235552:_ZN5Mixer18generateWhiteNoiseEj": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long Mixer::generateWhiteNoise(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x40]\n
    struct_0 *v2;  // r12\n
    unsigned int *v3;  // rbx, Other Possible Types: unsigned long\n
    unsigned int *v5;  // r14\n
\n
    v0 = a0 + 40;\n
    Random::addEntropy(v0, 0x4347c000, 0x1000);\n
    v2 = AudioStream::fromSilence(a1);\n
    if (!a1)\n
        return v2;\n
    v3 = 0;\n
    do\n
    {\n
        v5 = v3 + 1;\n
        if (v3 >= v2->field_0)\n
            AudioStream::setLength(v2, v3 + 1);\n
        v2->field_8[v3].field_0 = Random::randomInt32(v0) >> 1;\n
        v3 = v5;\n
    } while (a1 != v3);\n
    return v2;\n
}\n
", "4235622:sub_40a166": null, "4235708:sub_40a1bc": null, "4235712:_ZN10LinkedListIP10AudioTrackE16deleteDestructorES1_": "long long LinkedList::deleteDestructor(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v1;  // [bp-0x8]\n
    unsigned long v3;  // rbx\n
    unsigned long long v4;  // rax\n
\n
    if (a0)\n
    {\n
        *(&v1) = rbp<8>;\n
        v0 = v3;\n
        AudioTrack::__base_dtor__(a0);\n
        v4 = operator delete(a0);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4235753:sub_40a1e9": null, "4235760:_ZN6RandomC2Ev": "long long Random::__base_ctor__(unsigned long long *a0)\n
{\n
    *(a0) = 16045690981402826360;\n
    return 16045690981402826360;\n
}\n
", "4235786:sub_40a20a": null, "4235792:_ZN6Random10addEntropyEPKhj": "long long Random::addEntropy(unsigned long long *a0, struct struct_0 **a1, unsigned long a2)\n
{\n
    int tmp_13;  // tmp #13\n
    int tmp_7;  // tmp #7\n
    int tmp_19;  // tmp #19\n
    int tmp_31;  // tmp #31\n
    int tmp_59;  // tmp #59\n
    unsigned long long v1;  // r15\n
    struct struct_0 **v2;  // rbx\n
    unsigned long long *v3;  // r14\n
    unsigned long v4;  // rax\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // r8\n
    unsigned long v7;  // rsi\n
    int v8;  // xmm2\n
    int v9;  // xmm2\n
    unsigned long v10;  // rdi, Other Possible Types: unsigned long long\n
    int v11;  // xmm1\n
    unsigned long v12;  // rdx\n
    unsigned long v13;  // rsi\n
    unsigned long long v14;  // rsi\n
    unsigned long long v15;  // rbx\n
    unsigned long v16;  // rdi, Other Possible Types: unsigned long long\n
    void* v18;  // rdi, Other Possible Types: unsigned long\n
    char *v19;  // rsi\n
    unsigned long v20;  // rdi\n
    unsigned long v21;  // rsi, Other Possible Types: unsigned long long\n
    unsigned long long v22;  // r9\n
    unsigned long long v23;  // r8\n
    unsigned long v24;  // rcx\n
    unsigned long v25;  // r9, Other Possible Types: unsigned long long\n
    unsigned long long v26;  // rdx\n
    unsigned long long v27;  // rsi\n
    unsigned long long v28;  // rbx\n
    unsigned long long v29;  // rcx\n
    unsigned long long v30;  // rcx\n
\n
    v1 = a2;\n
    v2 = a1;\n
    v3 = a0;\n
    v4 = operator new[](a2 + 3 & -0x4);\n
    if (!a2)\n
        return operator delete(v4);\n
    if (a2 < 8)\n
    {\n
        v12 = 0;\n
    }\n
    else\n
    {\n
        if (a2 < 32)\n
        {\n
            v12 = 0;\n
        }\n
        else\n
        {\n
            v12 = a2 & -32;\n
            v5 = v12 - 32;\n
            v6 = (v5 >> 5) + 1;\n
            if (v5)\n
            {\n
                v10 = v6 & -2;\n
                v7 = 0;\n
                do\n
                {\n
                    v8 = *((16 + v2 + v7)) ^ 113427455640312821154458202477256070485;\n
                    *((v4 + v7)) = *((v2 + v7)) ^ 113427455640312821154458202477256070485;\n
                    *((v4 + v7 + 16)) = v8;\n
                    v9 = *((48 + v2 + v7)) ^ 113427455640312821154458202477256070485;\n
                    *((v4 + v7 + 32)) = *((32 + v2 + v7)) ^ 113427455640312821154458202477256070485;\n
                    *((v4 + v7 + 48)) = v9;\n
                    v7 += 64;\n
                    tmp_13 = v10;\n
                    v10 -= 2;\n
                } while (tmp_13 != 2);\n
                if (!(v6 & 1))\n
                    goto LABEL_40a2f1;\n
            }\n
            else\n
            {\n
                v7 = 0;\n
                if (!(v6 & 1))\n
                    goto LABEL_40a2f1;\n
            }\n
            v11 = *((16 + v2 + v7)) ^ 113427455640312821154458202477256070485;\n
            *((v4 + v7)) = *((v2 + v7)) ^ 113427455640312821154458202477256070485;\n
            *((v4 + v7 + 16)) = v11;\n
LABEL_40a2f1:\n
            if (v12 == v1)\n
                goto LABEL_40a343;\n
            if (!(v1 & 24))\n
                goto LABEL_40a330;\n
        }\n
        v13 = v12;\n
        v12 = v1 & -8;\n
        do\n
        {\n
            *((v4 + v13)) = *((v2 + v13)) ^ 6148914691236517205;\n
            v13 += 8;\n
        } while (v12 != v13);\n
        if (v12 == v1)\n
            goto LABEL_40a343;\n
    }\n
    do\n
    {\n
LABEL_40a330:\n
        *((v4 + v12)) = *(v2 + v12) ^ 85;\n
        v12 += 1;\n
    } while (v1 != v12);\n
LABEL_40a343:\n
    if (v1 >= 2)\n
    {\n
        *(&v12) = *(v4);\n
        v14 = v1 - 1;\n
        v15 = v14 & 3;\n
        v16 = 1;\n
        if (v1 - 2 >= 3)\n
        {\n
            v18 = 0;\n
            do\n
            {\n
                tmp_7 = (v12 >> 1) ^ *((v4 + v18 + 1));\n
                *((v4 + v18 + 1)) = (v12 >> 1) ^ *((v4 + v18 + 1));\n
                tmp_19 = (tmp_7 >> 1) ^ *((v4 + v18 + 2));\n
                *((v4 + v18 + 2)) = (tmp_7 >> 1) ^ *((v4 + v18 + 2));\n
                tmp_31 = (tmp_19 >> 1) ^ *((v4 + v18 + 3));\n
                *((v4 + v18 + 3)) = (tmp_19 >> 1) ^ *((v4 + v18 + 3));\n
                *(&v12) = (tmp_31 >> 1) ^ *((v4 + v18 + 4));\n
                *((v4 + v18 + 4)) = (tmp_31 >> 1) ^ *((v4 + v18 + 4));\n
                v18 += 4;\n
            } while ((v14 & -4) != v18);\n
            v16 = v18 + 1;\n
        }\n
        if (v15)\n
        {\n
            v19 = v4 + v16;\n
            v20 = 0;\n
            do\n
            {\n
                *(&v12) = (v12 >> 1) ^ v19[v20];\n
                v19[v20] = *(&v12);\n
                v20 += 1;\n
            } while (v15 != v20);\n
        }\n
    }\n
    if (!v1)\n
        return operator delete(v4);\n
    v21 = *(v3);\n
    v22 = v1 - 1;\n
    v23 = (v22 >> 2) + 1;\n
    if (v22 < 4)\n
    {\n
        v24 = 0;\n
    }\n
    else\n
    {\n
        v25 = v23 & -2;\n
        v24 = 0;\n
        do\n
        {\n
            v26 = *((v4 + v24)) & 2004318071 ^ v21 / 128 ^ v21;\n
            v27 = v26 * 0x20000 ^ v26;\n
            v28 = *((v4 + v24 + 4)) & 2004318071 ^ v27 ^ v27 / 128;\n
            v21 = v28 * 0x20000 ^ v28;\n
            v24 += 8;\n
            tmp_59 = v25;\n
            v25 -= 2;\n
        } while (tmp_59 != 2);\n
    }\n
    if ((v23 & 1))\n
    {\n
        v29 = *((v4 + v24)) & 2004318071;\n
        v30 = v29 ^ v21 / 128 ^ v21;\n
        v21 = v30 * 0x20000 ^ v30;\n
    }\n
    *(v3) = v21;\n
    return operator delete(v4);\n
}\n
", "4236437:sub_40a495": null, "4236448:_ZN6Random11randomInt32Ev": "long long Random::randomInt32(unsigned long long *a0)\n
{\n
    unsigned long long v1;  // rax\n
    unsigned long v2;  // rcx\n
\n
    v1 = *(a0);\n
    v2 = v1 / 128 ^ v1;\n
    *(a0) = v2 * 0x20000 ^ v2;\n
    return v1 / 64;\n
}\n
", "4236491:sub_40a4cb": null, "4236496:main": "int main()\n
{\n
    Interface::__ctor__();\n
    Interface::run();\n
    Interface::__dtor__();\n
    return 0;\n
}\n
", "4236548:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:_Znam": null, "5242896:cgc_receive": null, "5242904:cgc_allocate": null, "5242912:cgc__terminate": null, "5242920:_ZdlPv": null, "5242928:_Znwm": null, "5242936:cgc_deallocate": null, "5242944:_ZdaPv": null, "5242952:cgc_sin": null, "5242960:cgc_transmit": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}