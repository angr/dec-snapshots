{"14180352:_init": "extern struct_0 *g_11043d0;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_11043d0;\n
    if (g_11043d0)\n
        v1 = g_11043d0();\n
    return v1;\n
}\n
", "14180384:sub_d86020": "extern unsigned long long g_11043f0;\n
\n
long long sub_d86020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_11043f0;\n
    goto *(17843192);\n
}\n
", "14180396:sub_d8602c": null, "14180400:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "14180416:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "14180432:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "14180448:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(17843168);\n
}\n
", "14180464:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "14180501:sub_d86095": null, "14180502:sub_d86096": null, "14180512:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_11043c8;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "14180553:sub_d860c9": null, "14180560:register_tm_clones": "extern unsigned long long g_11043d8;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "14180617:sub_d86109": null, "14180624:__do_global_dtors_aux": "extern char completed.0;\n
extern unsigned long long g_11043e0;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (completed.0)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_11043e0)\n
    {\n
        completed.0 = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "14180677:sub_d86145": null, "14180681:sub_d86149": null, "14180688:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "14180697:sub_d86159": null, "14180704:cgc_isalnum": "extern char type_flags;\n
\n
long long cgc_isalnum(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 7);\n
}\n
", "14180749:sub_d8618d": null, "14180752:cgc_isalpha": "extern char type_flags;\n
\n
long long cgc_isalpha(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 6);\n
}\n
", "14180797:sub_d861bd": null, "14180800:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 0)\n
        v0 = a0 < 128;\n
    return v0 & 1;\n
}\n
", "14180845:sub_d861ed": null, "14180848:cgc_isblank": "extern char type_flags;\n
\n
long long cgc_isblank(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 64);\n
}\n
", "14180893:sub_d8621d": null, "14180896:cgc_iscntrl": "extern char type_flags;\n
\n
long long cgc_iscntrl(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 32);\n
}\n
", "14180941:sub_d8624d": null, "14180944:cgc_isdigit": "extern char type_flags;\n
\n
long long cgc_isdigit(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 1);\n
}\n
", "14180989:sub_d8627d": null, "14180992:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 > 32)\n
        v0 = a0 <= 126;\n
    return v0 & 1;\n
}\n
", "14181034:sub_d862aa": null, "14181040:cgc_islower": "extern char type_flags;\n
\n
long long cgc_islower(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 4);\n
}\n
", "14181085:sub_d862dd": null, "14181088:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 <= 126;\n
    return v0 & 1;\n
}\n
", "14181130:sub_d8630a": null, "14181136:cgc_ispunct": "extern char type_flags;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (cgc_isprint(a0))\n
    {\n
        v0 = !((&type_flags)[a0 & 255] & 15);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "14181219:sub_d86363": null, "14181232:cgc_isspace": "extern char type_flags;\n
\n
long long cgc_isspace(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 8);\n
}\n
", "14181277:sub_d8639d": null, "14181280:cgc_isupper": "extern char type_flags;\n
\n
long long cgc_isupper(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 2);\n
}\n
", "14181325:sub_d863cd": null, "14181328:cgc_isxdigit": "extern char type_flags;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return ((&type_flags)[a0 & 255] & 16);\n
}\n
", "14181373:sub_d863fd": null, "14181376:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & -33;\n
    return v0;\n
}\n
", "14181433:sub_d86439": null, "14181440:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "14181497:sub_d86479": null, "14181504:cgc_transmit_all": "long long cgc_transmit_all(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    void* v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned long long v6;  // rcx\n
\n
    v3 = a0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    if (!a2)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v0 = cgc_transmit(a0, a1, a2, v6);\n
            if (v0)\n
            {\n
                v4 = 3;\n
                return v4;\n
            }\n
            v2 = v1 + v2;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "14181690:sub_d8653a": null, "14181696:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v1))\n
                v0 = *(v2) == *(v1);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v2) - *(v1);\n
}\n
", "14181835:sub_d865cb": null, "14181840:cgc_strcpy": "long long cgc_strcpy(char *a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    int tmp_22;  // tmp #22\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    char *v4;  // rcx\n
\n
    v1 = a1;\n
    v0 = a0;\n
    do\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        tmp_22 = *(v3);\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = *(v3);\n
    } while (tmp_22);\n
    return a0;\n
}\n
", "14181917:sub_d8661d": null, "14181920:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "14181983:sub_d8665f": null, "14181984:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char v2;  // [bp-0x15]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v3 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v3))\n
            v2 = *(v3) != a1;\n
        if (!(v2 & 1))\n
            break;\n
        v3 += 1;\n
    }\n
    if (*(v3))\n
    {\n
        v1 = v3;\n
        return v1;\n
    }\n
    if (a1)\n
        v0 = 0;\n
    else\n
        v0 = v3;\n
    v1 = v0;\n
    return v1;\n
}\n
", "14182137:sub_d866f9": null, "14182144:cgc_printf": "long long cgc_printf(unsigned long long a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    char v0;  // [bp-0xd8]\n
    unsigned long v1;  // [bp-0xd0]\n
    unsigned long v2;  // [bp-0xc8]\n
    unsigned long v3;  // [bp-0xc0]\n
    unsigned long v4;  // [bp-0xb8]\n
    unsigned long v5;  // [bp-0xb0]\n
    int v6;  // [bp-0xa8]\n
    int v7;  // [bp-0x98]\n
    int v8;  // [bp-0x88]\n
    int v9;  // [bp-0x78]\n
    int v10;  // [bp-0x68]\n
    int v11;  // [bp-0x58]\n
    int v12;  // [bp-0x48]\n
    int v13;  // [bp-0x38]\n
    unsigned int v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    unsigned long v16;  // [bp-0x20]\n
    unsigned long v17;  // [bp-0x18]\n
    unsigned long v18;  // [bp+0x8]\n
    char v19;  // al\n
    int v20;  // xmm0\n
    int v21;  // xmm1\n
    int v22;  // xmm2\n
    int v23;  // xmm3\n
    int v24;  // xmm4\n
    int v25;  // xmm5\n
    int v26;  // xmm6\n
    int v27;  // xmm7\n
    unsigned long v28;  // r9\n
\n
    if (v19)\n
    {\n
        v6 = v20;\n
        v7 = v21;\n
        v8 = v22;\n
        v9 = v23;\n
        v10 = v24;\n
        v11 = v25;\n
        v12 = v26;\n
        v13 = v27;\n
    }\n
    v5 = v28;\n
    v4 = a4;\n
    v3 = a3;\n
    v2 = a2;\n
    v1 = a1;\n
    v17 = &v0;\n
    v16 = &v18;\n
    v15 = 48;\n
    v14 = 8;\n
    return cgc_vprintf(a0, &v14);\n
}\n
", "14182295:sub_d86797": null, "14182304:cgc_vprintf": "extern unsigned long long cgc_stdout;\n
\n
long long cgc_vprintf(unsigned long long a0, unsigned long long a1)\n
{\n
    return cgc_vfprintf(cgc_stdout, a0, a1);\n
}\n
", "14182346:sub_d867ca": null, "14182352:cgc_vfprintf": "long long cgc_vfprintf(unsigned int *a0, unsigned long long a1, unsigned long long a2)\n
{\n
    return cgc_vdprintf(*(a0), a1, a2);\n
}\n
", "14182397:sub_d867fd": null, "14182400:cgc_vdprintf": "long long cgc_vdprintf(unsigned long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    unsigned int v0;  // [bp-0x1030]\n
    unsigned int v1;  // [bp-0x102c]\n
    unsigned int v2;  // [bp-0x1028]\n
\n
    v0 = a0;\n
    v1 = 0;\n
    v2 = 0;\n
    cgc_printf_core(cgc_fd_printer, &a0, a1, a2);\n
    return v2;\n
}\n
", "14182493:sub_d8685d": null, "14182496:cgc_printf_core": "long long cgc_printf_core(struct struct_1 **a0, unsigned long a1, char *a2, struct struct_0 **a3)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    unsigned int v1;  // [bp-0x110]\n
    unsigned int v2;  // [bp-0x10c]\n
    unsigned int v3;  // [bp-0x108]\n
    unsigned int v4;  // [bp-0x104]\n
    unsigned long v5;  // [bp-0x100]\n
    unsigned long v6;  // [bp-0xf8]\n
    unsigned long v7;  // [bp-0xf0]\n
    unsigned int v8;  // [bp-0xe4]\n
    unsigned long v9;  // [bp-0xe0]\n
    unsigned long v10;  // [bp-0xd8]\n
    unsigned int v11;  // [bp-0xcc]\n
    char *v12;  // [bp-0xc8]\n
    unsigned int v13;  // [bp-0xc0]\n
    unsigned int v14;  // [bp-0xbc]\n
    char *v15;  // [bp-0xb8], Other Possible Types: unsigned long\n
    struct struct_0 **v16;  // [bp-0xad]\n
    unsigned int v17;  // [bp-0xac]\n
    unsigned int v18;  // [bp-0xa8]\n
    unsigned int v19;  // [bp-0xa4]\n
    unsigned int v20;  // [bp-0xa0]\n
    unsigned int v21;  // [bp-0x9c]\n
    unsigned int v22;  // [bp-0x98]\n
    unsigned int v23;  // [bp-0x94]\n
    char *v24;  // [bp-0x90], Other Possible Types: unsigned long\n
    char v25;  // [bp-0x88]\n
    unsigned int v26;  // [bp-0x60]\n
    unsigned int v27;  // [bp-0x5c]\n
    struct struct_0 **v28;  // [bp-0x58]\n
    unsigned int v29;  // [bp-0x50]\n
    unsigned int v30;  // [bp-0x4c]\n
    unsigned int v31;  // [bp-0x48]\n
    unsigned int v32;  // [bp-0x44]\n
    unsigned int v33;  // [bp-0x40]\n
    char v34;  // [bp-0x39]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned int v36;  // [bp-0x34]\n
    unsigned int v37;  // [bp-0x30], Other Possible Types: char\n
    unsigned int v38;  // [bp-0x2c]\n
    struct struct_0 **v39;  // [bp-0x28]\n
    char *v40;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v41;  // [bp-0x18]\n
    struct struct_1 **v42;  // [bp-0x10]\n
    char *v44;  // rax\n
    char *v45;  // rax\n
    char *v46;  // rax\n
    unsigned int v47;  // eax\n
    char *v48;  // rax\n
    char *v49;  // rax\n
    unsigned int v50;  // eax\n
    char *v51;  // rcx\n
    char *v53;  // rax\n
    char *v54;  // rax\n
    char *v55;  // rax\n
    unsigned int v56;  // eax\n
    unsigned long v57;  // rcx\n
    unsigned long v58;  // rcx\n
    unsigned long v59;  // rcx\n
    char *v60;  // rax\n
    unsigned long v61;  // rcx\n
    unsigned long v62;  // rcx\n
    unsigned long v63;  // rcx\n
    char *v64;  // rcx\n
    char *v65;  // rcx\n
    char *v66;  // rcx\n
    char *v67;  // rcx\n
    char *v68;  // rcx\n
    char *v69;  // rcx\n
    char *v70;  // rcx\n
    char *v71;  // rcx\n
    unsigned long long v73;  // rsi\n
    void* v74;  // rdx\n
    unsigned long v75;  // rdi\n
    unsigned long long v77;  // rsi\n
    void* v78;  // rdx\n
    unsigned long v79;  // rdi\n
    char *v80;  // rcx\n
    char *v81;  // rcx\n
    char *v82;  // rcx\n
    char *v83;  // rcx\n
    char *v84;  // rax\n
\n
    v42 = a0;\n
    v41 = a1;\n
    v40 = a2;\n
    v39 = a3;\n
    v38 = 0;\n
    v36 = 0;\n
    v35 = 0;\n
    v33 = 0;\n
    v28 = v39;\n
    v44 = v40;\n
    v40 = v44 + 1;\n
    v34 = *(v44);\n
    while (v34)\n
    {\n
        v10 = v38;\n
        switch (v10)\n
        {\n
        case 0:\n
            switch (v34)\n
            {\n
            case 37:\n
                v38 = 2;\n
                break;\n
            case 92:\n
                v38 = 1;\n
                break;\n
            default:\n
                v42(v34, v41, 0, 55456 CONCAT v34);\n
            }\n
            goto LABEL_d8861d;\n
        case 1:\n
            v9 = v34 - 34;\n
            switch (v9)\n
            {\n
            case 0: case 5: case 58:\n
                v42(v34, v41, 0, 55458 CONCAT v34);\n
                break;\n
            case 64:\n
                v42(8, v41, 0);\n
                break;\n
            case 68:\n
                v42(12, v41, 0);\n
                break;\n
            case 76:\n
                v42(10, v41, 0);\n
                break;\n
            case 80:\n
                v42(13, v41, 0);\n
                break;\n
            case 82:\n
                v42(9, v41, 0);\n
                break;\n
            case 84:\n
                v42(11, v41, 0);\n
                break;\n
            case 86:\n
                v38 = 4;\n
                v36 = 0;\n
                v35 = 0;\n
                break;\n
            default:\n
                if (v34 > 48 && v34 < 56)\n
                {\n
                    v38 = 3;\n
                    v36 = 1;\n
                    v35 = v34 - 48;\n
                    goto LABEL_d86a67;\n
                }\n
                v51 = v40;\n
                v42(*(v51), v41, 0, v51);\n
LABEL_d86a67:\n
                if (v38 == 1)\n
                    v38 = 0;\n
                goto LABEL_d8861d;\n
            }\n
        case 2:\n
            if (v34 != 37)\n
            {\n
                v38 = 15;\n
                v37 = 0;\n
                v40 += 1;\n
            }\n
            else\n
            {\n
                v42(v34, v41, 0, 55456 CONCAT v34);\n
                v38 = 0;\n
            }\n
            goto LABEL_d8861d;\n
        case 3:\n
            if (v34 > 48 && v34 < 56 && v36 < 3)\n
            {\n
                v36 += 1;\n
                v35 = v35 * 8 + v34 - 48;\n
                if (v36 == 3)\n
                {\n
                    v42(v35, v41, 0, v35);\n
                    v38 = 0;\n
                }\n
                goto LABEL_d86b58;\n
            }\n
            v42(v35, v41, 0, v35);\n
            v38 = 0;\n
            v40 += 1;\n
LABEL_d86b58:\n
            goto LABEL_d8861d;\n
        case 4:\n
            if (cgc_isxdigit(v34) && v36 < 2)\n
            {\n
                v36 += 1;\n
                v8 = v35 * 16;\n
                v35 = v8 + cgc_hex_value_of(v34);\n
                if (v36 == 2)\n
                {\n
                    v42(v35, v41, 0, v35);\n
                    v38 = 0;\n
                }\n
                goto LABEL_d86bf1;\n
            }\n
            v42(v35, v41, 0, v35);\n
            v38 = 0;\n
            v40 += 1;\n
LABEL_d86bf1:\n
            goto LABEL_d8861d;\n
        case 5:\n
            v7 = v34 - 32;\n
            switch (v7)\n
            {\n
            case 0:\n
                v37 |= 8;\n
                break;\n
            case 3:\n
                v37 |= 16;\n
                break;\n
            case 7:\n
                v37 |= 1;\n
                break;\n
            case 11:\n
                v37 |= 4;\n
                break;\n
            case 13:\n
                v37 |= 2;\n
                break;\n
            case 16:\n
                v37 |= 32;\n
                break;\n
            default:\n
                v40 += 1;\n
                if ((v37 & 34) == 34)\n
                    v37 = *(&v37) & -33;\n
                v38 = 6;\n
                break;\n
            }\n
            goto LABEL_d8861d;\n
        case 6:\n
            if (v34 == 42)\n
            {\n
                v45 = v40;\n
                v40 = v45 + 1;\n
                v34 = *(v45);\n
                if (!cgc_isdigit(v34))\n
                {\n
                    v50 = v33;\n
                    v33 = v50 + 1;\n
                    v27 = v50;\n
                    v40 += 1;\n
                }\n
                else\n
                {\n
                    for (v27 = 0; cgc_isdigit(v34); v34 = *(v49))\n
                    {\n
                        v27 = v27 * 10 + v34 - 48;\n
                        v49 = v40;\n
                        v40 = v49 + 1;\n
                    }\n
                    v27 -= 1;\n
                    if ((Not (Not (Load(addr=stack_base-57, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
                }\n
                v32 = v28[v27];\n
            }\n
            else if (!cgc_isdigit(v34))\n
            {\n
                v40 += 1;\n
            }\n
            else\n
            {\n
                for (v32 = 0; cgc_isdigit(v34); v34 = *(v54))\n
                {\n
                    v32 = v32 * 10 + v34 - 48;\n
                    v54 = v40;\n
                    v40 = v54 + 1;\n
                }\n
                v40 += 1;\n
            }\n
            v38 = 7;\n
            goto LABEL_d8861d;\n
        case 7:\n
            if (v34 != 46)\n
            {\n
                v40 += 1;\n
            }\n
            else\n
            {\n
                v46 = v40;\n
                v40 = v46 + 1;\n
                v34 = *(v46);\n
                if (v34 == 42)\n
                {\n
                    v48 = v40;\n
                    v40 = v48 + 1;\n
                    v34 = *(v48);\n
                    if (!cgc_isdigit(v34))\n
                    {\n
                        v56 = v33;\n
                        v33 = v56 + 1;\n
                        v26 = v56;\n
                        v40 += 1;\n
                    }\n
                    else\n
                    {\n
                        for (v26 = 0; cgc_isdigit(v34); v34 = *(v55))\n
                        {\n
                            v26 = v26 * 10 + v34 - 48;\n
                            v55 = v40;\n
                            v40 = v55 + 1;\n
                        }\n
                        v26 -= 1;\n
                        if ((Not (Not (Load(addr=stack_base-57, size=1, endness=Iend_LE) == 0x24<8>)))) { Goto None } else { Goto None }\n
                    }\n
                    v31 = v28[v26];\n
                }\n
                else if (!cgc_isdigit(v34))\n
                {\n
                    v40 += 1;\n
                }\n
                else\n
                {\n
                    for (v31 = 0; cgc_isdigit(v34); v34 = *(v60))\n
                    {\n
                        v31 = v31 * 10 + v34 - 48;\n
                        v60 = v40;\n
                        v40 = v60 + 1;\n
                    }\n
                    v40 += 1;\n
                }\n
            }\n
            v38 = 8;\n
            goto LABEL_d8861d;\n
        case 8:\n
            v6 = v34 - 76;\n
            switch (v6)\n
            {\n
            case 0:\n
                v29 = 8;\n
                break;\n
            case 28:\n
                v29 = 1;\n
                if (*(v40) == 104)\n
                {\n
                    v29 += 1;\n
                    v40 += 1;\n
                }\n
                break;\n
            case 30:\n
                v29 = 5;\n
                break;\n
            case 32:\n
                v29 = 3;\n
                if (*(v40) == 108)\n
                    v40 += 1;\n
                break;\n
            case 40:\n
                v29 = 7;\n
                break;\n
            case 46:\n
                v29 = 6;\n
                break;\n
            default:\n
                v40 += 1;\n
                break;\n
            }\n
            v38 = 9;\n
            goto LABEL_d8861d;\n
        case 9:\n
            v23 = 1;\n
            if (v30 == -1)\n
            {\n
                v47 = v33;\n
                v33 = v47 + 1;\n
                v30 = v47;\n
            }\n
            v5 = v34 - 65;\n
            switch (v5)\n
            {\n
            case 0: case 32:\n
                break;\n
            case 2:\n
                break;\n
            case 4: case 36:\n
                break;\n
            case 5: case 37:\n
                break;\n
            case 6: case 38:\n
                break;\n
            case 18:\n
                break;\n
            case 34:\n
                v57 = v30;\n
                *(&v16) = v28[v57];\n
                if (v32 == -1)\n
                    v32 = 1;\n
                if ((v37 & 2))\n
                {\n
                    *(&v57) = v16;\n
                    v42(v16, v41, 0, v57);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > 1; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    *(&v57) = v16;\n
                    v42(v16, v41, 0, v57);\n
                }\n
                break;\n
            case 35: case 40:\n
                v4 = v29;\n
                if (v4 == 1)\n
                {\n
                    v21 = v28[v30];\n
                    v22 = v21 < 0;\n
                    if (v22)\n
                        v21 = -(v21);\n
                    v24 = cgc_r_utoa(v21, &v25);\n
                    break;\n
                }\n
                else if (v4 == 2)\n
                {\n
                    v21 = v28[v30];\n
                    v22 = v21 < 0;\n
                    if (v22)\n
                        v21 = -(v21);\n
                    v24 = cgc_r_utoa(v21, &v25);\n
                    break;\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-260, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v21 = v28[v30];\n
                    v22 = v21 < 0;\n
                    if (v22)\n
                        v21 = -(v21);\n
                    v24 = cgc_r_utoa(v21, &v25);\n
                    break;\n
                }\n
                v20 = (v24 - &v25) + 1;\n
                if (v32 != -1)\n
                {\n
LABEL_d87337:\n
                    if (v31 != -1)\n
                    {\n
                        if (v31 < v20)\n
                            v31 = v20;\n
                        v37 &= -33;\n
LABEL_d873c0:\n
                        if ((v37 & 2))\n
                        {\n
                            if (v22)\n
                            {\n
                                v42(45, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            else if ((v37 & 4))\n
                            {\n
                                v42(43, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            for (; v31 > v20; v32 -= 1)\n
                            {\n
                                v42(48, v41, 0);\n
                                v31 -= 1;\n
                            }\n
                            for (; v31; v32 -= 1)\n
                            {\n
                                v82 = v24;\n
                                v24 = v82 + 1;\n
                                v42(*(v82), v41, 0, v82);\n
                                v31 -= 1;\n
                            }\n
                            for (; v32; v32 -= 1)\n
                            {\n
                                v42(32, v41, 0);\n
                            }\n
                        }\n
                        else\n
                        {\n
                            for (; v32 > v31 + 1; v32 -= 1)\n
                            {\n
                                v42(32, v41, 0);\n
                            }\n
                            if (v22)\n
                            {\n
                                v42(45, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            else if ((v37 & 4))\n
                            {\n
                                v42(43, v41, 0);\n
                                if (v32 > 0)\n
                                    v32 -= 1;\n
                            }\n
                            if (v32 > v31)\n
                            {\n
                                v42(32, v41, 0);\n
                                v32 -= 1;\n
                            }\n
                            for (; v31 > v20; v31 -= 1)\n
                            {\n
                                v42(48, v41, 0);\n
                            }\n
                            for (; v31; v31 -= 1)\n
                            {\n
                                v83 = v24;\n
                                v24 = v83 + 1;\n
                                v42(*(v83), v41, 0, v83);\n
                            }\n
                        }\n
                        break;\n
                    }\n
                    v31 = v20;\n
                    if (!(v37 & 32))\n
                    {\n
LABEL_d8739a:\n
                        goto LABEL_d873c0;\n
                    }\n
                    if (!(v31 < v32))\n
                        goto LABEL_d8739a;\n
                    if (!v22 && !(v37 & 4))\n
                    {\n
                        v31 = v32;\n
LABEL_d87395:\n
                        goto LABEL_d8739a;\n
                    }\n
                    v31 = v32 - 1;\n
                    goto LABEL_d87395;\n
                }\n
                v32 = v20;\n
                if (!v22 && !(v37 & 4))\n
                    goto LABEL_d87332;\n
                v32 += 1;\n
LABEL_d87332:\n
                goto LABEL_d87337;\n
            case 45:\n
                v59 = v30;\n
                v12 = &v28[v59]->field_0;\n
                v11 = v42(0, v41, 1, v59);\n
                v0 = v29;\n
                if (v0 == 1)\n
                {\n
                    *(&v12) = v11;\n
                }\n
                else if (v0 == 2)\n
                {\n
                    *(v12) = v11;\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-276, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    *(&v12) = v11;\n
                }\n
                break;\n
            case 46:\n
                v3 = v29;\n
                if (v3 == 1)\n
                {\n
                    v24 = cgc_r_otoa(v28[v30], &v25);\n
                }\n
                else if (v3 == 2)\n
                {\n
                    v24 = cgc_r_otoa(v28[v30], &v25);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-264, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v24 = cgc_r_otoa(v28[v30], &v25);\n
                }\n
                if ((v37 & 16) && *(v24) != 48)\n
                {\n
                    v24 += 1;\n
                    *(v24) = 48;\n
                }\n
                v19 = (v24 - &v25) + 1;\n
                if (v32 == -1)\n
                    v32 = v19;\n
                if (v31 != -1)\n
                {\n
                    if (v31 < v19)\n
                        v31 = v19;\n
                    v37 = *(&v37) & -33;\n
                }\n
                else\n
                {\n
                    v31 = v19;\n
                    if ((v37 & 32) && v31 < v32)\n
                        v31 = v32;\n
                }\n
                if ((v37 & 2))\n
                {\n
                    for (; v31 > v19; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v70 = v24;\n
                        v24 = v70 + 1;\n
                        v42(*(v70), v41, 0, v70);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    for (; v31 > v19; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v71 = v24;\n
                        v24 = v71 + 1;\n
                        v42(*(v71), v41, 0, v71);\n
                    }\n
                }\n
                break;\n
            case 47:\n
                v37 |= 16;\n
                v58 = v30;\n
                v24 = cgc_r_xtoa(v28[v58], &v25, 0, v58);\n
                v13 = (v24 - &v25) + 1;\n
                if (v31 == -1)\n
                {\n
                    v31 = v13;\n
                }\n
                else\n
                {\n
                    if (v31 < v13)\n
                        v31 = v13;\n
                    v37 &= -33;\n
                }\n
                if (v32 == -1)\n
                    v32 = v31 + 2;\n
                if ((v37 & 2))\n
                {\n
                    v42(48, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    v42(120, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    for (; v31 > v13; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v68 = v24;\n
                        v24 = v68 + 1;\n
                        v42(*(v68), v41, 0, v68);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31 + 2; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    v42(48, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    v42(120, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    for (; v31 > v13; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v69 = v24;\n
                        v24 = v69 + 1;\n
                        v42(*(v69), v41, 0, v69);\n
                    }\n
                }\n
                break;\n
            case 50:\n
                v15 = &v28[v30]->field_0;\n
                v14 = cgc_strlen(v15);\n
                if (v32 == -1)\n
                    v32 = v14;\n
                if (v31 != -1 && v31 <= v14)\n
                    goto LABEL_d88192;\n
                v31 = v14;\n
LABEL_d88192:\n
                if ((v37 & 2))\n
                {\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v64 = v15;\n
                        v15 = v64 + 1;\n
                        v42(*(v64), v41, 0, v64);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v65 = v15;\n
                        v15 = v65 + 1;\n
                        v42(*(v65), v41, 0, v65);\n
                    }\n
                }\n
                break;\n
            case 52:\n
                v2 = v29;\n
                if (v2 == 1)\n
                {\n
                    v24 = cgc_r_utoa(v28[v30], &v25);\n
                }\n
                else if (v2 == 2)\n
                {\n
                    v24 = cgc_r_utoa(v28[v30], &v25);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-268, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v24 = cgc_r_utoa(v28[v30], &v25);\n
                }\n
                v18 = (v24 - &v25) + 1;\n
                if (v32 == -1)\n
                    v32 = v18;\n
                if (v31 != -1)\n
                {\n
                    if (v31 < v18)\n
                        v31 = v18;\n
                    v37 &= -33;\n
                }\n
                else\n
                {\n
                    v31 = v18;\n
                    if ((v37 & 32) && v31 < v32)\n
                        v31 = v32;\n
                }\n
                if ((v37 & 2))\n
                {\n
                    for (; v31 > v18; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v66 = v24;\n
                        v24 = v66 + 1;\n
                        v42(*(v66), v41, 0, v66);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                }\n
                else\n
                {\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    for (; v31 > v18; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v67 = v24;\n
                        v24 = v67 + 1;\n
                        v42(*(v67), v41, 0, v67);\n
                    }\n
                }\n
                break;\n
            case 55:\n
                v23 = 0;\n
            case 23:\n
                v1 = v29;\n
                if (v1 == 1)\n
                {\n
                    v61 = v30;\n
                    v24 = cgc_r_xtoa(v28[v61], &v25, v23, v61);\n
                }\n
                else if (v1 == 2)\n
                {\n
                    v62 = v30;\n
                    v24 = cgc_r_xtoa(v28[v62], &v25, v23, v62);\n
                }\n
                else\n
                {\n
                    if ((Not (Not (Load(addr=stack_base-272, size=4, endness=Iend_LE) == 0x3<32>)))) { Goto None } else { Goto None }\n
                    v63 = v30;\n
                    v24 = cgc_r_xtoa(v28[v63], &v25, v23, v63);\n
                }\n
                v17 = (v24 - &v25) + 1;\n
                if (v32 == -1)\n
                    v32 = v17;\n
                if (v31 == -1)\n
                {\n
                    v31 = v17;\n
                    if ((v37 & 32) && v31 < v32)\n
                        v31 = v32;\n
                }\n
                else\n
                {\n
                    if (v31 < v17)\n
                        v31 = v17;\n
                    v37 &= -33;\n
                }\n
                if ((v37 & 2))\n
                {\n
                    if ((v37 & 16))\n
                    {\n
                        if (v17 == 1 && *(v24) == 48)\n
                            goto LABEL_d87e06;\n
                        v42(48, v41, 0);\n
                        if (v32 > 0)\n
                            v32 -= 1;\n
                        v73 = v41;\n
                        v74 = 0;\n
                        v75 = (v23 ? 120 : 88);\n
                        v42();\n
                        if (v32 > 0)\n
                            v32 -= 1;\n
                    }\n
LABEL_d87e06:\n
                    for (; v31 > v17; v32 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                        v31 -= 1;\n
                    }\n
                    for (; v31; v32 -= 1)\n
                    {\n
                        v80 = v24;\n
                        v24 = v80 + 1;\n
                        v42(*(v80), v41, 0, v80);\n
                        v31 -= 1;\n
                    }\n
                    for (; v32; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
                    goto LABEL_d8804a;\n
                }\n
                for (; v32 > v31 + 2; v32 -= 1)\n
                {\n
                    v42(32, v41, 0);\n
                }\n
                if (!(v37 & 16))\n
                {\n
LABEL_d87f9a:\n
                    for (; v32 > v31; v32 -= 1)\n
                    {\n
                        v42(32, v41, 0);\n
                    }\n
LABEL_d87fcf:\n
                    for (; v31 > v17; v31 -= 1)\n
                    {\n
                        v42(48, v41, 0);\n
                    }\n
                    for (; v31; v31 -= 1)\n
                    {\n
                        v81 = v24;\n
                        v24 = v81 + 1;\n
                        v42(*(v81), v41, 0, v81);\n
                    }\n
LABEL_d8804a:\n
                    break;\n
                }\n
                else\n
                {\n
                    if (v17 == 1 && *(v24) == 48)\n
                        goto LABEL_d87f9a;\n
                    v42(48, v41, 0);\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    v77 = v41;\n
                    v78 = 0;\n
                    v79 = (v23 ? 120 : 88);\n
                    v42();\n
                    if (v32 > 0)\n
                        v32 -= 1;\n
                    goto LABEL_d87fcf;\n
                }\n
            default:\n
                break;\n
            }\n
            v38 = 0;\n
            goto LABEL_d8861d;\n
        case 15:\n
            v32 = -1;\n
            v31 = -1;\n
            v37 = 0;\n
            v29 = 0;\n
            v30 = -1;\n
            if (v34 == 48)\n
            {\n
                v40 += 1;\n
                v38 = 5;\n
                goto LABEL_d8861d;\n
            }\n
            else\n
            {\n
                if (!cgc_isdigit(v34))\n
                {\n
                    v40 += 1;\n
                    v38 = 5;\n
                }\n
                else\n
                {\n
                    for (v32 = 0; cgc_isdigit(v34); v34 = *(v53))\n
                    {\n
                        v32 = v32 * 10 + v34 - 48;\n
                        v53 = v40;\n
                        v40 = v53 + 1;\n
                    }\n
                    if (v34 == 36)\n
                    {\n
                        v30 = v32 - 1;\n
                        v32 = 0;\n
                        v38 = 5;\n
                    }\n
                    else\n
                    {\n
                        v40 += 1;\n
                        v38 = 7;\n
                    }\n
                }\n
                goto LABEL_d8861d;\n
            }\n
        default:\n
LABEL_d8861d:\n
            v84 = v40;\n
            v40 = v84 + 1;\n
            v34 = *(v84);\n
            continue;\n
        }\n
    }\n
    return v42(0, v41, 2);\n
}\n
", "14190165:sub_d88655": null, "14190176:cgc_fd_printer": "long long cgc_fd_printer(unsigned long long a0, unsigned int a1[3], unsigned long a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[3];  // [bp-0x28]\n
    unsigned int v2[3];  // [bp-0x18]\n
    char v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[3];  // rsi\n
    unsigned long long v7;  // rcx\n
\n
    *(&v2[0]) = a1;\n
    *(&v1[0]) = v2;\n
    if (!a2)\n
    {\n
        v6 = v1;\n
        v7 = v6[2];\n
        v6[2] = v7 + 1;\n
        *(12 + &v1[0] + (v7 & 4095)) = a0;\n
        if (!(v1[2] & 4095) && cgc_transmit_all(v1[0], &v3, 0x1000))\n
            cgc__terminate(a0);\n
    }\n
    else if (a2 == 1)\n
    {\n
        v4 = v1[2];\n
        return v4;\n
    }\n
    else if (a2 == 2)\n
    {\n
        v0 = v1[2] & 4095;\n
        if (v0 && cgc_transmit_all(v1[0], v1 + 1, v0))\n
            cgc__terminate(a0);\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "14190462:sub_d8877e": null, "14190464:cgc_fgetc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned long long field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
long long cgc_fgetc(struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned long long v3;  // rcx\n
    unsigned long long v4;  // rsi\n
    unsigned long long v5;  // rdx\n
    unsigned long long v6;  // rcx\n
    struct_0 *v8;  // rax\n
    struct_0 *v9;  // rax\n
    unsigned long long v10;  // rcx\n
\n
    v0 = a0;\n
    if (v0->field_10 < a0->field_8)\n
    {\n
        v3 = a0->field_10;\n
        a0->field_10 = v3 + 1;\n
        v1 = a0[1].padding_0[v3];\n
        return v1;\n
    }\n
    a0->field_8 = 0;\n
    a0->field_10 = 0;\n
    if (cgc_receive(a0, v4, v5, v6))\n
    {\n
        v8 = a0;\n
        v8->field_4 = v8->field_4 | 2;\n
        v1 = -1;\n
        return v1;\n
    }\n
    else if (a0->field_8)\n
    {\n
        v10 = a0->field_10;\n
        a0->field_10 = v10 + 1;\n
        v1 = a0[1].padding_0[v10];\n
        return v1;\n
    }\n
    else\n
    {\n
        v9 = a0;\n
        v9->field_4 = v9->field_4 | 4;\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "14190704:cgc_getc": "long long cgc_getc(void* a0)\n
{\n
    return cgc_fgetc(a0);\n
}\n
", "14190731:sub_d8888b": null, "14190736:cgc_getchar": "extern void* cgc_stdin;\n
\n
long long cgc_getchar()\n
{\n
    return cgc_getc(cgc_stdin);\n
}\n
", "14190754:sub_d888a2": null, "14190768:cgc_fgets": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
long long cgc_fgets(unsigned long a0, unsigned long a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rcx\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a1 - 1)\n
        {\n
LABEL_d88958:\n
            *((a0 + v1)) = 0;\n
            v2 = a0;\n
            return v2;\n
        }\n
        v0 = cgc_fgetc(a2);\n
        if (v0 == -1)\n
        {\n
            if ((a2->field_4 & 4) && !(v1 <= 0))\n
                goto LABEL_d88958;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        v4[a0] = v0;\n
        if (v0 == 10)\n
            goto LABEL_d88958;\n
    }\n
}\n
", "14190966:sub_d88976": null, "14190976:cgc_fread": "long long cgc_fread(unsigned long a0, unsigned long a1, unsigned long a2, unsigned long a3)\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    char *v1;  // [bp-0x48], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x40], Other Possible Types: unsigned long\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned long\n
    void* v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // rcx\n
\n
    v4 = a3;\n
    v1 = 0;\n
    for (v3 = 0; v3 < a2; v3 += 1)\n
    {\n
        for (v2 = 0; v2 < a1; v2 += 1)\n
        {\n
            v0 = cgc_fgetc(v4);\n
            if (v0 == -1)\n
            {\n
                v5 = v3;\n
                return v5;\n
            }\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v7[a0] = v0;\n
        }\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "14191168:cgc_hex_value_of": "long long cgc_hex_value_of(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_isdigit(a0))\n
    {\n
        v0 = a0 - 48;\n
        return v0;\n
    }\n
    else if (cgc_isalpha(a0))\n
    {\n
        v0 = cgc_toupper(a0) - 65 + 10;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
}\n
", "14191277:sub_d88aad": null, "14191280:cgc_r_utoa": "long long cgc_r_utoa(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned int v2;  // [bp-0xc]\n
    char *v4;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (*(v1) = 48; v2; v2 = (0 CONCAT v2) /m 10)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = ((0 CONCAT v2) /m 10 >> 32) + 48;\n
    }\n
    if (v1 == a1)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "14191415:sub_d88b37": null, "14191424:cgc_r_otoa": "long long cgc_r_otoa(unsigned long a0, unsigned long long a1)\n
{\n
    return cgc_r_llotoa(a0, a1);\n
}\n
", "14191459:sub_d88b63": null, "14191472:cgc_r_xtoa": "long long cgc_r_xtoa(unsigned long a0, unsigned long long a1, unsigned long a2)\n
{\n
    return cgc_r_llxtoa(a0, a1, a2);\n
}\n
", "14191513:sub_d88b99": null, "14191520:cgc_r_llotoa": "long long cgc_r_llotoa(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x10], Other Possible Types: unsigned long long\n
    char *v4;  // rax\n
\n
    v2 = a0;\n
    v1 = a1;\n
    for (*(v1) = 48; v2; v2 >>= 3)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = (v2 & 7) + 48;\n
    }\n
    if (v1 == a1)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 1;\n
    return v0;\n
}\n
", "14191651:sub_d88c23": null, "14191664:cgc_r_llxtoa": "long long cgc_r_llxtoa(unsigned long a0, char *a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x29]\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long v4;  // [bp-0x10], Other Possible Types: unsigned long long\n
    char *v6;  // rax\n
\n
    v4 = a0;\n
    v3 = a1;\n
    for (*(v3) = 48; v4; v4 >>= 4)\n
    {\n
        v2 = v4 & 15;\n
        if (v2 < 10)\n
        {\n
            v2 += 48;\n
        }\n
        else\n
        {\n
            if (!a2)\n
                v1 = v2 - -87;\n
            else\n
                v1 = v2 - -55;\n
            v2 = v1;\n
        }\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        *(v6) = v2;\n
    }\n
    if (v3 == a1)\n
    {\n
        v0 = v3;\n
        return v0;\n
    }\n
    v0 = v3 - 1;\n
    return v0;\n
}\n
", "14191873:sub_d88d01": null, "14191888:cgc_clearBoard": "extern char gallows;\n
extern unsigned int indexes;\n
\n
long long cgc_clearBoard()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    for (v0 = 0; v0 < 7; v0 += 1)\n
    {\n
        *((17855904 + (&indexes)[v0])) = 32;\n
    }\n
    return v0 + 1;\n
}\n
", "14191951:sub_d88d4f": null, "14191952:cgc_reset": "extern char avail;\n
extern unsigned int bad_guesses;\n
extern char used;\n
\n
long long cgc_reset()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long v2;  // rax, Other Possible Types: unsigned long long\n
\n
    v2 = cgc_clearBoard();\n
    for (v0 = 0; v0 < 26; v0 = v2)\n
    {\n
        (&avail)[v0] = v0 + 97;\n
        (&used)[v0] = 0;\n
        v2 = v0 + 1;\n
    }\n
    bad_guesses = 0;\n
    return v2;\n
}\n
", "14192049:sub_d88db1": null, "14192064:cgc_addPart": "extern char gallows;\n
extern char indexes;\n
extern char parts;\n
\n
long long cgc_addPart(unsigned long a0)\n
{\n
    *((17855904 + *(&(&indexes)[4 * a0]))) = *((17855996 + a0));\n
    return \"   ---\\n
   | |\\n
     |\\n
     |\\n
     |\\n
     |\\n
 -----\\n
 |   |\\n
\";\n
}\n
", "14192112:cgc_printBoard": "extern unsigned int gallows;\n
\n
char cgc_printBoard(unsigned long a0, unsigned long a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    return cgc_printf(\"\\n
%s\\n
\", \"   ---\\n
   | |\\n
     |\\n
     |\\n
     |\\n
     |\\n
 -----\\n
 |   |\\n
\", a2, a3, a4);\n
}\n
", "14192139:sub_d88e0b": null, "14192144:cgc_getWord": "extern unsigned int cgc_stdin;\n
extern char *cgc_words;\n
extern char current;\n
extern unsigned long long secret;\n
extern char word;\n
\n
long long cgc_getWord(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc], Other Possible Types: char\n
\n
    cgc_printf(\"Choose your word seed. Please send 4 bytes\\n
\", a1, a2, a3, a4);\n
    if (cgc_fread(&v2, 4, 1, *(&cgc_stdin)) != 1)\n
        cgc__terminate(\"Choose your word seed. Please send 4 bytes\\n
\");\n
    v1 = (0 CONCAT *(&v2)) /m 4093 >> 32;\n
    v2 = *((secret + v1));\n
    cgc_strcpy(&word, (&cgc_words)[(0 CONCAT v2) /m 415833 >> 32]);\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(&word))\n
            break;\n
        (&current)[v2] = 95;\n
        v2 += 1;\n
    }\n
    (&current)[v2] = 0;\n
    return &current;\n
}\n
", "14192380:sub_d88efc": null, "14192384:cgc_getHighScore": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern void cgc_stdin;\n
\n
long long cgc_getHighScore(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x39]\n
    char v1;  // [bp-0x38]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long v4;  // rcx\n
\n
    cgc_printf(\"Congratulations blondie, add yourself to the high score list\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"What is your name? \", a1, a2, a3, a4);\n
    if (!cgc_fgets(&v1, 80, *(&cgc_stdin)))\n
        cgc__terminate(\"What is your name? \");\n
    v2 = &v1;\n
    while (true)\n
    {\n
        v4 = *(v2);\n
        v0 = 0;\n
        if (v4)\n
            v0 = v2->field_0 != 10;\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    *(v2) = 0;\n
    cgc_printf(\"New member of the HOF: \", 80, *(&cgc_stdin), v4, a4);\n
    cgc_printf(&v1, 80, *(&cgc_stdin), v4, a4);\n
    return cgc_printf(\"\\n
\", 80, *(&cgc_stdin), *(v2), a4);\n
}\n
", "14192591:sub_d88fcf": null, "14192592:cgc_isValid": "extern char avail;\n
\n
long long cgc_isValid(unsigned long a0)\n
{\n
    char v0[2];  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (!v0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (*(&v0) = cgc_strchr(&avail, a0); *(v0); v0 += 1)\n
    {\n
        *(v0) = *((v0 + 1));\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "14192713:sub_d89049": null, "14192720:cgc_makeGuess": "extern unsigned int bad_guesses;\n
extern char current;\n
extern char word;\n
\n
long long cgc_makeGuess(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned long v7;  // rcx\n
    unsigned long v8;  // rcx\n
    unsigned long v9;  // rdi\n
\n
    v4 = a0;\n
    v2 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (v1 >= cgc_strlen(&word))\n
            break;\n
        if ((&word)[v3] == v4)\n
        {\n
            (&current)[v3] = v4;\n
            v2 = 1;\n
        }\n
        v3 += 1;\n
    }\n
    if (!v2)\n
    {\n
        if (bad_guesses < 7)\n
        {\n
            v9 = bad_guesses;\n
            bad_guesses = bad_guesses + 1;\n
            cgc_addPart(v9);\n
            if (bad_guesses == 7)\n
            {\n
                cgc_printBoard(v9, a1, a2, a3, a4);\n
                cgc_printf(\"\\n
Blondie, you missed, Tuco has been hanged.\\n
\", a1, a2, a3, a4);\n
                cgc_printf(\"The correct word is: \", a1, a2, a3, a4);\n
                cgc_printf(&word, a1, a2, a3, a4);\n
                cgc_printf(\".\\n
\", a1, a2, a3, a4);\n
                v5 = 1;\n
                return v5;\n
            }\n
            cgc_printf(\"\\n
Haha, Tuco is feeling that rope a little more!\\n
\", a1, a2, a3, a4);\n
        }\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        v7 = cgc_strlen(&word);\n
        if (v0 >= v7)\n
        {\n
            cgc_printf(\"\\n
Nice shot Blondie, you freed Tuco.\\n
\", a1, a2, v7, a4);\n
            cgc_printf(\"The correct word is: %s.\\n
\", &word, a2, v7, a4);\n
            cgc_getHighScore(\"The correct word is: %s.\\n
\", 21183152, a2, v7, a4);\n
            v5 = 1;\n
            return v5;\n
        }\n
        v8 = v3;\n
        if ((&current)[v8] == 95)\n
        {\n
            cgc_printf(\"\\n
Miraculously, you have manage to prolong Tuco's life.\\n
\", a1, a2, v8, a4);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "14193189:sub_d89225": null, "14193200:cgc_askYN": "long long cgc_askYN(unsigned long long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x11]\n
\n
    cgc_printf(a0, a1, a2, a3, a4);\n
    cgc_printf(\" (y/n)? \", a1, a2, a3, a4);\n
    v0 = cgc_getchar();\n
    if (cgc_getchar() != 10)\n
    {\n
        cgc__terminate(\" (y/n)? \");\n
        return cgc_tolower(v0) == 121;\n
    }\n
    return cgc_tolower(v0) == 121;\n
}\n
", "14193292:sub_d8928c": null, "14193296:cgc_doTurn": "extern unsigned long long avail;\n
extern unsigned long long current;\n
extern char used;\n
\n
long long cgc_doTurn(unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    char v3;  // [bp-0x8]\n
    unsigned long long v5;  // rbp\n
    unsigned long v6;  // rax\n
    char v7;  // dl\n
\n
    v5 = &v3;\n
    cgc_printBoard(a0, a1, a2, a3, a4);\n
    cgc_printf(\"used:      \\\"\", a1, a2, a3, a4);\n
    cgc_printf(&used, a1, a2, a3, a4);\n
    cgc_printf(\"\\\"\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"available: \\\"\", a1, a2, a3, a4);\n
    cgc_printf(&avail, a1, a2, a3, a4);\n
    cgc_printf(\"\\\"\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"\\n
current: \", a1, a2, a3, a4);\n
    cgc_printf(&current, a1, a2, a3, a4);\n
    cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"\\n
Your guess: \", a1, a2, a3, a4);\n
    v1 = cgc_getchar();\n
    if (cgc_getchar() == 10)\n
    {\n
        v1 = cgc_tolower(v1);\n
        if (cgc_isValid(v1))\n
        {\n
            v0 = v1;\n
            v6 = cgc_strlen(&used);\n
            v7 = v0;\n
            (&used)[v6] = v0;\n
            v2 = cgc_makeGuess(v1, a1, rdx<4>, v6, a4);\n
            return v2;\n
        }\n
    }\n
    cgc_printf(\"Invalid guess, game over.\\n
\", a1, a2, a3, a4);\n
    v2 = 1;\n
    return v2;\n
}\n
", "14193587:sub_d893b3": null, "14193600:cgc_playGame": "long long cgc_playGame(unsigned int a0, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4)\n
{\n
    unsigned long long v1;  // rax\n
\n
    cgc_reset();\n
    cgc_getWord(a0, a1, a2, a3, a4);\n
    do\n
    {\n
        v1 = cgc_doTurn(a0, a1, a2, a3, a4);\n
    } while (!v1);\n
    return v1;\n
}\n
", "14193635:sub_d893e3": null, "14193648:main": "extern void cgc_stdin;\n
extern char inbuf;\n
\n
int main(unsigned long a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0x21]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v4 = 0;\n
    v3 = a0;\n
    *(&v2) = a1;\n
    cgc_printf(\"Password: \", a1, a2, a3, a4);\n
    if (!cgc_fgets(&inbuf, 255, *(&cgc_stdin)))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = &inbuf;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = *(v1) != 10;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    *(v1) = 0;\n
    if (cgc_strcmp(&inbuf, \"HANGEMHIGH!\"))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    cgc_printf(\"Welcome to Hangman Blondie!\\n
\", \"HANGEMHIGH!\", *(&cgc_stdin), a3, a4);\n
    do\n
    {\n
        cgc_playGame(a0, \"HANGEMHIGH!\", *(&cgc_stdin), a3, a4);\n
    } while (cgc_askYN(\"Play again\", 14198127, *(&cgc_stdin), a3, a4));\n
    v4 = 0;\n
    return v4;\n
}\n
", "14193927:sub_d89507": null, "14193928:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "22020096:__libc_start_main": null, "22020104:cgc__terminate": null, "22020112:cgc_transmit": null, "22020120:cgc_receive": null, "23072848:UnresolvableJumpTarget": null, "23072856:UnresolvableCallTarget": null}