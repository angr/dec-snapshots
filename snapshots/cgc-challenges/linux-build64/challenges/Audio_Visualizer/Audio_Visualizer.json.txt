{"4202496:_init": "extern struct_0 *g_407230;\n
\n
long long _init()\n
{\n
    struct struct_0 **v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = g_407230;\n
    if (g_407230)\n
        v1 = g_407230();\n
    return v1;\n
}\n
", "4202528:sub_402020": "extern unsigned long long g_407250;\n
\n
long long sub_402020()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
\n
    v0 = g_407250;\n
    goto *(4223576);\n
}\n
", "4202540:sub_40202c": null, "4202544:cgc_log2": "// attributes: PLT stub\n
int cgc_log2()\n
{\n
    ::libc.so.0::cgc_log2();\n
    return;\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:cgc_atan2": "// attributes: PLT stub\n
int cgc_atan2()\n
{\n
    ::libc.so.0::cgc_atan2();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_cos": "// attributes: PLT stub\n
int cgc_cos()\n
{\n
    ::libc.so.0::cgc_cos();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_log": "// attributes: PLT stub\n
int cgc_log()\n
{\n
    ::libc.so.0::cgc_log();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202688:cgc_sqrt": "// attributes: PLT stub\n
int cgc_sqrt()\n
{\n
    ::libc.so.0::cgc_sqrt();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:__cxa_finalize": "// attributes: PLT stub\n
char * __cxa_finalize()\n
{\n
    goto *(4223552);\n
}\n
", "4202736:_start": "long long _start()\n
{\n
    char v0;  // [bp+0x0], Other Possible Types: unsigned long\n
    unsigned long v1;  // [bp+0x8]\n
    unsigned long long v2;  // rsi\n
    unsigned long v3;  // rax\n
    unsigned long long v4;  // rdx\n
\n
    v2 = *(&v0);\n
    v0 = v3;\n
    __libc_start_main(main, v2, &v1, 0, 0, v4); /* do not return */\n
}\n
", "4202773:sub_402115": null, "4202774:sub_402116": null, "4202784:deregister_tm_clones": "extern char __bss_start;\n
extern unsigned long long g_407228;\n
\n
long long deregister_tm_clones()\n
{\n
    return &__bss_start;\n
}\n
", "4202825:sub_402149": null, "4202832:register_tm_clones": "extern unsigned long long g_407238;\n
\n
long long register_tm_clones()\n
{\n
    return 0;\n
}\n
", "4202889:sub_402189": null, "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned long long g_407240;\n
\n
long long __do_global_dtors_aux()\n
{\n
    unsigned long v0;  // [bp-0x8]\n
    unsigned long v2;  // rax\n
\n
    if (__bss_start)\n
        return v2;\n
    *(&v0) = rbp<8>;\n
    if (!g_407240)\n
    {\n
        __bss_start = 1;\n
        return deregister_tm_clones();\n
    }\n
    __cxa_finalize();\n
}\n
", "4202949:sub_4021c5": null, "4202953:sub_4021c9": null, "4202960:frame_dummy": "long long frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:sub_4021d9": null, "4202976:cgc_calloc": "long long cgc_calloc(unsigned long a0, unsigned long a1)\n
{\n
    unsigned long long v0;  // [bp-0x30]\n
    unsigned long long v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (a0 && a1)\n
    {\n
        v1 = a1 * a0;\n
        if ((0 CONCAT v1) /m a1 != a0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = cgc_malloc(v1);\n
        if (!v0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = cgc_memset(v0, 0, v1);\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203141:sub_402285": null, "4203152:cgc_isalnum": "long long cgc_isalnum(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_isalpha(a0))\n
    {\n
        v0 = cgc_isdigit(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203218:sub_4022d2": null, "4203232:cgc_isalpha": "long long cgc_isalpha(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = cgc_isupper(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203298:sub_402322": null, "4203312:cgc_isdigit": "long long cgc_isdigit(unsigned long a0)\n
{\n
    return a0 - 48 < 10;\n
}\n
", "4203338:sub_40234a": null, "4203344:cgc_islower": "long long cgc_islower(unsigned long a0)\n
{\n
    return a0 - 97 < 26;\n
}\n
", "4203370:sub_40236a": null, "4203376:cgc_isupper": "long long cgc_isupper(unsigned long a0)\n
{\n
    return a0 - 65 < 26;\n
}\n
", "4203402:sub_40238a": null, "4203408:cgc_isascii": "long long cgc_isascii(unsigned long a0)\n
{\n
    return ((a0 & -128) ^ 255) & 1;\n
}\n
", "4203436:sub_4023ac": null, "4203440:cgc_isblank": "long long cgc_isblank(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 32)\n
        v0 = a0 == 9;\n
    return v0 & 1;\n
}\n
", "4203482:sub_4023da": null, "4203488:cgc_iscntrl": "long long cgc_iscntrl(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 1;\n
    if (a0 != 127)\n
        v0 = a0 < 32;\n
    return v0 & 1;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_isgraph": "long long cgc_isgraph(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 != 32)\n
    {\n
        v0 = cgc_isprint(a0);\n
        return v0 & 1;\n
    }\n
    return v0 & 1;\n
}\n
", "4203593:sub_402449": null, "4203600:cgc_isprint": "long long cgc_isprint(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    v0 = 0;\n
    if (a0 >= 32)\n
        v0 = a0 != 127;\n
    return v0 & 1;\n
}\n
", "4203642:sub_40247a": null, "4203648:cgc_ispunct": "extern char _punct;\n
\n
long long cgc_ispunct(unsigned long a0)\n
{\n
    return (&_punct)[a0];\n
}\n
", "4203672:sub_402498": null, "4203680:cgc_isspace": "long long cgc_isspace(unsigned long a0)\n
{\n
    char v0;  // [bp-0xd]\n
\n
    if (a0 > 8)\n
    {\n
        v0 = 1;\n
        if (a0 < 14)\n
            return v0 & 1;\n
    }\n
    v0 = a0 == 32;\n
    return v0 & 1;\n
}\n
", "4203732:sub_4024d4": null, "4203744:cgc_isxdigit": "extern char _xdigit;\n
\n
long long cgc_isxdigit(unsigned long a0)\n
{\n
    return (&_xdigit)[a0];\n
}\n
", "4203768:sub_4024f8": null, "4203776:cgc_toascii": "long long cgc_toascii(unsigned long a0)\n
{\n
    return a0 & 127;\n
}\n
", "4203791:sub_40250f": null, "4203792:cgc_tolower": "long long cgc_tolower(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 | 32;\n
    return v0;\n
}\n
", "4203849:sub_402549": null, "4203856:cgc_toupper": "long long cgc_toupper(unsigned long a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(a0))\n
    {\n
        v0 = a0;\n
        return v0;\n
    }\n
    v0 = a0 & 95;\n
    return v0;\n
}\n
", "4203913:sub_402589": null, "4203920:cgc_free": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_free(unsigned long a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct_0 *v2;  // rax, Other Possible Types: unsigned long\n
\n
    if (!a0)\n
        return v2;\n
    v0 = a0 - 24;\n
    v2 = v0;\n
    if (v2->field_8)\n
    {\n
        return v0;\n
    }\n
    else if (v0->field_0 < 0x40000)\n
    {\n
        cgc_insert_into_flist(v0);\n
        v2 = cgc_coalesce(v0);\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = cgc_free_huge(v0);\n
        return v2;\n
    }\n
}\n
", "4204035:sub_402603": null, "4204048:cgc_free_huge": "long long cgc_free_huge(unsigned long long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long long v2;  // rsi\n
\n
    v0 = a0;\n
    return cgc_deallocate(a0, v2);\n
}\n
", "4204082:sub_402632": null, "4204096:cgc_malloc": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned long long field_28;\n
} struct_0;\n
\n
extern struct_1 *cgc_free_lists;\n
\n
long long cgc_malloc(unsigned long a0)\n
{\n
    struct_2 *v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long long v4;  // [bp-0x18], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a0;\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v4 + 24 < 0x40000)\n
    {\n
        if ((v4 & 7))\n
            v4 = v4 - -7 & -8;\n
        v4 += 24;\n
        v3 = 0;\n
        v2 = cgc_find_fit(v4, &v3);\n
        if (!v3)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v2 = 31;\n
                v3 = (&cgc_free_lists)[v2];\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_remove_from_flist(v3);\n
        v1 = *(v3) - v4;\n
        if (v1 > 48)\n
        {\n
            v0 = v3 + v4;\n
            v0->field_0 = v1;\n
            v0->field_8 = 1;\n
            v0->field_10 = 0;\n
            v0->field_18 = 0;\n
            *(v3) = v4;\n
            v0->field_28 = v3;\n
            v0->field_20 = *((v3 + 32));\n
            if (*((v3 + 32)))\n
                *((*((v3 + 32)) + 40)) = v0;\n
            *((v3 + 32)) = v0;\n
            cgc_insert_into_flist(v0);\n
        }\n
        v5 = v3 + 24;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc_huge(v4);\n
        return v5;\n
    }\n
}\n
", "4204522:sub_4027ea": null, "4204528:cgc_malloc_huge": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_malloc_huge(unsigned long long a0)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v5;  // rsi\n
    unsigned long long v6;  // rdx\n
\n
    v2 = a0;\n
    v2 += 24;\n
    if (cgc_allocate(a0, v5, v6))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = *(&v1);\n
    v0->field_0 = v2;\n
    v0->field_8 = 0;\n
    v0->field_18 = 0;\n
    v0->field_10 = 0;\n
    v0->field_28 = 0;\n
    v0->field_20 = 0;\n
    v3 = v0 + 24;\n
    return v3;\n
}\n
", "4204690:sub_402892": null, "4204704:cgc_find_fit": "extern unsigned long long cgc_free_lists;\n
\n
long long cgc_find_fit(unsigned long long a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct struct_0 **v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = a1;\n
    for (v0 = cgc_get_size_class(a0); v0 < 32; v0 += 1)\n
    {\n
        for (*(a1) = (&cgc_free_lists)[v0]; *(a1); *(a1) = *(a1)->field_10)\n
        {\n
            if (*(a1)->field_0 >= a0)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    *(a1) = 0;\n
    v2 = -1;\n
    return v2;\n
}\n
", "4204883:sub_402953": null, "4204896:cgc_allocate_new_blk": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
    unsigned long long field_20;\n
    unsigned long long field_28;\n
} struct_0;\n
\n
long long cgc_allocate_new_blk()\n
{\n
    unsigned long long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rdi\n
    unsigned long long v6;  // rsi\n
    unsigned long long v7;  // rdx\n
\n
    v0 = 0x40000;\n
    if (cgc_allocate(v5, v6, v7))\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
    else if (*(&v2))\n
    {\n
        v1 = *(&v2);\n
        v1->field_0 = v0;\n
        v1->field_8 = 1;\n
        v1->field_18 = 0;\n
        v1->field_10 = 0;\n
        v1->field_28 = 0;\n
        v1->field_20 = 0;\n
        cgc_insert_into_flist(v1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 1;\n
        return v3;\n
    }\n
}\n
", "4205074:sub_402a12": null, "4205088:cgc_get_size_class": "extern unsigned long long size_class_limits[4];\n
\n
long long cgc_get_size_class(unsigned long a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < 32)\n
            v0 = !(a0 <= size_class_limits[v1]);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4205183:sub_402a7f": null, "4205184:cgc_insert_into_flist": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned long long field_10;\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_0;\n
\n
extern struct_1 cgc_free_lists;\n
\n
long long cgc_insert_into_flist(struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(a0->field_0);\n
    a0->field_8 = 1;\n
    if (!(&cgc_free_lists.field_0)[v0])\n
    {\n
        (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
        return &cgc_free_lists.field_0;\n
    }\n
    a0->field_10 = (&cgc_free_lists.field_0)[v0];\n
    (&cgc_free_lists.field_0)[v0]->field_18 = a0;\n
    (&cgc_free_lists.field_0)[v0] = &a0->field_0;\n
    a0->field_18 = 0;\n
    return a0;\n
}\n
", "4205351:sub_402b27": null, "4205360:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned long long field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned long long cgc_free_lists[4];\n
\n
long long cgc_remove_from_flist(struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = cgc_get_size_class(*(&a0->field_0));\n
    if (a0->field_18)\n
        a0->field_18->field_10 = a0->field_10;\n
    if (a0->field_10)\n
        a0->field_10->field_18 = a0->field_18;\n
    if (cgc_free_lists[v0] == a0)\n
        cgc_free_lists[v0] = a0->field_10;\n
    a0->field_10 = 0;\n
    a0->field_18 = 0;\n
    a0->field_8 = 0;\n
    return a0;\n
}\n
", "4205546:sub_402bea": null, "4205552:cgc_coalesce": "typedef struct struct_1 {\n
    unsigned long long field_0;\n
    char padding_8[24];\n
    struct struct_0 *field_20;\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
} struct_0;\n
\n
long long cgc_coalesce(struct_1 *a0)\n
{\n
    struct_0 *v1;  // rax\n
    struct_0 *v2;  // rax\n
    struct_0 *v3;  // rax\n
    struct_1 *v4;  // rax\n
    struct_0 *v5;  // rax, Other Possible Types: unsigned long long, struct_1 *, unsigned long\n
\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0->field_20);\n
        cgc_remove_from_flist(a0);\n
        v1 = a0->field_28;\n
        v1->field_0 = a0->field_0 + v1->field_0;\n
        v2 = a0->field_28;\n
        v2->field_0 = a0->field_20->field_0 + v2->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        cgc_remove_from_blist(a0->field_20);\n
        v5 = cgc_remove_from_blist(a0);\n
        return v5;\n
    }\n
    if (a0->field_28 && a0->field_28->field_8 && a0->field_20 && !a0->field_20->field_8)\n
    {\n
        cgc_remove_from_flist(a0->field_28);\n
        cgc_remove_from_flist(a0);\n
        v3 = a0->field_28;\n
        v3->field_0 = a0->field_0 + v3->field_0;\n
        cgc_insert_into_flist(a0->field_28);\n
        v5 = cgc_remove_from_blist(a0);\n
        goto LABEL_402dc2;\n
    }\n
    v5 = a0;\n
    if (a0->field_28)\n
    {\n
        v5 = a0->field_28;\n
        if (!v5->field_8)\n
        {\n
            v5 = a0;\n
            if (a0->field_20)\n
            {\n
                v5 = a0->field_20;\n
                if (v5->field_8)\n
                {\n
                    cgc_remove_from_flist(a0->field_20);\n
                    cgc_remove_from_flist(a0);\n
                    v4 = a0;\n
                    v4->field_0 = a0->field_20->field_0 + v4->field_0;\n
                    cgc_insert_into_flist(a0);\n
                    v5 = cgc_remove_from_blist(a0->field_20);\n
                }\n
            }\n
        }\n
    }\n
LABEL_402dc2:\n
    return v5;\n
}\n
", "4206034:sub_402dd2": null, "4206048:cgc_remove_from_blist": "long long cgc_remove_from_blist(unsigned long a0)\n
{\n
    unsigned long v0;  // [bp-0x10]\n
    unsigned long v2;  // rax\n
\n
    v0 = a0;\n
    if (*((a0 + 40)))\n
        *((*((a0 + 40)) + 32)) = *((v0 + 32));\n
    v2 = a0;\n
    if (*((a0 + 32)))\n
    {\n
        v2 = *((a0 + 32));\n
        *((v2 + 40)) = *((a0 + 40));\n
    }\n
    return v2;\n
}\n
", "4206128:cgc_memchr": "long long cgc_memchr(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((a0 + v0)) == a1)\n
        {\n
            v1 = a0 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4206236:sub_402e9c": null, "4206240:cgc_memcmp": "long long cgc_memcmp(char *a0, char *a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v2 = a0;\n
    v1 = a1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(v2) != *(v1))\n
        {\n
            v3 = *(v1) - *(v2);\n
            return v3;\n
        }\n
        v2 += 1;\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
}\n
", "4206382:sub_402f2e": null, "4206384:cgc_memcpy": "long long cgc_memcpy(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        a0[v0] = *((a1 + v0));\n
    }\n
    return a0;\n
}\n
", "4206475:sub_402f8b": null, "4206480:cgc_memset": "long long cgc_memset(char *a0, unsigned long a1, unsigned long a2)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v4;  // rax\n
\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a2)\n
    {\n
        v1 = a0;\n
        for (v0 = 0; v0 < a2; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a1;\n
        }\n
        v2 = a0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        return v2;\n
    }\n
}\n
", "4206626:sub_403022": null, "4206640:cgc_output_number": "long long cgc_output_number(unsigned long long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x59]\n
    char v3;  // [bp-0x49]\n
    char v4;  // [bp-0x39]\n
    char v5;  // [bp-0x29]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v8 = a0;\n
    v7 = a2;\n
    v6 = 0;\n
    if (v8 >= a1)\n
    {\n
        v6 = cgc_output_number((0 CONCAT v8) /m a1, a1, v7 - 1, a3);\n
        v8 = (0 CONCAT v8) /m a1 >> 32;\n
    }\n
    if (!v6 && v7 > 0)\n
    {\n
        while (true)\n
        {\n
            v7 = v7 - 1;\n
            if (!v7)\n
                break;\n
            if (!(a3 & 1))\n
                v4 = 32;\n
            else\n
                v5 = 48;\n
            cgc_transmit(a0, a1, a2, a3);\n
        }\n
    }\n
    if ((a3 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v3 = v1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v2 = v0;\n
    }\n
    cgc_transmit(a0, a1, a2, a3);\n
    return v6 + 1;\n
}\n
", "4207041:sub_4031c1": null, "4207056:cgc_send_n_bytes": "long long cgc_send_n_bytes(unsigned long long a0, unsigned long long a1, unsigned long long a2)\n
{\n
    void* v0;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned long long v5;  // rcx\n
\n
    v2 = a0;\n
    if (a1 && a2)\n
    {\n
        v1 = 0;\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= a1)\n
            {\n
                v3 = v0;\n
                return v3;\n
            }\n
            if (cgc_transmit(a0, a1, a2, v5))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            v0 = v1 + v0;\n
        }\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4207221:sub_403275": null, "4207232:cgc_printf": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_1 *field_8;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
long long cgc_printf(char *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned long a4)\n
{\n
    unsigned int *v0;  // [bp-0x1a0], Other Possible Types: unsigned long\n
    struct_0 *v1;  // [bp-0x198]\n
    unsigned int v2;  // [bp-0x18c]\n
    unsigned int *v3;  // [bp-0x188], Other Possible Types: unsigned long\n
    struct_0 *v4;  // [bp-0x180]\n
    unsigned int v5;  // [bp-0x174]\n
    unsigned long long v6;  // [bp-0x170]\n
    unsigned long long *v7;  // [bp-0x168], Other Possible Types: unsigned long\n
    struct_0 *v8;  // [bp-0x160]\n
    unsigned int v9;  // [bp-0x154]\n
    unsigned int v10;  // [bp-0x150]\n
    unsigned int v11;  // [bp-0x14c]\n
    char v12;  // [bp-0x148]\n
    unsigned long v13;  // [bp-0x140]\n
    unsigned long v14;  // [bp-0x138]\n
    unsigned long v15;  // [bp-0x130]\n
    unsigned long v16;  // [bp-0x128]\n
    unsigned long v17;  // [bp-0x120]\n
    int v18;  // [bp-0x118]\n
    int v19;  // [bp-0x108]\n
    int v20;  // [bp-0xf8]\n
    int v21;  // [bp-0xe8]\n
    int v22;  // [bp-0xd8]\n
    int v23;  // [bp-0xc8]\n
    int v24;  // [bp-0xb8]\n
    int v25;  // [bp-0xa8]\n
    char v26;  // [bp-0x89]\n
    char v27;  // [bp-0x79]\n
    char v28;  // [bp-0x69]\n
    char v29;  // [bp-0x59]\n
    char v30;  // [bp-0x49]\n
    unsigned int v31;  // [bp-0x48]\n
    unsigned int v32;  // [bp-0x44]\n
    unsigned long v33;  // [bp-0x40]\n
    unsigned long v34;  // [bp-0x38]\n
    unsigned int v35;  // [bp-0x30]\n
    unsigned int v36;  // [bp-0x2c]\n
    unsigned int v37;  // [bp-0x28]\n
    unsigned int v38;  // [bp-0x24]\n
    unsigned int v39;  // [bp-0x1c]\n
    unsigned long long v40;  // [bp-0x18]\n
    char *v41;  // [bp-0x10], Other Possible Types: unsigned long\n
    char v42;  // [bp-0x8]\n
    unsigned long v43;  // [bp+0x8]\n
    unsigned long long v44;  // rbp\n
    char v45;  // al\n
    int v46;  // xmm0\n
    int v47;  // xmm1\n
    int v48;  // xmm2\n
    int v49;  // xmm3\n
    int v50;  // xmm4\n
    int v51;  // xmm5\n
    int v52;  // xmm6\n
    int v53;  // xmm7\n
    unsigned long v54;  // r9\n
    char *v55;  // rax\n
    char *v56;  // rax\n
    unsigned long long v57;  // rdx\n
    unsigned int *v58;  // rax\n
    unsigned long long v59;  // rdx\n
    unsigned long long *v60;  // rax\n
    unsigned int *v61;  // rax\n
\n
    v44 = &v42;\n
    if (v45)\n
    {\n
        v18 = v46;\n
        v19 = v47;\n
        v20 = v48;\n
        v21 = v49;\n
        v22 = v50;\n
        v23 = v51;\n
        v24 = v52;\n
        v25 = v53;\n
    }\n
    v17 = v54;\n
    v16 = a4;\n
    v15 = a3;\n
    v14 = a2;\n
    v13 = a1;\n
    v41 = a0;\n
    v38 = 0;\n
    v37 = 0;\n
    v36 = 0;\n
    v34 = &v12;\n
    v33 = &v43;\n
    v32 = 48;\n
    v31 = 8;\n
    while (*(v41))\n
    {\n
        v55 = v41;\n
        v41 = v55 + 1;\n
        v30 = *(v55);\n
        if (v30 != 37)\n
        {\n
            v26 = v30;\n
            cgc_transmit(a0, a1, a2, a3);\n
LABEL_4036a4:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v56 = v41;\n
                    a3 = v56 + 1;\n
                    v41 = a3;\n
                    v30 = *(v56);\n
                    v11 = v30;\n
                    if (v11 != 48)\n
                        break;\n
                    v37 |= 1;\n
                }\n
                if (v11 - 49 >= 9)\n
                    break;\n
                a2 = 10;\n
                v36 = cgc_strtol(v41 - 1, &v41, 10);\n
            }\n
            v10 = v30;\n
            if (v10 == 37)\n
            {\n
                v29 = 37;\n
                cgc_transmit(a0, a1, a2, a3);\n
                goto LABEL_403664;\n
            }\n
            if (v10 == 88)\n
            {\n
                v37 |= 2;\n
            }\n
            else\n
            {\n
                if (v10 == 100)\n
                {\n
                    v4 = &v31;\n
                    v5 = v31;\n
                    if (v5 <= 40)\n
                    {\n
                        a3 = v4;\n
                        v57 = v5;\n
                        v58 = v57 + a3->field_10;\n
                        a2 = v57 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v3 = v58;\n
                    }\n
                    else\n
                    {\n
                        a3 = v4;\n
                        a2 = *((a3 + 8));\n
                        *((a3 + 8)) = a2 + 8;\n
                        v3 = a2;\n
                    }\n
                    v39 = *(v3);\n
                    if (v39 < 0)\n
                    {\n
                        v28 = 45;\n
                        cgc_transmit(a0, a1, a2, a3);\n
                        v39 = -(v39);\n
                    }\n
                    cgc_output_number(v39, 10, v36, v37);\n
                    goto LABEL_403664;\n
                }\n
                if (v10 == 115)\n
                {\n
                    v8 = &v31;\n
                    v9 = v31;\n
                    if (v9 <= 40)\n
                    {\n
                        a3 = v8;\n
                        v59 = v9;\n
                        v60 = v59 + a3->field_10;\n
                        a2 = v59 + 8;\n
                        *(&a3->field_0) = a2;\n
                        v7 = v60;\n
                    }\n
                    else\n
                    {\n
                        a3 = v8;\n
                        a2 = a3->field_8;\n
                        a3->field_8 = &a2[1];\n
                        v7 = a2;\n
                    }\n
                    v40 = *(v7);\n
                    v6 = v40;\n
                    cgc_send_n_bytes(1, v6, cgc_strlen(v40));\n
                    goto LABEL_403664;\n
                }\n
                if (v10 != 120)\n
                {\n
                    v27 = v30;\n
                    cgc_transmit(a0, a1, a2, a3);\n
LABEL_403664:\n
                    v36 = 0;\n
                    v37 = 0;\n
                    goto LABEL_4036a4;\n
                }\n
            }\n
            v1 = &v31;\n
            v2 = v31;\n
            if (v2 > 40)\n
            {\n
                a3 = v1;\n
                a2 = a3->field_8;\n
                a3->field_8 = &a2[2];\n
                v0 = a2;\n
            }\n
            else\n
            {\n
                a3 = v1;\n
                a2 = v2;\n
                v61 = a2 + a3->field_10;\n
                *(&a3->field_0) = a2 + 8;\n
                v0 = v61;\n
            }\n
            v35 = *(v0);\n
            cgc_output_number(v35, 16, v36, v37);\n
            goto LABEL_403664;\n
        }\n
    }\n
    return v38;\n
}\n
", "4208309:sub_4036b5": null, "4208320:cgc_realloc": "long long cgc_realloc(unsigned int a0, unsigned int a1)\n
{\n
    unsigned long long *v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    if (!a0)\n
    {\n
        v2 = cgc_malloc(a1);\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = cgc_malloc(a1);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 = a0 - 24;\n
        if (a1 >= *(v0) - 24)\n
            cgc_memcpy(v1, a0, *(v0) - 24);\n
        else\n
            cgc_memcpy(v1, a0, a1);\n
        cgc_free(a0);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        cgc_free(a0);\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4208545:sub_4037a1": null, "4208560:cgc_strchr": "long long cgc_strchr(char *a0, unsigned long a1)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
\n
    v0 = a0;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v3 = v0;\n
            v0 = v3 + 1;\n
            if (*(v3) == a1)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4208651:sub_40380b": null, "4208656:cgc_strcmp": "long long cgc_strcmp(char *a0, char *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a0;\n
    v1 = a1;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(v1);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(v1))\n
            break;\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    return *(v1) - *(v2);\n
}\n
", "4208795:sub_40389b": null, "4208800:cgc_strcpy": "long long cgc_strcpy(unsigned long a0, char *a1)\n
{\n
    char *v0;  // [bp-0x20], Other Possible Types: unsigned long\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned long\n
    char *v3;  // rax\n
    unsigned long v4;  // rcx\n
\n
    v1 = a1;\n
    for (v0 = 0; *(v1); *((a0 + v4)) = *(v3))\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((a0 + v0)) = 0;\n
    return a0;\n
}\n
", "4208895:sub_4038ff": null, "4208896:cgc_strlen": "long long cgc_strlen(char *a0)\n
{\n
    char *v0;  // [bp-0x18], Other Possible Types: unsigned long\n
\n
    for (v0 = a0; *(v0); v0 += 1);\n
    return v0 - a0;\n
}\n
", "4208955:sub_40393b": null, "4208960:cgc_strncpy": "long long cgc_strncpy(unsigned long a0, unsigned long a1, unsigned long a2)\n
{\n
    char *v0;  // [bp-0x28], Other Possible Types: unsigned long\n
\n
    for (v0 = 0; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = v0[a1];\n
        if (!v0[a1])\n
            break;\n
    }\n
    for (; v0 < a2; v0 += 1)\n
    {\n
        v0[a0] = 0;\n
    }\n
    return a0;\n
}\n
", "4209122:sub_4039e2": null, "4209136:cgc_strsep": "long long cgc_strsep(struct struct_0 **a0, char *a1)\n
{\n
    char v0;  // [bp-0x29]\n
    char *v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    char *v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v2 = a1;\n
    if (!*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &*(a0)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = cgc_strchr(v2, *(v1)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    v2 = &*(a0)->field_0;\n
    if (!*(v1))\n
    {\n
        *(a0) = 0;\n
    }\n
    else\n
    {\n
        *(v1) = 0;\n
        *(a0) = &v1[1];\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4209357:sub_403acd": null, "4209360:cgc_strtol": "long long cgc_strtol(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    char v0[2];  // [bp-0x50], Other Possible Types: unsigned long\n
    char v1;  // [bp-0x48]\n
    char v2;  // [bp-0x47]\n
    char v3;  // [bp-0x46]\n
    char v4;  // [bp-0x45]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6[2];  // [bp-0x40], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    unsigned int v12;  // [bp-0x1c], Other Possible Types: unsigned long\n
\n
    v12 = a2;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v6 = a0;\n
    if (v12 == 1)\n
    {\n
LABEL_403b1a:\n
    }\n
    else\n
    {\n
        if (!(v12 <= 36))\n
            goto LABEL_403b1a;\n
        if (v12 < 0)\n
            goto LABEL_403b1a;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = v12;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                v12 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_403c24:\n
                v6 += 2;\n
                v12 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_403c24;\n
                v6 += 1;\n
                v12 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_403ca5;\n
                    v6 += 2;\n
                    v12 = 16;\n
                }\n
LABEL_403ca5:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_403e11;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_403dce;\n
            }\n
            if (!v7)\n
            {\n
LABEL_403dce:\n
                if (v8 >= v12)\n
                    goto LABEL_403e11;\n
                v10 *= v12;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = v6 + 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_403dc5;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_403dc5:\n
                v8 += 10;\n
                goto LABEL_403dce;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_403d3f;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_403d3f:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_403e11:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a1)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = a0;\n
    *(a1) = v0;\n
    return v10;\n
}\n
", "4210275:sub_403e63": null, "4210288:cgc_strtoul": "long long cgc_strtoul(char a0[2], unsigned long long *a1, unsigned long a2)\n
{\n
    return cgc_strtol(a0, a1, a2);\n
}\n
", "4210329:sub_403e99": null, "4210336:cgc_dft": "long long cgc_dft(unsigned long a0, unsigned long a1, unsigned int *a2)\n
{\n
    void* v0;  // [bp-0x48], Other Possible Types: unsigned long\n
    unsigned int v1;  // [bp-0x3c]\n
    void* v2;  // [bp-0x38], Other Possible Types: unsigned long\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v4 = a1;\n
    cgc_log2();\n
    v3 = v4;\n
    v2 = 0;\n
    if ((1 << (v3 & 31)) == v4)\n
    {\n
        v2 = cgc_fft(a0, v4);\n
    }\n
    else\n
    {\n
        v1 = v4;\n
        v0 = 0;\n
        v4 = 1 << ((v3 + 1) & 31);\n
        v0 = cgc_malloc(v4 * 8);\n
        if (!v0)\n
        {\n
            *(a2) = 0;\n
            v5 = 0;\n
            return v5;\n
        }\n
        cgc_memset(v0, 0, v4 * 8);\n
        cgc_memcpy(v0, a0, v1 * 8);\n
        v2 = cgc_fft(v0, v4);\n
        cgc_free(v0);\n
    }\n
    *(a2) = v4;\n
    v5 = v2;\n
    return v5;\n
}\n
", "4210599:sub_403fa7": null, "4210608:cgc_fft": "long long cgc_fft(unsigned long long *a0, unsigned long a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned long\n
    unsigned long long *v2;  // [bp-0x20]\n
\n
    v2 = cgc_malloc(a1 * 16);\n
    v1 = 0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[2 * v0] = a0[v0];\n
        v2[1 + 2 * v0] = 0;\n
    }\n
    v1 = cgc_cfft(v2, a1);\n
    cgc_free(v2);\n
    return v1;\n
}\n
", "4210772:sub_404054": null, "4210784:cgc_idft": "long long cgc_idft(unsigned long a0, unsigned long a1, unsigned int *a2)\n
{\n
    void* v0;  // [bp-0x50], Other Possible Types: unsigned long\n
    int tmp_49;  // tmp #49\n
    int tmp_51;  // tmp #51\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v2;  // [bp-0x44]\n
    unsigned long long *v3;  // [bp-0x40]\n
    void* v4;  // [bp-0x38], Other Possible Types: unsigned long, unsigned int\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned long long *v7;  // [bp-0x10], Other Possible Types: unsigned long\n
\n
    v6 = a1;\n
    cgc_log2();\n
    v5 = v6;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < v6; v2 += 1)\n
    {\n
        *((a0 + v2 * 16 + 8)) = *((a0 + v2 * 16 + 8)) ^ 0x8000000000000000;\n
    }\n
    if ((1 << (v5 & 31)) == v6)\n
    {\n
        *(&v4) = cgc_cfft(a0, v6);\n
    }\n
    else\n
    {\n
        v1 = v6;\n
        v0 = 0;\n
        v6 = 1 << ((v5 + 1) & 31);\n
        v0 = cgc_malloc(v6 * 16);\n
        if (v0)\n
        {\n
            cgc_memset(v0, 0, v6 * 16);\n
            cgc_memcpy(v0, a0, v1 * 16);\n
            v4 = cgc_cfft(v0, v6);\n
            cgc_free(v0);\n
        }\n
        else\n
        {\n
            for (v2 = 0; v2 < v6; v2 += 1)\n
            {\n
                *((a0 + v2 * 16 + 8)) = *((a0 + v2 * 16 + 8)) ^ 0x8000000000000000;\n
            }\n
            *(a2) = 0;\n
            v7 = 0;\n
            return v7;\n
        }\n
    }\n
    for (v2 = 0; v2 < v6; v2 += 1)\n
    {\n
        *((a0 + v2 * 16 + 8)) = *((a0 + v2 * 16 + 8)) ^ 0x8000000000000000;\n
    }\n
    if (!v4)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v3 = cgc_malloc(v6 * 8);\n
    if (!v3)\n
    {\n
        cgc_free(v4);\n
        *(a2) = 0;\n
        v7 = 0;\n
        return v7;\n
    }\n
    for (v2 = 0; v2 < v6; v2 += 1)\n
    {\n
        tmp_49 = DivV(tmp_51, tmp_50);\n
        *(&v3[v2]) = tmp_49;\n
    }\n
    cgc_free(v4);\n
    *(a2) = v6;\n
    v7 = v3;\n
    return v7;\n
}\n
", "4211512:sub_404338": null, "4211520:cgc_cfft": "long long cgc_cfft(unsigned long long a0[2], unsigned long a1)\n
{\n
    unsigned long long v0[2];  // [bp-0x78]\n
    int tmp_29;  // tmp #29\n
    int tmp_31;  // tmp #31\n
    int tmp_30;  // tmp #30\n
    int tmp_458;  // tmp #458\n
    int tmp_460;  // tmp #460\n
    int tmp_459;  // tmp #459\n
    int tmp_84;  // tmp #84\n
    int tmp_86;  // tmp #86\n
    int tmp_85;  // tmp #85\n
    unsigned long long *v1;  // [bp-0x70]\n
    unsigned long long *v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x5c]\n
    unsigned long v4;  // [bp-0x58]\n
    unsigned long v5;  // [bp-0x50]\n
    unsigned long long v6[2];  // [bp-0x48]\n
    unsigned long v7;  // [bp-0x40]\n
    unsigned long v8;  // [bp-0x38]\n
    unsigned long v9;  // [bp-0x30]\n
    unsigned long v10;  // [bp-0x28]\n
    unsigned long long v11[2];  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v13[2];  // rax\n
    unsigned long long v14[2];  // rcx\n
    unsigned long long v15[2];  // rax\n
    unsigned long long v16[2];  // rcx\n
    unsigned long long v18;  // rdx\n
    unsigned long long v19;  // r8\n
    unsigned long long v20;  // r9\n
\n
    cgc_atan2();\n
    v10 = (0 CONCAT 0x3ff0000000000000) * (0 CONCAT 0x4010000000000000);\n
    if (a1 == 1)\n
    {\n
        v6[0] = cgc_malloc(16);\n
        v6[0] = a0[0];\n
        v6[1] = a0[1];\n
        v11[0] = v6;\n
        return v11;\n
    }\n
    v5 = cgc_malloc(a1 * 16 >> 1);\n
    v4 = cgc_malloc(a1 * 16 >> 1);\n
    v3 = 0;\n
    for (v3 = 0; v3 < (a1 >> 1); v3 += 1)\n
    {\n
        v13 = v5 + v3 * 16;\n
        v14 = &a0[2 * v3];\n
        v13[0] = v14[0];\n
        v13[1] = v14[1];\n
        v15 = v4 + v3 * 16;\n
        v16 = &a0[1 + 2 * v3];\n
        v15[0] = v16[0];\n
        v15[1] = v16[1];\n
    }\n
    v2 = cgc_cfft(v5, a1 >> 1);\n
    v1 = cgc_cfft(v4, a1 >> 1);\n
    v0[0] = cgc_malloc(a1 * 16);\n
    for (v3 = 0; v3 < (a1 >> 1); v3 += 1)\n
    {\n
        tmp_29 = DivV(tmp_31, tmp_30);\n
        *(&v9) = tmp_29;\n
        cgc_cos();\n
        v8 = v9;\n
        cgc_sin(a1 * 16, a1 >> 1, v18, v16, v19, v20);\n
        v7 = v9;\n
        v0[v3] = (0 CONCAT v1[1 + 2 * v3]) * (0 CONCAT v7) + (0 CONCAT v1[2 * v3]) * (0 CONCAT v8) + (0 CONCAT v2[2 * v3]);\n
        v0[v3 + 1] = (0 CONCAT v1[1 + 2 * v3]) * (0 CONCAT v8) + (0 CONCAT v1[2 * v3] ^ 0x8000000000000000) * (0 CONCAT v7) + (0 CONCAT v2[1 + 2 * v3]);\n
        tmp_458 = SubV(tmp_460, tmp_459);\n
        *(&v0[(a1 >> 1) + 2 * v3]) = tmp_458;\n
        tmp_84 = SubV(tmp_86, tmp_85);\n
        *(&v0[(a1 >> 1) + 1 + 2 * v3]) = tmp_84;\n
    }\n
    cgc_free(v5);\n
    cgc_free(v4);\n
    cgc_free(v2);\n
    cgc_free(v1);\n
    v11 = v0;\n
    return v11;\n
}\n
", "4212514:sub_404722": null, "4212528:cgc_load_file": "long long cgc_load_file(unsigned long long *a0)\n
{\n
    if (*(a0))\n
        cgc_clear_track(a0);\n
    *(a0) = cgc_init_track();\n
    return a0;\n
}\n
", "4212586:sub_40476a": null, "4212592:cgc_quit": "long long cgc_quit(unsigned long long *a0)\n
{\n
    unsigned long long *v1;  // rax, Other Possible Types: unsigned long\n
\n
    v1 = a0;\n
    if (*(a0))\n
        v1 = cgc_clear_track(a0);\n
    return v1;\n
}\n
", "4212633:sub_404799": null, "4212640:cgc_select_option": "extern unsigned int filter_type;\n
\n
long long cgc_select_option(unsigned long long *a0)\n
{\n
    unsigned long v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x22]\n
    char v3;  // [bp-0x21]\n
    unsigned long long v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v4 = *(a0);\n
    v3 = cgc_readopt(0);\n
    if (v3 != -1)\n
    {\n
        if (v4)\n
        {\n
            v0 = v3 - 49;\n
            switch (v0)\n
            {\n
            case 0:\n
                cgc_load_file(a0);\n
                if (!*(a0))\n
                {\n
                    v5 = -0x4;\n
                    return v5;\n
                }\n
            case 1:\n
                cgc_wave_vis(v4);\n
                break;\n
            case 2:\n
                cgc_eq_vis(v4, 1, filter_type);\n
                break;\n
            case 3:\n
                cgc_eq_vis(v4, 2, filter_type);\n
                break;\n
            case 4:\n
                filter_type = 1;\n
                break;\n
            case 5:\n
                filter_type = 2;\n
                break;\n
            case 6:\n
                filter_type = 0;\n
                break;\n
            case 7:\n
                v2 = cgc_readopt(0);\n
                cgc_set_vis_multiplier(v2);\n
                break;\n
            case 8:\n
                cgc_quit(a0);\n
                v5 = 0;\n
                return v5;\n
            default:\n
                v5 = -8;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            v1 = v3;\n
            if (v1 != 49)\n
            {\n
                if (v1 == 50)\n
                {\n
                    cgc_quit(a0);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v5 = -8;\n
                return v5;\n
            }\n
            else\n
            {\n
                cgc_load_file(a0);\n
                if (!*(a0))\n
                {\n
                    v5 = -2;\n
                    return v5;\n
                }\n
            }\n
        }\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (v4)\n
    {\n
        v5 = -32;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -0x10;\n
        return v5;\n
    }\n
}\n
", "4213117:sub_40497d": null, "4213120:cgc_readopt": "long long cgc_readopt(unsigned long long a0)\n
{\n
    char v0;  // [bp-0x20]\n
    char v1;  // [bp-0x13]\n
    char v2;  // [bp-0x12]\n
    char v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned long long v7;  // rsi\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
\n
    v4 = a0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 10;\n
    if (!cgc_receive(a0, v7, v8, v9) && *(&v0))\n
    {\n
        if (!cgc_receive(a0, v7, v8, v9) && *(&v0))\n
        {\n
            if (v2 != v1)\n
            {\n
                while (true)\n
                {\n
                    if (v2 == v1)\n
                    {\n
                        v5 = 255;\n
                        return v5;\n
                    }\n
                    if (cgc_receive(a0, v7, v8, v9))\n
                        break;\n
                    if (!*(&v0))\n
                        break;\n
                }\n
                v5 = 255;\n
                return v5;\n
            }\n
            else\n
            {\n
                v5 = v3;\n
                return v5;\n
            }\n
        }\n
        v5 = 255;\n
        return v5;\n
    }\n
    v5 = 255;\n
    return v5;\n
}\n
", "4213360:main": "int main(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v4 = 0;\n
    v3 = a0;\n
    v2 = a1;\n
    v1 = 0;\n
    v0 = 1;\n
    do\n
    {\n
        cgc_print_error_code(v0);\n
        cgc_print_menu(v1);\n
        v0 = cgc_select_option(&v1);\n
    } while (v0);\n
    cgc_printf(\"EXITING...\\n
\", a1, a2, a3, a4);\n
    return 0;\n
}\n
", "4213458:sub_404ad2": null, "4213472:cgc_print_error_code": "char cgc_print_error_code(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long long v1;  // rax, Other Possible Types: unsigned long\n
\n
    if (a0 == -2)\n
        v1 = cgc_printf(\"ERROR: Couldn't load file, malformed file data\\n
\", a1, a2, a3, a4);\n
    if (a0 == -0x4)\n
        v1 = cgc_printf(\"ERROR: Couldn't load new file, contains malformed file data\\n
\", a1, a2, a3, a4);\n
    if (a0 == -8)\n
        v1 = cgc_printf(\"ERROR: Bad Choice. Select another option\\n
\", a1, a2, a3, a4);\n
    if (a0 == -0x10)\n
        v1 = cgc_printf(\"ERROR: Bad Input. Valid Options: 1, 2\\n
\", a1, a2, a3, a4);\n
    if (a0 == -32)\n
        v1 = cgc_printf(\"ERROR: Bad Input. Valid Options: 1, 2, 3, 4, 5, 6, 7, 8, 9\\n
\", a1, a2, a3, a4);\n
    return v1;\n
}\n
", "4213609:sub_404b69": null, "4213616:cgc_print_menu": "typedef struct struct_0 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    char padding_1c[6];\n
    unsigned short field_22;\n
    char padding_24[4];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern unsigned int filter_type;\n
\n
long long cgc_print_menu(struct_0 *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (!a0)\n
    {\n
        cgc_printf(\"1. Load File\\n
\", a1, a2, a3, a4);\n
        cgc_printf(\"2. Quit\\n
\\n
\", a1, a2, a3, a4);\n
        v1 = cgc_printf(\"--NO FILE LOADED--\\n
\", a1, a2, a3, a4);\n
        return v1;\n
    }\n
    cgc_printf(\"1. Load New File\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"2. Wave Visualizer\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"3. EQ Visualizer\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"4. Power Visualizer\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"5. Enable Low Pass Filter\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"6. Enable High Pass Filter\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"7. Disable Filters\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"8. Set visualization speed multiplier (0-9)\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"9. Quit\\n
\\n
\", a1, a2, a3, a4);\n
    cgc_printf(\"--Current Track: \", a1, a2, a3, a4);\n
    cgc_printf(\"Sampled @%dHz %d bit, \", a0->field_18, a0->field_22, a3, a4);\n
    if (a0->field_16 != 1)\n
        cgc_printf(\"Stereo - \", a1, a2, a3, a4);\n
    else\n
        cgc_printf(\"Mono - \", a1, a2, a3, a4);\n
    cgc_printf(\"Data Size=%d\\n
\", a0->field_28, a2, a3, a4);\n
    cgc_printf(\"::Options: Filter Type=\", a1, a2, a3, a4);\n
    if (!filter_type)\n
    {\n
        cgc_printf(\"None\", a1, a2, a3, a4);\n
    }\n
    else if (filter_type == 1)\n
    {\n
        cgc_printf(\"Low Pass\", a1, a2, a3, a4);\n
    }\n
    else if (filter_type == 2)\n
    {\n
        cgc_printf(\"High Pass\", a1, a2, a3, a4);\n
    }\n
    v1 = cgc_printf(\" | Visualization Slowdown Multiplier=%d::\\n
\\n
\", cgc_get_vis_multiplier(), a2, a3, a4);\n
    return v1;\n
}\n
", "4214070:sub_404d36": null, "4214080:cgc_set_vis_multiplier": "extern unsigned int vis_multiplier;\n
\n
long long cgc_set_vis_multiplier(unsigned long a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    unsigned long v1;  // rax, Other Possible Types: unsigned long long\n
\n
    if (a0 <= 57 && a0 >= 48)\n
    {\n
        vis_multiplier = a0 - 48;\n
        v1 = cgc_printf(\"Multiplier set to %d\\n
\", a0 - 48, a2, a3, a4);\n
        return v1;\n
    }\n
    v1 = cgc_printf(\"Bad multiplier argument\\n
\", a1, a2, a3, a4);\n
    return v1;\n
}\n
", "4214179:sub_404da3": null, "4214192:cgc_get_vis_multiplier": "extern unsigned int vis_multiplier;\n
\n
long long cgc_get_vis_multiplier()\n
{\n
    return vis_multiplier;\n
}\n
", "4214204:sub_404dbc": null, "4214208:cgc_validate_header": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    unsigned short field_14;\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    char padding_24[4];\n
    unsigned int field_28;\n
} struct_0;\n
\n
long long cgc_validate_header(struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    char *v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x38]\n
    char *v3;  // [bp-0x30]\n
    char *v4;  // [bp-0x28]\n
    char *v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // eax\n
\n
    v5 = \"FFIR\";\n
    v4 = \"UWFC\";\n
    v3 = \"cgc \";\n
    v2 = \"data\";\n
    if (cgc_memcmp(a0, v5, 4))\n
    {\n
        v6 = -2;\n
        return v6;\n
    }\n
    else if (a0->field_4 == a0->field_10 + a0->field_28 + 20)\n
    {\n
        v1 = &a0->padding_8[0];\n
        if (cgc_memcmp(v1, v4, 4))\n
        {\n
            v6 = -8;\n
            return v6;\n
        }\n
        else if (cgc_memcmp(&a0->padding_8[4], v3, 4))\n
        {\n
            v6 = -0x10;\n
            return v6;\n
        }\n
        else if (a0->field_14 == 1)\n
        {\n
            if (a0->field_16 != 1 && a0->field_16 != 2)\n
            {\n
                v6 = -64;\n
                return v6;\n
            }\n
            if (a0->field_18 != 8000 && a0->field_18 != 11025 && a0->field_18 != 16000 && a0->field_18 != 22050 && a0->field_18 != 0x7d00 && a0->field_18 != 44100 && a0->field_18 != 48000 && a0->field_18 != 4000)\n
            {\n
                v6 = -128;\n
                return v6;\n
            }\n
            if (a0->field_1c != (a0->field_22 * a0->field_16 * a0->field_18 >> 3))\n
            {\n
                v6 = -0x100;\n
                return v6;\n
            }\n
            v0 = a0->field_20;\n
            v8 = a0->field_22 * a0->field_16;\n
            if (v0 != (v8 >> 31 CONCAT v8) /m 8)\n
            {\n
                v6 = -0x100;\n
                return v6;\n
            }\n
            if (a0->field_22 != 8 && a0->field_22 != 16)\n
            {\n
                v6 = -0x400;\n
                return v6;\n
            }\n
            if (cgc_memcmp(&a0->padding_24, v2, 4))\n
            {\n
                v6 = -0x800;\n
                return v6;\n
            }\n
            v6 = a0->field_4 + 8;\n
            return v6;\n
        }\n
        else\n
        {\n
            v6 = -32;\n
            return v6;\n
        }\n
    }\n
    else\n
    {\n
        v6 = -0x4;\n
        return v6;\n
    }\n
}\n
", "4214905:sub_405079": null, "4214912:cgc_init_track": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long cgc_init_track()\n
{\n
    char v0;  // [bp-0x31]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned long\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4[13];  // [bp-0x18]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned long\n
    unsigned long long v7;  // rsi\n
    unsigned long long v8;  // rdx\n
    unsigned long long v9;  // rcx\n
    unsigned long long v11;  // rdi\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    *(&v4[0]) = cgc_malloc(56);\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!cgc_receive(56, v7, v8, v9) && v2 == 48)\n
    {\n
        v3 = cgc_validate_header(v4) - 48;\n
        if (v3 < 0)\n
        {\n
            cgc_free(v4);\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (!v3)\n
        {\n
            *(&v4[12]) = 0;\n
        }\n
        else\n
        {\n
            *(&v4[12]) = cgc_malloc(v3);\n
            if (!*(&v4[12]))\n
            {\n
                cgc_free(v4);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (!cgc_receive(v11, v7, v8, v9))\n
                v0 = v1 + v2 != v4[10];\n
            if (!(v0 & 1))\n
            {\n
                v5 = v4;\n
                return v5;\n
            }\n
            if (!v2)\n
            {\n
                cgc_free(*(&v4[12]));\n
                cgc_free(v4);\n
                v5 = 0;\n
                return v5;\n
            }\n
            v1 = v2 + v1;\n
        }\n
    }\n
    cgc_free(v4);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4215360:cgc_clear_track": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_8[40];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_8[40];\n
    unsigned int field_30;\n
} struct_1;\n
\n
long long cgc_clear_track(struct_0 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
\n
    v0 = &a0->field_0->field_0;\n
    if (!v0)\n
        return a0->field_0;\n
    if (*(&v0->field_30))\n
        cgc_free(*(&v0->field_30));\n
    if (v0)\n
        cgc_free(v0);\n
    a0->field_0 = 0;\n
    return a0;\n
}\n
", "4215464:sub_4052a8": null, "4215472:cgc_wave_vis": "typedef struct struct_0 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned short field_20;\n
    char padding_22[6];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long cgc_wave_vis(struct_0 *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0x18], Other Possible Types: unsigned long long\n
\n
    v2 = a0->field_30;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= (0 CONCAT a0->field_28) /m a0->field_20)\n
            break;\n
        if (!(0 CONCAT v1) /m a0->field_18 >> 64)\n
            cgc_slow_vis();\n
        if (a0->field_16 == 2)\n
        {\n
            cgc_plot_stereo_wave(a0, v2);\n
        }\n
        else if (a0->field_16 == 1)\n
        {\n
            cgc_plot_mono_wave(a0, v2);\n
        }\n
        v1 += 1;\n
        v2 += a0->field_20;\n
    }\n
    return cgc_printf(\"++++END VISUALIZATION++++\\n
\\n
\", a1, (0 CONCAT a0->field_28) /m a0->field_20 >> 32, (0 CONCAT a0->field_28) /m a0->field_20, a4);\n
}\n
", "4215708:sub_40539c": null, "4215712:cgc_plot_stereo_wave": "typedef struct struct_1 {\n
    char padding_0[34];\n
    unsigned short field_22;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[81];\n
    char field_52;\n
} struct_0;\n
\n
long long cgc_plot_stereo_wave(struct_1 *a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    int tmp_20;  // tmp #20\n
    int tmp_22;  // tmp #22\n
    int tmp_21;  // tmp #21\n
    int tmp_38;  // tmp #38\n
    int tmp_40;  // tmp #40\n
    int tmp_39;  // tmp #39\n
    int tmp_31;  // tmp #31\n
    int tmp_33;  // tmp #33\n
    int tmp_32;  // tmp #32\n
    int tmp_54;  // tmp #54\n
    int tmp_56;  // tmp #56\n
    int tmp_55;  // tmp #55\n
    char v0;  // [bp-0xb8]\n
    char v1;  // [bp-0x58]\n
    struct_0 *v2;  // [bp-0x50]\n
    unsigned long v3;  // [bp-0x48]\n
    unsigned int v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x30]\n
    unsigned int v8;  // [bp-0x2c]\n
    void* v9;  // [bp-0x28], Other Possible Types: unsigned long\n
    void* v10;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v11;  // [bp-0x18]\n
    int v14;  // xmm1\n
    int v15;  // xmm0\n
    int v17;  // xmm0\n
    int v18;  // xmm1\n
    struct_0 *v20;  // rsi\n
\n
    v11 = a1;\n
    v10 = 0;\n
    v9 = 0;\n
    if (a0->field_22 != 8)\n
    {\n
        tmp_20 = DivV(tmp_22, tmp_21);\n
        *(&v10) = tmp_20;\n
        v14 = 0;\n
        tmp_38 = DivV(tmp_40, tmp_39);\n
        v15 = tmp_38;\n
    }\n
    else\n
    {\n
        tmp_31 = DivV(tmp_33, tmp_32);\n
        *(&v10) = tmp_31;\n
        v14 = 0;\n
        tmp_54 = DivV(tmp_56, tmp_55);\n
        v15 = tmp_54;\n
    }\n
    v9 = v15;\n
    v8 = 83;\n
    v7 = 41;\n
    v6 = v7 + (v7 - 2 >> 31) - 2 >> 1;\n
    *(&v14) = v6;\n
    v17 = (0 CONCAT v10) * v14 + v14;\n
    v18 = 0;\n
    v5 = (v17 + (0 CONCAT 0x3fe0000000000000));\n
    *(&v18) = v6;\n
    v4 = ((0 CONCAT v9) * v18 + v18 + (0 CONCAT v7) + (0 CONCAT 0x3ff8000000000000));\n
    v3 = &v1;\n
    v2 = &v0;\n
    cgc_memset(&v0, 32, 83);\n
    v20 = v2;\n
    v20->field_52 = 0;\n
    (&v20->field_0)[v7] = 124;\n
    (&v20->field_0)[v5] = 42;\n
    (&v20->field_0)[v4] = 42;\n
    cgc_printf(\"%s\\n
\", v20, 83, a3, a4);\n
    return v3;\n
}\n
", "4216101:sub_405525": null, "4216112:cgc_plot_mono_wave": "typedef struct struct_1 {\n
    char padding_0[34];\n
    unsigned short field_22;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[40];\n
    char field_29;\n
} struct_0;\n
\n
long long cgc_plot_mono_wave(struct_1 *a0, unsigned long a1, unsigned long a2, unsigned long long a3, unsigned int a4)\n
{\n
    int tmp_15;  // tmp #15\n
    int tmp_17;  // tmp #17\n
    int tmp_16;  // tmp #16\n
    int tmp_23;  // tmp #23\n
    int tmp_25;  // tmp #25\n
    int tmp_24;  // tmp #24\n
    char v0;  // [bp-0x78]\n
    char v1;  // [bp-0x48]\n
    struct_0 *v2;  // [bp-0x40]\n
    unsigned long v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    void* v7;  // [bp-0x20], Other Possible Types: unsigned long\n
    unsigned long v8;  // [bp-0x18]\n
    int v10;  // xmm1\n
    int v11;  // xmm0\n
    struct_0 *v12;  // rsi\n
\n
    v8 = a1;\n
    v7 = 0;\n
    if (a0->field_22 != 8)\n
    {\n
        v10 = 0;\n
        tmp_15 = DivV(tmp_17, tmp_16);\n
        v11 = tmp_15;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        tmp_23 = DivV(tmp_25, tmp_24);\n
        v11 = tmp_23;\n
    }\n
    v7 = v11;\n
    v6 = 42;\n
    v5 = 20;\n
    *(&v10) = v5;\n
    v4 = ((0 CONCAT v7) * v10 + v10 + (0 CONCAT 0x3fe0000000000000));\n
    v3 = &v1;\n
    v2 = &v0;\n
    cgc_memset(&v0, 32, 42);\n
    v12 = v2;\n
    v12->field_29 = 0;\n
    (&v12->field_0)[v4] = 42;\n
    cgc_printf(\"%s\\n
\", v12, 42, a3, a4);\n
    return v3;\n
}\n
", "4216346:sub_40561a": null, "4216352:cgc_eq_vis": "typedef struct struct_0 {\n
    char padding_0[22];\n
    unsigned short field_16;\n
    unsigned int field_18;\n
    char padding_1c[4];\n
    unsigned short field_20;\n
    unsigned short field_22;\n
    char padding_24[4];\n
    unsigned int field_28;\n
    char padding_2c[4];\n
    unsigned long long field_30;\n
} struct_0;\n
\n
long long cgc_eq_vis(struct_0 *a0, unsigned long long a1, unsigned long a2, unsigned long a3, unsigned int a4)\n
{\n
    int tmp_28;  // tmp #28\n
    int tmp_30;  // tmp #30\n
    int tmp_29;  // tmp #29\n
    int tmp_25;  // tmp #25\n
    int tmp_27;  // tmp #27\n
    int tmp_26;  // tmp #26\n
    int tmp_20;  // tmp #20\n
    int tmp_22;  // tmp #22\n
    int tmp_21;  // tmp #21\n
    int tmp_17;  // tmp #17\n
    int tmp_19;  // tmp #19\n
    int tmp_18;  // tmp #18\n
    unsigned int v0;  // [bp-0x1b0]\n
    unsigned int v1;  // [bp-0x1ac]\n
    unsigned int v2;  // [bp-0x1a8]\n
    char v3;  // [bp-0x1a1]\n
    unsigned int v4;  // [bp-0x1a0]\n
    char v5;  // [bp-0x199]\n
    unsigned int v6;  // [bp-0x198]\n
    char v7;  // [bp-0x191]\n
    unsigned int v8;  // [bp-0x190]\n
    unsigned int v9;  // [bp-0x18c]\n
    char v10;  // [bp-0x188]\n
    char v11;  // [bp-0x180]\n
    char v12;  // [bp-0x178]\n
    unsigned long v13;  // [bp-0x60]\n
    unsigned long v14;  // [bp-0x58]\n
    unsigned long long *v15;  // [bp-0x50], Other Possible Types: unsigned long\n
    unsigned long long *v16;  // [bp-0x48]\n
    unsigned long long *v17;  // [bp-0x40]\n
    unsigned long long *v18;  // [bp-0x38]\n
    unsigned long v19;  // [bp-0x30]\n
    unsigned int v20;  // [bp-0x24]\n
    unsigned int v21;  // [bp-0x20]\n
    unsigned int v22;  // [bp-0x1c]\n
    unsigned long long *v24;  // rax, Other Possible Types: unsigned long\n
    unsigned long long v25;  // rax\n
    unsigned int v30;  // eax\n
    unsigned int v32;  // eax\n
    unsigned int v34;  // eax\n
\n
    a1 = a1;\n
    v19 = a0->field_30;\n
    v16 = 0;\n
    v15 = 0;\n
    v24 = cgc_malloc(a0->field_18 * 8);\n
    v18 = v24;\n
    if (!v18)\n
        return v24;\n
    if (a0->field_16 == 2)\n
    {\n
        v24 = cgc_malloc(a0->field_18 * 8);\n
        v17 = v24;\n
        if (!v17)\n
            return v24;\n
    }\n
    v22 = 0;\n
    while (true)\n
    {\n
        v8 = v22;\n
        v25 = (0 CONCAT a0->field_28) /m a0->field_20;\n
        if (v8 >= v25)\n
            break;\n
        for (v21 = 0; v21 < 12; v21 += 1)\n
        {\n
            *(&(&v11)[24 * v21]) = 0;\n
            *(&(&v10)[24 * v21]) = 0;\n
            *(&(&v12)[24 * v21]) = 0;\n
        }\n
        v21 = 0;\n
        while (true)\n
        {\n
            v7 = 0;\n
            if (v21 < a0->field_18)\n
            {\n
                v6 = v22;\n
                v7 = v6 < (0 CONCAT a0->field_28) /m a0->field_20;\n
            }\n
            if (!(v7 & 1))\n
                break;\n
            if (a0->field_22 == 8)\n
            {\n
                tmp_28 = DivV(tmp_30, tmp_29);\n
                *(&v14) = tmp_28;\n
                if (a0->field_16 == 2)\n
                {\n
                    tmp_25 = DivV(tmp_27, tmp_26);\n
                    *(&v13) = tmp_25;\n
                }\n
            }\n
            else\n
            {\n
                tmp_20 = DivV(tmp_22, tmp_21);\n
                *(&v14) = tmp_20;\n
                if (a0->field_16 == 2)\n
                {\n
                    tmp_17 = DivV(tmp_19, tmp_18);\n
                    *(&v13) = tmp_17;\n
                }\n
            }\n
            v18[v21] = v14;\n
            if (a0->field_16 == 2)\n
                v17[v21] = v13;\n
            v21 += 1;\n
            v22 += 1;\n
            v19 += a0->field_20;\n
        }\n
        v16 = cgc_dft(v18, v21, &v20);\n
        if (a0->field_16 == 2)\n
            v15 = cgc_dft(v17, v21, &v20);\n
        if (a2 == 1)\n
        {\n
            v9 = (0 CONCAT a0->field_18 * 4) /m 20;\n
            while (true)\n
            {\n
                v5 = 0;\n
                if (v9 < v21)\n
                {\n
                    v4 = v9;\n
                    v5 = v4 < (0 CONCAT a0->field_18 * 16) /m 20;\n
                }\n
                if (!(v5 & 1))\n
                    break;\n
                v16[2 * v9] = 0;\n
                v16[1 + 2 * v9] = 0;\n
                if (a0->field_16 == 2)\n
                {\n
                    *((v15 + v9 * 16)) = 0;\n
                    *((v15 + v9 * 16 + 8)) = 0;\n
                }\n
                v9 += 1;\n
            }\n
        }\n
        else if (a2 == 2)\n
        {\n
            v9 = 0;\n
            while (true)\n
            {\n
                v3 = 0;\n
                if (v9 < (0 CONCAT a0->field_18 << 1) /m 20)\n
                    v3 = v9 < v21;\n
                if (!(v3 & 1))\n
                    break;\n
                v16[2 * v9] = 0;\n
                v16[1 + 2 * v9] = 0;\n
                if (a0->field_16 == 2)\n
                {\n
                    *((v15 + v9 * 16)) = 0;\n
                    *((v15 + v9 * 16 + 8)) = 0;\n
                }\n
                v9 += 1;\n
            }\n
            v9 = (0 CONCAT a0->field_18 * 18) /m 20;\n
            if ((Not (Not (Load(addr=stack_base-396, size=4, endness=Iend_LE) <s Load(addr=stack_base-32, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
        }\n
        v9 = 0;\n
        while (true)\n
        {\n
            v2 = v9;\n
            v30 = v21;\n
            if (v2 >= (v30 >> 31 CONCAT v30) /m 2)\n
                break;\n
            v1 = v9;\n
            v32 = v21;\n
            cgc_add_to_bucket(&v10, &v16[2 * v9], v1, (v32 >> 31 CONCAT v32) /m 2);\n
            if (a0->field_16 == 2)\n
            {\n
                v0 = v9;\n
                v34 = v21;\n
                cgc_add_to_bucket(&v10, v15 + v9 * 16, v0, (v34 >> 31 CONCAT v34) /m 2);\n
            }\n
            v9 += 1;\n
        }\n
        a1 = a1;\n
        cgc_vis_buckets(&v10, a1);\n
        cgc_free(v16);\n
        if (a0->field_16 == 2)\n
            cgc_free(v15);\n
    }\n
    v24 = cgc_printf(\"++++END VISUALIZATION++++\\n
\\n
\", a1, v25 / 0x100000000, v25, a4);\n
    return v24;\n
}\n
", "4217954:sub_405c62": null, "4217968:cgc_add_to_bucket": "typedef struct struct_0 {\n
    unsigned long long field_0;\n
    unsigned long long field_8;\n
    unsigned int field_10;\n
} struct_0;\n
\n
long long cgc_add_to_bucket(unsigned long long a0, unsigned long long a1[2], unsigned long long a2, unsigned long long a3)\n
{\n
    int tmp_38;  // tmp #38\n
    int tmp_40;  // tmp #40\n
    int tmp_39;  // tmp #39\n
    unsigned long v0;  // [bp-0x40]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned long v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    int v8;  // xmm0\n
    unsigned long long v9;  // r8\n
    unsigned long long v10;  // r9\n
    struct_0 *v11;  // rax\n
    struct_0 *v13;  // rax\n
\n
    v5 = a2;\n
    v4 = a3;\n
    tmp_38 = DivV(tmp_40, tmp_39);\n
    cgc_sqrt();\n
    v8 = tmp_38 * (0 CONCAT 0x4028000000000000);\n
    v3 = v8;\n
    v1 = a0 + v3 * 24;\n
    cgc_pow(a0, a1, a2, a3, v9, v10);\n
    v0 = a1[0];\n
    cgc_pow(a0, a1, a2, a3, v9, v10);\n
    v2 = (0 CONCAT v0) + (0 CONCAT a1[1]);\n
    *(&v8) = v2;\n
    if ((((CmpF(v8, 0x4010000000000000) & 69) | ((CmpF(v8, 0x4010000000000000) & 69) >> 6)) & 1) != 1)\n
    {\n
        v11 = v1;\n
        STORE(addr=rax<8>, data=Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base-48, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=rax<8>, size=8, endness=Iend_LE)))), size=8, endness=Iend_LE, guard=None)\n
    }\n
    *(&v8) = v2;\n
    if ((((CmpF(v8, v1->field_8) & 69) | ((CmpF(v8, v1->field_8) & 69) >> 6)) & 1) != 1)\n
        v1->field_8 = v2;\n
    v13 = v1;\n
    v13->field_10 = v13->field_10 + 1;\n
    return v1;\n
}\n
", "4218209:sub_405d61": null, "4218224:cgc_vis_buckets": "long long cgc_vis_buckets(unsigned long long *a0, unsigned long long a1, unsigned long long a2, unsigned long long a3, unsigned int a4)\n
{\n
    char v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xac]\n
    char v2;  // [bp-0xa8]\n
    unsigned int v3;  // [bp-0x40]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
\n
    v8 = 90;\n
    v7 = &v0;\n
    cgc_slow_vis();\n
    if (a1 != 1)\n
    {\n
        if (a1 != 2)\n
            return v7;\n
        v5 = 0;\n
        v4 = 2;\n
        v3 = 0;\n
        for (v9 = 0; v9 < 12; v9 += 1)\n
        {\n
            s_38 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=(rdi<8> + (Conv(32->s64, Load(addr=stack_base-24, size=4, endness=Iend_LE)) * 0x18<64>)), size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base-56, size=8, endness=Iend_LE))))<8>\n
        }\n
        cgc_log();\n
        s_40 =L Conv(128->32, (((0x0<64> CONCAT 0x3ff0000000000000<64>) + Conv(64->128, Load(addr=stack_base-56, size=8, endness=Iend_LE))) * (0x0<64> CONCAT 0x4008000000000000<64>)))<4>\n
        cgc_memset(&v2, 0, 91);\n
        cgc_memset(&v2, 61, v3);\n
        (&v2)[v3] = 93;\n
        for (v9 = 0; v9 < v4; v9 += 1)\n
        {\n
            cgc_printf(\"%s\\n
\", &v2, v3, a3, a4);\n
        }\n
    }\n
    else\n
    {\n
        for (v6 = 90; v6 >= 0; v6 -= 1)\n
        {\n
            cgc_printf(\"   \", a1, a2, a3, a4);\n
            for (v9 = 0; v9 < 12; v9 += 1)\n
            {\n
                if (!v6)\n
                {\n
                    cgc_printf(\"|-----|\", a1, a2, a3, a4);\n
                }\n
                else\n
                {\n
                    v1 = v6;\n
                    cgc_log();\n
                    a3 = a0[1 + 3 * v9];\n
                    if (v1 <= a3)\n
                    {\n
                        cgc_printf(\"|=====|\", a1, a2, a3, a4);\n
                    }\n
                    else if (v6 <= 30)\n
                    {\n
                        cgc_printf(\"|     |\", a1, a2, a3, a4);\n
                    }\n
                }\n
            }\n
            cgc_printf(\"\\n
\", a1, a2, a3, a4);\n
        }\n
        return v7;\n
    }\n
}\n
", "4218766:sub_405f8e": null, "4218768:cgc_slow_vis": "extern unsigned int vis_multiplier;\n
\n
long long cgc_slow_vis()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned long long v2;  // rdi\n
    unsigned long long v3;  // rsi\n
    unsigned long long v4;  // rdx\n
    unsigned long long v5;  // rcx\n
    unsigned long long v6;  // r8\n
    unsigned long long v7;  // r9\n
\n
    v0 = 0;\n
    for (v0 = 0; v0 < vis_multiplier * 200000; v0 += 1)\n
    {\n
        cgc_sin();\n
        cgc_cos(v2, v3, v4, v5, v6, v7);\n
    }\n
    return v0;\n
}\n
", "4218852:_fini": "long long _fini()\n
{\n
    unsigned long v1;  // rax\n
\n
    return v1;\n
}\n
", "5242880:__libc_start_main": null, "5242888:cgc_log2": null, "5242896:cgc_pow": null, "5242904:cgc_atan2": null, "5242912:cgc_transmit": null, "5242920:cgc_cos": null, "5242928:cgc_allocate": null, "5242936:cgc_log": null, "5242944:cgc_deallocate": null, "5242952:cgc_sin": null, "5242960:cgc_sqrt": null, "5242968:cgc_receive": null, "6295632:UnresolvableJumpTarget": null, "6295640:UnresolvableCallTarget": null}