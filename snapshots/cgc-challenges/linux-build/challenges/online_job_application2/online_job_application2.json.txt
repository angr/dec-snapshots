{"4202496:_init": "extern struct_0 *g_4092e4;\n
\n
int _init()\n
{\n
    if (g_4092e4)\n
    {\n
        g_4092e4();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29179;\n
    v6 = v5 + 449;\n
    v7 = v5 + 449;\n
    if (v7 == v6)\n
        return v5 + 449;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 29115;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 449;\n
    v9 = (v6 + 449 - (v6 + 449) >> 31) + (449 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4092e0;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4092e0)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_calloc": "int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
        return 0;\n
    v4 = a0;\n
    if (!v4)\n
        return 0;\n
    tmp_2 = v4;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v6 = v4 * v2;\n
    v7 = cgc_malloc();\n
    if (v7)\n
    {\n
        v0 = v6;\n
        return cgc_memset(v7, 0);\n
    }\n
    return 0;\n
}\n
", "4203054:sub_40222e": null, "4203056:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4203089:sub_402251": null, "4203104:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203123:sub_402273": null, "4203136:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203152:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203168:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203184:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4203198:sub_4022be": null, "4203200:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4203222:sub_4022d6": null, "4203232:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4203254:sub_4022f6": null, "4203264:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4203286:sub_402316": null, "4203296:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4203318:sub_402336": null, "4203328:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[13032 + v0];\n
}\n
", "4203353:sub_402359": null, "4203360:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4203385:sub_402379": null, "4203392:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[12904 + v0];\n
}\n
", "4203417:sub_402399": null, "4203424:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203432:sub_4023a8": null, "4203440:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4203459:sub_4023c3": null, "4203472:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4203491:sub_4023e3": null, "4203504:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4203583:sub_40243f": null, "4203584:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_409a74;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // esi\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct struct_1 **v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // esi\n
    struct_1 *v12;  // edx, Other Possible Types: unsigned int\n
    unsigned int v13[6];  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // eax\n
    struct_0 *v16;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        v11 = 0;\n
        if (v10 <= 31)\n
        {\n
            do\n
            {\n
                v12 = *(&(&cgc_free_lists)[4 * v10]);\n
                if (v12)\n
                {\n
                    do\n
                    {\n
                        if (*(v12) >= v9)\n
                        {\n
                            v11 = v12;\n
                            goto LABEL_40251f;\n
                        }\n
                        v12 = *((v12 + 8));\n
                    } while (v12);\n
                }\n
                v10 += 1;\n
            } while (v10 != 32);\n
        }\n
LABEL_40251f:\n
        if (v11)\n
        {\n
LABEL_402523:\n
            cgc_remove_from_flist();\n
            v14 = *(v11) - v9;\n
            if (v14 >= 49)\n
            {\n
                v15 = v9 + v11;\n
                *((&v9->field_0 + v11)) = v14;\n
                *(&v9->padding_4[v11]) = 1;\n
                *((8 + &v9->field_0 + v11)) = 0;\n
                *(&v9->padding_c[v11]) = 0;\n
                *(v11) = v9;\n
                *((20 + &v9->field_0 + v11)) = v11;\n
                *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
                v16 = *((v11 + 16));\n
                if (v16)\n
                    v16->field_14 = v15;\n
                *((v11 + 16)) = v15;\n
                cgc_insert_into_flist();\n
            }\n
            v5 = v11 + 24;\n
            return v5;\n
        }\n
        else\n
        {\n
            v0 = &v2;\n
            if (cgc_allocate(0x40000, 0))\n
                return 0;\n
            v13 = *(&v2);\n
            if (v13)\n
            {\n
                v13[0] = 0x40000;\n
                v13[1] = 1;\n
                v13[3] = 0;\n
                v13[2] = 0;\n
                v13[5] = 0;\n
                v13[4] = 0;\n
                cgc_insert_into_flist();\n
                v11 = g_409a74;\n
                goto LABEL_402523;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            v5 = v8 + 1;\n
            return v5;\n
        }\n
        return 0;\n
    }\n
}\n
", "4204011:sub_4025eb": null, "4204016:cgc_get_size_class": "extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int *v2;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v2 = &size_class_limits;\n
    while (true)\n
    {\n
        if (*(v2) >= v0)\n
            return v1;\n
        v1 += 1;\n
        v2 += 4;\n
        if (v1 == 32)\n
            return 32;\n
    }\n
}\n
", "4204069:sub_402625": null, "4204080:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    while (*(v3) < v1[0])\n
    {\n
        v2 += 1;\n
        v3 += 4;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    v1[1] = 1;\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v2]);\n
    if (!v4)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v2]) = v1;\n
        return &_GLOBAL_OFFSET_TABLE_;\n
    }\n
    v1[2] = v4;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4204189:sub_40269d": null, "4204192:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v4;  // esi\n
    struct_0 *v5;  // edi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    do\n
    {\n
        if (*(v3) >= v1->field_0)\n
        {\n
            v4 = v1->field_c;\n
            if (v4)\n
                v4->field_8 = v1->field_8;\n
            v5 = v1->field_8;\n
            if (v5)\n
                v5->field_c = v4;\n
            if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v2]) == v1)\n
            {\n
                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v2]) = v5;\n
                goto LABEL_4026fb;\n
            }\n
        }\n
        v2 += 1;\n
        v3 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_4026fb:\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v0;\n
}\n
", "4204307:sub_402713": null, "4204320:cgc_coalesce": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_2 *field_14;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_coalesce(struct_3 *v0)\n
{\n
    struct_3 *v1;  // eax, Other Possible Types: unsigned int\n
    struct_2 *v2;  // edx\n
    struct_3 *v3;  // esi\n
    unsigned int *v4;  // ebx, Other Possible Types: unsigned int\n
    struct_3 *v5;  // esi\n
    unsigned int v6;  // esi\n
    struct_0 *v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int *v9;  // ebx, Other Possible Types: unsigned int\n
    struct_1 *v10;  // ebx\n
    struct_3 *v11;  // edx\n
    struct_0 *v12;  // edi\n
    unsigned int v13;  // esi\n
    unsigned int *v14;  // ebx, Other Possible Types: unsigned int\n
    struct_3 *v15;  // edx\n
    unsigned int v16;  // esi\n
    unsigned int *v17;  // ebx, Other Possible Types: unsigned int\n
    struct_1 *v18;  // ebx\n
    struct_0 *v19;  // edi\n
    struct_0 *v20;  // edi\n
    struct_1 *v21;  // ebx\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int *v24;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v25;  // ebx\n
    struct_0 *v26;  // edi\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // esi\n
    unsigned int *v29;  // edi, Other Possible Types: unsigned int\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // esi\n
    unsigned int *v32;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v33;  // ebx\n
    struct_0 *v34;  // edi\n
    struct_0 *v35;  // edi\n
    struct_1 *v36;  // ebx\n
    struct_2 *v37;  // esi\n
    unsigned int v38;  // edx\n
    unsigned int v39;  // edi\n
    unsigned int *v40;  // ebx, Other Possible Types: unsigned int\n
    struct_1 *v41;  // ebx\n
    unsigned int v42;  // edx\n
    unsigned int v43;  // edx\n
    unsigned int v44;  // esi\n
    unsigned int *v45;  // edi, Other Possible Types: unsigned int\n
    struct_2 *v46;  // esi\n
    unsigned int v47;  // edx\n
    unsigned int v48;  // edx\n
    unsigned int v49;  // edi\n
    unsigned int *v50;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v51;  // edx\n
    unsigned int v52;  // edx\n
    struct_3 *v53;  // edx\n
    struct_2 *v54;  // ecx\n
    struct_3 *v55;  // edx\n
    struct_2 *v56;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_14;\n
    if (!v2)\n
        return v1;\n
    if (v2->field_4)\n
    {\n
        v3 = v1->field_10;\n
        if (v3 && v3->field_4)\n
        {\n
            v6 = 0;\n
            v4 = &size_class_limits;\n
            do\n
            {\n
                if (*(v4) >= v2->field_0)\n
                {\n
LABEL_402784:\n
                    v7 = v2->field_c;\n
                    if (v7)\n
                        v7->field_8 = v2->field_8;\n
                    v10 = v2->field_8;\n
                    if (v10)\n
                        v10->field_c = v7;\n
                    if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v6]) == v2)\n
                        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v6]) = v10;\n
                    v2->field_8 = 0;\n
                    v2->field_c = 0;\n
                    v2->field_4 = 0;\n
                    v15 = v1->field_10;\n
                    v16 = 0;\n
                    v17 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v17) >= v15->field_0)\n
                        {\n
LABEL_4027e4:\n
                            v20 = v15->field_c;\n
                            if (v20)\n
                                v20->field_8 = v15->field_8;\n
                            v25 = v15->field_8;\n
                            if (v25)\n
                                v25->field_c = v20;\n
                            if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v16]) == v15)\n
                                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v16]) = v25;\n
                            v15->field_8 = 0;\n
                            v15->field_c = 0;\n
                            v15->field_4 = 0;\n
                            v30 = v1->field_0;\n
                            v31 = 0;\n
                            v32 = &size_class_limits;\n
                            do\n
                            {\n
                                if (*(v32) >= v30)\n
                                {\n
LABEL_402844:\n
                                    v35 = v1->field_c;\n
                                    if (v35)\n
                                        v35->field_8 = v1->field_8;\n
                                    v41 = v1->field_8;\n
                                    if (v41)\n
                                        v41->field_c = v35;\n
                                    if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v31]) == v1)\n
                                        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v31]) = v41;\n
                                    v1->field_8 = 0;\n
                                    v1->field_c = 0;\n
                                    v1->field_4 = 0;\n
                                    v46 = v1->field_14;\n
                                    v47 = v30 + v46->field_0;\n
                                    v46->field_0 = v47;\n
                                    v48 = v47 + v1->field_10->field_0;\n
                                    v46->field_0 = v48;\n
                                    v49 = 0;\n
                                    v50 = &size_class_limits;\n
                                    do\n
                                    {\n
                                        if (*(v50) >= v48)\n
                                        {\n
LABEL_4028b4:\n
                                            v46->field_4 = 1;\n
                                            v52 = *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v49]);\n
                                            if (!v52)\n
                                            {\n
                                                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v49]) = v46;\n
                                            }\n
                                            else\n
                                            {\n
                                                v46->field_8 = v52;\n
                                                *((*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v49]) + 12)) = v46;\n
                                                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v49]) = v46;\n
                                                v46->field_c = 0;\n
                                            }\n
                                            v53 = v1->field_10;\n
                                            v54 = v53->field_14;\n
                                            if (v54)\n
                                                v54->field_10 = v53->field_10;\n
                                            v55 = v53->field_10;\n
                                            if (v55)\n
                                            {\n
                                                v55->field_14 = v54;\n
                                                goto LABEL_402b96;\n
                                            }\n
                                        }\n
                                        v49 += 1;\n
                                        v50 += 4;\n
                                    } while (v49 != 32);\n
                                    v49 = 32;\n
                                    goto LABEL_4028b4;\n
                                }\n
                                v31 += 1;\n
                                v32 += 4;\n
                            } while (v31 != 32);\n
                            v31 = 32;\n
                            goto LABEL_402844;\n
                        }\n
                        v16 += 1;\n
                        v17 += 4;\n
                    } while (v16 != 32);\n
                    v16 = 32;\n
                    goto LABEL_4027e4;\n
                }\n
                v6 += 1;\n
                v4 += 4;\n
            } while (v6 != 32);\n
            v6 = 32;\n
            goto LABEL_402784;\n
        }\n
    }\n
    if (!v2)\n
        return v1;\n
    if (v2->field_4)\n
    {\n
        v5 = v1->field_10;\n
        if (v5 && !v5->field_4)\n
        {\n
            v8 = 0;\n
            v9 = &size_class_limits;\n
            do\n
            {\n
                if (*(v9) >= v2->field_0)\n
                {\n
                    v12 = v2->field_c;\n
                    if (v12)\n
                        v12->field_8 = v2->field_8;\n
                    v18 = v2->field_8;\n
                    if (v18)\n
                        v18->field_c = v12;\n
                    if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v8]) == v2)\n
                        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v8]) = v18;\n
                    v2->field_8 = 0;\n
                    v2->field_c = 0;\n
                    v2->field_4 = 0;\n
                    v22 = v1->field_0;\n
                    v23 = 0;\n
                    v24 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v24) >= v22)\n
                        {\n
LABEL_402af4:\n
                            v26 = v1->field_c;\n
                            if (v26)\n
                                v26->field_8 = v1->field_8;\n
                            v33 = v1->field_8;\n
                            if (v33)\n
                                v33->field_c = v26;\n
                            if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v23]) == v1)\n
                                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v23]) = v33;\n
                            v1->field_8 = 0;\n
                            v1->field_c = 0;\n
                            v1->field_4 = 0;\n
                            v37 = v1->field_14;\n
                            v38 = v22 + v37->field_0;\n
                            v37->field_0 = v38;\n
                            v39 = 0;\n
                            v40 = &size_class_limits;\n
                            do\n
                            {\n
                                if (*(v40) >= v38)\n
                                {\n
LABEL_402b54:\n
                                    v37->field_4 = 1;\n
                                    v42 = *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v39]);\n
                                    if (!v42)\n
                                    {\n
                                        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v39]) = v37;\n
                                        goto LABEL_402b96;\n
                                    }\n
                                    else\n
                                    {\n
                                        v37->field_8 = v42;\n
                                        *((*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v39]) + 12)) = v37;\n
                                        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v39]) = v37;\n
                                        v37->field_c = 0;\n
                                        goto LABEL_402b96;\n
                                    }\n
                                }\n
                                v39 += 1;\n
                                v40 += 4;\n
                            } while (v39 != 32);\n
                            v39 = 32;\n
                            goto LABEL_402b54;\n
                        }\n
                        v23 += 1;\n
                        v24 += 4;\n
                    } while (v23 != 32);\n
                    v23 = 32;\n
                    goto LABEL_402af4;\n
                }\n
                v8 += 1;\n
                v9 += 4;\n
            } while (v8 != 32);\n
            v8 = 32;\n
LABEL_402b96:\n
            v56 = *((v1 + 20));\n
            if (v56)\n
                v56->field_10 = *((v1 + 16));\n
            v1 = *((v1 + 16));\n
            if (!v1)\n
                return v1;\n
            *((v1 + 20)) = v56;\n
        }\n
    }\n
    if (!v2)\n
        return v1;\n
    if (v2->field_4)\n
        return v1;\n
    v11 = v1->field_10;\n
    if (!v11)\n
        return v1;\n
    if (!v11->field_4)\n
        return v1;\n
    v13 = 0;\n
    v14 = &size_class_limits;\n
    do\n
    {\n
        if (*(v14) >= v11->field_0)\n
        {\n
LABEL_402954:\n
            v19 = v11->field_c;\n
            if (v19)\n
                v19->field_8 = v11->field_8;\n
            v21 = v11->field_8;\n
            if (v21)\n
                v21->field_c = v19;\n
            if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v13]) == v11)\n
                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v13]) = v21;\n
            v11->field_8 = 0;\n
            v11->field_c = 0;\n
            v11->field_4 = 0;\n
            v27 = v1->field_0;\n
            v28 = 0;\n
            v29 = &size_class_limits;\n
            do\n
            {\n
                if (*(v29) >= v27)\n
                {\n
LABEL_4029b4:\n
                    v34 = v1->field_c;\n
                    if (v34)\n
                        v34->field_8 = v1->field_8;\n
                    v36 = v1->field_8;\n
                    if (v36)\n
                        v36->field_c = v34;\n
                    if (*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v28]) == v1)\n
                        *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v28]) = v36;\n
                    v1->field_8 = 0;\n
                    v1->field_c = 0;\n
                    v1->field_4 = 0;\n
                    v43 = v27 + v1->field_10->field_0;\n
                    v1->field_0 = v43;\n
                    v44 = 0;\n
                    v45 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v45) >= v43)\n
                        {\n
LABEL_402a14:\n
                            v1->field_4 = 1;\n
                            v51 = *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v44]);\n
                            if (!v51)\n
                            {\n
                                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v44]) = v1;\n
                            }\n
                            else\n
                            {\n
                                v1->field_8 = v51;\n
                                *((*(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v44]) + 12)) = v1;\n
                                *(&(&_GLOBAL_OFFSET_TABLE_)[1800 + 4 * v44]) = v1;\n
                                v1->field_c = 0;\n
                            }\n
                            v1 = v1->field_10;\n
                            goto LABEL_402b96;\n
                        }\n
                        v44 += 1;\n
                        v45 += 4;\n
                    } while (v44 != 32);\n
                    v44 = 32;\n
                    goto LABEL_402a14;\n
                }\n
                v28 += 1;\n
                v29 += 4;\n
            } while (v28 != 32);\n
            v28 = 32;\n
            goto LABEL_4029b4;\n
        }\n
        v13 += 1;\n
        v14 += 4;\n
    } while (v13 != 32);\n
    v13 = 32;\n
    goto LABEL_402954;\n
    goto LABEL_402b96;\n
}\n
", "4205489:sub_402bb1": null, "4205504:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4205560:sub_402bf8": null, "4205568:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v4 != v3)\n
                return v4 - v3;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4205629:sub_402c3d": null, "4205632:cgc_memcpy": "int cgc_memcpy(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = *((a0 + v2));\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4205681:sub_402c71": null, "4205696:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    char *v1;  // eax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = a0;\n
        v3 += 1;\n
    } while (v2 != v3);\n
    return v0;\n
}\n
", "4205744:cgc_output_number_printf": "int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    char v12;  // al\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    char v16;  // al\n
\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v14 = v5;\n
    if (v9 < v8)\n
    {\n
        v3 = v9;\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v9) /m v8;\n
        v3 = tmp_9 >> 32;\n
        v14 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v9) /m v8, v8, v7 - 1, v6);\n
    }\n
    v12 = v6;\n
    if (v7 > 0 && !v2)\n
    {\n
        tmp_2 = v7;\n
        v13 = v7 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                if (!(v12 & 1))\n
                    v1 = 32;\n
                else\n
                    v1 = 48;\n
                v0 = &v4;\n
                cgc_transmit(v14, &v1, 1);\n
                v12 = v6;\n
                v14 = v5;\n
                tmp_6 = v13;\n
                v13 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
    }\n
    if (!(v12 & 2))\n
    {\n
        v15 = v3;\n
        v16 = v15 + 87;\n
    }\n
    else\n
    {\n
        v15 = v3;\n
        v16 = v15 + 55;\n
    }\n
    if (v15 < 10)\n
        v16 = v15 + 48;\n
    v1 = v16;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4205865:sub_402d29": null, "4205985:sub_402da1": null, "4206000:cgc_fdprintf": "int cgc_fdprintf(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // [bp+0x10]\n
    unsigned int v8;  // [bp+0x14]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // edi\n
\n
    v3 = &v6;\n
    v9 = a0;\n
    if (!*(v9))\n
        return 0;\n
    v10 = &v2;\n
    do\n
    {\n
        a0 = v9 + 1;\n
        *(&v9) = *(v9);\n
        if (v1 == 37)\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                v11 = a0;\n
                a0 = v11 + 1;\n
                v17 = *(v11);\n
                v12 = v17;\n
                if (v12 - 49 >= 9)\n
                    break;\n
                v13 = cgc_strtol(v11, &a0);\n
            }\n
            switch (v12)\n
            {\n
            case 88:\n
                break;\n
            case 100:\n
                v14 = v3;\n
                v3 = v14 + 4;\n
                if (*(v14) < 0)\n
                {\n
LABEL_402f9f:\n
                    v1 = 45;\n
                    v0 = &v2;\n
                    cgc_transmit(v14, &v1, 1);\n
                }\n
                goto LABEL_402f76;\n
            case 115:\n
                v15 = v3;\n
                v3 = v15 + 4;\n
                v16 = *(v15);\n
                v10 = &v2;\n
                if (cgc_strlen())\n
                {\n
                    v18 = 0;\n
                    do\n
                    {\n
                        v1 = *((v16 + v18));\n
                        v0 = v10;\n
                        cgc_transmit(v5, &v1, 1);\n
                        v18 += 1;\n
                        v10 = &v2;\n
                    } while (v18 < cgc_strlen(v16, &v1, 1));\n
                }\n
                goto LABEL_402e08;\n
            case 117:\n
                v3 += 4;\n
                goto LABEL_402f76;\n
            case 120:\n
                break;\n
            case 99:\n
                v17 = v3;\n
                v3 = v17 + 4;\n
                *(&v17) = *(v17);\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
LABEL_402eb4:\n
                v1 = v17;\n
                goto LABEL_402f83;\n
            default:\n
                if (v12 == 37)\n
                {\n
                    v1 = 37;\n
LABEL_402f83:\n
                    v0 = &v2;\n
                    goto LABEL_402f9f;\n
                }\n
                if (v12 == 48)\n
                    goto LABEL_0x402e80;\n
                else\n
                    goto LABEL_402eb4;\n
            }\n
            v3 += 4;\n
LABEL_402f76:\n
            cgc_output_number_printf(v5, a0, *(&v6), v7, v8);\n
            v10 = &v2;\n
            goto LABEL_402e08;\n
        }\n
        v1 = v9;\n
        v0 = v10;\n
        cgc_transmit(v5, &v1, 1);\n
        v10 = &v2;\n
LABEL_402e08:\n
        v9 = a0;\n
    } while (*(v9));\n
    return 0;\n
}\n
", "4206050:sub_402de2": null, "4206130:sub_402e32": null, "4206218:sub_402e8a": null, "4206572:sub_402fec": null, "4206576:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v4, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_11;  // tmp #11\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_2;  // tmp #2\n
    int tmp_12;  // tmp #12\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
    struct struct_0 **v9;  // ebp\n
    unsigned int *v10;  // edi\n
    unsigned int v11;  // eax\n
    unsigned int v13;  // eax\n
    char v14;  // bl\n
    unsigned int v15;  // esi\n
    char v16;  // cl\n
    char v17;  // cl\n
    char *v18;  // eax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v8 = a3;\n
    v13 = a1;\n
    v9 = a0;\n
    v10 = v4;\n
    if (v13 < a2)\n
    {\n
        v14 = a4;\n
        if (v8 <= 0)\n
            goto LABEL_403081;\n
    }\n
    else\n
    {\n
        tmp_11 = (0 CONCAT v13) /m a2;\n
        v11 = (0 CONCAT v13) /m a2;\n
        v0 = tmp_11 >> 32;\n
        cgc_output_number_sprintf(v10, v9, v11, a2, v8 - 1, a4);\n
        v13 = v0;\n
        v14 = a4;\n
        if (v8 <= 0)\n
            goto LABEL_403081;\n
    }\n
    if (v13 < a2)\n
    {\n
        tmp_2 = v8;\n
        v15 = v8 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                *(v9)->field_0 = ((v14 & 1) * 16) | 32;\n
                *(v9) = *(v9) + 1;\n
                *(v10) = *(v10) + 1;\n
                tmp_12 = v15;\n
                v15 -= 1;\n
            } while (tmp_12 != 1);\n
        }\n
    }\n
LABEL_403081:\n
    v16 = (!(v13 < 10) ? 48 : ((!(v14 & 2)) * 32 + 55));\n
    v17 = v16 + v13;\n
    v18 = *(v9);\n
    *(v18) = v17;\n
    *(v9) = *(v9) + 1;\n
    *(v10) = *(v10) + 1;\n
    return v18;\n
}\n
", "4206768:cgc_sprintf": "int cgc_sprintf(char *v8, struct struct_0 **a0)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct struct_1 **v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp+0xc]\n
    struct struct_0 **v10;  // eax\n
    char *v11;  // ecx\n
    unsigned int v12;  // eax\n
    struct struct_0 **v13;  // ecx\n
    struct struct_0 **v14;  // dl\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    char *v16;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // edi\n
    struct struct_1 **v18;  // ecx\n
    char *v19;  // ecx, Other Possible Types: unsigned int\n
    struct struct_1 **v20;  // eax\n
    char *v21;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v22;  // edi\n
    struct struct_1 **v23;  // ecx\n
    char *v24;  // edx\n
    unsigned int v25;  // edi\n
    char *v26;  // eax\n
\n
    v5 = 0;\n
    v6 = &v9;\n
    while (true)\n
    {\n
        v10 = a0;\n
        if (!*(v10))\n
            break;\n
        a0 = v10 + 1;\n
        *(&v10) = *(v10);\n
        if (*(&v10) != 37)\n
        {\n
            v11 = v8;\n
            *(v11) = v10;\n
            v8 = v11 + 1;\n
            v5 += 1;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            v15 = 0;\n
            while (true)\n
            {\n
                v12 = v15 | 1;\n
                do\n
                {\n
                    v17 = v15;\n
                    v13 = a0;\n
                    a0 = v13 + 1;\n
                    v14 = *(v13);\n
                    v15 = v12;\n
                } while (v14 == 48);\n
                switch (v14)\n
                {\n
                case 37:\n
                    v16 = v8;\n
                    *(v16) = 37;\n
                    goto LABEL_403237;\n
                case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                    v4 = 10;\n
                    v7 = cgc_strtol(v13, &a0);\n
                    v15 = v17;\n
                    continue;\n
                case 100:\n
                    v18 = v6;\n
                    v6 = v18 + 1;\n
                    v19 = *(v18);\n
                    if (v19 < 0)\n
                    {\n
                        v24 = v8;\n
                        *(v24) = 45;\n
                        v8 = v24 + 1;\n
                        v5 += 1;\n
                        v19 = -(v19);\n
                    }\n
                    v3 = v17;\n
                    v2 = v7;\n
                    v1 = 10;\n
                    v0 = v19;\n
LABEL_4031be:\n
                    cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                    break;\n
                case 115:\n
                    v20 = v6;\n
                    v6 = v20 + 1;\n
                    v21 = v8;\n
                    v22 = v5;\n
                    if (cgc_strlen())\n
                    {\n
                        v7 = v22;\n
                        v25 = 0;\n
                        do\n
                        {\n
                            v21[v25] = (*(v20))[v25].field_0;\n
                            v25 += 1;\n
                        } while (v25 < cgc_strlen());\n
                        v21 = &v21[v25];\n
                        v22 = v7 + v25;\n
                    }\n
                    v8 = v21;\n
                    v5 = v22;\n
                    break;\n
                case 88:\n
                    v17 |= 2;\n
                case 120:\n
                    v23 = v6;\n
                    v6 = v23 + 1;\n
                    v3 = v17;\n
                    v2 = v7;\n
                    v1 = 16;\n
                    v0 = &*(v23)->field_0;\n
                    goto LABEL_4031be;\n
                default:\n
                    v16 = v8;\n
                    *(v16) = v14;\n
LABEL_403237:\n
                    v8 = v16 + 1;\n
                    v5 += 1;\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    v26 = v8;\n
    v8 = v26 + 1;\n
    *(v26) = 0;\n
    return v5;\n
}\n
", "4206804:sub_4030d4": null, "4207200:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
    {\n
        v5 = cgc_malloc(v1);\n
        return v5;\n
    }\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            return v5;\n
        }\n
    }\n
    return 0;\n
}\n
", "4207318:sub_4032d6": null, "4207328:cgc_strcasecmp": "int cgc_strcasecmp(char v0[2], char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    char v2[2];  // ebp, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax, Other Possible Types: char\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v6 = v0[0];\n
    while (true)\n
    {\n
        if (!v6)\n
            return cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
        v3 = *(v1);\n
        if (!v3)\n
            return cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
        if (v6 != v3)\n
        {\n
            v5 = cgc_tolower(v6);\n
            if (v5 != cgc_tolower(*(v1)))\n
                return cgc_tolower(*(v2)) - cgc_tolower(*(v1));\n
        }\n
        v1 += 1;\n
        v6 = *((v2 + 1));\n
        v2 += 1;\n
    }\n
}\n
", "4207450:sub_40335a": null, "4207456:cgc_strcat": "int cgc_strcat(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v4 = cgc_strlen() + v2;\n
    v0 = a0;\n
    cgc_strcpy(v4);\n
    return v2;\n
}\n
", "4207513:sub_403399": null, "4207520:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4207554:sub_4033c2": null, "4207568:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    if (!*(v2))\n
        return *(a0) - *(v2);\n
    v3 = v2 + 1;\n
    while (*(v1))\n
    {\n
        if (v4 != *(v1))\n
            break;\n
        v1 += 1;\n
        v4 = *(v3);\n
        v3 += 1;\n
        if (!v4)\n
            break;\n
    }\n
    return *(v1) - v4;\n
}\n
", "4207632:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v3);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4207692:sub_40344c": null, "4207696:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4207723:sub_40346b": null, "4207728:cgc_strncasecmp": "int cgc_strncasecmp(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char v4;  // cl\n
    char *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    for (v5 = v0; v1 != 1; v2 += 1)\n
    {\n
        v3 = *(v5);\n
        if (!v3)\n
            break;\n
        v4 = *(v2);\n
        if (!v4)\n
            break;\n
        if (v3 != v4)\n
        {\n
            v1 = a1;\n
            if (cgc_tolower(v3) != cgc_tolower(*(v2)))\n
                break;\n
        }\n
        v5 += 1;\n
    }\n
    v6 = cgc_tolower(*(v5)) - cgc_tolower(*(v2));\n
    return v6;\n
}\n
", "4207765:sub_403495": null, "4207876:sub_403504": null, "4207888:cgc_strncmp": "int cgc_strncmp(char *v0, char *a0, unsigned int a1)\n
{\n
    int tmp_4;  // tmp #4\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // edx\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // esi\n
    char *v4;  // edi\n
    char v5;  // bl\n
    unsigned int v6;  // edx\n
    char *v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = a0;\n
    v7 = v0;\n
    tmp_4 = v1;\n
    v6 = v1 - 1;\n
    if (tmp_4 != 1)\n
    {\n
        v3 = &v7[v6];\n
        v4 = &v2[v6];\n
        while (true)\n
        {\n
            v5 = *(v7);\n
            if (!v5)\n
                break;\n
            if (!*(v2))\n
                break;\n
            if (v5 != *(v2))\n
                break;\n
            v7 += 1;\n
            v2 += 1;\n
            tmp_8 = v6;\n
            v6 -= 1;\n
            if (tmp_8 == 1)\n
            {\n
                v7 = v3;\n
                v2 = v4;\n
                break;\n
            }\n
        }\n
    }\n
    v8 = *(v2) - *(v7);\n
    return v8;\n
}\n
", "4207968:cgc_strsep": "int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    struct struct_0 **v1;  // esi\n
    char v2[2];  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // al, Other Possible Types: char\n
    unsigned int v4;  // eax\n
    char v6[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = v2[0];\n
    if (v2[0])\n
    {\n
        while (true)\n
        {\n
            v4 = cgc_strchr(a0, v3);\n
            if (v4)\n
                break;\n
            v3 = *((v2 + 1));\n
            v2 += 1;\n
            if (!v3)\n
                break;\n
        }\n
    }\n
    if (!*(v2))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        v6 = v2 + 1;\n
    }\n
    *(v1) = v6;\n
    return *(v1);\n
}\n
", "4208078:sub_4035ce": null, "4208080:cgc_strtol": "int cgc_strtol(char *v3, unsigned int *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v4;  // esi\n
    unsigned int *v5;  // ecx, Other Possible Types: unsigned int\n
    char *v6;  // edx, Other Possible Types: unsigned int\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // ebx, Other Possible Types: unsigned int\n
    char v9;  // bl\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // ecx\n
    void* v13;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    char *v17;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = a1;\n
    v5 = a0;\n
    v6 = v3;\n
    v7 = 0;\n
    if (v4 > 36)\n
    {\n
        v8 = 0;\n
        v0 = v6;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        v0 = v6;\n
        if (v4 != 1)\n
        {\n
            v10 = v6;\n
            while (true)\n
            {\n
                v9 = *(v10);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v9 != 32)\n
                    break;\n
                v10 += 1;\n
            }\n
            v11 = 0;\n
            *(&v11) = v9 == 45;\n
            v12 = (*((v10 + v11)) == 43) + v11;\n
            v0 = v10 + v12;\n
            if (!v4)\n
            {\n
                v4 = 10;\n
                if (*(v0) == 48)\n
                {\n
                    if ((*((v10 + v12 + 1)) | 32) == 120)\n
                    {\n
                        v0 = v10 + v12 + 2;\n
                        v4 = 16;\n
                    }\n
                    else\n
                    {\n
                        v0 = v10 + v12 + 1;\n
                        v4 = 8;\n
                    }\n
                }\n
            }\n
            else if (v4 == 16)\n
            {\n
                v4 = 16;\n
                if (*(v0) == 48 && (*((v10 + v12 + 1)) | 32) == 120)\n
                    v0 = v10 + v12 + 2;\n
            }\n
            v13 = 0;\n
            v14 = 0;\n
            v1 = v4;\n
            while (true)\n
            {\n
                v15 = *((v0 + v14));\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                {\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                        break;\n
                    v2 = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, ((cl<1> & 0xdf<8>) - 0x41<8>)), 0x1a<32>, 0x0<32>);\n
                }\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v16 = v15 - 48;\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                else if (!v2)\n
                {\n
                    v16 = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>);\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                else\n
                {\n
                    v16 = v15 + [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Conv(32->8, ecx<4>) - 0x41<8>)), 0x1a<32>, 0x0<32>) * 32 - 87;\n
                    v4 = v1;\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                v13 = v4 * v13 + v16;\n
                v14 += 1;\n
            }\n
            v7 = -(v13);\n
            if (v9 != 45)\n
                v7 = v13;\n
            v8 = v14;\n
            v0 += v14;\n
            v5 = a0;\n
            v6 = v3;\n
        }\n
    }\n
    if (!v5)\n
        return v7;\n
    v17 = v0;\n
    if (!v8)\n
        v17 = v6;\n
    *(v5) = v17;\n
    return v7;\n
}\n
", "4208127:sub_4035ff": null, "4208366:sub_4036ee": null, "4208471:sub_403757": null, "4208480:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4208521:sub_403789": null, "4208528:cgc_contains": "int cgc_contains(unsigned int *v0, char *a0)\n
{\n
    unsigned int *v1;  // edi\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = v1 + 1;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v2, a0, cgc_strlen(v2)))\n
            return 1;\n
        v2 = *(v3);\n
        v3 += 4;\n
        if (!v2)\n
            return 0;\n
    }\n
}\n
", "4208629:sub_4037f5": null, "4208640:cgc_validate_edu": "extern unsigned int g_409048;\n
\n
int cgc_validate_edu(char *v0)\n
{\n
    char *v1;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = \"HS\";\n
    v2 = &g_409048;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v1, v0, cgc_strlen(v1)))\n
            return 1;\n
        v1 = *(v2);\n
        v2 += 4;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4208741:sub_403865": null, "4208752:cgc_validate_eye_color": "extern unsigned int g_409058;\n
\n
int cgc_validate_eye_color(char *v0)\n
{\n
    char *v1;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = \"Black\";\n
    v2 = &g_409058;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v1, v0, cgc_strlen(v1)))\n
            return 1;\n
        v1 = *(v2);\n
        v2 += 4;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4208853:sub_4038d5": null, "4208864:cgc_validate_hair_color": "extern unsigned int g_409084;\n
\n
int cgc_validate_hair_color(char *v0)\n
{\n
    char *v1;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = \"Bald\";\n
    v2 = &g_409084;\n
    while (true)\n
    {\n
        if (cgc_strncmp(v1, v0, cgc_strlen(v1)))\n
        {\n
            v1 = *(v2);\n
            v2 += 4;\n
            if (!v1)\n
                return 0;\n
        }\n
        else\n
        {\n
            return 1;\n
        }\n
    }\n
}\n
", "4208965:sub_403945": null, "4208976:cgc_validate_state": "extern unsigned int g_4090c0;\n
\n
int cgc_validate_state(char *v0)\n
{\n
    char *v1;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = \"AL\";\n
    v2 = &g_4090c0;\n
    while (true)\n
    {\n
        if (!cgc_strncmp(v1, v0, cgc_strlen(v1)))\n
            return 1;\n
        v1 = *(v2);\n
        v2 += 4;\n
        if (!v1)\n
            return 0;\n
    }\n
}\n
", "4209077:sub_4039b5": null, "4209088:cgc_validate_suffix": "extern unsigned int g_409190;\n
\n
int cgc_validate_suffix(char *v0)\n
{\n
    char *v1;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = \"Jr\";\n
    v2 = &g_409190;\n
    while (true)\n
    {\n
        if (cgc_strncmp(v1, v0, cgc_strlen(v1)))\n
        {\n
            v1 = *(v2);\n
            v2 += 4;\n
            if (!v1)\n
                return 0;\n
        }\n
        else\n
        {\n
            return 1;\n
        }\n
    }\n
}\n
", "4209189:sub_403a25": null, "4209200:cgc_within": "int cgc_within(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = a1;\n
    return v1 <= a0 & !(v1 < v0);\n
}\n
", "4209224:sub_403a48": null, "4209232:cgc_all_digits": "int cgc_all_digits(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (!v5)\n
    {\n
        return v0 ^ 1;\n
    }\n
    else if (!cgc_isdigit(v4[0]))\n
    {\n
        return v0 ^ 1;\n
    }\n
    else\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                return v0 ^ 1;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                return v0 ^ 1;\n
        }\n
    }\n
}\n
", "4209348:sub_403ac4": null, "4209360:cgc_validate_day": "int cgc_validate_day(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (v5 && cgc_isdigit(v4[0]))\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                break;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                break;\n
        }\n
    }\n
    if (!v0)\n
        return cgc_strtol(v4, NULL, 10) - 1 < 31;\n
    return 0;\n
}\n
", "4209513:sub_403b69": null, "4209520:cgc_validate_month": "int cgc_validate_month(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (v5 && cgc_isdigit(v4[0]))\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                break;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                break;\n
        }\n
    }\n
    if (!v0)\n
        return cgc_strtol(v4, NULL, 10) - 1 < 12;\n
    return 0;\n
}\n
", "4209673:sub_403c09": null, "4209680:cgc_validate_year": "int cgc_validate_year(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (v5 && cgc_isdigit(v4[0]))\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                break;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                break;\n
        }\n
    }\n
    if (!v0)\n
        return cgc_strtol(v4, NULL, 10) - 1900 < 115;\n
    return 0;\n
}\n
", "4209836:sub_403cac": null, "4209840:cgc_validate_height_inches": "int cgc_validate_height_inches(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (v5 && cgc_isdigit(v4[0]))\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                break;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                break;\n
        }\n
    }\n
    if (!v0)\n
        return cgc_strtol(v4, NULL, 10) < 12;\n
    return 0;\n
}\n
", "4209990:sub_403d46": null, "4210000:cgc_validate_height_feet": "int cgc_validate_height_feet(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (v5 && cgc_isdigit(v4[0]))\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                break;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                break;\n
        }\n
    }\n
    if (!v0)\n
        return cgc_strtol(v4, NULL, 10) - 1 < 9;\n
    return 0;\n
}\n
", "4210153:sub_403de9": null, "4210160:cgc_validate_weight": "int cgc_validate_weight(char v2[2])\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char v4[2];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (v5 && cgc_isdigit(v4[0]))\n
    {\n
        v6 = 1;\n
        while (true)\n
        {\n
            v7 = cgc_strlen(v4);\n
            v0 = v6 < v7;\n
            if (v6 >= v7)\n
                break;\n
            v8 = cgc_isdigit(v4[v6]);\n
            v6 += 1;\n
            if (!v8)\n
                break;\n
        }\n
    }\n
    if (!v0)\n
        return cgc_strtol(v4, NULL, 10) - 50 < 451;\n
    return 0;\n
}\n
", "4210316:sub_403e8c": null, "4210320:cgc_validate_name": "int cgc_validate_name(char *v2)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    char *v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = cgc_strlen(v4);\n
    v0 = v5;\n
    if (!v5)\n
        return ~(v0) & 1;\n
    v6 = 0;\n
    while (true)\n
    {\n
        if (!cgc_isprint(v4[v6]) && v4[v6] != 39)\n
            return ~(v0) & 1;\n
        v6 += 1;\n
        v7 = cgc_strlen(v4);\n
        v0 = v6 < v7;\n
        if (v6 >= v7)\n
            return ~(v0) & 1;\n
    }\n
}\n
", "4210363:sub_403ebb": null, "4210429:sub_403efd": null, "4210432:cgc_validate_email": "int cgc_validate_email(char *v2)\n
{\n
    char v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // edi\n
    char *v4;  // edi\n
    unsigned int v6;  // ebp\n
    void* v7;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (cgc_strlen(v4) < 3)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(v4) > 64)\n
    {\n
        return 0;\n
    }\n
    else if (!cgc_strlen(v4))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        v7 = 0;\n
        while (true)\n
        {\n
            if (*(&v0) == 64)\n
            {\n
                v7 = 1;\n
                if (false)\n
                    break;\n
            }\n
            else\n
            {\n
                v0 = v4[v6];\n
                if (!cgc_isalnum(*(&v0)) && !([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x2d<8>)), 0x2<32>, 0x0<32>)) && v0 != 95)\n
                    break;\n
            }\n
            v6 += 1;\n
            if (v6 >= cgc_strlen(v4))\n
                return v7;\n
        }\n
        return 0;\n
    }\n
}\n
", "4210501:sub_403f45": null, "4210590:sub_403f9e": null, "4210592:cgc_validate_street": "int cgc_validate_street(char *v2)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // edi\n
    char *v4;  // edi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // esi\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (cgc_strlen(v4) > 32)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(v4) < 3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v5 = cgc_strlen(v4);\n
        v0 = v5;\n
        if (!v5)\n
            return ~(v0) & 1;\n
        v7 = 0;\n
        do\n
        {\n
            if (!cgc_isalnum(v4[v7]))\n
            {\n
                if (!(!cgc_isspace(v4[v7])))\n
                    continue;\n
                if (!cgc_ispunct(v4[v7]))\n
                    break;\n
                continue;\n
            }\n
            v7 += 1;\n
            v6 = cgc_strlen(v4);\n
            v0 = v7 < v6;\n
        } while (v7 < v6);\n
    }\n
}\n
", "4210663:sub_403fe7": null, "4210761:sub_404049": null, "4210768:cgc_validate_city": "int cgc_validate_city(char *v2)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // edi\n
    char *v4;  // edi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // esi\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (cgc_strlen(v4) > 32)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(v4) < 4)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v5 = cgc_strlen(v4);\n
        v0 = v5;\n
        if (!v5)\n
            return ~(v0) & 1;\n
        v7 = 0;\n
        do\n
        {\n
            if (!cgc_isalnum(v4[v7]))\n
            {\n
                if (!(!cgc_isspace(v4[v7])))\n
                    continue;\n
                if (!cgc_ispunct(v4[v7]))\n
                    break;\n
                continue;\n
            }\n
            v7 += 1;\n
            v6 = cgc_strlen(v4);\n
            v0 = v7 < v6;\n
        } while (v7 < v6);\n
    }\n
}\n
", "4210839:sub_404097": null, "4210937:sub_4040f9": null, "4210944:cgc_validate_zip": "int cgc_validate_zip(char *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
    void* v4;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) != 5)\n
    {\n
        return 0;\n
    }\n
    else if (!cgc_isdigit(*(v3)))\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v5 = v4;\n
            if (v4 == 4)\n
                break;\n
            v6 = cgc_isdigit(v3[1 + v4]);\n
            v4 += 1;\n
            if (!v6)\n
                break;\n
        }\n
        return !(v5 < 4);\n
    }\n
}\n
", "4211052:sub_40416c": null, "4211056:cgc_validate_phone": "int cgc_validate_phone(char *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) != 12)\n
        return 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v5 = v3[v4];\n
        if ((v4 & 2147483643) != 3)\n
        {\n
            if (!cgc_isdigit(v5))\n
                break;\n
        }\n
        else\n
        {\n
            if (v5 != 45)\n
                break;\n
        }\n
        v4 += 1;\n
        if (v4 == 12)\n
            return 1;\n
    }\n
    return 0;\n
}\n
", "4211099:sub_40419b": null, "4211161:sub_4041d9": null, "4211168:cgc_validate_sex": "int cgc_validate_sex(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) == 1)\n
        return *(v3) == 70 | *(v3) == 77;\n
    return 0;\n
}\n
", "4211227:sub_40421b": null, "4211232:cgc_validate_yes_no": "int cgc_validate_yes_no(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) == 1)\n
        return *(v3) == 78 | *(v3) == 89;\n
    return 0;\n
}\n
", "4211291:sub_40425b": null, "4211296:cgc_validate_gpa": "int cgc_validate_gpa(char v1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // esi\n
    char v3[2];  // esi\n
    unsigned int v4;  // edi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) != 4)\n
        return 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 != 1)\n
        {\n
            if (!cgc_isdigit(v3[v4]))\n
                break;\n
        }\n
        else\n
        {\n
            if (v3[1] != 46)\n
                break;\n
        }\n
        v4 += 1;\n
        if (v4 == 4)\n
            return 1;\n
    }\n
    return 0;\n
}\n
", "4211339:sub_40428b": null, "4211395:sub_4042c3": null, "4211408:cgc_init_af86": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char address;\n
extern char background;\n
extern char candidate;\n
extern char city;\n
extern char contact;\n
extern char dob_day;\n
extern char dob_month;\n
extern char dob_year;\n
extern char drugz;\n
extern char ecity;\n
extern char education;\n
extern char eem;\n
extern char eey;\n
extern char employeer;\n
extern char employment;\n
extern char esm;\n
extern char estate;\n
extern char estreet;\n
extern char esy;\n
extern char eye_color;\n
extern char ezip;\n
extern char fin;\n
extern char final;\n
extern char first_name;\n
extern void* g_4093a0;\n
extern unsigned int g_4093a4;\n
extern unsigned int g_4093a8;\n
extern unsigned int g_4093b4;\n
extern unsigned int g_4093b8;\n
extern unsigned int g_4093bc;\n
extern unsigned int g_4093c8;\n
extern unsigned int g_4093cc;\n
extern unsigned int g_4093d0;\n
extern unsigned int g_4093dc;\n
extern unsigned int g_4093e0;\n
extern unsigned int g_4093e4;\n
extern unsigned int g_4093f0;\n
extern unsigned int g_4093f4;\n
extern unsigned int g_4093f8;\n
extern unsigned int g_409404;\n
extern unsigned int g_409408;\n
extern unsigned int g_40940c;\n
extern void* g_409424;\n
extern unsigned int g_409428;\n
extern void* g_409440;\n
extern unsigned int g_409444;\n
extern void* g_40945c;\n
extern unsigned int g_409460;\n
extern void* g_409478;\n
extern unsigned int g_40947c;\n
extern void* g_409494;\n
extern unsigned int g_409498;\n
extern void* g_4094b0;\n
extern unsigned int g_4094b4;\n
extern unsigned int g_4094cc;\n
extern unsigned int g_4094d0;\n
extern unsigned int g_4094e8;\n
extern unsigned int g_4094ec;\n
extern unsigned int g_409504;\n
extern unsigned int g_409508;\n
extern unsigned int g_409520;\n
extern unsigned int g_409524;\n
extern unsigned int g_40953c;\n
extern unsigned int g_409540;\n
extern unsigned int g_409558;\n
extern unsigned int g_40955c;\n
extern unsigned int g_409574;\n
extern unsigned int g_409578;\n
extern unsigned int g_409590;\n
extern unsigned int g_409594;\n
extern unsigned int g_4095ac;\n
extern unsigned int g_4095b0;\n
extern unsigned int g_4095c8;\n
extern unsigned int g_4095cc;\n
extern unsigned int g_4095e4;\n
extern unsigned int g_4095e8;\n
extern unsigned int g_409600;\n
extern void* g_409604;\n
extern unsigned int g_40961c;\n
extern unsigned int g_409620;\n
extern unsigned int g_409638;\n
extern unsigned int g_40963c;\n
extern unsigned int g_409654;\n
extern void* g_409658;\n
extern unsigned int g_409670;\n
extern unsigned int g_409674;\n
extern unsigned int g_40968c;\n
extern unsigned int g_409690;\n
extern unsigned int g_4096a8;\n
extern unsigned int g_4096ac;\n
extern unsigned int g_4096c4;\n
extern unsigned int g_4096c8;\n
extern unsigned int g_4096e0;\n
extern unsigned int g_4096e4;\n
extern unsigned int g_4096fc;\n
extern void* g_409700;\n
extern unsigned int g_409718;\n
extern unsigned int g_40971c;\n
extern unsigned int g_409734;\n
extern unsigned int g_409738;\n
extern unsigned int g_409750;\n
extern unsigned int g_409754;\n
extern unsigned int g_40976c;\n
extern unsigned int g_409770;\n
extern unsigned int g_409788;\n
extern unsigned int g_40978c;\n
extern unsigned int g_4097a4;\n
extern unsigned int g_4097a8;\n
extern unsigned int g_4097c0;\n
extern unsigned int g_4097c4;\n
extern unsigned int g_4097dc;\n
extern unsigned int g_4097e0;\n
extern unsigned int g_4097f8;\n
extern unsigned int g_4097fc;\n
extern unsigned int g_409814;\n
extern unsigned int g_409818;\n
extern unsigned int g_409830;\n
extern void* g_409834;\n
extern unsigned int g_40984c;\n
extern unsigned int g_409850;\n
extern unsigned int g_409868;\n
extern unsigned int g_40986c;\n
extern unsigned int g_409884;\n
extern unsigned int g_409888;\n
extern unsigned int g_4098a0;\n
extern unsigned int g_4098a4;\n
extern unsigned int g_4098bc;\n
extern unsigned int g_4098c0;\n
extern unsigned int g_4098d8;\n
extern unsigned int g_4098dc;\n
extern unsigned int g_4098f4;\n
extern unsigned int g_4098f8;\n
extern unsigned int g_409910;\n
extern unsigned int g_409914;\n
extern unsigned int g_40992c;\n
extern unsigned int g_409930;\n
extern unsigned int g_409948;\n
extern unsigned int g_40994c;\n
extern unsigned int g_409964;\n
extern unsigned int g_409968;\n
extern unsigned int g_409980;\n
extern unsigned int g_409984;\n
extern unsigned int g_40999c;\n
extern void* g_4099a0;\n
extern unsigned int g_4099b8;\n
extern void* g_4099bc;\n
extern unsigned int g_409a7c;\n
extern void* g_409a80;\n
extern char gpa;\n
extern char hair_color;\n
extern char height_feet;\n
extern char height_inches;\n
extern char highest_edu;\n
extern char hphone;\n
extern char last_name;\n
extern char major;\n
extern char middle_name;\n
extern char mim;\n
extern char miy;\n
extern char owned;\n
extern char pemail;\n
extern char school_name;\n
extern char semail;\n
extern char sex;\n
extern char sphone;\n
extern char state;\n
extern char street;\n
extern char suffix;\n
extern char sup_first_name;\n
extern char sup_last_name;\n
extern char sup_title;\n
extern char wcity;\n
extern char weight;\n
extern char wem;\n
extern char wemail;\n
extern char wey;\n
extern char wphone;\n
extern char wsm;\n
extern char wstate;\n
extern char wstreet;\n
extern char wsy;\n
extern char wzip;\n
extern char zip;\n
\n
int cgc_init_af86()\n
{\n
    g_4093a0 = 0;\n
    g_4093b4 = &candidate;\n
    g_4093a4 = &contact;\n
    g_4093c8 = &contact;\n
    g_4093b8 = &address;\n
    g_4093dc = &address;\n
    g_4093cc = &education;\n
    g_4093f0 = &education;\n
    g_4093e0 = &employment;\n
    g_409404 = &employment;\n
    g_409408 = &fin;\n
    g_4093f4 = &final;\n
    g_409a7c = &final;\n
    g_4093a8 = &last_name;\n
    g_409424 = 0;\n
    g_4094cc = &last_name;\n
    g_409428 = &first_name;\n
    g_4094e8 = &first_name;\n
    g_4094d0 = &middle_name;\n
    g_409504 = &middle_name;\n
    g_4094ec = &suffix;\n
    g_409520 = &suffix;\n
    g_409508 = &dob_month;\n
    g_40953c = &dob_month;\n
    g_409524 = &dob_day;\n
    g_409558 = &dob_day;\n
    g_409540 = &dob_year;\n
    g_409574 = &dob_year;\n
    g_40955c = &height_feet;\n
    g_409590 = &height_feet;\n
    g_409578 = &height_inches;\n
    g_4095ac = &height_inches;\n
    g_409594 = &weight;\n
    g_4095c8 = &weight;\n
    g_4095b0 = &sex;\n
    g_4095e4 = &sex;\n
    g_4095e8 = &eye_color;\n
    g_4095cc = &hair_color;\n
    g_409600 = &hair_color;\n
    g_4093bc = &pemail;\n
    g_409440 = 0;\n
    g_40961c = &pemail;\n
    g_409444 = &wemail;\n
    g_409638 = &wemail;\n
    g_40963c = &wphone;\n
    g_409620 = &hphone;\n
    g_409654 = &hphone;\n
    g_4093d0 = &mim;\n
    g_40945c = 0;\n
    g_409670 = &mim;\n
    g_409460 = &miy;\n
    g_40968c = &miy;\n
    g_409674 = &street;\n
    g_4096a8 = &street;\n
    g_409690 = &city;\n
    g_4096c4 = &city;\n
    g_4096ac = &state;\n
    g_4096e0 = &state;\n
    g_4096e4 = &owned;\n
    g_4096c8 = &zip;\n
    g_4096fc = &zip;\n
    g_4093e4 = &highest_edu;\n
    g_409478 = 0;\n
    g_409718 = &highest_edu;\n
    g_40947c = &esm;\n
    g_409734 = &esm;\n
    g_40971c = &esy;\n
    g_409750 = &esy;\n
    g_409738 = &eem;\n
    g_40976c = &eem;\n
    g_409754 = &eey;\n
    g_409788 = &eey;\n
    g_409770 = &school_name;\n
    g_4097a4 = &school_name;\n
    g_40978c = &estreet;\n
    g_4097c0 = &estreet;\n
    g_4097a8 = &ecity;\n
    g_4097dc = &ecity;\n
    g_4097c4 = &estate;\n
    g_4097f8 = &estate;\n
    g_4097e0 = &ezip;\n
    g_409814 = &ezip;\n
    g_409818 = &major;\n
    g_4097fc = &gpa;\n
    g_409830 = &gpa;\n
    g_4093f8 = &employeer;\n
    g_409494 = 0;\n
    g_40984c = &employeer;\n
    g_409498 = &wsm;\n
    g_409868 = &wsm;\n
    g_409850 = &wsy;\n
    g_409884 = &wsy;\n
    g_40986c = &wem;\n
    g_4098a0 = &wem;\n
    g_409888 = &wey;\n
    g_4098bc = &wey;\n
    g_4098a4 = &wstreet;\n
    g_4098d8 = &wstreet;\n
    g_4098c0 = &wcity;\n
    g_4098f4 = &wcity;\n
    g_4098dc = &wstate;\n
    g_409910 = &wstate;\n
    g_4098f8 = &wzip;\n
    g_40992c = &wzip;\n
    g_409914 = &sup_last_name;\n
    g_409948 = &sup_last_name;\n
    g_409930 = &sup_first_name;\n
    g_409964 = &sup_first_name;\n
    g_40994c = &sup_title;\n
    g_409980 = &sup_title;\n
    g_409984 = &semail;\n
    g_409968 = &sphone;\n
    g_40999c = &sphone;\n
    g_4094b0 = 0;\n
    g_4094b4 = &background;\n
    g_40940c = &drugz;\n
    g_4099b8 = &drugz;\n
    g_409a80 = 0;\n
    g_409604 = 0;\n
    g_409658 = 0;\n
    g_409700 = 0;\n
    g_409834 = 0;\n
    g_4099a0 = 0;\n
    g_4099bc = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4212575:sub_40475f": null, "4212576:cgc_handle_next": "typedef struct struct_3 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
    struct struct_2 *field_2c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    char field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[8];\n
    struct struct_2 *field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
int cgc_handle_next(struct_3 *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    struct_3 *v4;  // esi\n
    struct_0 *v5;  // eax\n
    char *v6;  // eax\n
    unsigned int v7[4];  // eax\n
    char v8;  // dl\n
    char v9;  // cl\n
    unsigned int v11;  // eax\n
    struct_2 *v12;  // eax, Other Possible Types: unsigned int\n
    struct_2 *v13;  // ecx\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = v4->field_28;\n
    if (!v5->field_0)\n
        return 1;\n
    if (!v5->field_10)\n
    {\n
        v6 = v5->field_8->field_0;\n
        if (!v6)\n
        {\n
            v11 = \"%s\";\n
        }\n
        else if (!cgc_strncmp(v6, \"Fin\", 3))\n
        {\n
            v11 = \"\\n
Final Questions\\n
\";\n
        }\n
        else\n
        {\n
            v0 = \"\\n
%s Form\\n
\";\n
            goto LABEL_404829;\n
        }\n
        v0 = v11;\n
LABEL_404829:\n
        cgc_fdprintf(1, v0);\n
        cgc_fdprintf(1, \"You must complete the previous page before proceeding to this page\\n
\");\n
    }\n
    else\n
    {\n
        v9 = 1;\n
        if (!v5)\n
        {\n
            v8 = 1;\n
        }\n
        else\n
        {\n
            v7 = v5->field_8;\n
            if (!v7)\n
            {\n
                v8 = 0;\n
            }\n
            else\n
            {\n
                v4->field_28 = &v7;\n
                v4->field_2c = v7[3];\n
                v8 = 0;\n
                v9 = 0;\n
            }\n
        }\n
        if (v8)\n
        {\n
            return (v8 ^ 1) * 3 - 1;\n
        }\n
        else if (v9)\n
        {\n
            return (v8 ^ 1) * 3 - 1;\n
        }\n
        else\n
        {\n
            v12 = v4->field_2c;\n
            if (v12)\n
            {\n
                while (true)\n
                {\n
                    v13 = *((v12 + 20));\n
                    if (!v13)\n
                        break;\n
                    if (!*((v12 + 8)))\n
                        break;\n
                    v12 = v13;\n
                    v4->field_2c = v13;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4212818:sub_404852": null, "4212832:cgc_handle_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_exit()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // ebx\n
\n
    v0 = v2;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"Thank you!\\n
\");\n
    cgc__terminate(0, \"Thank you!\\n
\");\n
    cgc_handle_help();\n
    return;\n
}\n
", "4212896:cgc_handle_help": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_handle_help(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = v1->field_8;\n
    cgc_fdprintf(1, \"%s\");\n
    return 1;\n
}\n
", "4212949:sub_4048d5": null, "4212960:cgc_handle_prev": "typedef struct struct_2 {\n
    char padding_0[40];\n
    struct struct_1 *field_28;\n
    unsigned int field_2c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char *field_0;\n
    struct struct_0 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
int cgc_handle_prev(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    struct_2 *v4;  // esi\n
    struct_3 *v5;  // eax\n
    struct_0 *v6;  // ecx\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = v4->field_28;\n
    if (!v5)\n
        return -1;\n
    v6 = v5->field_4;\n
    if (v6)\n
    {\n
        v4->field_28 = &v6->padding_0[0];\n
        v4->field_2c = v6->field_c;\n
        return 1;\n
    }\n
    if (!cgc_strncmp(v5->field_0, \"Fin\", 3))\n
        v0 = \"\\n
Final Questions\\n
\";\n
    else\n
        v0 = \"\\n
%s Form\\n
\";\n
    cgc_fdprintf(1, v0);\n
    return 0;\n
}\n
", "4213087:sub_40495f": null, "4213088:cgc_handle_update": "typedef struct struct_3 {\n
    char padding_0[40];\n
    struct struct_2 *field_28;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
    char field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char field_c;\n
    char padding_d[7];\n
    struct struct_1 *field_14;\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_handle_update(struct_3 *v1, unsigned int a0)\n
{\n
    char v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    struct_2 *v2;  // eax\n
    char *v3;  // esi\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    char *v5;  // edi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    void* v9;  // esi\n
    unsigned int v10;  // eax\n
    void* v11;  // eax\n
    char *v12;  // edi\n
    char *v13;  // ecx\n
    unsigned int v14;  // eax\n
\n
    v2 = v1->field_28;\n
    if (!v2->field_10)\n
    {\n
        v14 = \"Cannot update field until all fields are inputted\\n
\";\n
LABEL_4049ea:\n
        cgc_fdprintf(1, v14);\n
LABEL_4049fa:\n
        return 1;\n
    }\n
    v3 = a0;\n
    if (!v3)\n
        return 1;\n
    v4 = v2->field_c;\n
    if (v2->field_c)\n
    {\n
        do\n
        {\n
            v5 = *(v4);\n
            if (!cgc_strncmp(v5, v3, cgc_strlen(v5)))\n
            {\n
                v7 = cgc_malloc(0x1000);\n
                if (!v7)\n
                    return -1;\n
                v9 = v7;\n
                if (!*(&v0))\n
                {\n
                    v10 = \"%s: \";\n
                }\n
                else\n
                {\n
                    v0 = *((v4 + 4));\n
                    v10 = \"%s%s: \";\n
                }\n
                cgc_fdprintf(1, v10);\n
                if (cgc_read_line(v9) < 0)\n
                    return -1;\n
                if (!cgc_strlen(v9) && *((v4 + 12)))\n
                {\n
                    cgc_free(v9);\n
                    v11 = *((v4 + 8));\n
                    if (v11)\n
                        cgc_free(v11);\n
                    *((v4 + 8)) = 0;\n
                    goto LABEL_4049fa;\n
                }\n
                if (!*((v4 + 24))())\n
                {\n
                    cgc_free(v9);\n
                    v6 = \"Bad input.\\n
\";\n
                    goto LABEL_4049cc;\n
                }\n
                else\n
                {\n
                    v12 = *((v4 + 8));\n
                    if (!v12)\n
                    {\n
LABEL_404aa4:\n
                        *((v4 + 8)) = v9;\n
                        goto LABEL_4049fa;\n
                    }\n
                    else\n
                    {\n
                        v13 = *((v4 + 8));\n
                        if (!cgc_strncmp(v12, v9, cgc_strlen(v12)))\n
                        {\n
                            cgc_strcpy(v13, v9);\n
                            cgc_free(v9);\n
                            goto LABEL_4049fa;\n
                        }\n
                        else\n
                        {\n
                            cgc_free(v13);\n
                            goto LABEL_404aa4;\n
                        }\n
                    }\n
                }\n
            }\n
            v4 = *((v4 + 20));\n
        } while (v4);\n
        goto LABEL_4049fa;\n
    }\n
    v6 = \"Could not find specified field\\n
\";\n
LABEL_4049cc:\n
    cgc_fdprintf(1, v6);\n
    v14 = \"Update Unsuccessful\\n
\";\n
    goto LABEL_4049ea;\n
}\n
", "4213505:sub_404b01": null, "4213520:cgc_print_prompt": "typedef struct struct_5 {\n
    char padding_0[40];\n
    struct struct_4 *field_28;\n
    struct struct_1 *field_2c;\n
} struct_5;\n
\n
typedef struct struct_3 {\n
    char padding_0[40];\n
    struct struct_2 *field_28;\n
    struct struct_1 *field_2c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
    char field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[8];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
    char field_10;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_print_prompt(struct_5 *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20], Other Possible Types: char\n
    struct_3 *v3;  // edi\n
    char *v4;  // eax\n
    struct_2 *v5;  // eax\n
    struct_0 *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v3 = v2;\n
    v4 = v3->field_28->field_0;\n
    if (!v4)\n
    {\n
        v8 = \"%s\";\n
    }\n
    else\n
    {\n
        if (a0)\n
        {\n
            if (!cgc_strncmp(v4, \"Fin\", 3))\n
                v0 = \"\\n
Final Questions\\n
\";\n
            else\n
                v0 = \"\\n
%s Form\\n
\";\n
            cgc_fdprintf(1, v0);\n
        }\n
        v5 = v3->field_28;\n
        if (v5->field_10)\n
        {\n
            v6 = v5->field_c;\n
            cgc_fdprintf(1, (!cgc_strncmp(v5->field_0, \"Edu\", 3) ? (!cgc_strncmp(v3->field_28->field_0, \"Emp\", 3) ? (!cgc_strncmp(v3->field_28->field_0, \"Fin\", 3) ? \"\\n
*********%s:*********\\n
\" : \"\\n
*********Final Screening:*********\\n
\") : \"\\n
*********Most Recent Employer:*********\\n
\") : \"\\n
*********Highest %s:*********\\n
\"));\n
            if (v6)\n
            {\n
                do\n
                {\n
                    if (!v1)\n
                    {\n
                        v0 = \"%s=\\n
\";\n
                    }\n
                    else\n
                    {\n
                        v1 = *((v6 + 8));\n
                        v0 = \"%s=%s\\n
\";\n
                    }\n
                    cgc_fdprintf(1, v0);\n
                    v6 = *((v6 + 20));\n
                } while (v6);\n
            }\n
            v8 = \"\\n
Type **next to continue\\n
\";\n
        }\n
        else if (*(&v1))\n
        {\n
            v1 = v3->field_2c->field_4;\n
            v0 = \"%s%s: \";\n
            return cgc_fdprintf(1, v0);\n
        }\n
        else\n
        {\n
            v0 = \"%s: \";\n
            return cgc_fdprintf(1, v0);\n
        }\n
    }\n
    v0 = v8;\n
    return cgc_fdprintf(1, v0);\n
}\n
", "4213904:cgc_handle_line": "typedef struct struct_3 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
    struct struct_2 *field_2c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char field_c;\n
    char padding_d[7];\n
    unsigned int field_14;\n
    struct struct_1 *field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char g_406b3a;\n
\n
int cgc_handle_line(struct_3 *v2, unsigned int a0)\n
{\n
    char v0[2];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3;  // esi\n
    char *v4;  // esi\n
    struct_3 *v5;  // ebp\n
    void* v6;  // eax\n
    void* v7;  // esi\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // eax\n
    struct_2 *v10;  // cl, Other Possible Types: char, unsigned int\n
    struct_2 *v11;  // eax\n
    unsigned int v12;  // eax\n
\n
    v1 = v3;\n
    v4 = a0;\n
    v5 = v2;\n
    if (!cgc_strncmp(\"**\", v4, 2) && cgc_handler_index() >= 0)\n
    {\n
        *(&v0) = cgc_malloc(cgc_strlen(v4) + 1);\n
        if (v0)\n
        {\n
            cgc_strcpy(v0, v4);\n
            v0[cgc_strlen(v4)] = 0;\n
            v7 = cgc_strsep(v0, &g_406b3a);\n
            v8 = cgc_handler_index(v0);\n
            if (v8 >= 0)\n
                v8 = *(&v5->padding_0[16 + 4 * v8])(v5);\n
            if (v7)\n
            {\n
                cgc_free(v7);\n
                return v8;\n
            }\n
            return v8;\n
        }\n
LABEL_404e12:\n
        return -1;\n
    }\n
    if (v5->field_28->field_10)\n
        return 1;\n
    if (!v5->field_2c)\n
        return 1;\n
    v10 = v5->field_2c;\n
    if (cgc_strlen(v4))\n
    {\n
        if (!v10->field_18())\n
        {\n
            *(&v10) = 1;\n
            v9 = 0;\n
        }\n
        else\n
        {\n
            v6 = v5->field_2c->field_8;\n
            if (v6)\n
                cgc_free(v6);\n
            v9 = cgc_malloc(cgc_strlen(v4) + 1);\n
            v5->field_2c->field_8 = v9;\n
            if (!v9)\n
            {\n
                *(&v9) = 1;\n
                *(&v10) = 1;\n
            }\n
            else\n
            {\n
                cgc_strcpy(v9, v4);\n
                v9 = 0;\n
                v10 = 0;\n
            }\n
        }\n
        if (v9)\n
            return -(v9);\n
        if (v10)\n
            return -(v9);\n
    }\n
    else if (!v10->field_c)\n
    {\n
        goto LABEL_404e20;\n
    }\n
    v11 = v5->field_2c;\n
    if (v11)\n
    {\n
        v12 = v11->field_14;\n
        if (v12)\n
            v5->field_2c = v12;\n
        else\n
            v5->field_28->field_10 = 1;\n
LABEL_404e20:\n
        return 0;\n
    }\n
    goto LABEL_404e12;\n
}\n
", "4214316:sub_404e2c": null, "4214320:cgc_print_greeting": "int cgc_print_greeting(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = *(v1);\n
    return cgc_fdprintf(1, \"%s\");\n
}\n
", "4214364:sub_404e5c": null, "4214368:cgc_handler_index": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
extern unsigned int cmd_lbls;\n
\n
int cgc_handler_index()\n
{\n
    int tmp_7;  // tmp #7\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    unsigned int v3;  // ecx\n
    struct_0 *v4;  // esi, Other Possible Types: unsigned int\n
    void* v5;  // eax, Other Possible Types: unsigned int\n
    char *v6;  // edi\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v8;  // ebp, Other Possible Types: unsigned int\n
\n
    v4 = v3 - 1;\n
    v5 = 0;\n
    while (true)\n
    {\n
        tmp_7 = *((v4 + 1));\n
        v4 += 1;\n
        if (tmp_7 != 42)\n
            break;\n
        v5 += 1;\n
        if (false)\n
            break;\n
    }\n
    v7 = 0;\n
    v8 = &cmd_lbls;\n
    while (true)\n
    {\n
        v0 = v7;\n
        v6 = *(v8);\n
        cgc_memcpy(&v1, v4, cgc_strlen(v6));\n
        (&v1)[cgc_strlen(v6)] = 0;\n
        if (!cgc_strncasecmp(&v1, v6, cgc_strlen(v6)))\n
            return v0;\n
        v7 = v0 + 1;\n
        v8 += 4;\n
        if (v7 == 5)\n
            return -1;\n
    }\n
}\n
", "4214546:sub_404f12": null, "4214560:cgc_read_line": "int cgc_read_line(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    char *v3;  // esi, Other Possible Types: unsigned int\n
    char *v4;  // edi\n
\n
    v3 = 0;\n
    do\n
    {\n
        v4 = v2 + v3;\n
        v0 = &v1;\n
        if (cgc_receive(0, v4, 1) && !*(&v1))\n
            return -1 >> 31;\n
        if (*(v4) == 10)\n
        {\n
            *((v2 + v3)) = 0;\n
            goto LABEL_404f84__1;\n
        }\n
        v3 += 1;\n
    } while (v3 != 4095);\n
    v3 = 4095;\n
LABEL_404f84__1:\n
    return v3 >> 31;\n
}\n
", "4214673:sub_404f91": null, "4214688:main": "extern void cgc_af86;\n
\n
int main()\n
{\n
    char v0;  // [bp-0x1010]\n
    unsigned int v2;  // eax\n
\n
    cgc_init_af86();\n
    cgc_print_greeting(&cgc_af86);\n
    cgc_print_prompt(&cgc_af86, 1);\n
    cgc_memset(&v0, 0, 0x1000);\n
    if (cgc_read_line(&v0) < 0)\n
        return 0;\n
    while (true)\n
    {\n
        v2 = cgc_handle_line(&cgc_af86, &v0);\n
        if (v2 < 0)\n
            return 0;\n
        if (v2 != 1)\n
        {\n
            if (v2 == 3)\n
                v2 = 1;\n
            else\n
                v2 = 0;\n
        }\n
        cgc_print_prompt(&cgc_af86, v2);\n
        cgc_memset(&v0, 0, 0x1000);\n
        if (cgc_read_line(&v0) < 0)\n
            return 0;\n
    }\n
}\n
", "4214781:sub_404ffd": null, "4214868:sub_405054": null, "4214904:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}