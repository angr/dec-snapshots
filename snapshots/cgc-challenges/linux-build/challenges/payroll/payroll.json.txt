{"4198400:_init": "extern struct_0 *g_4058a8;\n
\n
int _init()\n
{\n
    if (g_4058a8)\n
    {\n
        g_4058a8();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198528:sub_401080": "int sub_401080()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198534:sub_401086": null, "4198544:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198587:sub_4010bb": null, "4198588:sub_4010bc": "int sub_4010bc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198592:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198596:sub_4010c4": null, "4198608:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18399;\n
    v6 = v5 + 9;\n
    v7 = v5 + 9;\n
    if (v7 == v6)\n
        return v5 + 9;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198659:sub_401103": "int sub_401103()\n
{\n
}\n
", "4198665:sub_401109": "int sub_401109()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198672:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18335;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 9;\n
    v9 = (v6 + 9 - (v6 + 9) >> 31) + (9 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198743:sub_401157": "int sub_401157()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198752:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4058a4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4058a4)\n
    {\n
        v0 = __dso_handle;\n
        sub_401080();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198827:sub_4011ab": "int sub_4011ab()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198832:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198841:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198845:sub_4011bd": null, "4198848:cgc_receive_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v8, unsigned int a0, char a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    char v5;  // [bp-0x15]\n
    char *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v9;  // ecx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        v4 = cgc_receive(0, &v5, 1);\n
        if (v4)\n
        {\n
LABEL_401228:\n
            if (a2)\n
                *(a2) = v6;\n
            v7 = v4;\n
            return v7;\n
        }\n
        else\n
        {\n
            if (!(*(&v3) == 1))\n
                goto LABEL_401228;\n
            v9 = v6;\n
            v6 = v9 + 1;\n
            v9[v8] = v5;\n
            v1 = 0;\n
            if (v5 != a1)\n
            {\n
                v1 = 0;\n
                if (v5 != 10)\n
                    v1 = v6 < a0;\n
            }\n
            if (!(v1 & 1))\n
            {\n
                if (a2)\n
                    *(a2) = v6;\n
                v7 = 0;\n
                return v7;\n
            }\n
        }\n
    }\n
}\n
", "4199098:sub_4012ba": null, "4199104:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4199159:sub_4012f7": null, "4199168:cgc_print": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_strlen(v7);\n
    for (v4 = 0; v4 < v5; v4 = *(&v3) + v4)\n
    {\n
        v0 = &v3;\n
        v2 = cgc_transmit(1, v7 + v4, v5 - v4);\n
        if (!v2 && !(!*(&v3)))\n
            goto LABEL_401389;\n
        cgc__terminate();\n
LABEL_401389:\n
    }\n
    v9 = v6;\n
    return v4;\n
}\n
", "4199325:sub_40139d": null, "4199328:cgc_equals": "int cgc_equals(unsigned int v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1[v2] == v1[a0])\n
            v0 = v1[v2];\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return *((v2 + v1)) == *((a0 + v1));\n
}\n
", "4199464:sub_401428": null, "4199472:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    v3 = v1;\n
    if (v3 < a1)\n
    {\n
        v3 = v2;\n
        *((v3 + v1)) = 0;\n
    }\n
    return v3;\n
}\n
", "4199605:sub_4014b5": null, "4199616:cgc_isdigit": "int cgc_isdigit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 48)\n
        v1 = v2 <= 57;\n
    return v1 & 1;\n
}\n
", "4199667:sub_4014f3": null, "4199680:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v3[v5] == 45)\n
    {\n
        v2 = 1;\n
        v3 += 1;\n
    }\n
    if (*((v5 + v3)) == 43)\n
        v3 += 1;\n
    for (; cgc_isdigit(*((v5 + v3))); v3 += 1)\n
    {\n
        v1 = v1 * 10 + *((v5 + v3)) - 48;\n
    }\n
    if (v2)\n
        v1 = -(v1);\n
    v4 = v1;\n
    return v4;\n
}\n
", "4199915:sub_4015eb": null, "4199920:cgc_itoa": "int cgc_itoa(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x10]\n
    char v4;  // [bp-0xf]\n
    char *v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 < 0)\n
    {\n
        v0 = 1;\n
        a0 = -(a0);\n
    }\n
    do\n
    {\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        *((&v4 + v6)) = ((a0 >> 31 CONCAT a0) /m 10 >> 32) + 48;\n
        v7 = a0;\n
        v8 = (v7 >> 31 CONCAT v7) /m 10;\n
        a0 = v8;\n
    } while (a0 > 0);\n
    if (v0 == 1)\n
    {\n
        v8 = v2;\n
        v2 = v8 + 1;\n
        (&v4)[v8] = 45;\n
    }\n
    if (!v5)\n
        return v8;\n
    for (; v1 < v2; v1 += 1)\n
    {\n
        *((v5 + v1)) = (&v3)[v2 + -1 * v1];\n
    }\n
    v8 = v5;\n
    *((v8 + v1)) = 0;\n
    return v5;\n
}\n
", "4200147:sub_4016d3": null, "4200160:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = &v1[a1]; v1 != v0; *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    return v1;\n
}\n
", "4200230:sub_401726": null, "4200240:cgc_memset": "int cgc_memset(char *v1, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    for (v0 = &v1[a1]; v1 < v0; *(v3) = a0)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
    }\n
    return v1;\n
}\n
", "4200300:sub_40176c": null, "4200304:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x254a0]\n
    unsigned int v1;  // [bp-0x2549c]\n
    unsigned int v2;  // [bp-0x25498]\n
    void* v3;  // [bp-0xc30]\n
    unsigned int v4;  // [bp-0xc2c]\n
    void* v5;  // [bp-0xc28]\n
    unsigned int v6;  // [bp-0x70]\n
    char v7;  // [bp-0x6c]\n
    char v8;  // [bp-0x68]\n
    char v9;  // [bp-0x64]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 0;\n
    v4 = 1;\n
    v3 = 0;\n
    for (v10 = 0; v10 < 50; v10 += 1)\n
    {\n
        cgc_initialize_employee();\n
    }\n
    cgc_initialize_employee();\n
    v5 = 0;\n
    while (true)\n
    {\n
        v0 = &v7;\n
        v6 = cgc_get_key_value(&v9, 80, &v8);\n
        v1 = v6 + 1;\n
        if (v1 <= 4)\n
            break;\n
        cgc_print(v2 - 6244);\n
        cgc__terminate();\n
    }\n
    goto *(((stack_base)[152728] + (stack_base)[152732] * 4 - 6316)) + (stack_base)[152728];\n
}\n
", "4200540:sub_40185c": "int sub_40185c()\n
{\n
    char v0;  // [bp-0x25494]\n
    char v1;  // [bp-0x25490]\n
    void* v2;  // [bp-0xc2c], Other Possible Types: char\n
    char v3;  // [bp-0xc28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc24], Other Possible Types: char\n
    char v5;  // [bp-0xc20]\n
    char v6;  // [bp-0xbe0]\n
    unsigned int v8;  // [bp+0xc]\n
\n
    cgc_print(*(&v0) - 6296);\n
    cgc__terminate();\n
    if (*(&v3) == 1)\n
    {\n
        cgc_print(*(&v0) - 6277);\n
        cgc__terminate();\n
    }\n
    if (*(&v2) > 0)\n
    {\n
        v8 = *(&v4);\n
        cgc_process_query(*(&v2), &v1, &v5);\n
    }\n
    else if (*(&v6) >= 0 && *(&v6) < 50)\n
    {\n
        cgc_merge_employee_records(&(&v1)[2992 * *(&v6)]);\n
    }\n
    cgc_initialize_employee();\n
    v4 = 0;\n
    v3 = 1;\n
    v2 = 0;\n
}\n
", "4200827:sub_40197b": "int sub_40197b()\n
{\n
    char v0;  // [bp-0x25494]\n
    void* v1;  // [bp-0xc2c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc28], Other Possible Types: char\n
    char v3;  // [bp-0xc24]\n
    char v4;  // [bp-0xc20]\n
    char v5;  // [bp-0x68]\n
    char v6;  // [bp-0x64]\n
    unsigned int v8;  // [bp+0xc]\n
\n
    if (*(&v2) == 1 && cgc_equals(*(&v6), *(&v0) - 6268))\n
    {\n
        if (cgc_equals(*(&v5), *(&v0) - 6248))\n
        {\n
            v1 = 2;\n
        }\n
        else if (cgc_equals(*(&v5), *(&v0) - 6262))\n
        {\n
            v1 = 1;\n
        }\n
        else if (cgc_equals(*(&v5), *(&v0) - 6258))\n
        {\n
            v1 = 3;\n
        }\n
        else if (cgc_equals(*(&v5), *(&v0) - 6253))\n
        {\n
            v1 = 4;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
        }\n
    }\n
    v2 = 0;\n
    v8 = &v3;\n
    cgc_process_key_value(&v4, *(&v6), *(&v5));\n
}\n
", "4201169:sub_401ad1": null, "4201217:sub_401b01": null, "4201232:cgc_atom": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atom(unsigned int v3[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    v3[1] = 0;\n
    v3[0] = 0;\n
    if (v2[a0] == 45)\n
    {\n
        v1 = 1;\n
        v2 += 1;\n
    }\n
    for (; cgc_isdigit(*((a0 + v2))); v2 += 1)\n
    {\n
        v3[0] = v3[0] * 10 + *((a0 + v2)) - 48;\n
    }\n
    v4 = *((a0 + v2));\n
    if (v4 == 46)\n
    {\n
        v4 = cgc_isdigit(*((a0 + v2 + 1)));\n
        if (v4)\n
        {\n
            v3[1] = (*((a0 + v2 + 1)) - 48) * 10;\n
            v4 = cgc_isdigit(*((a0 + v2 + 2)));\n
            if (v4)\n
            {\n
                v4 = v3;\n
                v4[1] = *((a0 + v2 + 2)) - 48 + v4[1];\n
            }\n
        }\n
    }\n
    if (v1)\n
    {\n
        v4 = v3;\n
        *(v4) = -(v3[0]);\n
    }\n
    return v4;\n
}\n
", "4201568:cgc_mtoa": "int cgc_mtoa(unsigned int v6, unsigned int a0[2])\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x18]\n
    char *v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
\n
    v4 = 0;\n
    v2 = a0[1];\n
    v1 = 0;\n
    if (v2 < 0)\n
        v2 = -(v2);\n
    v7 = v4;\n
    v4 = v7 + 1;\n
    *((&v5 + v7)) = ((v2 >> 31 CONCAT v2) /m 10 >> 32) + 48;\n
    v8 = v2;\n
    v2 = (v8 >> 31 CONCAT v8) /m 10;\n
    v10 = v4;\n
    v4 = v10 + 1;\n
    (&v5)[v10] = ((v2 >> 31 CONCAT v2) /m 10 >> 32) + 48;\n
    v11 = v4;\n
    v4 = v11 + 1;\n
    (&v5)[v11] = 46;\n
    v2 = a0[0];\n
    if (v2 < 0)\n
    {\n
        v2 = -(v2);\n
        v1 = 1;\n
    }\n
    do\n
    {\n
        if (v4 != 6 && v4 != 10 && !(v4 == 14))\n
            continue;\n
        v12 = v4;\n
        v4 = v12 + 1;\n
        (&v5)[v12] = 44;\n
        v13 = v4;\n
        v4 = v13 + 1;\n
        (&v5)[v13] = ((v2 >> 31 CONCAT v2) /m 10 >> 32) + 48;\n
        v14 = v2;\n
        v2 = (v14 >> 31 CONCAT v14) /m 10;\n
        v0 = 0;\n
        if (v2 > 0)\n
            v0 = v4 < 63;\n
    } while ((v0 & 1));\n
    if (v1)\n
    {\n
        v15 = v4;\n
        v4 = v15 + 1;\n
        (&v5)[v15] = 45;\n
    }\n
    v3 = 1;\n
    for (*(v6) = 36; v3 <= v4; v3 += 1)\n
    {\n
        *((v6 + v3)) = (&v5)[v4 + -1 * v3];\n
    }\n
    *((v6 + v3)) = 0;\n
    return v6;\n
}\n
", "4201977:sub_401df9": null, "4201984:cgc_atoh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoh(unsigned int v3[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    v3[0] = 0;\n
    for (v3[1] = 0; cgc_isdigit(*((a0 + v2))); v2 += 1)\n
    {\n
        v1 = v1 * 10 + *((a0 + v2)) - 48;\n
    }\n
    if (*((a0 + v2)) == 104)\n
    {\n
        v3[0] = v1;\n
        v2 += 1;\n
    }\n
    for (v1 = 0; cgc_isdigit(*((a0 + v2))); v2 += 1)\n
    {\n
        v1 = v1 * 10 + *((a0 + v2)) - 48;\n
    }\n
    if (*((a0 + v2)) == 109)\n
        v3[1] = v1;\n
    if (v3[0] > 24)\n
        v3[0] = 24;\n
    v4 = v3;\n
    if (v4[1] > 59)\n
    {\n
        v4 = v3;\n
        *((v4 + 4)) = 59;\n
    }\n
    return v4;\n
}\n
", "4202298:sub_401f3a": null, "4202304:cgc_htoa": "int cgc_htoa(unsigned int v5, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char *v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x14]\n
    char v4;  // [bp-0x13]\n
    unsigned int v6;  // eax\n
    char *v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = a0[1];\n
    if (v0 > 60)\n
    {\n
        v6 = v5;\n
        v1[v6] = 0;\n
        return v5;\n
    }\n
    v7 = v2;\n
    v2 = v7 + 1;\n
    *((&v4 + v7)) = 109;\n
    do\n
    {\n
        v8 = v2;\n
        v2 = v8 + 1;\n
        (&v4)[v8] = ((v0 >> 31 CONCAT v0) /m 10 >> 32) + 48;\n
        v9 = v0;\n
        v0 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (v0 > 0);\n
    v10 = v2;\n
    v2 = v10 + 1;\n
    (&v4)[v10] = 104;\n
    v0 = a0[0];\n
    do\n
    {\n
        v11 = v2;\n
        v2 = v11 + 1;\n
        (&v4)[v11] = ((v0 >> 31 CONCAT v0) /m 10 >> 32) + 48;\n
        v12 = v0;\n
        v0 = (v12 >> 31 CONCAT v12) /m 10;\n
    } while (v0 > 0);\n
    for (; v1 < v2; v1 += 1)\n
    {\n
        *((v5 + v1)) = (&v3)[v2 + -1 * v1];\n
    }\n
    v6 = v5;\n
    *((v6 + v1)) = 0;\n
    return v5;\n
}\n
", "4202582:sub_402056": null, "4202592:cgc_initialize_employee": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[63];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initialize_employee(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2->field_0 = 0;\n
    v2->field_40 = -1;\n
    v2->field_44 = 0;\n
    v2->field_48 = 0;\n
    v3 = v2;\n
    v3->field_4c = 0;\n
    for (v1 = 0; v1 < 52; v1 = v3)\n
    {\n
        *(&(&v2[1].field_0)[56 * v1]) = 0;\n
        *(&v2[1].padding_1[3 + 56 * v1]) = 0;\n
        *(&v2[1].padding_1[7 + 56 * v1]) = 0;\n
        *(&v2[1].padding_1[11 + 56 * v1]) = 0;\n
        *(&v2[1].padding_1[51 + 56 * v1]) = v0 - 14132;\n
        *(&v2[1].padding_1[31 + 56 * v1]) = 0;\n
        *(&v2[1].padding_1[35 + 56 * v1]) = 0;\n
        cgc_memset(&v2->padding_1[56 * v1 + 40], 0, 12);\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4202878:sub_40217e": null, "4202880:cgc_exempt_overtime": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exempt_overtime(unsigned int v8[2], unsigned int a0[2], unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10[2];  // eax\n
    unsigned int v12;  // eax\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v6 = 0;\n
    v8[0] = 0;\n
    v8[1] = 0;\n
    v10 = a0;\n
    v12 = v10[1];\n
    v3 = v10[0];\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v4 = v12;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t6,1] = t7\n
    [D] PutI(136:I8x8)[t6,1] = 0x01\n
    [D] PutI(136:I8x8)[t6,0] = 0x00\n
    [D] PutI(72:F64x8)[t26,1] = t27\n
    [D] PutI(136:I8x8)[t26,1] = 0x01\n
    [D] PutI(136:I8x8)[t26,0] = 0x00\n
    v2 = ([D] GetI(136:I8x8)[t52,0] ? [D] GetI(72:F64x8)[t52,0] : nan);\n
    [D] PutI(136:I8x8)[t52,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(136:I8x8)[t81,0] = 0x00\n
    cgc_add_money();\n
    v0 = a1;\n
    return cgc_add_pay(v8, &v5);\n
}\n
", "4203029:sub_402215": null, "4203040:cgc_add_time": "int cgc_add_time(unsigned int v0[2], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4[2];  // eax\n
\n
    v1 = v0[1] + a1;\n
    v3 = a0 + (v1 >> 31 CONCAT v1) /m 60;\n
    v4 = v0;\n
    v4[0] = v3 + v4[0];\n
    v0[1] = (v0[1] + a1 >> 31 CONCAT v0[1] + a1) /m 60 >> 32;\n
    return v0;\n
}\n
", "4203108:sub_402264": null, "4203120:cgc_round_minutes": "int cgc_round_minutes(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax, Other Possible Types: unsigned int\n
    unsigned int v2[2];  // eax\n
\n
    if (v0[1] < 8)\n
    {\n
        v1 = v0;\n
        v1[1] = 0;\n
        return v0;\n
    }\n
    if (v0[1] < 23)\n
    {\n
        v1 = v0;\n
        v1[1] = 15;\n
    }\n
    else if (v0[1] < 38)\n
    {\n
        v1 = v0;\n
        v1[1] = 30;\n
    }\n
    else if (v0[1] < 53)\n
    {\n
        v1 = v0;\n
        v1[1] = 45;\n
    }\n
    else\n
    {\n
        v2 = v0;\n
        v2[0] = v2[0] + 1;\n
        v1 = v0;\n
        v1[1] = 0;\n
    }\n
    return v1;\n
}\n
", "4203275:sub_40230b": null, "4203280:cgc_add_money": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_money(unsigned int v14[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned short v1;  // [bp-0x30]\n
    unsigned short v2;  // [bp-0x2e]\n
    unsigned short v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15[2];  // ecx\n
    unsigned int v17;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if ([D] GetI(136:I8x8)[t13,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t18,0] = t19\n
    [D] PutI(136:I8x8)[t18,0] = 0x01\n
    [D] PutI(136:I8x8)[t18,0] = 0x00\n
    v15 = v14;\n
    v17 = v15[1];\n
    v11 = v15[0];\n
    [D] PutI(72:F64x8)[t45,0] = t48\n
    [D] PutI(136:I8x8)[t45,0] = 0x01\n
    v12 = v17;\n
    [D] PutI(72:F64x8)[t61,0] = t64\n
    [D] PutI(136:I8x8)[t61,0] = 0x01\n
    [D] PutI(72:F64x8)[t74,0] = t77\n
    [D] PutI(136:I8x8)[t74,0] = 0x01\n
    [D] PutI(72:F64x8)[t85,1] = t86\n
    [D] PutI(136:I8x8)[t85,1] = 0x01\n
    [D] PutI(136:I8x8)[t85,0] = 0x00\n
    [D] PutI(72:F64x8)[t105,1] = t106\n
    [D] PutI(136:I8x8)[t105,1] = 0x01\n
    [D] PutI(136:I8x8)[t105,0] = 0x00\n
    v10 = ([D] GetI(136:I8x8)[t131,0] ? [D] GetI(72:F64x8)[t131,0] : nan);\n
    [D] PutI(136:I8x8)[t131,0] = 0x00\n
    [D] PutI(72:F64x8)[t142,0] = t145\n
    [D] PutI(136:I8x8)[t142,0] = 0x01\n
    v13 = ([D] GetI(136:I8x8)[t159,0] ? [D] GetI(72:F64x8)[t159,0] : nan);\n
    [D] PutI(136:I8x8)[t159,0] = 0x00\n
    [D] PutI(72:F64x8)[t170,0] = t173\n
    [D] PutI(136:I8x8)[t170,0] = 0x01\n
    [D] PutI(72:F64x8)[t183,0] = t186\n
    [D] PutI(136:I8x8)[t183,0] = 0x01\n
    [D] PutI(72:F64x8)[t194,1] = t195\n
    [D] PutI(136:I8x8)[t194,1] = 0x01\n
    [D] PutI(136:I8x8)[t194,0] = 0x00\n
    v13 = ([D] GetI(136:I8x8)[t220,0] ? [D] GetI(72:F64x8)[t220,0] : nan);\n
    [D] PutI(136:I8x8)[t220,0] = 0x00\n
    [D] PutI(72:F64x8)[t231,0] = t234\n
    [D] PutI(136:I8x8)[t231,0] = 0x01\n
    [D] PutI(72:F64x8)[t242,0] = t245\n
    [D] PutI(136:I8x8)[t242,0] = 0x01\n
    [D] PutI(72:F64x8)[t255,0] = t259\n
    [D] PutI(136:I8x8)[t255,0] = 0x01\n
    [D] PutI(72:F64x8)[t255,1] = t252\n
    [D] PutI(136:I8x8)[t255,1] = 0x01\n
    [D] PutI(136:I8x8)[t275,0] = 0x00\n
    [D] PutI(72:F64x8)[t289,0] = t290\n
    [D] PutI(136:I8x8)[t289,0] = 0x01\n
    [D] PutI(136:I8x8)[t289,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t275,0] ? [D] GetI(72:F64x8)[t275,0] : nan), ([D] GetI(136:I8x8)[t275,1] ? [D] GetI(72:F64x8)[t275,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t275,0] ? [D] GetI(72:F64x8)[t275,0] : nan), ([D] GetI(136:I8x8)[t275,1] ? [D] GetI(72:F64x8)[t275,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t3,1] = t4\n
        [D] PutI(136:I8x8)[t3,1] = 0x01\n
        [D] PutI(136:I8x8)[t3,0] = 0x00\n
        v8 = ([D] GetI(136:I8x8)[t29,0] ? [D] GetI(72:F64x8)[t29,0] : nan);\n
        [D] PutI(136:I8x8)[t29,0] = 0x00\n
        [D] PutI(72:F64x8)[t40,0] = t43\n
        [D] PutI(136:I8x8)[t40,0] = 0x01\n
        v13 = ([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan);\n
        [D] PutI(136:I8x8)[t57,0] = 0x00\n
    }\n
    else\n
    {\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t3,1] = t4\n
        [D] PutI(136:I8x8)[t3,1] = 0x01\n
        [D] PutI(136:I8x8)[t3,0] = 0x00\n
        v9 = ([D] GetI(136:I8x8)[t29,0] ? [D] GetI(72:F64x8)[t29,0] : nan);\n
        [D] PutI(136:I8x8)[t29,0] = 0x00\n
        [D] PutI(72:F64x8)[t40,0] = t43\n
        [D] PutI(136:I8x8)[t40,0] = 0x01\n
        v13 = ([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan);\n
        [D] PutI(136:I8x8)[t57,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t13,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v4 = [D] x86g_create_fpucw(fpround<4>);\n
    v3 = v4 | 0xc00;\n
    if ([D] GetI(136:I8x8)[t13,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    v14[0] = v5;\n
    if ([D] GetI(136:I8x8)[t13,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v6 = v14[0];\n
    if ([D] GetI(136:I8x8)[t13,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t24,1] = t25\n
    [D] PutI(136:I8x8)[t24,1] = 0x01\n
    [D] PutI(136:I8x8)[t24,0] = 0x00\n
    [D] PutI(72:F64x8)[t46,0] = t49\n
    [D] PutI(136:I8x8)[t46,0] = 0x01\n
    [D] PutI(72:F64x8)[t57,1] = t58\n
    [D] PutI(136:I8x8)[t57,1] = 0x01\n
    [D] PutI(136:I8x8)[t57,0] = 0x00\n
    v2 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-42, size=2, endness=Iend_LE)))));\n
    v1 = v2 | 0xc00;\n
    v7 = ([D] GetI(136:I8x8)[t103,0] ? [D] GetI(72:F64x8)[t103,0] : nan);\n
    [D] PutI(136:I8x8)[t103,0] = 0x00\n
    v14[1] = v7;\n
    return v14;\n
}\n
", "4203535:sub_40240f": null, "4203536:cgc_add_pay": "int cgc_add_pay(unsigned int v9[2], unsigned int a0[2], unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[2];  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13[2];  // eax\n
    unsigned int v15;  // eax\n
\n
    v10 = a0;\n
    v12 = v10[1];\n
    v3 = v10[0];\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v4 = v12;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t23,1] = t24\n
    [D] PutI(136:I8x8)[t23,1] = 0x01\n
    [D] PutI(136:I8x8)[t23,0] = 0x00\n
    [D] PutI(72:F64x8)[t43,1] = t44\n
    [D] PutI(136:I8x8)[t43,1] = 0x01\n
    [D] PutI(136:I8x8)[t43,0] = 0x00\n
    v2 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
    [D] PutI(136:I8x8)[t69,0] = 0x00\n
    [D] PutI(72:F64x8)[t80,0] = t83\n
    [D] PutI(136:I8x8)[t80,0] = 0x01\n
    v8 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    [D] PutI(72:F64x8)[t108,0] = t111\n
    [D] PutI(136:I8x8)[t108,0] = 0x01\n
    [D] PutI(72:F64x8)[t121,0] = t124\n
    [D] PutI(136:I8x8)[t121,0] = 0x01\n
    [D] PutI(72:F64x8)[t132,1] = t133\n
    [D] PutI(136:I8x8)[t132,1] = 0x01\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v1 = ([D] GetI(136:I8x8)[t158,0] ? [D] GetI(72:F64x8)[t158,0] : nan);\n
    [D] PutI(136:I8x8)[t158,0] = 0x00\n
    [D] PutI(72:F64x8)[t169,0] = t172\n
    [D] PutI(136:I8x8)[t169,0] = 0x01\n
    v7 = ([D] GetI(136:I8x8)[t186,0] ? [D] GetI(72:F64x8)[t186,0] : nan);\n
    [D] PutI(136:I8x8)[t186,0] = 0x00\n
    v13 = a1;\n
    v15 = v13[1];\n
    v5 = v13[0];\n
    [D] PutI(72:F64x8)[t210,0] = t213\n
    [D] PutI(136:I8x8)[t210,0] = 0x01\n
    [D] PutI(72:F64x8)[t223,0] = t226\n
    [D] PutI(136:I8x8)[t223,0] = 0x01\n
    v6 = v15;\n
    [D] PutI(72:F64x8)[t239,0] = t242\n
    [D] PutI(136:I8x8)[t239,0] = 0x01\n
    [D] PutI(72:F64x8)[t252,0] = t255\n
    [D] PutI(136:I8x8)[t252,0] = 0x01\n
    [D] PutI(72:F64x8)[t263,1] = t264\n
    [D] PutI(136:I8x8)[t263,1] = 0x01\n
    [D] PutI(136:I8x8)[t263,0] = 0x00\n
    [D] PutI(72:F64x8)[t286,0] = t290\n
    [D] PutI(136:I8x8)[t286,0] = 0x01\n
    [D] PutI(72:F64x8)[t286,2] = t283\n
    [D] PutI(136:I8x8)[t286,2] = 0x01\n
    [D] PutI(72:F64x8)[t301,1] = t302\n
    [D] PutI(136:I8x8)[t301,1] = 0x01\n
    [D] PutI(136:I8x8)[t301,0] = 0x00\n
    [D] PutI(72:F64x8)[t321,1] = t322\n
    [D] PutI(136:I8x8)[t321,1] = 0x01\n
    [D] PutI(136:I8x8)[t321,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t348,0] ? [D] GetI(72:F64x8)[t348,0] : nan);\n
    [D] PutI(136:I8x8)[t348,0] = 0x00\n
    return cgc_add_money(v9, v0);\n
}\n
", "4203678:sub_40249e": null, "4203680:cgc_log_hours": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_log_hours(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_atoh(v1, a0);\n
    cgc_round_minutes(v1);\n
    if (v1[0] < 8)\n
    {\n
        v6 = cgc_add_time(v4, v1[0], *(&v2));\n
        return v6;\n
    }\n
    cgc_add_time(v4, 8, 0);\n
    v6 = cgc_add_time(v4 + 1, v1[0] - 8, *(&v2));\n
    return v6;\n
}\n
", "4203855:sub_40254f": null, "4203856:cgc_log_overtime_hours": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_log_overtime_hours(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_atoh(v1, a0);\n
    cgc_round_minutes(v1);\n
    v6 = v3;\n
    return cgc_add_time(v4 + 8, v1[0], *(&v2));\n
}\n
", "4203953:sub_4025b1": null, "4203968:cgc_calculate_standardpay": "int cgc_calculate_standardpay(unsigned int v0[2], unsigned int a0[2], unsigned int a1[2])\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    return cgc_add_pay(v0, a0, a1);\n
}\n
", "4204046:sub_40260e": null, "4204048:cgc_calculate_totalpay": null, "4204284:sub_4026fc": null, "4204288:cgc_nonexempt_overtime": "int cgc_nonexempt_overtime(unsigned int v9[2], unsigned int a0[2], unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[2];  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13[2];  // eax\n
    unsigned int v15;  // eax\n
\n
    v9[0] = 0;\n
    v9[1] = 0;\n
    v10 = a0;\n
    v12 = v10[1];\n
    v3 = v10[0];\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v4 = v12;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t24,1] = t25\n
    [D] PutI(136:I8x8)[t24,1] = 0x01\n
    [D] PutI(136:I8x8)[t24,0] = 0x00\n
    [D] PutI(72:F64x8)[t44,1] = t45\n
    [D] PutI(136:I8x8)[t44,1] = 0x01\n
    [D] PutI(136:I8x8)[t44,0] = 0x00\n
    [D] PutI(72:F64x8)[t66,0] = t69\n
    [D] PutI(136:I8x8)[t66,0] = 0x01\n
    [D] PutI(72:F64x8)[t77,1] = t78\n
    [D] PutI(136:I8x8)[t77,1] = 0x01\n
    [D] PutI(136:I8x8)[t77,0] = 0x00\n
    v2 = ([D] GetI(136:I8x8)[t103,0] ? [D] GetI(72:F64x8)[t103,0] : nan);\n
    [D] PutI(136:I8x8)[t103,0] = 0x00\n
    [D] PutI(72:F64x8)[t114,0] = t117\n
    [D] PutI(136:I8x8)[t114,0] = 0x01\n
    v8 = ([D] GetI(136:I8x8)[t131,0] ? [D] GetI(72:F64x8)[t131,0] : nan);\n
    [D] PutI(136:I8x8)[t131,0] = 0x00\n
    [D] PutI(72:F64x8)[t142,0] = t145\n
    [D] PutI(136:I8x8)[t142,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,0] = t158\n
    [D] PutI(136:I8x8)[t155,0] = 0x01\n
    [D] PutI(72:F64x8)[t166,1] = t167\n
    [D] PutI(136:I8x8)[t166,1] = 0x01\n
    [D] PutI(136:I8x8)[t166,0] = 0x00\n
    v1 = ([D] GetI(136:I8x8)[t192,0] ? [D] GetI(72:F64x8)[t192,0] : nan);\n
    [D] PutI(136:I8x8)[t192,0] = 0x00\n
    [D] PutI(72:F64x8)[t203,0] = t206\n
    [D] PutI(136:I8x8)[t203,0] = 0x01\n
    v7 = ([D] GetI(136:I8x8)[t220,0] ? [D] GetI(72:F64x8)[t220,0] : nan);\n
    [D] PutI(136:I8x8)[t220,0] = 0x00\n
    v13 = a1;\n
    v15 = v13[1];\n
    v5 = v13[0];\n
    [D] PutI(72:F64x8)[t244,0] = t247\n
    [D] PutI(136:I8x8)[t244,0] = 0x01\n
    [D] PutI(72:F64x8)[t257,0] = t260\n
    [D] PutI(136:I8x8)[t257,0] = 0x01\n
    v6 = v15;\n
    [D] PutI(72:F64x8)[t273,0] = t276\n
    [D] PutI(136:I8x8)[t273,0] = 0x01\n
    [D] PutI(72:F64x8)[t286,0] = t289\n
    [D] PutI(136:I8x8)[t286,0] = 0x01\n
    [D] PutI(72:F64x8)[t297,1] = t298\n
    [D] PutI(136:I8x8)[t297,1] = 0x01\n
    [D] PutI(136:I8x8)[t297,0] = 0x00\n
    [D] PutI(72:F64x8)[t320,0] = t324\n
    [D] PutI(136:I8x8)[t320,0] = 0x01\n
    [D] PutI(72:F64x8)[t320,2] = t317\n
    [D] PutI(136:I8x8)[t320,2] = 0x01\n
    [D] PutI(72:F64x8)[t335,1] = t336\n
    [D] PutI(136:I8x8)[t335,1] = 0x01\n
    [D] PutI(136:I8x8)[t335,0] = 0x00\n
    [D] PutI(72:F64x8)[t355,1] = t356\n
    [D] PutI(136:I8x8)[t355,1] = 0x01\n
    [D] PutI(136:I8x8)[t355,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t382,0] ? [D] GetI(72:F64x8)[t382,0] : nan);\n
    [D] PutI(136:I8x8)[t382,0] = 0x00\n
    return cgc_add_money(v9, v0);\n
}\n
", "4204457:sub_4027a9": null, "4204464:cgc_get_key_value": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_key_value(char *v6, unsigned int a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    char *v1;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x60]\n
    char v3;  // [bp-0x5c]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_receive_until(&v3, a0, 96, &v2))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (v2 > 0)\n
    {\n
        cgc_memcpy(v6, &v3, 80);\n
        if (*(v6) == 10)\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
        v1 = &v6[v2 + 1];\n
        if (*(v1) == 96)\n
        {\n
            *(v1) = 0;\n
            while (v1 > v6)\n
            {\n
                v1 -= 1;\n
                if (*(v1) == 45)\n
                {\n
                    *(a1) = v6;\n
                    *(v1) = 0;\n
                    *(a2) = v1 + 1;\n
                    v4 = 2;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v4 = 3;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4204762:sub_4028da": null, "4204768:cgc_process_key_value": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_key_value(unsigned int v2[20], unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_equals(a0, \"employee_id\"))\n
        v2[16] = cgc_atoi(a1);\n
    if (cgc_equals(a0, v0 - 6148))\n
        cgc_strncpy(v2, a1, 64);\n
    if (cgc_equals(a0, v0 - 6134))\n
    {\n
        cgc_atom(&v2[17], a1);\n
        if (v2[17] >= 75)\n
        {\n
            v2[17] = 75;\n
            v2[18] = 0;\n
        }\n
    }\n
    if (cgc_equals(a0, v0 - 6129) && cgc_equals(a1, v0 - 6122))\n
        v2[19] = 1;\n
    if (cgc_equals(a0, v0 - 6258))\n
    {\n
        *(a2) = cgc_atoi(a1);\n
        if (*(a2) >= 0 && *(a2) < 52)\n
            goto LABEL_402a7b;\n
        *(a2) = 0;\n
LABEL_402a7b:\n
    }\n
    if (!cgc_equals(a0, v0 - 6118) && !cgc_equals(a0, v0 - 6111) && !cgc_equals(a0, v0 - 6103) && !cgc_equals(a0, v0 - 6093) && !cgc_equals(a0, v0 - 6084))\n
        goto LABEL_402b45;\n
    cgc_log_hours(&v2[14 * *(a2)] + 1, a1);\n
LABEL_402b45:\n
    if (!cgc_equals(a0, v0 - 6077))\n
    {\n
        v4 = cgc_equals(a0, v0 - 6068);\n
        if (!v4)\n
            return v4;\n
    }\n
    v4 = cgc_log_overtime_hours(&v2[14 * *(a2)] + 1, a1);\n
    return v4;\n
}\n
", "4205485:sub_402bad": null, "4205488:cgc_merge_employee_records": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[63];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_merge_employee_records(unsigned int v2[20], struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3[20];  // eax, Other Possible Types: unsigned int, unsigned int *\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2[16] == -1 && a0->field_0)\n
    {\n
        cgc_strncpy(v2, a0, 64);\n
        v2[16] = a0->field_40;\n
        v2[17] = a0->field_44;\n
        v2[18] = a0->field_48;\n
        v3 = v2;\n
        *((v3 + 76)) = a0->field_4c;\n
        return v2;\n
    }\n
    v3 = v2;\n
    if (v3[16] == -1)\n
        return v2;\n
    for (v1 = 0; v1 < 52; v1 = v3)\n
    {\n
        cgc_add_time(&v2[14 * v1] + 1, *(&(&a0[1].field_0)[56 * v1]), *(&a0[1].padding_1[3 + 56 * v1]));\n
        cgc_add_time(&v2[14 * v1 + 2] + 1, *(&a0[1].padding_1[7 + 56 * v1]), *(&a0[1].padding_1[11 + 56 * v1]));\n
        if (!v2[19])\n
            v2[1 + 13 + 14 * v1] = v0 - 12724;\n
        cgc_calculate_standardpay(&v2[14 * v1 + 4] + 1, &v2[17], &v2[14 * v1] + 1);\n
        v2[1 + 13 + 14 * v1](&v2[14 * v1 + 6] + 1, &v2[17]);\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4205975:sub_402d97": null, "4205984:cgc_process_query": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_query()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (v1 > 4)\n
        return;\n
    goto *(((stack_base)[32] + (stack_base)[28] * 4 - 6180)) + (stack_base)[32];\n
}\n
", "4206557:sub_402fdd": null, "4206560:cgc_output_paycheck": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_paycheck(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_print(\"employee-\");\n
    cgc_print(v3);\n
    cgc_print(v0 - 6051);\n
    cgc_itoa(&v1, a0);\n
    cgc_print(&v1);\n
    cgc_print(v0 - 6044);\n
    cgc_htoa(&v1, v3 + 80 + a0 * 56);\n
    cgc_print(&v1);\n
    cgc_print(v0 - 6029);\n
    cgc_htoa(&v1, v3 + 80 + a0 * 56 + 8);\n
    cgc_print(&v1);\n
    cgc_print(v0 - 6018);\n
    cgc_mtoa(&v1, v3 + 80 + a0 * 56 + 16);\n
    cgc_print(&v1);\n
    cgc_print(v0 - 6004);\n
    cgc_mtoa(&v1, v3 + 80 + a0 * 56 + 24);\n
    cgc_print(&v1);\n
    cgc_print(v0 - 5990);\n
    cgc_calculate_totalpay(v3 + 80 + a0 * 56);\n
    cgc_print(v3 + 80 + a0 * 56 + 40);\n
    v5 = v2;\n
    return cgc_print(v0 - 5981);\n
}\n
", "4207010:sub_4031a2": null, "4207024:cgc_c_standardpay": null, "4207213:sub_40326d": null, "4207216:cgc_c_overtimepay": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_c_overtimepay(unsigned int v19, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    unsigned int v3;  // [bp-0x48]\n
    unsigned int v4;  // [bp-0x44]\n
    unsigned int v5;  // [bp-0x40]\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0x18]\n
    void* v16;  // [bp-0x14]\n
    void* v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v20;  // ebx\n
\n
    v18 = v20;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a3)\n
    {\n
        v9 = a1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v10 = a2;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t4,1] = t5\n
        [D] PutI(136:I8x8)[t4,1] = 0x01\n
        [D] PutI(136:I8x8)[t4,0] = 0x00\n
        [D] PutI(72:F64x8)[t24,1] = t25\n
        [D] PutI(136:I8x8)[t24,1] = 0x01\n
        [D] PutI(136:I8x8)[t24,0] = 0x00\n
        [D] PutI(72:F64x8)[t46,0] = t49\n
        [D] PutI(136:I8x8)[t46,0] = 0x01\n
        [D] PutI(72:F64x8)[t57,1] = t58\n
        [D] PutI(136:I8x8)[t57,1] = 0x01\n
        [D] PutI(136:I8x8)[t57,0] = 0x00\n
        v8 = ([D] GetI(136:I8x8)[t83,0] ? [D] GetI(72:F64x8)[t83,0] : nan);\n
        [D] PutI(136:I8x8)[t83,0] = 0x00\n
        [D] PutI(72:F64x8)[t94,0] = t97\n
        [D] PutI(136:I8x8)[t94,0] = 0x01\n
        v15 = ([D] GetI(136:I8x8)[t111,0] ? [D] GetI(72:F64x8)[t111,0] : nan);\n
        [D] PutI(136:I8x8)[t111,0] = 0x00\n
    }\n
    else\n
    {\n
        v12 = a1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v13 = a2;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t3,1] = t4\n
        [D] PutI(136:I8x8)[t3,1] = 0x01\n
        [D] PutI(136:I8x8)[t3,0] = 0x00\n
        [D] PutI(72:F64x8)[t23,1] = t24\n
        [D] PutI(136:I8x8)[t23,1] = 0x01\n
        [D] PutI(136:I8x8)[t23,0] = 0x00\n
        v11 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
        [D] PutI(136:I8x8)[t49,0] = 0x00\n
        [D] PutI(72:F64x8)[t60,0] = t63\n
        [D] PutI(136:I8x8)[t60,0] = 0x01\n
        v15 = ([D] GetI(136:I8x8)[t77,0] ? [D] GetI(72:F64x8)[t77,0] : nan);\n
        [D] PutI(136:I8x8)[t77,0] = 0x00\n
    }\n
    v16 = 0;\n
    v17 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t17,1] = t18\n
    [D] PutI(136:I8x8)[t17,1] = 0x01\n
    [D] PutI(136:I8x8)[t17,0] = 0x00\n
    v3 = ([D] GetI(136:I8x8)[t43,0] ? [D] GetI(72:F64x8)[t43,0] : nan);\n
    [D] PutI(136:I8x8)[t43,0] = 0x00\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v14 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    v5 = v19;\n
    [D] PutI(72:F64x8)[t88,0] = t91\n
    [D] PutI(136:I8x8)[t88,0] = 0x01\n
    [D] PutI(72:F64x8)[t101,0] = t104\n
    [D] PutI(136:I8x8)[t101,0] = 0x01\n
    v4 = a0;\n
    [D] PutI(72:F64x8)[t120,0] = t123\n
    [D] PutI(136:I8x8)[t120,0] = 0x01\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    [D] PutI(72:F64x8)[t144,1] = t145\n
    [D] PutI(136:I8x8)[t144,1] = 0x01\n
    [D] PutI(136:I8x8)[t144,0] = 0x00\n
    [D] PutI(72:F64x8)[t167,0] = t171\n
    [D] PutI(136:I8x8)[t167,0] = 0x01\n
    [D] PutI(72:F64x8)[t167,2] = t164\n
    [D] PutI(136:I8x8)[t167,2] = 0x01\n
    [D] PutI(72:F64x8)[t182,1] = t183\n
    [D] PutI(136:I8x8)[t182,1] = 0x01\n
    [D] PutI(136:I8x8)[t182,0] = 0x00\n
    [D] PutI(72:F64x8)[t202,1] = t203\n
    [D] PutI(136:I8x8)[t202,1] = 0x01\n
    [D] PutI(136:I8x8)[t202,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t232,0] ? [D] GetI(72:F64x8)[t232,0] : nan);\n
    [D] PutI(136:I8x8)[t232,0] = 0x00\n
    cgc_add_money(&v16, v0);\n
    v7 = v16;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v6 = v17;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t11,1] = t12\n
    [D] PutI(136:I8x8)[t11,1] = 0x01\n
    [D] PutI(136:I8x8)[t11,0] = 0x00\n
    [D] PutI(72:F64x8)[t31,1] = t32\n
    [D] PutI(136:I8x8)[t31,1] = 0x01\n
    [D] PutI(136:I8x8)[t31,0] = 0x00\n
    v2 = ([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan);\n
    [D] PutI(136:I8x8)[t57,0] = 0x00\n
    [D] PutI(72:F64x8)[t68,0] = t71\n
    [D] PutI(136:I8x8)[t68,0] = 0x01\n
    return v1;\n
}\n
", "4207483:sub_40337b": null, "4207488:cgc_c_netpay": null, "4207884:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}