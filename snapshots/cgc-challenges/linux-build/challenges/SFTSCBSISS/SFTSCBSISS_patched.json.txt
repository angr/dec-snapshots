{"4198400:_init": "extern struct_0 *g_406b7c;\n
\n
int _init()\n
{\n
    if (g_406b7c)\n
    {\n
        g_406b7c();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198480:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4198560:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198576:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4198592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198608:sub_4010d0": "int sub_4010d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198614:sub_4010d6": null, "4198624:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198667:sub_40110b": null, "4198668:sub_40110c": "int sub_40110c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198672:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198676:sub_401114": null, "4198688:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 23139;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198739:sub_401153": "int sub_401153()\n
{\n
}\n
", "4198745:sub_401159": "int sub_401159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198752:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 23075;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198823:sub_4011a7": "int sub_4011a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198832:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406b78;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406b78)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198907:sub_4011fb": "int sub_4011fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198912:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198921:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198925:sub_40120d": null, "4198928:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"lj\";\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4199020:sub_40126c": null, "4199024:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &\"lj\";\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_50->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_50 == v9)\n
        {\n
            v1->field_50 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_50 == v9)\n
    {\n
        v1->field_50 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4199707:sub_40151b": null, "4199712:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &\"lj\";\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_50;\n
    v7->field_50 = v3;\n
    return v3;\n
}\n
", "4199912:sub_4015e8": null, "4199920:cgc_free": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 **, struct_0 *, struct struct_1 *[2], unsigned int\n
\n
    v1 = &\"lj\";\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_50 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_50 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_50;\n
    v2[1] = 0;\n
    if (v9->field_50)\n
    {\n
        v12 = v1;\n
        *((&v12->field_50->field_0 + (v12->field_50->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_50 = v7;\n
    return v1;\n
}\n
", "4200384:cgc_floor": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 **, struct_0 *, struct struct_1 *[2], unsigned int\n
\n
    v1 = &\"lj\";\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_50 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_50 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_50;\n
    v2[1] = 0;\n
    if (v9->field_50)\n
    {\n
        v12 = v1;\n
        *((&v12->field_50->field_0 + (v12->field_50->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_50 = v7;\n
    return v1;\n
}\n
", "4200548:sub_401864": null, "4200560:cgc_round_away_from_zero": null, "4200714:sub_40190a": null, "4200720:cgc_round": null, "4200864:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"lj\";\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4200956:sub_4019fc": null, "4200960:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4201169:sub_401ad1": null, "4201184:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v3 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        a0->field_0 = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4201377:sub_401ba1": null, "4201392:cgc_float_to_str": null, "4202250:sub_401f0a": null, "4202256:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v14, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_1 *v6;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x60]\n
    struct_1 *v8;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0x58]\n
    char v10;  // [bp-0x51]\n
    char v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
\n
    v2 = \"lj\";\n
    v12 = 0;\n
    if (!v14)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v13 = v12;\n
            return v13;\n
        }\n
        else if (*(v14) != 64)\n
        {\n
            cgc_putc(*(v14));\n
            v14 += 1;\n
            v12 += 1;\n
        }\n
        else\n
        {\n
            v14 += 1;\n
            v1 = *(v14);\n
            if (!v1)\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 99)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v10 = *(v15);\n
                cgc_putc(v10);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v16 = a0;\n
                a0 = v16 + 1;\n
                v9 = &*(v16)->field_0;\n
                cgc_int_to_str(v9, &v11);\n
                for (v8 = &v11; v8->field_0; v8 += 1)\n
                {\n
                    cgc_putc(v8->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v19 = ftop<4> - 1 + 1;\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v11;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v21 = v20 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v11; v4->field_0; v4 += 1)\n
                {\n
                    cgc_putc(v4->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v22 = a0;\n
                a0 = v22 + 1;\n
                for (v3 = &*(v22)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v12 += 1;\n
                }\n
            }\n
            else\n
            {\n
                if (v1 != 120)\n
                {\n
                    v13 = -1;\n
                    return v13;\n
                }\n
                v23 = a0;\n
                a0 = v23 + 1;\n
                v7 = *(v23);\n
                cgc_int_to_hex(v7, &v11);\n
                for (v6 = &v11; v6->field_0; v6 += 1)\n
                {\n
                    cgc_putc(v6->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            v14 += 1;\n
        }\n
    }\n
}\n
", "4203006:sub_4021fe": null, "4203008:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4203066:sub_40223a": null, "4203072:cgc_sprng": "typedef struct struct_0 {\n
    char padding_0[216];\n
    unsigned int field_d8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprng(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // edi\n
    struct_0 *v16;  // eax\n
    unsigned int v17;  // ecx\n
\n
    v0 = &\"lj\";\n
    v3 = a0;\n
    v2 = v4;\n
    for (v1 = 0; v1 < 16; v1 += 1)\n
    {\n
        v5 = v2;\n
        v6 = v3;\n
        v3 = v6 ^ v6 / 0x1000;\n
        v2 = v5 ^ ((v6 CONCAT v5) * 0x100000 >> 32);\n
        v8 = v2;\n
        v9 = v3;\n
        v3 = v9 ^ ((v9 CONCAT v8) * 0x2000000 >> 32);\n
        v2 = v8 ^ v8 * 0x2000000;\n
        v12 = v2;\n
        v13 = v3;\n
        v3 = v13 ^ v13 / 0x8000000;\n
        v2 = v12 ^ ((v13 CONCAT v12) * 32 >> 32);\n
        v15 = v2;\n
        v16 = v0;\n
        v17 = v1;\n
        *(&v16->padding_0[88 + 8 * v17]) = v15 * 3625897269;\n
        *(&v16->padding_0[92 + 8 * v17]) = (v15 * 3625897269 >> 32) + v15 * 419896726 + v3 * 3625897269;\n
    }\n
    v0->field_d8 = 0;\n
    return v0;\n
}\n
", "4203298:sub_402322": null, "4203312:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int position;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = *((4221924 + 8 * position));\n
    v2 = *((4221920 + 8 * position));\n
    v9 = position + 1;\n
    if (v9 < 0)\n
        v9 = position + 16;\n
    position = position + -(v9 & -0x10) + 1;\n
    v1 = *((4221924 + 8 * position));\n
    v0 = *((4221920 + 8 * position));\n
    v10 = v0;\n
    v11 = v1;\n
    v1 = v11 ^ ((v11 CONCAT v10) * 0x8000000 >> 32);\n
    v0 = v10 ^ v10 * 0x8000000;\n
    v14 = v0;\n
    v15 = v1;\n
    v1 = v15 ^ v15 / 0x2000;\n
    v0 = v14 ^ ((v15 CONCAT v14) * 0x80000 >> 32);\n
    v2 ^= v3 >> 14;\n
    *((4221924 + 8 * position)) = v3 ^ v1;\n
    *((4221920 + 8 * position)) = v2 ^ v0;\n
    return *((4221920 + 8 * position)) * 3479400805;\n
}\n
", "4203576:sub_402438": null, "4203584:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"lj\";\n
    if (a0 <= v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = a0 - v5 + 1;\n
    v2 = (0 CONCAT -1) /m v3;\n
    do\n
    {\n
        v1 = cgc_prng();\n
    } while (v1 >= v3 * v2);\n
    v4 = (0 CONCAT v1) /m v2 + v5;\n
    return v4;\n
}\n
", "4203713:sub_4024c1": null, "4203728:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4203800:sub_402518": null, "4203808:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203862:sub_402556": null, "4203872:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203926:sub_402596": null, "4203936:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"lj\";\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4204002:sub_4025e2": null, "4204016:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"lj\";\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4204082:sub_402632": null, "4204096:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4204150:sub_402676": null, "4204160:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4204254:sub_4026de": null, "4204256:cgc_isnan": null, "4204279:sub_4026f7": null, "4204288:cgc_isinf": null, "4204335:sub_40272f": null, "4204336:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned long v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = \"lj\";\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_402962:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40293b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40293b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40293b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_402962;\n
                if (!v4)\n
                {\n
LABEL_4028b7:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40293b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_4028b7;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40293b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4204924:sub_40297c": null, "4204928:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"lj\";\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4205332:sub_402b14": null, "4205344:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4205435:sub_402b7b": null, "4205440:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4205595:sub_402c1b": null, "4205600:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4205708:sub_402c8c": null, "4205712:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4205790:sub_402cde": null, "4205792:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4205900:sub_402d4c": null, "4205904:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4206099:sub_402e13": null, "4206112:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4206189:sub_402e6d": null, "4206192:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"lj\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!v3)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4206406:sub_402f46": null, "4206416:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"lj\";\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4206575:sub_402fef": null, "4206576:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4206775:sub_4030b7": null, "4206784:cgc_puts": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: char\n
    unsigned int v6;  // eax\n
\n
    v1 = \"lj\";\n
    v3 = 0;\n
    if (!v5)\n
        return v5;\n
    v2 = cgc_strlen(v5);\n
    while (true)\n
    {\n
        v6 = v3;\n
        if (v6 < v2)\n
        {\n
            v0 = &v4;\n
            v6 = cgc_transmit(1, v5 + v3, v2 - v3);\n
            if (v6)\n
                return v6;\n
            v3 = *(&v4) + v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                if (v4 == 1)\n
                    return v6;\n
                v0 = &v4;\n
                v6 = cgc_transmit(1, v1 - 6952, 1);\n
                if (v6)\n
                    return v6;\n
            }\n
        }\n
    }\n
}\n
", "4207012:sub_4031a4": null, "4207024:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4207130:sub_40321a": null, "4207136:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &\"lj\";\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_40)\n
        {\n
            cgc_deallocate(v4->field_40);\n
            v12 = v4;\n
            v12->field_40 = 0;\n
            v12->field_44 = 0;\n
            v12->field_48 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_40)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_48 >= v11->field_40 + v11->field_44)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_40)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_44 = cgc_strlen(v10);\n
        v0 = &v13->field_40;\n
        if (cgc_allocate(v13->field_44, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_40, v10);\n
        v14 = v4;\n
        v14->field_48 = v14->field_40;\n
    }\n
    v10 = &v4->field_48->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_40 + v15->field_44;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_40 + v16->field_44)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_3c = v8;\n
    *(v7) = 0;\n
    v17->field_48 = v7 + 1;\n
    v9 = v17->field_3c;\n
    return v9;\n
}\n
", "4207883:sub_40350b": null, "4207888:cgc_write": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"lj\";\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 < a0)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v5 + v2, a0 - v2))\n
            {\n
                v4 = v2;\n
                return v4;\n
            }\n
            v2 = *(&v3) + v2;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4208053:sub_4035b5": null, "4208064:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = \"lj\";\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4208256:cgc_ReceivePacket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceivePacket(char v7[2])\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x15]\n
    char v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"lj\";\n
    for (v5 = 0; v5 != 2; v5 = *(&v4) + v5)\n
    {\n
        v0 = &v4;\n
        v2 = cgc_receive(0, &v7[v5], 2 - v5);\n
        if (v2 < 0)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        else if (!*(&v4))\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
    if (v7[0])\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7[1] < 4)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7[1] <= 254)\n
    {\n
        v3 = v7[1] + 2;\n
        while (true)\n
        {\n
            if (v5 == v3)\n
            {\n
                v6 = v5;\n
                return v6;\n
            }\n
            v0 = &v4;\n
            if (cgc_receive(0, &v7[v5], v3 - v5) < 0)\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
            else if (*(&v4))\n
            {\n
                v5 = *(&v4) + v5;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4208634:sub_4037fa": null, "4208640:cgc_SendError": "int cgc_SendError(char v6, char a0)\n
{\n
    char v0;  // [bp-0x10c]\n
    char v1;  // [bp-0x10b]\n
    char v2;  // [bp-0x10a]\n
    char v3;  // [bp-0x109]\n
    char v4;  // [bp-0x108]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = 0;\n
    v1 = 3;\n
    v2 = 4;\n
    v3 = v6;\n
    v4 = a0;\n
    if (cgc_write(&v0, 5) != 5)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4208769:sub_403881": null, "4208784:cgc_SendResponse": "typedef struct struct_0 {\n
    char padding_0[128];\n
    char field_80;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SendResponse(char v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x110]\n
    char v1;  // [bp-0x10c]\n
    char v2;  // [bp-0x10b]\n
    char v3;  // [bp-0x10a]\n
    char v4;  // [bp-0x109]\n
    char v5;  // [bp-0x108]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v0 = \"lj\";\n
    v1 = 0;\n
    v3 = 3;\n
    v4 = v7;\n
    if (a0->field_80 != 1)\n
    {\n
        if (a0->field_80 != 2)\n
        {\n
            v6 = cgc_SendError(v7, 4);\n
            return v6;\n
        }\n
        cgc_memcpy(&v5, a0 + 1, 4);\n
        v2 = 6;\n
    }\n
    else if (cgc_strlen(a0 + 1) <= 252)\n
    {\n
        cgc_strcpy(&v5, a0 + 1);\n
        v2 = cgc_strlen(a0 + 1) + 2;\n
    }\n
    else\n
    {\n
        v6 = cgc_SendError(v7, 1);\n
        return v6;\n
    }\n
    if (cgc_write(&v1, v2 + 2) != v2 + 2)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = 1;\n
    return v6;\n
}\n
", "4209194:sub_403a2a": null, "4209200:cgc_HandleReadRequest": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleReadRequest(char v7[5], char a0)\n
{\n
    unsigned int v0;  // [bp-0xa8]\n
    unsigned int v1;  // [bp-0x9c]\n
    char v2;  // [bp-0x95]\n
    void* v3;  // [bp-0x94]\n
    char v4;  // [bp-0x8d]\n
    char v5;  // [bp-0x8c]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v1 = \"lj\";\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v2 = v7[3];\n
    cgc_bzero(&v5, 128);\n
    v4 = v7[4];\n
    if (v4 != a0 - 5)\n
    {\n
        cgc_SendError(v2, 1);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v4 <= 127)\n
    {\n
        v0 = v7 + 1;\n
        cgc_strncpy(&v5, v0, v4);\n
        v3 = cgc_SearchVARS(&v5, v0);\n
        if (!v3)\n
        {\n
            cgc_SendError(v2, 4);\n
            v6 = 0;\n
            return v6;\n
        }\n
        cgc_SendResponse(v2, v3);\n
        v6 = 1;\n
        return v6;\n
    }\n
    else\n
    {\n
        cgc_SendError(v2, 1);\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4209600:cgc_HandleWriteRequest": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleWriteRequest(char v10[5], char a0)\n
{\n
    unsigned int v0;  // [bp-0x11c]\n
    char v1;  // [bp-0x115]\n
    char v2;  // [bp-0x114]\n
    char v3;  // [bp-0x113]\n
    char v4;  // [bp-0x112]\n
    char v5;  // [bp-0x111]\n
    void* v6;  // [bp-0x110]\n
    char v7;  // [bp-0x10c]\n
    char v8;  // [bp-0x8c]\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v0 = \"lj\";\n
    if (!v10)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v5 = v10[3];\n
    v2 = 4;\n
    cgc_bzero(&v8, 128);\n
    v4 = v10[4];\n
    v2 += 1;\n
    if (v4 > a0 - 8)\n
    {\n
        cgc_SendError(v5, 1);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (v4 <= 127)\n
    {\n
        cgc_memcpy(&v8, v10 + 1, v4);\n
        v2 += v4;\n
        v1 = v10[1 + v4];\n
        v2 += 1;\n
        cgc_bzero(&v7, 128);\n
        v3 = v10[1 + 1 + v4];\n
        v2 += 1;\n
        if (v3 > a0 - v2)\n
        {\n
            cgc_SendError(v5, 1);\n
            v9 = 0;\n
            return v9;\n
        }\n
        else if (v3 <= 127)\n
        {\n
            cgc_memcpy(&v7, &v10[1 + v4 + 2], v3);\n
            v6 = cgc_UpdateVARSObject(&v8, v1);\n
            if (v6)\n
                cgc_SendResponse(v5, v6);\n
            else\n
                cgc_SendError(v5, 2);\n
            v9 = 1;\n
            return v9;\n
        }\n
        else\n
        {\n
            cgc_SendError(v5, 1);\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SendError(v5, 1);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4210342:sub_403ea6": null, "4210352:cgc_HandlePacket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandlePacket(char v6[4])\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    unsigned int v1;  // [bp-0x114]\n
    char v2;  // [bp-0xf]\n
    char v3;  // [bp-0xe]\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = \"lj\";\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = v6[1] + 2;\n
    if (v4 < 4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = v6[2];\n
    v2 = v6[3];\n
    v0 = v3;\n
    if (v0 == 1)\n
    {\n
        cgc_HandleReadRequest(v6, v4);\n
    }\n
    else if (v0 != 2)\n
    {\n
        cgc_SendError(v2, 3);\n
    }\n
    else\n
    {\n
        cgc_HandleWriteRequest(v6, v4);\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4210610:sub_403fb2": null, "4210624:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x110]\n
    char v1;  // [bp-0x10c]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"lj\";\n
    v2 = 0;\n
    if (!cgc_InitVARS())\n
    {\n
        cgc_puts(v0 - 6950);\n
        cgc__terminate();\n
    }\n
    while (cgc_ReceivePacket(&v1))\n
    {\n
        cgc_HandlePacket(&v1);\n
    }\n
    cgc_DestroyVARS();\n
    v6 = v3;\n
    return 0;\n
}\n
", "4210803:sub_404073": null, "4210816:cgc_InitVARS": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitVARS()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &\"lj\";\n
    v5 = cgc_CreateVARSObject(\"system.name\", 1, \"CGC CB\");\n
    v0->field_4c = v5;\n
    if (!v5)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4210916:sub_4040e4": null, "4210928:cgc_CreateVARSObject": "typedef struct struct_0 {\n
    char padding_0[128];\n
    char field_80;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateVARSObject(unsigned int v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"lj\";\n
    if (v3 && a1)\n
    {\n
        if (a0 == 1)\n
        {\n
LABEL_404149:\n
            v1 = cgc_calloc(1, 268);\n
            if (!v1)\n
                cgc__terminate();\n
            cgc_strncpy(v1, v3, 127);\n
            v1->field_80 = a0;\n
            if (a0 == 1)\n
            {\n
                cgc_strncpy(v1 + 1, a1, 127);\n
            }\n
            else\n
            {\n
                if (a0 == 2)\n
                    cgc_memcpy(v1 + 1, a1, 4);\n
            }\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (a0 == 2)\n
        {\n
            goto LABEL_404149;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211229:sub_40421d": null, "4211232:cgc_DestroyVARS": "typedef struct struct_1 {\n
    char padding_0[76];\n
    struct struct_0 *field_4c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[264];\n
    struct struct_0 *field_108;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_pVARS;\n
\n
int cgc_DestroyVARS()\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &\"lj\";\n
    if (!cgc_pVARS)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v2 = v0->field_4c; v2; v2 = v1)\n
    {\n
        v1 = v2->field_108;\n
        cgc_free(v2);\n
    }\n
    v3 = 1;\n
    return v3;\n
}\n
", "4211354:sub_40429a": null, "4211360:cgc_SearchVARS": "typedef struct struct_1 {\n
    char padding_0[76];\n
    struct struct_0 *field_4c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[264];\n
    struct struct_0 *field_108;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_pVARS;\n
\n
int cgc_SearchVARS(char *v3)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &\"lj\";\n
    if (cgc_pVARS && v3)\n
    {\n
        v1 = v0->field_4c;\n
        while (true)\n
        {\n
            if (!v1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (cgc_strcmp(v1, v3))\n
            {\n
                v1 = v1->field_108;\n
            }\n
            else\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211516:sub_40433c": null, "4211520:cgc_InsertVARSObject": "typedef struct struct_1 {\n
    char padding_0[76];\n
    struct struct_0 *field_4c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_pVARS;\n
\n
int cgc_InsertVARSObject(unsigned int v2[67])\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_1 *v3;  // eax\n
\n
    v0 = &\"lj\";\n
    if (cgc_pVARS && v2)\n
    {\n
        v3 = v0;\n
        v2[65] = 0;\n
        v2[66] = v3->field_4c;\n
        v3->field_4c->field_104 = v2;\n
        v3->field_4c = &v2[0];\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4211649:sub_4043c1": null, "4211664:cgc_DeleteVARSObject": "typedef struct struct_3 {\n
    char padding_0[76];\n
    struct struct_2 *field_4c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[260];\n
    struct struct_1 *field_104;\n
    struct struct_0 *field_108;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[264];\n
    unsigned int field_108;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_pVARS;\n
\n
int cgc_DeleteVARSObject(char *v3)\n
{\n
    struct_3 *v0;  // [bp-0x14]\n
    struct_2 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &\"lj\";\n
    if (cgc_pVARS && v3)\n
    {\n
        v1 = v0->field_4c;\n
        do\n
        {\n
            if (!v1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        } while (cgc_strcmp(v1, v3));\n
        if (v1 == v0->field_4c)\n
        {\n
            v0->field_4c = &v1->field_108;\n
            cgc_free(v1);\n
            v2 = 1;\n
            return v2;\n
        }\n
        v1->field_104->field_108 = v1->field_108;\n
        if (v1->field_108)\n
            v1->field_108->field_104 = v1->field_104;\n
        cgc_free(v1);\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211946:sub_4044ea": null, "4211952:cgc_UpdateVARSObject": "typedef struct struct_0 {\n
    char padding_0[128];\n
    char field_80;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UpdateVARSObject(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"lj\";\n
    if (v3 && a1)\n
    {\n
        if (a0 == 1)\n
        {\n
LABEL_404549:\n
            v1 = cgc_SearchVARS(v3);\n
            if (!v1)\n
            {\n
                v1 = cgc_CreateVARSObject(v3, a0, a1);\n
                if (!v1)\n
                {\n
                    v2 = 0;\n
                    return v2;\n
                }\n
                if (cgc_InsertVARSObject(v1))\n
                {\n
                    v2 = v1;\n
                    return v2;\n
                }\n
                v2 = 0;\n
                return v2;\n
            }\n
            else\n
            {\n
                if (v1->field_80 == a0)\n
                {\n
                    if (a0 == 1)\n
                    {\n
                        cgc_strncpy(v1 + 1, a1, 127);\n
                    }\n
                    else\n
                    {\n
                        if (a0 == 2)\n
                            cgc_memcpy(v1 + 1, a1, 4);\n
                    }\n
                    v2 = v1;\n
                    return v2;\n
                }\n
                else\n
                {\n
                    v2 = 0;\n
                    return v2;\n
                }\n
            }\n
        }\n
        else if (a0 == 2)\n
        {\n
            goto LABEL_404549;\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4212328:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_deallocate": null, "5242908:cgc_log10": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}