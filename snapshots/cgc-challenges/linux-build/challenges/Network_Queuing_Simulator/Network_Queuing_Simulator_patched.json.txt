{"4202496:_init": "extern struct_0 *g_40949c;\n
\n
int _init()\n
{\n
    if (g_40949c)\n
    {\n
        g_40949c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_logf": "// attributes: PLT stub\n
int cgc_logf()\n
{\n
    ::libc.so.0::cgc_logf();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29555;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 29491;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern unsigned int __dso_handle;\n
extern char completed.0;\n
extern unsigned int g_409498;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (completed.0)\n
        return;\n
    if (g_409498)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    completed.0 = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_floor": null, "4203204:sub_4022c4": null, "4203216:cgc_round_away_from_zero": null, "4203370:sub_40236a": null, "4203376:cgc_round": null, "4203520:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203612:sub_40245c": null, "4203616:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4203825:sub_402531": null, "4203840:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4204033:sub_402601": null, "4204048:cgc_float_to_str": null, "4204906:sub_40296a": null, "4204912:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v14, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_1 *v6;  // [bp-0x64], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x60]\n
    struct_1 *v8;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0x58]\n
    char v10;  // [bp-0x51]\n
    char v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    if (!v14)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v13 = v12;\n
            return v13;\n
        }\n
        else if (*(v14) != 64)\n
        {\n
            cgc_putc(*(v14));\n
            v14 += 1;\n
            v12 += 1;\n
        }\n
        else\n
        {\n
            v14 += 1;\n
            v1 = *(v14);\n
            if (!v1)\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 99)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v10 = *(v15);\n
                cgc_putc(v10);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v16 = a0;\n
                a0 = v16 + 1;\n
                v9 = &*(v16)->field_0;\n
                cgc_int_to_str(v9, &v11);\n
                for (v8 = &v11; v8->field_0; v8 += 1)\n
                {\n
                    cgc_putc(v8->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v19 = ftop<4> - 1 + 1;\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v11;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v21 = v20 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v11; *(v4); v4 += 1)\n
                {\n
                    cgc_putc(*(v4));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v22 = a0;\n
                a0 = v22 + 1;\n
                for (v3 = &*(v22)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 120)\n
            {\n
                v23 = a0;\n
                a0 = v23 + 1;\n
                v7 = &*(v23)->field_0;\n
                cgc_int_to_hex(v7, &v11);\n
                for (v6 = &v11; *(v6); v6 += 1)\n
                {\n
                    cgc_putc(*(v6));\n
                    v12 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            v14 += 1;\n
        }\n
    }\n
}\n
", "4205662:sub_402c5e": null, "4205664:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4205722:sub_402c9a": null, "4205728:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4205800:sub_402ce8": null, "4205808:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205862:sub_402d26": null, "4205872:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205926:sub_402d66": null, "4205936:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4206002:sub_402db2": null, "4206016:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4206082:sub_402e02": null, "4206096:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206150:sub_402e46": null, "4206160:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4206254:sub_402eae": null, "4206256:cgc_isnan": null, "4206279:sub_402ec7": null, "4206288:cgc_isinf": null, "4206335:sub_402eff": null, "4206336:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned long v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_403132:\n
                v15 = v5;\n
                v3 = v15;\n
                if (![D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40310b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40310b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40310b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_403132;\n
                if (!v4)\n
                {\n
LABEL_403087:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40310b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_403087;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40310b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4206924:sub_40314c": null, "4206928:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4207332:sub_4032e4": null, "4207344:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4207435:sub_40334b": null, "4207440:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4207595:sub_4033eb": null, "4207600:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207708:sub_40345c": null, "4207712:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4207790:sub_4034ae": null, "4207792:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4207900:sub_40351c": null, "4207904:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4208099:sub_4035e3": null, "4208112:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4208189:sub_40363d": null, "4208192:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v3)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4208406:sub_403716": null, "4208416:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4208575:sub_4037bf": null, "4208576:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4208775:sub_403887": null, "4208784:cgc_puts": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: char\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!v5)\n
        return v5;\n
    v2 = cgc_strlen(v5);\n
    while (true)\n
    {\n
        v6 = v3;\n
        if (v6 < v2)\n
        {\n
            v0 = &v4;\n
            v6 = cgc_transmit(1, v5 + v3, v2 - v3);\n
            if (v6)\n
                return v6;\n
            v3 = *(&v4) + v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                if (v4 == 1)\n
                    return v6;\n
                v0 = &v4;\n
                v6 = cgc_transmit(1, v1 - 8815, 1);\n
                if (v6)\n
                    return v6;\n
            }\n
        }\n
    }\n
}\n
", "4209012:sub_403974": null, "4209024:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4209130:sub_4039ea": null, "4209136:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_48)\n
        {\n
            cgc_deallocate(v4->field_48);\n
            v12 = v4;\n
            v12->field_48 = 0;\n
            v12->field_4c = 0;\n
            v12->field_50 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_48)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_50 >= v11->field_48 + v11->field_4c)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_48)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_4c = cgc_strlen(v10);\n
        v0 = &v13->field_48;\n
        if (cgc_allocate(v13->field_4c, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_48, v10);\n
        v14 = v4;\n
        v14->field_50 = v14->field_48;\n
    }\n
    v10 = &v4->field_50->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_48 + v15->field_4c;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_48 + v16->field_4c)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_44 = v8;\n
    *(v7) = 0;\n
    v17->field_50 = v7 + 1;\n
    v9 = v17->field_44;\n
    return v9;\n
}\n
", "4209883:sub_403cdb": null, "4209888:cgc_write": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 < a0)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v5 + v2, a0 - v2))\n
            {\n
                v4 = v2;\n
                return v4;\n
            }\n
            v2 = *(&v3) + v2;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4210053:sub_403d85": null, "4210064:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4210256:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc();\n
    cgc_memset(v1, 0, v3 * a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4210346:sub_403eaa": null, "4210352:cgc_malloc": "typedef struct struct_2 {\n
    char padding_0[84];\n
    struct struct_1 *field_54;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_heap_manager;\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    char v0;  // [bp-0x1d]\n
    struct_2 *v1;  // [bp-0x1c]\n
    struct_3 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_2 *v7;  // ebx\n
    struct_0 *v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_heap_manager)\n
    {\n
        cgc_allocate(0x1000, 0);\n
        v7 = v1;\n
        v7->field_54 = *(&v3);\n
        v7->field_54->field_0 = 0x1000;\n
        v7->field_54->field_8 = 4;\n
        v7->field_54->field_4 = 0x1000 - v7->field_54->field_8;\n
        cgc_allocate(0x1000, 0);\n
        cgc_memset(v1->field_54->field_c, 0, 0x1000);\n
        v4 = v1->field_54->field_c;\n
        v4->field_0 = 4084;\n
        v4->field_4 = 0;\n
    }\n
    v4 = v1->field_54->field_c;\n
    if (v6 > v4->field_0)\n
    {\n
        cgc_allocate(0x1000, 0);\n
        if (!v4->field_4)\n
        {\n
            cgc_puts(&v1[105].padding_0[72]);\n
            cgc__terminate();\n
        }\n
        v4 = v4->field_4;\n
        v4->field_0 = 4084;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v8 = v4;\n
        v8->field_0 = v8->field_0 - v6;\n
        v2 = &v4[1].field_0;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if ((v2->field_4 & 1))\n
                v0 = v2->field_0 < v6 + 8;\n
            if (!(v0 & 1))\n
                break;\n
            v2 = 3 + &v2[1].field_0 + v2->field_0;\n
        }\n
        *(v2) = v6;\n
        *((v2 + 4)) = 1;\n
        v5 = &v2[1].field_0 + 3;\n
        return v5;\n
    }\n
}\n
", "4210865:sub_4040b1": null, "4210880:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    struct_1 *v3;  // eax\n
\n
    v1 = v2 - 8;\n
    v1->field_4 = 2;\n
    v0 = &v2 & -0x1000;\n
    v3 = v0;\n
    *(&v3) = v1->field_0 + *(&v3);\n
    return v0;\n
}\n
", "4210933:sub_4040f5": null, "4210944:cgc_InitRandom": "typedef struct struct_0 {\n
    char padding_0[136];\n
    unsigned long long field_88;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char g_400000;\n
extern void* g_40952c;\n
extern void* last_pkt_time;\n
\n
int cgc_InitRandom()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    char v1;  // [bp-0x31]\n
    struct_0 *v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x16]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    g_40952c = 0;\n
    last_pkt_time = 0;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v6)\n
            v1 = !(v6 <= &g_400000);\n
        if (!(v1 & 1))\n
            break;\n
        cgc_printf(&v2[64].padding_0[16]);\n
        v0 = 10;\n
        v5 = cgc_readUntil(&v7, 9);\n
        if (v5 == -1)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v6 = cgc_atoi(&v7);\n
    }\n
    v3 = v6;\n
    v4 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t2,1] = t3\n
    [D] PutI(136:I8x8)[t2,1] = 0x01\n
    [D] PutI(136:I8x8)[t2,0] = 0x00\n
    [D] PutI(72:F64x8)[t22,0] = t23\n
    [D] PutI(136:I8x8)[t22,0] = 0x01\n
    *(&v2->field_88) = ([D] GetI(136:I8x8)[t44,0] ? [D] GetI(72:F64x8)[t44,0] : nan);\n
    [D] PutI(136:I8x8)[t44,0] = 0x00\n
    v8 = 0;\n
    return v8;\n
}\n
", "4211189:sub_4041f5": null, "4211200:cgc_RandomGenerator": "typedef struct struct_0 {\n
    char padding_0[108];\n
    unsigned long long field_6c;\n
    unsigned int field_74;\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    unsigned long long field_80;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40951c;\n
\n
int cgc_RandomGenerator()\n
{\n
    char v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned long v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40951c)\n
    {\n
        v7 = 1;\n
        return v7;\n
    }\n
    v2 = cgc_rand_mt(*(&v0));\n
    v3 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t5,1] = t6\n
    [D] PutI(136:I8x8)[t5,1] = 0x01\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v6 = ([D] GetI(136:I8x8)[t30,0] ? [D] GetI(72:F64x8)[t30,0] : nan);\n
    [D] PutI(136:I8x8)[t30,0] = 0x00\n
    [D] PutI(72:F64x8)[t39,0] = t42\n
    [D] PutI(136:I8x8)[t39,0] = 0x01\n
    [D] PutI(72:F64x8)[t51,0] = t54\n
    [D] PutI(136:I8x8)[t51,0] = 0x01\n
    [D] PutI(72:F64x8)[t61,1] = t62\n
    [D] PutI(136:I8x8)[t61,1] = 0x01\n
    [D] PutI(136:I8x8)[t61,0] = 0x00\n
    v6 = ([D] GetI(136:I8x8)[t86,0] ? [D] GetI(72:F64x8)[t86,0] : nan);\n
    [D] PutI(136:I8x8)[t86,0] = 0x00\n
    v0 = cgc_rand_mt();\n
    v5 = v0 + -(((v0 >> 2) * 1531353243 >> 32 >> 7) * 1436) + 64;\n
    v9 = v1;\n
    v4 = cgc_rand_mt();\n
    v4 &= 63;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t8,1] = t9\n
    [D] PutI(136:I8x8)[t8,1] = 0x01\n
    [D] PutI(136:I8x8)[t8,0] = 0x00\n
    *(&(&v9->padding_0)[1]) = ([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan);\n
    [D] PutI(136:I8x8)[t33,0] = 0x00\n
    [D] PutI(72:F64x8)[t42,0] = t45\n
    [D] PutI(136:I8x8)[t42,0] = 0x01\n
    *(&v9->padding_7c[0]) = ([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan);\n
    [D] PutI(136:I8x8)[t57,0] = 0x00\n
    *((&v9->field_6c + 4)) = v5;\n
    v9->field_74 = v4;\n
    v7 = 1;\n
    return v7;\n
}\n
", "4211423:sub_4042df": null, "4211424:cgc_InitPoisson": "typedef struct struct_0 {\n
    char padding_0[136];\n
    unsigned long long field_88;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char g_400000;\n
extern void* g_40952c;\n
extern void* last_pkt_time;\n
\n
int cgc_InitPoisson()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    char v1;  // [bp-0x31]\n
    struct_0 *v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v7;  // [bp-0x16]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    g_40952c = 0;\n
    last_pkt_time = 0;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v6)\n
            v1 = !(v6 <= &g_400000);\n
        if (!(v1 & 1))\n
            break;\n
        cgc_printf(&v2[63].padding_0[78]);\n
        v0 = 10;\n
        v5 = cgc_readUntil(&v7, 9);\n
        if (v5 == -1)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v6 = cgc_atoi(&v7);\n
    }\n
    v3 = v6;\n
    v4 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t2,1] = t3\n
    [D] PutI(136:I8x8)[t2,1] = 0x01\n
    [D] PutI(136:I8x8)[t2,0] = 0x00\n
    *(&v2->field_88) = ([D] GetI(136:I8x8)[t27,0] ? [D] GetI(72:F64x8)[t27,0] : nan);\n
    [D] PutI(136:I8x8)[t27,0] = 0x00\n
    v8 = 0;\n
    return v8;\n
}\n
", "4211667:sub_4043d3": null, "4211680:cgc_CalcDelta": null, "4211764:sub_404434": null, "4211776:cgc_PoissonGenerator": null, "4211987:sub_404513": null, "4212000:cgc_InitManual": null, "4213390:sub_404a8e": null, "4213392:cgc_ManualGenerator": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
    unsigned int field_64;\n
    unsigned int field_68;\n
    unsigned long long field_6c;\n
    unsigned int field_74;\n
    unsigned int field_78;\n
    char padding_7c[4];\n
    unsigned long long field_80;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40951c;\n
\n
int cgc_ManualGenerator()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_40951c)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v0->field_60)\n
    {\n
        v4 = v0;\n
        v4->field_60 = v4->field_68;\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        if (v3->field_60 == v3->field_68 && !v0->field_64)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
    v5 = v0;\n
    if ([D] GetI(136:I8x8)[t7,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t18,0] = t21\n
    [D] PutI(136:I8x8)[t18,0] = 0x01\n
    [D] PutI(72:F64x8)[t28,1] = t29\n
    [D] PutI(136:I8x8)[t28,1] = 0x01\n
    [D] PutI(136:I8x8)[t28,0] = 0x00\n
    (&v5->field_68)[1] = ([D] GetI(136:I8x8)[t53,0] ? [D] GetI(72:F64x8)[t53,0] : nan);\n
    [D] PutI(136:I8x8)[t53,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    *(&v5->padding_7c[0]) = ([D] GetI(136:I8x8)[t77,0] ? [D] GetI(72:F64x8)[t77,0] : nan);\n
    [D] PutI(136:I8x8)[t77,0] = 0x00\n
    *((&v5->field_6c + 4)) = v5->field_60->field_8;\n
    v5->field_74 = v5->field_60->field_c;\n
    v5->field_60 = v5->field_60->field_10;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4213625:sub_404b79": null, "4213632:cgc_readUntil": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readUntil(char *v6, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x14]\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
    char *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(0, &v4, 1))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (*(&v3) != 1)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (v4 == a1)\n
            break;\n
        v7 = v6;\n
        v6 = v7 + 1;\n
        *(v7) = v4;\n
    }\n
    *(v6) = 0;\n
    v5 = v2;\n
    return v5;\n
}\n
", "4213836:sub_404c4c": null, "4213840:cgc_init_mt": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int mt_state;\n
\n
int cgc_init_mt(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    mt_state = v2;\n
    for (v1 = 1; v1 < 624; v1 = v3)\n
    {\n
        v4 = v0;\n
        *((v4 + v1 * 4 + 144)) = (*((v4 + (v1 - 1) * 4 + 144)) ^ *((v4 + (v1 - 1) * 4 + 144)) >> 30) * 1812433253 + v1;\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4213968:cgc_gen_mt_state": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gen_mt_state()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < 624; v3 = v5)\n
    {\n
        v0 = *((v1 + v3 * 4 + 144)) & 0x80000000;\n
        v2 = v0 + (*((v1 + ((v3 + 1 >> 31 CONCAT v3 + 1) /m 624 >> 32) * 4 + 144)) & 2147483647);\n
        *((v1 + v3 * 4 + 144)) = *((v1 + ((v3 + 397 >> 31 CONCAT v3 + 397) /m 624 >> 32) * 4 + 144)) ^ v2 >> 1;\n
        if ((v2 & 1))\n
        {\n
            v6 = v1;\n
            *((v6 + v3 * 4 + 144)) = *((v6 + v3 * 4 + 144)) ^ 2567483615;\n
        }\n
        v5 = v3 + 1;\n
    }\n
    return v5;\n
}\n
", "4214179:sub_404da3": null, "4214192:cgc_rand_mt": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_idx;\n
\n
int cgc_rand_mt()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_idx)\n
        cgc_gen_mt_state();\n
    v3 = v0;\n
    v1 = *(&v3[1].padding_0[52 + 4 * v3->field_58]);\n
    v1 ^= v1 >> 11;\n
    v1 ^= v1 * 128 & 2636928640;\n
    v1 ^= v1 * 0x8000 & 0xefc60000;\n
    v1 ^= v1 >> 18;\n
    v0->field_58 = (v0->field_58 + 1 >> 31 CONCAT v0->field_58 + 1) /m 624 >> 32;\n
    return v1;\n
}\n
", "4214357:sub_404e55": null, "4214368:cgc_InitQueues": "typedef struct struct_2 {\n
    char padding_0[2652];\n
    char field_a5c;\n
    char padding_a5d[11];\n
    char field_a68;\n
    char padding_a69[3];\n
    char *field_a6c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[2652];\n
    char field_a5c;\n
    char padding_a5d[11];\n
    char field_a68;\n
    char padding_a69[3];\n
    unsigned int field_a6c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[20];\n
    char field_24;\n
    char field_25;\n
    char field_26;\n
    char padding_27[1];\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitQueues()\n
{\n
    char v5;  // [bp-0x65]\n
    struct_2 *v6;  // [bp-0x64]\n
    unsigned short v7;  // [bp-0x60]\n
    unsigned short v8;  // [bp-0x5e]\n
    unsigned int v9;  // [bp-0x5c]\n
    void* v10;  // [bp-0x58]\n
    unsigned int v11;  // [bp-0x50]\n
    unsigned long v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x41]\n
    struct struct_0 **v14;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x3c]\n
    char v16;  // [bp-0x35]\n
    struct_0 *v17;  // [bp-0x34]\n
    char v18;  // [bp-0x2f]\n
    char v20;  // [bp-0x2d]\n
    char v24;  // [bp-0x1c]\n
    char v25;  // [bp-0x1b]\n
    char v26;  // [bp-0x1a]\n
    unsigned int v27;  // [bp-0x10]\n
    unsigned int v28;  // [bp-0xc]\n
    struct_1 *v30;  // ebx\n
    struct_1 *v31;  // eax\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v25 = 0;\n
    v20 = 0;\n
    v18 = 0;\n
    v16 = 255;\n
    while (true)\n
    {\n
        v5 = 1;\n
        if (v25 >= 1)\n
            v5 = !(v25 <= 8);\n
        if (!(v5 & 1))\n
            break;\n
        cgc_printf(&v6[3].padding_0[720]);\n
        v27 = cgc_readUntil(&v26, 9, 10);\n
        if (v27 == -1)\n
        {\n
            v28 = -1;\n
            return v28;\n
        }\n
        v25 = cgc_atoi(&v26);\n
    }\n
    v30 = v6;\n
    v30->field_a5c = v25;\n
    v30->field_a68 = 0;\n
    if (cgc_allocate(v25 << 2, 0))\n
    {\n
        cgc_puts(&v6[3].padding_0[695]);\n
        v28 = -1;\n
        return v28;\n
    }\n
    cgc_bzero(v6->field_a6c, v25 * 4);\n
    v24 = 0;\n
    if (v24 >= v25)\n
    {\n
        v13 = 64;\n
        for (v14 = 0; v14 < v25; v14 += 1)\n
        {\n
            v31 = v6;\n
            v13 -= *((*((v31->field_a6c + v14 * 4)) + 37)) - *((*((v31->field_a6c + v14 * 4)) + 36)) + 1;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(&v6[3].padding_0[651]);\n
        cgc_bzero(&v26, 10);\n
        while (true)\n
        {\n
            if (!(v26 != 121 & v26 != 110))\n
            {\n
LABEL_405077:\n
            }\n
            else\n
            {\n
                cgc_printf(&v6[3].padding_0[640]);\n
                v27 = cgc_readUntil(&v26, 2, 10);\n
                if (v27 == -1)\n
                {\n
                    v28 = -1;\n
                    return v28;\n
                }\n
                if (v26 == 121)\n
                {\n
                    v6->field_a68 = 1;\n
                    goto LABEL_405077;\n
                }\n
            }\n
        }\n
    }\n
    if (v13)\n
    {\n
        cgc_printf(&v6[3].padding_0[68]);\n
        v28 = -1;\n
        return v28;\n
    }\n
    v15 = (0 CONCAT 150000) /m v16;\n
    for (v14 = 0; v14 < v25; v14 += 1)\n
    {\n
        if (v6->field_a68 && !v14)\n
            goto LABEL_405782;\n
        v17 = *((v6->field_a6c + 0x4 * v14));\n
        v9 = v15;\n
        v10 = 0;\n
        v33 = ftop<4> - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v34 = v33 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v34 = v33 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v11 = v17->field_26;\n
        v35 = v34 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v36 = v35 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v36 = v35 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v37 = v36 - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v38 = v37 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v38 = v37 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t16,1] = t17\n
        [D] PutI(136:I8x8)[t16,1] = 0x01\n
        [D] PutI(136:I8x8)[t16,0] = 0x00\n
        v39 = v38 + 1;\n
        [D] PutI(72:F64x8)[t36,1] = t37\n
        [D] PutI(136:I8x8)[t36,1] = 0x01\n
        [D] PutI(136:I8x8)[t36,0] = 0x00\n
        v8 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-94, size=2, endness=Iend_LE)))));\n
        v7 = v8 | 0xc00;\n
        v12 = ([D] GetI(136:I8x8)[t82,0] ? [D] GetI(72:F64x8)[t82,0] : nan);\n
        [D] PutI(136:I8x8)[t82,0] = 0x00\n
        v41 = v39 + 1 + 1;\n
        v17->field_c = v12;\n
LABEL_405782:\n
    }\n
    v28 = 0;\n
    return v28;\n
}\n
", "4216736:cgc_InitRingBuffer": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitRingBuffer(unsigned int v11, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2d]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 204;\n
    v9 = (0 CONCAT v11) /m v8 + 1;\n
    v7 = 0;\n
    v5 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v7 < v9)\n
        {\n
            v0 = &v6;\n
            if (cgc_allocate(0x1000, 0))\n
            {\n
                cgc_puts(v2 - 8001);\n
                v10 = -1;\n
                return v10;\n
            }\n
            cgc_bzero(*(&v6), 0x1000);\n
            if (!v7)\n
                *(a0) = *(&v6);\n
            if (v5)\n
                v5->field_10 = *(&v6);\n
            v4 = 0;\n
            while (true)\n
            {\n
                v1 = 0;\n
                if (v4 < v8 - 1)\n
                    v1 = v3 < v11 - 1;\n
                if (!(v1 & 1))\n
                    break;\n
                *((*(&v6) + v4 * 20 + 16)) = *(&v6) + (v4 + 1) * 20;\n
                v4 += 1;\n
                v3 += 1;\n
            }\n
            v5 = *(&v6) + v4 * 20;\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            v5->field_10 = *(a0);\n
            v10 = 0;\n
            return v10;\n
        }\n
    }\n
}\n
", "4217111:sub_405917": null, "4217120:cgc_DestroyRingBuffer": "typedef struct struct_0 {\n
    char padding_0[2668];\n
    unsigned int field_a6c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char g_409f04;\n
\n
int cgc_DestroyRingBuffer(char v9)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x25]\n
    struct_0 *v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20]\n
    struct_1 *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v9 > g_409f04 - 1)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v7 = 204;\n
    v6 = (0 CONCAT *(*((v2->field_a6c + v9 * 4)))) /m v7 + 1;\n
    v5 = 0;\n
    v3 = *((*((v2->field_a6c + v9 * 4)) + 48));\n
    for (v4 = v3; v5 < v6; v5 += 1)\n
    {\n
        while (true)\n
        {\n
            v4 = *((v4 + 16));\n
            if (v4 == *((*((v2->field_a6c + (v9 << 2))) + 48)))\n
                break;\n
            v1 = 0;\n
            if ((v4 & -0x1000) == (*((v4 + 16)) & -0x1000))\n
                v1 = v4 != v3;\n
            if (!(v1 & 1))\n
                break;\n
        }\n
        if (v4 != *((*((v2->field_a6c + (v9 << 2))) + 48)))\n
            v4 = *((v4 + 16));\n
        v0 = 0x1000;\n
        cgc_deallocate(v3);\n
        v3 = v4;\n
    }\n
    v8 = 0;\n
    return v8;\n
}\n
", "4217468:sub_405a7c": null, "4217472:cgc_DestroyQueues": "typedef struct struct_0 {\n
    char padding_0[2652];\n
    char field_a5c;\n
    char padding_a5d[15];\n
    unsigned int field_a6c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DestroyQueues()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    unsigned int v3;  // [bp-0xc]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_a5c)\n
        {\n
            v5 = v1;\n
            v0 = v5->field_a5c * 4;\n
            cgc_deallocate(v5->field_a6c);\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!cgc_DestroyRingBuffer(v2))\n
        {\n
            v0 = 52;\n
            cgc_deallocate(*((v1->field_a6c + v2 * 4)));\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217648:cgc_InitReceive": "typedef struct struct_0 {\n
    char padding_0[2672];\n
    unsigned int field_a70;\n
    char padding_a74[12];\n
    unsigned long long field_a80;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitReceive()\n
{\n
    char v0;  // [bp-0x25]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x16]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
    struct_0 *v11;  // eax\n
    unsigned int v12[2];  // eax\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22[2];  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    cgc_puts(\"The following packet generators are available:\");\n
    cgc_puts(&v1[2].padding_0[2534]);\n
    cgc_puts(&v1[2].padding_0[2521]);\n
    cgc_puts(&v1[2].padding_0[2507]);\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (v3 >= 1)\n
            v0 = !(v3 <= 3);\n
        if (!(v0 & 1))\n
            break;\n
        cgc_printf(&v1[2].padding_0[2494]);\n
        v2 = cgc_readUntil(&v4, 9, 10);\n
        if (v2 == -1)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v3 = cgc_atoi(&v4);\n
    }\n
    if (v3 != 1)\n
    {\n
        if (v3 != 2)\n
        {\n
            if (v3 != 3)\n
            {\n
                cgc_puts(&v1[2].padding_0[2447]);\n
                v5 = -1;\n
                return v5;\n
            }\n
            if (cgc_InitManual())\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v11 = v1;\n
            v11->field_a70 = &v11[7].padding_0[96];\n
        }\n
        else if (!cgc_InitPoisson())\n
        {\n
            v10 = v1;\n
            v10->field_a70 = &v10[7].padding_0[1712];\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    else\n
    {\n
        if (!cgc_InitRandom())\n
        {\n
            v9 = v1;\n
            v9->field_a70 = &v9[7].padding_0[2288];\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    v12 = &v1->field_a80;\n
    v12[1] = 0xbff00000;\n
    v12[0] = 0;\n
    while (true)\n
    {\n
        [D] PutI(72:F64x8)[t8,0] = t11\n
        [D] PutI(136:I8x8)[t8,0] = 0x01\n
        v15 = ftop<4> - 1 - 1;\n
        [D] PutI(72:F64x8)[t18,0] = t21\n
        [D] PutI(136:I8x8)[t18,0] = 0x01\n
        [D] PutI(136:I8x8)[t33,0] = 0x00\n
        v16 = v15 + 1;\n
        [D] PutI(72:F64x8)[t47,0] = t48\n
        [D] PutI(136:I8x8)[t47,0] = 0x01\n
        [D] PutI(136:I8x8)[t47,0] = 0x00\n
        v17 = v16 + 1;\n
        if (((CmpF(([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan), ([D] GetI(136:I8x8)[t33,1] ? [D] GetI(72:F64x8)[t33,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan), ([D] GetI(136:I8x8)[t33,1] ? [D] GetI(72:F64x8)[t33,1] : nan)) & 69) >> 6)) & 1) == 1)\n
        {\n
            cgc_bzero(&v1->padding_0[108], 20);\n
            v5 = 0;\n
            return v5;\n
        }\n
        cgc_printf(&v1[2].padding_0[2429]);\n
        v2 = cgc_readUntil(&v4, 9, 10);\n
        if (v2 == -1)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        cgc_atof(&v4);\n
        *(&v1->field_a80) = ([D] GetI(136:I8x8)[t15,0] ? [D] GetI(72:F64x8)[t15,0] : nan);\n
        [D] PutI(136:I8x8)[t15,0] = 0x00\n
        v18 = v17 - 0;\n
        [D] PutI(72:F64x8)[t22,0] = t25\n
        [D] PutI(136:I8x8)[t22,0] = 0x01\n
        v19 = v18 - 1;\n
        [D] PutI(72:F64x8)[t34,0] = t37\n
        [D] PutI(136:I8x8)[t34,0] = 0x01\n
        [D] PutI(72:F64x8)[t48,0] = t52\n
        [D] PutI(136:I8x8)[t48,0] = 0x01\n
        [D] PutI(72:F64x8)[t48,1] = t45\n
        [D] PutI(136:I8x8)[t48,1] = 0x01\n
        [D] PutI(136:I8x8)[t68,0] = 0x00\n
        v20 = v19 + 1;\n
        [D] PutI(72:F64x8)[t82,0] = t83\n
        [D] PutI(136:I8x8)[t82,0] = 0x01\n
        [D] PutI(136:I8x8)[t82,0] = 0x00\n
        v21 = v20 + 1;\n
        if (((CmpF(([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan), ([D] GetI(136:I8x8)[t68,1] ? [D] GetI(72:F64x8)[t68,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan), ([D] GetI(136:I8x8)[t68,1] ? [D] GetI(72:F64x8)[t68,1] : nan)) & 69) >> 6)) & 1) != 1)\n
        {\n
            cgc_printf(&v1[2].padding_0[2366]);\n
            v22 = &v1->field_a80;\n
            v22[1] = 0x40240000;\n
            v22[0] = 0;\n
        }\n
    }\n
}\n
", "4218353:sub_405df1": null, "4218368:cgc_RX": "typedef struct struct_1 {\n
    char padding_0[116];\n
    unsigned int field_74;\n
    unsigned int field_78;\n
    char padding_7c[2528];\n
    char field_a5c;\n
    char padding_a5d[15];\n
    unsigned int field_a6c;\n
    struct struct_0 *field_a70;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[16];\n
    unsigned int field_18;\n
    char padding_1c[8];\n
    char field_24;\n
    char field_25;\n
    char padding_26[2];\n
    struct struct_2 *field_28;\n
    struct struct_2 *field_2c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned long long field_0;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RX()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x18]\n
    struct_3 *v2;  // [bp-0x14]\n
    struct struct_3 **v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    struct_1 *v6;  // ecx\n
    struct_1 *v7;  // eax\n
    struct_3 *v8;  // eax\n
    struct_1 *v9;  // eax\n
    struct_3 *v10;  // eax\n
    struct_3 *v11;  // eax\n
    struct_1 *v12;  // ebx\n
\n
    for (v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0]; v1->field_a70(); v1->field_74 = 0)\n
    {\n
        if (!v1->field_74)\n
            break;\n
        [D] PutI(72:F64x8)[t12,0] = t15\n
        [D] PutI(136:I8x8)[t12,0] = 0x01\n
        [D] PutI(72:F64x8)[t24,0] = t27\n
        [D] PutI(136:I8x8)[t24,0] = 0x01\n
        [D] PutI(72:F64x8)[t37,0] = t41\n
        [D] PutI(136:I8x8)[t37,0] = 0x01\n
        [D] PutI(72:F64x8)[t37,1] = t34\n
        [D] PutI(136:I8x8)[t37,1] = 0x01\n
        [D] PutI(136:I8x8)[t57,0] = 0x00\n
        [D] PutI(72:F64x8)[t71,0] = t72\n
        [D] PutI(136:I8x8)[t71,0] = 0x01\n
        [D] PutI(136:I8x8)[t71,0] = 0x00\n
        if (((CmpF(([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan), ([D] GetI(136:I8x8)[t57,1] ? [D] GetI(72:F64x8)[t57,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan), ([D] GetI(136:I8x8)[t57,1] ? [D] GetI(72:F64x8)[t57,1] : nan)) & 69) >> 6)) & 1) != 1)\n
            break;\n
        for (v3 = 0; v3 < v1->field_a5c; v3 = v3 + 1)\n
        {\n
            v6 = v1;\n
            v2 = *((v6->field_a6c + v3 * 4));\n
            if (v2->field_24 <= v6->field_78 && v2->field_25 >= v1->field_78)\n
                break;\n
        }\n
        if (v3 == v1->field_a5c)\n
        {\n
            v12 = v1;\n
            v0 = v12->field_78;\n
            cgc_printf(&v12[2].padding_7c[2247]);\n
            v4 = -1;\n
            return v4;\n
        }\n
        else if (!v2->field_4)\n
        {\n
            v7 = v1;\n
            [D] PutI(72:F64x8)[t32,0] = t35\n
            [D] PutI(136:I8x8)[t32,0] = 0x01\n
            *(&v2->field_28->field_0) = ([D] GetI(136:I8x8)[t51,0] ? [D] GetI(72:F64x8)[t51,0] : nan);\n
            [D] PutI(136:I8x8)[t51,0] = 0x00\n
            v2->field_28->field_8 = v7->field_74;\n
            v2->field_28->field_c = v7->field_78;\n
            v2->field_2c = v2->field_28->field_10;\n
            v8 = v2;\n
            v8->field_4 = v8->field_4 + 1;\n
        }\n
        else if (v2->field_4 >= v2->field_0)\n
        {\n
            v11 = v2;\n
            v11->field_18 = v11->field_18 + 1;\n
        }\n
        else\n
        {\n
            v9 = v1;\n
            [D] PutI(72:F64x8)[t32,0] = t35\n
            [D] PutI(136:I8x8)[t32,0] = 0x01\n
            *(&v2->field_2c->field_0) = ([D] GetI(136:I8x8)[t51,0] ? [D] GetI(72:F64x8)[t51,0] : nan);\n
            [D] PutI(136:I8x8)[t51,0] = 0x00\n
            v2->field_2c->field_8 = v9->field_74;\n
            v2->field_2c->field_c = v9->field_78;\n
            v2->field_2c = v2->field_2c->field_10;\n
            v10 = v2;\n
            v10->field_4 = v10->field_4 + 1;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4218928:main": "typedef struct struct_0 {\n
    char padding_0[2680];\n
    unsigned long long field_a78;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // ebx\n
\n
    v5 = &v3;\n
    v2 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 0;\n
    cgc_puts(\"Welcome to the network queuing simulator\");\n
    if (cgc_InitInterface())\n
    {\n
        cgc_puts(&v0[2].padding_0[2249]);\n
        cgc__terminate();\n
    }\n
    if (cgc_InitReceive())\n
    {\n
        cgc_puts(&v0[2].padding_0[2223]);\n
        cgc__terminate();\n
    }\n
    if (cgc_InitQueues())\n
    {\n
        cgc_puts(&v0[2].padding_0[2190]);\n
        cgc__terminate();\n
    }\n
    do\n
    {\n
        cgc_RX();\n
        cgc_TX();\n
        [D] PutI(72:F64x8)[t15,0] = t18\n
        [D] PutI(136:I8x8)[t15,0] = 0x01\n
        [D] PutI(72:F64x8)[t27,0] = t30\n
        [D] PutI(136:I8x8)[t27,0] = 0x01\n
        [D] PutI(72:F64x8)[t37,1] = t38\n
        [D] PutI(136:I8x8)[t37,1] = 0x01\n
        [D] PutI(136:I8x8)[t37,0] = 0x00\n
        *(&v0->field_a78) = ([D] GetI(136:I8x8)[t60,0] ? [D] GetI(72:F64x8)[t60,0] : nan);\n
        [D] PutI(136:I8x8)[t60,0] = 0x00\n
        [D] PutI(72:F64x8)[t67,0] = t70\n
        [D] PutI(136:I8x8)[t67,0] = 0x01\n
        [D] PutI(72:F64x8)[t79,0] = t82\n
        [D] PutI(136:I8x8)[t79,0] = 0x01\n
        [D] PutI(72:F64x8)[t92,0] = t96\n
        [D] PutI(136:I8x8)[t92,0] = 0x01\n
        [D] PutI(72:F64x8)[t92,1] = t89\n
        [D] PutI(136:I8x8)[t92,1] = 0x01\n
        [D] PutI(136:I8x8)[t112,0] = 0x00\n
        [D] PutI(72:F64x8)[t126,0] = t127\n
        [D] PutI(136:I8x8)[t126,0] = 0x01\n
        [D] PutI(136:I8x8)[t126,0] = 0x00\n
    } while (((CmpF(([D] GetI(136:I8x8)[t112,0] ? [D] GetI(72:F64x8)[t112,0] : nan), ([D] GetI(136:I8x8)[t112,1] ? [D] GetI(72:F64x8)[t112,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t112,0] ? [D] GetI(72:F64x8)[t112,0] : nan), ([D] GetI(136:I8x8)[t112,1] ? [D] GetI(72:F64x8)[t112,1] : nan)) & 69) >> 6)) & 1) == 1);\n
    cgc_PrintStats();\n
    cgc_DestroyQueues();\n
    v7 = v0;\n
    cgc__terminate();\n
    cgc_InitInterface();\n
    return;\n
}\n
", "4219248:cgc_InitInterface": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[672];\n
extern char g_400000;\n
\n
int cgc_InitInterface()\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    char v1;  // [bp-0x31]\n
    unsigned int v2[672];  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28]\n
    char v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[672];  // eax\n
\n
    v2[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v7 = 0;\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v7)\n
            v1 = !(v7 <= &g_400000);\n
        if (!(v1 & 1))\n
            break;\n
        cgc_printf(&v2[2 + 538]);\n
        v6 = cgc_readUntil(&v5, 11, 10);\n
        if (v6 == -1)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v7 = cgc_atoi(&v5);\n
    }\n
    v0 = &v2[660];\n
    v0->field_0 = v7;\n
    cgc_init_mt(v7);\n
    v10 = v2;\n
    v3 = v7;\n
    v4 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t8,1] = t9\n
    [D] PutI(136:I8x8)[t8,1] = 0x01\n
    [D] PutI(136:I8x8)[t8,0] = 0x00\n
    *(&v0->field_10) = ([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan);\n
    [D] PutI(136:I8x8)[t33,0] = 0x00\n
    v10[671] = 0;\n
    v10[670] = 0;\n
    v10[661] = 0;\n
    v10[662] = 0;\n
    v8 = 0;\n
    return v8;\n
}\n
", "4219546:sub_40629a": null, "4219552:cgc_TransmitPktFromQueue": "typedef struct struct_0 {\n
    char padding_0[2664];\n
    char field_a68;\n
    char padding_a69[3];\n
    unsigned int field_a6c;\n
    char padding_a70[8];\n
    unsigned long long field_a78;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char g_409f04;\n
\n
int cgc_TransmitPktFromQueue(char v7)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20]\n
    unsigned int v5[5];  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    struct_0 *v8;  // eax\n
    unsigned int v9[8];  // ecx\n
    struct_1 *v10;  // ecx\n
    struct_4 *v11;  // eax\n
    struct_0 *v12;  // eax\n
    unsigned int v13[8];  // ecx\n
    struct_2 *v14;  // edx\n
    struct_3 *v15;  // edx\n
    unsigned int v16[5];  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v7 >= g_409f04)\n
    {\n
        cgc_puts(&v0[2].padding_0[2101]);\n
        v6 = -1;\n
        return v6;\n
    }\n
    v8 = v0;\n
    v9 = &v8->padding_0[2640];\n
    v5[0] = *((*((v9[7] + v7 * 4)) + 40));\n
    if ([D] GetI(136:I8x8)[t33,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t37,0] = t40\n
    [D] PutI(136:I8x8)[t37,0] = 0x01\n
    [D] PutI(72:F64x8)[t47,1] = t48\n
    [D] PutI(136:I8x8)[t47,1] = 0x01\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t81,0] = t84\n
    [D] PutI(136:I8x8)[t81,0] = 0x01\n
    [D] PutI(72:F64x8)[t91,1] = t92\n
    [D] PutI(136:I8x8)[t91,1] = 0x01\n
    [D] PutI(136:I8x8)[t91,0] = 0x00\n
    *((*((v9[7] + v7 * 4)) + 28)) = ([D] GetI(136:I8x8)[t116,0] ? [D] GetI(72:F64x8)[t116,0] : nan);\n
    [D] PutI(136:I8x8)[t116,0] = 0x00\n
    v3 = v5[2];\n
    v4 = 0;\n
    [D] PutI(72:F64x8)[t136,0] = t139\n
    [D] PutI(136:I8x8)[t136,0] = 0x01\n
    [D] PutI(72:F64x8)[t151,0] = t154\n
    [D] PutI(136:I8x8)[t151,0] = 0x01\n
    [D] PutI(72:F64x8)[t162,1] = t163\n
    [D] PutI(136:I8x8)[t162,1] = 0x01\n
    [D] PutI(136:I8x8)[t162,0] = 0x00\n
    v1 = v9[0];\n
    v2 = 0;\n
    [D] PutI(72:F64x8)[t190,0] = t193\n
    [D] PutI(136:I8x8)[t190,0] = 0x01\n
    [D] PutI(72:F64x8)[t203,1] = t204\n
    [D] PutI(136:I8x8)[t203,1] = 0x01\n
    [D] PutI(136:I8x8)[t203,0] = 0x00\n
    [D] PutI(72:F64x8)[t225,0] = t228\n
    [D] PutI(136:I8x8)[t225,0] = 0x01\n
    [D] PutI(72:F64x8)[t235,1] = t236\n
    [D] PutI(136:I8x8)[t235,1] = 0x01\n
    [D] PutI(136:I8x8)[t235,0] = 0x00\n
    [D] PutI(72:F64x8)[t257,0] = t260\n
    [D] PutI(136:I8x8)[t257,0] = 0x01\n
    [D] PutI(72:F64x8)[t267,1] = t268\n
    [D] PutI(136:I8x8)[t267,1] = 0x01\n
    [D] PutI(136:I8x8)[t267,0] = 0x00\n
    *(&v8->field_a78) = ([D] GetI(136:I8x8)[t292,0] ? [D] GetI(72:F64x8)[t292,0] : nan);\n
    [D] PutI(136:I8x8)[t292,0] = 0x00\n
    v10 = *((v8->field_a6c + v7 * 4));\n
    v10->field_4 = v10->field_4 - 1;\n
    if (v8->field_a68 && !v7)\n
        goto LABEL_4063bc;\n
    v11 = *((v0->field_a6c + v7 * 4));\n
    v11->field_8 = v11->field_8 - v5[2];\n
LABEL_4063bc:\n
    v12 = v0;\n
    v13 = &v12->padding_0[2640];\n
    v14 = *((v13[7] + v7 * 4));\n
    v14->field_10 = v14->field_10 + 1;\n
    v15 = *((v13[7] + v7 * 4));\n
    v15->field_14 = v15->field_14 + v5[2];\n
    v13[1] = v13[1] + 1;\n
    v13[2] = v13[2] + v5[2];\n
    v5[2] = 0;\n
    v5[3] = 0;\n
    v16 = v5;\n
    v16[1] = 0;\n
    v16[0] = 0;\n
    *((*((v12->field_a6c + v7 * 4)) + 40)) = v5[4];\n
    v6 = 0;\n
    return v6;\n
}\n
", "4219990:sub_406456": null, "4220000:cgc_ReplinishTokens": "typedef struct struct_1 {\n
    char padding_0[2652];\n
    char field_a5c;\n
    char padding_a5d[15];\n
    unsigned int field_a6c;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReplinishTokens()\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct struct_0 **v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2[4];  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    for (v1 = 0; v1 < v0->field_a5c; v1 = v1 + 1)\n
    {\n
        v2[0] = *((v0->field_a6c + v1 * 4));\n
        v2[2] = v2[3];\n
    }\n
    return v1;\n
}\n
", "4220104:sub_4064c8": null, "4220112:cgc_uint_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_uint_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = ((0 CONCAT v3) /m 10 >> 32) + 48;\n
        v3 = (0 CONCAT v3) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v5 = v0;\n
        v0 = v5 - 1;\n
        if (v5 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4220291:sub_406583": null, "4220304:cgc_print_uint": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_uint(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x2c]\n
    struct_0 *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = &v3;\n
    cgc_strncpy(&v3, v6, 31);\n
    v0 = a0;\n
    v1 = &v3;\n
    cgc_uint_to_str(v0, &v1[cgc_strlen(&v3)]);\n
    v8 = v5;\n
    return cgc_printf(v2 - 7456);\n
}\n
", "4220445:sub_40661d": null, "4220448:cgc_PrintStats": null, "4221006:sub_40684e": null, "4221008:cgc_TX": "typedef struct struct_1 {\n
    char padding_0[2652];\n
    char field_a5c;\n
    char padding_a5d[11];\n
    char field_a68;\n
    char padding_a69[3];\n
    struct struct_2 *field_a6c;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[28];\n
    struct struct_3 *field_28;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_TX()\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct struct_4 **v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_4 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v8;  // ftop\n
    unsigned int v9;  // ftop\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_ReplinishTokens();\n
    if (v0->field_a68)\n
    {\n
        while (v0->field_a6c->field_0->field_4)\n
        {\n
            if (!cgc_TransmitPktFromQueue(0))\n
            {\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t5,0] = t9\n
                [D] PutI(136:I8x8)[t5,0] = 0x01\n
                [D] PutI(72:F64x8)[t5,1] = t2\n
                [D] PutI(136:I8x8)[t5,1] = 0x01\n
                [D] PutI(136:I8x8)[t25,0] = 0x00\n
                [D] PutI(72:F64x8)[t39,0] = t40\n
                [D] PutI(136:I8x8)[t39,0] = 0x01\n
                [D] PutI(136:I8x8)[t39,0] = 0x00\n
                if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) != 1)\n
                {\n
                    v3 = 0;\n
                    return v3;\n
                }\n
                cgc_RX();\n
            }\n
            else\n
            {\n
                cgc_puts(&v0[2].padding_0[1880]);\n
                v3 = -1;\n
                return v3;\n
            }\n
        }\n
    }\n
    for (v1 = 0; v1 < v0->field_a5c; v1 += 1)\n
    {\n
        if (v0->field_a68 && !v1)\n
            goto LABEL_406a0b;\n
        v2 = &v0->field_a6c[v1].field_0;\n
        while (v2->field_4)\n
        {\n
            if (v2->field_28->field_8 > v2->field_8)\n
                break;\n
            if (cgc_TransmitPktFromQueue(v1))\n
            {\n
                cgc_puts(&v0[2].padding_0[1880]);\n
                v3 = -1;\n
                return v3;\n
            }\n
            v8 = ftop<4> - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v9 = v8 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v9 = v8 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            v10 = v9 - 1;\n
            if (![D] GetI(136:I8x8)[t3,0])\n
            {\n
                v11 = v10 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v11 = v10 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t5,0] = t9\n
            [D] PutI(136:I8x8)[t5,0] = 0x01\n
            [D] PutI(72:F64x8)[t5,1] = t2\n
            [D] PutI(136:I8x8)[t5,1] = 0x01\n
            [D] PutI(136:I8x8)[t25,0] = 0x00\n
            v12 = v11 + 1;\n
            [D] PutI(72:F64x8)[t39,0] = t40\n
            [D] PutI(136:I8x8)[t39,0] = 0x01\n
            [D] PutI(136:I8x8)[t39,0] = 0x00\n
            v13 = v12 + 1;\n
            if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) != 1)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_RX();\n
        }\n
LABEL_406a0b:\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4221488:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_logf": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_deallocate": null, "5242912:cgc_log10": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}