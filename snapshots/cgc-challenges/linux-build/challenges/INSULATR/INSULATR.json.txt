{"4198400:_init": "extern struct_0 *g_404560;\n
\n
int _init()\n
{\n
    if (g_404560)\n
    {\n
        g_404560();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198496:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198512:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198528:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 13431;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 13367;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40455c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40455c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_memset": "int cgc_memset(unsigned int v1, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v1;\n
}\n
", "4198946:sub_401222": null, "4198960:cgc_uint2str32": "int cgc_uint2str32(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (a0 < 2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v2 = a1;\n
    do\n
    {\n
        v3 += 1;\n
        v2 = (0 CONCAT v2) /m 10;\n
    } while (v2 > 0);\n
    if (v3 >= a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v6 = v3;\n
    v3 = v6 + 1;\n
    v6[v5] = 0;\n
    do\n
    {\n
        v1 = (0 CONCAT a1) /m 10 >> 32;\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        *((v5 + v7)) = v1 + 48;\n
        a1 = (0 CONCAT a1) /m 10;\n
        v0 += 1;\n
    } while (a1 > 0);\n
    v4 = v0;\n
    return v4;\n
}\n
", "4199197:sub_40131d": null, "4199200:cgc_memcmp": "int cgc_memcmp(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) == *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4199308:sub_40138c": null, "4199312:cgc_str2unt32n": "int cgc_str2unt32n(unsigned int v7, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int *a3)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    int tmp_31;  // tmp #31\n
    void* v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // esi\n
\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v6 = v3;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            *(a3) = v3;\n
            break;\n
        }\n
        if (v2[v7] < 48)\n
        {\n
LABEL_401484:\n
            v5 = 38;\n
            break;\n
        }\n
        else\n
        {\n
            if (!(v2[v7] <= 57))\n
                goto LABEL_401484;\n
            v8 = v3;\n
            v0 = v4;\n
            v3 = v8 * 10;\n
            v4 = (v8 * 10 >> 32) + v0 * 10;\n
            v9 = v2[v7] - 48;\n
            v10 = v3;\n
            tmp_31 = v10;\n
            v12 = v4 + (v9 >> 31) + (tmp_31 + v9 < tmp_31);\n
            v3 = v10 + v9;\n
            v4 = v12;\n
            v13 = v3;\n
            if (!([D] x86g_calculate_condition(0x2<32>, 0xc<32>, Load(addr=stack_base+16, size=4, endness=Iend_LE), Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (Load(addr=stack_base+12, size=4, endness=Iend_LE) < esi<4>))), Conv(1->32, (Load(addr=stack_base+12, size=4, endness=Iend_LE) < esi<4>)))))\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 37;\n
                break;\n
            }\n
        }\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4199610:sub_4014ba": null, "4199616:cgc_strncpy": "int cgc_strncpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = v2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - v2 < a1)\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    v3 = v1;\n
    v1 = v3 + 1;\n
    *(v3) = 0;\n
    return -1 + v1 - v2;\n
}\n
", "4199753:sub_401549": null, "4199760:cgc_strnchr": "int cgc_strnchr(char *v3, char a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v3;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v1))\n
            v0 = a1;\n
        if (!(v0 & 1))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (*(v1) == a0)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 += 1;\n
        a1 -= 1;\n
    }\n
}\n
", "4199894:sub_4015d6": null, "4199904:cgc_receive_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_all(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"PD\";\n
    v4 = 0;\n
    v3 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            if (!a2)\n
                return v4;\n
            *(a2) = a1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            v4 = cgc_receive(0, a0 + a1 - v3, v3);\n
            if (v4)\n
                return v4;\n
            v3 -= v2;\n
            if (!v2)\n
            {\n
                if (!a2)\n
                    return v4;\n
                *(a2) = a1 - v3;\n
            }\n
        }\n
    }\n
}\n
", "4200128:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"PD\";\n
    v4 = 0;\n
    v3 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            if (!a2)\n
                return v4;\n
            *(a2) = a1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            v4 = cgc_transmit(1, a0, v3);\n
            if (v4)\n
                return v4;\n
            v3 -= v2;\n
            if (!v2)\n
            {\n
                if (!a2)\n
                    return v4;\n
                *(a2) = a1 - v3;\n
            }\n
        }\n
    }\n
}\n
", "4200342:sub_401796": null, "4200352:cgc_object_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_object_find(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = \"PD\";\n
    v1 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < 0x100)\n
        {\n
            if (*((v0 + (v1 << 2) + 65584)) && v3 == *(*((v0 + (v1 << 2) + 65584))))\n
            {\n
                v2 = *((v0 + v1 * 4 + 65584));\n
                return v2;\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4200507:sub_40183b": null, "4200512:cgc_parse_id": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_id(char **v6, unsigned short *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c]\n
    unsigned short v2;  // [bp-0x16]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax\n
    unsigned short *v9;  // eax\n
\n
    v5 = v7;\n
    v0 = \"PD\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = cgc_strnchr(*(v6), 32, *(a0));\n
    if (!v3)\n
    {\n
        v4 = 36;\n
        return v4;\n
    }\n
    v2 = (v3 - *(v6));\n
    v1 = 0;\n
    v4 = cgc_str2unt32n(*(v6), v2, 255, 0, &v1);\n
    if (!v4)\n
    {\n
        *(a1) = v1;\n
        v8 = v6;\n
        *(v8) = v2 + 1 + *(v8);\n
        v9 = a0;\n
        *(v9) = *(v9) - (v2 + 1);\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4200759:sub_401937": null, "4200768:cgc_parse_type": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_type(char **v5, unsigned short *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned short v1;  // [bp-0x12]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // eax\n
    unsigned short *v8;  // eax\n
\n
    v4 = v6;\n
    v0 = \"PD\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_strnchr(*(v5), 32, *(a0));\n
    if (!v2)\n
    {\n
        v3 = 36;\n
        return v3;\n
    }\n
    v1 = (v2 - *(v5));\n
    if (!cgc_memcmp(v0 - 5476, *(v5), 6))\n
    {\n
        *(a1) = 1;\n
    }\n
    else if (!cgc_memcmp(v0 - 5469, *(v5), 6))\n
    {\n
        *(a1) = 2;\n
    }\n
    else\n
    {\n
        v3 = 36;\n
        return v3;\n
    }\n
    v7 = v5;\n
    *(v7) = v1 + 1 + *(v7);\n
    v8 = a0;\n
    *(v8) = *(v8) - (v1 + 1);\n
    return v3;\n
}\n
", "4201069:sub_401a6d": null, "4201072:cgc_parse_number": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_number(char **v5, unsigned short *a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short v1;  // [bp-0x16]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // eax\n
    unsigned short *v8;  // eax\n
\n
    v4 = v6;\n
    v0 = \"PD\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_strnchr(*(v5), 32, *(a0));\n
    if (!v2)\n
    {\n
        v3 = 36;\n
        return v3;\n
    }\n
    v1 = (v2 - *(v5));\n
    v3 = cgc_str2unt32n(*(v5), v1, -1, 0, a1);\n
    if ((Not (Not (0x0<32> == Load(addr=stack_base-16, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
    v7 = v5;\n
    *(v7) = v1 + 1 + *(v7);\n
    v8 = a0;\n
    *(v8) = *(v8) - (v1 + 1);\n
    return v3;\n
}\n
", "4201307:sub_401b5b": null, "4201312:cgc_parse_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_string(char **v11, unsigned short *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned short v7;  // [bp-0x12]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int *v13;  // eax\n
    unsigned short *v14;  // eax\n
\n
    v10 = v12;\n
    v3 = \"PD\";\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v8 = cgc_strnchr(*(v11), 32, *(a0));\n
    if (!v8)\n
    {\n
        v9 = 36;\n
        return v9;\n
    }\n
    v7 = (v8 - *(v11));\n
    v1 = a1;\n
    v2 = *(v11);\n
    v6 = *(a0) - 1;\n
    v5 = 236;\n
    if (v6 < v5)\n
        v0 = v6;\n
    else\n
        v0 = v5;\n
    v4 = v0;\n
    cgc_strncpy(v1, v2, v4);\n
    v13 = v11;\n
    *(v13) = v7 + 1 + *(v13);\n
    v14 = a0;\n
    *(v14) = *(v14) - (v7 + 1);\n
    return v9;\n
}\n
", "4201572:sub_401c64": null, "4201584:cgc_object_new": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    char *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_object_new(char v4, unsigned int a0, unsigned int a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"PD\";\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_allocate(0x1000, 0);\n
    if (v2)\n
    {\n
        return v2;\n
    }\n
    else if (cgc_object_find(v4))\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1->field_0 = v4;\n
        v1->field_4 = 0;\n
        v1->field_8 = 0;\n
        v1->field_c = 0;\n
        if (a0 == 1)\n
        {\n
            v1->field_4 = 1;\n
            v1->field_8 = &v1[4].field_0;\n
            v1->field_8->field_0 = a1;\n
        }\n
        else if (a0 == 2)\n
        {\n
            v1->field_4 = 2;\n
            v1->field_c = &v1[8].field_0;\n
            if (a2)\n
                cgc_strncpy(v1->field_c, a2, 236);\n
        }\n
        else\n
        {\n
            v2 = 36;\n
            return v2;\n
        }\n
        *((v0 + v4 * 4 + 65584)) = v1;\n
        return v2;\n
    }\n
}\n
", "4201933:sub_401dcd": null, "4201936:cgc_op_del": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_op_del(char **v5, unsigned short *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xd]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"PD\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v3 = cgc_parse_id(v5, a0, &v2);\n
    if (v3)\n
        return v3;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 0x100)\n
            return v3;\n
        if (*((v0 + (v1 << 2) + 65584)) && v2 == *(*((v0 + (v1 << 2) + 65584))))\n
        {\n
            v3 = cgc_deallocate(*((v0 + v1 * 4 + 65584)));\n
            if ((Not (Not (0x0<32> == Load(addr=stack_base-12, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
            *((v0 + v1 * 4 + 65584)) = 0;\n
            return v3;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4202200:sub_401ed8": null, "4202208:cgc_op_set": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int *field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_op_set(unsigned int *v7, unsigned short *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned short v1;  // [bp-0x1a]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3[4];  // [bp-0x14], Other Possible Types: struct_0 *\n
    char v4;  // [bp-0xd]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int *v9;  // eax\n
\n
    v6 = v8;\n
    v0 = \"PD\";\n
    v5 = 0;\n
    v4 = 0;\n
    v3[0] = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v5 = cgc_parse_id(v7, a0, &v4);\n
    if (v5)\n
        return v5;\n
    v3 = cgc_object_find(v4);\n
    if (!v3)\n
    {\n
        v9 = v7;\n
        *(v9) = *(a0) - 1 + *(v9);\n
        *(a0) = 0;\n
        return v5;\n
    }\n
    if (v3->field_4 == 1)\n
    {\n
        v2 = *(v7);\n
        v1 = *(a0);\n
        v5 = cgc_parse_number(v7, a0, v3->field_8);\n
        if (v5)\n
        {\n
            if (v5 != 37)\n
                return v5;\n
            v5 = 0;\n
            v3->field_8 = 0;\n
            *(v7) = v2;\n
            *(a0) = v1;\n
            v5 = cgc_parse_string(v7, a0, v3->field_c);\n
            if (v5)\n
                return v5;\n
        }\n
    }\n
    else if (v3->field_4 == 2)\n
    {\n
        v5 = cgc_parse_string(v7, a0, v3->field_c);\n
        if (v5)\n
            return v5;\n
    }\n
    return v5;\n
}\n
", "4202673:sub_4020b1": null, "4202688:cgc_op_new": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_op_new(char **v11, unsigned short *a0)\n
{\n
    unsigned int v0;  // [bp-0x200]\n
    char v1;  // [bp-0x1fc]\n
    char v2;  // [bp-0x110]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned short v4;  // [bp-0x1e]\n
    char *v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18]\n
    char v7;  // [bp-0x11]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v0 = \"PD\";\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v9 = cgc_parse_id(v11, a0, &v7);\n
    if (v9)\n
        return v9;\n
    v6 = 0;\n
    v9 = cgc_parse_type(v11, a0, &v6);\n
    if (v9)\n
        return v9;\n
    v8 = cgc_strnchr(*(v11), 32, *(a0));\n
    if (!v8)\n
    {\n
        v9 = cgc_object_new(v7, v6, 0, NULL);\n
        if (v9)\n
            return v9;\n
    }\n
    else if (v6 == 1)\n
    {\n
        v5 = *(v11);\n
        v4 = *(a0);\n
        v9 = cgc_parse_number(v11, a0, &v3);\n
        if (v9)\n
        {\n
            if (v9 != 37)\n
            {\n
                v9 = 36;\n
                return v9;\n
            }\n
            memset(&v2, 0, 236);\n
            v9 = cgc_parse_string(&v5, &v4, &v2);\n
            if (v9)\n
                return v9;\n
            v9 = cgc_object_new(v7, 2, 0, &v2);\n
            if (v9)\n
                return v9;\n
        }\n
        else\n
        {\n
            v9 = cgc_object_new(v7, 1, v3, NULL);\n
            if (v9)\n
                return v9;\n
        }\n
    }\n
    else if (v6 != 2)\n
    {\n
        v9 = 36;\n
        return v9;\n
    }\n
    else\n
    {\n
        memset(&v1, 0, 236);\n
        v9 = cgc_parse_string(v11, a0, &v1);\n
        if (v9)\n
            return v9;\n
        v9 = cgc_object_new(v7, 2, 0, &v1);\n
        if (v9)\n
            return v9;\n
    }\n
    return v9;\n
}\n
", "4203531:sub_40240b": null, "4203536:cgc_parse_json": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char json;\n
\n
int cgc_parse_json(unsigned short v10)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned short v1;  // [bp-0x26]\n
    unsigned short v2;  // [bp-0x24]\n
    unsigned short v3;  // [bp-0x22]\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x18], Other Possible Types: unsigned int, void*\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v0 = \"PD\";\n
    v9 = 0;\n
    v8 = &json;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = v10;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v10)\n
        return v9;\n
    while (true)\n
    {\n
        v6 = cgc_strnchr(v8, 10, v3);\n
        if (!v6)\n
            return v9;\n
        v6 += 1;\n
        v3 -= 1;\n
        if (!v3)\n
            return v9;\n
        v5 = cgc_strnchr(v6, 10, v3);\n
        if (!v5)\n
        {\n
            v9 = 36;\n
            return v9;\n
        }\n
        v2 = (v5 - v6);\n
        v8 = v6;\n
        v3 -= v2;\n
        v4 = cgc_strnchr(v8, 32, v2);\n
        if (!v4)\n
        {\n
            v9 = 36;\n
            return v9;\n
        }\n
        v1 = (v4 - v8);\n
        v2 -= v1;\n
        if (v1 != 3)\n
        {\n
            v9 = 36;\n
            return v9;\n
        }\n
        v7 = v8;\n
        v8 += 4;\n
        if (!cgc_memcmp(v0 - 5462, v7, 3))\n
        {\n
            v9 = cgc_op_new(&v8, &v2);\n
            if (v9)\n
                return v9;\n
        }\n
        else if (!cgc_memcmp(v0 - 5458, v7, 3))\n
        {\n
            v9 = cgc_op_set(&v8, &v2);\n
            if (v9)\n
                return v9;\n
        }\n
        else if (cgc_memcmp(v0 - 5454, v7, 3))\n
        {\n
            v9 = 36;\n
            return v9;\n
        }\n
        else\n
        {\n
            v9 = cgc_op_del(&v8, &v2);\n
            if (v9)\n
                return v9;\n
        }\n
    }\n
}\n
", "4204261:sub_4026e5": null, "4204272:cgc_deserialize": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_deserialize()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned short v1;  // [bp-0x12]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"PD\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = 0;\n
    v3 = cgc_receive_all(0, &v1, 2, &v2);\n
    if (!v3 && v2 == 2)\n
    {\n
        v2 = 0;\n
        v3 = cgc_receive_all(0, v0 + 48, v1, &v2);\n
        if (!v3 && v1 == v2)\n
        {\n
            v3 = cgc_parse_json(v1);\n
            if ((Not (Not (0x0<32> == Load(addr=stack_base-12, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
            return v3;\n
        }\n
        v3 = 32;\n
        return v3;\n
    }\n
    v3 = 32;\n
    return v3;\n
}\n
", "4204536:sub_4027f8": null, "4204544:cgc_serialize": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    char *field_c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_serialize()\n
{\n
    unsigned int v0;  // [bp-0x11c]\n
    char v1;  // [bp-0x118]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_3 *v3;  // [bp-0x14], Other Possible Types: struct_1 *\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = \"PD\";\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    memset(&v1, 0, 0x100);\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= 0x100)\n
            return v5;\n
        v1 = 0;\n
        v4 = 0;\n
        v3 = *((v0 + v2 * 4 + 65584));\n
        if (v3)\n
        {\n
            v4 = &v4[cgc_uint2str32(&v1 + v4, 255 + -0x1 * v4, v3->field_0)];\n
            if (v3->field_4 == 1)\n
            {\n
                v4 = &v4[cgc_strncpy(&v1 + v4, v0 - 5450, 255 + -0x1 * v4)];\n
                v4 = &v4[cgc_uint2str32(&v1 + v4, 255 + -0x1 * v4, v3->field_8->field_0)];\n
            }\n
            else if (v3->field_4 == 2)\n
            {\n
                v4 = &v4[cgc_strncpy(&v1 + v4, v0 - 5441, 255 + -0x1 * v4)];\n
                v4 = &v4[cgc_strncpy(&v1 + v4, v3->field_c, 255 + -0x1 * v4)];\n
            }\n
            *((&v1 + v4)) = 10;\n
            v5 = cgc_transmit_all(1, &v1, v4 + 1, NULL);\n
            if (v5)\n
            {\n
                v5 = 33;\n
                return v5;\n
            }\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4205148:sub_402a5c": null, "4205152:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int ns;\n
\n
int main(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = \"PD\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    cgc_memset(&ns, 0, 0x400);\n
    while (true)\n
    {\n
        v2 = 0;\n
        for (v1 = 0; !v2; v2 = 1)\n
        {\n
            v5 = cgc_receive_all(0, &v1, 1, &v4);\n
            if (v5)\n
            {\n
                v5 = 32;\n
                return v5;\n
            }\n
        }\n
        if (v1 == 1)\n
        {\n
            v5 = cgc_deserialize();\n
            if (v5)\n
                return v5;\n
        }\n
        else if (v1 == 2)\n
        {\n
            v5 = cgc_serialize();\n
            if (v5)\n
                return v5;\n
        }\n
        else if (v1 == 3)\n
        {\n
            return v5;\n
        }\n
    }\n
}\n
", "4205504:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:memset": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}