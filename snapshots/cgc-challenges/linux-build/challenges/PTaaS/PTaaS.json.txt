{"4202496:_init": "extern struct_0 *g_40b860;\n
\n
int _init()\n
{\n
    if (g_40b860)\n
    {\n
        g_40b860();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4202576:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202592:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202608:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_sqrt": "// attributes: PLT stub\n
int cgc_sqrt()\n
{\n
    ::libc.so.0::cgc_sqrt();\n
    return;\n
}\n
", "4202688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202704:sub_4020d0": "int sub_4020d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202710:sub_4020d6": null, "4202720:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202763:sub_40210b": null, "4202764:sub_40210c": "int sub_40210c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202768:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202772:sub_402114": null, "4202784:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 38727;\n
    v6 = v5 + 35;\n
    v7 = v5 + 35;\n
    if (v7 == v6)\n
        return v5 + 35;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202835:sub_402153": "int sub_402153()\n
{\n
}\n
", "4202841:sub_402159": "int sub_402159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202848:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 38663;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 35;\n
    v9 = (v6 + 35 - (v6 + 35) >> 31) + (35 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202919:sub_4021a7": "int sub_4021a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202928:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40b85c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40b85c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203003:sub_4021fb": "int sub_4021fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203008:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203017:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203021:sub_40220d": null, "4203024:cgc_bitset_init": "int cgc_bitset_init(unsigned int *v1, unsigned int a0)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    *(v1) = a0;\n
    return cgc_bitset_clear(v1, *(&v0));\n
}\n
", "4203072:cgc_bitset_clear": "int cgc_bitset_clear(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = (*(v1) + 7 & -8) >> 3;\n
    return cgc_memset(v1 + 1, 0);\n
}\n
", "4203142:sub_402286": null, "4203152:cgc_bitset_set_bit": "int cgc_bitset_set_bit(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = 1;\n
    return cgc_bitset_set_bit_value(v1, a0);\n
}\n
", "4203209:sub_4022c9": null, "4203216:cgc_bitset_set_bit_value": "int cgc_bitset_set_bit_value(unsigned int *v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int *v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int *v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v1 = a0 >> 3;\n
    v0 = 1 << (a0 & 7 & 31);\n
    if (a0 > *(v3))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (a1)\n
    {\n
        v4 = v3;\n
        v5 = v1;\n
        *(4 + v4 + v5) = *(4 + v4 + v5) | v0;\n
    }\n
    else\n
    {\n
        v6 = v3;\n
        v7 = v1;\n
        *(4 + v6 + v7) = *(4 + v6 + v7) & (v0 ^ -1);\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203359:sub_40235f": null, "4203360:cgc_bitset_clear_bit": "int cgc_bitset_clear_bit(unsigned int *v0, unsigned int a0)\n
{\n
    return cgc_bitset_set_bit_value(v0, a0, 0);\n
}\n
", "4203419:sub_40239b": null, "4203424:cgc_bitset_get_bit": "int cgc_bitset_get_bit(unsigned int *v3, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = a0 >> 3;\n
    v0 = 1 << (a0 & 7 & 31);\n
    if (a0 > *(v3))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = ((*(4 + v3 + v1) & v0) ? 0 : 1);\n
    return v2;\n
}\n
", "4203528:sub_402408": null, "4203536:cgc_bitset_find_first": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bitset_find_first(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = \"P\";\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= *(v3))\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        else if (cgc_bitset_get_bit(v3, v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4203661:sub_40248d": null, "4203664:cgc_isdigit": "int cgc_isdigit(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 48)\n
        v1 = v2 <= 57;\n
    return v1 & 1;\n
}\n
", "4203709:sub_4024bd": null, "4203712:cgc_ishexdigit": "int cgc_ishexdigit(unsigned int v2)\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
\n
    v1 = 1;\n
    if (cgc_isdigit(v2))\n
        return v1 & 1;\n
    if (v2 >= 97)\n
    {\n
        v1 = 1;\n
        if (v2 <= 102)\n
            return v1 & 1;\n
    }\n
    v0 = 0;\n
    if (v2 >= 65)\n
        v0 = v2 <= 70;\n
    v1 = v0;\n
    return v1 & 1;\n
}\n
", "4203831:sub_402537": null, "4203840:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"P\";\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_isupper())\n
    {\n
        v0 = v4;\n
        v2 = cgc_islower();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203929:sub_402599": null, "4203936:cgc_isupper": "int cgc_isupper(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 65)\n
        v1 = v2 <= 90;\n
    return v1 & 1;\n
}\n
", "4203981:sub_4025cd": null, "4203984:cgc_islower": "int cgc_islower(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 97)\n
        v1 = v2 <= 122;\n
    return v1 & 1;\n
}\n
", "4204029:sub_4025fd": null, "4204032:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4204106:sub_40264a": null, "4204112:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4204186:sub_40269a": null, "4204192:cgc_todigit": "int cgc_todigit(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 2 && a0 <= 16 && v2 < a0)\n
    {\n
        if (v2 >= 10)\n
        {\n
            v1 = v2 + 87;\n
            return v1;\n
        }\n
        v1 = v2 + 48;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4204288:cgc_fromdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fromdigit(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = \"P\";\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        v4 = cgc_tolower(v4);\n
        if (cgc_isdigit(v4))\n
            v2 = v4 - 48;\n
        else\n
            v2 = v4 + -87;\n
        if (v2 >= 0 && v2 < a0)\n
        {\n
            v0 = v2;\n
            goto LABEL_4027b0;\n
        }\n
        v0 = -1;\n
LABEL_4027b0:\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4204479:sub_4027bf": null, "4204480:cgc_utostr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_utostr(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = \"P\";\n
    v1 = 1;\n
    if (a0 >= 2 && a0 <= 16 && a3 >= 1)\n
    {\n
        v2 = v5;\n
        while (true)\n
        {\n
            v2 = (0 CONCAT v2) /m a0;\n
            if (!v2)\n
                break;\n
            v1 += 1;\n
        }\n
        if (v1 >= a3)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < v1; v3 += 1)\n
        {\n
            *(-1 + a2 + v1 - v3) = cgc_todigit((0 CONCAT v5) /m a0 >> 32, a0);\n
            v5 = (0 CONCAT v5) /m a0;\n
            if (a1)\n
                *(-1 + a2 + v1 - v3) = cgc_toupper(*(-1 + a2 + v1 - v3));\n
        }\n
        *((a2 + v1)) = 0;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4204806:sub_402906": null, "4204816:cgc_itostr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itostr(unsigned int v3, unsigned int a0, unsigned int a1, char *a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v5;  // eax\n
\n
    v1 = \"P\";\n
    if (a3 < (v3 < 0 ? 1 : 2))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (v3 < 0)\n
    {\n
        v5 = a2;\n
        a2 = v5 + 1;\n
        *(v5) = 45;\n
        a3 -= 1;\n
    }\n
    if (v3 < 0)\n
        v0 = -(v3);\n
    else\n
        v0 = v3;\n
    v2 = cgc_utostr(v0, a0, a1, a2, a3);\n
    return v2;\n
}\n
", "4205015:sub_4029d7": null, "4205024:cgc_dtostr": null, "4205850:sub_402d1a": null, "4205856:cgc_strtou": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtou(char *v8, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char *v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // ecx\n
    unsigned int v22;  // eax\n
\n
    v2 = \"P\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (*(v8))\n
            {\n
                v9 = v8;\n
                v8 = v9 + 1;\n
                v3 = cgc_fromdigit(*(v9), a0);\n
                v1 = v3 != -1;\n
            }\n
            if (!(v1 & 1))\n
            {\n
                *(a1) = v4;\n
                v7 = v6;\n
                return v7;\n
            }\n
            v10 = a0;\n
            v11 = v4;\n
            v0 = v10 * v5;\n
            v12 = v11 * v10 >> 32;\n
            v14 = v0;\n
            v4 = v11 * v10;\n
            v5 = v12 + v14;\n
            if (v12 + v14)\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
            v15 = v3;\n
            v16 = v15 / 0x80000000;\n
            v17 = ~(v15);\n
            v18 = v4;\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, eax<4>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>))))\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
            v19 = v3;\n
            v20 = v4;\n
            tmp_12 = v20;\n
            v22 = v5 + (v19 >> 31) + (tmp_12 + v19 < tmp_12);\n
            v4 = v20 + v19;\n
            v5 = v22;\n
            v6 += 1;\n
        }\n
    }\n
    v7 = -1;\n
    return v7;\n
}\n
", "4206186:sub_402e6a": null, "4206192:cgc_strtoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoi(char *v6, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = \"P\";\n
    v2 = 0;\n
    if (*(v6) == 45)\n
        v2 = 1;\n
    v4 = cgc_strtou(&v6[v2], a0, &v3);\n
    if (v4 == -1)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (v3 <= v2 + 2147483647)\n
    {\n
        if (v2)\n
            v0 = -(v3);\n
        else\n
            v0 = v3;\n
        *(a1) = v0;\n
        v5 = v4 + v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4206394:sub_402f3a": null, "4206400:cgc_strtod": null, "4206836:sub_4030f4": null, "4206848:cgc_image_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_image_init(unsigned int v3[2], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = \"P\";\n
    if (a0 <= 40 && a1 <= 40)\n
    {\n
        v3[0] = a0;\n
        v3[1] = a1;\n
        v0 = a1 * a0 * 3;\n
        cgc_memset(v3 + 1, 0);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4206983:sub_403187": null, "4206992:cgc_image_destroy": "int cgc_image_destroy(unsigned int v0[2])\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4207019:sub_4031ab": null, "4207024:cgc_image_write_pixel": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
} struct_0;\n
\n
int cgc_image_write_pixel(unsigned int v2[2], unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x10]\n
    struct_0 *v4;  // ecx\n
    struct_0 *v5;  // eax\n
\n
    v0 = &v3;\n
    if (a0 <= v2[0] && a1 <= v2[1])\n
    {\n
        v4 = v0;\n
        v5 = 1 + v2 + 3 * v2[0] * a1 + 3 * a0;\n
        v5->field_0 = v4->field_0;\n
        v5->field_2 = v4->field_2;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4207141:sub_403225": null, "4207152:cgc_image_get_pixel": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
} struct_0;\n
\n
int cgc_image_get_pixel(unsigned int v1[2], unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // eax\n
    struct_0 *v4;  // ecx\n
\n
    v0 = v2;\n
    if (a0 <= v1[0] && a1 <= v1[1])\n
    {\n
        v3 = a2;\n
        v4 = 1 + v1 + 3 * v1[0] * a1 + 3 * a0;\n
        v3->field_0 = v4->field_0;\n
        v3->field_2 = v4->field_2;\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4207264:cgc_color_to_pixel": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
} struct_0;\n
\n
int cgc_image_get_pixel(unsigned int v1[2], unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // eax\n
    struct_0 *v4;  // ecx\n
\n
    v0 = v2;\n
    if (a0 <= v1[0] && a1 <= v1[1])\n
    {\n
        v3 = a2;\n
        v4 = 1 + v1 + 3 * v1[0] * a1 + 3 * a0;\n
        v3->field_0 = v4->field_0;\n
        v3->field_2 = v4->field_2;\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = -1;\n
    return v0;\n
}\n
", "4207570:sub_4033d2": null, "4207584:cgc_sign": null, "4207605:sub_4033f5": null, "4207616:cgc_exponent": null, "4207637:sub_403415": null, "4207648:cgc_mantissa": null, "4207670:sub_403436": null, "4207680:cgc_isnan": null, "4207790:sub_4034ae": null, "4207792:cgc_isinf": null, "4207944:sub_403548": null, "4207952:cgc_abs": null, "4207998:sub_40357e": null, "4208000:cgc_clamp": null, "4208128:cgc_pool_init": "int cgc_pool_init(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= 4076)\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v1[0] = a0;\n
    v1[1] = 0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208196:sub_403644": null, "4208208:cgc_pool_destroy": "int cgc_pool_destroy(unsigned int *v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    cgc_pool_free_all(v1, *(&v0));\n
    *(v1) = 0;\n
    return v1;\n
}\n
", "4208254:sub_40367e": null, "4208256:cgc_pool_free_all": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_free_all(struct_1 *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"P\";\n
    for (v3 = &v4->field_4->field_0; v3; v3 = v2)\n
    {\n
        v2 = &*(v3)->field_0;\n
        v0 = 0x1000;\n
        cgc_deallocate(v3);\n
    }\n
    v4->field_4 = 0;\n
    return v4;\n
}\n
", "4208357:sub_4036e5": null, "4208368:cgc_pool_alloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_alloc(struct_1 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax\n
\n
    v0 = \"P\";\n
    if (!v5->field_4 && cgc_pool_grow())\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!v5->field_4->field_8)\n
    {\n
        v2 = v5->field_4;\n
        for (v3 = v2->field_0; v3; v3 = v3->field_0)\n
        {\n
            if (v3->field_8)\n
                break;\n
            v2 = v3;\n
        }\n
        if (v3)\n
        {\n
            *(v2) = *(v3);\n
            *(v3) = v5->field_4;\n
            v5->field_4 = v3;\n
        }\n
        else if (cgc_pool_grow())\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v1 = cgc_bitset_find_first(v5->field_4 + 1, 0);\n
    if (v1 == -1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_bitset_set_bit(v5->field_4 + 1, v1) != -1)\n
    {\n
        v6 = v5->field_4;\n
        v6->field_8 = v6->field_8 - 1;\n
        v4 = v5->field_4->field_c + v1 * v5->field_0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4208765:sub_40387d": null, "4208768:cgc_pool_grow": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_grow(unsigned int v5[2])\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax\n
\n
    v4 = v6;\n
    v1 = \"P\";\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    *(v2) = v5[1];\n
    v2[1] = v5[0];\n
    for (v2[2] = (0 CONCAT 4076) /m v5[0]; (v2[2] + 7 & -8) >> 3 > 4076 - v2[2] * v5[0]; v7->field_8 = v7->field_8 - 1)\n
    {\n
        v7 = v2;\n
    }\n
    cgc_bitset_init(v2 + 4, v2[2]);\n
    v2[3] = 5 + v2 + ((v2[2] + 7 & -8) >> 3);\n
    v5[1] = v2;\n
    v3 = 0;\n
    return v3;\n
}\n
", "4209025:sub_403981": null, "4209040:cgc_pool_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pool_free(unsigned int v3, unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_32;  // tmp #32\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[4];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
    unsigned int v5[4];  // ecx\n
    unsigned int v6;  // eax\n
\n
    v0 = \"P\";\n
    v2[0] = a0 & 4095;\n
    v4 = a0 - v2[3];\n
    v5 = v2;\n
    tmp_32 = (0 CONCAT v4) /m v5[1];\n
    v6 = (0 CONCAT v4) /m v5[1];\n
    if (!(tmp_32 >> 32))\n
    {\n
        v1 = (0 CONCAT a0 - v2[3]) /m v2[1];\n
        v6 = cgc_bitset_clear_bit(v2 + 1, v1);\n
    }\n
    return v6;\n
}\n
", "4209164:sub_403a0c": null, "4209168:cgc_make_ray": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned long long field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_make_ray(unsigned int v9)\n
{\n
    unsigned long v0;  // [bp-0x48]\n
    void* v1;  // [bp-0x38]\n
    struct_0 *v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    char v6;  // [bp-0x24]\n
    char v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    char v10;  // [bp+0x8]\n
    char v11;  // [bp+0x20]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
\n
    v8 = v12;\n
    v3 = \"P\";\n
    v1 = v9;\n
    v5 = v1;\n
    v2 = &v11;\n
    memcpy(v1, &v10, 24);\n
    v4 = v1 + 24;\n
    *(&v0) = v2->field_10;\n
    cgc_vector_norm(&v6);\n
    memcpy(v4, &v6, 24);\n
    v13 = *(&v7);\n
    return v5;\n
}\n
", "4209317:sub_403aa5": null, "4209328:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"P\";\n
    v3 = 0;\n
    if (a1 > 2147483647)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!a1)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_receive(v5, a0 + v3, a1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        a1 -= *(&v2);\n
        v3 = *(&v2) + v3;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4209517:sub_403b6d": null, "4209520:cgc_read_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(unsigned int v5, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"P\";\n
    v3 = 0;\n
    if (a2 >= 1 && a2 <= 2147483647)\n
    {\n
        while (true)\n
        {\n
            if (v3 >= a2 - 1)\n
            {\n
LABEL_403c41:\n
                *((a0 + v3)) = 0;\n
                v4 = v3;\n
                return v4;\n
            }\n
            v0 = &v2;\n
            if (cgc_receive(v5, a0 + v3, 1))\n
            {\n
LABEL_403c0c:\n
                v4 = -1;\n
                return v4;\n
            }\n
            if (!*(&v2))\n
                goto LABEL_403c0c;\n
            if (*((a0 + v3)) == a1)\n
                goto LABEL_403c41;\n
            v3 = *(&v2) + v3;\n
        }\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4209754:sub_403c5a": null, "4209760:cgc_write_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"P\";\n
    v3 = 0;\n
    if (a1 > 2147483647)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!a1)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(v5, a0 + v3, a1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        a1 -= *(&v2);\n
        v3 = *(&v2) + v3;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4209949:sub_403d1d": null, "4209952:cgc_fdopen": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int file_pool;\n
\n
int cgc_fdopen(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[5];  // [bp-0x10]\n
    unsigned int v2[5];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"P\";\n
    if (!file_pool && cgc_pool_init(v0 + 144, 20))\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = cgc_pool_alloc(v0 + 144);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = a0;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4210142:sub_403dde": null, "4210144:cgc_fclose": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = \"P\";\n
    if (v1->field_8)\n
        cgc_deallocate(v1->field_8);\n
    return cgc_pool_free(v0 + 144, v1);\n
}\n
", "4210237:sub_403e3d": null, "4210240:cgc_fflush": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fflush(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = \"P\";\n
    if (v3 && ((v3[1] ^ 255) & 1) != 1)\n
    {\n
        if (v3[2] && v3[3])\n
        {\n
            v1 = cgc_write_all(v3[0], v3[2] + v3[4], v3[3]);\n
            if (v1 < 0)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
            v3[3] = 0;\n
            v3[4] = 0;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4210453:sub_403f15": null, "4210464:cgc_fread": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v12, unsigned int a0, unsigned int a1[5])\n
{\n
    struct_0 *v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    void* v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v13[5];  // eax\n
    unsigned int v14[5];  // eax\n
    unsigned int v15[5];  // eax\n
\n
    v5 = \"P\";\n
    v10 = 0;\n
    v6 = v12;\n
    if (a0 <= 2147483647 && !a1[1])\n
    {\n
        if (a0)\n
        {\n
            if (a1[3] > 0)\n
            {\n
                if (a0 < a1[3])\n
                    v4 = a0;\n
                else\n
                    v4 = a1[3];\n
                v8 = v4;\n
                cgc_memcpy(v6, a1[2] + a1[4]);\n
                v13 = a1;\n
                v13[3] = v13[3] - v8;\n
                if (!a1[3])\n
                    v3 = 0;\n
                else\n
                    v3 = a1[4] + v8;\n
                a1[4] = v3;\n
                a0 -= v8;\n
                v6 = v8 + v6;\n
                v10 = v8 + v10;\n
                if (!a0)\n
                {\n
                    v11 = v10;\n
                    return v11;\n
                }\n
                a1[3] = 0;\n
                a1[4] = 0;\n
            }\n
            if (a0 >= 0x1000)\n
            {\n
                v7 = a0 & -0x1000;\n
                v9 = cgc_read_all(a1[0], v6, v7);\n
                if (v9 != v7)\n
                {\n
                    v11 = -1;\n
                    return v11;\n
                }\n
                a0 &= 4095;\n
                v6 = v7 + v6;\n
                v10 = v7 + v10;\n
                if (!a0)\n
                {\n
                    v11 = v10;\n
                    return v11;\n
                }\n
            }\n
            if (!a1[2] && cgc_allocate_buffer())\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            while (true)\n
            {\n
                if (a1[3] >= a0 && a1[3] >= a0)\n
                {\n
                    if (a0 < a1[3])\n
                        v2 = a0;\n
                    else\n
                        v2 = a1[3];\n
                    v8 = v2;\n
                    cgc_memcpy(v6, a1[2] + a1[4]);\n
                    v15 = a1;\n
                    v15[3] = v15[3] - v8;\n
                    if (!a1[3])\n
                        v1 = 0;\n
                    else\n
                        v1 = a1[4] + v8;\n
                    a1[4] = v1;\n
                    v10 = v8 + v10;\n
                    break;\n
                }\n
                v0 = &v9;\n
                if (cgc_receive(a1[0], a1[2] + a1[4] + a1[3], 0x1000 - a1[3]))\n
                {\n
LABEL_404182:\n
                    v11 = -1;\n
                    return v11;\n
                }\n
                if (!v9)\n
                    goto LABEL_404182;\n
                v14 = a1;\n
                v14[3] = v9 + v14[3];\n
            }\n
            v11 = v10;\n
            return v11;\n
        }\n
        else\n
        {\n
            v11 = v10;\n
            return v11;\n
        }\n
    }\n
    v11 = -1;\n
    return v11;\n
}\n
", "4211284:sub_404254": null, "4211296:cgc_allocate_buffer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_buffer(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = \"P\";\n
    if (v3[2])\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v0 = &v3[2];\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v3[3] = 0;\n
    v3[4] = 0;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211438:sub_4042ee": null, "4211440:cgc_fread_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread_until(char *v10, char a0, unsigned int a1, unsigned int a2[5])\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    void* v1;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    char *v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v11[5];  // eax\n
    unsigned int v12[5];  // eax\n
    char *v13;  // eax\n
\n
    v3 = \"P\";\n
    v8 = 0;\n
    v4 = v10;\n
    if (a1 >= 1 && a1 <= 2147483647 && !a2[1])\n
    {\n
        if (!a2[2] && cgc_allocate_buffer(a2))\n
        {\n
            v9 = -1;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (v8 >= a1 - 1)\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (a2[2] && a2[3] > 0)\n
            {\n
                v5 = cgc_memchr(a2[2] + a2[4], a0);\n
                if (!v5)\n
                    v7 = a2[3];\n
                else\n
                    v7 = v5 - (a2[2] + a2[4]) + 1;\n
                if (a1 - 1 >= v7)\n
                    v2 = v7;\n
                else\n
                    v2 = a1 - 1;\n
                v7 = v2;\n
                cgc_memcpy(v4, a2[2] + a2[4]);\n
                v11 = a2;\n
                v11[3] = v11[3] - v7;\n
                if (a2[3])\n
                    v1 = a2[4] + v7;\n
                else\n
                    v1 = 0;\n
                a2[4] = v1;\n
                a1 -= v7;\n
                v4 = &v4[v7];\n
                v8 = v7 + v8;\n
                if (a1 != 1 && !v5)\n
                    goto LABEL_4044e6;\n
                v13 = v4;\n
                v4 = v13 + 1;\n
                *(v13) = 0;\n
                v9 = v8;\n
                return v9;\n
            }\n
LABEL_4044e6:\n
            v0 = &v6;\n
            if (cgc_receive(a2[0], a2[2] + a2[4] + a2[3], 0x1000 - a2[3]))\n
            {\n
LABEL_404537:\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (!*(&v6))\n
                goto LABEL_404537;\n
            v12 = a2;\n
            v12[3] = *(&v6) + v12[3];\n
        }\n
    }\n
    v9 = -1;\n
    return v9;\n
}\n
", "4212069:sub_404565": null, "4212080:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v9, unsigned int a0, unsigned int a1[5])\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10[5];  // eax\n
\n
    v2 = \"P\";\n
    v7 = 0;\n
    v3 = v9;\n
    if (a0 <= 2147483647 && a1[1] == 1)\n
    {\n
        if (a0)\n
        {\n
            if (a1[2])\n
            {\n
                if (a0 < 0x1000 - a1[4] - a1[3])\n
                    v1 = a0;\n
                else\n
                    v1 = 0x1000 - a1[4] - a1[3];\n
                v5 = v1;\n
                cgc_memcpy(a1[2] + a1[4] + a1[3], v3);\n
                v10 = a1;\n
                v10[3] = v5 + v10[3];\n
                a0 -= v5;\n
                v3 = v5 + v3;\n
                v7 = v5 + v7;\n
                if (!a0)\n
                {\n
                    v8 = v7;\n
                    return v8;\n
                }\n
                v0 = a1[3];\n
                if (v0 != cgc_write_all(a1[0], a1[2] + a1[4], a1[3]))\n
                {\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                a1[3] = 0;\n
                a1[4] = 0;\n
            }\n
            if (a0 >= 0x1000)\n
            {\n
                v4 = a0 & -0x1000;\n
                v6 = cgc_write_all(a1[0], v3, v4);\n
                if (v6 != v4)\n
                {\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                a0 &= 4095;\n
                v3 = v4 + v3;\n
                v7 = v4 + v7;\n
                if (!a0)\n
                {\n
                    v8 = v7;\n
                    return v8;\n
                }\n
            }\n
            if (!a1[2] && cgc_allocate_buffer(a1))\n
            {\n
                v8 = -1;\n
                return v8;\n
            }\n
            cgc_memcpy(a1[2], v3);\n
            a1[3] = a0;\n
            v7 = a0 + v7;\n
            v8 = v7;\n
            return v8;\n
        }\n
        else\n
        {\n
            v8 = v7;\n
            return v8;\n
        }\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4212709:sub_4047e5": null, "4212720:cgc_fgetc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgetc(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = \"P\";\n
    if (!v4[3])\n
        v2 = cgc_read_all(v4[0], &v3, 1);\n
    else\n
        v2 = cgc_fread(&v3, 1, v4);\n
    if (v2 < 0)\n
    {\n
        v0 = v2;\n
        return v0;\n
    }\n
    v0 = v3;\n
    return v0;\n
}\n
", "4212866:sub_404882": null, "4212880:cgc_fputc": "int cgc_fputc(unsigned int v0, unsigned int a0[5])\n
{\n
    return cgc_fwrite(&v0, 1, a0);\n
}\n
", "4212937:sub_4048c9": null, "4212944:cgc_vfprintf": "int cgc_vfprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
\n
    return cgc_printf_core(a0, cgc_file_printer, v1, a1, v2, *(&v0));\n
}\n
", "4213015:sub_404917": null, "4213024:cgc_printf_core": null, "4214013:sub_404cfd": null, "4214016:cgc_file_printer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_file_printer(char v2, unsigned int a0[5])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = \"P\";\n
    cgc_fputc(v2, a0);\n
    v4 = v2;\n
    if (v4 == 10)\n
    {\n
        v4 = cgc_fflush(a0);\n
        return v4;\n
    }\n
    return v2;\n
}\n
", "4214096:cgc_vprintf": "extern unsigned int cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v0, unsigned int a0)\n
{\n
    return cgc_vfprintf(cgc_stdout, v0, a0);\n
}\n
", "4214155:sub_404d8b": null, "4214160:cgc_vsnprintf": "int cgc_vsnprintf(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
\n
    v2 = v4;\n
    v0 = v3;\n
    v1 = a0;\n
    return cgc_printf_core(a1, cgc_string_printer, &v0, a2);\n
}\n
", "4214246:sub_404de6": null, "4214256:cgc_string_printer": "int cgc_string_printer(char v1, struct struct_0 *a0[2])\n
{\n
    struct struct_0 *v0[2];  // [bp-0xc]\n
    struct struct_0 *v2[2];  // eax\n
    struct struct_0 *v3[2];  // ecx\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    struct struct_0 *v5[2];  // edx\n
\n
    v0[0] = &v2[0];\n
    v0[0] = &a0[0];\n
    v3 = v0;\n
    v4 = v3[1];\n
    v3[1] = &v4[1];\n
    if (v4)\n
    {\n
        v5 = v0;\n
        v4 = v5[0];\n
        v5[0] = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v4;\n
}\n
", "4214319:sub_404e2f": null, "4214320:cgc_vsprintf": "int cgc_vsprintf(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return cgc_vsnprintf(v0, -1, a0, a1);\n
}\n
", "4214387:sub_404e73": null, "4214400:cgc_fprintf": "int cgc_fprintf(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v0 = &v4;\n
    v1 = cgc_vfprintf(v3, a0, v0);\n
    return v1;\n
}\n
", "4214469:sub_404ec5": null, "4214480:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v0 = &v3;\n
    v1 = cgc_vprintf(v2, v0);\n
    return v1;\n
}\n
", "4214538:sub_404f0a": null, "4214544:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vsnprintf(v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4214624:cgc_sprintf": "int cgc_sprintf(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v0 = &v4;\n
    v1 = cgc_vsprintf(v3, a0, v0);\n
    return v1;\n
}\n
", "4214693:sub_404fa5": null, "4214704:cgc_srand": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* g_40b8f4;\n
extern unsigned int rand_seed;\n
\n
int cgc_srand(unsigned int v0)\n
{\n
    rand_seed = v0;\n
    g_40b8f4 = 0;\n
    return \"P\";\n
}\n
", "4214743:sub_404fd7": null, "4214752:cgc_rand": "extern unsigned int _GLOBAL_OFFSET_TABLE_[35];\n
extern unsigned int g_40b8f4;\n
extern unsigned int rand_seed;\n
\n
int cgc_rand()\n
{\n
    unsigned int v0[35];  // [bp-0x14]\n
    int tmp_38;  // tmp #38\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3[35];  // eax\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v0[0] = \"P\";\n
    v3 = v0;\n
    v1 = rand_seed * 1284865837;\n
    v4 = v1;\n
    tmp_38 = v4;\n
    v6 = (rand_seed * 1284865837 >> 32) + rand_seed * 1481765933 + g_40b8f4 * 1284865837 + 335903614 + (tmp_38 - 144211633 < tmp_38);\n
    v3[33] = v4 - 144211633;\n
    v3[34] = v6;\n
    return v0[34];\n
}\n
", "4214862:sub_40504e": null, "4214864:cgc_get_flag_byte": "int cgc_get_flag_byte(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0x4347c000;\n
    return v0[4 * (v1 & 1023)];\n
}\n
", "4214903:sub_405077": null, "4214912:cgc_get_flag_byte_unsafe": "int cgc_get_flag_byte_unsafe(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0x4347c000;\n
    return v0[v1 & 4095];\n
}\n
", "4214948:sub_4050a4": null, "4214960:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4215046:sub_405106": null, "4215056:cgc_memmove": "int cgc_memmove(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 + 1;\n
        if (!v3)\n
            break;\n
        if (v2 >= a0)\n
        {\n
            *((v1 + a1)) = *((v0 + a1));\n
        }\n
        else\n
        {\n
            v4 = v0;\n
            v0 = v4 + 1;\n
            tmp_19 = *(v4);\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            *(v5) = tmp_19;\n
        }\n
    }\n
    return v2;\n
}\n
", "4215177:sub_405189": null, "4215184:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v1;\n
}\n
", "4215254:sub_4051d6": null, "4215264:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215320:sub_405218": null, "4215328:cgc_strnlen": "int cgc_strnlen(char *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
    char *v4;  // eax\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v3 = a0;\n
        a0 = v3 - 1;\n
        v0 = 0;\n
        if (v3)\n
        {\n
            v4 = v2;\n
            v2 = v4 + 1;\n
            v0 = *(v4);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4215433:sub_405289": null, "4215440:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4215523:sub_4052e3": null, "4215536:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4215691:sub_40538b": null, "4215696:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"P\";\n
    v1 = v3;\n
    cgc_strcpy(v1 + cgc_strlen(v3), a0);\n
    v5 = v2;\n
    return v3;\n
}\n
", "4215773:sub_4053dd": null, "4215776:cgc_strncat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncat(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"P\";\n
    v2 = &v2[cgc_strlen(v2)];\n
    cgc_strncpy(v2, a0, a1);\n
    v2[a1] = 0;\n
    v4 = v1;\n
    return v2;\n
}\n
", "4215871:sub_40543f": null, "4215872:cgc_memcmp": "int cgc_memcmp(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v4 = a1;\n
        a1 = v4 - 1;\n
        if (!v4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*(v1) == *(v0))\n
        {\n
            v1 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v2 = *(v1) - *(v0);\n
            return v2;\n
        }\n
    }\n
}\n
", "4215999:sub_4054bf": null, "4216000:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4216133:sub_405545": null, "4216144:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        v1 = 0;\n
        if (a1)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
            {\n
                v1 = 0;\n
                if (*(a0))\n
                    v1 = *(v2) == *(a0);\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4216303:sub_4055ef": null, "4216304:cgc_memchr": "int cgc_memchr(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v0) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4216405:sub_405655": null, "4216416:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4216498:sub_4056b2": null, "4216512:cgc_strpbrk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strpbrk(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"P\";\n
    while (true)\n
    {\n
        if (!*(v2))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (!cgc_strchr(a0, *(v2)))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v1 = v2;\n
            return v1;\n
        }\n
    }\n
}\n
", "4216626:sub_405732": null, "4216640:cgc_strrchr": "int cgc_strrchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &v1[1 + cgc_strlen(v1)];\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 -= 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4216758:sub_4057b6": null, "4216768:cgc_strstr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strstr(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"P\";\n
    v1 = cgc_strlen(a0);\n
    while (true)\n
    {\n
        if (!*(v4))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strncmp(v4, a0, v1))\n
        {\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v2 = v4;\n
            return v2;\n
        }\n
    }\n
}\n
", "4216900:sub_405844": null, "4216912:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"P\";\n
    v1 = cgc_strpbrk(v4, a0);\n
    if (v1)\n
    {\n
        v2 = v1 - v4;\n
        return v2;\n
    }\n
    v2 = cgc_strlen(v4);\n
    return v2;\n
}\n
", "4217012:sub_4058b4": null, "4217024:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(char *v3, char *a0)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"P\";\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v3))\n
            v0 = cgc_strchr(a0, *(v3));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4217151:sub_40593f": null, "4217152:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[152];\n
    struct struct_1 *field_98;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v3, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ebx\n
    unsigned int v6;  // eax\n
    struct_0 *v7;  // ecx\n
    char *v8;  // eax\n
\n
    v0 = &\"P\";\n
    if (v3)\n
    {\n
LABEL_40599c:\n
        if (v0->field_98 && !(!cgc_strlen(v0->field_98)))\n
            goto LABEL_4059d2;\n
        v0->field_98 = v3;\n
LABEL_4059d2:\n
        for (; cgc_strchr(a0, v0->field_98->field_0); v4->field_98 = v4->field_98 + 1)\n
        {\n
            v4 = v0;\n
        }\n
        v5 = v0;\n
        v1 = &v5->field_98->field_0;\n
        v6 = cgc_strpbrk(v5->field_98, a0);\n
        v0->field_98 = v6;\n
        if (v6)\n
        {\n
            v7 = v0;\n
            v8 = v7->field_98;\n
            v7->field_98 = &v8[1];\n
            *(v8) = 0;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        if (v0->field_98 && !(!cgc_strlen(v0->field_98)))\n
            goto LABEL_40599c;\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4217451:sub_405a6b": null, "4217456:cgc_make_vector": "int cgc_make_vector()\n
{\n
    unsigned long long v0;  // [bp-0x1c]\n
    unsigned long long v1;  // [bp-0x14]\n
    unsigned long long v2;  // [bp-0xc]\n
    char v3;  // [bp-0x4]\n
    unsigned long long v4[3];  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    char v6;  // [bp+0x10]\n
    char v7;  // [bp+0x18]\n
    unsigned long long v8[3];  // ecx\n
    unsigned int v9;  // ebp\n
\n
    v8 = v4;\n
    v2 = *(&v5);\n
    v1 = *(&v6);\n
    v0 = *(&v7);\n
    v8[0] = v2;\n
    v8[1] = v1;\n
    v8[2] = v0;\n
    v9 = *(&v3);\n
    return;\n
}\n
", "4217533:sub_405abd": null, "4217536:cgc_vector_add": "int cgc_vector_add()\n
{\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0x8]\n
    char v7;  // [bp+0x10]\n
    char v8;  // [bp+0x18]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebp\n
\n
    v4 = v12;\n
    v3 = v5;\n
    s_28 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+8, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+32, size=8, endness=Iend_LE))))<8>\n
    s_20 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+16, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+40, size=8, endness=Iend_LE))))<8>\n
    s_18 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+24, size=8, endness=Iend_LE)) + Conv(64->128, Load(addr=stack_base+48, size=8, endness=Iend_LE))))<8>\n
    cgc_make_vector(v3);\n
    v13 = v3;\n
    v14 = v4;\n
    return;\n
}\n
", "4217637:sub_405b25": null, "4217648:cgc_vector_sub": "int cgc_vector_sub()\n
{\n
    int tmp_47;  // tmp #47\n
    int tmp_48;  // tmp #48\n
    int tmp_45;  // tmp #45\n
    int tmp_56;  // tmp #56\n
    int tmp_57;  // tmp #57\n
    int tmp_54;  // tmp #54\n
    int tmp_65;  // tmp #65\n
    int tmp_66;  // tmp #66\n
    int tmp_63;  // tmp #63\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // ebx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // ebp\n
\n
    v4 = v6;\n
    v3 = v5;\n
    tmp_47 = SubV(tmp_48, tmp_45);\n
    tmp_56 = SubV(tmp_57, tmp_54);\n
    tmp_65 = SubV(tmp_66, tmp_63);\n
    *(&v0) = tmp_47;\n
    *(&v1) = tmp_56;\n
    *(&v2) = tmp_65;\n
    cgc_make_vector(v3);\n
    v10 = v3;\n
    v11 = v4;\n
    return;\n
}\n
", "4217749:sub_405b95": null, "4217760:cgc_vector_mul": "int cgc_vector_mul()\n
{\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0x8]\n
    char v7;  // [bp+0x10]\n
    char v8;  // [bp+0x18]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebp\n
\n
    v4 = v12;\n
    v3 = v5;\n
    s_28 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+8, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base+32, size=8, endness=Iend_LE))))<8>\n
    s_20 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+16, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base+40, size=8, endness=Iend_LE))))<8>\n
    s_18 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+24, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base+48, size=8, endness=Iend_LE))))<8>\n
    cgc_make_vector(v3);\n
    v13 = v3;\n
    v14 = v4;\n
    return;\n
}\n
", "4217861:sub_405c05": null, "4217872:cgc_vector_scale": "int cgc_vector_scale()\n
{\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned long long v4;  // [bp-0x14]\n
    char v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v7;  // [bp+0x4]\n
    char v8;  // [bp+0x8]\n
    char v9;  // [bp+0x10]\n
    char v10;  // [bp+0x18]\n
    char v11;  // [bp+0x20]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebp\n
\n
    v6 = v12;\n
    v3 = v7;\n
    v4 = *(&v11);\n
    s_38 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+8, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-20, size=8, endness=Iend_LE))))<8>\n
    s_30 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+16, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-20, size=8, endness=Iend_LE))))<8>\n
    s_28 =L Conv(128->64, ((0x0<64> CONCAT Load(addr=stack_base+24, size=8, endness=Iend_LE)) * Conv(64->128, Load(addr=stack_base-20, size=8, endness=Iend_LE))))<8>\n
    cgc_make_vector(v3);\n
    v13 = *(&v5);\n
    v14 = v6;\n
    return;\n
}\n
", "4217981:sub_405c7d": null, "4217984:cgc_vector_mag_sqr": "int cgc_vector_mag_sqr()\n
{\n
    unsigned long v0;  // [bp-0xc]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    char v3;  // [bp+0xc]\n
    char v4;  // [bp+0x14]\n
    unsigned long long v5;  // 184\n
    unsigned long long v6;  // xmm1\n
    unsigned long long v7;  // 168\n
    unsigned long long v8;  // xmm0\n
    unsigned long long v10;  // 168\n
    unsigned long long v11;  // xmm0\n
    int v12;  // xmm0\n
    unsigned int v13;  // ebp\n
\n
    v5 = 0;\n
    v6 = *(&v2);\n
    v7 = 0;\n
    v8 = *(&v3);\n
    v10 = 0;\n
    v11 = *(&v4);\n
    v12 = xmm0<16> * xmm0<16> + xmm1<16> * xmm1<16> + xmm0<16> * xmm0<16>;\n
    *(&v0) = v12;\n
    if ([D] GetI(136:I8x8)[t43,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        v13 = *(&v1);\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    v13 = *(&v1);\n
    return;\n
}\n
", "4218040:sub_405cb8": null, "4218048:cgc_vector_mag": null, "4218122:sub_405d0a": null, "4218128:cgc_vector_norm": null, "4218262:sub_405d96": null, "4218272:cgc_vector_dot": "int cgc_vector_dot()\n
{\n
    unsigned long v0;  // [bp-0xc]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    char v3;  // [bp+0xc]\n
    char v4;  // [bp+0x14]\n
    char v5;  // [bp+0x1c]\n
    char v6;  // [bp+0x24]\n
    char v7;  // [bp+0x2c]\n
    unsigned int v8;  // ebp\n
\n
    *(&v0) = (0 CONCAT *(&v4)) * (0 CONCAT *(&v7)) + (0 CONCAT *(&v2)) * (0 CONCAT *(&v5)) + (0 CONCAT *(&v3)) * (0 CONCAT *(&v6));\n
    if ([D] GetI(136:I8x8)[t56,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        v8 = *(&v1);\n
        return;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    v8 = *(&v1);\n
    return;\n
}\n
", "4218345:sub_405de9": null, "4218352:cgc_vector_cross": "int cgc_vector_cross()\n
{\n
    int tmp_64;  // tmp #64\n
    int tmp_66;  // tmp #66\n
    int tmp_65;  // tmp #65\n
    int tmp_74;  // tmp #74\n
    int tmp_76;  // tmp #76\n
    int tmp_75;  // tmp #75\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned long v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0x8]\n
    char v7;  // [bp+0x10]\n
    char v8;  // [bp+0x20]\n
    char v9;  // [bp+0x28]\n
    unsigned int v10;  // ebx\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebp\n
\n
    v4 = v10;\n
    v3 = v5;\n
    tmp_64 = SubV(tmp_66, tmp_65);\n
    tmp_74 = SubV(tmp_76, tmp_75);\n
    *(&v0) = tmp_64;\n
    *(&v1) = tmp_74;\n
    *(&v2) = (0 CONCAT *(&v6)) * (0 CONCAT *(&v9)) + ((0 CONCAT *(&v7)) * (0 CONCAT *(&v8)) ^ 0x80000000000000008000000000000000);\n
    cgc_make_vector(v3);\n
    v13 = v3;\n
    v14 = v4;\n
    return;\n
}\n
", "4218509:sub_405e8d": null, "4218512:cgc_pt_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pt_init(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"P\";\n
    if (cgc_pool_init(v3, 120))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    cgc_pt_clear_ctx();\n
    v1 = 0;\n
    return v1;\n
}\n
", "4218607:sub_405eef": null, "4218608:cgc_pt_clear_ctx": "typedef struct struct_1 {\n
    unsigned long long field_-280c;\n
    unsigned long long field_-2804;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pt_clear_ctx(struct_0 *v19)\n
{\n
    unsigned long long v0;  // [bp-0xb8]\n
    int v1;  // [bp-0xb4], Other Possible Types: unsigned long\n
    unsigned long v2;  // [bp-0xb0], Other Possible Types: unsigned long long\n
    unsigned long long v3;  // [bp-0xac]\n
    int v4;  // [bp-0xa8], Other Possible Types: unsigned long long\n
    int v5;  // [bp-0xa4]\n
    unsigned long long v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    struct_1 *v9;  // [bp-0x74]\n
    struct_0 *v10;  // [bp-0x70]\n
    char v11;  // [bp-0x6c]\n
    char v12;  // [bp-0x5c]\n
    char v13;  // [bp-0x54]\n
    char v14;  // [bp-0x44]\n
    char v15;  // [bp-0x3c]\n
    char v16;  // [bp-0x2c]\n
    char v17;  // [bp-0x1c]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v20;  // ebx\n
    unsigned int v21;  // ebx\n
\n
    v18 = v20;\n
    v9 = &\"P\";\n
    v19->field_40 = 0;\n
    cgc_pool_free_all(v19);\n
    v10 = v19;\n
    v0 = 0;\n
    *(&v2) = *((&v9[640].field_-280c + 4));\n
    v4 = 0;\n
    cgc_make_vector(&v13);\n
    *(&v1) = *((&v9[640].field_-2804 + 4));\n
    v3 = 0;\n
    cgc_make_vector(&v11);\n
    v6 = *(&v12);\n
    *(&v4) = *(&v11);\n
    v2 = *(&v14);\n
    cgc_make_ray(&v15);\n
    *(&v5) = *(&v17);\n
    *(&v1) = *(&v16);\n
    v8 = 1071854387;\n
    v7 = 858993459;\n
    v21 = *(&(&v17)[8]);\n
    return cgc_pt_setup_camera(v10);\n
}\n
", "4218879:sub_405fff": null, "4218880:cgc_pt_destroy": "int cgc_pt_destroy(unsigned int *v0)\n
{\n
    return cgc_pool_destroy(v0);\n
}\n
", "4218917:sub_406025": null, "4218928:cgc_pt_setup_camera": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned long long field_38;\n
} struct_0;\n
\n
int cgc_pt_setup_camera()\n
{\n
    struct_0 *v0;  // [bp+0x4]\n
    char v1;  // [bp+0x8]\n
    char v2;  // [bp+0x38]\n
\n
    memcpy(&v0->padding_0[8], &v1, 48);\n
    v0->field_38 = *(&v2);\n
    return;\n
}\n
", "4219008:cgc_pt_add_sphere": "typedef struct struct_1 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    uint128_t field_c;\n
    unsigned long long field_1c;\n
    uint128_t field_24;\n
    unsigned long long field_34;\n
    uint128_t field_3c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pt_add_sphere()\n
{\n
    char v0;  // [bp-0x8c]\n
    unsigned long long v1;  // [bp-0x88]\n
    unsigned long v2;  // [bp-0x40]\n
    struct_0 *v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    struct_1 *v5;  // [bp-0x24]\n
    struct_1 *v6;  // [bp-0x20]\n
    struct_1 *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    struct_2 *v11;  // [bp+0x4]\n
    char v12;  // [bp+0x8]\n
    char v13;  // [bp+0xc]\n
    char v14;  // [bp+0x24]\n
    char v15;  // [bp+0x3c]\n
    char v16;  // [bp+0x54]\n
    unsigned int v17;  // ebx\n
    struct_1 *v18;  // esi\n
    struct_1 *v19;  // edi\n
    struct_0 *v20;  // eax\n
\n
    v10 = v17;\n
    v4 = \"P\";\n
    v5 = &v15;\n
    v6 = &v14;\n
    v7 = &v13;\n
    v8 = cgc_pool_alloc(v11);\n
    if (!v8)\n
    {\n
        v9 = -1;\n
        return;\n
    }\n
    v18 = v7;\n
    v19 = v6;\n
    v3 = &v0;\n
    *(&v2) = v5->field_10;\n
    v20 = v3;\n
    *((&v20->field_24 + 12)) = v5->field_0;\n
    *((&v20->field_24 + 4)) = v19->field_10;\n
    *((&v20->field_1c + 4)) = v19->field_0;\n
    *((&v20->field_c + 12)) = v18->field_10;\n
    *(&(&v20->field_8)[1]) = v18->field_0;\n
    v20->field_8 = *(&v12);\n
    v20->field_4 = 0;\n
    cgc_shape_init();\n
    v1 = *(&v16);\n
    cgc_sphere_init(v8);\n
    *(v8) = v11->field_40;\n
    v11->field_40 = v8;\n
    v9 = 0;\n
    return;\n
}\n
", "4219258:sub_40617a": null, "4219264:cgc_pt_add_plane": "typedef struct struct_0 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    uint128_t field_c;\n
    unsigned long long field_1c;\n
    uint128_t field_24;\n
    unsigned long long field_34;\n
    uint128_t field_3c;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pt_add_plane(struct_1 *v13, unsigned int a0)\n
{\n
    char v0;  // [bp-0x8c]\n
    int v1;  // [bp-0x88]\n
    unsigned long v2;  // [bp-0x78]\n
    unsigned long v3;  // [bp-0x40]\n
    struct_2 *v4;  // [bp-0x30]\n
    unsigned int v5;  // [bp-0x2c]\n
    struct_0 *v6;  // [bp-0x28]\n
    struct_0 *v7;  // [bp-0x24]\n
    struct_0 *v8;  // [bp-0x20]\n
    struct_0 *v9;  // [bp-0x1c]\n
    unsigned int *v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x8]\n
    char v14;  // [bp+0xc]\n
    char v15;  // [bp+0x24]\n
    char v16;  // [bp+0x3c]\n
    char v17;  // [bp+0x54]\n
    unsigned int v18;  // ebx\n
    struct_0 *v19;  // esi\n
    struct_0 *v20;  // edi\n
    struct_2 *v21;  // eax\n
    struct_0 *v22;  // edx\n
\n
    v12 = v18;\n
    v5 = \"P\";\n
    v6 = &v17;\n
    v7 = &v16;\n
    v8 = &v15;\n
    v9 = &v14;\n
    v10 = cgc_pool_alloc(v13);\n
    if (!v10)\n
    {\n
        v11 = -1;\n
        return v11;\n
    }\n
    v19 = v9;\n
    v20 = v8;\n
    v4 = &v0;\n
    *(&v3) = v7->field_10;\n
    v21 = v4;\n
    *((&v21->field_24 + 12)) = v7->field_0;\n
    *((&v21->field_24 + 4)) = v20->field_10;\n
    *((&v21->field_1c + 4)) = v20->field_0;\n
    *((&v21->field_c + 12)) = v19->field_10;\n
    *(&(&v21->field_8)[1]) = v19->field_0;\n
    v21->field_8 = a0;\n
    v21->field_4 = 1;\n
    cgc_shape_init();\n
    v22 = v6;\n
    *(&v2) = v22->field_10;\n
    *(&v1) = v22->field_0;\n
    cgc_plane_init(v10);\n
    *(v10) = v13->field_40;\n
    v13->field_40 = v10;\n
    v11 = 0;\n
    return v11;\n
}\n
", "4219523:sub_406283": null, "4219536:cgc_pt_render": "typedef struct struct_1 {\n
    unsigned long long field_-2854;\n
    char padding_-284c[96];\n
    unsigned long long field_-27ec;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    uint128_t field_8;\n
    unsigned long long field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    uint128_t field_0;\n
    unsigned long long field_10;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pt_render(struct_0 *v50, struct_0 *a0)\n
{\n
    unsigned long long v0;  // [bp-0x224]\n
    int tmp_52;  // tmp #52\n
    int tmp_54;  // tmp #54\n
    int tmp_53;  // tmp #53\n
    int tmp_58;  // tmp #58\n
    int tmp_60;  // tmp #60\n
    int tmp_59;  // tmp #59\n
    unsigned long long v1;  // [bp-0x220]\n
    unsigned long long v2;  // [bp-0x21c]\n
    unsigned long long v3;  // [bp-0x218]\n
    int v4;  // [bp-0x214]\n
    unsigned long v5;  // [bp-0x204]\n
    int v6;  // [bp-0x1ec]\n
    unsigned long v7;  // [bp-0x1dc]\n
    struct_0 *v8;  // [bp-0x1d4]\n
    struct_0 *v9;  // [bp-0x1d0]\n
    struct_0 *v10;  // [bp-0x1cc]\n
    struct_1 *v11;  // [bp-0x1c8]\n
    char v12;  // [bp-0x1c4]\n
    char v13;  // [bp-0x1b4]\n
    char v14;  // [bp-0x1ac]\n
    struct_0 *v15;  // [bp-0x1aa]\n
    char v16;  // [bp-0x1a4]\n
    char v17;  // [bp-0x194]\n
    char v18;  // [bp-0x18c]\n
    char v19;  // [bp-0x174]\n
    char v20;  // [bp-0x164]\n
    char v21;  // [bp-0x15c]\n
    char v22;  // [bp-0x14c]\n
    char v23;  // [bp-0x144]\n
    char v24;  // [bp-0x134]\n
    char v25;  // [bp-0x12c]\n
    char v26;  // [bp-0x11c]\n
    char v27;  // [bp-0x114]\n
    char v28;  // [bp-0xfc]\n
    char v29;  // [bp-0xec]\n
    char v30;  // [bp-0xe4]\n
    char v31;  // [bp-0xd4]\n
    char v32;  // [bp-0xcc]\n
    char v33;  // [bp-0xb4]\n
    struct_0 *v34;  // [bp-0x9c], Other Possible Types: unsigned int\n
    struct_0 *v35;  // [bp-0x98], Other Possible Types: unsigned int\n
    char v36;  // [bp-0x94]\n
    char v37;  // [bp-0x84]\n
    char v38;  // [bp-0x7c]\n
    char v39;  // [bp-0x6c]\n
    char v40;  // [bp-0x64]\n
    char v41;  // [bp-0x54]\n
    int v42;  // [bp-0x4c]\n
    unsigned long v43;  // [bp-0x3c]\n
    char v44;  // [bp-0x34]\n
    unsigned int v45;  // [bp-0x10]\n
    unsigned int v46;  // [bp-0xc]\n
    unsigned int v47;  // [bp-0x8]\n
    struct_0 *v48;  // [bp-0x4]\n
    struct_0 *v49;  // [bp+0x0], Other Possible Types: int\n
    char v51;  // [bp+0xa]\n
    struct_0 *v52;  // [bp+0xc]\n
    struct_0 *v53;  // [bp+0x10]\n
    struct_0 *v54;  // [bp+0x14]\n
    struct_0 *v55;  // [bp+0x18], Other Possible Types: unsigned long\n
    struct_0 *v56;  // [bp+0x1c], Other Possible Types: unsigned long\n
    unsigned long long v57;  // [bp+0x28]\n
    char v58;  // [bp+0x21c]\n
    char v59;  // [bp+0x220]\n
    char v60;  // [bp+0x224]\n
    unsigned int v61;  // ebx\n
    unsigned int v62;  // edi\n
    unsigned int v63;  // esi\n
    struct_0 *v64;  // eax\n
    struct_2 *v65;  // ecx\n
    struct_1 *v66;  // ebx\n
    unsigned long long v67;  // 200\n
    int v70;  // xmm0\n
    struct struct_0 *v72[5];  // ecx\n
    struct_0 *v73;  // esi\n
    unsigned int v74;  // esi\n
    unsigned int v75;  // edi\n
    unsigned int v76;  // ebx\n
\n
    v47 = v61;\n
    v46 = v62;\n
    v45 = v63;\n
    v11 = &\"P\";\n
    v64 = v50;\n
    *(&v43) = *((&v64->field_8 + 8));\n
    *(&v42) = *(&(&v64->field_4)[1]);\n
    v1 = 0;\n
    v3 = 0;\n
    cgc_make_vector(&v33);\n
    memcpy(&v38, &v33, 24);\n
    v65 = &v50->field_18;\n
    *(&v5) = v65->field_10;\n
    *(&v4) = v65->field_0;\n
    v2 = *(&v39);\n
    cgc_vector_cross(&v28);\n
    v1 = *(&v29);\n
    cgc_vector_norm(&v30);\n
    v0 = *(&v31);\n
    cgc_vector_trunc(&v32);\n
    memcpy(&v36, &v32, 24);\n
    for (v34 = 0; v34 < a0->field_4; v34 = &v34->padding_1)\n
    {\n
        for (v35 = 0; v35 < *(&a0->field_0); v35 += 1)\n
        {\n
            v66 = v11;\n
            v67 = 0;\n
            *(&v7) = *(&v66[92].padding_-284c[12]);\n
            *(&v6) = xmm2<16>;\n
            tmp_52 = DivV(tmp_54, tmp_53);\n
            v70 = tmp_52 + (0 CONCAT *(&v66[91].padding_-284c[20]));\n
            *(&v54) = *(&v39);\n
            *(&v50) = *(&v38);\n
            v49 = &v23;\n
            *(&v56) = v70;\n
            cgc_vector_scale(&v23);\n
            tmp_58 = SubV(tmp_60, tmp_59);\n
            *(&v53) = *(&v37);\n
            *(&v49) = *(&v36);\n
            *(&v55) = tmp_58;\n
            v48 = &v21;\n
            cgc_vector_scale(*(&v36));\n
            v57 = *(&v22);\n
            *(&v55) = *(&v21);\n
            *(&v53) = *(&v24);\n
            *(&v49) = *(&v23);\n
            v48 = &v25;\n
            cgc_vector_add(v49);\n
            v72 = &v50->field_18;\n
            *(&v53) = *(&v72[4]);\n
            *(&v49) = *(&v72[0]);\n
            v48 = &v19;\n
            cgc_vector_trunc(*(&v72[0]));\n
            v57 = *(&v20);\n
            *(&v55) = *(&v19);\n
            *(&v53) = *(&v26);\n
            *(&v49) = *(&v25);\n
            v48 = &v27;\n
            cgc_vector_add(v49);\n
            v48 = &v40;\n
            v49 = &v27;\n
            v50 = 24;\n
            memcpy(v50, (&v49)[2], (&v49)[3]);\n
            v8 = &v44;\n
            *(&v54) = *(&v41);\n
            *(&v50) = *(&v40);\n
            v49 = &v16;\n
            cgc_vector_norm(&v16);\n
            *(&v53) = *(&v17);\n
            *(&v49) = *(&v16);\n
            v48 = &v18;\n
            cgc_vector_trunc(v49);\n
            v48 = v8;\n
            v49 = &v18;\n
            v50 = 24;\n
            memcpy(v50, (&v49)[2], (&v49)[3]);\n
            v73 = (&v49)[2];\n
            v9 = v35;\n
            v10 = v34;\n
            v49 = &v12;\n
            v50 = v50;\n
            a0 = &v42;\n
            v52 = 0;\n
            cgc_radiance(v50, a0, v52);\n
            *(&v53) = *(&v13);\n
            *(&v49) = *(&v12);\n
            v48 = &v14;\n
            v56 = 1073846681;\n
            v55 = 2576980378;\n
            cgc_color_to_pixel(v49);\n
            v48 = v73;\n
            v49 = v9;\n
            v50 = v10;\n
            a0 = *(&v14);\n
            v51 = v15;\n
            cgc_image_write_pixel(v50, (&v49)[8], (&v49)[12]);\n
        }\n
    }\n
    v74 = *(&v58);\n
    v75 = *(&v59);\n
    v76 = *(&v60);\n
    return v34;\n
}\n
", "4220835:sub_4067a3": null, "4220848:cgc_radiance": null, "4224231:sub_4074e7": null, "4224240:cgc_intersect": null, "4224653:sub_40768d": null, "4224656:cgc_plane_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_plane_init(unsigned int v2[29])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    char v3;  // [bp+0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v1 = v4;\n
    v0 = \"P\";\n
    v2[27] = 0;\n
    memcpy(&v2[21], &v3, 24);\n
    v2[28] = v0 - 16764;\n
    v5 = v1;\n
    return v2;\n
}\n
", "4224741:sub_4076e5": null, "4224752:cgc_plane_intersect": null, "4225522:sub_4079f2": null, "4225536:main": "typedef struct struct_0 {\n
    char padding_0[120];\n
    unsigned int field_78;\n
    char padding_7c[32];\n
    char field_9c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[120];\n
    unsigned int field_78[5];\n
    char padding_7c[32];\n
    char field_9c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    struct_0 *v1;  // [bp-0xd0]\n
    unsigned int v2;  // [bp-0x64]\n
    char v3;  // [bp-0x60]\n
    void* v4;  // [bp-0x5c]\n
    char v6;  // [bp-0x54]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v32;  // ebx\n
\n
    v8 = v32;\n
    v1 = &\"P\";\n
    v7 = 0;\n
    v4 = 0;\n
    v2 = 4808;\n
    if (cgc_allocate(v2, 0) == -1)\n
    {\n
        v7 = -1;\n
        return;\n
    }\n
    else if (cgc_image_init(*(&v3), 40, 40) != -1)\n
    {\n
        if (!(cgc_pt_init(&v6) == -1))\n
            goto LABEL_0x407ac9;\n
        v7 = -1;\n
        return;\n
    }\n
    else\n
    {\n
        v7 = -1;\n
        return;\n
    }\n
}\n
", "4226612:sub_407e34": null, "4226624:cgc_read_sphere": "typedef struct struct_0 {\n
    char padding_0[120];\n
    unsigned int field_78;\n
    char padding_7c[32];\n
    char field_9c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[120];\n
    unsigned int field_78[5];\n
    char padding_7c[32];\n
    char field_9c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_sphere(unsigned int v5[23])\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2[23];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // ebx\n
    struct_0 *v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &\"P\";\n
    v2[0] = v5;\n
    cgc_printf(\"Enter 'd' for diffuse, 's' for specular:\\n
\");\n
    v7 = v0;\n
    if (cgc_fread_until(&v7->field_9c, 10, 0x1000, v7->field_78) == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (v0->field_9c != 100 && v0->field_9c != 115)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v8 = v0;\n
    v2[2] = (v8->field_9c == 100 ? 1 : 0);\n
    cgc_printf(&v8[62].padding_7c[1]);\n
    if (cgc_read_double() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2[22] = *(&v1);\n
    cgc_printf(&v0[62].padding_0[110]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_printf(&v0[62].padding_0[80]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_printf(&v0[62].padding_0[53]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_sphere_init(v2);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227099:sub_40801b": null, "4227104:cgc_read_plane": "typedef struct struct_0 {\n
    char padding_0[120];\n
    unsigned int field_78;\n
    char padding_7c[32];\n
    char field_9c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[88];\n
    unsigned long long field_64;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[120];\n
    unsigned int field_78[5];\n
    char padding_7c[32];\n
    char field_9c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_plane(struct_2 *v5)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_2 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // ebx\n
    struct_0 *v8;  // ebx\n
\n
    v4 = v6;\n
    v1 = &\"P\";\n
    v2 = v5;\n
    cgc_printf(\"Enter 'd' for diffuse, 's' for specular:\\n
\");\n
    v7 = v1;\n
    if (cgc_fread_until(&v7->field_9c, 10, 0x1000, v7->field_78) == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (v1->field_9c != 100 && v1->field_9c != 115)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v8 = v1;\n
    v2->field_8 = (v8->field_9c == 100 ? 1 : 0);\n
    cgc_printf(&v8[62].padding_0[23]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_printf(&v1[62].padding_0[110]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_printf(&v1[62].padding_0[80]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_printf(&v1[62].padding_0[53]);\n
    if (cgc_read_vector() == -1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    *(&v0) = *(&(&v2->padding_c)[1]);\n
    cgc_plane_init(v2);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4227571:sub_4081f3": null, "4227584:cgc_read_vector": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char buf;\n
extern unsigned int cgc_stdin[5];\n
\n
int cgc_read_vector(unsigned int v10)\n
{\n
    unsigned long long v0;  // [bp-0x58]\n
    void* v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x48]\n
    char v3;  // [bp-0x44]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x24]\n
    char v6;  // [bp-0x1c]\n
    char v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
\n
    v9 = v12;\n
    v2 = \"P\";\n
    if (cgc_fread_until(&buf, 10, 0x1000, cgc_stdin) == -1)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v13 = v2;\n
    v4 = cgc_strtok(v13 + 156, v13 - 9729);\n
    if (v4 && cgc_strlen(v4))\n
    {\n
        if (cgc_strtod(v4, &v7) != -1)\n
        {\n
            v4 = cgc_strtok(0, v2 - 9729);\n
            if (v4 && cgc_strlen(v4))\n
            {\n
                if (cgc_strtod(v4, &v6) != -1)\n
                {\n
                    v4 = cgc_strtok(0, v2 - 9729);\n
                    if (v4 && cgc_strlen(v4))\n
                    {\n
                        if (cgc_strtod(v4, &v5) != -1)\n
                        {\n
                            v1 = v10;\n
                            v0 = *(&v5);\n
                            cgc_make_vector(&v3);\n
                            memcpy(v1, &v3, 24);\n
                            v8 = 0;\n
                            return v8;\n
                        }\n
                        v8 = -1;\n
                        return v8;\n
                    }\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                else\n
                {\n
                    v8 = -1;\n
                    return v8;\n
                }\n
            }\n
            v8 = -1;\n
            return v8;\n
        }\n
        else\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4228127:sub_40841f": null, "4228128:cgc_read_double": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char buf;\n
extern unsigned int cgc_stdin[5];\n
\n
int cgc_read_double(unsigned long long *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"P\";\n
    if (cgc_fread_until(&buf, 10, 0x1000, cgc_stdin) == -1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (cgc_strtod(v0 + 156, &v1) != -1)\n
    {\n
        *(v4) = *(&v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
}\n
", "4228295:sub_4084c7": null, "4228304:cgc_write_ppm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_ppm(unsigned int v6[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v3 = \"P\";\n
    v0 = v6[0];\n
    v1 = v6[1];\n
    cgc_printf(\"%d %d\\n
\");\n
    for (v4 = 0; v4 < v6[1] * v6[0]; v4 += 1)\n
    {\n
        v0 = *(8 + &v6[0] + 3 * v4);\n
        v1 = *(9 + &v6[0] + 3 * v4);\n
        v2 = *(10 + &v6[0] + 3 * v4);\n
        cgc_printf(v3 - 9719);\n
    }\n
    v0 = cgc_calculate_csum();\n
    return cgc_printf(v3 - 9709);\n
}\n
", "4228525:sub_4085ad": null, "4228528:cgc_calculate_csum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calculate_csum(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"P\";\n
    v2 = 0;\n
    for (v1 = 0; v1 < 0x400; v1 += 1)\n
    {\n
        v2 = cgc_get_flag_byte(v1) ^ v2;\n
    }\n
    for (v1 = 0; v1 < v3[1] * v3[0]; v1 += 1)\n
    {\n
        v2 = *(8 + &v3[0] + 3 * v1) ^ *(9 + &v3[0] + 3 * v1) ^ *(10 + &v3[0] + 3 * v1) ^ v2;\n
    }\n
    return v2;\n
}\n
", "4228727:sub_408677": null, "4228736:cgc_shape_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_shape_init(unsigned int v4[3], unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    char v5;  // [bp+0x10]\n
    char v6;  // [bp+0x28]\n
    char v7;  // [bp+0x40]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v3 = v8;\n
    v1 = \"P\";\n
    v2 = &v7;\n
    v0 = &v6;\n
    v4[0] = 0;\n
    v4[1] = a0;\n
    v4[2] = a1;\n
    memcpy(v4 + 1, &v5, 24);\n
    memcpy(v4 + 3, v0, 24);\n
    v9 = v3;\n
    return memcpy(v4 + 5, v2, 24);\n
}\n
", "4228905:sub_408729": null, "4228912:cgc_sphere_init": null, "4229013:sub_408795": null, "4229024:cgc_sphere_intersect": null, "4229621:sub_4089f5": null, "4229632:cgc_float_trunc": null, "4229677:sub_408a2d": null, "4229680:cgc_vector_trunc": null, "4229864:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_fabs": null, "5242884:cgc_pow": null, "5242888:__libc_start_main": null, "5242892:memcpy": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_deallocate": null, "5242908:cgc_sqrt": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}