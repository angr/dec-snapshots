{"4198400:_init": "extern struct_0 *g_404914;\n
\n
int _init()\n
{\n
    if (g_404914)\n
    {\n
        g_404914();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198528:sub_401080": "int sub_401080()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198534:sub_401086": null, "4198544:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198587:sub_4010bb": null, "4198588:sub_4010bc": "int sub_4010bc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198592:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198596:sub_4010c4": null, "4198608:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 14411;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198659:sub_401103": "int sub_401103()\n
{\n
}\n
", "4198665:sub_401109": "int sub_401109()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198672:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 14347;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198743:sub_401157": "int sub_401157()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198752:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_404910;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__TMC_END__)\n
        return;\n
    if (g_404910)\n
    {\n
        v0 = __dso_handle;\n
        sub_401080();\n
    }\n
    deregister_tm_clones();\n
    __TMC_END__ = 1;\n
    return;\n
}\n
", "4198827:sub_4011ab": "int sub_4011ab()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198832:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198841:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198845:sub_4011bd": null, "4198848:cgc_zero": "int cgc_zero(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v1;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a0)\n
            break;\n
        v1[v0] = 0;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4198926:sub_40120e": null, "4198928:cgc_strlen": "int cgc_strlen(unsigned int v2)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; v0[v2]; v0 += 1);\n
    v1 = v0;\n
    return v1;\n
}\n
", "4199015:sub_401267": null, "4199024:cgc_print": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!v5)\n
        return v5;\n
    v4 = cgc_strlen(v5);\n
    while (true)\n
    {\n
        if (v3 >= v4)\n
            break;\n
        v0 = &v2;\n
        if (cgc_transmit(1, v5 + v3, v4 - v3))\n
            cgc__terminate();\n
        v3 = *(&v2) + v3;\n
    }\n
    return v3;\n
}\n
", "4199186:sub_401312": null, "4199200:cgc_read_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(unsigned int v6, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x15]\n
    char *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v7;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    for (v4 = 0; v4 < a1 - 1; *((v6 + v7)) = v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, &v3, 1))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (v3 == a0)\n
            break;\n
        v7 = v4;\n
        v4 = v7 + 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    v5 = 0;\n
    return v5;\n
}\n
", "4199438:sub_40140e": null, "4199440:cgc_strmatch": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strmatch(char *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v0 = v3;\n
        if (v0 != cgc_strlen(a0))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = 0;\n
        while (true)\n
        {\n
            if (v2 >= v3)\n
            {\n
                v4 = 1;\n
                return v4;\n
            }\n
            else if (v5[v2] == *((a0 + v2)))\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4199656:sub_4014e8": null, "4199664:cgc_strcopy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcopy(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v3[v2] = *((a0 + v2));\n
            v2 += 1;\n
        }\n
        return v0;\n
    }\n
    return v3;\n
}\n
", "4199800:sub_401578": null, "4199808:cgc_memcopy": "int cgc_memcopy(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 && a0)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= a1)\n
                break;\n
            v1[v0] = *((a0 + v0));\n
            v0 += 1;\n
        }\n
        return v0;\n
    }\n
    return v1;\n
}\n
", "4199907:sub_4015e3": null, "4199920:cgc_isdigits": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigits(char *v4)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        if (v4[v2] < 48)\n
            break;\n
        if (v4[v2] > 57)\n
            break;\n
        v2 += 1;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4200092:sub_40169c": null, "4200096:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 1;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_strlen(v5);\n
    if (!v3)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v3 += 1; v3 >= 0; v3 += 1)\n
    {\n
        v2 = v1 * (v5[v3] - 48) + v2;\n
        v1 *= 10;\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4200274:sub_401752": null, "4200288:cgc_print_uint": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_uint(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0xdc]\n
    struct_0 *v1;  // [bp-0xd8]\n
    struct_0 *v2;  // [bp-0xd4], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x6c]\n
    unsigned int v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v5)\n
        return cgc_print(v0 - 6424);\n
    while (true)\n
    {\n
        v7 = v2;\n
        v2 = v7 + 1;\n
        (&v4)[v7] = ((0 CONCAT v5) /m 10 >> 32) + 48;\n
        v5 = (0 CONCAT v5) /m 10;\n
    }\n
}\n
", "4200594:sub_401892": null, "4200608:cgc_PrintAdminMenu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintAdminMenu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_print(\"1) Send Broadcast Message\\n
\");\n
    cgc_print(v0 - 6395);\n
    cgc_print(v0 - 6374);\n
    v4 = v1;\n
    return cgc_print(v0 - 6190);\n
}\n
", "4200701:sub_4018fd": null, "4200704:cgc_AdminLogin": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AdminLogin()\n
{\n
    struct_0 *v0;  // [bp-0x70]\n
    char v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_zero(&v1, 100);\n
    cgc_print(&v0[122].padding_0[21]);\n
    if (cgc_read_until(&v1, 10, 100) == -1)\n
        cgc__terminate();\n
    if (!cgc_strmatch(&v0->padding_0[36], &v1))\n
    {\n
        cgc_print(&v0[121].padding_0[30]);\n
        v6 = v0;\n
        *((v6 + 48)) = 0;\n
        return v0;\n
    }\n
    v5 = v0;\n
    v5->field_30 = 1;\n
    v6 = cgc_print(&v5[122].padding_0[4]);\n
    return v6;\n
}\n
", "4200917:sub_4019d5": null, "4200928:cgc_SendBroadcastMessage": "extern unsigned int _GLOBAL_OFFSET_TABLE_[16];\n
\n
int cgc_SendBroadcastMessage()\n
{\n
    unsigned int v0[16];  // [bp-0x414]\n
    char v1;  // [bp-0x410]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8[16];  // ebx\n
    unsigned int v9[16];  // eax\n
\n
    v4 = v6;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_zero(&v1, 0x400);\n
    cgc_print(&v0[98 + 6] + 1);\n
    if (cgc_read_until(&v1, 10, 0x400) == -1)\n
        cgc__terminate();\n
    v7 = cgc_strlen(&v1);\n
    if (!v7)\n
        return v7;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v7 = v3;\n
        if (v7 >= v0[15])\n
            break;\n
        if (*((v0[13] + v3 * 13028)))\n
        {\n
            if (*((v0[13] + v3 * 13028 + 13024)) != 255)\n
            {\n
                v8 = v0;\n
                v2 = *((v8[13] + v3 * 13028 + 13024)) + 1;\n
                cgc_strcopy(v8[13] + v3 * 13028 + 16 + v2 * 50, &v1);\n
                v9 = v0;\n
                *((v9[13] + v3 * 13028 + v2 + 12766)) = 0;\n
                *((v9[13] + v3 * 13028 + 13024)) = v2;\n
            }\n
            else\n
            {\n
                cgc_print(&v0[98 + 3] + 3);\n
                cgc_print(v0[13] + v3 * 13028);\n
                cgc_print(&v0[97 + 12]);\n
            }\n
        }\n
        v3 += 1;\n
    }\n
    return v3;\n
}\n
", "4201447:sub_401be7": null, "4201456:cgc_SendMessage": "typedef struct struct_0 {\n
    char padding_0[13024];\n
    unsigned int field_32e0;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[16];\n
\n
int cgc_SendMessage()\n
{\n
    unsigned int v0[16];  // [bp-0x58]\n
    unsigned int v1;  // [bp-0x54]\n
    struct_0 *v2;  // [bp-0x50], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x4a]\n
    char v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9[16];  // ebx\n
    unsigned int v10[16];  // eax\n
\n
    v5 = v7;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_zero(&v4, 16);\n
    cgc_print(&v0[97 + 5] + 2);\n
    if (cgc_read_until(&v4, 10, 16) == -1)\n
        cgc__terminate();\n
    v8 = cgc_strlen(&v4);\n
    if (!v8)\n
        return v8;\n
    cgc_zero(&v3, 50);\n
    cgc_print(&v0[98 + 6] + 1);\n
    if (cgc_read_until(&v3, 10, 50) == -1)\n
        cgc__terminate();\n
    v8 = cgc_strlen(&v3);\n
    if (!v8)\n
        return v8;\n
    for (v2 = 0; v2 < v0[15]; v2 += 1)\n
    {\n
        if (cgc_strmatch(&v4, v0[13] + v2 * 13028))\n
            break;\n
    }\n
    v8 = v2;\n
    if (v8 == v0[15])\n
    {\n
        return v2;\n
    }\n
    else if (*((v0[13] + v2 * 13028 + 13024)) != 255)\n
    {\n
        v9 = v0;\n
        v1 = *((v9[13] + v2 * 13028 + 13024)) + 1;\n
        cgc_strcopy(v9[13] + v2 * 13028 + 16 + v1 * 50, &v3);\n
        v10 = v0;\n
        *((v10[13] + v2 * 13028 + v1 + 12766)) = 0;\n
        v8 = v10[13] + v2 * 13028;\n
        *((v8 + 13024)) = v1;\n
        return v8;\n
    }\n
    else\n
    {\n
        v8 = cgc_print(&v0[97 + 4] + 1);\n
        return v8;\n
    }\n
}\n
", "4202031:sub_401e2f": null, "4202032:cgc_ReadMessage": "extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
\n
int cgc_ReadMessage()\n
{\n
    unsigned int v0[15];  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7[15];  // edx\n
    unsigned int v8[15];  // ecx\n
    unsigned int v9[15];  // ebx\n
    unsigned int v10[15];  // ecx\n
\n
    v3 = v5;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_zero(&v2, 4);\n
    cgc_print(&v0[103 + 3]);\n
    if (cgc_read_until(&v2, 10, 4) == -1)\n
        cgc__terminate();\n
    v6 = cgc_strlen(&v2);\n
    if (!v6)\n
        return v6;\n
    v6 = cgc_isdigits(&v2);\n
    if (!v6)\n
        return v6;\n
    v7 = v0;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 > *((v7[13] + v7[14] * 13028 + 13024)))\n
    {\n
        v6 = cgc_print(&v0[103 + 1] + 3);\n
        return v6;\n
    }\n
    v8 = v0;\n
    if (!*((v8[13] + v8[14] * 13028 + 16 + v1 * 50)))\n
    {\n
        v6 = cgc_print(&v0[102 + 9] + 2);\n
        return v6;\n
    }\n
    cgc_print(&v0[102 + 3]);\n
    cgc_print(&v2);\n
    cgc_print(&v0[101 + 8] + 3);\n
    v9 = v0;\n
    cgc_print(v9[13] + v9[14] * 13028 + 16 + v1 * 50);\n
    cgc_print(&v0[101 + 9] + 1);\n
    cgc_print(&v0[102 + 3]);\n
    v10 = v0;\n
    v6 = v10[13] + v10[14] * 13028;\n
    v1[12766 + v6] = 1;\n
    return v10[13] + v10[14] * 13028;\n
}\n
", "4202513:sub_402011": null, "4202528:cgc_ListMessages": "extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
\n
int cgc_ListMessages()\n
{\n
    unsigned int v0[15];  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3[15];  // edx\n
    unsigned int v4[15];  // ecx\n
    unsigned int v5[15];  // ebx\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = 1;\n
    while (true)\n
    {\n
        v3 = v0;\n
        if (v1 > *((v3[13] + v3[14] * 13028 + 13024)))\n
            break;\n
        v4 = v0;\n
        if (*((v4[13] + v4[14] * 13028 + 16 + v1 * 50)))\n
        {\n
            cgc_print(&v0[102 + 3]);\n
            cgc_print_uint(v1);\n
            cgc_print(&v0[101 + 8] + 3);\n
            v5 = v0;\n
            cgc_print(v5[13] + v5[14] * 13028 + 16 + v1 * 50);\n
            cgc_print(&v0[101 + 9] + 1);\n
            cgc_print(&v0[102 + 3]);\n
        }\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4202792:sub_402128": null, "4202800:cgc_DeleteMessage": "extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
\n
int cgc_DeleteMessage()\n
{\n
    unsigned int v0[15];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7[15];  // edx\n
    unsigned int v8[15];  // ebx\n
\n
    v3 = v5;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_zero(&v2, 4);\n
    cgc_print(&v0[103 + 3]);\n
    if (cgc_read_until(&v2, 10, 4) == -1)\n
        cgc__terminate();\n
    v6 = cgc_strlen(&v2);\n
    if (!v6)\n
        return v6;\n
    v6 = cgc_isdigits(&v2);\n
    if (!v6)\n
        return v6;\n
    v7 = v0;\n
    v1 = cgc_atoi(&v2);\n
    if (v1 <= *((v7[13] + v7[14] * 13028 + 13024)))\n
    {\n
        v8 = v0;\n
        v6 = cgc_zero(v8[13] + v8[14] * 13028 + 16 + v1 * 50, 50);\n
        return v6;\n
    }\n
    v6 = cgc_print(&v0[103 + 1] + 3);\n
    return v6;\n
}\n
", "4203103:sub_40225f": null, "4203104:cgc_PrintNewMessages": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[51];\n
    unsigned int field_34;\n
    unsigned int field_38;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintNewMessages()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v5;  // ecx\n
    struct_0 *v6;  // ecx\n
    struct_0 *v7;  // ebx\n
    struct_0 *v8;  // ecx\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.field_0;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.field_0;\n
    v1 = 1;\n
    for (v2 = 1; v2 < 255; v2 = v4)\n
    {\n
        v5 = v0;\n
        if (*((v5->field_34 + v5->field_38 * 13028 + 16 + v2 * 50)))\n
        {\n
            v6 = v0;\n
            if (*((v6->field_34 + v6->field_38 * 13028 + v2 + 12766)) != 1)\n
            {\n
                if (v1)\n
                {\n
                    cgc_print(&v0[101].padding_1[30]);\n
                    v1 = 0;\n
                }\n
                cgc_print(&v0[102].padding_1[11]);\n
                cgc_print_uint(v2);\n
                cgc_print(&v0[101].padding_1[34]);\n
                v7 = v0;\n
                cgc_print(v7->field_34 + v7->field_38 * 13028 + 16 + v2 * 50);\n
                cgc_print(&v0[101].padding_1[36]);\n
                cgc_print(&v0[102].padding_1[11]);\n
                v8 = v0;\n
                *((v8->field_34 + v8->field_38 * 13028 + v2 + 12766)) = 1;\n
            }\n
        }\n
        v4 = v2 + 1;\n
    }\n
    return v4;\n
}\n
", "4203468:sub_4023cc": null, "4203472:cgc_CreateUser": "extern unsigned int _GLOBAL_OFFSET_TABLE_[16];\n
\n
int cgc_CreateUser()\n
{\n
    unsigned int v0[16];  // [bp-0x24]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8[16];  // ebx\n
    unsigned int v9[16];  // ebx\n
    unsigned int v10[16];  // eax\n
\n
    v4 = v6;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = -1;\n
    cgc_zero(&v3, 16);\n
    cgc_print(&v0[94 + 14] + 1);\n
    if (cgc_read_until(&v3, 10, 16) == -1)\n
        cgc__terminate();\n
    v7 = cgc_strlen(&v3);\n
    if (!v7)\n
        return v7;\n
    for (v2 = 0; v2 < v0[15]; v2 += 1)\n
    {\n
        if (!*((v0[13] + v2 * 13028)))\n
            v1 = v2;\n
        if (cgc_strmatch(&v3, v0[13] + v2 * 13028))\n
        {\n
            v7 = cgc_print(&v0[94 + 11] + 2);\n
            return v7;\n
        }\n
    }\n
    if (v1 != -1)\n
    {\n
        cgc_zero(v0[13] + v1 * 13028, 13028);\n
        v7 = cgc_strcopy(v0[13] + v1 * 13028, &v3);\n
    }\n
    else if (v0[15] >= 100)\n
    {\n
        v7 = cgc_print(&v0[94 + 5] + 3);\n
    }\n
    else\n
    {\n
        v8 = v0;\n
        cgc_zero(v8[13] + v8[15] * 13028, 13028);\n
        v9 = v0;\n
        cgc_strcopy(v9[13] + v9[15] * 13028, &v3);\n
        v10 = v0;\n
        v7 = &v10[15];\n
        *(v7) = v10[15] + 1;\n
    }\n
    return v7;\n
}\n
", "4204020:sub_4025f4": null, "4204032:cgc_Login": "extern unsigned int _GLOBAL_OFFSET_TABLE_[16];\n
\n
int cgc_Login()\n
{\n
    unsigned int v0[16];  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7[16];  // ebx\n
\n
    v3 = v5;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_zero(&v2, 16);\n
    cgc_print(&v0[94 + 14] + 1);\n
    if (cgc_read_until(&v2, 10, 16) == -1)\n
        cgc__terminate();\n
    v6 = cgc_strlen(&v2);\n
    if (!v6)\n
        return v6;\n
    for (v1 = 0; v1 < v0[15]; v1 += 1)\n
    {\n
        if (cgc_strmatch(&v2, v0[13] + v1 * 13028))\n
            break;\n
    }\n
    if (v1 != v0[15])\n
    {\n
        v7 = v0;\n
        v7[14] = v1;\n
        v6 = cgc_print(&v7[93 + 10] + 2);\n
        return v6;\n
    }\n
    v6 = cgc_print(&v0[93 + 14]);\n
    return v6;\n
}\n
", "4204343:sub_402737": null, "4204352:cgc_PrintLoggedOutMenu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintLoggedOutMenu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_print(\"1) Create User\\n
\");\n
    cgc_print(v0 - 5764);\n
    cgc_print(v0 - 6374);\n
    v4 = v1;\n
    return cgc_print(v0 - 6190);\n
}\n
", "4204445:sub_40279d": null, "4204448:cgc_PrintLoggedInMenu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintLoggedInMenu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_print(\"1) Send Message\\n
\");\n
    cgc_print(v0 - 5737);\n
    cgc_print(v0 - 5720);\n
    cgc_print(v0 - 5702);\n
    cgc_print(v0 - 5683);\n
    cgc_print(v0 - 5672);\n
    v4 = v1;\n
    return cgc_print(v0 - 6190);\n
}\n
", "4204592:cgc_BusyWork": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_402000;\n
\n
int cgc_BusyWork()\n
{\n
    unsigned int v0;  // [bp-0x1014]\n
    unsigned int v1;  // [bp-0x1010]\n
    unsigned int v2;  // [bp-0x100c]\n
    char v3;  // [bp-0x1008]\n
    unsigned int v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &g_402000;\n
    v1 = 20;\n
    while (true)\n
    {\n
        v5 = v1;\n
        v1 = v5 - 1;\n
        if (!v5)\n
            break;\n
        cgc_memcopy(&v3, v2, 0x1000);\n
        cgc_sort_n_sum(&v3);\n
    }\n
    return v5;\n
}\n
", "4204753:sub_4028d1": null, "4204768:main": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
extern void* cgc_ADMIN_ACCESS;\n
extern unsigned int cgc_CURRENT_USER;\n
extern void* cgc_NUM_USERS;\n
extern char *cgc_USERS;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x13e194]\n
    unsigned int v1;  // [bp-0x13e190]\n
    unsigned int v2;  // [bp-0x13e18c]\n
    unsigned int v3[15];  // [bp-0x13e188]\n
    void* v4;  // [bp-0x13e184], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x13e180]\n
    char v6;  // [bp-0x13e11c]\n
    void* v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v14;  // ebx\n
\n
    v9 = v12;\n
    v3[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v8 = 0;\n
    v4 = 0;\n
    cgc_USERS = &v6;\n
    cgc_ADMIN_ACCESS = 0;\n
    cgc_CURRENT_USER = -1;\n
    cgc_NUM_USERS = 0;\n
    cgc_zero(cgc_USERS, 1302800);\n
    while (true)\n
    {\n
        if (!((v4 ^ 255) & 1))\n
        {\n
            v14 = v9;\n
            return;\n
        }\n
        if (v3[12])\n
        {\n
            cgc_zero(&v5, 100);\n
            cgc_PrintAdminMenu();\n
            if (cgc_read_until(&v5, 10, 100) == -1)\n
                cgc__terminate();\n
            if (cgc_strlen(&v5) > 1)\n
            {\n
                cgc_print(&v3[94 + 5] + 3);\n
                continue;\n
            }\n
            else\n
            {\n
                v2 = v5;\n
                if (v2 == 49)\n
                {\n
                    cgc_SendBroadcastMessage();\n
                }\n
                else\n
                {\n
                    if (v2 == 50)\n
                    {\n
                        v3[12] = 0;\n
                    }\n
                    else\n
                    {\n
                        if (!(v2 == 51))\n
                            continue;\n
                        cgc_print(&v3[94] + 3);\n
                        v4 = 1;\n
                    }\n
                }\n
            }\n
        }\n
        else if (v3[14] != -1)\n
        {\n
            cgc_zero(&v5, 100);\n
            cgc_PrintNewMessages();\n
            cgc_PrintLoggedInMenu();\n
            if (cgc_read_until(&v5, 10, 100) == -1)\n
                cgc__terminate();\n
            if (cgc_strlen(&v5) > 1)\n
            {\n
                cgc_print(&v3[94 + 5] + 3);\n
                continue;\n
            }\n
            else\n
            {\n
                v0 = v5 - 49;\n
                if (v0 <= 48)\n
                    goto *(((stack_base)[1302920] + (stack_base)[1302932] * 4 - 5976)) + (stack_base)[1302920];\n
                else\n
                    cgc_print(&v3[94 + 5] + 3);\n
            }\n
            continue;\n
        }\n
        else\n
        {\n
            cgc_zero(&v5, 100);\n
            cgc_PrintLoggedOutMenu();\n
            if (cgc_read_until(&v5, 10, 100) == -1)\n
                cgc__terminate();\n
            if (cgc_strlen(&v5) > 1)\n
            {\n
                cgc_print(&v3[94 + 5] + 3);\n
                continue;\n
            }\n
            else\n
            {\n
                v1 = v5;\n
                if (v1 == 49)\n
                {\n
                    cgc_CreateUser();\n
                }\n
                else if (v1 == 50)\n
                {\n
                    cgc_Login();\n
                }\n
                else\n
                {\n
                    if (v1 == 51)\n
                    {\n
                        cgc_print(&v3[94] + 3);\n
                        cgc__terminate();\n
                    }\n
                    cgc_print(&v3[94 + 5] + 3);\n
                    continue;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4206003:sub_402db3": null, "4206016:cgc_sort_n_sum": "int cgc_sort_n_sum(char *v4, unsigned int a0)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v3 = 1;\n
    while (v3)\n
    {\n
        v3 = 0;\n
        v0 = *(v4);\n
        for (v1 = 1; v1 < a0; v1 += 1)\n
        {\n
            if (v4[1 + v1] > v4[v1])\n
            {\n
                v2 = v4[1 + v1];\n
                v4[1 + v1] = v4[v1];\n
                v4[v1] = v2;\n
                v3 = 1;\n
            }\n
            v0 ^= v4[v1];\n
        }\n
    }\n
    return v0;\n
}\n
", "4206212:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}