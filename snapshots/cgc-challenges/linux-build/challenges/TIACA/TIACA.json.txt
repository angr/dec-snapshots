{"4198400:_init": "extern struct_0 *g_405a30;\n
\n
int _init()\n
{\n
    if (g_405a30)\n
    {\n
        g_405a30();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198480:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198496:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198512:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198528:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198544:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198560:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4198576:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198592:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4198608:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198624:sub_4010e0": "int sub_4010e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198630:sub_4010e6": null, "4198640:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198683:sub_40111b": null, "4198684:sub_40111c": "int sub_40111c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198688:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198692:sub_401124": null, "4198704:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18695;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198755:sub_401163": "int sub_401163()\n
{\n
}\n
", "4198761:sub_401169": "int sub_401169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198768:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18631;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198839:sub_4011b7": "int sub_4011b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198848:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405a2c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405a2c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198923:sub_40120b": "int sub_40120b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198928:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198937:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198941:sub_40121d": null, "4198944:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \" Y\";\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4199148:sub_4012ec": null, "4199152:cgc_floor": null, "4199316:sub_401394": null, "4199328:cgc_round_away_from_zero": null, "4199482:sub_40143a": null, "4199488:cgc_round": null, "4199632:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \" Y\";\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4199724:sub_40152c": null, "4199728:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4199937:sub_401601": null, "4199952:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v3 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4200145:sub_4016d1": null, "4200160:cgc_float_to_str": null, "4201018:sub_401a3a": null, "4201024:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v13, struct struct_1 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_0 *v6;  // [bp-0x60], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x5c]\n
    struct_0 *v8;  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x54]\n
    char v10;  // [bp-0x50]\n
    void* v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0xc]\n
    struct struct_1 **v14;  // eax\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    struct struct_1 **v20;  // eax\n
    struct struct_1 **v21;  // eax\n
\n
    v2 = \" Y\";\n
    v11 = 0;\n
    if (!v13)\n
    {\n
        v12 = -1;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        if (!*(v13))\n
        {\n
            v12 = v11;\n
            return v12;\n
        }\n
        else if (*(v13) != 64)\n
        {\n
            cgc_putc(*(v13));\n
            v13 += 1;\n
            v11 += 1;\n
        }\n
        else\n
        {\n
            v13 += 1;\n
            v1 = *(v13);\n
            if (!v1)\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v14 = a0;\n
                a0 = v14 + 1;\n
                v9 = *(v14);\n
                cgc_int_to_str(v9, &v10);\n
                for (v8 = &v10; v8->field_0; v8 += 1)\n
                {\n
                    cgc_putc(v8->field_0);\n
                    v11 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v17 = ftop<4> - 1 + 1;\n
                v18 = v17 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v10;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v19 = v18 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v10; v4->field_0; v4 += 1)\n
                {\n
                    cgc_putc(v4->field_0);\n
                    v11 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v20 = a0;\n
                a0 = v20 + 1;\n
                for (v3 = &*(v20)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v11 += 1;\n
                }\n
            }\n
            else if (v1 == 120)\n
            {\n
                v21 = a0;\n
                a0 = v21 + 1;\n
                v7 = &*(v21)->field_0;\n
                cgc_int_to_hex(v7, &v10);\n
                for (v6 = &v10; *(v6); v6 += 1)\n
                {\n
                    cgc_putc(*(v6));\n
                    v11 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v12 = -1;\n
                return v12;\n
            }\n
            v13 += 1;\n
        }\n
    }\n
}\n
", "4201721:sub_401cf9": null, "4201728:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4201786:sub_401d3a": null, "4201792:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201846:sub_401d76": null, "4201856:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201910:sub_401db6": null, "4201920:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \" Y\";\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4201986:sub_401e02": null, "4202000:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \" Y\";\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4202066:sub_401e52": null, "4202080:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202134:sub_401e96": null, "4202144:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4202238:sub_401efe": null, "4202240:cgc_isnan": null, "4202263:sub_401f17": null, "4202272:cgc_isinf": null, "4202319:sub_401f4f": null, "4202320:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned long v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = \" Y\";\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_402182:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40215b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40215b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40215b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_402182;\n
                if (!v4)\n
                {\n
LABEL_4020d7:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40215b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_4020d7;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40215b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4202908:sub_40219c": null, "4202912:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \" Y\";\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4203316:sub_402334": null, "4203328:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4203419:sub_40239b": null, "4203424:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4203579:sub_40243b": null, "4203584:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4203692:sub_4024ac": null, "4203696:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4203774:sub_4024fe": null, "4203776:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4203884:sub_40256c": null, "4203888:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4204083:sub_402633": null, "4204096:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4204173:sub_40268d": null, "4204176:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \" Y\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == a0)\n
            return v4;\n
        v4[v5] = v2;\n
        v4 += 1;\n
    }\n
}\n
", "4204368:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \" Y\";\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4204527:sub_4027ef": null, "4204528:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4204727:sub_4028b7": null, "4204736:cgc_sleep": "int cgc_sleep(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
\n
    v1 = v3;\n
    v2 = 0;\n
    v0 = 0;\n
    return cgc_fdwait(0, 0, 0, &v1);\n
}\n
", "4204822:sub_402916": null, "4204832:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = \" Y\";\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 6644, 1);\n
}\n
", "4204955:sub_40299b": null, "4204960:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4205066:sub_402a0a": null, "4205072:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &\" Y\";\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_44)\n
        {\n
            cgc_deallocate(v4->field_44);\n
            v12 = v4;\n
            v12->field_44 = 0;\n
            v12->field_48 = 0;\n
            v12->field_4c = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_44)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_4c >= v11->field_44 + v11->field_48)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_44)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_48 = cgc_strlen(v10);\n
        v0 = &v13->field_44;\n
        if (cgc_allocate(v13->field_48, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_44, v10);\n
        v14 = v4;\n
        v14->field_4c = v14->field_44;\n
    }\n
    v10 = &v4->field_4c->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_44 + v15->field_48;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_44 + v16->field_48)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_40 = v8;\n
    *(v7) = 0;\n
    v17->field_4c = v7 + 1;\n
    v9 = v17->field_40;\n
    return v9;\n
}\n
", "4205819:sub_402cfb": null, "4205824:cgc_write": "int cgc_write(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    cgc_transmit(1, v3, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4205921:sub_402d61": null, "4205936:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = \" Y\";\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4206128:cgc_validatePtr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_validatePtr(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \" Y\";\n
    v1 = 0;\n
    if (v2 > 0xbaa8b000 && v2 < 0xbaaab000)\n
        v1 = 1;\n
    if (v2 > 0x8048000 && v2 < 0x804c000)\n
        v1 = 1;\n
    if (!v1)\n
    {\n
        cgc_puts(v0 - 6642);\n
        cgc__terminate();\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4206281:sub_402ec9": null, "4206288:cgc_validateRet": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_validateRet()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    char v2;  // [bp-0x4]\n
    unsigned int v4;  // eax\n
\n
    v0 = \" Y\";\n
    v1 = 0;\n
    v1 = *((*(&v2) + 4));\n
    if (v1 >= 0x8048000 && v1 <= 0x804c000)\n
        goto LABEL_402f33;\n
    cgc_puts(v0 - 6616);\n
    cgc__terminate();\n
LABEL_402f33:\n
    v1 = &v1[1] + 1;\n
    v4 = *(v1);\n
    if (v4 != 232)\n
    {\n
        cgc_puts(v0 - 6616);\n
        v4 = cgc__terminate();\n
        return v4;\n
    }\n
    return *(v1);\n
}\n
", "4206455:sub_402f77": null, "4206464:cgc_recvUntil": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvUntil(unsigned int v7, char *a0, unsigned int a1, char a2)\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v5;  // [bp-0xd]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v1 = \" Y\";\n
    v4 = 0;\n
    v2 = a0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        v3 = cgc_receive(v7, &v5, 1);\n
        if (v3 < 0)\n
        {\n
            cgc_validateRet();\n
            v6 = -1;\n
            return v6;\n
        }\n
        if (v5 == a2)\n
        {\n
            cgc_validateRet();\n
            v6 = v4;\n
            return v6;\n
        }\n
        v4 += 1;\n
        cgc_validatePtr(v2);\n
        *(v2) = v5;\n
        v2 += 1;\n
    }\n
}\n
", "4206677:sub_403055": null, "4206688:cgc_bookKeeping": "typedef struct struct_0 {\n
    char field_0;\n
    unsigned short field_1;\n
    unsigned short field_3;\n
    char field_5;\n
    char field_6;\n
    char padding_7[1];\n
    char field_8;\n
    char padding_9[1];\n
    char field_a;\n
    char field_b;\n
    char padding_c[2];\n
    unsigned int field_e;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bookKeeping(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    struct_0 *v10;  // eax\n
    struct_0 *v11;  // eax\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // eax\n
    struct_0 *v14;  // eax\n
\n
    v4 = v6;\n
    v2 = \" Y\";\n
    cgc_validatePtr(v5);\n
    if (*((&v5->field_1 + 1)) > 6000)\n
    {\n
        v0 = v2 - 6579;\n
        cgc_transmit_all(1, v0, 10);\n
        cgc__terminate(0, v0);\n
    }\n
    if (v5->padding_7 == 16)\n
        return cgc_validateRet();\n
    v7 = *((&v5->field_1 + 1));\n
    v1 = (v7 >> 31 CONCAT v7) /m 100 + v5->field_0;\n
    v8 = *(&v5->padding_c[1]);\n
    v3 = v1 + (v8 >> 31 CONCAT v8) /m 100;\n
    v10 = v5;\n
    *(&(&v10->field_0)[1]) = *(&(&v10->field_0)[1]) - v3;\n
    if (v5->padding_9 == 240)\n
    {\n
        v11 = v5;\n
        *(&(&v11->field_0)[1]) = *(&(&v11->field_0)[1]) - 5;\n
    }\n
    if (v5->field_a == 208)\n
    {\n
        v12 = v5;\n
        *(&(&v12->field_0)[1]) = *(&(&v12->field_0)[1]) - 2;\n
    }\n
    if (*(&v5->field_3 + 1) == 255 && *(&v5->field_3 + 1) == 1)\n
        goto LABEL_40319f;\n
    if (v5->field_5 > 20)\n
    {\n
        v13 = v5;\n
        v13->field_0 = v13->field_0 + 1;\n
        v14 = v5;\n
        *((&v14->field_1 + 1)) = *((&v14->field_1 + 1)) + 25;\n
    }\n
LABEL_40319f:\n
    return cgc_validateRet();\n
}\n
", "4207026:sub_4031b2": null, "4207040:cgc_raiseAlarm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_raiseAlarm()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \" Y\";\n
    cgc_memcpy(&v1, \"AAAAAAAAAAAAAAAA\", 16);\n
    v5 = v2;\n
    return cgc_validateRet();\n
}\n
", "4207105:sub_403201": null, "4207120:cgc_handleShift": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[2];\n
    unsigned short field_3;\n
    char padding_5[3];\n
    char field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handleShift(struct_0 *v3, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
    unsigned int v11;  // eax\n
\n
    v2 = v4;\n
    v1 = \" Y\";\n
    cgc_validatePtr(v3);\n
    if (a0 != 114)\n
    {\n
        if (v3->padding_5[2] > 16)\n
        {\n
            v5 = v3;\n
            v5->padding_5[2] = v5->padding_5[2] - 16;\n
            v6 = v3;\n
            (&v6->padding_1)[1] = (&v6->padding_1)[1] + 750;\n
        }\n
    }\n
    else\n
    {\n
        if (v3->padding_5[2] < 96 && (&v3->padding_1)[1] > 500)\n
        {\n
            if (v3->padding_5[2] <= 16)\n
            {\n
                v8 = v3;\n
                v8->padding_5[2] = v8->padding_5[2] + 16;\n
            }\n
            else\n
            {\n
                v0 = v3->field_0;\n
                v7 = v3->padding_5[2];\n
                if (v0 <= (v7 >> 31 CONCAT v7) /m 16 * 10)\n
                {\n
                    v11 = cgc_validateRet();\n
                    return v11;\n
                }\n
                v9 = v3;\n
                v9->padding_5[2] = v9->padding_5[2] + 16;\n
            }\n
            if ((&v3->padding_1)[1] < 750)\n
            {\n
                *(&(&v3->padding_1)[1]) = 0;\n
            }\n
            else\n
            {\n
                v10 = v3;\n
                (&v10->padding_1)[1] = (&v10->padding_1)[1] - 750;\n
            }\n
        }\n
    }\n
    v11 = cgc_validateRet();\n
    return v11;\n
}\n
", "4207435:sub_40334b": null, "4207440:cgc_updateBTMetadata": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_updateBTMetadata(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = \" Y\";\n
    cgc_validatePtr(v5);\n
    cgc_validatePtr(a0);\n
    v3 = a0 + 1;\n
    v2 = *(v3);\n
    v3 += 1;\n
    v0 = v2;\n
    cgc_memcpy(v5 + 18, v3);\n
    v7 = v4;\n
    return cgc_validateRet();\n
}\n
", "4207565:sub_4033cd": null, "4207568:cgc_handleTrunk": "typedef struct struct_0 {\n
    char padding_0[14];\n
    unsigned int field_e;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handleTrunk(struct_0 *v3, char a0[2])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v2 = v4;\n
    v0 = \" Y\";\n
    cgc_validatePtr(v3);\n
    cgc_validatePtr(a0);\n
    *(&v1) = a0;\n
    if (v1[0] == 144)\n
    {\n
        v5 = v3;\n
        *(&(&v5->padding_0)[1]) = a0[1] + *(&(&v5->padding_0)[1]);\n
        return cgc_validateRet();\n
    }\n
    if (*(&(&v3->padding_0)[1]) < a0[1])\n
    {\n
        *(&(&v3->padding_0)[1]) = 0;\n
    }\n
    else\n
    {\n
        v6 = v3;\n
        *(&(&v6->padding_0)[1]) = *(&(&v6->padding_0)[1]) - a0[1];\n
    }\n
    return cgc_validateRet();\n
}\n
", "4207736:sub_403478": null, "4207744:cgc_initCar": "typedef struct struct_0 {\n
    char padding_0[1];\n
    unsigned short field_1;\n
    char padding_3[4];\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    char field_a;\n
    char field_b;\n
    char field_c;\n
    char field_d;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initCar(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \" Y\";\n
    cgc_validatePtr(v2);\n
    v2->field_7 = 16;\n
    v2->padding_3[3] = 16;\n
    v2->field_b = 160;\n
    v2->field_a = 192;\n
    v2->field_9 = 224;\n
    v2->field_c = 249;\n
    v2->field_8 = 117;\n
    *(&(&v2->padding_0)[1]) = 65535;\n
    v4 = v1;\n
    return cgc_validateRet();\n
}\n
", "4207852:sub_4034ec": null, "4207856:main": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebx\n
\n
    cgc_serviceLoop(\" Y\", v1); /* do not return */\n
}\n
", "4207887:sub_40350f": "int sub_40350f()\n
{\n
    unsigned int v0;  // [bp+0x4]\n
    char v1;  // [bp+0x8]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // ebp\n
\n
    cgc_validateRet();\n
    v2 = v0;\n
    v3 = *(&v1);\n
    return;\n
}\n
", "4207903:sub_40351f": null, "4207904:cgc_serviceLoop": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[2];\n
    unsigned short field_3;\n
    char field_5;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    char field_a;\n
    char field_b;\n
    char field_c;\n
    char field_d;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_serviceLoop()\n
{\n
    struct_1 *v0;  // [bp-0x178]\n
    unsigned int v1;  // [bp-0x168]\n
    char v2;  // [bp-0x161]\n
    unsigned int v3;  // [bp-0x160]\n
    unsigned int v4;  // [bp-0x15c]\n
    unsigned short v5;  // [bp-0x156]\n
    unsigned int v6;  // [bp-0x154]\n
    char v7;  // [bp-0x14d]\n
    unsigned int v8;  // [bp-0x14c]\n
    struct_0 *v9;  // [bp-0x148], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x144]\n
    char v11;  // [bp-0x44]\n
    struct_1 *v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    struct_1 *v16;  // eax\n
    struct_1 *v17;  // eax\n
    struct_1 *v18;  // eax\n
    struct_1 *v19;  // eax\n
    struct_1 *v20;  // eax\n
    struct_1 *v21;  // eax\n
    struct_1 *v22;  // eax\n
\n
    v13 = v15;\n
    v4 = \" Y\";\n
    v12 = &v11;\n
    cgc_validatePtr(v12);\n
    cgc_memset(v12, 0, 50);\n
    cgc_validatePtr(v12);\n
    cgc_initCar(v12);\n
    while (true)\n
    {\n
        cgc_memset(&v10, 0, 0x100);\n
        v8 = cgc_recvUntil(0, &v10, 255, 10);\n
        if (v8 <= 0)\n
            cgc__terminate();\n
        v9 = &v10;\n
        cgc_bookKeeping(v12);\n
        cgc_validatePtr(v9);\n
        for (; v9 < &v11; v9 += 1)\n
        {\n
            v3 = *(v9);\n
            if (v3 != -128 && v3 != -112)\n
            {\n
                if (v3 != -96)\n
                {\n
                    if (v3 == -80)\n
                    {\n
                        cgc_validatePtr(v12);\n
                        if (v12->field_c == 248)\n
                            cgc_raiseAlarm();\n
                    }\n
                    else\n
                    {\n
                        if (v3 == -35)\n
                        {\n
                            cgc_validatePtr(v12);\n
                            v0 = v12;\n
                            cgc_transmit_all(1, v0, 50);\n
                            cgc__terminate(0, v0);\n
                        }\n
                        else if (v3 + 8 < 2)\n
                        {\n
                            cgc_validatePtr(v12);\n
                            v12->field_c = *(v9);\n
                            goto LABEL_403ee8;\n
                        }\n
                        else if (v3 != 16)\n
                        {\n
                            if (v3 == 32)\n
                            {\n
                                cgc_validatePtr(v12);\n
                                if (v12->field_6 != 16 && !(v12->field_6 == 48))\n
                                    goto LABEL_4037d9;\n
                                v12->field_6 = 32;\n
LABEL_4037d9:\n
                                goto LABEL_403ee8;\n
                            }\n
                            else if (v3 != 48)\n
                            {\n
                                cgc_validatePtr(v12);\n
                                while (true)\n
                                {\n
                                    v2 = 0;\n
                                    if (cgc_validatePtr(v12))\n
                                    {\n
                                        v2 = 0;\n
                                        if (v12->field_6 != 16)\n
                                            v2 = v9 < &v11;\n
                                    }\n
                                    if (!(v2 & 1))\n
                                        break;\n
                                    cgc_validatePtr(v9);\n
                                    v1 = *(v9);\n
                                    if (v1 != -127 && v1 != -111)\n
                                    {\n
                                        if (v1 == -64)\n
                                        {\n
                                            cgc_validatePtr(v12);\n
                                            if (v12->field_a != 192)\n
                                                v12->field_a = 192;\n
                                            goto LABEL_403ecf;\n
                                        }\n
                                        if (v1 == -48)\n
                                        {\n
                                            cgc_validatePtr(v12);\n
                                            if (v12->field_a != 208)\n
                                                v12->field_a = 208;\n
                                            goto LABEL_403ecf;\n
                                        }\n
                                        if (v1 == -32)\n
                                        {\n
                                            cgc_validatePtr(v12);\n
                                            if (v12->field_9 != 224)\n
                                                v12->field_9 = 224;\n
                                            goto LABEL_403ecf;\n
                                        }\n
                                        if (v1 == -0x10)\n
                                        {\n
                                            cgc_validatePtr(v12);\n
                                            if (v12->field_9 != 240)\n
                                                v12->field_9 = 240;\n
                                            goto LABEL_403ecf;\n
                                        }\n
                                        if (v1 == -1)\n
                                        {\n
                                            v12->field_5 = 0;\n
                                        }\n
                                        else if (v1 - 1 >= 3)\n
                                        {\n
                                            if (v1 == 4)\n
                                            {\n
                                                cgc_validatePtr(v12);\n
                                                cgc_validatePtr(v9);\n
                                                if (v12->field_7 > 48)\n
                                                {\n
                                                    *(&v12->field_3 + 1) = 4;\n
                                                    cgc_updateBTMetadata(v12, v9);\n
                                                }\n
                                                v9 += 1;\n
                                                v7 = v9->field_0;\n
                                                v9 = &(&v9->field_0)[v7];\n
                                                goto LABEL_403ecf;\n
                                            }\n
                                            else if (v1 != 5)\n
                                            {\n
                                                if (v1 == 16)\n
                                                {\n
                                                    cgc_validatePtr(v12);\n
                                                    if (v12->field_7 == 16)\n
                                                        v12->field_6 = 16;\n
                                                    goto LABEL_403ecf;\n
                                                }\n
                                                else if (v1 == 112)\n
                                                {\n
                                                    cgc_validatePtr(v12);\n
                                                    if (v12->field_8 != 117)\n
                                                    {\n
                                                        v22 = v12;\n
                                                        (&v22->padding_1)[1] = (&v22->padding_1)[1] + 50;\n
                                                    }\n
                                                    else\n
                                                    {\n
                                                        v20 = v12;\n
                                                        v20->field_0 = v20->field_0 + 1;\n
                                                        v21 = v12;\n
                                                        (&v21->padding_1)[1] = (&v21->padding_1)[1] + 25;\n
                                                    }\n
                                                    goto LABEL_403ecf;\n
                                                }\n
                                                else if (v1 == 113)\n
                                                {\n
                                                    cgc_validatePtr(v12);\n
                                                    v18 = v12;\n
                                                    v18->field_0 = v18->field_0 - 1;\n
                                                    v19 = v12;\n
                                                    (&v19->padding_1)[1] = (&v19->padding_1)[1] - 25;\n
                                                    goto LABEL_403ecf;\n
                                                }\n
                                                else if (v1 == 114)\n
                                                {\n
                                                    cgc_validatePtr(v12);\n
                                                    if (v12->field_8 == 116)\n
                                                        cgc_handleShift(v12, 114);\n
                                                    goto LABEL_403ecf;\n
                                                }\n
                                                else if (v1 == 115)\n
                                                {\n
                                                    cgc_validatePtr(v12);\n
                                                    if (v12->field_8 == 116)\n
                                                        cgc_handleShift(v12, 115);\n
                                                    goto LABEL_403ecf;\n
                                                }\n
                                                else if (v1 - 116 < 2)\n
                                                {\n
                                                    cgc_validatePtr(v9);\n
                                                    cgc_validatePtr(v12);\n
                                                    v12->field_8 = *(v9);\n
                                                    goto LABEL_403ecf;\n
                                                }\n
                                            }\n
                                        }\n
                                        cgc_validatePtr(v12);\n
                                        cgc_validatePtr(v9);\n
                                        if (v12->field_7 > 64)\n
                                            *(&v12->field_3 + 1) = *(v9);\n
                                        goto LABEL_403ecf;\n
                                    }\n
                                    cgc_validatePtr(v12);\n
                                    if (*(&v12->field_3 + 1) != 255)\n
                                    {\n
                                        v6 = 1;\n
                                        cgc_validatePtr(v9);\n
                                        if (*(v9) == 145)\n
                                            v6 = -1;\n
                                        v5 = v9->field_1;\n
                                        v9 += 1;\n
                                        if (v6 != -1)\n
                                        {\n
                                            v16 = v12;\n
                                            v16->field_5 = v16->field_5 + v5;\n
                                        }\n
                                        else if (v12->field_5 < v5)\n
                                        {\n
                                            v12->field_5 = 0;\n
                                        }\n
                                        else\n
                                        {\n
                                            v17 = v12;\n
                                            v17->field_5 = v17->field_5 - v5;\n
                                        }\n
                                    }\n
                                    v9 += 1;\n
LABEL_403ecf:\n
                                    v9 += 1;\n
                                }\n
                            }\n
                            else\n
                            {\n
                                cgc_validatePtr(v12);\n
                                if (v12->field_6 != 16)\n
                                {\n
                                    if (!(v12->field_6 == 32))\n
                                        goto LABEL_403826;\n
                                    if (!(v12->field_7 == 16))\n
                                        goto LABEL_403826;\n
                                }\n
                                v12->field_6 = 48;\n
LABEL_403826:\n
                                goto LABEL_403ee8;\n
                            }\n
                            goto LABEL_403ee8;\n
                        }\n
                        cgc_validatePtr(v12);\n
                        if (v12->field_7 == 16)\n
                            v12->field_6 = 16;\n
                        else\n
                            *(&(&v12->padding_1)[1]) = 9999;\n
                        goto LABEL_403ee8;\n
                    }\n
                }\n
                cgc_validatePtr(v12);\n
                if (v12->field_7 == 16)\n
                    v12->field_b = *(v9);\n
                goto LABEL_403ee8;\n
            }\n
            cgc_validatePtr(v12);\n
            if (v12->field_7 == 16 && v12->field_b == 176)\n
                cgc_handleTrunk(v12, v9);\n
            v9 += 1;\n
LABEL_403ee8:\n
        }\n
    }\n
}\n
", "4210438:sub_403f06": null, "4210448:cgc_memcpy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = \" Y\";\n
    v2 = v4;\n
    v1 = a0;\n
    cgc_validatePtr(v4);\n
    cgc_validatePtr(a0);\n
    cgc_validatePtr(&v4[a1]);\n
    cgc_validatePtr(&a0[a1]);\n
    for (; a1; a1 -= 1)\n
    {\n
        cgc_validatePtr(v2);\n
        cgc_validatePtr(v1);\n
        *(v2) = *(v1);\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
    *(v2) = *(v1);\n
    cgc_validateRet();\n
    v6 = v3;\n
    return v4;\n
}\n
", "4210660:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_deallocate": null, "5242912:cgc_log10": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}