{"4198400:_init": "extern struct_0 *g_405ae0;\n
\n
int _init()\n
{\n
    if (g_405ae0)\n
    {\n
        g_405ae0();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198480:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4198560:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198576:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4198592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198608:sub_4010d0": "int sub_4010d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198614:sub_4010d6": null, "4198624:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198667:sub_40110b": null, "4198668:sub_40110c": "int sub_40110c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198672:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198676:sub_401114": null, "4198688:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18887;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198739:sub_401153": "int sub_401153()\n
{\n
}\n
", "4198745:sub_401159": "int sub_401159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198752:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18823;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198823:sub_4011a7": "int sub_4011a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198832:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405adc;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405adc)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198907:sub_4011fb": "int sub_4011fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198912:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198921:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198925:sub_40120d": null, "4198928:cgc_floor": null, "4199092:sub_4012b4": null, "4199104:cgc_round_away_from_zero": null, "4199258:sub_40135a": null, "4199264:cgc_round": null, "4199408:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4199500:sub_40144c": null, "4199504:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4199713:sub_401521": null, "4199728:cgc_float_to_str": null, "4200586:sub_40188a": null, "4200592:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v10, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    struct_0 *v3;  // [bp-0x68], Other Possible Types: unsigned int\n
    unsigned long v4;  // [bp-0x64]\n
    struct_0 *v5;  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x54]\n
    char v7;  // [bp-0x50]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int *v11;  // eax\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    if (!v10)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        if (!*(v10))\n
        {\n
            v9 = v8;\n
            return v9;\n
        }\n
        if (*(v10) != 64)\n
        {\n
            cgc_putc(*(v10));\n
            v10 += 1;\n
            v8 += 1;\n
        }\n
        else\n
        {\n
            v10 += 1;\n
            v1 = *(v10);\n
            if (!v1)\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v11 = a0;\n
                a0 = v11 + 1;\n
                v6 = *(v11);\n
                cgc_int_to_str(v6, &v7);\n
                for (v5 = &v7; v5->field_0; v5 += 1)\n
                {\n
                    cgc_putc(v5->field_0);\n
                    v8 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v4 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v14 = ftop<4> - 1 + 1;\n
                v15 = v14 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v7;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v16 = v15 + 1;\n
                cgc_float_to_str();\n
                for (v3 = &v7; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v8 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            v10 += 1;\n
        }\n
    }\n
}\n
", "4201076:sub_401a74": null, "4201088:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4201146:sub_401aba": null, "4201152:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4201246:sub_401b1e": null, "4201248:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4201302:sub_401b56": null, "4201312:cgc_isnan": null, "4201335:sub_401b77": null, "4201344:cgc_isinf": null, "4201391:sub_401baf": null, "4201392:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_401de2:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if (![D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_401dbb;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_401dbb;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_401dbb;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_401de2;\n
                if (!v4)\n
                {\n
LABEL_401d37:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_401dbb;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_401d37;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_401dbb:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4201980:sub_401dfc": null, "4201984:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4202388:sub_401f94": null, "4202400:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4202491:sub_401ffb": null, "4202496:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4202604:sub_40206c": null, "4202608:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4202716:sub_4020dc": null, "4202720:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4202915:sub_4021a3": null, "4202928:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        *((v5 + v4)) = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            *((v5 + v4)) = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4203200:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4203359:sub_40235f": null, "4203360:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4203559:sub_402427": null, "4203568:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    v0 = &v3;\n
    v7 = cgc_transmit(1, v2, cgc_strlen(v5));\n
    if (v7)\n
    {\n
        v7 = cgc__terminate();\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4203675:sub_40249b": null, "4203680:cgc_list_users": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_users(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v2)\n
        return v2;\n
    v3 = *(&v2->padding_0[0]);\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (!v1)\n
            break;\n
        cgc_puts(v1);\n
        v3 = v1->field_14;\n
    }\n
    return v3;\n
}\n
", "4203784:sub_402508": null, "4203792:cgc_init_users": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_users()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    if (!cgc_allocate(8, 0, v1, &_GLOBAL_OFFSET_TABLE_, 0, v4))\n
    {\n
        v1[0] = 0;\n
        v1[1] = 0;\n
        return v1;\n
    }\n
    cgc_puts(v0 - 6820);\n
    return v1;\n
}\n
", "4203909:sub_402585": null, "4203920:cgc_create_user": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[15];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_user(struct_1 *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_2 *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v5;  // eax\n
    struct_1 *v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v4)\n
    {\n
        return v3;\n
    }\n
    else if (!a0)\n
    {\n
        return v3;\n
    }\n
    else if (cgc_strlen(a0) > 15)\n
    {\n
        cgc_puts(v0 - 6783);\n
        return v3;\n
    }\n
    else\n
    {\n
        for (v2 = v4->field_0; v2; v2 = *((v2 + 20)))\n
        {\n
            if (!cgc_strcmp(v2, a0))\n
            {\n
                cgc_puts(v0 - 6754);\n
                return v3;\n
            }\n
        }\n
        if (cgc_allocate(24, 0))\n
        {\n
            cgc_puts(v0 - 6731);\n
            return v3;\n
        }\n
        v1->field_14 = 0;\n
        v1->field_0 = 0;\n
        v1->field_10 = cgc_init_manager();\n
        cgc_strncat(v1, a0, 16);\n
        if (!v4->field_0)\n
        {\n
            v4->field_0 = &v1->field_0;\n
            v5 = v4;\n
            v5->field_4 = v5->field_4 + 1;\n
            v3 = v4->field_4;\n
            return v3;\n
        }\n
        v1->field_14 = v4->field_0;\n
        v4->field_0 = &v1->field_0;\n
        v6 = v4;\n
        v6->field_4 = v6->field_4 + 1;\n
        v3 = v4->field_4;\n
        return v3;\n
    }\n
}\n
", "4204347:sub_40273b": null, "4204352:cgc_init_manager": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_manager()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    if (!cgc_allocate(8, 0, v1, &_GLOBAL_OFFSET_TABLE_, 0, v4))\n
    {\n
        v1[0] = 0;\n
        v1[1] = 0;\n
        return v1;\n
    }\n
    cgc_puts(v0 - 6820);\n
    return v1;\n
}\n
", "4204469:sub_4027b5": null, "4204480:cgc_add_message": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_add_message(struct_1 *v2, struct_2 *a0)\n
{\n
    struct struct_0 **v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // eax\n
    struct_1 *v4;  // eax\n
\n
    v1 = 0;\n
    v0 = 0;\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (!v2)\n
    {\n
        return v1;\n
    }\n
    else if (!v2->field_0)\n
    {\n
        v2->field_0 = &a0->padding_0[0];\n
        v3 = v2;\n
        v3->field_4 = v3->field_4 + 1;\n
        a0->field_4 = v2->field_4;\n
        v1 = a0->field_4;\n
        return v1;\n
    }\n
    else\n
    {\n
        for (v0 = &v2->field_0->field_0; *(v0); v0 = *(v0));\n
        *(v0) = a0;\n
        v4 = v2;\n
        v4->field_4 = v4->field_4 + 1;\n
        a0->field_4 = v2->field_4;\n
        v1 = a0->field_4;\n
        return v1;\n
    }\n
}\n
", "4204676:sub_402884": null, "4204688:cgc_create_message": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_message(char *v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4[3];  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = 0;\n
    v3 = 0;\n
    if (!v5)\n
    {\n
        return v4;\n
    }\n
    else if (cgc_strlen(v5) <= 31)\n
    {\n
        v0 = &v4[0];\n
        if (cgc_allocate(44, 0))\n
        {\n
            cgc_puts(v2 - 6666);\n
            return v4;\n
        }\n
        v4[0] = 0;\n
        v4[1] = 0;\n
        v4[2] = 0;\n
        cgc_bzero(v4 + 1, 32);\n
        v3 = 0;\n
        while (true)\n
        {\n
            v1 = v3;\n
            if (v1 >= cgc_strlen(v5))\n
                break;\n
            *(12 + &v4[0] + v3) = v5[v3];\n
            v3 += 1;\n
        }\n
        return v4;\n
    }\n
    else\n
    {\n
        cgc_puts(v2 - 6694);\n
        return v4;\n
    }\n
}\n
", "4204991:sub_4029bf": null, "4204992:cgc_delete_message": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_message(struct_1 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0xc]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (a0 <= v4->field_4)\n
    {\n
        v5 = v4->field_0;\n
        while (true)\n
        {\n
            v3 = v5;\n
            if (!v3)\n
            {\n
                if (v3)\n
                    return v5;\n
                v5 = cgc_puts(v1 - 6592);\n
            }\n
            if (v3->field_4 == a0)\n
                break;\n
            v2 = v3;\n
            v5 = v3->field_0;\n
        }\n
        if (!v2)\n
            v4->field_0 = v3->field_0;\n
        else\n
            *(v2) = v3->field_0;\n
        v0 = 44;\n
        v5 = cgc_deallocate(v3);\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = cgc_puts(v1 - 6621);\n
        return v5;\n
    }\n
}\n
", "4205238:sub_402ab6": null, "4205248:cgc_read_message": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_message(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    char v1;  // [bp-0x110]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (a0 <= v4->field_4)\n
    {\n
        cgc_bzero(&v1, 0x100);\n
        cgc_strncat(&v1, v0 - 6561, 0x100);\n
        v5 = v4->field_0;\n
        while (true)\n
        {\n
            v2 = v5;\n
            if (!v2)\n
                break;\n
            if (v2->field_4 == a0)\n
            {\n
                v3 = cgc_strlen(&v1);\n
                cgc_itoa(&(&v1)[v3], a0, 0x100 - v3);\n
                cgc_strncat(&v1, v0 - 6566, 0x100);\n
                cgc_strncat(&v1, v2 + 1, 0x100);\n
                cgc_strncat(&v1, v0 - 6562, 0x100);\n
                cgc_puts(&v1);\n
                v5 = v2;\n
                *((v5 + 8)) = 1;\n
                return v2;\n
            }\n
            v5 = v2->field_0;\n
        }\n
        if (v2)\n
            return v5;\n
        v5 = cgc_puts(v0 - 6592);\n
    }\n
    else\n
    {\n
        v5 = cgc_puts(v0 - 6621);\n
        return v5;\n
    }\n
}\n
", "4205721:sub_402c99": null, "4205728:cgc_list_unread_messages": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
    char padding_-c[4294967296];\n
    unsigned int field_fffffff4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_402d8e;\n
\n
int cgc_list_unread_messages(struct_0 *v9)\n
{\n
    char v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_1 *v3;  // [bp-0x1c]\n
    struct_0 *v4;  // [bp-0x18]\n
    struct_1 *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v6;  // [bp-0x10]\n
    struct_0 *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v8;  // [bp+0x0]\n
    unsigned int v10;  // [bp+0x8]\n
    unsigned int v11;  // [bp+0xc]\n
    unsigned int v12;  // eax\n
    struct_1 *v13;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    if (!v9)\n
        return v9;\n
    v12 = v9->field_0;\n
    while (true)\n
    {\n
        v7 = v12;\n
        if (!v7)\n
            break;\n
        if (!v7->field_8)\n
            v5 = &v5->field_-14 + 1;\n
        v12 = v7->field_0;\n
    }\n
    if (!v5)\n
        return v12;\n
    cgc_puts(v2 - 6524);\n
    v6 = v5 * 32;\n
    v6 = &(&v6->field_-14)[18 * v5];\n
    v6 = &(&v6->field_-14)[2 * v5];\n
    v13 = v6;\n
    v4 = &v0;\n
    v1 = &(&v0)[-1 * (&v13->padding_-c[7] & -0x10)];\n
    v3 = v13;\n
    *(&v1->padding_-c[8]) = v1;\n
    *(&v1->padding_-c[4]) = v6;\n
    *(&v1->padding_-c[12]) = &g_402d8e;\n
    cgc_bzero(v9, v10);\n
    for (v7 = v9->field_0; v7; v7 = *(v7))\n
    {\n
        if (!v7->field_8)\n
        {\n
            v7->field_8 = 1;\n
            v6 = v1;\n
            v7 = v2 - 6561;\n
            cgc_strcat(v9, v10);\n
            v8 = v1;\n
            v8 = v1 + cgc_strlen(v1);\n
            v9 = *((v7 + 4));\n
            v10 = 4;\n
            cgc_itoa(v9, v10, v11);\n
            v8 = v1;\n
            v9 = v2 - 6566;\n
            cgc_strcat(v9, v10);\n
            v8 = v1;\n
            v9 = v7 + 12;\n
            cgc_strcat(v9, v10);\n
            v8 = v1;\n
            v9 = v2 - 6526;\n
            cgc_strcat(v9, v10);\n
            v8 = v1;\n
            v9 = v2 - 6561;\n
            cgc_strcat(v9, v10);\n
        }\n
    }\n
    v6 = v1;\n
    cgc_puts(v8);\n
    return v4;\n
}\n
", "4206264:sub_402eb8": null, "4206272:cgc_list_messages": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_messages(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v2)\n
        return v2;\n
    v3 = v2->field_0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (!v1)\n
            break;\n
        cgc_read_message(v2, v1->field_4);\n
        v3 = v1->field_0;\n
    }\n
    return v3;\n
}\n
", "4206385:sub_402f31": null, "4206400:cgc_get_user": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_user(struct struct_0 **v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (v2 && a0)\n
    {\n
        v1 = *(v2);\n
        while (true)\n
        {\n
            if (!v1)\n
                return v1;\n
            if (!cgc_strcmp(v1, a0))\n
                return v1;\n
            v1 = *((v1 + 20));\n
        }\n
    }\n
    return v1;\n
}\n
", "4206541:sub_402fcd": null, "4206544:cgc_send_user_message": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_user_message(struct struct_0 **v4, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: struct_1 *\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!(v4 && a0 && a1))\n
        return v3;\n
    v2 = cgc_get_user(v4, a0);\n
    if (!v2)\n
    {\n
        cgc_puts(v0 - 6506);\n
        return v3;\n
    }\n
    v1 = cgc_create_message(a1);\n
    if (!v1)\n
    {\n
        cgc_puts(v0 - 6482);\n
        return v3;\n
    }\n
    v3 = cgc_add_message(v2->field_10, v1);\n
    if (!v3)\n
    {\n
        cgc_puts(v0 - 6452);\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4206808:sub_4030d8": null, "4206816:cgc_handle_loggedin": "typedef struct struct_0 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_loggedin(struct struct_0 **v4, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    char v1;  // [bp-0x3c]\n
    char v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!(v4 && a0))\n
        return v4;\n
    while (true)\n
    {\n
        cgc_list_unread_messages(a0->field_10);\n
        cgc_puts(v0 - 6425);\n
        cgc_puts(v0 - 6408);\n
        cgc_puts(v0 - 6391);\n
        cgc_puts(v0 - 6373);\n
        cgc_puts(v0 - 6354);\n
        cgc_puts(v0 - 6343);\n
        cgc_puts(v0 - 6264);\n
        v3 = 0;\n
        if (!cgc_receive_until(&v3, 10, 2))\n
        {\n
            cgc_puts(v0 - 6334);\n
            cgc__terminate();\n
        }\n
        v3 -= 48;\n
        if (v3 > 6)\n
        {\n
LABEL_403216:\n
            cgc_puts(v0 - 6314);\n
        }\n
        else\n
        {\n
            if (v3 < 1)\n
                goto LABEL_403216;\n
            if (v3 == 6)\n
            {\n
                cgc_puts(v0 - 6294);\n
                cgc__terminate();\n
            }\n
            if (v3 == 5)\n
                break;\n
            if (v3 == 4)\n
            {\n
                cgc_puts(v0 - 6266);\n
                cgc_bzero(&v2, 32);\n
                cgc_receive_until(&v2, 10, 4);\n
                v3 = cgc_atoi(&v2);\n
                cgc_delete_message(a0->field_10, v3);\n
            }\n
            else if (v3 == 3)\n
            {\n
                cgc_list_messages(a0->field_10);\n
            }\n
            else if (v3 == 2)\n
            {\n
                cgc_puts(v0 - 6266);\n
                cgc_bzero(&v2, 32);\n
                cgc_receive_until(&v2, 10, 4);\n
                v3 = cgc_atoi(&v2);\n
                cgc_read_message(a0->field_10, v3);\n
            }\n
            else if (v3 == 1)\n
            {\n
                cgc_bzero(&v2, 32);\n
                cgc_bzero(&v1, 16);\n
                cgc_puts(v0 - 6261);\n
                cgc_receive_until(&v1, 10, 15);\n
                cgc_puts(v0 - 6256);\n
                cgc_receive_until(&v2, 10, 31);\n
                cgc_send_user_message(v4, &v1, &v2);\n
            }\n
        }\n
    }\n
    return cgc_puts(v0 - 6282);\n
}\n
", "4207718:sub_403466": null, "4207728:cgc_handle_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_menu()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    struct struct_0 **v5;  // [bp-0xc], Other Possible Types: void*\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v5 = cgc_init_users();\n
    if (!v5)\n
    {\n
        v9 = v6;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        v3 = 0;\n
        cgc_puts(v0 - 6246);\n
        cgc_puts(v0 - 6230);\n
        cgc_puts(v0 - 6220);\n
        cgc_puts(v0 - 6264);\n
        if (!cgc_receive_until(&v3, 10, 2))\n
        {\n
            cgc_puts(v0 - 6211);\n
            cgc__terminate();\n
        }\n
        v3 -= 48;\n
        if (v3 > 3)\n
        {\n
LABEL_40356f:\n
            cgc_puts(v0 - 6314);\n
        }\n
        else\n
        {\n
            if (v3 < 1)\n
                goto LABEL_40356f;\n
            cgc_bzero(&v1, 16);\n
            if (v3 == 3)\n
            {\n
                cgc_puts(v0 - 6294);\n
                cgc__terminate();\n
            }\n
            if (v3 == 1)\n
            {\n
                cgc_puts(v0 - 6191);\n
                cgc_receive_until(&v1, 10, 15);\n
                cgc_create_user(v5, &v1);\n
            }\n
            else if (v3 == 2)\n
            {\n
                cgc_puts(v0 - 6191);\n
                cgc_receive_until(&v1, 10, 15);\n
                v4 = cgc_get_user(v5, &v1);\n
                if (!v4)\n
                {\n
                    cgc_puts(v0 - 6165);\n
                }\n
                else\n
                {\n
                    cgc_puts(v0 - 6180);\n
                    cgc_handle_loggedin(v5, v4);\n
                    v4 = 0;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4208338:sub_4036d2": null, "4208352:main": "int main(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    cgc_handle_menu();\n
    return 0;\n
}\n
", "4208396:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_deallocate": null, "5242908:cgc_log10": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}