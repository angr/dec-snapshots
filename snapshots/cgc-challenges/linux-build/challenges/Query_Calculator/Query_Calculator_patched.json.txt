{"4206592:_init": "extern struct_0 *g_412660;\n
\n
int _init()\n
{\n
    if (g_412660)\n
    {\n
        g_412660();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4206704:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206720:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206736:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206752:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206768:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206784:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206800:sub_4030d0": "int sub_4030d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4206806:sub_4030d6": null, "4206816:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206859:sub_40310b": null, "4206860:sub_40310c": "int sub_40310c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206864:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206868:sub_403114": null, "4206880:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 62791;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4206931:sub_403153": "int sub_403153()\n
{\n
}\n
", "4206937:sub_403159": "int sub_403159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4206944:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 62727;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207015:sub_4031a7": "int sub_4031a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207024:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_41265c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_41265c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4030d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207099:sub_4031fb": "int sub_4031fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207104:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207113:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207117:sub_40320d": null, "4207120:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207174:sub_403246": null, "4207184:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207238:sub_403286": null, "4207248:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207302:sub_4032c6": null, "4207312:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207408:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207504:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207558:sub_4033c6": null, "4207568:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4207642:sub_40341a": null, "4207648:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4207722:sub_40346a": null, "4207728:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207822:sub_4034ce": null, "4207824:cgc_SetFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetFsError(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = FS_ERROR;\n
    if (!FS_ERROR)\n
    {\n
        v0 = 63;\n
        v3 = cgc_strncpy(v1 + 584, v2);\n
    }\n
    return v3;\n
}\n
", "4207903:sub_40351f": null, "4207904:cgc_ClearFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClearFsError()\n
{\n
    FS_ERROR = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4207928:sub_403538": null, "4207936:cgc_FsError": "extern char FS_ERROR;\n
\n
int cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4207959:sub_403557": null, "4207968:cgc_DestroyFilesystem": "typedef struct struct_1 {\n
    char padding_0[60];\n
    struct struct_2 *field_3c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DestroyFilesystem()\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct struct_0 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[217].padding_0[36]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < v0->field_3c->field_4; v1 = v1 + 1)\n
    {\n
        if (*((v0->field_3c->field_8 + (v1 << 2))))\n
        {\n
            if (*(*((v0->field_3c->field_8 + (v1 << 2)))))\n
            {\n
                cgc_free();\n
                *(*((v0->field_3c->field_8 + v1 * 4))) = 0;\n
            }\n
            if (*((*((v0->field_3c->field_8 + (v1 << 2))) + 4)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_3c->field_8 + v1 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((v0->field_3c->field_8 + (v1 << 2))) + 16)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_3c->field_8 + v1 * 4)) + 16)) = 0;\n
            }\n
            cgc_free();\n
            *((v0->field_3c->field_8 + v1 * 4)) = 0;\n
        }\n
    }\n
    cgc_free();\n
    v0->field_3c = 0;\n
    cgc_ClearFsError();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4208441:sub_403739": null, "4208448:cgc_InitFilesystem": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int FS_ERROR;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitFilesystem(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = 64;\n
    cgc_bzero(&FS_ERROR);\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[217].padding_0[10]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_3c)\n
        cgc_DestroyFilesystem();\n
    v6 = cgc_calloc();\n
    v1->field_3c = v6;\n
    if (!v6)\n
    {\n
        cgc_SetFsError(&v1[216].padding_0[51]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v7 = cgc_calloc();\n
    v1->field_3c->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_SetFsError(&v1[216].padding_0[51]);\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1->field_3c->field_4 = v4;\n
    if (!cgc_Login())\n
    {\n
        cgc_SetFsError(&v1[216].padding_0[37]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_InitPasswd())\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(&v1[216].padding_0[24]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        cgc_bzero(&v1[10].padding_0[8]);\n
        cgc_ClearFsError();\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4208936:sub_403928": null, "4208944:cgc_Login": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Login(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[195].padding_0[60]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strlen();\n
    v2 = cgc_calloc();\n
    if (!v2)\n
    {\n
        cgc_SetFsError(&v1[204].padding_0[3]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v4;\n
    cgc_strcpy(v2);\n
    if (v1->field_40)\n
    {\n
        cgc_free();\n
        v1->field_40 = 0;\n
    }\n
    v1->field_40 = v2;\n
    cgc_ClearFsError();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4209169:sub_403a11": null, "4209184:cgc_InitPasswd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPasswd(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v2 - 13303);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fopen(v2 - 13180);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v2 - 13279);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_fwrite(v2 - 13252, 5, 1);\n
    v1 = v5;\n
    v6 = cgc_strlen(v5, 5, 1);\n
    v0 = v3;\n
    cgc_fwrite(v1, v6, 1);\n
    cgc_fclose(v3, v6, 1);\n
    cgc_ClearFsError();\n
    v4 = 1;\n
    return v4;\n
}\n
", "4209441:sub_403b21": null, "4209456:cgc_Logout": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Logout()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_40;\n
        cgc_free();\n
    }\n
    v1->field_40 = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4209537:sub_403b81": null, "4209552:cgc_FindFile": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_3c->field_4)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_3c->field_8 + (v2 << 2))) && *(*((v1->field_3c->field_8 + (v2 << 2)))))\n
        {\n
            v0 = v4;\n
            if (!cgc_strcmp(*(*((v1->field_3c->field_8 + (v2 << 2))))))\n
            {\n
                v3 = *((v1->field_3c->field_8 + v2 * 4));\n
                return v3;\n
            }\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4209767:sub_403c67": null, "4209776:cgc_CreateEmptyFile": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateEmptyFile(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct struct_2 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[203].padding_0[13]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v1->field_40)\n
    {\n
        cgc_SetFsError(&v1[202].field_40);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((a0 & 153))\n
    {\n
        cgc_SetFsError(&v1[202].padding_0[47]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (cgc_FindFile(v4))\n
    {\n
        cgc_SetFsError(&v1[202].padding_0[34]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_3c->field_4)\n
        {\n
LABEL_403f97:\n
            if (v2 != v1->field_3c->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v3 = *((v1->field_3c->field_8 + v2 * 4));\n
                return v3;\n
            }\n
            cgc_SetFsError(&v1[202].padding_0[14]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_3c->field_8 + (v2 << 2))))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_calloc();\n
            *((v1->field_3c->field_8 + v2 * 4)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(&v1[204].padding_0[3]);\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_strlen();\n
            v6 = cgc_calloc();\n
            *(*((v1->field_3c->field_8 + v2 * 4))) = v6;\n
            if (!v6)\n
            {\n
                cgc_SetFsError(&v1[204].padding_0[3]);\n
                cgc_free();\n
                *((v1->field_3c->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v4;\n
            cgc_strcpy(*(*((v1->field_3c->field_8 + v2 * 4))));\n
            v7 = cgc_calloc(5);\n
            *((*((v1->field_3c->field_8 + v2 * 4)) + 4)) = v7;\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v1[204].padding_0[3]);\n
                cgc_free();\n
                *(*((v1->field_3c->field_8 + v2 * 4))) = 0;\n
                cgc_free();\n
                *((v1->field_3c->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v8 = v1;\n
            v0 = v8->field_40;\n
            cgc_strcpy(*((*((v8->field_3c->field_8 + v2 * 4)) + 4)));\n
            v9 = v1;\n
            *((*((v9->field_3c->field_8 + v2 * 4)) + 8)) = a0;\n
            *((*((v9->field_3c->field_8 + v2 * 4)) + 12)) = 0;\n
            *((*((v9->field_3c->field_8 + v2 * 4)) + 16)) = 0;\n
            goto LABEL_403f97;\n
            goto LABEL_403f97;\n
        }\n
    }\n
}\n
", "4210672:cgc_fopen": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_fopen(unsigned int v5, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18]\n
    struct_1 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[204].padding_0[52]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v5 && a0)\n
    {\n
        if (cgc_strlen() > 1)\n
        {\n
            cgc_SetFsError(&v0[202].padding_0[47]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            cgc_SetFsError(&v0[202].padding_0[47]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v0->field_40)\n
        {\n
            cgc_SetFsError(&v0[202].field_40);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_FindFile(v5);\n
        if (!v2 && *(a0) == 114)\n
        {\n
            cgc_SetFsError(&v0[201].padding_0[42]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2)\n
        {\n
            for (v3 = 0; v3 < 8; v3 += 1)\n
            {\n
                if (*((648 + &v0->padding_0[0] + 0x4 * v3)) && *(*((648 + &v0->padding_0[0] + 0x4 * v3))) == v2)\n
                {\n
                    cgc_SetFsError(&v0[201].padding_0[20]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (v2 && cgc_strcmp(v0->field_40))\n
        {\n
            if (cgc_strcmp(v2->field_4))\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 64))\n
                {\n
                    cgc_SetFsError(&v0[200].field_40 + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 96))\n
                {\n
                    cgc_SetFsError(&v0[200].field_40 + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 4))\n
                {\n
                    cgc_SetFsError(&v0[200].field_40 + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 6))\n
                {\n
                    cgc_SetFsError(&v0[200].field_40 + 3);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v1 = cgc_calloc();\n
        if (!v1)\n
        {\n
            cgc_SetFsError(&v0[204].padding_0[3]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 += 1)\n
        {\n
            if (!*(&v0[9].padding_0[36 + 4 * v3]))\n
            {\n
                *(&v0[9].padding_0[36 + 4 * v3]) = v1;\n
                break;\n
            }\n
        }\n
        if (v3 == 8)\n
        {\n
            cgc_SetFsError(&v0[200].padding_0[49]);\n
            cgc_free();\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 4;\n
            v1->field_8 = 0;\n
        }\n
        else if (v2)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
            v1->field_0->field_c = 0;\n
            if (v1->field_0->field_10)\n
            {\n
                cgc_free();\n
                v1->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v2 = cgc_CreateEmptyFile(v5, 6);\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[200].padding_0[24]);\n
                *(&v0[9].padding_0[36 + 4 * v3]) = 0;\n
                cgc_free();\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
        }\n
        cgc_ClearFsError();\n
        v4 = v1;\n
        return v4;\n
    }\n
    cgc_SetFsError(&v0[201].field_40 + 3);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4211976:sub_404508": null, "4211984:cgc_fclose": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 13602);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 648)) == v3)\n
            *((v0 + v1 * 4 + 648)) = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4212157:sub_4045bd": null, "4212160:cgc_fread": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            cgc_SetFsError(v1 - 13550);\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v4 = a2;\n
            v4->field_8 = a2->field_0->field_c - a2->field_8 + v4->field_8;\n
            cgc_ClearFsError();\n
            v2 = a2->field_0->field_c - a2->field_8;\n
            return v2;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a1 * a0 + v5->field_8;\n
            cgc_ClearFsError();\n
            v2 = a1 * a0;\n
            return v2;\n
        }\n
    }\n
    cgc_SetFsError(v1 - 13581);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4212507:sub_40471b": null, "4212512:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v4, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[5];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a2)\n
    {\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(v1 - 13875);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            cgc_memcpy(v2, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        cgc_memcpy(v2 + *(a2)->field_c, v4);\n
        v5 = *(a2);\n
        v5[3] = a1 * a0 + v5[3];\n
        if (*(a2)->field_10)\n
            cgc_free();\n
        *(a2)->field_10 = v2;\n
        cgc_ClearFsError();\n
        v3 = a1 * a0;\n
        return v3;\n
    }\n
    cgc_SetFsError(v1 - 13581);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4212847:sub_40486f": null, "4212848:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    struct_2 *v6;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        cgc_SetFsError(v1 - 13538);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(v1 - 13523);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        cgc_SetFsError(v1 - 13550);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v2 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = a1->field_0->field_10;\n
            v6 = a1;\n
            v7 = v6->field_8;\n
            v6->field_8 = v7 + 1;\n
            tmp_50 = v5[v7];\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            *((v4 + v8)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v4 + v2)) = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(v1 - 13550);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4213229:sub_4049ed": null, "4213232:cgc_ListFiles": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_ListFiles(unsigned int *v16)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1d]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x1b]\n
    char v12;  // [bp-0x1a]\n
    char v13;  // [bp-0x19]\n
    struct struct_2 **v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x11]\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // eax\n
    struct_0 *v25;  // eax\n
    struct_0 *v26;  // ebx\n
    struct_0 *v27;  // eax\n
    struct_0 *v28;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[217].padding_0[36]);\n
        v15 = 0;\n
        return v15;\n
    }\n
    if (v16)\n
    {\n
        v8 = 79;\n
        for (v14 = 0; v14 < v1->field_3c->field_4; v14 = v14 + 1)\n
        {\n
            if (*((v1->field_3c->field_8 + (v14 << 2))))\n
            {\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v7 = cgc_strlen();\n
                if (v7 >= 32)\n
                    v8 = v7 + v8;\n
                else\n
                    v8 += 32;\n
                v8 += 1;\n
                v4 = *((*((v1->field_3c->field_8 + v14 * 4)) + 12));\n
                v5 = 0;\n
                v18 = ftop<4> - 1;\n
                if ([D] GetI(136:I8x8)[t47,0])\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(136:I8x8)[t6,0] = 0x00\n
                v20 = v19 + 1;\n
                cgc_log10();\n
                [D] PutI(72:F64x8)[t18,0] = t21\n
                [D] PutI(136:I8x8)[t18,0] = 0x01\n
                [D] PutI(72:F64x8)[t28,1] = t29\n
                [D] PutI(136:I8x8)[t28,1] = 0x01\n
                [D] PutI(136:I8x8)[t28,0] = 0x00\n
                v22 = v20 - 1 + 1;\n
                v3 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-62, size=2, endness=Iend_LE)))));\n
                v2 = v3 | 0xc00;\n
                v6 = ([D] GetI(136:I8x8)[t74,0] ? [D] GetI(72:F64x8)[t74,0] : nan);\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v23 = v22 + 1;\n
                v7 = v6;\n
                if (v7 < 8)\n
                    v8 += 8;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 6;\n
            }\n
        }\n
        v24 = cgc_calloc();\n
        *(v16) = v24;\n
        if (!v24)\n
        {\n
            cgc_SetFsError(&v1[216].padding_0[51]);\n
            v15 = 0;\n
            return v15;\n
        }\n
    }\n
    if (!v16)\n
    {\n
        v26 = v1;\n
        cgc_printf(&v26[211].padding_0[6], &v26[210].padding_0[47], &v26[210].padding_0[38], &v26[210].padding_0[32]);\n
    }\n
    else\n
    {\n
        v25 = v1;\n
        v0 = &v25[210].padding_0[27];\n
        cgc_sprintf(*(v16), &v25[211].padding_0[6], &v25[210].padding_0[47], &v25[210].padding_0[38], &v25[210].padding_0[32]);\n
    }\n
    for (v14 = 0; v14 < v1->field_3c->field_4; v14 = v14 + 1)\n
    {\n
        if (*((v1->field_3c->field_8 + (v14 << 2))))\n
        {\n
            if (!v16)\n
            {\n
                v28 = v1;\n
                cgc_printf(&v28[210].padding_0[20], *(*((v28->field_3c->field_8 + v14 * 4))), *((*((v28->field_3c->field_8 + v14 * 4)) + 4)));\n
            }\n
            else\n
            {\n
                v27 = v1;\n
                v0 = *((*((v27->field_3c->field_8 + v14 * 4)) + 12));\n
                cgc_sprintf(*(v16), &v1[210].padding_0[22], *(v16), *(*((v27->field_3c->field_8 + v14 * 4))), *((*((v27->field_3c->field_8 + v14 * 4)) + 4)));\n
            }\n
            cgc_memset(&v9, 45);\n
            v13 = 0;\n
            if ((*((*((v1->field_3c->field_8 + (v14 << 2))) + 8)) & 4))\n
                v9 = 114;\n
            if ((*((*((v1->field_3c->field_8 + (v14 << 2))) + 8)) & 6))\n
                v10 = 119;\n
            if ((*((*((v1->field_3c->field_8 + (v14 << 2))) + 8)) & 64))\n
                v11 = 114;\n
            if ((*((*((v1->field_3c->field_8 + (v14 << 2))) + 8)) & 96))\n
                v12 = 119;\n
            if (!v16)\n
                cgc_printf(&v1[210].padding_0[53]);\n
            else\n
                cgc_sprintf(*(v16), &v1[210].padding_0[2], *(v16));\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v15 = 1;\n
    return v15;\n
}\n
", "4214422:sub_404e96": null, "4214432:cgc_DeleteFile": "typedef struct struct_1 {\n
    char padding_0[60];\n
    struct struct_2 *field_3c;\n
    unsigned int field_40;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DeleteFile(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    struct struct_0 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_1 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[204].padding_0[52]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6)\n
    {\n
        cgc_SetFsError(&v1[203].padding_0[13]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v1->field_40)\n
    {\n
        cgc_SetFsError(&v1[202].field_40);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v4 = 0; v4 < v1->field_3c->field_4; v4 += 1)\n
        {\n
            if (*((v1->field_3c->field_8 + (v4 << 2))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_3c->field_8 + (v4 << 2))))))\n
                {\n
                    v2[0] = *((v1->field_3c->field_8 + v4 * 4));\n
                    v3 = v4;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v4 == v1->field_3c->field_4)\n
        {\n
            cgc_SetFsError(&v1[201].padding_0[42]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v4 = 0; v4 < 8; v4 += 1)\n
        {\n
            if (*(&v1[9].padding_0[36 + 4 * v4]) && *(*(&v1[9].padding_0[36 + 4 * v4])) == v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        v7 = v1;\n
        v0 = &v7[195].field_40 + 1;\n
        if (cgc_strcmp(v7->field_40))\n
        {\n
            v0 = v2[1];\n
            if (cgc_strcmp(v1->field_40))\n
            {\n
                cgc_SetFsError(&v1[200].field_40 + 3);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_free();\n
        if (v2[1])\n
            cgc_free();\n
        if (v2[4])\n
            cgc_free();\n
        cgc_free();\n
        *((v1->field_3c->field_8 + v3 * 4)) = 0;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4215097:sub_405139": null, "4215104:cgc_RenameFile": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RenameFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    if (v6 && a0)\n
    {\n
        for (v4 = 0; v4 < v1->field_3c->field_4; v4 += 1)\n
        {\n
            if (*((v1->field_3c->field_8 + (v4 << 2))) && *(*((v1->field_3c->field_8 + (v4 << 2)))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_3c->field_8 + (v4 << 2))))))\n
                    v3[0] = *((v1->field_3c->field_8 + v4 * 4));\n
                v0 = a0;\n
                if (!cgc_strcmp(*(*((v1->field_3c->field_8 + (v4 << 2))))))\n
                {\n
                    cgc_SetFsError(&v1[197].padding_0[38]);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[197].padding_0[6]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v1;\n
        v0 = &v7[195].field_40 + 1;\n
        if (cgc_strcmp(v7->field_40))\n
        {\n
            v0 = *((v3 + 4));\n
            if (cgc_strcmp(v1->field_40))\n
            {\n
                cgc_SetFsError(&v1[200].field_40 + 3);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_strlen();\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[204].padding_0[3]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a0;\n
        cgc_strcpy(v2);\n
        cgc_free(*(v3));\n
        *(v3) = v2;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_SetFsError(&v1[203].padding_0[13]);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4215691:sub_40538b": null, "4215696:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeMode(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[196].padding_0[52]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v2 = cgc_FindFile(v4);\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[196].padding_0[39]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v1;\n
        v0 = &v5[195].field_40 + 1;\n
        if (cgc_strcmp(v5->field_40))\n
        {\n
            v0 = v2->field_4;\n
            if (cgc_strcmp(v1->field_40))\n
            {\n
                cgc_SetFsError(&v1[200].field_40 + 3);\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        v2->field_8 = a0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[202].padding_0[47]);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4215985:sub_4054b1": null, "4216000:cgc_ChangeOwner": "typedef struct struct_1 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeOwner(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_1 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        cgc_SetFsError(&v1[203].padding_0[13]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v6 = v1;\n
        v0 = &v6[195].field_40 + 1;\n
        if (cgc_strcmp(v6->field_40))\n
        {\n
            cgc_SetFsError(&v1[196].padding_0[5]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_FindFile(v5);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[196].padding_0[39]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_UserExists())\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v1[204].padding_0[3]);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = a0;\n
            cgc_strcpy(v2);\n
            if (v3->field_4)\n
                cgc_free();\n
            v3->field_4 = v2;\n
            cgc_ClearFsError();\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(&v1[196].padding_0[52]);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[196].padding_0[19]);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4216410:sub_40565a": null, "4216416:cgc_UserExists": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UserExists(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    char v2;  // [bp-0x90]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v0 - 13320);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v3 = cgc_fopen(v6 - 13180, v6 - 13525);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 13279);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (cgc_fgets(&v2, 127, v3))\n
        {\n
            v1 = cgc_strtok(&v2);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(v0 - 13246);\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (!cgc_strcmp(v1))\n
            {\n
                cgc_fclose(v3);\n
                v4 = 1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            cgc_fclose(v3);\n
            cgc_ClearFsError();\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4216792:sub_4057d8": null, "4216800:cgc_Uid": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Uid()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_40;\n
        v3 = cgc_puts();\n
    }\n
    return v3;\n
}\n
", "4216858:sub_40581a": null, "4216864:cgc_AddUser": "typedef struct struct_1 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddUser(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct_0 *v2;  // [bp-0xa8]\n
    struct_0 *v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    struct_1 *v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x98]\n
    struct struct_0 **v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_1 *v11;  // ebx\n
    struct_1 *v12;  // ebx\n
    struct_1 *v13;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v5[195].padding_0[60]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v5[194].padding_0[26]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v5->field_40))\n
    {\n
        cgc_SetFsError(&v5[196].padding_0[5]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[195].padding_0[60]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[194].padding_0[26]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!cgc_UserExists(v10))\n
    {\n
        v11 = v5;\n
        v8 = cgc_fopen(&v11[193].padding_0[56], &v11[198].padding_0[61]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v5[195].padding_0[19]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v5;\n
        v7 = cgc_fopen(&v12[193].padding_0[57], &v12[195].padding_0[21]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v5[193].padding_0[49]);\n
            cgc_fclose(v8);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (!cgc_fgets(&v6, 127, v8))\n
            {\n
                v0 = &v5[192].padding_0[54];\n
                v1 = v10;\n
                cgc_sprintf(&v6, v0, v1);\n
                v2 = &v6;\n
                cgc_fwrite(v2, cgc_strlen(&v6, v0, v1), 1, v7);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v5[193].padding_0[56]);\n
                v13 = v5;\n
                cgc_RenameFile(&v13[193].padding_0[57], &v13[193].padding_0[56]);\n
                cgc_ClearFsError();\n
                v9 = 1;\n
                return v9;\n
            }\n
            v3 = &v6;\n
            v0 = cgc_strlen();\n
            v4 = cgc_fwrite(v3, v0, 1, v7);\n
            if (v4 != cgc_strlen(&v6, v0, 1))\n
            {\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_SetFsError(&v5[193].padding_0[18]);\n
                cgc_DeleteFile(&v5[193].padding_0[57]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            else if (*(&v5 + cgc_strlen()) != 10 && cgc_fwrite(&v5[190].padding_0[53], 1, 1, v7) != 1)\n
            {\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_SetFsError(&v5[193].padding_0[18]);\n
                cgc_DeleteFile(&v5[193].padding_0[57]);\n
                v9 = 0;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v5[194].padding_0[9]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4218030:sub_405cae": null, "4218032:cgc_DeleteUser": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteUser(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    struct_1 *v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    struct_0 *v3;  // [bp-0xa0]\n
    struct struct_0 **v4;  // [bp-0x9c]\n
    void* v5;  // [bp-0x98]\n
    char v6;  // [bp-0x91]\n
    unsigned int v7;  // [bp-0x90]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v3[195].padding_0[60]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v3->field_40))\n
    {\n
        cgc_SetFsError(&v3[196].padding_0[5]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v10))\n
    {\n
        v11 = v3;\n
        v5 = cgc_fopen(&v11[193].padding_0[56], &v11[198].padding_0[61]);\n
        if (!v5)\n
        {\n
            cgc_SetFsError(&v3[195].padding_0[19]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v3;\n
        v4 = cgc_fopen(&v12[193].padding_0[57], &v12[195].padding_0[21]);\n
        if (!v4)\n
        {\n
            cgc_SetFsError(&v3[193].padding_0[49]);\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v3[192].padding_0[25]);\n
                        cgc_fclose(v5);\n
                        cgc_fclose(v4);\n
                        cgc_DeleteFile(&v3[193].padding_0[57]);\n
                        v9 = 0;\n
                        return v9;\n
                    }\n
                    cgc_DeleteFile(&v3[193].padding_0[56]);\n
                    v13 = v3;\n
                    cgc_RenameFile(&v13[193].padding_0[57], &v13[193].padding_0[56]);\n
                    cgc_ClearFsError();\n
                    v9 = 1;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen());\n
            v7 = cgc_strtok(&v8);\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v3[194].padding_0[54]);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(&v3[193].padding_0[57]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (cgc_strcmp(v7))\n
            {\n
                (&v8)[cgc_strlen()] = 58;\n
                v1 = &v8;\n
                v0 = cgc_strlen();\n
                v2 = cgc_fwrite(v1, v0, 1, v4);\n
                if (v2 != cgc_strlen(&v8, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v6 = 1;\n
            }\n
        }\n
        cgc_fclose(v5);\n
        cgc_fclose(v4);\n
        cgc_SetFsError(&v3[193].padding_0[18]);\n
        cgc_DeleteFile(&v3[193].padding_0[57]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v3[192].padding_0[48]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4219138:sub_406102": null, "4219152:cgc_ChangePasswd": "typedef struct struct_1 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangePasswd(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    struct_0 *v2;  // [bp-0xb4]\n
    unsigned int v3;  // [bp-0xb0]\n
    struct_0 *v4;  // [bp-0xac]\n
    unsigned int v5;  // [bp-0xa8]\n
    struct_1 *v6;  // [bp-0xa4]\n
    struct struct_0 **v7;  // [bp-0xa0]\n
    void* v8;  // [bp-0x9c]\n
    char v9;  // [bp-0x95]\n
    unsigned int v10;  // [bp-0x94]\n
    char v11;  // [bp-0x8d]\n
    char v12;  // [bp-0xd]\n
    struct_1 *v14;  // ebx\n
    struct_1 *v15;  // ebx\n
    struct_1 *v16;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        cgc_SetFsError(&v6[195].padding_0[60]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v6[194].padding_0[26]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (cgc_strlen() <= 32)\n
    {\n
        if (cgc_strcmp(v6->field_40) && cgc_strcmp(v6->field_40))\n
        {\n
            cgc_SetFsError(&v6[192].padding_0[10]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v14 = v6;\n
        v8 = cgc_fopen(&v14[193].padding_0[56], &v14[198].padding_0[61]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v6[195].padding_0[19]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v15 = v6;\n
        v7 = cgc_fopen(&v15[193].padding_0[57], &v15[195].padding_0[21]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v6[193].padding_0[49]);\n
            cgc_fclose(v8);\n
            v12 = 0;\n
            return v12;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v11, 127, v8))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    if (!v9)\n
                    {\n
                        cgc_SetFsError(&v6[192].padding_0[25]);\n
                        cgc_fclose(v8);\n
                        cgc_fclose(v7);\n
                        cgc_DeleteFile(&v6[193].padding_0[57]);\n
                        v12 = 0;\n
                        return v12;\n
                    }\n
                    cgc_DeleteFile(&v6[193].padding_0[56]);\n
                    v16 = v6;\n
                    cgc_RenameFile(&v16[193].padding_0[57], &v16[193].padding_0[56]);\n
                    cgc_ClearFsError();\n
                    v12 = 1;\n
                    return v12;\n
                }\n
            } while (!cgc_strlen());\n
            v10 = cgc_strtok(&v11);\n
            if (!v10)\n
            {\n
                cgc_SetFsError(&v6[194].padding_0[54]);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v6[193].padding_0[57]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (cgc_strcmp(v10))\n
            {\n
                (&v11)[cgc_strlen()] = 58;\n
                v2 = &v11;\n
                v0 = cgc_strlen();\n
                v3 = cgc_fwrite(v2, v0, 1, v7);\n
                if (v3 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_SetFsError(&v6[193].padding_0[18]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[193].padding_0[57]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v6[191].padding_0[39];\n
                v1 = v13;\n
                cgc_sprintf(&v11, v0, v1);\n
                v4 = &v11;\n
                v0 = cgc_strlen(&v11, v0, v1);\n
                v5 = cgc_fwrite(v4, v0, 1, v7);\n
                if (v5 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v6[193].padding_0[18]);\n
                    cgc_DeleteFile(&v6[193].padding_0[57]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v6[194].padding_0[26]);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4220572:sub_40669c": null, "4220576:cgc_CheckPasswd": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckPasswd(unsigned int v9, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xa8]\n
    char v1;  // [bp-0xa1]\n
    void* v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x9c]\n
    char v4;  // [bp-0x95]\n
    unsigned int v5;  // [bp-0x94]\n
    unsigned int v6;  // [bp-0x90]\n
    char v7;  // [bp-0x89]\n
    char v8;  // [bp-0x9]\n
    struct_0 *v10;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v9)\n
    {\n
        cgc_SetFsError(&v0[195].padding_0[60]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v0[194].padding_0[26]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v0[194].padding_0[26]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (!v0->field_40)\n
        {\n
            cgc_Login(&v0[195].field_40 + 1);\n
            v1 = 1;\n
        }\n
        else if (cgc_strcmp(v0->field_40))\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[204].padding_0[3]);\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_strcpy(v2);\n
            cgc_Logout();\n
            cgc_Login(&v0[195].field_40 + 1);\n
        }\n
        v10 = v0;\n
        v3 = cgc_fopen(&v10[193].padding_0[56], &v10[198].padding_0[61]);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v0[195].padding_0[19]);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v7, 127, v3))\n
                        {\n
                            cgc_fclose(v3);\n
                            if (!v4)\n
                            {\n
                                cgc_SetFsError(&v0[192].padding_0[25]);\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                        }\n
                    } while (!cgc_strlen());\n
                    v6 = cgc_strtok(&v7);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v0[194].padding_0[54]);\n
                        cgc_fclose(v3);\n
                        if (v2)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v2);\n
                            cgc_free();\n
                        }\n
                        if (v1)\n
                            cgc_Logout();\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                } while (cgc_strcmp(v6));\n
                v5 = cgc_strtok(0);\n
                if (!v5)\n
                {\n
                    cgc_SetFsError(&v0[194].padding_0[54]);\n
                    cgc_fclose(v3);\n
                    if (v2)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v2);\n
                        cgc_free();\n
                    }\n
                    if (v1)\n
                        cgc_Logout();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (cgc_strcmp(v5));\n
            cgc_ClearFsError();\n
            cgc_fclose(v3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4222087:sub_406c87": null, "4222096:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v3;\n
        v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
        if (v2)\n
        {\n
            v5 = 3;\n
            return v5;\n
        }\n
        v4 = v3 + v4;\n
    }\n
}\n
", "4222300:sub_406d5c": null, "4222304:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 68));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 68)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4222641:sub_406eb1": null, "4222656:cgc_add_freelist_block": "typedef struct struct_1 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[180].padding_0[60]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_44)\n
    {\n
        v7 = v1;\n
        v7->field_44 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4222881:sub_406fa1": null, "4222896:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4222967:sub_406ff7": null, "4222976:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[68];\n
    struct struct_1 *field_44;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_44);\n
    v3[0] = v1->field_44;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4223193:sub_4070d9": null, "4223200:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4223284:sub_407134": null, "4223296:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[68];\n
    struct struct_0 *field_44;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_44; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4223577:sub_407259": null, "4223584:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4223692:sub_4072cc": null, "4223696:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 68)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 68));\n
        *((v6 + v3 * 4 + 68)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4223981:sub_4073ed": null, "4223984:cgc_round": null, "4224130:sub_407482": null, "4224144:cgc_floor": null, "4224300:sub_40752c": null, "4224304:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[808];\n
    unsigned int field_328;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_328 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[680 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[680 + 4 * (v2 + 1 & 31)]);\n
        *((680 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4224527:sub_40760f": null, "4224528:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4224575:sub_40763f": null, "4224576:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[680 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4224859:sub_40775b": null, "4224864:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4225052:sub_40781c": null, "4225056:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4225157:sub_407885": null, "4225168:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4225202:sub_4078b2": null, "4225216:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // esi\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (true)\n
    {\n
        if (v3->field_100 >= 0x100)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, v3->field_100))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v2))\n
            {\n
                v6 = v3;\n
                v6->field_100 = v6->field_100 - *(&v2);\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            v7 = v3;\n
            v7->field_100 = v7->field_100 + 1;\n
            (&v3->field_0)[v9] = a0;\n
            v4 = a1 + 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4225447:sub_4079a7": null, "4225456:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4225548:sub_407a0c": null, "4225552:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4225740:sub_407acc": null, "4225744:cgc_vprintf_buffered": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x130]\n
    unsigned int v2;  // [bp-0x128]\n
    void* v3;  // [bp-0x124]\n
    struct_0 *v4;  // [bp-0x120]\n
    char v5;  // [bp-0x11c]\n
    unsigned short v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // esi\n
\n
    v11 = v13;\n
    v10 = v14;\n
    v9 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v0 = a0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, v12);\n
    if (v6 > 0)\n
    {\n
        if (cgc_transmit(1, &v5, v6))\n
        {\n
            v8 = -1;\n
            goto LABEL_407bab;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
        }\n
    }\n
    v8 = v2;\n
LABEL_407bab:\n
    return v8;\n
}\n
", "4225977:sub_407bb9": null, "4225984:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc], Other Possible Types: unsigned long\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    unsigned int *v45;  // [bp+0x10001c], Other Possible Types: struct struct_1 **\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_4080f9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_4080f9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 12932)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4227340:sub_40810c": null, "4227344:cgc_printf": "int cgc_printf(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0x8]\n
\n
    v2 = &v4;\n
    v0 = v2;\n
    v1 = cgc_vprintf(v3);\n
    return v1;\n
}\n
", "4227402:sub_40814a": null, "4227408:cgc_vprintf": "int cgc_vprintf(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = cgc_WRAPPER_PUTC;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = a0;\n
    return cgc_wrapper_output(v2, v3, v1, v6);\n
}\n
", "4227505:sub_4081b1": null, "4227520:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4227589:sub_408205": null, "4227600:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4227739:sub_40829b": null, "4227744:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4228016:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4228672:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4231088:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4231754:sub_40924a": null, "4231760:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if ((a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4232300:sub_40946c": null, "4232304:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4232351:sub_40949f": null, "4232352:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4232389:sub_4094c5": null, "4232400:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4232637:sub_4095bd": null, "4232640:cgc_atof": null, "4232925:sub_4096dd": null, "4232928:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4233004:sub_40972c": null, "4233008:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4233145:sub_4097b9": null, "4233152:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4233288:sub_409848": null, "4233296:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_40996a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_40996a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4099bd;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_4099bd;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4099bd:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_40996a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (!cgc_isupper(v1))\n
                v1 -= 87;\n
            else\n
                v1 -= 55;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_409af5:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_409afa:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = v7 + 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_409afa;\n
            goto LABEL_409af5;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4234067:sub_409b53": null, "4234080:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4234139:sub_409b9b": null, "4234144:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4234199:sub_409bd7": null, "4234208:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4234363:sub_409c7b": null, "4234368:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4234526:sub_409d1e": null, "4234528:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[580];\n
    struct struct_1 *field_244;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_244)\n
        {\n
            v6 = v1->field_244;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_244 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_244 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_244 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_244 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4235047:sub_409f27": null, "4235056:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4235406:sub_40a08e": null, "4235408:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4235591:sub_40a147": null, "4235600:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = *((v4 + v2));\n
            v0 = *((a0 + v2));\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4235753:sub_40a1e9": null, "4235760:_Block_object_assign": "int _Block_object_assign()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4235765:sub_40a1f5": null, "4235776:_Block_object_dispose": "int _Block_object_dispose()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4235781:sub_40a205": null, "4235792:cgc_char_is_num": "int cgc_char_is_num(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (48 <= v2)\n
        v1 = !(57 < v2);\n
    return v1 & 1;\n
}\n
", "4235854:sub_40a24e": null, "4235856:cgc_char_is_lower": "int cgc_char_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (97 <= v2)\n
        v1 = !(122 < v2);\n
    return v1 & 1;\n
}\n
", "4235918:sub_40a28e": null, "4235920:cgc_char_is_upper": "int cgc_char_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (65 <= v2)\n
        v1 = !(90 < v2);\n
    return v1 & 1;\n
}\n
", "4235982:sub_40a2ce": null, "4235984:cgc_char_is_alpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_char_is_alpha(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 1;\n
    if (!cgc_char_is_lower(v3))\n
    {\n
        v1 = cgc_char_is_upper(v3);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4236082:sub_40a332": null, "4236096:cgc_char_is_whitespace": "int cgc_char_is_whitespace(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 == 32)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else if (v2 == 10)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else if (v2 == 9)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else if (v2 != 11)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
}\n
", "4236204:sub_40a3ac": null, "4236208:cgc_compile": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compile(unsigned int v28)\n
{\n
    char v0;  // [bp-0xf0]\n
    char v1;  // [bp-0xec]\n
    unsigned int v2;  // [bp-0xe8], Other Possible Types: char\n
    unsigned int v3;  // [bp-0xbc]\n
    char *v4;  // [bp-0xb8]\n
    char v5;  // [bp-0xb0]\n
    char v6;  // [bp-0xac]\n
    char v7;  // [bp-0xa8]\n
    char v8;  // [bp-0x94]\n
    char v9;  // [bp-0x8c]\n
    char v10;  // [bp-0x88]\n
    char v11;  // [bp-0x84]\n
    char v12;  // [bp-0x6c]\n
    char v13;  // [bp-0x64]\n
    char v14;  // [bp-0x60]\n
    char v15;  // [bp-0x5c]\n
    char v16;  // [bp-0x44]\n
    unsigned int v17;  // [bp-0x3c]\n
    void* v18;  // [bp-0x38]\n
    void* v19;  // [bp-0x34]\n
    unsigned int v20;  // [bp-0x30]\n
    void* v21;  // [bp-0x24]\n
    unsigned int v22;  // [bp-0x20]\n
    void* v23;  // [bp-0x1c]\n
    unsigned int v24;  // [bp-0x14]\n
    unsigned int v25;  // [bp-0x10]\n
    unsigned int v26;  // [bp-0xc]\n
    unsigned int v27;  // [bp-0x8]\n
    unsigned int v32;  // ebx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // esi\n
    unsigned int v35;  // d\n
    unsigned int v36;  // ecx\n
    struct_0 *v37;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v38;  // edi, Other Possible Types: unsigned int\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // ecx\n
    unsigned int v41;  // esi\n
    unsigned int v42;  // edi\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // esi\n
\n
    v27 = v32;\n
    v26 = v33;\n
    v25 = v34;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v17 = v28;\n
    v19 = 0;\n
    v18 = 0;\n
    v22 = cgc_calloc(24);\n
    v20 = v22;\n
    v21 = 0;\n
    v23 = 0;\n
    v38 = &v2;\n
    v36 = 9;\n
    for (v37 = &v17; v36; v37 += v35 * 4)\n
    {\n
        v36 -= 1;\n
        *(v38) = *(v37);\n
        v38 += v35 * 4;\n
    }\n
    cgc_compile_preamble();\n
    if (*(&v16))\n
    {\n
        v2 = *(&v16);\n
        v24 = cgc_compiler_error(*(&v14), *(&v15));\n
    }\n
    else\n
    {\n
        v39 = &v1;\n
        v40 = 9;\n
        for (v41 = &v13; v40; v41 += v35 * 4)\n
        {\n
            v40 -= 1;\n
            v39 += v35 * 4;\n
        }\n
        cgc_compile_expression();\n
        if (*(&v12))\n
        {\n
            v24 = cgc_compiler_error(*(&v10), *(&v11));\n
        }\n
        else\n
        {\n
            v42 = &v0;\n
            v43 = 9;\n
            for (v44 = &v9; v43; v44 += v35 * 4)\n
            {\n
                v43 -= 1;\n
                v42 += v35 * 4;\n
            }\n
            cgc_compile_conclusion();\n
            if (!*(&v8))\n
            {\n
                v4 = cgc_calloc(16);\n
                cgc_memcpy(v4, &v7, 16);\n
                v24 = v4;\n
            }\n
            else\n
            {\n
                v24 = cgc_compiler_error(*(&v5), *(&v6));\n
            }\n
        }\n
    }\n
    return v24;\n
}\n
", "4236657:sub_40a571": null, "4236672:cgc_compile_preamble": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[28];\n
    unsigned int field_20;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_compile_preamble(struct_1 *v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct_1 *v1;  // [bp-0x14]\n
    struct struct_3 **v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    char v5;  // [bp+0x8]\n
    struct_1 *v6;  // ecx\n
\n
    v0 = v4;\n
    v1 = v0;\n
    v2 = &v5;\n
    memcpy(v0, &v5, 36);\n
    v3 = &*(v2)->field_0->field_0;\n
    if (*(v3) != 1)\n
        v0->field_20 = v3;\n
    v6 = v0;\n
    v6->field_0 = v6->field_0->field_4;\n
    return v1;\n
}\n
", "4236784:cgc_compiler_error": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    char padding_a[2];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_compiler_error(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = cgc_calloc(16);\n
    v0->field_8 = v1;\n
    v0->field_c = a1;\n
    return v0;\n
}\n
", "4236857:sub_40a639": null, "4236864:cgc_compile_expression": "typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[16];\n
    struct struct_0 *field_1c;\n
    unsigned int field_20;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    char field_0;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_3 *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned short field_c;\n
    char padding_e[2];\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compile_expression(struct_4 *v18)\n
{\n
    struct_4 *v0;  // [bp-0x68]\n
    char <0x40a640[is_14]|Stack bp+0x8, 1 B>;  // [bp+0x8]\n
    int tmp_15;  // tmp #15\n
    unsigned int v1;  // [bp-0x64]\n
    struct_5 *v2;  // [bp-0x60]\n
    struct_4 *v3;  // [bp-0x5c]\n
    struct struct_1 **v4;  // [bp-0x58]\n
    struct_4 *v5;  // [bp-0x54]\n
    struct_4 *v6;  // [bp-0x50]\n
    char v7;  // [bp-0x4c]\n
    unsigned int v8;  // [bp-0x24]\n
    struct_1 *v9;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x19]\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    struct_4 *v16;  // [bp-0x4]\n
    unsigned int v17;  // [bp+0x0]\n
    unsigned int v19;  // [bp+0x8]\n
    unsigned int v20;  // [bp+0xc]\n
    unsigned int v24;  // ebx\n
    unsigned int v25;  // edi\n
    unsigned int v26;  // esi\n
    struct_4 *v27;  // eax\n
    struct_4 *v28;  // eax\n
    struct_4 *v29;  // eax\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // d\n
    struct struct_4 **v32;  // edi, Other Possible Types: unsigned int\n
    struct_4 *v33;  // esi, Other Possible Types: unsigned int\n
    unsigned int v34;  // edx\n
    struct_4 *v35;  // eax\n
    struct_4 *v36;  // eax\n
    struct_4 *v38;  // eax\n
    struct_4 *v39;  // eax\n
    unsigned int v40;  // ecx\n
    struct_4 *v42;  // eax\n
\n
    v15 = v24;\n
    v14 = v25;\n
    v13 = v26;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v18;\n
    v0 = v3;\n
    v2 = &<0x40a640[is_14]|Stack bp+0x8, 1 B>;\n
    v12 = cgc_stack_create();\n
    v11 = cgc_stack_create();\n
    memcpy(v3, v2, 36);\n
    v10 = 1;\n
    v9 = v3->field_0->field_0;\n
    v8 = v9->field_0;\n
    while (true)\n
    {\n
        if (v10 && v8 == 3)\n
        {\n
            v3->field_1c->field_4 = 1;\n
            v17 = v9->field_8;\n
            v19 = 10;\n
            v18 = 0;\n
            v3->field_1c->field_8 = cgc_strtol(v18, v19, v20);\n
            v17 = 24;\n
            v34 = cgc_calloc(24);\n
            v27 = v3;\n
            v27->field_1c->field_0 = v34;\n
            v27->field_1c = v27->field_1c->field_0;\n
            v17 = v11;\n
            if (!cgc_stack_empty() && !v34)\n
            {\n
                v17 = v11;\n
                v3->field_1c->field_4 = cgc_stack_pop_operation_type();\n
                v17 = 24;\n
                v34 = cgc_calloc(24);\n
                v35 = v3;\n
                v35->field_1c->field_0 = v34;\n
                v35->field_1c = v35->field_1c->field_0;\n
            }\n
            v10 = 0;\n
            goto LABEL_40a9bf;\n
        }\n
        if (v10 && v8 == 4)\n
        {\n
            v28 = v3;\n
            v28->field_1c->field_4 = 2;\n
            v28->field_1c->field_c = *((v9 + 4));\n
            v28->field_1c->field_10 = *((v9 + 8));\n
            v17 = 24;\n
            v34 = cgc_calloc(24);\n
            v29 = v3;\n
            v29->field_1c->field_0 = v34;\n
            v29->field_1c = v29->field_1c->field_0;\n
            v17 = v11;\n
            if (!cgc_stack_empty() && !v34)\n
            {\n
                v17 = v11;\n
                v3->field_1c->field_4 = cgc_stack_pop_operation_type();\n
                v17 = 24;\n
                v34 = cgc_calloc(24);\n
                v36 = v3;\n
                v36->field_1c->field_0 = v34;\n
                v36->field_1c = v36->field_1c->field_0;\n
            }\n
            goto LABEL_40a9bf;\n
        }\n
        if (v10 && v8 == 2)\n
        {\n
            v33 = v3;\n
            v32 = &v18;\n
            for (v30 = 9; v30; v33 += v31 * 4)\n
            {\n
                v30 -= 1;\n
                *(v32) = *(v33);\n
                v32 += v31 * 4;\n
            }\n
            v17 = &v7;\n
            cgc_compile_function();\n
            v16 = v3;\n
            v17 = &v7;\n
            v18 = 36;\n
            memcpy(v18, v19, v20);\n
            goto LABEL_40a9bf;\n
        }\n
        if (v10)\n
        {\n
            v3->field_20 = v9;\n
            break;\n
        }\n
        if (v8 == 5)\n
        {\n
LABEL_40a8d7:\n
            v6 = 4 - (v8 == 5);\n
            v17 = v12;\n
            if (!cgc_stack_empty() && !v34)\n
            {\n
                v17 = v12;\n
                v3->field_1c->field_4 = cgc_stack_pop_operation_type();\n
                v17 = 24;\n
                v34 = cgc_calloc(24);\n
                v38 = v3;\n
                v38->field_1c->field_0 = v34;\n
                v38->field_1c = v38->field_1c->field_0;\n
            }\n
            v17 = v12;\n
            v18 = v6;\n
            cgc_stack_push_operation_type(v12);\n
            v10 = 1;\n
            goto LABEL_40a9bf;\n
        }\n
        else\n
        {\n
            if (6 == v8)\n
                goto LABEL_40a8d7;\n
            if (v8 != 7 && v8 != 8)\n
            {\n
                v3->field_20 = v9;\n
                break;\n
            }\n
            v5 = (v8 == 7 ? 6 : 5);\n
            v17 = v11;\n
            v18 = v5;\n
            cgc_stack_push_operation_type();\n
            v10 = 1;\n
LABEL_40a9bf:\n
            v39 = v3;\n
            v4 = &v39->field_0->field_4->field_0;\n
            v9 = *(v4);\n
            v8 = *(v9);\n
            v39->field_0 = &v4;\n
            v40 = v39->field_4;\n
            tmp_15 = v40;\n
            v39->field_8 = v39->field_8 + (tmp_15 + 1 < tmp_15);\n
            v39->field_4 = v40 + 1;\n
            if (v8 == 9)\n
            {\n
LABEL_40aa23:\n
                while (true)\n
                {\n
                    v17 = v12;\n
                    if (!(((cgc_stack_empty() || v34) ^ 255) & 1))\n
                        break;\n
                    v17 = v12;\n
                    v3->field_1c->field_4 = cgc_stack_pop_operation_type();\n
                    v17 = 24;\n
                    v34 = cgc_calloc(24);\n
                    v42 = v3;\n
                    v42->field_1c->field_0 = v34;\n
                    v42->field_1c = v42->field_1c->field_0;\n
                }\n
            }\n
            else\n
            {\n
                if (v8 == 10)\n
                    goto LABEL_40aa23;\n
                if (v8 == 12)\n
                    goto LABEL_40aa23;\n
            }\n
        }\n
    }\n
    return v0;\n
}\n
", "4237993:sub_40aaa9": null, "4238000:cgc_compile_conclusion": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[12];\n
    unsigned int field_10;\n
    char padding_14[12];\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int cgc_compile_conclusion(struct_2 *v2)\n
{\n
    struct_2 *v0;  // [bp-0x10]\n
    struct_2 *v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
    struct_2 *v4;  // eax\n
    struct_2 *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = v1;\n
    memcpy(v1, &v3, 36);\n
    if (v1->field_0->field_0->field_0 != 9)\n
    {\n
        v4 = v1;\n
        v4->field_20 = v4->field_0->field_0;\n
        return v0;\n
    }\n
    v5 = v1;\n
    v5->field_0 = v5->field_0->field_4;\n
    v5->field_10 = v5->field_0->field_0->field_8;\n
    return v0;\n
}\n
", "4238119:sub_40ab27": null, "4238128:cgc_compile_function": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[24];\n
    struct struct_3 *field_1c;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[12];\n
    unsigned int field_14;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compile_function(struct_2 *v10)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_2 *v1;  // [bp-0x44]\n
    struct_2 *v2;  // [bp-0x40]\n
    char v3;  // [bp-0x3c]\n
    unsigned int v4[3];  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    struct_2 *v8;  // [bp-0x4]\n
    struct_4 *v9;  // [bp+0x0], Other Possible Types: unsigned int\n
    char v11;  // [bp+0x8]\n
    unsigned int v12;  // [bp+0xc]\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    struct_2 *v19;  // eax\n
    struct_2 *v20;  // eax\n
    struct_2 *v21;  // eax\n
    unsigned int v22;  // d\n
    struct struct_2 **v23;  // edi, Other Possible Types: unsigned int\n
    struct_2 *v24;  // esi, Other Possible Types: unsigned int\n
    unsigned int v25;  // ecx\n
    struct_2 *v26;  // eax\n
    struct_2 *v27;  // eax\n
    struct_2 *v28;  // eax\n
\n
    v7 = v16;\n
    v6 = v17;\n
    v5 = v18;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v10;\n
    v1 = v2;\n
    memcpy(v2, &v11, 36);\n
    v19 = v2;\n
    v4[0] = v19->field_0->field_0;\n
    v19->field_0 = v19->field_0->field_4;\n
    if (v19->field_0->field_0->field_0 != 11)\n
    {\n
        v20 = v2;\n
        v20->field_20 = v20->field_0->field_0;\n
    }\n
    else\n
    {\n
        v21 = v2;\n
        v21->field_0 = v21->field_0->field_4;\n
        while (true)\n
        {\n
            if (v2->field_0->field_0->field_0 == 12)\n
            {\n
LABEL_40ac31:\n
                v27 = v2;\n
                v27->field_1c->field_4 = 7;\n
                v27->field_1c->field_14 = v4[2];\n
                v9 = 24;\n
                v28 = v2;\n
                v28->field_1c->field_0 = cgc_calloc(24);\n
                v28->field_1c = v28->field_1c->field_0;\n
                break;\n
            }\n
            else\n
            {\n
                v24 = v2;\n
                v23 = &v10;\n
                for (v25 = 9; v25; v24 += v22 * 4)\n
                {\n
                    v25 -= 1;\n
                    *(v23) = *(v24);\n
                    v23 += v22 * 4;\n
                }\n
                v9 = &v3;\n
                cgc_compile_expression(&v3);\n
                v8 = v2;\n
                v9 = &v3;\n
                v10 = 36;\n
                memcpy(v10, *(&v11), v12);\n
                if (v2->field_20)\n
                    break;\n
                if (12 == v2->field_0->field_0->field_0)\n
                    goto LABEL_40ac31;\n
                v26 = v2;\n
                v26->field_0 = v26->field_0->field_4;\n
            }\n
        }\n
    }\n
    return v1;\n
}\n
", "4238456:sub_40ac78": null, "4238464:cgc_operation_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_operation_free(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2)\n
    {\n
        v1 = *(v2);\n
        cgc_free(v2);\n
        return cgc_operation_free(v1);\n
    }\n
    return 0;\n
}\n
", "4238547:sub_40acd3": null, "4238560:cgc_compiler_free": "typedef struct struct_0 {\n
    unsigned int *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compiler_free(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_operation_free(v2->field_0);\n
    cgc_free(v2->field_4);\n
    v4 = v1;\n
    return cgc_free(v2);\n
}\n
", "4238635:sub_40ad2b": null, "4238640:cgc_compile_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compile_str(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = cgc_lex_string(cgc_strlen(v4));\n
    v6 = v3;\n
    return cgc_compile(v2);\n
}\n
", "4238723:sub_40ad83": null, "4238736:cgc_clr_chase": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_clr_chase(unsigned int *v2, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v1 = v2;\n
        return v1;\n
    }\n
    v1 = cgc_clr_chase(*(v2), a0 - 1);\n
    return v1;\n
}\n
", "4238831:sub_40adef": null, "4238832:cgc_assert_operation": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_assert_operation(unsigned int v2, unsigned int a0, unsigned int a1[3])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 != a1[1])\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    v3 = 1;\n
    if (a1[1] == 1)\n
    {\n
        v3 = a0;\n
        if (v3 != a1[2])\n
        {\n
            v0 = -1;\n
            v3 = cgc__terminate();\n
        }\n
    }\n
    return v3;\n
}\n
", "4238951:sub_40ae67": null, "4238960:cgc_compiler_test": "typedef struct struct_0 {\n
    unsigned int *field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compiler_test()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int [4]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_compile_str(\"FIND 2 2 FROM error\");\n
    if (!v1)\n
        cgc__terminate();\n
    if (!v1[3])\n
        cgc__terminate();\n
    v1 = cgc_compile_str(v0 - 12756);\n
    if (!v1)\n
        cgc__terminate();\n
    if (v1->field_c)\n
        cgc__terminate();\n
    cgc_assert_operation(1, 1, cgc_clr_chase(v1->field_0, 0));\n
    cgc_assert_operation(1, 2, cgc_clr_chase(v1->field_0, 1));\n
    cgc_assert_operation(3, 0, cgc_clr_chase(v1->field_0, 2));\n
    v1 = cgc_compile_str(v0 - 12735);\n
    if (!v1)\n
        cgc__terminate();\n
    if (v1->field_c)\n
        cgc__terminate();\n
    cgc_assert_operation(1, 1, cgc_clr_chase(v1->field_0, 0));\n
    cgc_assert_operation(1, 2, cgc_clr_chase(v1->field_0, 1));\n
    cgc_assert_operation(1, 3, cgc_clr_chase(v1->field_0, 2));\n
    cgc_assert_operation(5, 0, cgc_clr_chase(v1->field_0, 3));\n
    cgc_assert_operation(3, 0, cgc_clr_chase(v1->field_0, 4));\n
    cgc_assert_operation(1, 4, cgc_clr_chase(v1->field_0, 5));\n
    cgc_assert_operation(4, 0, cgc_clr_chase(v1->field_0, 6));\n
    v1 = cgc_compile_str(v0 - 12706);\n
    if (!v1)\n
        cgc__terminate();\n
    if (v1->field_c)\n
        cgc__terminate();\n
    cgc_assert_operation(2, 0, cgc_clr_chase(v1->field_0, 0));\n
    cgc_assert_operation(1, 1, cgc_clr_chase(v1->field_0, 1));\n
    cgc_assert_operation(1, 2, cgc_clr_chase(v1->field_0, 2));\n
    v5 = v2;\n
    return cgc_assert_operation(7, 0, cgc_clr_chase(v1->field_0, 3));\n
}\n
", "4240017:sub_40b291": null, "4240032:cgc_eval": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_eval()\n
{\n
}\n
", "4240592:cgc_eval_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_eval_string(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    v3 = cgc_lex_string(cgc_strlen(v5));\n
    v2 = cgc_compile(v3);\n
    v7 = v4;\n
    return cgc_eval();\n
}\n
", "4240692:sub_40b534": null, "4240704:cgc_assert_eval": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_assert_eval(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_eval_string(a0);\n
    v5 = v3;\n
    if (v5 != v1)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v3;\n
}\n
", "4240779:sub_40b58b": null, "4240784:cgc_eval_test": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_eval_test()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_assert_eval(0, \"FIND 1 - 1 FROM dual\");\n
    cgc_assert_eval(6, v0 - 0x3100);\n
    cgc_assert_eval(3, v0 - 12735);\n
    cgc_assert_eval(7, v0 - 12519);\n
    cgc_assert_eval(65, v0 - 12494);\n
    cgc_assert_eval(66, v0 - 12465);\n
    cgc_assert_eval(67, v0 - 12436);\n
    cgc_assert_eval(65, v0 - 12407);\n
    cgc_assert_eval(97, v0 - 12370);\n
    cgc_assert_eval(5, v0 - 12331);\n
    cgc_assert_eval(3, v0 - 12303);\n
    cgc_assert_eval(3, v0 - 12270);\n
    cgc_assert_eval(2, v0 - 12236);\n
    v4 = v1;\n
    return cgc_assert_eval(65, v0 - 12192);\n
}\n
", "4241161:sub_40b709": null, "4241168:cgc_ord": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ord(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_stack_pop_sint32();\n
    v4 = cgc_stack_pop_str();\n
    if (v5 < 1)\n
        cgc__terminate();\n
    v1 = v5;\n
    if (v1 > cgc_strlen(v4))\n
        cgc__terminate();\n
    v3 = v4[1 + v5];\n
    v0 = v3;\n
    return cgc_stack_push_sint32(v7);\n
}\n
", "4241340:sub_40b7bc": null, "4241344:cgc_upcase": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_upcase(unsigned int v9)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    char *v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // ebx\n
\n
    v8 = v10;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = cgc_stack_pop_str();\n
    v6 = cgc_strlen(v7);\n
    v5 = cgc_calloc(v6 + 1);\n
    for (v4 = 0; v4 <= v6; v4 += 1)\n
    {\n
        v3 = v7[v4];\n
        if (!cgc_char_is_lower(v3))\n
            v1 = v3;\n
        else\n
            v1 = v3 - 32;\n
        *((v5 + v4)) = v1;\n
    }\n
    v0 = v5;\n
    v11 = v8;\n
    return cgc_stack_push_str(v9);\n
}\n
", "4241555:sub_40b893": null, "4241568:cgc_downcase": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_downcase(unsigned int v9)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x19]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    char *v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // ebx\n
\n
    v8 = v10;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = cgc_stack_pop_str();\n
    v6 = cgc_strlen(v7);\n
    v5 = cgc_calloc(v6 + 1);\n
    for (v4 = 0; v4 <= v6; v4 += 1)\n
    {\n
        v3 = v7[v4];\n
        if (!cgc_char_is_upper(v3))\n
            v1 = v3;\n
        else\n
            v1 = v3 + 32;\n
        *((v5 + v4)) = v1;\n
    }\n
    v0 = v5;\n
    v11 = v8;\n
    return cgc_stack_push_str(v9);\n
}\n
", "4241779:sub_40b973": null, "4241792:len": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int len(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_stack_pop_str();\n
    v2 = cgc_strlen(v3);\n
    v0 = v2;\n
    v7 = v4;\n
    return cgc_stack_push_sint32(v5);\n
}\n
", "4241875:sub_40b9d3": null, "4241888:cgc_idx": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_idx(unsigned int v8)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char *v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = *(cgc_stack_pop_str());\n
    v5 = cgc_stack_pop_str();\n
    v4 = cgc_strlen(v5);\n
    v3 = 0;\n
    while (true)\n
    {\n
        v10 = v3;\n
        if (v10 > v4)\n
            return v3;\n
        v2 = v5[v3];\n
        if (v2 == v6)\n
        {\n
            v0 = v3 + 1;\n
            v10 = cgc_stack_push_sint32(v8);\n
            return v10;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4242064:cgc_ridx": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ridx(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14]\n
    char *v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = *(cgc_stack_pop_str());\n
    v5 = cgc_stack_pop_str();\n
    v4 = cgc_strlen(v5);\n
    v10 = v4;\n
    while (true)\n
    {\n
        v3 = v10;\n
        if (v3 < 0)\n
            return v10;\n
        v2 = v5[v3];\n
        if (v2 == v6)\n
        {\n
            v0 = v3 + 1;\n
            v10 = cgc_stack_push_sint32(v8);\n
            return v10;\n
        }\n
        v10 = v3 - 1;\n
    }\n
}\n
", "4242237:sub_40bb3d": null, "4242240:cgc_chomp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_chomp(unsigned int v10)\n
{\n
    char *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x22]\n
    char v2;  // [bp-0x21]\n
    unsigned int v3;  // [bp-0x20]\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    char *v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ebx\n
\n
    v9 = v11;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = cgc_stack_pop_str();\n
    v7 = cgc_strlen(v8);\n
    v6 = cgc_calloc(v7 + 1);\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (cgc_char_is_whitespace(v8[v5]))\n
            v2 = 0 != v8[v5];\n
        if (!(v2 & 1))\n
            break;\n
        v5 += 1;\n
    }\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (!cgc_char_is_whitespace(v8[v5]))\n
            v1 = 0 != v8[v5];\n
        if (!(v1 & 1))\n
            break;\n
        v6[v4] = v8[v5];\n
        v5 += 1;\n
        v4 += 1;\n
    }\n
    v0 = v6;\n
    v12 = v9;\n
    return cgc_stack_push_str(v10);\n
}\n
", "4242564:sub_40bc84": null, "4242576:cgc_func_eval": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_func_eval(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_stack_pop_str();\n
    v2 = cgc_eval_string(v3);\n
    v0 = v2;\n
    v7 = v4;\n
    return cgc_stack_push_sint32(v5);\n
}\n
", "4242659:sub_40bce3": null, "4242672:cgc_func_dispatch": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_func_dispatch(unsigned int v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_strcmp(\"ord\", a0))\n
    {\n
        v4 = cgc_ord(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12155, a0))\n
    {\n
        v4 = cgc_upcase(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12148, a0))\n
    {\n
        v4 = cgc_downcase(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12139, a0))\n
    {\n
        v4 = len(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12134, a0))\n
    {\n
        v4 = cgc_idx(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12135, a0))\n
    {\n
        v4 = cgc_ridx(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12130, a0))\n
    {\n
        v4 = cgc_chomp(v2);\n
        return v4;\n
    }\n
    else if (!cgc_strcmp(v0 - 12124, a0))\n
    {\n
        v4 = cgc_func_eval(v2);\n
        return v4;\n
    }\n
    else\n
    {\n
        cgc_protocol_send_str();\n
        v4 = cgc__terminate();\n
        return v4;\n
    }\n
}\n
", "4243175:sub_40bee7": null, "4243184:cgc_lex_string": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lex_string()\n
{\n
    unsigned int v0;  // [bp-0xac]\n
    char v2;  // [bp-0xa4]\n
    char v3;  // [bp-0x25]\n
    unsigned short v4;  // [bp-0x24]\n
    char *v5;  // [bp-0x20]\n
    char *v6;  // [bp-0x1c]\n
    char *v7;  // [bp-0x18]\n
    char *v8;  // [bp-0x14]\n
    char v9;  // [bp-0x10]\n
    struct_0 *v11;  // [bp-0x4]\n
    unsigned int v12;  // [bp+0x0]\n
    char *v13;  // [bp+0x4]\n
    char *v14;  // [bp+0x8]\n
    char *v15;  // [bp+0xc]\n
    char *v16;  // [bp+0x10]\n
    char *v17;  // [bp+0x14]\n
    unsigned int v18;  // [bp+0x18]\n
    char v19;  // [bp+0xc4]\n
    char v20;  // [bp+0xc8]\n
    unsigned int v26;  // [bp+0xfffec]\n
    unsigned int v38;  // ebx\n
    unsigned int v39;  // ebp\n
\n
    v26 += 1;\n
    while (true)\n
    {\n
        v17 = *(&v9);\n
        v16 = v8;\n
        v15 = v7;\n
        v14 = v6;\n
        v13 = v5;\n
        v12 = *(&v4);\n
        if (cgc_remaining_bytes(v13, v14, v15, v16, v17) <= 0)\n
        {\n
            v38 = *(&v19);\n
            v39 = *(&v20);\n
            return;\n
        }\n
        v3 = *(v6);\n
        v12 = v3;\n
        v0 = cgc_classify();\n
        if (v0 <= 11)\n
        {\n
            goto *(((stack_base)[168] + (stack_base)[172] * 4 - 12088)) + (stack_base)[168];\n
        }\n
        else\n
        {\n
            v18 = *(&v9);\n
            v17 = v8;\n
            v16 = v7;\n
            v15 = v6;\n
            v14 = v5;\n
            v13 = *(&v4);\n
            v12 = &v2;\n
            cgc_lexer_error(v13, v14, v15, v16, v17, v18);\n
            v11 = &v4;\n
            v12 = &v2;\n
            v13 = 24;\n
            memcpy(v13, v14, v15);\n
        }\n
    }\n
}\n
", "4243894:sub_40c1b6": null, "4243904:cgc_remaining_bytes": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_remaining_bytes()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned short v1;  // [bp-0x8]\n
    unsigned short v2;  // [bp-0x6]\n
    unsigned int v3;  // [bp+0x4]\n
    char v4;  // [bp+0x18]\n
    struct_0 *v5;  // eax\n
\n
    v0 = &v3;\n
    if (v4)\n
    {\n
        v2 = 0;\n
        return;\n
    }\n
    v5 = v0;\n
    v1 = v5->field_8 - v5->field_4;\n
    v2 = v5->field_0 - v1;\n
    return;\n
}\n
", "4243974:sub_40c206": null, "4243984:cgc_classify": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_classify()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3 - 32;\n
    if (v1 <= 63)\n
    {\n
        goto *(((stack_base)[20] + (stack_base)[16] * 4 - 12040)) + (stack_base)[20];\n
    }\n
    else if (cgc_char_is_num(v3))\n
    {\n
        v2 = 1;\n
        return;\n
    }\n
    else if (!cgc_char_is_alpha(v3))\n
    {\n
        v2 = 12;\n
        return;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return;\n
    }\n
}\n
", "4244251:sub_40c31b": null, "4244256:cgc_lex_single_byte": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_3 *field_8;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lex_single_byte(struct_1 *v8)\n
{\n
    struct_4 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_1 *v2;  // [bp-0x20]\n
    struct_1 *v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    struct_2 *v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x8]\n
    char v9;  // [bp+0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int *v11;  // ecx\n
    struct_1 *v12;  // eax\n
    struct_2 *v13;  // eax\n
    struct_1 *v14;  // ecx\n
\n
    v7 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v8;\n
    v3 = v2;\n
    v0 = &v9;\n
    memcpy(v2, &v9, 24);\n
    v11 = cgc_calloc(8);\n
    v12 = v2;\n
    v12->field_10->field_4 = v11;\n
    v6 = v11;\n
    v12->field_10 = &v6;\n
    v13 = cgc_calloc(12);\n
    *(v6) = v13;\n
    v5 = v13;\n
    v4 = v0->field_8->field_0;\n
    v5->field_0 = cgc_get_single_byte_flavor();\n
    v5->field_4 = 1;\n
    v14 = v2;\n
    v5->field_8 = cgc_calloc(2);\n
    v5->field_8->field_0 = v4;\n
    v14->field_8 = v14->field_8 + 1;\n
    return v3;\n
}\n
", "4244476:sub_40c3fc": null, "4244480:cgc_lex_character_literal": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[7];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lex_character_literal(struct_2 *v11)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_2 *v1;  // [bp-0x2c]\n
    struct_2 *v2;  // [bp-0x28]\n
    struct_3 *v3;  // [bp-0x24]\n
    unsigned short v4;  // [bp-0x1e]\n
    struct_0 *v5;  // [bp-0x1c]\n
    unsigned int *v6;  // [bp-0x18]\n
    unsigned short v7;  // [bp-0x12]\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    char v12;  // [bp+0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int *v14;  // ecx\n
    struct_2 *v15;  // eax\n
    struct_0 *v16;  // eax\n
    struct_2 *v17;  // ecx\n
    unsigned int v18;  // ebx\n
\n
    v10 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v11;\n
    v2 = v1;\n
    v3 = &v12;\n
    memcpy(v1, &v12, 24);\n
    v9 = v3->field_8;\n
    v8 = v9 + 1;\n
    for (v7 = 0; *(v8) != 39; v8 += 1)\n
    {\n
        v7 += 1;\n
    }\n
    v14 = cgc_calloc(8);\n
    v15 = v1;\n
    v15->field_10->field_4 = v14;\n
    v6 = v14;\n
    v15->field_10 = &v6;\n
    v16 = cgc_calloc(12);\n
    *(v6) = v16;\n
    v5 = v16;\n
    v5->field_0 = 4;\n
    v5->field_4 = v7;\n
    v5->field_8 = cgc_calloc(v7 + 1);\n
    for (v4 = 0; v4 < v7; v4 += 1)\n
    {\n
        *((v5->field_8 + v4)) = *((v9 + v4 + 1));\n
    }\n
    v17 = v1;\n
    v17->field_8 = v7 + 2 + v17->field_8;\n
    v18 = v10;\n
    return v2;\n
}\n
", "4244798:sub_40c53e": null, "4244800:cgc_lex_word": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lex_word(struct_1 *v12)\n
{\n
    char *v0;  // [bp-0x48]\n
    char v1;  // [bp-0x31]\n
    unsigned int v2;  // [bp-0x30]\n
    struct_1 *v3;  // [bp-0x2c]\n
    struct_1 *v4;  // [bp-0x28]\n
    struct_3 *v5;  // [bp-0x24]\n
    struct_5 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned short v8;  // [bp-0x16]\n
    char *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0x8]\n
    char v13;  // [bp+0x8]\n
    unsigned int v14;  // ebx\n
    struct_3 *v15;  // eax\n
    unsigned int *v16;  // ecx\n
    struct_1 *v17;  // eax\n
    struct_2 *v18;  // eax\n
    struct_1 *v19;  // ecx\n
\n
    v11 = v14;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v12;\n
    v4 = v3;\n
    v5 = &v13;\n
    memcpy(v3, &v13, 24);\n
    v15 = v5;\n
    v10 = &v15->field_8->field_0;\n
    v9 = &v15->field_8->field_0;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (!cgc_char_is_alpha(*(v9)))\n
            v1 = cgc_char_is_num(*(v9));\n
        if (!(v1 & 1))\n
            break;\n
        v8 += 1;\n
        v9 += 1;\n
    }\n
    v16 = cgc_calloc(8);\n
    v17 = v3;\n
    v17->field_10->field_4 = v16;\n
    v7 = v16;\n
    v17->field_10 = &v7;\n
    v18 = cgc_calloc(12);\n
    *(v7) = v18;\n
    v6 = &v18->field_0;\n
    v6->field_4 = v8;\n
    v6->field_8 = cgc_calloc(v8 + 1);\n
    v0 = v10;\n
    cgc_memcpy(v6->field_8, v0, v8);\n
    v19 = v3;\n
    v6->field_0 = cgc_get_flavor(v6, v0);\n
    v19->field_8 = v8 + v19->field_8;\n
    return v4;\n
}\n
", "4245159:sub_40c6a7": null, "4245168:cgc_lex_number": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_4 *field_8;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lex_number(struct_1 *v11)\n
{\n
    char v0;  // [bp-0x2d]\n
    unsigned int v1;  // [bp-0x2c]\n
    struct_1 *v2;  // [bp-0x28]\n
    struct_1 *v3;  // [bp-0x24]\n
    struct_3 *v4;  // [bp-0x20]\n
    struct_2 *v5;  // [bp-0x1c]\n
    unsigned int *v6;  // [bp-0x18]\n
    unsigned short v7;  // [bp-0x12]\n
    char *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    char v12;  // [bp+0x8]\n
    unsigned int v13;  // ebx\n
    struct_3 *v14;  // eax\n
    unsigned int *v15;  // ecx\n
    struct_1 *v16;  // eax\n
    struct_5 *v17;  // eax\n
    unsigned int v18;  // ebx\n
\n
    v10 = v13;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v11;\n
    v3 = v2;\n
    v4 = &v12;\n
    memcpy(v2, &v12, 24);\n
    v14 = v4;\n
    v9 = &v14->field_8->field_0;\n
    v8 = &v14->field_8->field_0;\n
    v7 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_char_is_num(*(v8)))\n
            v0 = v7 <= 5;\n
        if (!(v0 & 1))\n
            break;\n
        v7 += 1;\n
        v8 += 1;\n
    }\n
    v15 = cgc_calloc(8);\n
    v16 = v2;\n
    v16->field_10->field_4 = v15;\n
    v6 = v15;\n
    v16->field_10 = &v6;\n
    v17 = cgc_calloc(12);\n
    *(v6) = v17;\n
    v5 = &v17->field_0;\n
    v5->field_4 = v7;\n
    v5->field_8 = cgc_calloc(v7 + 1);\n
    cgc_memcpy(v5->field_8, v9, v7);\n
    v5->field_0 = 3;\n
    v2->field_8 = v8;\n
    v18 = v10;\n
    return v3;\n
}\n
", "4245493:sub_40c7f5": null, "4245504:cgc_lexer_error": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    char field_14;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lexer_error(struct_2 *v7)\n
{\n
    struct_2 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_4 *v2;  // [bp-0x18]\n
    struct_2 *v3;  // [bp-0x14]\n
    struct_5 *v4;  // [bp-0x10]\n
    unsigned int *v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    char v8;  // [bp+0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int *v10;  // ecx\n
    struct_2 *v11;  // eax\n
    struct_3 *v12;  // eax\n
    struct_0 *v13;  // ecx\n
    unsigned int v14;  // ebx\n
\n
    v6 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v7;\n
    v3 = v0;\n
    v2 = &v8;\n
    memcpy(v0, &v8, 24);\n
    v0->field_14 = 1;\n
    v10 = cgc_calloc(8);\n
    v11 = v0;\n
    v11->field_10->field_4 = v10;\n
    v5 = v10;\n
    v11->field_10 = &v5;\n
    v12 = cgc_calloc(12);\n
    v13 = v2;\n
    *(v5) = v12;\n
    v4 = &v12->field_0;\n
    v4->field_0 = 0;\n
    v4->field_4 = (v13->field_8 - v13->field_4) + 1;\n
    v4->field_8 = cgc_calloc(v4->field_4 + 1);\n
    cgc_memcpy(v4->field_8, v2->field_8, v4->field_4 - 1);\n
    v14 = v6;\n
    return v3;\n
}\n
", "4245742:sub_40c8ee": null, "4245744:cgc_free_lexer_list": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_lexer_list(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_free_lexeme();\n
    v1 = v3->field_4;\n
    if (v1)\n
    {\n
        cgc_free(v3);\n
        return cgc_free_lexer_list(v1);\n
    }\n
    return 0;\n
}\n
", "4245840:cgc_free_lexeme": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_lexeme(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1)\n
    {\n
        cgc_free(v1->field_8);\n
        return cgc_free(v1);\n
    }\n
    return 0;\n
}\n
", "4245918:sub_40c99e": null, "4245920:cgc_get_flavor": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_flavor(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x17]\n
    unsigned short v2;  // [bp-0x16]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = &v6->field_8->field_0;\n
    if (v6->field_4 == 2)\n
    {\n
        v5 = cgc_get_single_byte_flavor();\n
        return v5;\n
    }\n
    else if (!cgc_strcmp(v0 - 11752, v4))\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (cgc_strcmp(v0 - 11747, v4))\n
    {\n
        v3 = cgc_get_single_byte_flavor();\n
        if (v3 != 3 && v3 != 2)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v2 = 1;\n
        while (true)\n
        {\n
            if (v2 < v6->field_4 - 1)\n
            {\n
                v1 = v4[v2];\n
                if (!cgc_char_is_num(v1) && v3 == 3)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                if (!cgc_char_is_alpha(v1) && !cgc_char_is_num(v1) && v1 != 95 && v3 == 2)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = v3;\n
                return v5;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v5 = 9;\n
        return v5;\n
    }\n
}\n
", "4246347:sub_40cb4b": null, "4246352:cgc_get_single_byte_flavor": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_single_byte_flavor()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3 - 40;\n
    if (v1 <= 7)\n
    {\n
        goto *(((stack_base)[20] + (stack_base)[16] * 4 - 11784)) + (stack_base)[20];\n
    }\n
    else if (cgc_char_is_num(v3))\n
    {\n
        v2 = 3;\n
        return;\n
    }\n
    else if (!cgc_char_is_alpha(v3))\n
    {\n
        v2 = 0;\n
        return;\n
    }\n
    else\n
    {\n
        v2 = 2;\n
        return;\n
    }\n
}\n
", "4246583:sub_40cc37": null, "4246592:cgc_assert_lexeme_flavor": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_assert_lexeme_flavor(unsigned int v3, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = *(a0);\n
    v4 = v3;\n
    if (v4 != v2)\n
    {\n
        v0 = -1;\n
        v4 = cgc__terminate();\n
    }\n
    return v4;\n
}\n
", "4246661:sub_40cc85": null, "4246672:cgc_assert_lex": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_assert_lex(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    v3 = cgc_lex_string(cgc_strlen(a0));\n
    if (!v5 && !v3)\n
        return 0;\n
    v2 = *(v3)->field_0;\n
    v7 = v5;\n
    if (v7 != v2)\n
    {\n
        v7 = cgc__terminate();\n
        return v7;\n
    }\n
    return v5;\n
}\n
", "4246807:sub_40cd17": null, "4246816:cgc_lex_chase": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lex_chase(unsigned int v2[2], unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v1 = v2[0];\n
        return v1;\n
    }\n
    v1 = cgc_lex_chase(v2[1], a0 - 1);\n
    return v1;\n
}\n
", "4246914:sub_40cd82": null, "4246928:cgc_lexer_test": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lexer_test()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    char *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned short v8;  // cx\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = &v4;\n
    cgc_assert_lex(1, \"FIND\");\n
    cgc_assert_lex(3, v0 - 11730);\n
    cgc_assert_lex(3, v0 - 11672);\n
    cgc_assert_lex(3, v0 - 11742);\n
    cgc_assert_lex(3, v0 - 11732);\n
    cgc_assert_lex(0, v0 - 11731);\n
    cgc_assert_lex(5, v0 - 11735);\n
    cgc_assert_lex(5, v0 - 11733);\n
    cgc_assert_lex(6, v0 - 11728);\n
    cgc_assert_lex(7, v0 - 11726);\n
    cgc_assert_lex(8, v0 - 11724);\n
    cgc_assert_lex(9, v0 - 11747);\n
    cgc_assert_lex(2, v0 - 12241);\n
    cgc_assert_lex(2, v0 - 11686);\n
    cgc_assert_lex(11, v0 - 11722);\n
    cgc_assert_lex(10, v0 - 11720);\n
    cgc_assert_lex(12, v0 - 11718);\n
    cgc_assert_lex(4, v0 - 11716);\n
    v2 = v0 - 11710;\n
    v8 = cgc_strlen(v2);\n
    v1[0] = cgc_lex_string(v9);\n
    cgc_assert_lexeme_flavor(1, cgc_lex_chase(v1, 0));\n
    cgc_assert_lexeme_flavor(3, cgc_lex_chase(v1, 1));\n
    cgc_assert_lexeme_flavor(5, cgc_lex_chase(v1, 2));\n
    cgc_assert_lexeme_flavor(3, cgc_lex_chase(v1, 3));\n
    cgc_assert_lexeme_flavor(8, cgc_lex_chase(v1, 4));\n
    cgc_assert_lexeme_flavor(3, cgc_lex_chase(v1, 5));\n
    cgc_assert_lexeme_flavor(7, cgc_lex_chase(v1, 6));\n
    cgc_assert_lexeme_flavor(3, cgc_lex_chase(v1, 7));\n
    cgc_assert_lexeme_flavor(9, cgc_lex_chase(v1, 8));\n
    cgc_assert_lexeme_flavor(2, cgc_lex_chase(v1, 9));\n
    v2 = v0 - 11666;\n
    v1[0] = cgc_lex_string(cgc_strlen(v2));\n
    cgc_assert_lexeme_flavor(4, cgc_lex_chase(v1, 1));\n
    v2 = v0 - 11640;\n
    v1[0] = cgc_lex_string(cgc_strlen(v2));\n
    cgc_assert_lexeme_flavor(1, cgc_lex_chase(v1, 0));\n
    cgc_assert_lexeme_flavor(2, cgc_lex_chase(v1, 1));\n
    cgc_assert_lexeme_flavor(11, cgc_lex_chase(v1, 2));\n
    cgc_assert_lexeme_flavor(4, cgc_lex_chase(v1, 3));\n
    cgc_assert_lexeme_flavor(10, cgc_lex_chase(v1, 4));\n
    cgc_assert_lexeme_flavor(3, cgc_lex_chase(v1, 5));\n
    cgc_assert_lexeme_flavor(10, cgc_lex_chase(v1, 6));\n
    cgc_assert_lexeme_flavor(3, cgc_lex_chase(v1, 7));\n
    cgc_assert_lexeme_flavor(12, cgc_lex_chase(v1, 8));\n
    cgc_assert_lexeme_flavor(9, cgc_lex_chase(v1, 9));\n
    v11 = v5;\n
    return cgc_assert_lexeme_flavor(2, cgc_lex_chase(v1, 10));\n
}\n
", "4248467:sub_40d393": null, "4248480:cgc_protocol_send_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_protocol_send_str(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_strlen(v4);\n
    v0 = 2;\n
    cgc_tx(&v2);\n
    v0 = v2;\n
    v6 = v3;\n
    return cgc_tx(v4);\n
}\n
", "4248570:sub_40d3fa": null, "4248576:cgc_tx": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tx(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a0; v4 = v3 + v4)\n
    {\n
        v3 = 0;\n
        v0 = &v3;\n
        v2 = cgc_transmit(1, v5 + v4, a0 - v4);\n
        if (v2)\n
            cgc__terminate();\n
        if (!v3)\n
            cgc__terminate();\n
    }\n
    return v4;\n
}\n
", "4248745:sub_40d4a9": null, "4248752:cgc_protocol_with_recv_string": "typedef struct struct_2 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
    char padding_-c[4294967296];\n
    unsigned int field_fffffff4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40d529;\n
\n
int cgc_protocol_with_recv_string(struct_1 *v11)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    struct_2 *v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned short v6;  // [bp-0x16]\n
    unsigned short *v7;  // [bp-0x14]\n
    char v8;  // [bp-0xe]\n
    unsigned int v9;  // [bp-0x8]\n
    struct_1 *v10;  // [bp+0x0]\n
    struct_2 *v12;  // [bp+0x8]\n
    unsigned int v13;  // ebx\n
    unsigned short v14;  // dx\n
    unsigned int v15;  // edx\n
\n
    v9 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = &v8;\n
    v0 = 2;\n
    cgc_rx(v7);\n
    v6 = *(v7);\n
    v5 = &v1;\n
    v4 = v6;\n
    v3 = &(&v1)[-1 * (v4 + 15 & -0x10)];\n
    *(&v3->padding_-c[8]) = v3;\n
    *(&v3->padding_-c[4]) = v6;\n
    *(&v3->padding_-c[12]) = &g_40d529;\n
    cgc_rx();\n
    v14 = v6;\n
    v10 = v11;\n
    v11 = v15;\n
    v12 = v3;\n
    v10->field_c(v11, v12);\n
    return v5;\n
}\n
", "4248926:sub_40d55e": null, "4248928:cgc_rx": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rx(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a0; v4 = v3 + v4)\n
    {\n
        v3 = 0;\n
        v0 = &v3;\n
        v2 = cgc_receive(0, v5 + v4, a0 - v4);\n
        if (v2)\n
            cgc__terminate();\n
        if (!v3)\n
            cgc__terminate();\n
    }\n
    return v4;\n
}\n
", "4249099:sub_40d60b": null, "4249104:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_types_check();\n
    cgc_lexer_test();\n
    cgc_stack_test();\n
    cgc_compiler_test();\n
    cgc_eval_test();\n
    cgc_say_hello();\n
    cgc_run_loop(); /* do not return */\n
}\n
", "4249192:sub_40d668": "int sub_40d668()\n
{\n
    char v1;  // [bp+0x14]\n
    char v2;  // [bp+0x18]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebp\n
\n
    v3 = *(&v1);\n
    v4 = *(&v2);\n
    return;\n
}\n
", "4249200:cgc_say_hello": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_say_hello()\n
{\n
    unsigned int v0;  // [bp-0xe4]\n
    unsigned int v1;  // [bp-0xe0]\n
    unsigned int v2;  // [bp-0xdc]\n
    unsigned int v3;  // [bp-0xd8]\n
    unsigned int v4;  // [bp-0xc8]\n
    char v5;  // [bp-0xc4]\n
    unsigned int v6;  // [bp-0x74]\n
    unsigned int v7;  // [bp-0x70]\n
    unsigned int v8;  // [bp-0x6c]\n
    unsigned short v9;  // [bp-0x66]\n
    char v10;  // [bp-0x64]\n
    char v11[4];  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v11[0]) = 0x4347c000;\n
    v0 = v11[0];\n
    v1 = v11[1];\n
    v2 = v11[2];\n
    v3 = v11[3];\n
    v9 = cgc_sprintf(&v10, \"FIND $d + $d + $d + $d FROM dual\");\n
    v8 = cgc_lex_string(v9);\n
    v7 = cgc_compile(v8);\n
    v6 = cgc_eval();\n
    v0 = v6;\n
    v9 = cgc_sprintf(&v5, v4 - 11568);\n
    return cgc_protocol_send_str(&v5);\n
}\n
", "4249455:sub_40d76f": null, "4249456:cgc_run_loop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_run_loop()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        cgc_protocol_with_recv_string(v0 - 304);\n
    }\n
}\n
", "4249505:sub_40d7a1": null, "4249520:__cgc_run_loop_block_invoke": "typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cgc_run_loop_block_invoke(unsigned int v9, unsigned short a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    char *v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    struct_1 *v6;  // [bp-0x14]\n
    struct struct_0 **v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned short v10;  // cx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = v9;\n
    if (a0 == 4 && !cgc_strcmp(v1 - 11541, a1))\n
        cgc__terminate();\n
    v10 = a0;\n
    v7 = cgc_lex_string(v11);\n
    if (!*(v7)->field_0)\n
    {\n
        v12 = cgc_protocol_send_str(v1 - 11536);\n
        return v12;\n
    }\n
    v6 = cgc_compile(v7);\n
    if (v6->field_c)\n
    {\n
        v12 = cgc_protocol_send_str(v1 - 11524);\n
        return v12;\n
    }\n
    v5 = cgc_eval();\n
    v4 = cgc_calloc(16);\n
    v0 = v5;\n
    v13 = cgc_sprintf(v4, v1 - 11555);\n
    v2 = v13;\n
    v3 = v13 >> 31;\n
    cgc_protocol_send_str(v4);\n
    v12 = cgc_free(v4);\n
    return v12;\n
}\n
", "4249850:sub_40d8fa": null, "4249856:cgc_stack_create": "int cgc_stack_create()\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
\n
    v0[0] = cgc_calloc(16);\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    return v0;\n
}\n
", "4249918:sub_40d93e": null, "4249920:cgc_stack_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_stack_free(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2)\n
    {\n
        v1 = *(v2);\n
        cgc_free(v2);\n
        return cgc_stack_free(v1);\n
    }\n
    return 0;\n
}\n
", "4250003:sub_40d993": null, "4250016:cgc_stack_next": "int cgc_stack_next(struct struct_0 **v2)\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // edx\n
\n
    v0 = v2;\n
    if (!(!cgc_stack_empty() && !v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = *(v2)->field_4;\n
    return v1;\n
}\n
", "4250095:sub_40d9ef": null, "4250096:cgc_stack_empty": "int cgc_stack_empty(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8]\n
\n
    if (!*(v2))\n
    {\n
        v1 = 0;\n
        v0 = 1;\n
        return v0;\n
    }\n
    v1 = 0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4250162:sub_40da32": null, "4250176:cgc_stack_push_sint32": "int cgc_stack_push_sint32(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v1[0] = cgc_calloc(16);\n
    v0 = *(v2);\n
    v1[0] = v0;\n
    v1[1] = 1;\n
    v1[2] = a0;\n
    *(v2) = v1;\n
    return v2;\n
}\n
", "4250265:sub_40da99": null, "4250272:cgc_stack_push_uint64": "int cgc_stack_push_uint64(unsigned int *v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[4];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5[4];  // eax\n
\n
    v2 = a0;\n
    v3 = a1;\n
    v1[0] = cgc_calloc(16);\n
    v0 = *(v4);\n
    v1[0] = v0;\n
    v1[1] = 2;\n
    v5 = v1;\n
    v5[3] = v3;\n
    v5[2] = v2;\n
    *(v4) = v1;\n
    return v4;\n
}\n
", "4250377:sub_40db09": null, "4250384:cgc_stack_push_sint64": "int cgc_stack_push_sint64(unsigned int *v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[4];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5[4];  // eax\n
\n
    v2 = a0;\n
    v3 = a1;\n
    v1[0] = cgc_calloc(16);\n
    v0 = *(v4);\n
    v1[0] = v0;\n
    v1[1] = 3;\n
    v5 = v1;\n
    v5[3] = v3;\n
    v5[2] = v2;\n
    *(v4) = v1;\n
    return v4;\n
}\n
", "4250489:sub_40db79": null, "4250496:cgc_stack_push_lexeme_flavor": "int cgc_stack_push_lexeme_flavor(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v1[0] = cgc_calloc(16);\n
    v0 = *(v2);\n
    v1[0] = v0;\n
    v1[1] = 4;\n
    v1[2] = a0;\n
    *(v2) = v1;\n
    return v2;\n
}\n
", "4250585:sub_40dbd9": null, "4250592:cgc_stack_push_operation_type": "int cgc_stack_push_operation_type(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v1[0] = cgc_calloc(16);\n
    v0 = *(v2);\n
    v1[0] = v0;\n
    v1[1] = 5;\n
    v1[2] = a0;\n
    *(v2) = v1;\n
    return v2;\n
}\n
", "4250681:sub_40dc39": null, "4250688:cgc_stack_push_str": "int cgc_stack_push_str(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v1[0] = cgc_calloc(16);\n
    v0 = *(v2);\n
    v1[0] = v0;\n
    v1[1] = 6;\n
    v1[2] = a0;\n
    *(v2) = v1;\n
    return v2;\n
}\n
", "4250777:sub_40dc99": null, "4250784:cgc_stack_pop_sint32": "int cgc_stack_pop_sint32(struct struct_0 **v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc]\n
\n
    v2[0] = *(v3);\n
    v1 = *(v3)->field_0;\n
    v0 = v2[2];\n
    *(v3) = v1;\n
    cgc_free(v2);\n
    return v0;\n
}\n
", "4250861:sub_40dced": null, "4250864:cgc_stack_pop_uint64": "int cgc_stack_pop_uint64(struct struct_0 **v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3[4];  // [bp-0xc]\n
    unsigned int v5[4];  // ecx\n
\n
    v3[0] = *(v4);\n
    v2 = *(v4)->field_0;\n
    v5 = v3;\n
    v1 = v5[3];\n
    v0 = v5[2];\n
    *(v4) = v2;\n
    cgc_free(v3);\n
    return v0;\n
}\n
", "4250951:sub_40dd47": null, "4250960:cgc_stack_pop_sint64": "int cgc_stack_pop_sint64(struct struct_0 **v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3[4];  // [bp-0xc]\n
    unsigned int v5[4];  // ecx\n
\n
    v3[0] = *(v4);\n
    v2 = *(v4)->field_0;\n
    v5 = v3;\n
    v1 = v5[3];\n
    v0 = v5[2];\n
    *(v4) = v2;\n
    cgc_free(v3);\n
    return v0;\n
}\n
", "4251047:sub_40dda7": null, "4251056:cgc_stack_pop_lexeme_flavor": "int cgc_stack_pop_lexeme_flavor(struct struct_0 **v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc]\n
\n
    v2[0] = *(v3);\n
    v1 = *(v3)->field_0;\n
    v0 = v2[2];\n
    *(v3) = v1;\n
    cgc_free(v2);\n
    return v0;\n
}\n
", "4251133:sub_40ddfd": null, "4251136:cgc_stack_pop_operation_type": "int cgc_stack_pop_operation_type(struct struct_0 **v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc]\n
\n
    v2[0] = *(v3);\n
    v1 = *(v3)->field_0;\n
    v0 = v2[2];\n
    *(v3) = v1;\n
    cgc_free(v2);\n
    return v0;\n
}\n
", "4251213:sub_40de4d": null, "4251216:cgc_stack_pop_str": "int cgc_stack_pop_str(struct struct_0 **v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc]\n
\n
    v2[0] = *(v3);\n
    v1 = *(v3)->field_0;\n
    v0 = v2[2];\n
    *(v3) = v1;\n
    cgc_free(v2);\n
    return v0;\n
}\n
", "4251293:sub_40de9d": null, "4251296:cgc_assert_lexeme_flavor_equal": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_assert_lexeme_flavor_equal(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 != a0)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
        return cgc_assert_uint64_equal();\n
    }\n
    return v2;\n
}\n
", "4251360:cgc_assert_uint64_equal": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_assert_uint64_equal(unsigned int v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!(!(v2 ^ a1) && !(a0 ^ a2)))\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
        return cgc_refute_uint64_equal();\n
    }\n
    return v2 ^ a1 | a0 ^ a2;\n
}\n
", "4251456:cgc_refute_uint64_equal": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_refute_uint64_equal(unsigned int v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!(!(!(v2 ^ a1)) || !(!(a0 ^ a2))))\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
        return cgc_stack_test();\n
    }\n
    return v2 ^ a1 | a0 ^ a2;\n
}\n
", "4251552:cgc_stack_test": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_stack_test()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_stack_create();\n
    cgc_refute_uint64_equal(0, 0, cgc_stack_empty(v1), v5);\n
    cgc_stack_push_uint64(v1, 12345, 0);\n
    cgc_assert_uint64_equal(0, 0, cgc_stack_empty(v1), v5);\n
    cgc_assert_uint64_equal(12345, 0, cgc_stack_pop_uint64(v1), v5);\n
    cgc_refute_uint64_equal(0, 0, cgc_stack_empty(v1), v5);\n
    cgc_stack_push_uint64(v1, 444, 0);\n
    cgc_assert_uint64_equal(0, 0, cgc_stack_empty(v1), v5);\n
    cgc_stack_push_lexeme_flavor(v1, 7);\n
    cgc_assert_lexeme_flavor_equal(7, cgc_stack_pop_lexeme_flavor(v1));\n
    cgc_assert_uint64_equal(0, 0, cgc_stack_empty(v1), v5);\n
    cgc_assert_uint64_equal(444, 0, cgc_stack_pop_uint64(v1), v5);\n
    v6 = v2;\n
    return cgc_refute_uint64_equal(0, 0, cgc_stack_empty(v1), v5);\n
}\n
", "4252061:sub_40e19d": null, "4252064:cgc_types_check": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_types_check()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc_chk(1);\n
    v0 = 1;\n
    cgc_chk(1);\n
    v0 = 2;\n
    cgc_chk(2);\n
    v0 = 2;\n
    cgc_chk(2);\n
    v0 = 4;\n
    cgc_chk(4);\n
    v0 = 4;\n
    cgc_chk(4);\n
    v0 = 8;\n
    cgc_chk(8);\n
    v0 = 8;\n
    cgc_chk(8);\n
    v0 = 4;\n
    cgc_chk(4);\n
    v0 = 8;\n
    v5 = v2;\n
    return cgc_chk(8);\n
}\n
", "4252319:sub_40e29f": null, "4252320:cgc_chk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_chk(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 == a0)\n
        return v2;\n
    v0 = -1;\n
    cgc__terminate();\n
}\n
", "4252384:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_log10": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}