{"4202496:_init": "extern struct_0 *g_4092e4;\n
\n
int _init()\n
{\n
    if (g_4092e4)\n
    {\n
        g_4092e4();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202688:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202704:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202720:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202736:sub_4020f0": "int sub_4020f0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202742:sub_4020f6": null, "4202752:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202795:sub_40212b": null, "4202796:sub_40212c": "int sub_40212c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202800:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202804:sub_402134": null, "4202816:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29099;\n
    v6 = v5 + 16;\n
    v7 = v5 + 16;\n
    if (v7 == v6)\n
        return v5 + 16;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202867:sub_402173": "int sub_402173()\n
{\n
}\n
", "4202873:sub_402179": "int sub_402179()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202880:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 29035;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 16;\n
    v9 = (v6 + 16 - (v6 + 16) >> 31) + (16 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202951:sub_4021c7": "int sub_4021c7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202960:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4092e0;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4092e0)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020f0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203035:sub_40221b": "int sub_40221b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203040:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203049:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203053:sub_40222d": null, "4203056:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4203148:sub_40228c": null, "4203152:cgc_malloc": "typedef struct struct_1 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_1 *v1;  // [bp-0x2c]\n
    struct struct_0 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_0 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_54->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_54 == v9)\n
        {\n
            v1->field_54 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_54 == v9)\n
    {\n
        v1->field_54 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4203835:sub_40253b": null, "4203840:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_54;\n
    v7->field_54 = v3;\n
    return v3;\n
}\n
", "4204040:sub_402608": null, "4204048:cgc_free": "typedef struct struct_0 {\n
    char padding_0[84];\n
    struct struct_1 *field_54;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct_0 *, unsigned int, struct struct_1 **, struct struct_1 *[2]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_54 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_54 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_54;\n
    v2[1] = 0;\n
    if (v9->field_54)\n
    {\n
        v12 = v1;\n
        *((&v12->field_54->field_0 + (v12->field_54->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_54 = v7;\n
    return v1;\n
}\n
", "4204512:cgc_floor": "typedef struct struct_0 {\n
    char padding_0[84];\n
    struct struct_1 *field_54;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct_0 *, unsigned int, struct struct_1 **, struct struct_1 *[2]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_54 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_54 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_54;\n
    v2[1] = 0;\n
    if (v9->field_54)\n
    {\n
        v12 = v1;\n
        *((&v12->field_54->field_0 + (v12->field_54->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_54 = v7;\n
    return v1;\n
}\n
", "4204676:sub_402884": null, "4204688:cgc_round_away_from_zero": null, "4204842:sub_40292a": null, "4204848:cgc_round": null, "4204992:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4205064:sub_402a08": null, "4205072:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205126:sub_402a46": null, "4205136:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205190:sub_402a86": null, "4205200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4205266:sub_402ad2": null, "4205280:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4205346:sub_402b22": null, "4205360:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205414:sub_402b66": null, "4205424:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4205518:sub_402bce": null, "4205520:cgc_isnan": null, "4205543:sub_402be7": null, "4205552:cgc_isinf": null, "4205599:sub_402c1f": null, "4205600:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_402e52:\n
                v15 = v5;\n
                v3 = v15;\n
                if (![D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_402e2b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_402e2b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_402e2b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_402e52;\n
                if (!v4)\n
                {\n
LABEL_402da7:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_402e2b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_402da7;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_402e2b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4206188:sub_402e6c": null, "4206192:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    int tmp_27;  // tmp #27\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v9)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 1;\n
    for (v3 = 0; cgc_isspace(*(v9)); v9 += 1);\n
    for (v4 = 0; *(v9); v9 += 1)\n
    {\n
        if (*(v9) == 45)\n
        {\n
            if (!v4)\n
            {\n
                v5 = -1;\n
                v4 += 1;\n
            }\n
            else\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v9) != 43)\n
            {\n
                if (!cgc_isdigit(*(v9)))\n
                    break;\n
                if (v4 && v4 != 1)\n
                {\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                v4 = 1;\n
                v0 = v7;\n
                v10 = v6 * 10;\n
                tmp_27 = v10;\n
                v12 = (v6 * 10 >> 32) + v0 * 10 + (*(v9) - 48 >> 31) + (tmp_27 + *(v9) - 48 < tmp_27);\n
                v6 = v10 + *(v9) - 48;\n
                v7 = v12;\n
                v3 += 1;\n
                if (v3 == 10)\n
                    break;\n
            }\n
            else if (!v4)\n
            {\n
                v4 += 1;\n
            }\n
            else\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
        }\n
    }\n
    v13 = v6;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (0x7fffffff<32> < esi<4>))), Conv(1->32, (0x7fffffff<32> < esi<4>))))\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v2 = v6;\n
    v2 *= v5;\n
    v8 = v2;\n
    return v8;\n
}\n
", "4206690:sub_403062": null, "4206704:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4206795:sub_4030cb": null, "4206800:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4206955:sub_40316b": null, "4206960:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207068:sub_4031dc": null, "4207072:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4207150:sub_40322e": null, "4207152:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4207260:sub_40329c": null, "4207264:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4207459:sub_403363": null, "4207472:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4207549:sub_4033bd": null, "4207552:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4207744:cgc_receive_until_flush": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until_flush(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v4[v5] = 0;\n
            v0 = &v3;\n
            if (cgc_receive(0, &v2, 1))\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
            if (v2 == a0)\n
                return v4;\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                v0 = &v3;\n
                if (cgc_receive(0, &v2, 1))\n
                {\n
                    return v4;\n
                }\n
                else if (v2 == a0)\n
                {\n
                    return v4;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4208015:sub_40358f": null, "4208016:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4208175:sub_40362f": null, "4208176:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4208375:sub_4036f7": null, "4208384:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 7808, 1);\n
}\n
", "4208507:sub_40377b": null, "4208512:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4208618:sub_4037ea": null, "4208624:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_48)\n
        {\n
            cgc_deallocate(v4->field_48);\n
            v12 = v4;\n
            v12->field_48 = 0;\n
            v12->field_4c = 0;\n
            v12->field_50 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_48)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_50 >= v11->field_48 + v11->field_4c)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_48)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_4c = cgc_strlen(v10);\n
        v0 = &v13->field_48;\n
        if (cgc_allocate(v13->field_4c, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_48, v10);\n
        v14 = v4;\n
        v14->field_50 = v14->field_48;\n
    }\n
    v10 = &v4->field_50->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_48 + v15->field_4c;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_48 + v16->field_4c)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_44 = v8;\n
    *(v7) = 0;\n
    v17->field_50 = v7 + 1;\n
    v9 = v17->field_44;\n
    return v9;\n
}\n
", "4209371:sub_403adb": null, "4209376:cgc_write": "int cgc_write(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    cgc_transmit(1, v3, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4209473:sub_403b41": null, "4209488:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4209680:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4209772:sub_403c6c": null, "4209776:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209985:sub_403d41": null, "4210000:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        a0->field_0 = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4210193:sub_403e11": null, "4210208:cgc_float_to_str": null, "4211071:sub_40417f": null, "4211072:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v27, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xbc]\n
    struct_1 *v1;  // [bp-0xb4]\n
    unsigned int v2;  // [bp-0xb0]\n
    char v3;  // [bp-0xa5]\n
    unsigned int v4;  // [bp-0xa4]\n
    unsigned int v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    unsigned int v7;  // [bp-0x98]\n
    unsigned int v8;  // [bp-0x94]\n
    unsigned int v9;  // [bp-0x90]\n
    char *v10;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v11;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v12;  // [bp-0x84]\n
    struct_1 *v13;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v14;  // [bp-0x78]\n
    struct_1 *v15;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v16;  // [bp-0x70]\n
    char v17;  // [bp-0x69]\n
    void* v18;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v19;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x60]\n
    void* v21;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v23;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v24;  // [bp-0x50]\n
    void* v25;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v26;  // [bp-0xc]\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    struct struct_0 **v36;  // eax\n
\n
    v8 = &_GLOBAL_OFFSET_TABLE_;\n
    v25 = 0;\n
    if (!v27)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (*(v27))\n
    {\n
        if (*(v27) != 64)\n
        {\n
            cgc_putc(*(v27));\n
            v27 += 1;\n
            v25 += 1;\n
LABEL_404a54:\n
        }\n
        else\n
        {\n
            v27 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (*(v27) == 64)\n
            {\n
                cgc_putc(64);\n
                v27 += 1;\n
                v25 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 45)\n
            {\n
                v20 = 1;\n
                v27 += 1;\n
            }\n
            if (cgc_isdigit(*(v27)))\n
            {\n
                if (*(v27) == 48)\n
                {\n
                    v21 = 1;\n
                    v27 += 1;\n
                }\n
                if (cgc_isdigit(*(v27)))\n
                {\n
                    for (v23 = cgc_atoi(v27); cgc_isdigit(*(v27)); v27 += 1);\n
                }\n
            }\n
            if (*(v27) == 46)\n
            {\n
                v27 += 1;\n
                for (v22 = cgc_atoi(v27); cgc_isdigit(*(v27)); v27 += 1);\n
            }\n
            if (*(v27) == 99)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v17 = *(v28);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v25 += 1;\n
                    }\n
                }\n
                cgc_putc(v17);\n
                v25 += 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 100)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v16 = &*(v29)->field_0;\n
                cgc_int_to_str(v16, &v24);\n
                v7 = v23;\n
                v18 = v7 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v15 = &v24; *(v15); v15 += 1)\n
                {\n
                    cgc_putc(*(v15));\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 120)\n
            {\n
                v30 = a0;\n
                a0 = v30 + 1;\n
                v14 = &*(v30)->field_0;\n
                cgc_int_to_hex(v14, &v24);\n
                v6 = v23;\n
                v18 = v6 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v13 = &v24; *(v13); v13 += 1)\n
                {\n
                    cgc_putc(*(v13));\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v12 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v33 = ftop<4> - 1 + 1;\n
                v34 = v33 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v2 = v22;\n
                v1 = &v24;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v35 = v34 + 1;\n
                cgc_float_to_str();\n
                v5 = v23;\n
                v0 = &v24;\n
                v18 = v5 - cgc_strlen(v0);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v11 = &v24; v11->field_0; v11 += 1)\n
                {\n
                    cgc_putc(v11->field_0);\n
                    v25 += 1;\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (!(*(v27) == 115))\n
                goto LABEL_404a54;\n
            v36 = a0;\n
            a0 = v36 + 1;\n
            v10 = &*(v36)->field_0;\n
            if (v22 > 0)\n
            {\n
                v4 = v22;\n
                if (v4 < cgc_strlen(v10))\n
                {\n
                    v9 = v22;\n
                    goto LABEL_4048d3;\n
                }\n
            }\n
            v9 = cgc_strlen(v10);\n
LABEL_4048d3:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (v21)\n
                        cgc_putc(48);\n
                    else\n
                        cgc_putc(32);\n
                    v25 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v3 = 0;\n
                if (*(v10))\n
                    v3 = !(v9 <= 0);\n
                if (!(v3 & 1))\n
                    break;\n
                cgc_putc(*(v10));\n
                v25 += 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v25 += 1;\n
                }\n
            }\n
            v27 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4213355:sub_404a6b": null, "4213360:cgc_vsprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v27, char *a0, struct struct_0 **a1)\n
{\n
    struct_1 *v0;  // [bp-0xbc]\n
    struct_1 *v1;  // [bp-0xb4]\n
    unsigned int v2;  // [bp-0xb0]\n
    char v3;  // [bp-0xa5]\n
    unsigned int v4;  // [bp-0xa4]\n
    unsigned int v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    unsigned int v7;  // [bp-0x98]\n
    unsigned int v8;  // [bp-0x94]\n
    unsigned int v9;  // [bp-0x90]\n
    char *v10;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v11;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v12;  // [bp-0x84]\n
    struct_1 *v13;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v14;  // [bp-0x78]\n
    struct_1 *v15;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v16;  // [bp-0x70]\n
    char v17;  // [bp-0x69]\n
    void* v18;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v19;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x60]\n
    void* v21;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v23;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v24;  // [bp-0x50]\n
    char *v25;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v26;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    struct struct_0 **v36;  // eax\n
\n
    v8 = &_GLOBAL_OFFSET_TABLE_;\n
    v25 = 0;\n
    if (!a0)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            *((v27 + v25)) = *(a0);\n
            a0 += 1;\n
            v25 += 1;\n
LABEL_4052ab:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (*(a0) == 64)\n
            {\n
                *((v27 + v25)) = 64;\n
                a0 += 1;\n
                v25 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v20 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit(*(a0)))\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v21 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit(*(a0)))\n
                {\n
                    for (v23 = cgc_atoi(a0); cgc_isdigit(*(a0)); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v22 = cgc_atoi(a0); cgc_isdigit(*(a0)); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v17 = *(v28);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            *((v27 + v25)) = 48;\n
                        else\n
                            *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                *((v27 + v25)) = v17;\n
                v25 += 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v16 = &*(v29)->field_0;\n
                cgc_int_to_str(v16, &v24);\n
                v7 = v23;\n
                v18 = v7 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            *((v27 + v25)) = 32;\n
                        else\n
                            *((v27 + v25)) = 48;\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v15 = &v24; *(v15); v15 += 1)\n
                {\n
                    *((v27 + v25)) = *(v15);\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v30 = a1;\n
                a1 = v30 + 1;\n
                v14 = &*(v30)->field_0;\n
                cgc_int_to_hex(v14, &v24);\n
                v6 = v23;\n
                v18 = v6 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            *((v27 + v25)) = 32;\n
                        else\n
                            *((v27 + v25)) = 48;\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v13 = &v24; *(v13); v13 += 1)\n
                {\n
                    *((v27 + v25)) = *(v13);\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v12 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v33 = ftop<4> - 1 + 1;\n
                v34 = v33 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v2 = v22;\n
                v1 = &v24;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v35 = v34 + 1;\n
                cgc_float_to_str();\n
                v5 = v23;\n
                v0 = &v24;\n
                v18 = v5 - cgc_strlen(v0);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            *((v27 + v25)) = 32;\n
                        else\n
                            *((v27 + v25)) = 48;\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v11 = &v24; v11->field_0; v11 += 1)\n
                {\n
                    *((v27 + v25)) = v11->field_0;\n
                    v25 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_4052ab;\n
            v36 = a1;\n
            a1 = v36 + 1;\n
            v10 = &*(v36)->field_0;\n
            if (v22 > 0)\n
            {\n
                v4 = v22;\n
                if (v4 < cgc_strlen(v10))\n
                {\n
                    v9 = v22;\n
                    goto LABEL_40514e;\n
                }\n
            }\n
            v9 = cgc_strlen(v10);\n
LABEL_40514e:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (!v21)\n
                        *((v27 + v25)) = 32;\n
                    else\n
                        *((v27 + v25)) = 48;\n
                    v25 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v3 = 0;\n
                if (*(v10))\n
                    v3 = !(v9 <= 0);\n
                if (!(v3 & 1))\n
                    break;\n
                *((v27 + v25)) = *(v10);\n
                v25 += 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    *((v27 + v25)) = 32;\n
                    v25 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4215490:sub_4052c2": null, "4215504:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4215568:cgc_sprintf": "int cgc_sprintf(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    return v0;\n
}\n
", "4215637:sub_405355": null, "4215648:cgc_init_data": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_data()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1 = cgc_malloc(328);\n
    if (!v1)\n
    {\n
        cgc__terminate();\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4215726:sub_4053ae": null, "4215728:cgc_destroy_data": "int cgc_destroy_data(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4215765:sub_4053d5": null, "4215776:cgc_AddDive": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[320];\n
    struct struct_0 *field_140;\n
    unsigned int field_144;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddDive(struct_1 *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_1 *v8;  // eax\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v2[0] = cgc_malloc(12);\n
    v1 = cgc_malloc(188);\n
    if (v1 && !(!v2))\n
        goto LABEL_405444;\n
    cgc__terminate();\n
LABEL_405444:\n
    v2[1] = v1;\n
    v2[2] = 0;\n
    v3 = v6->field_140;\n
    if (!v3)\n
    {\n
        v6->field_140 = &v2[0];\n
        v2[0] = 0;\n
        v6->field_144 = 1;\n
        return v1;\n
    }\n
    for (v4 = v3; v3; v3 = *((v3 + 8)))\n
    {\n
        v4 = v3;\n
    }\n
    *((v4 + 8)) = v2;\n
    v2[0] = v4;\n
    v8 = v6;\n
    v8->field_144 = v8->field_144 + 1;\n
    return v1;\n
}\n
", "4216041:sub_4054e9": null, "4216048:cgc_DeleteDive": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteDive(unsigned int v6, unsigned int a0)\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = *((v6 + 320));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = v3 != a0;\n
        if (!(v0 & 1))\n
            break;\n
        v3 = *((v3 + 8));\n
    }\n
    if (!v3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (*(a0))\n
    {\n
        *((*(a0) + 8)) = *((a0 + 8));\n
        v4 = *(a0);\n
    }\n
    if (*((a0 + 8)))\n
        *(*((a0 + 8))) = *(a0);\n
    if (a0 == *((v6 + 320)))\n
        *((v6 + 320)) = *((*((v6 + 320)) + 8));\n
    cgc_free(*((a0 + 4)));\n
    cgc_free(a0);\n
    v5 = v4;\n
    return v5;\n
}\n
", "4216333:sub_40560d": null, "4216336:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = cgc_init_data();\n
    cgc_MainMenu();\n
    cgc_destroy_data(v1);\n
    v6 = v3;\n
    return 1;\n
}\n
", "4216418:sub_405662": null, "4216432:cgc_GetLongString": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetLongString(char v3[64])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(v3, 64);\n
    v1 = cgc_receive_until_flush(v3, 10, 64);\n
    if (v1 < 64)\n
        v3[v1] = 0;\n
    v3[63] = 0;\n
    return v1;\n
}\n
", "4216545:sub_4056e1": null, "4216560:cgc_GetShortString": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetShortString(char v3[32])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(v3, 32);\n
    v1 = cgc_receive_until_flush(v3, 10, 32);\n
    if (v1 < 32)\n
        v3[v1] = 0;\n
    v3[31] = 0;\n
    return v1;\n
}\n
", "4216673:sub_405761": null, "4216688:cgc_GetChar": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetChar()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_receive_until_flush(&v1, 10, 2);\n
    if (cgc_islower(v1))\n
    {\n
        v1 -= 32;\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4216781:sub_4057cd": null, "4216784:cgc_GetInt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetInt()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x30]\n
    void* v2;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x28]\n
    char v4;  // [bp-0x27]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&v3, 0, 32);\n
    v2 = 0;\n
    v1 = cgc_receive_until_flush(&v3, 10, 10);\n
    *((&v4 + v1)) = 0;\n
    v2 = cgc_atoi(&v3);\n
    if (!v1)\n
    {\n
        v2 = -999999;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216926:sub_40585e": null, "4216928:cgc_GetPositiveInt": "int cgc_GetPositiveInt()\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = cgc_GetInt();\n
    if (v0 == -999999)\n
    {\n
        v1 = -999999;\n
        return v1;\n
    }\n
    if (v0 < 0)\n
        v0 = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4217012:sub_4058b4": null, "4217024:cgc_EpochToDate": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_EpochToDate(unsigned int v12[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x5c]\n
    void* v2;  // [bp-0x58], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x54]\n
    unsigned int v4;  // [bp-0x50]\n
    struct_0 *v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v13[6];  // eax, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v18;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 3600;\n
    v10 = 86400;\n
    v9 = 31536000;\n
    v8 = 0x1e28500;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    if (a0 < 0)\n
    {\n
        v13 = v12;\n
        v13[0] = 0;\n
        return v12;\n
    }\n
    for (v6 = a0; v6 >= 0; v5 += 1)\n
    {\n
        v7 = v6;\n
        if (!(v5 >> 31 CONCAT v5) /m 4 >> 32)\n
            v6 = v7 - 0x1e28500;\n
        else\n
            v6 = v7 - 31536000;\n
    }\n
    v5 -= 1;\n
    v12[2] = v5 + 1970;\n
    memcpy(&v3, v0 - 8760, 48);\n
    v6 = v7;\n
    if (!(v5 >> 31 CONCAT v5) /m 4 >> 32)\n
        v4 = 28;\n
    v5 = 0;\n
    for (v2 = 0; v6 >= 0; v5 += 1)\n
    {\n
        v7 = v6;\n
        v2 = *(&(&v3)[4 * v5]) * 86400;\n
        v6 = v7 - v2;\n
    }\n
    v12[0] = v5;\n
    v14 = v7;\n
    v1 = (v14 >> 31 CONCAT v14) /m 86400 + 1;\n
    v12[1] = v1;\n
    v7 -= (v12[1] - 1) * 86400;\n
    v16 = v7;\n
    v12[3] = (v16 >> 31 CONCAT v16) /m 3600;\n
    v7 -= v12[3] * 3600;\n
    v18 = v7;\n
    v12[4] = (v18 >> 31 CONCAT v18) /m 60;\n
    v13 = v12;\n
    *((v13 + 20)) = v7 - v12[4] * 60;\n
    return v12;\n
}\n
", "4217501:sub_405a9d": null, "4217504:cgc_MainMenu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_MainMenu()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 1;\n
    while (true)\n
    {\n
        if (v2 != 1)\n
            return;\n
        cgc_puts(v1 - 7807);\n
        cgc_puts(v1 - 8712);\n
        cgc_puts(v1 - 8690);\n
        cgc_puts(v1 - 8671);\n
        cgc_puts(v1 - 8648);\n
        cgc_puts(v1 - 8633);\n
        cgc_puts(v1 - 8613);\n
        cgc_puts(v1 - 8596);\n
        cgc_puts(v1 - 8575);\n
        cgc_printf(v1 - 8554);\n
        v2 = cgc_GetChar();\n
        v0 = v2 - 67;\n
        if (v0 <= 21)\n
            goto *(((stack_base)[16] + (stack_base)[20] * 4 - 8848)) + (stack_base)[16];\n
        else\n
            v2 = 1;\n
    }\n
}\n
", "4217968:cgc_ChangeDiverInfo": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407471;\n
\n
int cgc_ChangeDiverInfo(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(&g_407471);\n
    v1 = 20;\n
    cgc_SetParam(v2 - 8184, v4);\n
    v1 = 20;\n
    cgc_SetParam(v2 - 8173, v4 + 32);\n
    v1 = 29;\n
    cgc_SetParam(v2 - 8163, v4 + 64);\n
    v1 = 19;\n
    cgc_SetParam(v2 - 8156, v4 + 128);\n
    v1 = 2;\n
    cgc_SetParam(v2 - 8151, v4 + 160);\n
    v1 = 10;\n
    cgc_SetParam(v2 - 8145, v4 + 192);\n
    v1 = 15;\n
    cgc_SetParam(v2 - 8136, v4 + 224);\n
    v1 = 19;\n
    cgc_SetParam(v2 - 8123, v4 + 0x100);\n
    v0 = v4 + 288;\n
    v1 = 10;\n
    cgc_SetParam(v2 - 8105, v0);\n
    cgc_SanitizeDate(v4 + 288, v0);\n
    v6 = v3;\n
    return cgc_PrintDiverInfo();\n
}\n
", "4218370:sub_405e02": null, "4218384:cgc_LogNewDive": "typedef struct struct_0 {\n
    char padding_0[324];\n
    unsigned int field_144;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407471;\n
\n
int cgc_LogNewDive(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(&g_407471);\n
    v5 = v3;\n
    if (v5->field_144 < 128)\n
    {\n
        v1 = cgc_AddDive(v3);\n
        v5 = cgc_ChangeDive();\n
        return v5;\n
    }\n
    return v3;\n
}\n
", "4218479:sub_405e6f": null, "4218480:cgc_DownloadDiveData": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DownloadDiveData(void* v21)\n
{\n
    char *v0;  // [bp-0x68]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x60]\n
    unsigned int v3;  // [bp-0x5c]\n
    char v4;  // [bp-0x51]\n
    unsigned int v5;  // [bp-0x50]\n
    char v6;  // [bp-0x4c]\n
    char v7;  // [bp-0x44]\n
    char v8;  // [bp-0x40]\n
    char v9;  // [bp-0x3c]\n
    char v10;  // [bp-0x38]\n
    void* v11;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x20]\n
    void* v17;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v19[47];  // [bp-0x14]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v22;  // ebx\n
\n
    v20 = v22;\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v19[0] = cgc_AddDive(v21);\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    memset(&v6, 0, 24);\n
    cgc_puts(v5 - 7807);\n
    v18 = cgc_GetUInt32();\n
    v17 = cgc_GetUInt32();\n
    v14 = v18;\n
    v13 = v18;\n
    v15 = v17;\n
    v12 = v17;\n
    v11 = 1;\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (v18)\n
            v4 = v11 < 100000;\n
        if (!(v4 & 1))\n
            break;\n
        v18 = cgc_GetUInt32();\n
        if (v18)\n
        {\n
            v17 = cgc_GetUInt32();\n
            if (v17 > 3000)\n
                v17 = 3000;\n
            v11 += 1;\n
            v12 = v17 + v12;\n
            if (v18 < v14)\n
                v14 = v18;\n
            if (v18 > v13)\n
                v13 = v18;\n
            if (v17 > v15)\n
                v15 = v17;\n
        }\n
    }\n
    cgc_EpochToDate(&v6, v14);\n
    v19[40] = v15;\n
    v19[42] = (0 CONCAT v13 - v14) /m 60;\n
    v19[41] = (0 CONCAT v12) /m v11;\n
    v19[46] = v11;\n
    v3 = *(&v7);\n
    cgc_sprintf(&v19[16], v5 - 8090);\n
    v0 = v5 - 8072;\n
    v1 = *(&v8);\n
    v2 = *(&v9);\n
    v3 = *(&v10);\n
    cgc_sprintf(&v19[24], v0);\n
    return cgc_ChangeDive(v19, v0, v1, v2);\n
}\n
", "4219065:sub_4060b9": null, "4219072:cgc_EditDive": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_EditDive(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_SelectDive(v4, \"\\n
Enter Dive # to edit: \");\n
    v2 = v6;\n
    if (v2)\n
    {\n
        v1 = v2->field_4;\n
        cgc_puts(v0 - 7807);\n
        v6 = cgc_ChangeDive();\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4219177:sub_406129": null, "4219184:cgc_PrintDiveLogs": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintDiveLogs(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_SelectDive(v4, \"\\n
Enter Dive # to display: \");\n
    v2 = v6;\n
    if (v2)\n
    {\n
        v1 = v2->field_4;\n
        v6 = cgc_PrintDiveEntry();\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4219272:sub_406188": null, "4219280:cgc_RemoveDive": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RemoveDive(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_SelectDive(v4, \"\\n
Enter Dive # to delete or blank to abort: \");\n
    v2 = v6;\n
    if (v2)\n
    {\n
        v6 = cgc_DeleteDive(v4, v2);\n
        v1 = v6;\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4219369:sub_4061e9": null, "4219376:cgc_DiverStatistics": "typedef struct struct_2 {\n
    char padding_0[320];\n
    struct struct_0 *field_140;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[160];\n
    unsigned int field_a0;\n
    char padding_a4[4];\n
    unsigned int field_a8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407471;\n
\n
int cgc_DiverStatistics(struct_2 *v8)\n
{\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5[43];  // [bp-0x10]\n
    struct_0 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(&g_407471);\n
    v6 = v8->field_140;\n
    v5[0] = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v6)\n
        return cgc_printf(v1 - 7907);\n
    while (true)\n
    {\n
        v5[0] = v6->field_4;\n
        v4 += 1;\n
        v3 += v5[40];\n
        v2 += v5[42];\n
        v6 = v6->field_8;\n
    }\n
}\n
", "4219662:sub_40630e": null, "4219664:cgc_SetParam": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_407471;\n
\n
int cgc_SetParam(unsigned int v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    char v3[64];  // [bp-0x48]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_strcmp(a0, &g_407471))\n
    {\n
        v0 = a0;\n
        cgc_printf(v1 - 8547);\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 8552);\n
    }\n
    v7 = cgc_GetLongString(v3);\n
    v2 = v7;\n
    if (v2 > 0)\n
    {\n
        *((v3 + a1)) = 0;\n
        v7 = cgc_strcpy(a0, v3);\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4219847:sub_4063c7": null, "4219856:cgc_SetInt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetInt(unsigned int v4, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (*(a0))\n
    {\n
        v0 = v4;\n
        v1 = *(a0);\n
        cgc_printf(v2 - 8537);\n
    }\n
    else\n
    {\n
        v0 = v4;\n
        cgc_printf(v2 - 8552);\n
    }\n
    v5 = cgc_GetInt();\n
    v3 = v5;\n
    if (v3 != -999999)\n
    {\n
        v5 = a0;\n
        *(v5) = v3;\n
        return a0;\n
    }\n
    return v5;\n
}\n
", "4220003:sub_406463": null, "4220016:cgc_PrintDiverInfo": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407471;\n
\n
int cgc_PrintDiverInfo(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(&g_407471);\n
    v0 = v4;\n
    v1 = v4 + 32;\n
    cgc_printf(v2 - 8527);\n
    v0 = v4 + 64;\n
    cgc_printf(v2 - 8509);\n
    v0 = v4 + 128;\n
    cgc_printf(v2 - 8494);\n
    v0 = v4 + 160;\n
    cgc_printf(v2 - 8479);\n
    v0 = v4 + 192;\n
    cgc_printf(v2 - 8464);\n
    v0 = v4 + 224;\n
    cgc_printf(v2 - 8449);\n
    v0 = v4 + 0x100;\n
    cgc_printf(v2 - 8434);\n
    v0 = v4 + 288;\n
    cgc_printf(v2 - 8419);\n
    v6 = v3;\n
    return cgc_puts(v2 - 7807);\n
}\n
", "4220313:sub_406599": null, "4220320:cgc_PrintDiveEntry": "typedef struct struct_0 {\n
    char padding_0[160];\n
    struct struct_0 *field_a0;\n
    char padding_a4[20];\n
    unsigned int field_b8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_407471;\n
\n
int cgc_PrintDiveEntry(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(&g_407471);\n
    v0 = &v3->padding_0[64];\n
    cgc_printf(v1 - 8404);\n
    v0 = &v3->padding_0[96];\n
    cgc_printf(v1 - 8384);\n
    v0 = v3;\n
    cgc_printf(v1 - 8364);\n
    v0 = &v3->padding_0[128];\n
    cgc_printf(v1 - 8344);\n
    v0 = v3->field_a0;\n
    cgc_printf(v1 - 8324);\n
    v0 = *(&v3->padding_a4[0]);\n
    cgc_printf(v1 - 8304);\n
    v0 = *(&v3->padding_a4[4]);\n
    cgc_printf(v1 - 8284);\n
    v0 = *(&v3->padding_a4[8]);\n
    cgc_printf(v1 - 8264);\n
    v0 = *(&v3->padding_a4[12]);\n
    cgc_printf(v1 - 8244);\n
    v0 = *(&v3->padding_a4[16]);\n
    cgc_printf(v1 - 8224);\n
    v0 = v3->field_b8;\n
    cgc_printf(v1 - 8204);\n
    v5 = v2;\n
    return cgc_puts(v1 - 7807);\n
}\n
", "4220699:sub_40671b": null, "4220704:cgc_SanitizeDate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SanitizeDate(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x50]\n
    void* v4;  // [bp-0x4c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x48], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x40], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x3c], Other Possible Types: char *, unsigned int\n
    char *v9;  // [bp-0x38], Other Possible Types: void*\n
    char *v10;  // [bp-0x34], Other Possible Types: unsigned int, void*\n
    char v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
\n
    v12 = v14;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    cgc_bzero(&v11, 32);\n
    v9 = v13;\n
    if (v9)\n
    {\n
        v10 = cgc_strchr(v9, 47);\n
        if (v10)\n
        {\n
            v10 += 1;\n
            v8 = cgc_strchr(v10, 47);\n
            if (v8)\n
            {\n
                v8 += 1;\n
                v6 = cgc_atoi(v9);\n
                v7 = cgc_atoi(v10);\n
                v5 = cgc_atoi(v8);\n
            }\n
        }\n
    }\n
    if (v5 >= 1900 && v5 <= 2100 && v6 >= 1 && v6 <= 12)\n
    {\n
        if (v6 == 2)\n
        {\n
            if (!(v5 & 3) && v5 != 1900)\n
            {\n
                if (v7 >= 1 && v7 <= 29)\n
                    v4 = 1;\n
                goto LABEL_4068b3;\n
            }\n
            if (v7 >= 1 && v7 <= 28)\n
                v4 = 1;\n
LABEL_4068b3:\n
        }\n
        else if (v6 == 4)\n
        {\n
LABEL_4068e5:\n
            if (v7 >= 1 && v7 <= 30)\n
                v4 = 1;\n
        }\n
        else\n
        {\n
            if (v6 == 6)\n
                goto LABEL_4068e5;\n
            if (v6 == 9)\n
                goto LABEL_4068e5;\n
            if (v6 == 11)\n
                goto LABEL_4068e5;\n
            if (v7 >= 1 && v7 <= 31)\n
                v4 = 1;\n
        }\n
    }\n
    if (v4 != 1)\n
    {\n
        cgc_sprintf(&v11, v3 - 8081);\n
        return cgc_strcpy(v13, &v11);\n
    }\n
    v0 = v6;\n
    v1 = v7;\n
    v2 = v5;\n
    cgc_sprintf(&v11, v3 - 8090);\n
    return cgc_strcpy(v13, &v11);\n
}\n
", "4221349:sub_4069a5": null, "4221360:cgc_ChangeDive": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeDive(char *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_SetParam(\"Dive Site\", v2, 25);\n
    cgc_SetParam(v0 - 8095, v2 + 64, 10);\n
    cgc_SetParam(v0 - 8038, v2 + 96, 32);\n
    cgc_SetParam(v0 - 8033, v2 + 128, 25);\n
    cgc_SetInt(v0 - 8012, v2 + 160);\n
    cgc_SetInt(v0 - 7996, v2 + 164);\n
    cgc_SetInt(v0 - 7980, v2 + 168);\n
    cgc_SetInt(v0 - 7959, v2 + 172);\n
    cgc_SetInt(v0 - 7945, v2 + 176);\n
    cgc_SetInt(v0 - 7927, v2 + 180);\n
    v4 = v1;\n
    return cgc_SanitizeDiveEntry(v2);\n
}\n
", "4221715:sub_406b13": null, "4221728:cgc_SanitizeTime": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SanitizeTime(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x40]\n
    void* v3;  // [bp-0x3c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x38], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x30], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x2c], Other Possible Types: unsigned int, char *\n
    void* v8;  // [bp-0x28], Other Possible Types: char *, unsigned int\n
    void* v9;  // [bp-0x24], Other Possible Types: char *\n
    char v10;  // [bp-0x20]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v9 = v11;\n
    if (v9)\n
    {\n
        v8 = cgc_strchr(v9, 58);\n
        if (v8)\n
        {\n
            v8 += 1;\n
            v7 = cgc_strchr(v8, 58);\n
            if (v7)\n
            {\n
                v7 += 1;\n
                v6 = cgc_atoi(v9);\n
                v5 = cgc_atoi(v8);\n
                v4 = cgc_atoi(v7);\n
            }\n
        }\n
    }\n
    if (v6 <= 23 && v5 <= 59 && v4 <= 59)\n
        v3 = 1;\n
    cgc_bzero(&v10, 16);\n
    if (v3 != 1)\n
    {\n
        cgc_sprintf(&v10, v2 - 8057);\n
        return cgc_strncpy(v11, &v10, 16);\n
    }\n
    v0 = v5;\n
    v1 = v4;\n
    cgc_sprintf(&v10, v2 - 8072);\n
    return cgc_strncpy(v11, &v10, 16);\n
}\n
", "4222159:sub_406ccf": null, "4222160:cgc_SanitizeDiveEntry": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SanitizeDiveEntry(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_SanitizeDate(v2 + 64);\n
    v4 = v1;\n
    return cgc_SanitizeTime(v2 + 96);\n
}\n
", "4222222:sub_406d0e": null, "4222224:cgc_GetUInt32": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetUInt32()\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v0 = &v4;\n
    v2 = cgc_receive(0, &v3, 4);\n
    if (!v2 && v4)\n
        return v3;\n
    cgc__terminate();\n
    return v3;\n
}\n
", "4222350:sub_406d8e": null, "4222352:cgc_SelectDive": "typedef struct struct_2 {\n
    char padding_0[320];\n
    struct struct_0 *field_140;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SelectDive(struct_2 *v11, unsigned int a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x238], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x234]\n
    unsigned int v2;  // [bp-0x230]\n
    char v3;  // [bp-0x225]\n
    unsigned int v4;  // [bp-0x224]\n
    void* v5;  // [bp-0x220], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x21c]\n
    struct struct_0 **v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct struct_0 **v8;  // [bp-0x18]\n
    struct_0 *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = v11->field_140;\n
    v8 = 0;\n
    v7 = 0;\n
    v5 = 0;\n
    if (!v9)\n
    {\n
        cgc_printf(v4 - 7908);\n
        v10 = 0;\n
        return v10;\n
    }\n
    cgc_printf(v4 - 7887);\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (v9)\n
            v3 = v7 <= 128;\n
        if (!(v3 & 1))\n
            break;\n
        v8 = *((v9 + 4));\n
        *((&v6 + 0x4 * v7)) = v9;\n
        v7 = v7 + 1;\n
        v0 = v7;\n
        v1 = v8 + 16;\n
        v2 = v8 + 24;\n
        cgc_printf(v4 - 7806);\n
        v0 = v8;\n
        v1 = v8 + 32;\n
        cgc_printf(v4 - 7790);\n
        v9 = *((v9 + 8));\n
    }\n
    v0 = a0;\n
    cgc_printf(v4 - 7776);\n
    v5 = cgc_GetPositiveInt();\n
    if (v5 >= 1 && v5 <= v7)\n
    {\n
        v9 = *(&(&v6)[4 + 4 * v5]);\n
        goto LABEL_406f48;\n
    }\n
    cgc_printf(v4 - 7773);\n
    v9 = 0;\n
LABEL_406f48:\n
    v10 = v9;\n
    return v10;\n
}\n
", "4222812:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:memset": null, "5242912:cgc_deallocate": null, "5242916:cgc_log10": null, "5242920:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}