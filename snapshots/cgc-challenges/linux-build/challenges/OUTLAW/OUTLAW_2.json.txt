{"4202496:_init": "extern struct_0 *g_406814;\n
\n
int _init()\n
{\n
    if (g_406814)\n
    {\n
        g_406814();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:sub_402090": "int sub_402090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202646:sub_402096": null, "4202656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202699:sub_4020cb": null, "4202700:sub_4020cc": "int sub_4020cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202708:sub_4020d4": null, "4202720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18235;\n
    v6 = v5 + 276;\n
    v7 = v5 + 276;\n
    if (v7 == v6)\n
        return v5 + 276;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202771:sub_402113": "int sub_402113()\n
{\n
}\n
", "4202777:sub_402119": "int sub_402119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18171;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 276;\n
    v9 = (v6 + 276 - (v6 + 276) >> 31) + (276 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202855:sub_402167": "int sub_402167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406810;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406810)\n
    {\n
        v0 = __dso_handle;\n
        sub_402090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_get_match_run_length": "int cgc_get_match_run_length(unsigned int v2, unsigned int a0, char *a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8]\n
\n
    v1 = 0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 32)\n
            return v1;\n
        if ((v2 >> ((31 - v0) & 31) & 1) != (a0 >> ((31 - v0) & 31) & 1))\n
            return v1;\n
        *(a1) = *(a1) + 1;\n
        v0 += 1;\n
    }\n
}\n
", "4203119:sub_40226f": null, "4203120:cgc_is_non_printable": "int cgc_is_non_printable(char v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = v2;\n
    if (!cgc_is_printable())\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_digit() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_letter() != 1)\n
        {\n
            v0 = v4;\n
            if (cgc_is_symbol() != 1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203338:sub_40234a": null, "4203344:cgc_is_digit": "int cgc_is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203407:sub_40238f": null, "4203408:cgc_is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_upper() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_lower() != 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203515:sub_4023fb": null, "4203520:cgc_is_symbol": "int cgc_is_symbol(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (33 <= v2 && v2 <= 47)\n
        goto LABEL_40247f;\n
    if (58 <= v2 && v2 <= 64)\n
        goto LABEL_40247f;\n
    if (91 <= v2 && v2 <= 96)\n
        goto LABEL_40247f;\n
    if (123 > v2)\n
    {\n
LABEL_402488:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(v2 <= 126))\n
    {\n
        goto LABEL_402488;\n
    }\n
LABEL_40247f:\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203669:sub_402495": null, "4203680:cgc_is_hexdigit": "int cgc_is_hexdigit(char v1)\n
{\n
    char v0;  // [bp-0x9]\n
\n
    if (cgc_is_digit(v1) != 1)\n
    {\n
        if (97 <= v1 && !(102 < v1))\n
            goto LABEL_402516;\n
        if (65 > v1)\n
        {\n
LABEL_40251f:\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (70 < v1)\n
        {\n
            goto LABEL_40251f;\n
        }\n
    }\n
LABEL_402516:\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203821:sub_40252d": null, "4203824:cgc_is_upper": "int cgc_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 90 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203887:sub_40256f": null, "4203888:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (97 <= v2 && 122 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203951:sub_4025af": null, "4203952:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_is_lower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4204032:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_is_upper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4204112:cgc_todigit": "int cgc_todigit(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (a0 >= 2 && a0 <= 16 && v2 < a0)\n
    {\n
        if (v2 >= 10)\n
        {\n
            v1 = v2 + 87;\n
            return v1;\n
        }\n
        v1 = v2 + 48;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4204208:cgc_fromdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fromdigit(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        v4 = cgc_tolower(v4);\n
        if (cgc_is_digit(v4))\n
            v2 = v4 - 48;\n
        else\n
            v2 = v4 + -87;\n
        if (v2 >= 0 && v2 < a0)\n
        {\n
            v0 = v2;\n
            goto LABEL_40275f;\n
        }\n
        v0 = -15;\n
LABEL_40275f:\n
        v3 = v0;\n
        return v3;\n
    }\n
    v3 = -15;\n
    return v3;\n
}\n
", "4204398:sub_40276e": null, "4204400:cgc_itohex": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itohex(char v3[9], unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v1[0]) = &a0;\n
    v3[0] = cgc_todigit(v1[3] >> 4 & 15, 16);\n
    v3[1] = cgc_todigit(v1[3] & 15, 16);\n
    v3[2] = cgc_todigit(v1[2] >> 4 & 15, 16);\n
    v3[3] = cgc_todigit(v1[2] & 15, 16);\n
    v3[4] = cgc_todigit(v1[1] >> 4 & 15, 16);\n
    v3[5] = cgc_todigit(v1[1] & 15, 16);\n
    v3[6] = cgc_todigit(v1[0] >> 4 & 15, 16);\n
    v3[7] = cgc_todigit(v1[0] & 15, 16);\n
    v3[8] = a1;\n
    v5 = v2;\n
    return v3;\n
}\n
", "4204757:sub_4028d5": null, "4204768:cgc_utostr": "int cgc_utostr(char *v4, unsigned int a0, unsigned int a1, char a2)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
\n
    v2 = 0;\n
    v1 = a1;\n
    v0 = 0;\n
    if (!v4)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (a0 >= 2)\n
    {\n
        do\n
        {\n
            v1 = (0 CONCAT v1) /m 10;\n
            v2 += 1;\n
        } while (v1);\n
        if (v2 >= a0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        v5 = v2;\n
        v2 = v5 - 1;\n
        v4[v5] = a2;\n
        do\n
        {\n
            v0 = (0 CONCAT a1) /m 10 >> 32;\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            v4[v6] = v0 + 48;\n
            a1 = (0 CONCAT a1) /m 10;\n
        } while (a1);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4205016:sub_4029d8": null, "4205024:cgc_itostr": "int cgc_itostr(char *v6, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (a0 >= 2)\n
    {\n
        if (a1 < 0)\n
        {\n
            if (a0 >= 3)\n
            {\n
                v7 = v4;\n
                v4 = v7 + 1;\n
                v6[v7] = 45;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        if (a1 < 0)\n
            v0 = -(a1);\n
        else\n
            v0 = a1;\n
        v2 = v0;\n
        v3 = v2;\n
        do\n
        {\n
            v3 = (0 CONCAT v3) /m 10;\n
            v4 += 1;\n
        } while (v3);\n
        if (v4 >= a0)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v8 = v4;\n
        v4 = v8 - 1;\n
        v6[v8] = a2;\n
        do\n
        {\n
            v1 = (0 CONCAT v2) /m 10 >> 32;\n
            v9 = v4;\n
            v4 = v9 - 1;\n
            v6[v9] = v1 + 48;\n
            v2 = (0 CONCAT v2) /m 10;\n
        } while (v2);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4205366:sub_402b36": null, "4205376:cgc_strtou": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtou(char *v8, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    int tmp_12;  // tmp #12\n
    char v1;  // [bp-0x25]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    char *v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // ecx\n
    unsigned int v22;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    if (a0 >= 2 && a0 <= 16)\n
    {\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (*(v8))\n
            {\n
                v9 = v8;\n
                v8 = v9 + 1;\n
                v3 = cgc_fromdigit(*(v9), a0);\n
                v1 = v3 != -15;\n
            }\n
            if (!(v1 & 1))\n
            {\n
                *(a1) = v4;\n
                v7 = v6;\n
                return v7;\n
            }\n
            v10 = a0;\n
            v11 = v4;\n
            v0 = v10 * v5;\n
            v12 = v11 * v10 >> 32;\n
            v14 = v0;\n
            v4 = v11 * v10;\n
            v5 = v12 + v14;\n
            if (v12 + v14)\n
            {\n
                v7 = -15;\n
                return v7;\n
            }\n
            v15 = v3;\n
            v16 = v15 / 0x80000000;\n
            v17 = ~(v15);\n
            v18 = v4;\n
            if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, eax<4>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (edx<4> < esi<4>))), Conv(1->32, (edx<4> < esi<4>))))\n
            {\n
                v7 = -15;\n
                return v7;\n
            }\n
            v19 = v3;\n
            v20 = v4;\n
            tmp_12 = v20;\n
            v22 = v5 + (v19 >> 31) + (tmp_12 + v19 < tmp_12);\n
            v4 = v20 + v19;\n
            v5 = v22;\n
            v6 += 1;\n
        }\n
    }\n
    v7 = -15;\n
    return v7;\n
}\n
", "4205706:sub_402c8a": null, "4205712:cgc_strtoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoi(char *v6, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (*(v6) == 45)\n
        v2 = 1;\n
    v4 = cgc_strtou(&v6[v2], a0, &v3);\n
    if (v4 == -15)\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
    else if (v3 <= v2 + 2147483647)\n
    {\n
        if (v2)\n
            v0 = -(v3);\n
        else\n
            v0 = v3;\n
        *(a1) = v0;\n
        v5 = v4 + v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
}\n
", "4205914:sub_402d5a": null, "4205920:cgc_encrypt_1block": "int cgc_encrypt_1block(unsigned int v12[2], unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9[4];  // [bp-0x10]\n
    unsigned int v10[2];  // [bp-0xc]\n
    void* v11;  // [bp-0x8]\n
\n
    v11 = 0;\n
    v10[0] = v12;\n
    v9[0] = a0;\n
    v8 = v10[0];\n
    v7 = v10[1];\n
    v6 = 0;\n
    v4 = 3405691582;\n
    v3 = v9[0];\n
    v2 = v9[1];\n
    v1 = v9[2];\n
    v0 = v9[3];\n
    for (v5 = 0; v5 < 42; v5 += 1)\n
    {\n
        v6 = v4 + v6;\n
        v8 = (v7 * 64 + v3 ^ v7 + v6 ^ (v7 >> 7) + v2) + v8;\n
        v7 = (v8 * 64 + v1 ^ v8 + v6 ^ (v8 >> 7) + v0) + v7;\n
    }\n
    v10[0] = v8;\n
    v10[1] = v7;\n
    return v11;\n
}\n
", "4206155:sub_402e4b": null, "4206160:cgc_decrypt_1block": "int cgc_decrypt_1block(unsigned int v12[2], unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9[4];  // [bp-0x10]\n
    unsigned int v10[2];  // [bp-0xc]\n
    void* v11;  // [bp-0x8]\n
\n
    v11 = 0;\n
    v10[0] = v12;\n
    v9[0] = a0;\n
    v8 = v10[0];\n
    v7 = v10[1];\n
    v6 = 1305125676;\n
    v4 = 3405691582;\n
    v3 = v9[0];\n
    v2 = v9[1];\n
    v1 = v9[2];\n
    v0 = v9[3];\n
    for (v5 = 0; v5 < 42; v5 += 1)\n
    {\n
        v7 -= v8 * 64 + v1 ^ v8 + v6 ^ (v8 >> 7) + v0;\n
        v8 -= v7 * 64 + v3 ^ v7 + v6 ^ (v7 >> 7) + v2;\n
        v6 -= v4;\n
    }\n
    v10[0] = v8;\n
    v10[1] = v7;\n
    return v11;\n
}\n
", "4206401:sub_402f41": null, "4206416:cgc_prng_set_key": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prng_set_key(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = 16;\n
    cgc_memcpy(v1 + 1152, v3);\n
    return v2;\n
}\n
", "4206494:sub_402f9e": null, "4206496:cgc_prng_refill_cache": "extern char _GLOBAL_OFFSET_TABLE_[1168];\n
\n
int cgc_prng_refill_cache()\n
{\n
    char v0[1168];  // [bp-0x28]\n
    unsigned int v1[4];  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5[2];  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc]\n
    char v9[1168];  // ebx\n
    char v10[1168];  // eax\n
\n
    *(&v0[0]) = &_GLOBAL_OFFSET_TABLE_[0];\n
    v7 = 0;\n
    v9 = v0;\n
    *(v5) = v9[40] | v9[41] * 0x100 | v9[42] * 0x10000 | v9[43] * 0x1000000;\n
    v6 = v9[44] | v9[45] * 0x100 | v9[46] * 0x10000 | v9[47] * 0x1000000;\n
    *(v1) = v9[1152] | v9[1153] * 0x100 | v9[1154] * 0x10000 | v9[1155] * 0x1000000;\n
    v2 = v9[1156] | v9[1157] * 0x100 | v9[1158] * 0x10000 | v9[1159] * 0x1000000;\n
    v3 = v9[1160] | v9[1161] * 0x100 | v9[1162] * 0x10000 | v9[1163] * 0x1000000;\n
    v4 = v9[1164] | v9[1165] * 0x100 | v9[1166] * 0x10000 | v9[1167] * 0x1000000;\n
    cgc_decrypt_1block(v5, v1);\n
    v10 = v0;\n
    v10[40] = v5[0];\n
    v10[41] = v5[0] >> 8;\n
    v10[42] = v5[0] >> 16;\n
    v10[43] = v5[0] >> 24;\n
    v10[44] = v6;\n
    v10[45] = v6 >> 8;\n
    v10[46] = v6 >> 16;\n
    v10[47] = v6 >> 24;\n
    v0[1105] = 8;\n
    return v7;\n
}\n
", "4207031:sub_4031b7": null, "4207040:cgc_prng_get_bytes": "typedef struct struct_0 {\n
    char padding_0[1105];\n
    char field_451;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prng_get_bytes(char *v5, unsigned int a0)\n
{\n
    char v0;  // [bp-0x19]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc]\n
    struct_0 *v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = v5;\n
    while (a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1->field_451)\n
                v0 = a0;\n
            if (!(v0 & 1))\n
                break;\n
            v6 = v1;\n
            *((v2 + v3)) = v6->padding_0[48 + -1 * v6->field_451];\n
            v6->field_451 = v6->field_451 - 1;\n
            a0 -= 1;\n
            v3 += 1;\n
        }\n
        if (!v1->field_451)\n
            cgc_prng_refill_cache();\n
    }\n
    return v4;\n
}\n
", "4207281:sub_4032b1": null, "4207296:cgc_memcpy": "int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4207411:sub_403333": null, "4207424:cgc_memset": "int cgc_memset(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v3;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v1[v0] = a0;\n
    }\n
    v2 = a1;\n
    return v2;\n
}\n
", "4207527:sub_4033a7": null, "4207536:cgc_recv_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_bytes(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
            return v4;\n
        v2 = 0;\n
        v0 = &v2;\n
        v4 = cgc_receive(v5, a0 + a1 - v3, v3);\n
        if (v4)\n
            return v4;\n
        v3 -= v2;\n
    }\n
}\n
", "4207699:sub_403453": null, "4207712:cgc_send_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_bytes(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
            return v4;\n
        v2 = 0;\n
        v0 = &v2;\n
        v4 = cgc_transmit(v5, a0, v3);\n
        if (v4)\n
            return v4;\n
        v3 -= v2;\n
    }\n
}\n
", "4207867:sub_4034fb": null, "4207872:cgc_streq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_streq(char *v4, char *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char *v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_strlen(v4, a1);\n
    if (v1 != cgc_strlen(a0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (*(v4) != a1)\n
        {\n
            v6 = v4;\n
            v4 = v6 + 1;\n
            v7 = *(v6);\n
            v8 = a0;\n
            a0 = v8 + 1;\n
            if (v7 != *(v8))\n
            {\n
                v2 = -1;\n
                return v2;\n
            }\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4208064:cgc_strlen": "int cgc_strlen(char *v2, char a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; a0 != *(v2); v0 += 1)\n
    {\n
        v2 += 1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4208161:sub_403621": null, "4208176:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0, char a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2) != a1)\n
        {\n
            v0 = 0;\n
            if (*(a0) != a1)\n
                v0 = *(v2) == *(a0);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    if (*(v2) == a1 && *(a0) == a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (*(v2) < *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4208391:sub_403707": null, "4208400:cgc_op_add": "extern unsigned int _GLOBAL_OFFSET_TABLE_[288];\n
\n
int cgc_op_add()\n
{\n
    unsigned int v0[288];  // [bp-0x4c]\n
    unsigned int v1[2];  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    char v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v11;  // [bp-0x15]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    char v17;  // cl\n
    unsigned int v18[288];  // eax\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // eax\n
\n
    v13 = v15;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v12 = v16;\n
    v11 = v17;\n
    v18 = v0;\n
    v10 = 0;\n
    v9 = v18[287];\n
    v8 = v18[286];\n
    *(&v7) = v18[285];\n
    v6 = v18[284];\n
    v5 = v18[283];\n
    v4 = v18[282];\n
    v4 = 3;\n
    v7 = 0;\n
    v3 = v12 + v19;\n
    v20 = v18[281];\n
    v2 = v3;\n
    *(v1) = v20;\n
    v10 = cgc_encrypt_1block(v1, &v0[277]);\n
    if (v10)\n
        return v10;\n
    v10 = cgc_get_match_run_length(v3, v0[281], &v7);\n
    if (!v10)\n
    {\n
        v9 = v2;\n
        v8 = v1[0];\n
        v10 = cgc_send_bytes(7, &v4, 24);\n
        if ((Not (Not (0x0<32> == Load(addr=stack_base-28, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
        return v10;\n
    }\n
    return v10;\n
}\n
", "4208826:sub_4038ba": null, "4208832:cgc_op_sub": "extern unsigned int _GLOBAL_OFFSET_TABLE_[288];\n
\n
int cgc_op_sub()\n
{\n
    unsigned int v0[288];  // [bp-0x4c]\n
    unsigned int v1[2];  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    char v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v11;  // [bp-0x15]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    char v17;  // cl\n
    unsigned int v18[288];  // eax\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // eax\n
\n
    v13 = v15;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v12 = v16;\n
    v11 = v17;\n
    v18 = v0;\n
    v10 = 0;\n
    v9 = v18[287];\n
    v8 = v18[286];\n
    *(&v7) = v18[285];\n
    v6 = v18[284];\n
    v5 = v18[283];\n
    v4 = v18[282];\n
    v4 = 3;\n
    v7 = 1;\n
    v3 = v12 - v19;\n
    v20 = v18[281];\n
    v2 = v3;\n
    *(v1) = v20;\n
    v10 = cgc_encrypt_1block(v1, &v0[277]);\n
    if (v10)\n
        return v10;\n
    v10 = cgc_get_match_run_length(v3, v0[281], &v7);\n
    if (!v10)\n
    {\n
        v9 = v2;\n
        v8 = v1[0];\n
        v10 = cgc_send_bytes(7, &v4, 24);\n
        if ((Not (Not (0x0<32> == Load(addr=stack_base-28, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
        return v10;\n
    }\n
    return v10;\n
}\n
", "4209258:sub_403a6a": null, "4209264:cgc_op_mul": "extern unsigned int _GLOBAL_OFFSET_TABLE_[288];\n
\n
int cgc_op_mul()\n
{\n
    unsigned int v0[288];  // [bp-0x4c]\n
    unsigned int v1[2];  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    char v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v11;  // [bp-0x15]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    char v17;  // cl\n
    unsigned int v18[288];  // eax\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // eax\n
\n
    v13 = v15;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v12 = v16;\n
    v11 = v17;\n
    v18 = v0;\n
    v10 = 0;\n
    v9 = v18[287];\n
    v8 = v18[286];\n
    *(&v7) = v18[285];\n
    v6 = v18[284];\n
    v5 = v18[283];\n
    v4 = v18[282];\n
    v4 = 3;\n
    v7 = 2;\n
    v3 = v19 * v12;\n
    v20 = v18[281];\n
    v2 = v3;\n
    *(v1) = v20;\n
    v10 = cgc_encrypt_1block(v1, &v0[277]);\n
    if (v10)\n
        return v10;\n
    v10 = cgc_get_match_run_length(v3, v0[281], &v7);\n
    if (!v10)\n
    {\n
        v9 = v2;\n
        v8 = v1[0];\n
        v10 = cgc_send_bytes(7, &v4, 24);\n
        if ((Not (Not (0x0<32> == Load(addr=stack_base-28, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
        return v10;\n
    }\n
    return v10;\n
}\n
", "4209691:sub_403c1b": null, "4209696:cgc_op_div": "typedef struct struct_0 {\n
    char padding_0[1124];\n
    unsigned int field_464;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_op_div()\n
{\n
    struct_0 *v0;  // [bp-0x4c]\n
    unsigned int v1[2];  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x34], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x28]\n
    char v6;  // [bp-0x27]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    void* v9;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x15]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v13;  // esi\n
    char v14;  // cl\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // eax\n
\n
    v11 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v10 = v14;\n
    v9 = 0;\n
    memcpy(&v4, v0 + 1, 24);\n
    v4 = 3;\n
    v5 = 3;\n
    v3 = 0;\n
    if (!v15)\n
        v3 = 0;\n
    else\n
        v3 = (0 CONCAT v16) /m v15;\n
    v2 = v3;\n
    *(v1) = v0->field_464;\n
    v9 = cgc_encrypt_1block(v1, &v0->padding_0[1108]);\n
    if (v9)\n
        return v9;\n
    v9 = cgc_get_match_run_length(v3, v0->field_464, &v6);\n
    if (!v9)\n
    {\n
        v8 = v2;\n
        v7 = v1[0];\n
        v9 = cgc_send_bytes(7, &v4, 24);\n
        if ((Not (Not (0x0<32> == Load(addr=stack_base-28, size=4, endness=Iend_LE))))) { Goto None } else { Goto None }\n
        return v9;\n
    }\n
    return v9;\n
}\n
", "4210129:sub_403dd1": null, "4210144:cgc_op_mod": "typedef struct struct_0 {\n
    char padding_0[1124];\n
    unsigned int field_464;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_op_mod()\n
{\n
    struct_0 *v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x4c], Other Possible Types: char\n
    char v2;  // [bp-0x40]\n
    char v3;  // [bp-0x34]\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    memcpy(&v3, v0 + 1, 24);\n
    memcpy(&v1, v0 + 1, 24);\n
    v1 = 3;\n
    v2 = 4;\n
    if (v8 == v0->field_464)\n
        *(&v0->padding_0[80 + 4 * v9]) = v10;\n
    do\n
    {\n
        v4 = cgc_send_bytes(7, &v1, 24);\n
    } while (v4);\n
    return v4;\n
}\n
", "4210446:sub_403f0e": null, "4210448:cgc_negotiate": "typedef struct struct_0 {\n
    char padding_0[1128775680];\n
    unsigned int field_4347c000;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[282];\n
\n
int cgc_negotiate()\n
{\n
    unsigned int v0[282];  // [bp-0x40]\n
    char v1;  // [bp-0x3c]\n
    char v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x24]\n
    struct_0 *v4;  // [bp-0x20]\n
    struct_0 *v5;  // [bp-0x1c]\n
    unsigned int v6[282193924];  // [bp-0x18]\n
    unsigned int v7[282193924];  // [bp-0x14]\n
    void* v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11[282];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v9 = 0;\n
    v8 = 0;\n
    v7[0] = 0;\n
    v6[0] = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    memcpy(&v1, v0 + 1, 24);\n
    v9 = cgc_recv_bytes(6, v7, 4);\n
    if (v9)\n
        return v9;\n
    v11 = v0;\n
    v6[0] = v7 & 4095 & -0x10;\n
    v11[277] = v6[0x10d1f000];\n
    v11[278] = v6[282193921];\n
    v11[279] = v6[282193922];\n
    v11[280] = v6[282193923];\n
    v2 = 4;\n
    v9 = cgc_send_bytes(3, &v1, 24);\n
    if (v9)\n
        return v9;\n
    v5 = *(1128775704);\n
    v4 = v5 & 4095 & -0x10;\n
    v0[281] = v4->field_4347c000;\n
    v9 = cgc_send_bytes(3, &v5, 4);\n
    if (v9)\n
        return v9;\n
    v9 = cgc_recv_bytes(6, &v1, 24);\n
    if (!v9 && v2 == 4)\n
        return v9;\n
    v9 = 8;\n
    return v9;\n
}\n
", "4210978:sub_404122": null, "4210992:cgc_do_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_exit()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    char v4;  // [bp-0x4]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v6 = &v4;\n
    v3 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v8 = v1;\n
    v0 = v2;\n
    cgc__terminate();\n
    main();\n
    return;\n
}\n
", "4211056:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    memcpy(&v1, v0 + 1128, 24);\n
    v3 = cgc_negotiate();\n
    if (v3)\n
    {\n
        v3 = 9;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        memcpy(&v1, v0 + 1128, 24);\n
        v3 = cgc_recv_bytes(6, &v1, 24);\n
        if (v3)\n
            return v3;\n
        if (*(&v1) == 3735928559)\n
            cgc_do_exit();\n
        if (3 > *(&v1))\n
            break;\n
        if (6 < *(&v1))\n
            break;\n
        if (*(&v1) == 2)\n
            break;\n
        v3 = *((v0 + v2 * 4 + 80))();\n
        if (v3)\n
            return v3;\n
    }\n
    return v3;\n
}\n
", "4211488:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:memcpy": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}