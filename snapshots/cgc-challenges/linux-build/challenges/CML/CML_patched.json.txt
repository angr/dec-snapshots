{"4202496:_init": "extern struct_0 *g_40bb94;\n
\n
int _init()\n
{\n
    if (g_40bb94)\n
    {\n
        g_40bb94();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202640:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_GLOBAL__sub_I_cmlnode.cc": "extern unsigned int _ZL12VERSION_ATTR;\n
extern unsigned int _ZL14NAMESPACE_ATTR;\n
extern unsigned int _ZL9SPEC_ATTR;\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int _GLOBAL__sub_I_cmlnode.cc()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp+0x4]\n
    unsigned int v2;  // [bp+0x8]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create(v1, v2);\n
        v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v0 = \"namespace\";\n
    _ZL14NAMESPACE_ATTR = StringManager::intern(v3);\n
    v4 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v4 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v0 = \"spec\";\n
    _ZL9SPEC_ATTR = StringManager::intern(v4);\n
    v5 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v5 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v0 = \"version\";\n
    _ZL12VERSION_ATTR = StringManager::intern(v5);\n
    return _ZL12VERSION_ATTR;\n
}\n
", "4202845:sub_40215d": null, "4202848:_GLOBAL__sub_I_node.cc": "extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
extern unsigned int cgc_CML_TAG;\n
extern unsigned int cgc_EMPTY_TAG;\n
extern char g_4081d6;\n
\n
int _GLOBAL__sub_I_node.cc()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp+0x4]\n
    unsigned int v2;  // [bp+0x8]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create(v1, v2);\n
        v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v0 = \"cml\";\n
    cgc_CML_TAG = StringManager::intern(v3);\n
    v4 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v4 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v0 = &g_4081d6;\n
    cgc_EMPTY_TAG = StringManager::intern(v4);\n
    return cgc_EMPTY_TAG;\n
}\n
", "4202951:sub_4021c7": null, "4202960:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4203003:sub_4021fb": null, "4203004:sub_4021fc": "int sub_4021fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4203008:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4203012:sub_402204": null, "4203024:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 39303;\n
    v6 = v5 + 799;\n
    v7 = v5 + 799;\n
    if (v7 == v6)\n
        return v5 + 799;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4203075:sub_402243": "int sub_402243()\n
{\n
}\n
", "4203081:sub_402249": "int sub_402249()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4203088:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 39239;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 799;\n
    v9 = (v6 + 799 - (v6 + 799) >> 31) + (799 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4203159:sub_402297": "int sub_402297()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4203168:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40bb88;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40bb88)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203243:sub_4022eb": "int sub_4022eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203248:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203257:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203261:sub_4022fd": null, "4203264:cgc_calloc": "extern unsigned int g_heap;\n
\n
int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v4;  // eax\n
\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, ecx<4>, Load(addr=stack_base+8, size=4, endness=Iend_LE), 0x0<32>))\n
        return 0;\n
    v4 = cgc_malloc_alloc(&g_heap);\n
    if (v4)\n
    {\n
        v0 = v1 * a0;\n
        cgc_memset(v4, 0);\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4203354:sub_40235a": null, "4203360:cgc_isascii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isascii(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 1;\n
}\n
", "4203389:sub_40237d": null, "4203392:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 2;\n
}\n
", "4203421:sub_40239d": null, "4203424:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 16;\n
}\n
", "4203453:sub_4023bd": null, "4203456:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 14;\n
}\n
", "4203485:sub_4023dd": null, "4203488:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 12;\n
}\n
", "4203517:sub_4023fd": null, "4203520:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 4;\n
}\n
", "4203549:sub_40241d": null, "4203552:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 8;\n
}\n
", "4203581:sub_40243d": null, "4203584:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 64;\n
}\n
", "4203613:sub_40245d": null, "4203616:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 32;\n
}\n
", "4203645:sub_40247d": null, "4203648:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[15252 + v0] & 4294967168;\n
}\n
", "4203677:sub_40249d": null, "4203680:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(char v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[15252 + v1] & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[15252 + (v1 ^ 32)] & 2) >> 1);\n
    return v1 - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[15252 + v1] & 2) >> 1);\n
}\n
", "4203739:sub_4024db": null, "4203744:cgc_toupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_toupper(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[15252 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203778:sub_402502": null, "4203792:cgc_digittoint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_digittoint(char v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = v1 ^ 32;\n
    if (!((&_GLOBAL_OFFSET_TABLE_)[15252 + v1] & 8))\n
        v2 = v1;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[15252 + v2] & 2))\n
        return v2 - 48;\n
    v3 = v2 - 65;\n
    v4 = v2 - 55;\n
    if (v3 < 6)\n
        return v4;\n
    return 0;\n
}\n
", "4203854:sub_40254e": null, "4203856:cgc_tolower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tolower(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[15252 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203890:sub_402572": null, "4203904:__cxa_pure_virtual": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxa_pure_virtual()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc__terminate();\n
    cgc_exit();\n
    return;\n
}\n
", "4203936:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v2;\n
    cgc__terminate();\n
    cgc_fflush();\n
    return;\n
}\n
", "4203968:cgc_fflush": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_fflush(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    struct_0 *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    char *v9;  // ecx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    char *v13;  // esi, Other Possible Types: unsigned int\n
    char *v14;  // eax\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // esi\n
    void* v18;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
\n
    v5 = v4;\n
    v6 = v4->field_8;\n
    if (v6 == -1)\n
        return 0;\n
    if (v5->field_4 != 1)\n
    {\n
        v8 = v5->field_c;\n
        v9 = v5->field_10;\n
        v16 = v8 - v6;\n
        if (v9 && v16)\n
        {\n
            v2 = v6;\n
            v10 = v8 + ~(v6);\n
            v1 = v16 & 3;\n
            v13 = 0;\n
            if (v10 >= 3)\n
            {\n
                v11 = v16 & -0x4;\n
                v12 = 27 + v2 + v4;\n
                v13 = 0;\n
                do\n
                {\n
                    *((v12 + v13 - 3)) = v9[*((v12 + v13 - 3))];\n
                    *((v12 + v13 - 2)) = v9[*((v12 + v13 - 2))];\n
                    *((v12 + v13 - 1)) = v9[*((v12 + v13 - 1))];\n
                    *((v12 + v13)) = v9[*((v12 + v13))];\n
                    v13 += 4;\n
                } while (v11 != v13);\n
            }\n
            v5 = v4;\n
            if (v1)\n
            {\n
                v14 = v13 + v2 + v5 + 24;\n
                v15 = 0;\n
                do\n
                {\n
                    v14[v15] = v9[v14[v15]];\n
                    v15 += 1;\n
                } while (v1 != v15);\n
            }\n
            v6 = *((v5 + 8));\n
            v16 = *((v5 + 12)) - v6;\n
        }\n
        v1 = *(v5);\n
        v17 = v6 + v5 + 24;\n
        v18 = 0;\n
        while (v16 > v18)\n
        {\n
            v0 = &v3;\n
            v19 = cgc_transmit(v1, v17 + v18, v16 - v18);\n
            v18 += *(&v3);\n
            if (v19)\n
            {\n
                v7 = -1;\n
                v5 = v4;\n
                goto LABEL_4026fd;\n
            }\n
        }\n
        v5 = v4;\n
    }\n
    v7 = 0;\n
LABEL_4026fd:\n
    *((v5 + 12)) = 0;\n
    *((v5 + 8)) = 0;\n
    return v7;\n
}\n
", "4204307:sub_402713": null, "4204320:cgc_fbuffered": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_fbuffered(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // esi\n
    char *v10;  // ecx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    char *v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    void* v19;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
\n
    v5 = a0;\n
    v6 = v4;\n
    v7 = v4->field_8;\n
    if (v7 == -1)\n
    {\n
        v21 = -(v5 < 1);\n
        *((v6 + 8)) = v21;\n
        *((v6 + 12)) = 0;\n
        return v21;\n
    }\n
    if (v6->field_4 == 1)\n
    {\n
        v8 = &v6->field_c;\n
    }\n
    else\n
    {\n
        v9 = v6->field_c;\n
        v10 = v6->field_10;\n
        v17 = v9 - v7;\n
        if (v10 && v17)\n
        {\n
            v1 = v7;\n
            v11 = v9 + ~(v7);\n
            v2 = v17 & 3;\n
            v14 = 0;\n
            if (v11 >= 3)\n
            {\n
                v12 = v17 & -0x4;\n
                v13 = v1 + v4 + 27;\n
                v14 = 0;\n
                do\n
                {\n
                    *((v13 + v14 - 3)) = v10[*((v13 + v14 - 3))];\n
                    *((v13 + v14 - 2)) = v10[*((v13 + v14 - 2))];\n
                    *((v13 + v14 - 1)) = v10[*((v13 + v14 - 1))];\n
                    *((v13 + v14)) = v10[*((v13 + v14))];\n
                    v14 += 4;\n
                } while (v12 != v14);\n
            }\n
            v6 = v4;\n
            if (v2)\n
            {\n
                v15 = 24 + v14 + v1 + v6;\n
                v16 = 0;\n
                do\n
                {\n
                    v15[v16] = v10[v15[v16]];\n
                    v16 += 1;\n
                } while (v2 != v16);\n
            }\n
            v7 = *((v6 + 8));\n
            v17 = *((v6 + 12)) - v7;\n
        }\n
        v1 = v6 + 12;\n
        v2 = *(v6);\n
        v18 = v7 + v6 + 24;\n
        v19 = 0;\n
        while (v17 > v19)\n
        {\n
            v0 = &v3;\n
            v20 = cgc_transmit(v2, v18 + v19, v17 - v19);\n
            v19 += *(&v3);\n
            if (v20)\n
                break;\n
        }\n
        v6 = v4;\n
        v5 = a0;\n
        v8 = v1;\n
    }\n
    *(v8) = 0;\n
}\n
", "4204672:cgc_fopen": "int cgc_fopen(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[6];  // eax\n
\n
    v0 = 1048;\n
    v2 = cgc_malloc();\n
    if (v2)\n
    {\n
        v2[0] = v1;\n
        v2[1] = 2 - (a0 < 1);\n
        v2[2] = 0;\n
        v2[3] = 0;\n
        v2[5] = 0;\n
        v2[4] = 0;\n
        return v2;\n
    }\n
    return 0;\n
}\n
", "4204768:cgc_fread": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v6, unsigned int a0, struct_0 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    struct_0 *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edx\n
    struct_0 *v10;  // eax\n
    char *v11;  // eax\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // ebp\n
    void* v15;  // edi, Other Possible Types: unsigned int\n
    char *v16;  // edx\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ecx\n
    void* v20;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v21;  // eax\n
    char *v23;  // eax\n
    unsigned int v24;  // edx\n
    unsigned int v26;  // edx\n
    char *v27;  // edi, Other Possible Types: unsigned int\n
    unsigned int v28;  // esi\n
    char *v29;  // edi\n
    unsigned int v30;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = a1;\n
    v8 = v7->field_8;\n
    if (v8 == v7->field_c)\n
    {\n
        v7->field_c = 0;\n
        v7->field_8 = 0;\n
        v0 = &v5;\n
        if (!cgc_receive(v7->field_0, v7 + 1, 0x400))\n
        {\n
            v9 = *(&v5);\n
            if (v9)\n
            {\n
                v10 = a1;\n
                v10->field_c = v9;\n
                v11 = v10->field_14;\n
                if (v11)\n
                {\n
                    v12 = v9 & 3;\n
                    v15 = 0;\n
                    v13 = a1;\n
                    if (v9 - 1 >= 3)\n
                    {\n
                        v15 = 0;\n
                        do\n
                        {\n
                            *(24 + &v13->field_0 + v15) = v11[*(24 + &v13->field_0 + v15)];\n
                            *(25 + &v13->field_0 + v15) = v11[*(25 + &v13->field_0 + v15)];\n
                            *(26 + &v13->field_0 + v15) = v11[*(26 + &v13->field_0 + v15)];\n
                            *(27 + &v13->field_0 + v15) = v11[*(27 + &v13->field_0 + v15)];\n
                            v15 += 4;\n
                        } while ((v9 & -0x4) != v15);\n
                    }\n
                    if (v12)\n
                    {\n
                        v16 = 24 + a1 + v15;\n
                        v17 = 0;\n
                        do\n
                        {\n
                            v16[v17] = v11[v16[v17]];\n
                            v17 += 1;\n
                        } while (v12 != v17);\n
                    }\n
                }\n
            }\n
        }\n
        v7 = a1;\n
        v8 = *((v7 + 8));\n
    }\n
    v18 = a0;\n
    v19 = v6;\n
    if (v8 != -1)\n
    {\n
        v20 = *((v7 + 12)) - v8;\n
        if (*((v7 + 12)) - v8 > v18)\n
            v20 = v18;\n
        v3 = v20;\n
        cgc_memcpy();\n
        v21 = *((v7 + 8)) + v20;\n
        *((v7 + 8)) = v21;\n
        if (v21 == *((v7 + 12)))\n
        {\n
            *((v7 + 12)) = 0;\n
            *((v7 + 8)) = 0;\n
        }\n
        v19 = v6;\n
        if (!(v20 < v18))\n
            goto LABEL_402b31;\n
    }\n
    else\n
    {\n
        v20 = 0;\n
        if (0 >= v18)\n
        {\n
LABEL_402b31:\n
            return v20;\n
        }\n
    }\n
    v4 = v19 + 3;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(*(v7), v6 + v20, v18 - v20))\n
            return -1;\n
        v2 = v3;\n
        if (!v2)\n
            return -1;\n
        v23 = *((v7 + 20));\n
        if (v23)\n
        {\n
            v24 = v2;\n
            v26 = v24 & 3;\n
            v27 = 0;\n
            if (v24 - 1 >= 3)\n
            {\n
                v28 = v4 + v20;\n
                v27 = 0;\n
                do\n
                {\n
                    *((v28 + v27 - 3)) = v23[*((v28 + v27 - 3))];\n
                    *((v28 + v27 - 2)) = v23[*((v28 + v27 - 2))];\n
                    *((v28 + v27 - 1)) = v23[*((v28 + v27 - 1))];\n
                    *((v28 + v27)) = v23[*((v28 + v27))];\n
                    v27 += 4;\n
                } while ((v2 & -0x4) != v27);\n
            }\n
            if (v26)\n
            {\n
                v29 = v27 + v20 + v6;\n
                v30 = 0;\n
                do\n
                {\n
                    v29[v30] = v23[v29[v30]];\n
                    v30 += 1;\n
                } while (v26 != v30);\n
            }\n
        }\n
        v20 += v2;\n
        v18 = a0;\n
        v7 = a1;\n
        if (v20 >= v18)\n
            return v20;\n
    }\n
}\n
", "4205119:sub_402a3f": null, "4205371:sub_402b3b": null, "4205376:cgc_freaduntil": "int cgc_freaduntil(unsigned int v0, unsigned int a0, char a1, unsigned int a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // ebp\n
    char *v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v1 = a0;\n
    v2 = a1;\n
    v3 = 0;\n
    tmp_21 = v1;\n
    v5 = v1 - 1;\n
    if (tmp_21 != 1)\n
    {\n
        while (true)\n
        {\n
            v4 = cgc__getc();\n
            if (v4 == -1)\n
                return -1;\n
            if (v4 == v2)\n
                break;\n
            *((v0 + v3)) = v4;\n
            v3 += 1;\n
            goto LABEL_402b98;\n
        }\n
    }\n
    tmp_1 = v5;\n
    v5 = v3;\n
    if (!(v3 == tmp_1))\n
        goto LABEL_402bb0;\n
LABEL_402b98:\n
    while (true)\n
    {\n
        v6 = cgc__getc();\n
        if (v6 == -1)\n
            break;\n
        if (v6 == v2)\n
            goto LABEL_402bb0;\n
    }\n
LABEL_402bb0:\n
    *((v0 + v5)) = 0;\n
    return v5;\n
}\n
", "4205513:sub_402bc9": null, "4205520:cgc__getc": "int cgc__getc()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // ebp\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // eax\n
\n
    v7 = v6;\n
    v8 = *((v6 + 8));\n
    if (v8 == -1)\n
    {\n
        v0 = &v3;\n
        v16 = -1;\n
        if (cgc_receive(*(v6), &v1, 1))\n
            return -1;\n
        if (!*(&v3))\n
            return -1;\n
        v9 = *((v6 + 20));\n
        *(&v16) = v1;\n
        if (!v9)\n
            return v16;\n
        *(&v16) = *((v9 + v16));\n
    }\n
    else if (v8 != *((v6 + 12)))\n
    {\n
LABEL_402cc9:\n
        *((v7 + 8)) = v8 + 1;\n
        v16 = *((v7 + v8 + 24));\n
        return v16;\n
    }\n
    else\n
    {\n
        *((v6 + 12)) = 0;\n
        *((v6 + 8)) = 0;\n
        v0 = &v4;\n
        if (cgc_receive(*(v6), v6 + 24, 0x400))\n
            return -1;\n
        v13 = *(&v4);\n
        if (*(&v4))\n
        {\n
            *((v6 + 12)) = v13;\n
            v10 = *((v6 + 20));\n
            if (v10)\n
            {\n
                v2 = v13;\n
                v11 = v13 & 3;\n
                v12 = 0;\n
                if (v13 - 1 >= 3)\n
                {\n
                    v12 = 0;\n
                    do\n
                    {\n
                        *((v7 + v12 + 24)) = *((v10 + *((v7 + v12 + 24))));\n
                        *((v7 + v12 + 25)) = *((v10 + *((v7 + v12 + 25))));\n
                        *((v7 + v12 + 26)) = *((v10 + *((v7 + v12 + 26))));\n
                        *((v7 + v12 + 27)) = *((v10 + *((v7 + v12 + 27))));\n
                        v12 += 4;\n
                    } while ((v2 & -0x4) != v12);\n
                }\n
                v13 = v2;\n
                if (v11)\n
                {\n
                    v14 = v12 + v7 + 24;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        *((v14 + v15)) = *((v10 + *((v14 + v15))));\n
                        v15 += 1;\n
                    } while (v11 != v15);\n
                }\n
            }\n
            if (v13 >= 0)\n
            {\n
                v8 = *((v7 + 8));\n
                goto LABEL_402cc9;\n
            }\n
        }\n
    }\n
}\n
", "4205857:sub_402d21": null, "4205872:cgc_free": "extern unsigned int g_heap;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return malloc_free(&g_heap);\n
}\n
", "4205912:sub_402d58": null, "4205920:cgc_fwrite": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v9, unsigned int a0, struct_0 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v3;  // [bp-0x418]\n
    char v4;  // [bp-0x414]\n
    char v5;  // [bp-0x410]\n
    unsigned int v6;  // [bp-0x40f]\n
    unsigned int v7;  // [bp-0x40e]\n
    unsigned int v8;  // [bp-0x40d]\n
    struct_0 *v10;  // esi\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // eax\n
    char *v13;  // edi\n
    unsigned int v14;  // eax\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    void* v16;  // edi, Other Possible Types: unsigned int\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // ecx\n
    char *v20;  // ecx\n
    unsigned int v21;  // edx\n
    void* v22;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    void* v24;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = a1;\n
    v11 = a0;\n
    if (v10->field_8 != -1)\n
    {\n
        if (v11 >= 0x400)\n
        {\n
            cgc_fflush(v10);\n
        }\n
        else\n
        {\n
            v12 = v10->field_c;\n
            v16 = 0;\n
            if (v12 + v11 >= 0x400)\n
            {\n
                v16 = 0x400 - v12;\n
                cgc_memcpy(&v10[1].padding_4[v12], v9);\n
                v10->field_c = v10->field_c + v16;\n
                cgc_fflush(v10);\n
            }\n
            if (v16 >= v11)\n
                return v16;\n
            cgc_memcpy(&v10[1].padding_4[v10->field_c], v9 + v16);\n
            v10->field_c = v10->field_c + a0 - v16;\n
            return a0;\n
        }\n
    }\n
    v2 = v10->field_0;\n
    v13 = v10->field_10;\n
    if (!v13)\n
    {\n
        v15 = 0;\n
        do\n
        {\n
            if (v15 >= v11)\n
                return a0;\n
            v0 = &v5;\n
            v14 = cgc_transmit(v2, v9 + v15, v11 - v15);\n
            v15 += *(&v5);\n
        } while (!v14);\n
    }\n
    else\n
    {\n
        if (!v11)\n
            return a0;\n
        v24 = 0;\n
LABEL_402dce:\n
        v17 = v11 - v24;\n
        if (v17 >= 0x400)\n
            v17 = 0x400;\n
        v3 = v24;\n
        cgc_memcpy();\n
        if (v17)\n
        {\n
            v18 = v17 & 3;\n
            v19 = 0;\n
            if (v17 - 1 >= 3)\n
            {\n
                v19 = 0;\n
                do\n
                {\n
                    (&v5)[v19] = v13[(&v5)[v19]];\n
                    *(&v6 + v19) = v13[*(&v6 + v19)];\n
                    *(&v7 + v19) = v13[*(&v7 + v19)];\n
                    *(&v8 + v19) = v13[*(&v8 + v19)];\n
                    v19 += 4;\n
                } while ((v17 & 2044) != v19);\n
            }\n
            if (v18)\n
            {\n
                v20 = &(&v5)[v19];\n
                v21 = 0;\n
                do\n
                {\n
                    v20[v21] = v13[v20[v21]];\n
                    v21 += 1;\n
                } while (v18 != v21);\n
            }\n
        }\n
        v22 = 0;\n
        do\n
        {\n
            if (v17 <= v22)\n
            {\n
                v24 = v3 + v17;\n
                v11 = a0;\n
                if (v24 >= a0)\n
                    return a0;\n
                goto LABEL_402dce;\n
            }\n
            v0 = &v4;\n
            v23 = cgc_transmit(v2, &(&v5)[v22], v17 - v22);\n
            v22 += *(&v4);\n
        } while (!v23);\n
    }\n
    return -1;\n
}\n
", "4206510:sub_402fae": null, "4206512:cgc_fxlat": "int cgc_fxlat(unsigned int v1[6], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v2;  // ebp\n
    unsigned int v3[6];  // edi\n
    char v4[256];  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // esi\n
    unsigned int v7;  // eax\n
    char *v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    char v15;  // al\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v7 = v3[4];\n
    if (!a0)\n
    {\n
        v4 = cgc_free(v7);\n
        v3[4] = 0;\n
        v3[5] = 0;\n
        return v4;\n
    }\n
    v0 = 0x100;\n
    v5 = cgc_realloc(v7);\n
    v3[4] = v5;\n
    v0 = 0x100;\n
    v3[5] = cgc_realloc(v3[5]);\n
    *(&v7) = *(v2);\n
    if (!*(v2))\n
    {\n
        v9 = 826981510;\n
    }\n
    else\n
    {\n
        v8 = v2 + 1;\n
        v9 = 826981510;\n
        do\n
        {\n
            v9 = __ROL__(v9 + v9 * 36 ^ v7, 13);\n
            v7 = *(v8);\n
            v8 += 1;\n
        } while (v7);\n
    }\n
    v10 = 0;\n
    do\n
    {\n
        *((v5 + v10)) = v10;\n
        *((v5 + v10 + 1)) = v10 + 1;\n
        *((v5 + v10 + 2)) = v10 + 2;\n
        *((v5 + v10 + 3)) = v10 + 3;\n
        *((v5 + v10 + 4)) = v10 + 4;\n
        *((v5 + v10 + 5)) = v10 + 5;\n
        *((v5 + v10 + 6)) = v10 + 6;\n
        *((v5 + v10 + 7)) = v10 + 7;\n
        v10 += 8;\n
    } while (v10 != 0x100);\n
    v11 = 255;\n
    while (true)\n
    {\n
        v12 = v9;\n
        v13 = v9 * 3;\n
        v14 = (0 CONCAT v12) /m v11 >> 32;\n
        v9 = v13 / 0x200000 ^ __ROL__(v13, 13);\n
        v15 = *((v5 + v11));\n
        *((v5 + v11)) = *((v5 + v14));\n
        *((v5 + v14)) = v15;\n
        v11 -= 1;\n
    }\n
}\n
", "4206880:cgc_malloc": "extern unsigned int g_heap;\n
\n
int cgc_malloc(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc_malloc_alloc(&g_heap);\n
}\n
", "4206920:sub_403148": null, "4206928:cgc_malloc_alloc": "extern char g_408108;\n
extern char g_40813e;\n
\n
int cgc_malloc_alloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v4;  // [bp-0x14]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edi\n
    unsigned int v43;  // eax\n
\n
    v9 = 0;\n
    if (a0 < 0)\n
    {\n
LABEL_403464:\n
        return v9;\n
    }\n
    v10 = v8;\n
    v11 = a0 + 3 & -0x4;\n
    if (!(a0 + 3 & -0x4))\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 <= 15)\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 > 131071)\n
    {\n
        v14 = v11 + 4103 & -0x1000;\n
        v0 = &v4;\n
        v9 = 0;\n
        if (!cgc_allocate(v14, 0))\n
        {\n
            v17 = *(&v4);\n
            *(v17) = v8;\n
            *((v17 + 4)) = v14;\n
            v9 = v17 + 8;\n
            goto LABEL_403464;\n
        }\n
    }\n
    v12 = v11 + 23;\n
    v13 = v12 & -0x10;\n
    v2 = v13;\n
    if (!(v12 & -0x10))\n
    {\n
        v15 = -1;\n
        v16 = *((v10 + -0x4));\n
        if (!v16)\n
            goto LABEL_0x4033d4;\n
        else\n
            goto LABEL_0x4033f0;\n
    }\n
    else if (v13 < 513)\n
    {\n
        v15 = (v12 >> 4) + 2;\n
        v16 = 0;\n
    }\n
    else if (v13 <= 0x1200)\n
    {\n
        v15 = (v13 - 0x200 >> 7) + 34;\n
        v16 = *((v10 + v15 * 4));\n
        if (!v16)\n
            goto LABEL_0x4033d4;\n
        else\n
            goto LABEL_0x4033f0;\n
    }\n
    else\n
    {\n
        v15 = 130;\n
        if (v13 <= 0x20000)\n
        {\n
            v15 = (v13 - 0x1200 >> 11) + 66;\n
            v16 = *((v10 + v15 * 4));\n
            if (!v16)\n
                goto LABEL_0x4033d4;\n
            else\n
                goto LABEL_0x4033f0;\n
        }\n
    }\n
}\n
", "4207776:tiny_alloc": "int tiny_alloc()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned short *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned short *v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edi\n
    struct struct_0 *v9[1160];  // ecx\n
    struct struct_0 *v10[1160];  // esi\n
    unsigned int v11;  // ebp\n
    unsigned short *v12;  // eax, Other Possible Types: unsigned int\n
    unsigned short v13[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edi\n
\n
    v8 = v7;\n
    v10 = v9;\n
    if (v7 <= 15)\n
    {\n
        v11 = v7 / 4 - 1;\n
    }\n
    else if (v7 <= 0x200)\n
    {\n
        v11 = (v7 >> 4) + 2;\n
    }\n
    else if (v7 <= 0x1200)\n
    {\n
        v11 = (v7 - 0x200 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v11 = 130;\n
        if (v7 <= 0x20000)\n
            v11 = (v7 - 0x1200 >> 11) + 66;\n
    }\n
    v12 = v9[v11];\n
    if (v12)\n
    {\n
        v9[v11] = *(&v12);\n
        return v9[v11];\n
    }\n
    v13 = v9[1155 + v11];\n
    if (v13)\n
    {\n
        v14 = v13[0];\n
        v15 = v13[1];\n
    }\n
    else\n
    {\n
        v16 = v10[1158];\n
        if (v16)\n
        {\n
            v12 = v10[1159];\n
        }\n
        else\n
        {\n
            v0 = &v5;\n
            if (cgc_allocate(0x200000, 0))\n
            {\n
                v10[1158] = 0;\n
                return 0;\n
            }\n
            v17 = *(&v5);\n
            v4 = v17 + 1048575;\n
            v16 = v4 & -0x100000;\n
            v1 = v17;\n
            v2 = v16;\n
            if (v16 > v1)\n
            {\n
                cgc_deallocate(v1);\n
                v16 = v2;\n
            }\n
            v18 = v1 + 0x200000;\n
            v3 = v16 + 0x100000;\n
            v1 = v18 - v3;\n
            if (v18 > v3)\n
            {\n
                cgc_deallocate(v3);\n
                v16 = v2;\n
            }\n
            *(524 + &v10[0] + (v4 >> 20)) = 1;\n
            v10[1158] = v16;\n
            v12 = 0;\n
            if (!v16)\n
                return 0;\n
        }\n
        v13 = v12 + v16;\n
        v10[1155 + v11] = v13;\n
        *((v12 + v16)) = v8;\n
        *((v12 + v16 + 2)) = v8;\n
        v19 = v12 + 0x1000;\n
        v10[1159] = v19;\n
        if (v19 == 0x100000)\n
            v10[1158] = 0;\n
        v14 = v8;\n
        v15 = v8;\n
    }\n
    v20 = v8 + v15;\n
    *((v13 + 2)) = v20;\n
    if (v14 + v20 < 4097)\n
        return v15 + v13;\n
    v10[1155 + v11] = 0;\n
}\n
", "4208207:sub_40364f": null, "4208208:malloc_free": "int malloc_free(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v15;  // cl\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // edx\n
    unsigned int v38;  // eax\n
\n
    v7 = v11;\n
    v6 = v12;\n
    v5 = v13;\n
    v38 = a0;\n
    if (!v38)\n
    {\n
LABEL_403971:\n
        return v38;\n
    }\n
    v23 = v10;\n
    v15 = *((v23 + (v38 >> 20) + 524));\n
    if (v15 != 2)\n
    {\n
        if (v15 == 1)\n
        {\n
            v24 = *((v38 & -0x1000));\n
            if (v24 <= 15)\n
            {\n
                v17 = v24 / 4 - 1;\n
                goto LABEL_4037d6;\n
            }\n
            if (v24 <= 0x200)\n
            {\n
                v17 = (v24 >> 4) + 2;\n
                goto LABEL_4037d6;\n
            }\n
        }\n
        if (!(!v15))\n
            goto LABEL_403971;\n
        if ((v38 & 4095) != 8)\n
        {\n
            v19 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_4039bd;\n
        }\n
        else\n
        {\n
            v20 = *((v38 - 8));\n
            if (v20 != v23)\n
            {\n
                v22 = \"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\";\n
                v1 = v23;\n
            }\n
            else\n
            {\n
                v20 = *((v38 - 4));\n
                if (v20 - 0x20000 <= 2147356671 && !(v20 & 4095))\n
                {\n
                    v38 = cgc_deallocate(v38 - 8);\n
                    goto LABEL_403971;\n
                }\n
                v22 = \"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\";\n
            }\n
            v0 = v20;\n
            v38 = cgc_heap_error(v22, v38);\n
        }\n
    }\n
    else if (!(v38 & 7))\n
    {\n
        v24 = v38 - 8;\n
        v16 = *((v24 + 4));\n
        if ((v16 & 1))\n
        {\n
            v19 = \"BAD SMALL FREE: double cgc_free ptr=%08x\\n
\";\n
            goto LABEL_4039bd;\n
        }\n
        else if (v16 - 131073 <= -131058)\n
        {\n
            v19 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_4039bd;\n
        }\n
        else\n
        {\n
            v21 = *(v24);\n
            v12 = v24 - *(v24);\n
            if (!*(v24))\n
                v12 = v21;\n
            v23 = v16 + v24;\n
            v2 = v24;\n
            if (v12)\n
            {\n
                v4 = v23;\n
                v3 = *((v12 + 4));\n
                if (!((v3 & -2) == v21))\n
                    goto LABEL_4039d4;\n
                v23 = v4;\n
                v24 = v3;\n
                if (*(v23) == v16)\n
                {\n
                    if ((v24 & 1))\n
                    {\n
                        if (v21 <= 15)\n
                        {\n
                            v25 = v24 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v21 <= 0x200)\n
                            {\n
                                v25 = (v24 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v21 <= 0x1200)\n
                                {\n
                                    v25 = (v21 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v25 = 130;\n
                                    if (v21 <= 0x20000)\n
                                        v25 = (v21 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v12 + 4)) = v21;\n
                        v26 = *((v12 + 8));\n
                        if (v26)\n
                            *((v26 + 12)) = *((v12 + 12));\n
                        v27 = *((v12 + 12));\n
                        if (v27)\n
                            *((v27 + 8)) = v26;\n
                        if (*((v10 + (v25 << 2))) == v12)\n
                            *((v10 + v25 * 4)) = v27;\n
                        *((v12 + 8)) = 0;\n
                        *((v12 + 12)) = 0;\n
                        v28 = v21 + *((v2 + 4));\n
                        *((v12 + 4)) = v28;\n
                        *(v23) = v28;\n
                        v2 = v12;\n
                    }\n
LABEL_40385c:\n
                    v29 = *((v23 + 4));\n
                    v30 = v10;\n
                    v12 = v2;\n
                    if ((v29 & 1))\n
                    {\n
                        v31 = v29 & -2;\n
                        if (v31 <= 15)\n
                        {\n
                            v32 = v29 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v31 <= 0x200)\n
                            {\n
                                v32 = (v29 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v31 <= 0x1200)\n
                                {\n
                                    v32 = (v31 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v32 = 130;\n
                                    if (v31 <= 0x20000)\n
                                        v32 = (v31 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v23 + 4)) = v31;\n
                        v33 = *((v23 + 8));\n
                        if (v33)\n
                            *((v33 + 12)) = *((v23 + 12));\n
                        v34 = *((v23 + 12));\n
                        if (*((v23 + 12)))\n
                            *((v34 + 8)) = v33;\n
                        v30 = v10;\n
                        if (*((v30 + (v32 << 2))) == v23)\n
                            *((v30 + v32 * 4)) = v34;\n
                        *((v23 + 8)) = 0;\n
                        *((v23 + 12)) = 0;\n
                        v12 = v2;\n
                        v35 = v31 + *((v12 + 4));\n
                        *((v12 + 4)) = v35;\n
                        *((v12 + v35)) = v35;\n
                    }\n
                    v36 = *((v12 + 4));\n
                    if (v36 <= 15)\n
                    {\n
                        v37 = v36 / 4 - 1;\n
                    }\n
                    else\n
                    {\n
                        if (v36 <= 0x200)\n
                        {\n
                            v37 = (v36 >> 4) + 2;\n
                        }\n
                        else\n
                        {\n
                            if (v36 <= 0x1200)\n
                            {\n
                                v37 = (v36 - 0x200 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v37 = 130;\n
                                if (v36 <= 0x20000)\n
                                    v37 = (v36 - 0x1200 >> 11) + 66;\n
                            }\n
                        }\n
                    }\n
                    if (!(!(v36 & 1)))\n
                        goto LABEL_4039c4;\n
                    *((v12 + 4)) = v36 | 1;\n
                    *((v12 + 8)) = 0;\n
                    *((v12 + 12)) = *((v30 + v37 * 4));\n
                    *((v30 + v37 * 4)) = v12;\n
                    v38 = *((v12 + 12));\n
                    if (v38)\n
                    {\n
                        *((v38 + 8)) = v12;\n
                        goto LABEL_403971;\n
                    }\n
                }\n
            }\n
            else if (*((v24 + v16)) == v16)\n
            {\n
                goto LABEL_40385c;\n
            }\n
            v0 = v38;\n
            v38 = cgc_heap_error(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v23);\n
            v17 = (v24 <= 0x1200 ? (v24 - 0x1200 >> 11) + 66 : (v24 - 0x200 >> 7) + 34);\n
LABEL_4037d6:\n
            *(v38) = *((v23 + v17 * 4));\n
            *((v23 + v17 * 4)) = v38;\n
            goto LABEL_403971;\n
        }\n
    }\n
    v19 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_4039bd:\n
    v8 = v38;\n
    v7 = v19;\n
    cgc_heap_error(*(&v9));\n
LABEL_4039c4:\n
    v6 = v12;\n
    v5 = \"BAD SMALL UNLINK: block is already cgc_free hdr=%08X\\n
\";\n
    v38 = cgc_heap_error(*(&v9));\n
LABEL_4039d4:\n
    v7 = v38;\n
    v6 = v12;\n
    v5 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    cgc_heap_error(v10, a0);\n
    return cgc_malloc_size(v10, a0);\n
}\n
", "4209136:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_size(unsigned int v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ecx\n
    char v2;  // dl\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *((v0 + (v1 >> 20) + 524));\n
    if (!(v2 & 253))\n
        return *(&v1->field_0) - 8;\n
    v3 = 0;\n
    if (v2 != 1)\n
        return v3;\n
    v3 = *((v1 & -0x1000));\n
}\n
", "4209185:sub_403a21": null, "4209200:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_realloc(unsigned int v1, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // ebp\n
    char v6;  // dl\n
    void* v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    v3 = 0;\n
    if (v2 < 0)\n
    {\n
LABEL_403b05:\n
        return v3;\n
    }\n
    v4 = a0;\n
    v7 = v1;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
    {\n
LABEL_403afd:\n
        malloc_free(v1, a0);\n
        goto LABEL_403b05;\n
    }\n
    if (!v4)\n
    {\n
        v11 = cgc_malloc_alloc(v7, v2);\n
        return v11;\n
    }\n
    v5 = v4 / 0x100000;\n
    v6 = *(524 + v7 + (v4 >> 20));\n
    if ((*(524 + v7 + (v4 >> 20)) & 253))\n
    {\n
        v7 = 0;\n
        if (v6 == 1)\n
            v7 = *((v4 & -0x1000));\n
        if (!(v7 < v2))\n
            goto LABEL_403ae0;\n
    }\n
    else if (*(&v4->field_0) - 8 >= v2)\n
    {\n
LABEL_403ae0:\n
        v3 = v4;\n
        goto LABEL_403b05;\n
    }\n
    v8 = cgc_malloc_alloc(v1, v2);\n
    if (!v8)\n
        goto LABEL_403b05;\n
    v3 = v8;\n
    v9 = v1;\n
    *(&v7) = *((v9 + v5 + 524));\n
    if (!(*((v9 + v5 + 524)) & 253))\n
    {\n
        v10 = *(&v4->field_0) - 8;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        if (v7 == 1)\n
            v10 = *((v4 & -0x1000));\n
    }\n
    v0 = v10;\n
    cgc_memcpy(v3, v4);\n
    goto LABEL_403afd;\n
}\n
", "4209423:sub_403b0f": null, "4209424:cgc_heap_error": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stderr;\n
\n
int cgc_heap_error()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v6;\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v5;\n
    v1 = &v5;\n
    v0 = v4;\n
    cgc_vfprintf(cgc_stderr, v0);\n
    cgc__terminate(1, v0);\n
    cgc_memchr();\n
    return;\n
}\n
", "4209488:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = v0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
            return v2;\n
        v2 += 1;\n
        tmp_5 = v1;\n
        v1 -= 1;\n
        if (tmp_5 == 1)\n
            return 0;\n
    }\n
}\n
", "4209543:sub_403b87": null, "4209552:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) != *((a0 + v2)))\n
            return *((v0 + v2)) - *((a0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4209615:sub_403bcf": null, "4209616:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4209746:sub_403c52": null, "4209760:cgc_memmove": "int cgc_memmove(char *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ebp\n
    char *v4;  // ecx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    char *v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    char *v17;  // edx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    char *v21;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v15 = v1;\n
    if (v15 > v4)\n
    {\n
        if (!v3)\n
            return v15;\n
        v5 = v3 - 1;\n
        v16 = v3 & 3;\n
        v14 = 0;\n
        if (v5 >= 3)\n
        {\n
            v0 = v16;\n
            v7 = v3;\n
            v8 = v15 + v5;\n
            v9 = &v4[v5];\n
            v11 = 0;\n
            do\n
            {\n
                v8[v11] = *((v9 + v11));\n
                v8[1 + v11] = *((v9 + v11 - 1));\n
                v8[2 + v11] = *((v9 + v11 - 2));\n
                v8[3 + v11] = *((v9 + v11 - 3));\n
                v11 -= 4;\n
            } while (-(v7 & -0x4) != v11);\n
            v14 = -(v11);\n
            v15 = v1;\n
            v3 = a1;\n
            v16 = v0;\n
        }\n
        if (!v16)\n
            return v15;\n
        v20 = ~(v14) + v3;\n
        v21 = v15 + v20;\n
        v23 = -(v16);\n
        v24 = 0;\n
        do\n
        {\n
            v21[v24] = v4[v24 + v20];\n
            v24 -= 1;\n
        } while (v23 != v24);\n
        return v15;\n
    }\n
    else\n
    {\n
        if (!v3)\n
            return v15;\n
        v6 = v3 & 3;\n
        v13 = 0;\n
        if (v3 - 1 >= 3)\n
        {\n
            v12 = v3 & -0x4;\n
            v13 = 0;\n
            do\n
            {\n
                *((v15 + v13)) = v4[v13];\n
                *((v15 + v13 + 1)) = v4[1 + v13];\n
                *((v15 + v13 + 2)) = v4[2 + v13];\n
                *((v15 + v13 + 3)) = v4[3 + v13];\n
                v13 += 4;\n
            } while (v12 != v13);\n
        }\n
        if (!v6)\n
            return v1;\n
        v17 = v15 + v13;\n
        v18 = &v4[v13];\n
        v19 = 0;\n
        do\n
        {\n
            v17[v19] = *((v18 + v19));\n
            v19 += 1;\n
        } while (v6 != v19);\n
        return v1;\n
    }\n
}\n
", "4210054:sub_403d86": null, "4210064:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edi\n
    char *v2;  // eax\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // esi\n
    char *v7;  // esi\n
    unsigned int v8;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 7;\n
    v5 = 0;\n
    if (v1 - 1 >= 7)\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2[v5] = v3;\n
            v2[1 + v5] = v3;\n
            v2[2 + v5] = v3;\n
            v2[3 + v5] = v3;\n
            v2[4 + v5] = v3;\n
            v2[5 + v5] = v3;\n
            v2[6 + v5] = v3;\n
            v2[7 + v5] = v3;\n
            v5 += 8;\n
        } while ((v1 & -8) != v5);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v5];\n
    v8 = 0;\n
    do\n
    {\n
        v7[v8] = v3;\n
        v8 += 1;\n
    } while (v4 != v8);\n
    return v0;\n
}\n
", "4210174:sub_403dfe": null, "4210176:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_printf(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0x8]\n
    unsigned int v4;  // esi\n
\n
    v1 = &v3;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v0 = 0;\n
        v4 = cgc__vsfprintf(cgc_stdout);\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = cgc__vsfprintf(cgc_stdout);\n
    return v4;\n
}\n
", "4210289:sub_403e71": null, "4210304:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v2;  // eax\n
\n
    if (cgc_stdout->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v2 = cgc__vsfprintf(cgc_stdout);\n
        return v2;\n
    }\n
    cgc_stdout->field_8 = 0;\n
    v0 = 0;\n
    v2 = cgc__vsfprintf(cgc_stdout);\n
    cgc_fflush(cgc_stdout);\n
    cgc_stdout->field_8 = -1;\n
    return v2;\n
}\n
", "4210411:sub_403eeb": null, "4210416:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_fprintf(struct_0 *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0xc]\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v4 = v2;\n
    v1 = &v3;\n
    if (v4->field_8 == -1)\n
    {\n
        v4->field_8 = 0;\n
        v0 = 0;\n
        v5 = cgc__vsfprintf(v4);\n
        cgc_fflush(v4);\n
        v4->field_8 = -1;\n
        return v5;\n
    }\n
    v0 = 0;\n
    v5 = cgc__vsfprintf(v4);\n
    return v5;\n
}\n
", "4210525:sub_403f5d": null, "4210528:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_vfprintf(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x18]\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
\n
    v2 = v1;\n
    if (v2->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v3 = cgc__vsfprintf(v2);\n
        return v3;\n
    }\n
    v2->field_8 = 0;\n
    v0 = 0;\n
    v3 = cgc__vsfprintf(v2);\n
    cgc_fflush(v2);\n
    v2->field_8 = -1;\n
    return v3;\n
}\n
", "4210631:sub_403fc7": null, "4210640:cgc_sprintf": "int cgc_sprintf(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    char v3;  // [bp+0xc]\n
\n
    v1 = &v3;\n
    v0 = v2;\n
    return cgc__vsfprintf(0);\n
}\n
", "4210688:cgc_vsprintf": "int cgc_vsprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc__vsfprintf(0);\n
}\n
", "4210731:sub_40402b": null, "4210736:cgc__vsfprintf": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char field_1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_-1;\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__vsfprintf()\n
{\n
    unsigned int v1;  // [bp-0x6c]\n
    struct_0 *v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x58]\n
    char v8;  // [bp-0x50]\n
    unsigned int v11;  // [bp-0x8]\n
    char v13;  // [bp+0x8]\n
    unsigned int v31;  // ebx\n
    char *v32;  // ebx\n
    struct struct_0 **v33;  // ecx\n
    unsigned int v40;  // edx\n
    unsigned int v77;  // esi\n
    struct_0 *v78;  // eax\n
    struct_0 *v79;  // ebp\n
\n
    v11 = v31;\n
    v32 = *(&v13);\n
    v79 = v33 + 1;\n
    v3 = v33 + 1;\n
    v78 = *(v33);\n
    if (!*(v33))\n
    {\n
        v77 = 0;\n
    }\n
    else\n
    {\n
        v4 = v40;\n
        v6 = 20 + -0x1 * &v8;\n
        v77 = 0;\n
        v1 = &_GLOBAL_OFFSET_TABLE_;\n
    }\n
}\n
", "4210806:sub_404076": null, "4212320:cgc_realloc": "extern unsigned int g_heap;\n
\n
int cgc_realloc(void* v0, unsigned int a0)\n
{\n
    return cgc_malloc_realloc(&g_heap, v0, a0);\n
}\n
", "4212364:sub_40468c": null, "4212368:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    char v2;  // al, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v3 = v0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v2 = cgc_tolower(v2);\n
            if (v2 != cgc_tolower(*(v1)))\n
                return *((v3 - 1)) - *(v1);\n
            v1 += 1;\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4212486:sub_404706": null, "4212496:cgc_strcasestr": "int cgc_strcasestr(char v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_7;  // tmp #7\n
    char v2[2];  // esi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (!v2[0])\n
        return 0;\n
    while (true)\n
    {\n
        v0 = cgc_strlen();\n
        if (!cgc_strncasecmp(v2, a0))\n
            return v2;\n
        tmp_7 = *((v2 + 1));\n
        v2 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4212585:sub_404769": null, "4212592:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx\n
    unsigned int v3;  // bl, Other Possible Types: char\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v2);\n
    v4 = 0;\n
    if (*(v2))\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            if (v3 == v1)\n
                return &v0[v4];\n
            v3 = v2[1 + v4];\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v5 = (!v1 ? 0 : &v2[v4]);\n
    return v5;\n
}\n
", "4212662:sub_4047b6": null, "4212672:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4212740:sub_404804": null, "4212752:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char *v3;  // ecx, Other Possible Types: unsigned int\n
    char v4;  // dl\n
    char *v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v1);\n
    v5 = v2;\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        v5 = v2;\n
        do\n
        {\n
            *(v5) = v4;\n
            v5 += 1;\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (v4);\n
    }\n
    *(v5) = 0;\n
    return v0;\n
}\n
", "4212804:sub_404844": null, "4212816:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    char *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4212896:cgc_strlen": "int cgc_strlen(char *v0)\n
{\n
    char *v1;  // ecx\n
    void* v2;  // edx, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!*(v1))\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = v1[1 + v2];\n
        v2 += 1;\n
    } while (v3);\n
    return v2;\n
}\n
", "4212928:cgc_strncasecmp": "int cgc_strncasecmp(char v1[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3[2];  // ebp, Other Possible Types: unsigned int\n
    char v4;  // al\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v0 = &v1[a1];\n
    v4 = v1[0];\n
    if (v1[0])\n
    {\n
        while (*(v2))\n
        {\n
            v5 = cgc_tolower(v4);\n
            if (v5 != cgc_tolower(*(v2)))\n
                break;\n
            if (v3 >= v0)\n
                break;\n
            v2 += 1;\n
            v4 = *((v3 + 1));\n
            v3 += 1;\n
            if (!v4)\n
                break;\n
        }\n
    }\n
    v6 = (v3 == v0 ? *(v3) - *(v2) : 0);\n
    return v6;\n
}\n
", "4213056:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi\n
    char *v3;  // eax\n
    char v4;  // bl\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = *(v2);\n
    v6 = 0;\n
    v5 = v3;\n
    if (*(v2) && v1)\n
    {\n
        v6 = 0;\n
        while (true)\n
        {\n
            v3[v6] = v4;\n
            v4 = v2[1 + v6];\n
            v6 += 1;\n
            if (!v4)\n
                break;\n
            if (v6 >= v1)\n
                break;\n
        }\n
        v5 = &v3[v6];\n
    }\n
    if (v6 >= v1)\n
        return v0;\n
    v7 = v5 - v3;\n
    do\n
    {\n
        *(v5) = 0;\n
        v5 += 1;\n
        v7 += 1;\n
    } while (v7 < v1);\n
    return v0;\n
}\n
", "4213137:sub_404991": null, "4213152:cgc_strndup": "int cgc_strndup(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // eax\n
    char *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = a0;\n
    v2 = cgc_strlen(v0);\n
    v3 = (!(v2 <= v1) ? v2 : v1);\n
    v4 = cgc_malloc(v3 + 1);\n
    if (v4)\n
    {\n
        cgc_memcpy(v4, v0, v3);\n
        v3[v4] = 0;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4213241:sub_4049f9": null, "4213248:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v1, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // edi, Other Possible Types: unsigned int\n
    void* v5;  // ebp, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // ecx, Other Possible Types: unsigned int\n
\n
    v2 = *(v1);\n
    if (!v2)\n
        return v2;\n
    v3 = *(v2);\n
    v0 = v2;\n
    if (!*(v2))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v2 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v6 = v4 - 1;\n
                v2 = v0;\n
                v7 = v1;\n
                if (!(!*((v4 - 1))))\n
                    goto LABEL_404a61;\n
                goto LABEL_404a5f;\n
            }\n
            v5 += 1;\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        goto LABEL_404a61;\n
    }\n
    v2 = v0;\n
    v6 = &v2[v5];\n
    v7 = v1;\n
LABEL_404a5f:\n
    v4 = 0;\n
LABEL_404a61:\n
    *(v7) = v4;\n
    *(v6) = 0;\n
    return v2;\n
}\n
", "4213378:sub_404a82": null, "4213392:cgc_strstr": "int cgc_strstr(char v0[2], char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v1[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    while (true)\n
    {\n
        if (cgc_strcmp(v1, a0))\n
        {\n
            tmp_7 = *((v1 + 1));\n
            v1 += 1;\n
            if (!tmp_7)\n
                return 0;\n
        }\n
        else\n
        {\n
            return v1;\n
        }\n
    }\n
}\n
", "4213480:sub_404ae8": null, "4213488:cgc_strtol": "int cgc_strtol(char v6[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_2;  // tmp #2\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    char v10[2];  // esi\n
    char v11;  // al\n
    unsigned int v12;  // eax, Other Possible Types: char\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // esi\n
    void* v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v22;  // eax, Other Possible Types: unsigned int\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // ecx\n
    char v25[2];  // ebp, Other Possible Types: unsigned int\n
    void* v26;  // esi, Other Possible Types: unsigned int\n
    char v27[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v10 = v6;\n
    v12 = cgc_isspace(v10[0]);\n
    v25 = v10;\n
    if (v12)\n
    {\n
        v25 = v10;\n
        do\n
        {\n
            if (!*(v25))\n
            {\n
                v21 = 0;\n
                v23 = 1;\n
                v24 = 1;\n
                v26 = 0;\n
                v22 = a0;\n
                if (!v22)\n
                    goto LABEL_404ce0;\n
            }\n
            v11 = *((v25 + 1));\n
            v25 += 1;\n
            v12 = cgc_isspace(v11);\n
        } while (v12);\n
    }\n
    v13 = a1;\n
    if (*(v25) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v25) == 43)\n
            v25 += 1;\n
        if (!v13)\n
            goto LABEL_404bb8;\n
    }\n
    else\n
    {\n
        v25 += 1;\n
        v0 = -1;\n
        if (!v13)\n
        {\n
LABEL_404bb8:\n
            *(&v12) = *(v25);\n
            if (*(v25) != 48)\n
            {\n
LABEL_404bf3:\n
                v12 = cgc_isdigit(v12);\n
                v13 = 10;\n
                if (!v12)\n
                    goto LABEL_404cc0;\n
LABEL_404c0b:\n
                *(&v12) = *(v25);\n
LABEL_404c0e:\n
                if (!v12)\n
                {\n
LABEL_404cc0:\n
                    v21 = 0;\n
                    v24 = 1;\n
                    v26 = 0;\n
                    v22 = a0;\n
                    v23 = v0;\n
                    if (!v22)\n
                        goto LABEL_404ce0;\n
LABEL_404cd5:\n
                    tmp_2 = v24;\n
                    v27 = v6;\n
                    if (!tmp_2)\n
                        v27 = v25;\n
                    *(v22) = v27;\n
                    goto LABEL_404ce0;\n
                }\n
LABEL_404c16:\n
                v26 = 0;\n
                v21 = 0;\n
                v24 = 1;\n
                v1 = v13;\n
                do\n
                {\n
                    v2 = v24;\n
                    v14 = cgc_isdigit(v12);\n
                    v15 = *(v25);\n
                    if (v14)\n
                    {\n
                        v16 = v15 - 48;\n
                        v17 = v1;\n
                        if (!(v16 < v17))\n
                            goto LABEL_404d03;\n
                    }\n
                    else\n
                    {\n
                        v19 = *(v25);\n
                        if (cgc_islower(v15))\n
                        {\n
                            v16 = v19 - 87;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_404d03;\n
                        }\n
                        else if (!cgc_isupper(v19))\n
                        {\n
LABEL_404d03:\n
                            v22 = a0;\n
                            v23 = v0;\n
                            v24 = v2;\n
                            if (!v22)\n
                                goto LABEL_404ce0;\n
                            goto LABEL_404cd5;\n
                        }\n
                        else\n
                        {\n
                            v16 = *(v25) - 55;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_404d03;\n
                        }\n
                    }\n
                    v20 = v17 * v26;\n
                    tmp_5 = v20;\n
                    v26 = v20 + v16;\n
                    if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, t5, ecx<4>, 0x0<32>))\n
                        v21 = 1;\n
                    v12 = *((v25 + 1));\n
                    v25 += 1;\n
                    v24 = 0;\n
                } while (v12);\n
                goto LABEL_404cd5;\n
            }\n
            else\n
            {\n
                *(&v12) = *((v25 + 1));\n
                if ((v12 & 248) == 48)\n
                {\n
                    v25 += 1;\n
                    v13 = 8;\n
                    goto LABEL_404c16;\n
                }\n
                v12 = cgc_tolower(v12);\n
                if (v12 != 120)\n
                {\n
                    *(&v12) = *(v25);\n
                    goto LABEL_404bf3;\n
                }\n
                else\n
                {\n
                    v25 += 2;\n
                }\n
            }\n
LABEL_404be9:\n
            v13 = 16;\n
            goto LABEL_404c0b;\n
        }\n
    }\n
    if (!(v13 == 16))\n
        goto LABEL_404c0b;\n
    *(&v12) = *(v25);\n
    v13 = 16;\n
    if (!(*(v25) == 48))\n
        goto LABEL_404c0e;\n
    v25 += (cgc_tolower(*((v25 + 1))) == 120) * 2;\n
    goto LABEL_404be9;\n
LABEL_404ce0:\n
    v28 = (!v21 ? 0x80000000 : -(v26));\n
    v29 = ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>) ? 2147483647 : v26);\n
    if (v23 < 0)\n
        v29 = v28;\n
    return v29;\n
}\n
", "4213847:sub_404c57": null, "4214037:sub_404d15": null, "4214048:cgc_strtoul": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoul(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_2;  // tmp #2\n
    int tmp_67;  // tmp #67\n
    int tmp_41;  // tmp #41\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3[2];  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    char v12[2];  // esi\n
    char v13;  // al\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax, Other Possible Types: char\n
    void* v16;  // edi\n
    void* v17;  // edi\n
    void* v18;  // edi, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // ebp\n
    unsigned int v27;  // ebx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // edx\n
    char v32[2];  // ebp\n
    unsigned int v33;  // edi\n
    char v34[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v35;  // eax, Other Possible Types: unsigned int\n
    unsigned int v36;  // edx\n
    char v37[2];  // ecx, Other Possible Types: unsigned int\n
    char v38[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v39;  // ebx\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // cc_dep2\n
    unsigned int v43;  // eax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v12 = v8;\n
    v34 = v12;\n
    if (cgc_isspace(v12[0]))\n
    {\n
        v34 = v12;\n
        do\n
        {\n
            if (!*(v34))\n
            {\n
                v14 = 0;\n
                v36 = 1;\n
                goto LABEL_404e1c;\n
            }\n
            v13 = *((v34 + 1));\n
            v34 += 1;\n
        } while (cgc_isspace(v13));\n
    }\n
    v0 = a1;\n
    if (*(v34) != 45)\n
    {\n
        v36 = 1;\n
        if (*(v34) == 43)\n
            v34 += 1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (!v15)\n
            goto LABEL_404de6;\n
        goto LABEL_404d90;\n
    }\n
    else\n
    {\n
        v34 += 1;\n
        v36 = -1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (v15)\n
        {\n
LABEL_404d90:\n
            if (v15 == 16)\n
            {\n
                *(&v15) = *(v34);\n
                if (*(v34) == 48)\n
                {\n
                    v34 += (cgc_tolower(*((v34 + 1))) == 120) * 2;\n
                    v0 = 16;\n
                    goto LABEL_404e85;\n
                }\n
                else\n
                {\n
                    v0 = 16;\n
                    if (!(!v15))\n
                        goto LABEL_404e8c;\n
                    goto LABEL_404e1a;\n
                }\n
            }\n
        }\n
        else\n
        {\n
LABEL_404de6:\n
            *(&v15) = *(v34);\n
            if (*(v34) == 48)\n
            {\n
                *(&v15) = *((v34 + 1));\n
                if ((v15 & 248) == 48)\n
                {\n
                    v1 = v36;\n
                    v34 += 1;\n
                    v0 = 8;\n
                    goto LABEL_404e90;\n
                }\n
                v15 = cgc_tolower(v15);\n
                if (v15 != 120)\n
                {\n
                    *(&v15) = *(v34);\n
                }\n
                else\n
                {\n
                    v34 += 2;\n
                    v0 = 16;\n
                    goto LABEL_404e85;\n
                }\n
            }\n
            v1 = v36;\n
            v15 = cgc_isdigit(v15);\n
            v0 = 10;\n
            if (!v15)\n
            {\n
                v14 = 0;\n
                v37 = 1;\n
                v2 = 0;\n
                v16 = 0;\n
                v35 = a0;\n
                v36 = v1;\n
                if (!v35)\n
                    goto LABEL_404fa7;\n
LABEL_404f9c:\n
                tmp_2 = v37;\n
                v38 = v8;\n
                if (!tmp_2)\n
                    v38 = v34;\n
                *(v35) = v38;\n
            }\n
            else\n
            {\n
                v36 = v1;\n
LABEL_404e85:\n
                *(&v15) = *(v34);\n
                if (*(v34))\n
                {\n
LABEL_404e8c:\n
                    v1 = v36;\n
LABEL_404e90:\n
                    v2 = 0;\n
                    v18 = 0;\n
                    v14 = 0;\n
                    v37 = 1;\n
                    do\n
                    {\n
                        *(&v3) = v37;\n
                        v19 = cgc_isdigit(v15);\n
                        v20 = *(v34);\n
                        if (v19)\n
                        {\n
                            v21 = v20 - 48;\n
                            v22 = v0;\n
                            if (!(v21 < v22))\n
                                goto LABEL_404f6d;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v34);\n
                            if (cgc_islower(v20))\n
                            {\n
                                v21 = v24 - 87;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_404f6d;\n
                            }\n
                            else if (!cgc_isupper(v24))\n
                            {\n
LABEL_404f6d:\n
                                v35 = a0;\n
                                v36 = v1;\n
                                v37 = v3;\n
                                if (!v35)\n
                                    goto LABEL_404fa7;\n
                                goto LABEL_404f9c;\n
                            }\n
                            else\n
                            {\n
                                v21 = *(v34) - 55;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_404f6d;\n
                            }\n
                        }\n
                        *(&v3) = v34;\n
                        v25 = v2;\n
                        v26 = v25 * (v22 >> 31);\n
                        v27 = v14;\n
                        v28 = v22;\n
                        tmp_67 = v25 * v22;\n
                        v29 = v25 * v22 >> 32;\n
                        v30 = tmp_67;\n
                        v31 = v28 * v18 + v26 + v29;\n
                        v32 = v3;\n
                        v33 = v21 >> 31;\n
                        v2 = v30 + v21;\n
                        tmp_41 = v33;\n
                        v18 = v33 + v31 + (v30 + v21 < v30);\n
                        v14 = ([D] x86g_calculate_condition(0x5<32>, 0x9<32>, t41, Xor(edx<4>, Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))), Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))) ? v27 : 1);\n
                        v15 = v32[1];\n
                        v34 = &v32[1];\n
                        v37 = 0;\n
                    } while (v15);\n
                    goto LABEL_404fa7;\n
                }\n
LABEL_404e1a:\n
                v14 = 0;\n
LABEL_404e1c:\n
                v37 = 1;\n
                v2 = 0;\n
                v17 = 0;\n
                v35 = a0;\n
                if (!v35)\n
                    goto LABEL_404fa7;\n
                goto LABEL_404f9c;\n
            }\n
        }\n
    }\n
LABEL_404fa7:\n
    v39 = v2;\n
    v40 = -(v39);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v40 = v39;\n
    v41 = -(0 < v14) | v40;\n
    v42 = v39 < 2147483649;\n
    v43 = ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, cc_dep2<4>, cc_dep2<4>) ? -1 : v41);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v43 = v41;\n
    return v43;\n
}\n
", "4214491:sub_404edb": null, "4214744:sub_404fd8": null, "4214752:_ZN9AttributeC2EPK6String": "int Attribute::__base_ctor__(unsigned int v0[2], unsigned int a0)\n
{\n
    unsigned int v1[2];  // ecx\n
\n
    v1 = v0;\n
    v1[0] = a0;\n
    v1[1] = 0;\n
    return a0;\n
}\n
", "4214770:sub_404ff2": null, "4214784:_ZN9AttributeD2Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Attribute::__base_dtor__(struct_0 *v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0->field_4;\n
    if (v1)\n
        v1 = cgc_free(v1);\n
    return v1;\n
}\n
", "4214824:sub_405028": null, "4214832:_ZN9Attribute3setEP6String": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Attribute::set(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // edi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_4;\n
    if (v2)\n
        v2 = cgc_free(v2);\n
    v1->field_4 = a0;\n
    return v2;\n
}\n
", "4214883:sub_405063": null, "4214896:_ZN7CmlNodeC2EPK6StringS2_": "extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
extern char g_40ba04;\n
\n
int CmlNode::__base_ctor__(unsigned int v2[17], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3;  // esi\n
    unsigned int v4[17];  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v0 = 1;\n
    Node::__ctor__(v4, a0, a1);\n
    v4[0] = &g_40ba04;\n
    v5 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v5 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v4[12] = StringManager::intern(v5);\n
    v6 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v6 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v4[13] = StringManager::intern(v6);\n
    v7 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v7 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v8 = StringManager::intern(v7);\n
    v4[16] = v8;\n
    return v8;\n
}\n
", "4215059:sub_405113": null, "4215072:_ZN7CmlNode8set_attrEPKcP6String": "extern unsigned int _ZL12VERSION_ATTR;\n
extern unsigned int _ZL14NAMESPACE_ATTR;\n
extern unsigned int _ZL9SPEC_ATTR;\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int CmlNode::set_attr(unsigned int v3[17], unsigned int a0, char a1[2])\n
{\n
    char v0[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
    unsigned int v6[17];  // edi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v6 = v3;\n
    Node::set_attr(v6, a0);\n
    v7 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v7 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v10 = StringManager::intern(v7);\n
    if (v10 == _ZL14NAMESPACE_ATTR)\n
    {\n
        v10 = a1;\n
        v6[16] = v10;\n
        return a1;\n
    }\n
    else if (v10 == _ZL9SPEC_ATTR)\n
    {\n
        v10 = a1;\n
        v6[12] = v10;\n
        return a1;\n
    }\n
    else if (v10 != _ZL12VERSION_ATTR)\n
    {\n
        return v10;\n
    }\n
    else\n
    {\n
        v8 = cgc_strtoul(a1, &v0, 10);\n
        v9 = v0;\n
        if (!v9)\n
        {\n
            v10 = 0;\n
        }\n
        else\n
        {\n
            *(&v0) = v9 + 1;\n
            v10 = cgc_strtoul(v0, &v0, 10);\n
        }\n
        v6[13] = a1;\n
        v6[15] = v8;\n
        v6[14] = v10;\n
        return v10;\n
    }\n
}\n
", "4215271:sub_4051e7": null, "4215280:_ZN7CmlNodeD0Ev": "int CmlNode::__deleting_dtor__(unsigned int v0)\n
{\n
    unsigned int v1;  // esi\n
\n
    Node::__dtor__(v0, v1);\n
    return operator delete(v0);\n
}\n
", "4215321:sub_405219": null, "4215328:_ZN9InterfaceC1EP4FILES1_": "int Interface::__ctor__(unsigned int v0[6], unsigned int a0, void* a1)\n
{\n
    unsigned int v1[6];  // edx\n
\n
    v1 = v0;\n
    v1[0] = a0;\n
    v1[1] = a1;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = 10;\n
    v1[5] = 0;\n
    return cgc_fbuffered(a1, 1);\n
}\n
", "4215405:sub_40526d": null, "4215408:_ZN9Interface15send_descriptorEj": "typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
int Interface::send_descriptor(struct_0 *v0)\n
{\n
    char v1;  // [bp+0x8]\n
\n
    return cgc_fwrite(&v1, 4, v0->field_4);\n
}\n
", "4215451:sub_40529b": null, "4215456:_ZN9Interface10send_errorE5Error": "typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
int Interface::send_error(struct_0 *v1, char a0)\n
{\n
    char v0;  // [bp-0x5]\n
\n
    v0 = a0;\n
    return cgc_fwrite(&v0, 1, v1->field_4);\n
}\n
", "4215507:sub_4052d3": null, "4215520:_ZN9Interface11send_stringEPKc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
int Interface::send_string(struct_0 *v2, char *a0)\n
{\n
    unsigned short v0;  // [bp-0x12]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v4 = cgc_strlen(a0);\n
    v0 = __ROL__(v4, 8);\n
    cgc_fwrite(&v0, 2, v2->field_4);\n
    return cgc_fwrite(a0, v4, v2->field_4);\n
}\n
", "4215615:sub_40533f": null, "4215616:_ZN9Interface8get_nodeEv": "typedef struct struct_1 {\n
    void* field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
int Interface::get_node(unsigned int v1[6])\n
{\n
    char v0;  // [bp-0x10]\n
    struct_1 *v2;  // esi\n
    unsigned int v4;  // edi\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (cgc_fread(&v0, 4, v2->field_0) != 4)\n
    {\n
        return 0;\n
    }\n
    else if (!v2->field_c)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v4 = *(&v0);\n
        v5 = *((v1[5] + ((0 CONCAT v4 >> 16 ^ v4 ^ v4 * 336958053) /m v1[4] >> 32) * 4));\n
        if (!v5)\n
            return 0;\n
        while (true)\n
        {\n
            if (*((v5 + 4)) != v4)\n
            {\n
                v5 = *((v5 + 8));\n
                if (!v5)\n
                    return 0;\n
            }\n
            else\n
            {\n
                return *(v5);\n
            }\n
        }\n
    }\n
}\n
", "4215737:sub_4053b9": null, "4215744:_ZN9Interface17get_string_binaryEPt": "extern void* cgc_stderr;\n
\n
int Interface::get_string_binary(void* *v1, unsigned short *a0)\n
{\n
    unsigned short v0;  // [bp-0x12], Other Possible Types: char\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    if (cgc_fread(&v0, 2, *(v1)) != 2)\n
        return 0;\n
    v3 = *(&v0);\n
    *(&v3) = __ROL__(v3, 8);\n
    v0 = v3;\n
    v4 = cgc_malloc(v3);\n
    if (!v4)\n
    {\n
        cgc_fprintf(cgc_stderr, \"out of memory\");\n
        cgc_exit(1);\n
    }\n
    v5 = *(&v0);\n
    if (cgc_fread(v4, *(&v0), *(v1)) != v5)\n
    {\n
        cgc_free(v4);\n
        return 0;\n
    }\n
    *(a0) = v5;\n
    return v4;\n
}\n
", "4215932:sub_40547c": null, "4215936:_ZN9Interface10get_stringEv": "extern void* cgc_stderr;\n
\n
int Interface::get_string(void* *v1)\n
{\n
    unsigned short v0;  // [bp-0x12], Other Possible Types: char\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    if (cgc_fread(&v0, 2, *(v1)) != 2)\n
        return 0;\n
    v3 = *(&v0);\n
    *(&v3) = __ROL__(v3, 8);\n
    v0 = v3;\n
    v4 = cgc_malloc(v3 + 1);\n
    v5 = v4;\n
    if (!v4)\n
    {\n
        cgc_fprintf(cgc_stderr, \"out of memory\");\n
        cgc_exit(1);\n
    }\n
    v6 = cgc_fread(v4, *(&v0), *(v1));\n
    if (v6 != *(&v0))\n
    {\n
        cgc_free(v5);\n
        return 0;\n
    }\n
    v5[v6] = 0;\n
    return v5;\n
}\n
", "4216124:sub_40553c": null, "4216128:_ZN9Interface14new_descriptorEP4Node": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Interface::new_descriptor(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edi\n
    unsigned int v11[3];  // eax\n
    unsigned int *v12;  // ecx\n
\n
    v2 = v1;\n
    v3 = v1->field_c;\n
    v4 = v1->field_8 + 1;\n
    v1->field_8 = v4;\n
    v5 = &v1->field_c;\n
    v6 = v3 + 1;\n
    v1->field_c = v6;\n
    if (v1->field_14)\n
    {\n
        v9 = v2->field_10;\n
        if (v6 * 2 <= v9)\n
            goto LABEL_40558c;\n
    }\n
    else\n
    {\n
        v8 = v2->field_10;\n
        v2->field_10 = 0;\n
        v0 = v8;\n
        HashMap::resize(v5);\n
        v9 = v2->field_10;\n
        if (v2->field_c << 1 <= v9)\n
            goto LABEL_40558c;\n
    }\n
    v0 = v9 * 2;\n
    HashMap::resize(v5);\n
    v9 = v2->field_10;\n
LABEL_40558c:\n
    v10 = (0 CONCAT v4 / 0x10000 ^ v4 ^ v4 * 336958053) /m v9 >> 32;\n
    v11 = operator new(12);\n
    v11[0] = a0;\n
    v11[1] = v4;\n
    v12 = v2->field_14;\n
    v11[2] = v12[v10];\n
    v12[v10] = v11;\n
    return v4;\n
}\n
", "4216304:_ZN9Interface7processEv": "int Interface::process(unsigned int v2[2])\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
    void* v3[2];  // esi\n
    unsigned int v4;  // eax\n
    char v5;  // eax\n
\n
    v3 = v2;\n
    if (cgc_fread(&v0, 1, v3[0]) != 1)\n
        return 0;\n
    v4 = v0;\n
    switch (v4)\n
    {\n
    case 0:\n
        if (!Interface::op_init_parser())\n
            return 0;\n
    case 1:\n
        if (!Interface::op_load_data())\n
            return 0;\n
    case 2:\n
        if (!Interface::op_get_attr())\n
            return 0;\n
    case 3:\n
        if (!Interface::op_set_attr())\n
            return 0;\n
    case 4:\n
        Interface::op_list_attr();\n
        break;\n
    case 5:\n
        Interface::op_get_tag();\n
        break;\n
    case 6:\n
        Interface::op_get_ns();\n
        break;\n
    case 7:\n
        if (!Interface::op_query())\n
            return 0;\n
    case 8:\n
        Interface::op_version_check();\n
    default:\n
        v1 = 1;\n
        cgc_fwrite(&v1, 1, v3[1]);\n
        break;\n
    }\n
    v5 = cgc_fflush(v3[1]);\n
    v5 = 1;\n
    return v5;\n
}\n
", "4216552:sub_4056e8": null, "4216560:_ZN9Interface14op_init_parserEv": "typedef struct struct_1 {\n
    void* field_0;\n
    void* field_4;\n
    char padding_8[16];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int Interface::op_init_parser(unsigned int v10[7])\n
{\n
    char v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1f]\n
    char v2;  // [bp-0x1e]\n
    char v3;  // [bp-0x1d]\n
    char v4;  // [bp-0x1c]\n
    char v5;  // [bp-0x1b]\n
    char v6;  // [bp-0x1a]\n
    char v7;  // [bp-0x19]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    struct_1 *v11;  // edi\n
    unsigned int v12;  // eax\n
    struct_0 *v13;  // eax, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
\n
    v11 = v10;\n
    if (cgc_fread(&v0, 6, v11->field_0) != 6)\n
        return 0;\n
    if (cgc_memchr(&v1, v0, 5))\n
    {\n
LABEL_4057b0:\n
        v6 = 4;\n
        v13 = &v6;\n
    }\n
    else\n
    {\n
        if (!(!cgc_memchr(&v2, v1, 4)))\n
            goto LABEL_4057b0;\n
        if (!(!cgc_memchr(&v3, v2, 3)))\n
            goto LABEL_4057b0;\n
        if (!(!cgc_memchr(&v4, v3, 2)))\n
            goto LABEL_4057b0;\n
        if (!(!cgc_memchr(&v5, v4, 1)))\n
            goto LABEL_4057b0;\n
        v14 = operator new(1031);\n
        v9 = v0;\n
        v8 = v1;\n
        Parser::__ctor__(v14, v9, v8, v2, v3, v4);\n
        v11->field_18 = v14;\n
        v7 = 0;\n
        v13 = &v7;\n
    }\n
    v12 = cgc_fwrite(v13, 1, v11->field_4);\n
    *(&v12) = 1;\n
    return v12;\n
}\n
", "4216889:sub_405839": null, "4216896:_ZN9Interface12op_load_dataEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    void* field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
    unsigned int field_18;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Interface::op_load_data(struct_0 *v9)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x34], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x1f]\n
    char v3;  // [bp-0x1e]\n
    char v4;  // [bp-0x1d]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10;  // edi\n
    struct_3 *v11;  // edi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // ebp\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // eax\n
    struct_2 *v20;  // eax, Other Possible Types: unsigned int\n
    unsigned int v22;  // ecx\n
    struct_0 *v23;  // edx, Other Possible Types: unsigned int\n
    unsigned int v24[3];  // eax\n
    struct_0 *v25;  // edi\n
    unsigned int *v26;  // ecx\n
\n
    v8 = v10;\n
    v11 = v9;\n
    v12 = Interface::get_string(v11);\n
    v13 = v12;\n
    if (!v12)\n
    {\n
        *(&v12) = v13;\n
        return v12;\n
    }\n
    v14 = v11->field_18;\n
    if (!v14)\n
    {\n
        v2 = 3;\n
        v20 = &v2;\n
    }\n
    else\n
    {\n
        v15 = Parser::parse(v14, 0);\n
        if (!v15)\n
        {\n
            v3 = 4;\n
            v20 = &v3;\n
        }\n
        else\n
        {\n
            v5 = v15;\n
            v4 = 0;\n
            cgc_fwrite(&v4, 1, v11->field_4);\n
            v23 = v11;\n
            v16 = v11->field_c;\n
            v17 = v11->field_8 + 1;\n
            v11->field_8 = v11->field_8 + 1;\n
            v18 = &v11->field_c;\n
            v19 = v16 + 1;\n
            v23->field_c = v19;\n
            if (v23->field_14)\n
            {\n
                v22 = v23->field_10;\n
                if (v19 * 2 <= v22)\n
                    goto LABEL_4058eb;\n
            }\n
            else\n
            {\n
                v23->field_10 = 0;\n
                HashMap::resize(v18);\n
                v23 = v9;\n
                v22 = *((v23 + 16));\n
                if (*((v23 + 12)) << 1 <= v22)\n
                    goto LABEL_4058eb;\n
            }\n
            HashMap::resize(v18);\n
            v22 = *((v23 + 16));\n
LABEL_4058eb:\n
            v6 = (0 CONCAT v17 / 0x10000 ^ v17 ^ v17 * 336958053) /m v22 >> 32;\n
            v24 = operator new(12);\n
            v24[0] = v5;\n
            v24[1] = v17;\n
            v25 = v9;\n
            v26 = v25->field_14;\n
            v5 = v17;\n
            v24[2] = v26[v6];\n
            v26[v6] = v24;\n
            v7 = v5;\n
            v20 = &v7;\n
            v1 = v25->field_4;\n
            v0 = 4;\n
            goto LABEL_405965;\n
        }\n
    }\n
    v1 = v11->field_4;\n
    v0 = 1;\n
LABEL_405965:\n
    cgc_fwrite(v20, v0, v1);\n
    v12 = cgc_free(v13);\n
}\n
", "4217271:sub_4059b7": null, "4217280:_ZN9Interface11op_get_attrEv": "typedef struct struct_5 {\n
    void* field_0;\n
    void* field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    unsigned int field_4;\n
    struct struct_4 *field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int Interface::op_get_attr(unsigned int v6[6])\n
{\n
    char v0;  // [bp-0x1f]\n
    char v1;  // [bp-0x1e]\n
    char v2;  // [bp-0x1d]\n
    unsigned int *v3;  // [bp-0x1c]\n
    unsigned short v4;  // [bp-0x16]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // [bp+0x8]\n
    void* v8;  // [bp+0xc]\n
    struct_5 *v9;  // edi\n
    unsigned int v10;  // ecx\n
    struct_2 *v11;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v12;  // ebp\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    struct_4 *v18;  // eax, Other Possible Types: unsigned int\n
    struct_3 *v19;  // ebp\n
\n
    v9 = v6;\n
    if (cgc_fread(&v5, 4, v9->field_0) == 4 && v9->field_c)\n
    {\n
        v10 = *(&v5);\n
        v11 = *((v9->field_14 + ((0 CONCAT v10 >> 16 ^ v10 ^ v10 * 336958053) /m v9->field_10 >> 32) * 4));\n
        if (v11)\n
        {\n
            do\n
            {\n
                if (*((v11 + 4)) == v10)\n
                {\n
                    v12 = *(v11);\n
                    v13 = Interface::get_string(v9);\n
                    if (!v12)\n
                        goto LABEL_405a3a;\n
                    if (!v13)\n
                        return 0;\n
                    v14 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
                    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
                    {\n
                        v3 = &_ZN9SingletonI13StringManagerE10d_instanceE;\n
                        Singleton::_create();\n
                        v14 = *(v3);\n
                    }\n
                    v16 = StringManager::intern(v14);\n
                    if (v12->field_c)\n
                    {\n
                        v3 = &v12->field_14->field_0;\n
                        v18 = v3[(0 CONCAT v16 * 0x10000 ^ v16 * 761886451) /m v12->field_10 >> 32];\n
                        if (v18)\n
                        {\n
                            do\n
                            {\n
                                if (*((v18 + 4)) == v16)\n
                                {\n
                                    v19 = *(v18);\n
                                    cgc_free(v13);\n
                                    if (!v19)\n
                                        goto LABEL_405af8;\n
                                    v2 = 0;\n
                                    cgc_fwrite(&v2, 1, v9->field_4);\n
                                    v4 = __ROL__(cgc_strlen(v19->field_4), 8);\n
                                    cgc_fwrite(&v4, 2, v9->field_4);\n
                                    goto LABEL_405a58;\n
                                }\n
                                v18 = *((v18 + 8));\n
                            } while (v18);\n
                            goto LABEL_405af8;\n
                        }\n
                    }\n
                    cgc_free(v13);\n
LABEL_405af8:\n
                    v1 = 5;\n
                    goto LABEL_405a52;\n
                }\n
                v11 = *((v11 + 8));\n
            } while (v11);\n
            goto LABEL_405a58;\n
        }\n
    }\n
    v13 = Interface::get_string(v9);\n
LABEL_405a3a:\n
    cgc_free(v13);\n
    v0 = 2;\n
LABEL_405a52:\n
LABEL_405a58:\n
    v15 = cgc_fwrite(v6, v7, v8);\n
    *(&v15) = 1;\n
    return v15;\n
}\n
", "4217723:sub_405b7b": null, "4217728:_ZN9Interface11op_set_attrEv": "typedef struct struct_5 {\n
    void* field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int Interface::op_set_attr(unsigned int v5[6])\n
{\n
    void* v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x1a]\n
    char v2;  // [bp-0x19]\n
    struct struct_1 **v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x14]\n
    struct_5 *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
    unsigned int v8[6];  // ebp\n
    unsigned int v9;  // esi\n
    struct_2 *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // eax\n
    struct_4 *v14;  // eax, Other Possible Types: unsigned int\n
    struct struct_1 **v15;  // edx\n
\n
    v6 = v5;\n
    v3 = 0;\n
    if (cgc_fread(&v4, 4, v6->field_0) == 4 && v6->field_c)\n
    {\n
        v7 = *(&v4);\n
        v8 = v6;\n
        v9 = v6->field_14;\n
        v3 = 0;\n
        v10 = *((v9 + ((0 CONCAT v7 >> 16 ^ v7 ^ v7 * 336958053) /m v8[4] >> 32) * 4));\n
        v6 = v8;\n
        if (v10)\n
        {\n
            do\n
            {\n
                if (*((v10 + 4)) == v7)\n
                {\n
                    v3 = *(v10);\n
                    break;\n
                }\n
                v10 = *((v10 + 8));\n
            } while (v10);\n
        }\n
    }\n
    v11 = Interface::get_string(v6);\n
    v12 = Interface::get_string(v6);\n
    if (!v3)\n
    {\n
        cgc_free(v11);\n
        cgc_free(v12);\n
        v1 = 2;\n
        v0 = *((v6 + 4));\n
        v14 = &v1;\n
    }\n
    else\n
    {\n
        if (!v11)\n
            return 0;\n
        if (!v12)\n
            return 0;\n
        String::create();\n
        *(v15)->field_c(v3, v11);\n
        cgc_free(v11);\n
        cgc_free(v12);\n
        v2 = 0;\n
        v0 = v5[1];\n
        v14 = &v2;\n
    }\n
    v13 = cgc_fwrite(v14, 1, v0);\n
    *(&v13) = 1;\n
    return v13;\n
}\n
", "4218037:sub_405cb5": null, "4218048:_ZN9Interface12op_list_attrEv": "typedef struct struct_2 {\n
    void* field_0;\n
    void* field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned short field_c;\n
    char padding_e[2];\n
    unsigned int field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
int Interface::op_list_attr(unsigned int v7[6])\n
{\n
    int tmp_20;  // tmp #20\n
    char v0;  // [bp-0x22]\n
    char v1;  // [bp-0x21]\n
    unsigned short v2;  // [bp-0x20]\n
    unsigned short v3;  // [bp-0x1e]\n
    struct_1 *v4;  // [bp-0x1c]\n
    char *v5;  // [bp-0x18]\n
    char v6;  // [bp-0x14]\n
    struct_2 *v8;  // edi\n
    unsigned int v9;  // ecx\n
    struct_3 *v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    struct_0 *v16;  // eax, Other Possible Types: unsigned int\n
    unsigned int v18;  // eax\n
    struct_1 *v19;  // esi, Other Possible Types: unsigned int\n
\n
    v8 = v7;\n
    if (cgc_fread(&v6, 4, v8->field_0) == 4 && v8->field_c)\n
    {\n
        v9 = *(&v6);\n
        v10 = *((v8->field_14 + ((0 CONCAT v9 >> 16 ^ v9 ^ v9 * 336958053) /m v8->field_10 >> 32) * 4));\n
        if (v10)\n
        {\n
            while (*((v10 + 4)) != v9)\n
            {\n
                v10 = *((v10 + 8));\n
                if (!v10)\n
                    goto LABEL_405d2c;\n
            }\n
            v19 = *(v10);\n
            if (v19)\n
            {\n
                v2 = __ROL__(v19->field_c, 8);\n
                v1 = 0;\n
                cgc_fwrite(&v1, 1, v8->field_4);\n
                v16 = cgc_fwrite(&v2, 2, v8->field_4);\n
                if (*(&v19->field_c))\n
                {\n
                    v16 = 0;\n
                    v4 = v19;\n
                    do\n
                    {\n
                        if (!v16)\n
                        {\n
                            v12 = *((v19 + 16));\n
                            v13 = 0;\n
                        }\n
                        else\n
                        {\n
                            v11 = *((v16 + 8));\n
                            if (!(!*((v16 + 8))))\n
                                continue;\n
                            v14 = *((v16 + 4));\n
                            v15 = v14 * 0x10000 ^ v14 * 761886451;\n
                            v12 = *((v19 + 16));\n
                            tmp_20 = (0 CONCAT v15) /m v12;\n
                            v16 = (0 CONCAT v15) /m v12;\n
                            v13 = (tmp_20 >> 32) + 1;\n
                        }\n
                        if (v13 >= v12)\n
                            break;\n
                        v16 = *((v19 + 20));\n
                        while (true)\n
                        {\n
                            v11 = *((v16 + v13 * 4));\n
                            if (*((v16 + (v13 << 2))))\n
                                break;\n
                            v13 += 1;\n
                            if (v12 == v13)\n
                                goto LABEL_405d46;\n
                        }\n
                        v5 = *(*(v11));\n
                        v18 = cgc_strlen(v5);\n
                        v3 = __ROL__(v18, 8);\n
                        cgc_fwrite(&v3, 2, v8->field_4);\n
                        v19 = v4;\n
                        cgc_fwrite(v5, v18, v8->field_4);\n
                        v16 = v11;\n
                    } while (*((v19 + 12)));\n
                }\n
                goto LABEL_405d46;\n
            }\n
        }\n
    }\n
LABEL_405d2c:\n
    v0 = 2;\n
    v16 = cgc_fwrite(&v0, 1, v8->field_4);\n
LABEL_405d46:\n
    *(&v16) = 1;\n
    return v16;\n
}\n
", "4218439:sub_405e47": null, "4218448:_ZN9Interface10op_get_tagEv": "typedef struct struct_0 {\n
    void* field_0;\n
    void* field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int Interface::op_get_tag(unsigned int v4[6])\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x17]\n
    unsigned short v2;  // [bp-0x16]\n
    char v3;  // [bp-0x14]\n
    unsigned int v5;  // [bp+0x8]\n
    void* v6;  // [bp+0xc]\n
    struct_0 *v7;  // edi\n
    unsigned int v8;  // ecx\n
    struct_2 *v9;  // eax, Other Possible Types: unsigned int\n
    struct_3 *v10;  // esi\n
    char v11;  // eax\n
\n
    v7 = v4;\n
    if (cgc_fread(&v3, 4, v7->field_0) == 4 && v7->field_c)\n
    {\n
        v8 = *(&v3);\n
        v9 = *((v7->field_14 + ((0 CONCAT v8 >> 16 ^ v8 ^ v8 * 336958053) /m v7->field_10 >> 32) * 4));\n
        if (v9)\n
        {\n
            while (*((v9 + 4)) != v8)\n
            {\n
                v9 = *((v9 + 8));\n
                if (!v9)\n
                    goto LABEL_405ebc;\n
            }\n
            v10 = *(v9);\n
            if (v10)\n
            {\n
                v1 = 0;\n
                cgc_fwrite(&v1, 1, v7->field_4);\n
                v2 = __ROL__(cgc_strlen(v10->field_8), 8);\n
                cgc_fwrite(&v2, 2, v7->field_4);\n
                goto LABEL_405ece;\n
            }\n
        }\n
    }\n
LABEL_405ebc:\n
    v0 = 2;\n
LABEL_405ece:\n
    v11 = cgc_fwrite(v4, v5, v6);\n
    v11 = 1;\n
    return v11;\n
}\n
", "4218684:sub_405f3c": null, "4218688:_ZN9Interface9op_get_nsEv": "typedef struct struct_3 {\n
    void* field_0;\n
    void* field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Interface::op_get_ns(unsigned int v5[6])\n
{\n
    char v0;  // [bp-0x19]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x17]\n
    unsigned short v3;  // [bp-0x16]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // [bp+0x8]\n
    void* v7;  // [bp+0xc]\n
    struct_3 *v8;  // edi\n
    unsigned int v9;  // ecx\n
    struct_1 *v10;  // eax, Other Possible Types: unsigned int\n
    struct_2 *v11;  // esi\n
    char v12;  // eax\n
\n
    v8 = v5;\n
    if (cgc_fread(&v4, 4, v8->field_0) == 4 && v8->field_c)\n
    {\n
        v9 = *(&v4);\n
        v10 = *((v8->field_14 + ((0 CONCAT v9 >> 16 ^ v9 ^ v9 * 336958053) /m v8->field_10 >> 32) * 4));\n
        if (v10)\n
        {\n
            while (*((v10 + 4)) != v9)\n
            {\n
                v10 = *((v10 + 8));\n
                if (!v10)\n
                    goto LABEL_405fac;\n
            }\n
            v11 = *(v10);\n
            if (v11)\n
            {\n
                if (v11->field_4)\n
                {\n
                    v2 = 0;\n
                    cgc_fwrite(&v2, 1, v8->field_4);\n
                    v3 = __ROL__(cgc_strlen(v11->field_4), 8);\n
                    cgc_fwrite(&v3, 2, v8->field_4);\n
                    goto LABEL_405fbe;\n
                }\n
                else\n
                {\n
                    v1 = 5;\n
                    goto LABEL_405fb8;\n
                }\n
            }\n
        }\n
    }\n
LABEL_405fac:\n
    v0 = 2;\n
LABEL_405fb8:\n
LABEL_405fbe:\n
    v12 = cgc_fwrite(v5, v6, v7);\n
    v12 = 1;\n
    return v12;\n
}\n
", "4218947:sub_406043": null, "4218960:_ZN9Interface8op_queryEv": "typedef struct struct_4 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_3 *field_14;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    void* field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_3 *field_14;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
int Interface::op_query(struct_4 *v10)\n
{\n
    unsigned int v0;  // [bp-0xc48]\n
    void* v1;  // [bp-0xc44], Other Possible Types: unsigned int\n
    char v2;  // [bp-0xc3c], Other Possible Types: unsigned int\n
    unsigned short v3;  // [bp-0xc36]\n
    unsigned int v4;  // [bp-0xc34]\n
    unsigned int v5;  // [bp-0xc30]\n
    unsigned int v6;  // [bp-0xc2c]\n
    unsigned int v7;  // [bp-0xc28]\n
    char v8;  // [bp-0xc24]\n
    char v9;  // [bp-0x18]\n
    struct_2 *v11;  // ebp\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // eax, Other Possible Types: unsigned int\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // eax\n
    struct_1 *v18;  // eax, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // esi\n
    unsigned int v22[3];  // eax\n
    unsigned int *v23;  // ecx\n
    unsigned int v24;  // eax, Other Possible Types: char\n
\n
    v11 = v10;\n
    if (cgc_fread(&v8, 4, v10->field_0) == 4 && v11->field_c)\n
    {\n
        v12 = *(&v8);\n
        v13 = v11->field_14[(0 CONCAT v12 >> 16 ^ v12 ^ v12 * 336958053) /m v11->field_10 >> 32].field_0;\n
        if (v13)\n
        {\n
            do\n
            {\n
                if (*((v13 + 4)) == v12)\n
                {\n
                    if (!*(v13))\n
                        break;\n
                    v24 = Interface::get_string_binary(v11, &v3);\n
                    if (!v24)\n
                    {\n
LABEL_40623b:\n
                        *(&v24) = v24;\n
                        return v24;\n
                    }\n
                    v7 = v24;\n
                    Query::__base_ctor__(&v8, v24);\n
                    if (*(&v9))\n
                    {\n
                        v2 = 4;\n
                    }\n
                    else\n
                    {\n
                        v14 = Query::match(&v8);\n
                        if (v14 && !*(&v9))\n
                        {\n
                            v6 = v14;\n
                            v2 = 0;\n
                            cgc_fwrite(&v2, 1, v11->field_4);\n
                            v15 = v11->field_c;\n
                            v5 = v11->field_8 + 1;\n
                            v11->field_8 = v5;\n
                            v16 = &v11->field_c;\n
                            v17 = v15 + 1;\n
                            v11->field_c = v17;\n
                            if (!v11->field_14)\n
                            {\n
                                v11->field_10 = 0;\n
                                HashMap::resize(v16);\n
                                v17 = v11->field_c;\n
                            }\n
                            v19 = v17 * 2;\n
                            v20 = v11->field_10;\n
                            if (v19 > v20)\n
                            {\n
                                HashMap::resize(v16);\n
                                v20 = v11->field_10;\n
                            }\n
                            v21 = v5;\n
                            v4 = (0 CONCAT *(&v2) >> 16 ^ *(&v2) ^ *(&v2) * 336958053) /m v20 >> 32;\n
                            v22 = operator new(12);\n
                            v22[0] = v6;\n
                            v22[1] = v21;\n
                            v23 = v11->field_14;\n
                            v22[2] = v23[v4];\n
                            v23[v4] = v22;\n
                            v2 = v21;\n
                            v1 = v11->field_4;\n
                            v0 = 4;\n
                            v18 = &v2;\n
                            goto LABEL_406222;\n
                        }\n
                        v2 = 5;\n
                    }\n
                    v18 = &v2;\n
                    v1 = v11->field_4;\n
                    v0 = 1;\n
LABEL_406222:\n
                    cgc_fwrite(v18, v0, v1);\n
                    Query::__dtor__();\n
                    v24 = v7;\n
                    goto LABEL_40623b;\n
                }\n
                v13 = *((v13 + 8));\n
            } while (v13);\n
        }\n
    }\n
    v8 = 2;\n
    v24 = cgc_fwrite(&v8, 1, v11->field_4);\n
    v24 = 1;\n
    return v24;\n
}\n
", "4219461:sub_406245": null, "4219472:_ZN9Interface16op_version_checkEv": "typedef struct struct_0 {\n
    void* field_0;\n
    void* field_4;\n
    char padding_8[4];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
    char padding_30[8];\n
    unsigned int field_38;\n
    unsigned int field_3c;\n
} struct_3;\n
\n
int Interface::op_version_check(unsigned int v5[6])\n
{\n
    char v0;  // [bp-0x14]\n
    char v1;  // [bp-0x13]\n
    char v2;  // [bp-0x12]\n
    char v3;  // [bp-0x11]\n
    char v4;  // [bp-0x10]\n
    struct_0 *v6;  // esi\n
    unsigned int v7;  // ecx\n
    struct_2 *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9[16];  // eax\n
    struct_1 *v10;  // eax, Other Possible Types: unsigned int\n
    char v11;  // eax\n
\n
    v6 = v5;\n
    if (cgc_fread(&v4, 4, v6->field_0) == 4 && v6->field_c)\n
    {\n
        v7 = *(&v4);\n
        v8 = *((v6->field_14 + ((0 CONCAT v7 >> 16 ^ v7 ^ v7 * 336958053) /m v6->field_10 >> 32) * 4));\n
        if (v8)\n
        {\n
            while (*((v8 + 4)) != v7)\n
            {\n
                v8 = *((v8 + 8));\n
                if (!v8)\n
                    goto LABEL_4062bc;\n
            }\n
            v9 = *(v8);\n
            if (v9)\n
            {\n
                if (v9[11] != 1)\n
                {\n
                    v1 = 4;\n
                    v10 = &v1;\n
                    goto LABEL_4062c8;\n
                }\n
                else if (!(v9[14] ^ *(1128775681)) && !(v9[15] ^ *(1128775685)))\n
                {\n
                    v2 = 0;\n
                    v10 = &v2;\n
                    goto LABEL_4062c8;\n
                }\n
                else\n
                {\n
                    v3 = 5;\n
                    v10 = &v3;\n
                    goto LABEL_4062c8;\n
                }\n
            }\n
        }\n
    }\n
LABEL_4062bc:\n
    v0 = 2;\n
    v10 = &v0;\n
LABEL_4062c8:\n
    v11 = cgc_fwrite(v10, 1, v6->field_4);\n
    v11 = 1;\n
    return v11;\n
}\n
", "4219691:sub_40632b": null, "4219696:_ZN7HashMapIjP4Node14UIntComparatorE6resizeEi": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern void* cgc_stderr;\n
\n
int HashMap::resize(struct_1 *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct struct_0 **v1;  // [bp-0x14]\n
    unsigned int v3;  // edi\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v5;  // esi\n
    struct_0 *v6;  // ecx\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // eax\n
    struct_0 *v9;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v10;  // ecx, Other Possible Types: unsigned int\n
\n
    v3 = a0;\n
    if ((0 CONCAT v3 << 2) /m v3 != 4)\n
    {\n
        cgc_fprintf(cgc_stderr, \"detected overflow\");\n
        cgc_exit(1);\n
    }\n
    v4 = v2;\n
    v5 = cgc_calloc(v3, 4);\n
    if (v5)\n
    {\n
        v8 = v4->field_4;\n
        v0 = v8;\n
        if (!v8)\n
            goto LABEL_40642e;\n
    }\n
    else\n
    {\n
        cgc_fprintf(cgc_stderr, \"out of memory\");\n
        cgc_exit(1);\n
        v8 = v4->field_4;\n
        v0 = v8;\n
        if (!v8)\n
            goto LABEL_40642e;\n
    }\n
    v10 = 0;\n
    do\n
    {\n
        v8 = *((v4 + 8));\n
        v1 = v10;\n
        v9 = *((v8 + v10 * 4));\n
        if (*((v8 + (v10 << 2))))\n
        {\n
            do\n
            {\n
                v6 = *((v9 + 8));\n
                v7 = (0 CONCAT *((v9 + 4)) >> 16 ^ *((v9 + 4)) ^ *((v9 + 4)) * 336958053) /m v3 >> 32;\n
                v8 = v5[v7];\n
                *((v9 + 8)) = v8;\n
                v5[v7] = v9;\n
                v9 = v6;\n
            } while (v6);\n
        }\n
        v10 = v1 + 1;\n
        v4 = v2;\n
    } while (v10 != v0);\n
LABEL_40642e:\n
    *((v4 + 8)) = v5;\n
    *((v4 + 4)) = v3;\n
    return v8;\n
}\n
", "4219868:sub_4063dc": null, "4219964:sub_40643c": null, "4219968:_ZN4NodeC1EPK6StringS2_9NodeClass": "extern char g_40ba28;\n
\n
int Node::__ctor__(unsigned int v2[12], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int v5[12];  // edi\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    v5[0] = &g_40ba28;\n
    v5[1] = a0;\n
    v5[2] = a1;\n
    v5[3] = 0;\n
    v5[4] = 10;\n
    v5[5] = 0;\n
    v5[6] = 0;\n
    v5[7] = 0;\n
    v5[8] = 0;\n
    v5[9] = 0;\n
    v5[10] = 0;\n
    v5[11] = a2;\n
    v6 = v0;\n
    v7 = v1;\n
    return a2;\n
}\n
", "4220074:sub_4064aa": null, "4220080:_ZN4NodeC2EPK6StringS2_": "extern char g_40ba28;\n
\n
int Node::__base_ctor__(unsigned int v1[12], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // esi\n
    unsigned int v3[12];  // esi\n
    unsigned int v4;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v3[0] = &g_40ba28;\n
    v3[1] = a0;\n
    v3[2] = a1;\n
    v3[3] = 0;\n
    v3[4] = 10;\n
    v3[5] = 0;\n
    v3[6] = 0;\n
    v3[7] = 0;\n
    v3[8] = 0;\n
    v3[9] = 0;\n
    v3[10] = 0;\n
    v3[11] = 0;\n
    v4 = v0;\n
    return &g_40ba28;\n
}\n
", "4220184:sub_406518": null, "4220192:_ZN4NodeD1Ev": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_2 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern char g_40ba28;\n
\n
int Node::__dtor__(struct_1 *v0)\n
{\n
    struct_1 *v1;  // esi\n
    unsigned int v2;  // ecx\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    struct struct_0 **v6;  // edx, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // eax\n
    struct_0 *v9;  // ebp, Other Possible Types: unsigned int\n
    void* v10;  // edi\n
\n
    v1 = v0;\n
    v1->field_0 = &g_40ba28;\n
    v2 = v1->field_c;\n
    if (!v2)\n
        return cgc_free(v0->field_14);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            v7 = v1->field_10;\n
            v6 = 0;\n
            if (0 >= v7)\n
                return cgc_free(v0->field_14);\n
        }\n
        else\n
        {\n
            v9 = *((v3 + 8));\n
            if (!(!*((v3 + 8))))\n
                goto LABEL_406553;\n
            v4 = *((v3 + 4));\n
            v7 = v1->field_10;\n
            v6 = ((0 CONCAT v4 * 0x10000 ^ v4 * 761886451) /m v7 >> 32) + 1;\n
            if (v6 >= v7)\n
                return cgc_free(v0->field_14);\n
        }\n
        v8 = v1->field_14;\n
        while (true)\n
        {\n
            v9 = *((v8 + v6 * 4));\n
            if (*((v8 + (v6 << 2))))\n
                break;\n
            v6 += 1;\n
            if (v7 == v6)\n
                return cgc_free(v0->field_14);\n
        }\n
LABEL_406553:\n
        v10 = *(v9);\n
        if (v10)\n
        {\n
            Attribute::__base_dtor__(v10);\n
            operator delete(v10);\n
            v2 = v1->field_c;\n
        }\n
        v3 = v9;\n
        if (!v2)\n
            return cgc_free(v0->field_14);\n
    }\n
}\n
", "4220277:sub_406575": null, "4220299:sub_40658b": null, "4220369:sub_4065d1": null, "4220384:_ZN4NodeD0Ev": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_2 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern char g_40ba28;\n
\n
int Node::__deleting_dtor__(struct_1 *v0)\n
{\n
    struct_1 *v1;  // esi\n
    unsigned int v2;  // ecx\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    struct struct_0 **v6;  // edx, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // eax\n
    struct_0 *v9;  // ebp, Other Possible Types: unsigned int\n
    void* v10;  // edi\n
\n
    v1 = v0;\n
    v1->field_0 = &g_40ba28;\n
    v2 = v1->field_c;\n
    if (!v2)\n
    {\n
LABEL_40667e:\n
        cgc_free(v1->field_14);\n
        return operator delete(v1);\n
    }\n
    v3 = 0;\n
    do\n
    {\n
        if (!v3)\n
        {\n
            v7 = v1->field_10;\n
            v6 = 0;\n
            if (0 >= v7)\n
                break;\n
        }\n
        else\n
        {\n
            v9 = *((v3 + 8));\n
            if (!(!*((v3 + 8))))\n
                continue;\n
            v4 = *((v3 + 4));\n
            v7 = v1->field_10;\n
            v6 = ((0 CONCAT v4 * 0x10000 ^ v4 * 761886451) /m v7 >> 32) + 1;\n
            if (v6 >= v7)\n
                break;\n
        }\n
        v8 = v1->field_14;\n
        while (true)\n
        {\n
            v9 = *((v8 + v6 * 4));\n
            if (*((v8 + (v6 << 2))))\n
                break;\n
            v6 += 1;\n
            if (v7 == v6)\n
                goto LABEL_40667e;\n
        }\n
        v10 = *(v9);\n
        if (v10)\n
        {\n
            Attribute::__base_dtor__(v10);\n
            operator delete(v10);\n
            v2 = v1->field_c;\n
        }\n
        v3 = v9;\n
    } while (v2);\n
}\n
", "4220469:sub_406635": null, "4220491:sub_40664b": null, "4220569:sub_406699": null, "4220576:_ZN4Node6createEPKcS1_": "extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
extern unsigned int cgc_CML_TAG;\n
extern unsigned int cgc_EMPTY_TAG;\n
extern char g_40ba28;\n
\n
int Node::create(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // esi\n
    unsigned int v3;  // eax\n
    void* v4;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v5[12];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v1 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v2 = StringManager::intern(v1);\n
    if (v0)\n
    {\n
        v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
        if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
        {\n
            Singleton::_create();\n
            v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
        }\n
        v4 = StringManager::intern(v3);\n
        if (!(!v4))\n
            goto LABEL_40673a;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        if (!(!0))\n
            goto LABEL_40673a;\n
    }\n
    if (v2 == cgc_CML_TAG)\n
    {\n
        v5 = operator new(68);\n
        CmlNode::__base_ctor__(v5, 0, v2);\n
        return v5;\n
    }\n
LABEL_40673a:\n
    if (!v4 && v2 == cgc_EMPTY_TAG)\n
    {\n
        v5 = operator new(52);\n
        TextNode::__base_ctor__(v5, 0);\n
        return v5;\n
    }\n
    v5 = operator new(48);\n
    *(v5) = &g_40ba28;\n
    *((v5 + 4)) = v4;\n
    *((v5 + 8)) = v2;\n
    *((v5 + 12)) = 0;\n
    *((v5 + 16)) = 10;\n
    *((v5 + 20)) = 0;\n
    *((v5 + 24)) = 0;\n
    *((v5 + 28)) = 0;\n
    *((v5 + 32)) = 0;\n
    *((v5 + 36)) = 0;\n
    *((v5 + 40)) = 0;\n
    *((v5 + 44)) = 0;\n
    return v5;\n
}\n
", "4220879:sub_4067cf": null, "4220880:_ZN4Node11delete_treeEPS_": "typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
    char padding_4[28];\n
    struct struct_2 *field_20;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_2 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int Node::delete_tree(struct_3 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0->field_20;\n
    if (!v1)\n
        return v0->field_0->field_4();\n
    do\n
    {\n
        Node::delete_tree(v1);\n
        v1 = *((v1 + 24));\n
    } while (v1);\n
    return v0->field_0->field_4();\n
}\n
", "4220944:_ZN4Node11remove_attrEPKc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int Node::remove_attr(unsigned int v1[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2[6];  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // ecx\n
    struct struct_0 **v7;  // edx\n
    struct_0 *v8;  // edx\n
    struct_0 *v9;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v10;  // edx, Other Possible Types: unsigned int\n
    unsigned int v11;  // eax\n
\n
    v2 = v1;\n
    v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v0 = a0;\n
    v4 = StringManager::intern(v3);\n
    v5 = v2[3];\n
    if (!v5)\n
        return 0;\n
    v6 = v4;\n
    v7 = (0 CONCAT v4 * 0x10000 ^ v4 * 761886451) /m v2[4] >> 32;\n
    v9 = *((v2[5] + v7 * 4));\n
    if (v9)\n
    {\n
        if (v9->field_4 == v6)\n
        {\n
            v10 = v7 * 4 + v2[5];\n
LABEL_4068a0:\n
            *(v10) = *((v9 + 8));\n
            v2[3] = v5 - 1;\n
            v11 = operator delete(v9);\n
            *(&v11) = 1;\n
            return v11;\n
        }\n
        while (true)\n
        {\n
            v8 = v9;\n
            v9 = *((v9 + 8));\n
            if (!v9)\n
                break;\n
            if (*((v9 + 4)) == v6)\n
            {\n
                v10 = &v8->field_8;\n
                goto LABEL_4068a0;\n
            }\n
        }\n
    }\n
}\n
", "4221117:sub_4068bd": null, "4221120:_ZN4Node8set_attrEPKcP6String": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int Node::set_attr(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x14]\n
    struct_0 *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
    struct_2 *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // edi\n
    unsigned int v8;  // ebp\n
    void* v9;  // eax, Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // ebp\n
    unsigned int v14[3];  // eax\n
    unsigned int v15;  // edi\n
    unsigned int *v16;  // ecx\n
\n
    v2 = v1;\n
    v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        v3 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
    }\n
    v4 = StringManager::intern(v3);\n
    v5 = v4;\n
    if (v2->field_c)\n
    {\n
        v6 = v2->field_14[(0 CONCAT v4 * 0x10000 ^ v4 * 761886451) /m v2->field_10 >> 32].field_0;\n
        if (v6)\n
        {\n
            do\n
            {\n
                if (*((v6 + 4)) == v5)\n
                {\n
                    v9 = *(v6);\n
                    return Attribute::set(v9, a1);\n
                }\n
                v6 = *((v6 + 8));\n
            } while (v6);\n
        }\n
    }\n
    v7 = v2;\n
    v8 = &v2->field_c;\n
    v0[0] = operator new(8);\n
    Attribute::__base_ctor__(v0, v5);\n
    v10 = v7->field_c + 1;\n
    v7->field_c = v10;\n
    if (v7->field_14)\n
    {\n
        v12 = v7->field_10;\n
        if (v10 * 2 <= v12)\n
            goto LABEL_40698a;\n
    }\n
    else\n
    {\n
        v7->field_10 = 0;\n
        HashMap::resize(v8);\n
        v12 = v7->field_10;\n
        if (v7->field_c << 1 <= v12)\n
            goto LABEL_40698a;\n
    }\n
    HashMap::resize(v8);\n
    v12 = v7->field_10;\n
LABEL_40698a:\n
    v13 = (0 CONCAT v5 * 0x10000 ^ v5 * 761886451) /m v12 >> 32;\n
    v14 = operator new(12);\n
    v15 = v0;\n
    v14[0] = v15;\n
    v14[1] = v5;\n
    v16 = v1->field_14;\n
    v14[2] = v16[v13];\n
    v16[v13] = v14;\n
    v9 = v15;\n
    return Attribute::set(v9, a1);\n
}\n
", "4221444:sub_406a04": null, "4221456:_ZN4Node12insert_afterEPS_S0_": "typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
    unsigned int field_1c;\n
    char padding_20[8];\n
    unsigned int field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
    struct struct_2 *field_24;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
int Node::insert_after(struct_3 *v0, struct_2 *a0, struct_1 *a1)\n
{\n
    struct_1 *v1;  // eax\n
    struct_2 *v2;  // esi\n
    struct_3 *v3;  // ecx\n
    struct_2 *v4;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = v3->field_24;\n
    if (!v2)\n
    {\n
        if (!v4)\n
        {\n
            v3->field_24 = &v1->padding_0;\n
            v3->field_20 = v1;\n
            v1->field_1c = 0;\n
            v1->field_18 = 0;\n
            v1->field_28 = v3;\n
            return a1;\n
        }\n
    }\n
    else\n
    {\n
        if (v4 != v2)\n
        {\n
            v1->field_1c = v2;\n
            v1->field_18 = v2->field_18;\n
            v2->field_18 = v1;\n
            v1->field_18->field_1c = v1;\n
            v1->field_28 = v3;\n
            return a1;\n
        }\n
    }\n
    v3->field_24 = &v1->padding_0;\n
    v4->field_18 = v1;\n
    v1->field_1c = v4;\n
    v1->field_18 = 0;\n
    v1->field_28 = v3;\n
    return a1;\n
}\n
", "4221553:sub_406a71": null, "4221568:_ZN4Node13insert_beforeEPS_S0_": "typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
    unsigned int field_1c;\n
    char padding_20[8];\n
    unsigned int field_28;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char padding_0[28];\n
    struct struct_3 *field_1c;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[32];\n
    struct struct_0 *field_20;\n
    unsigned int field_24;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_3;\n
\n
int Node::insert_before(struct_2 *v0, struct_4 *a0, struct_1 *a1)\n
{\n
    struct_1 *v1;  // eax\n
    struct_4 *v2;  // esi\n
    struct_2 *v3;  // ecx\n
    struct_0 *v4;  // edx\n
    struct_3 *v5;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = v3->field_20;\n
    if (!v2)\n
    {\n
        if (!v4)\n
        {\n
            v3->field_24 = v1;\n
            v3->field_20 = &v1->padding_0;\n
            v1->field_1c = 0;\n
            v1->field_18 = 0;\n
            v1->field_28 = v3;\n
            return a1;\n
        }\n
    }\n
    else\n
    {\n
        if (v4 != v2)\n
        {\n
            v5 = v2->field_1c;\n
            v1->field_1c = v5;\n
            v1->field_18 = &v2->padding_0;\n
            v5->field_18 = v1;\n
            v1->field_18->field_1c = v1;\n
            v1->field_28 = v3;\n
            return a1;\n
        }\n
    }\n
    v3->field_20 = &v1->padding_0;\n
    v4->field_1c = v1;\n
    v1->field_1c = 0;\n
    v1->field_18 = v4;\n
    v1->field_28 = v3;\n
    return a1;\n
}\n
", "4221665:sub_406ae1": null, "4221680:_ZN4Node6removeEv": "typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
    struct struct_1 *field_1c;\n
    char padding_20[8];\n
    struct struct_3 *field_28;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[32];\n
    unsigned int field_20;\n
    unsigned int field_24;\n
} struct_3;\n
\n
int Node::remove(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2[10];  // ecx\n
    struct_0 *v3;  // esi\n
    struct_1 *v4;  // edx\n
\n
    v1 = v0;\n
    v2 = v1->field_28;\n
    if (!v2)\n
        return v0;\n
    v3 = v1->field_18;\n
    if (v3)\n
        v3->field_1c = v1->field_1c;\n
    v4 = v1->field_1c;\n
    if (v4)\n
        v4->field_18 = v3;\n
    if (v2[8] == v1)\n
    {\n
        v2[8] = v1->field_18;\n
        if (!(v2[9] == v1))\n
            goto LABEL_406b1d;\n
    }\n
    else if (!(v2[9] == v1))\n
    {\n
        goto LABEL_406b1d;\n
    }\n
    v2[9] = v4;\n
LABEL_406b1d:\n
    v1->field_1c = 0;\n
    v1->field_18 = 0;\n
    v1->field_28 = 0;\n
    return v0;\n
}\n
", "4221764:sub_406b44": null, "4221776:_ZN7HashMapIPK6StringP9Attribute18InternedComparatorE6resizeEi": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern void* cgc_stderr;\n
\n
int HashMap::resize(struct_1 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // edi\n
    struct_1 *v3;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v4;  // esi\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ecx\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // eax\n
    struct_0 *v9;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v10;  // ebx, Other Possible Types: unsigned int\n
\n
    v2 = a0;\n
    if ((0 CONCAT v2 << 2) /m v2 != 4)\n
    {\n
        cgc_fprintf(cgc_stderr, \"detected overflow\");\n
        cgc_exit(1);\n
    }\n
    v3 = v1;\n
    v4 = cgc_calloc(v2, 4);\n
    if (v4)\n
    {\n
        v8 = v3->field_4;\n
        v0 = v8;\n
        if (!v8)\n
            goto LABEL_406c46;\n
    }\n
    else\n
    {\n
        cgc_fprintf(cgc_stderr, \"out of memory\");\n
        cgc_exit(1);\n
        v8 = v3->field_4;\n
        v0 = v8;\n
        if (!v8)\n
            goto LABEL_406c46;\n
    }\n
    v10 = 0;\n
    do\n
    {\n
        v8 = *((v3 + 8));\n
        v9 = *((v8 + v10 * 4));\n
        if (*((v8 + (v10 << 2))))\n
        {\n
            do\n
            {\n
                v5 = *((v9 + 4));\n
                v6 = *((v9 + 8));\n
                v7 = (0 CONCAT v5 * 0x10000 ^ v5 * 761886451) /m v2 >> 32;\n
                v8 = v4[v7];\n
                *((v9 + 8)) = v8;\n
                v4[v7] = v9;\n
                v9 = v6;\n
            } while (v6);\n
        }\n
        v10 += 1;\n
        v3 = v1;\n
    } while (v10 != v0);\n
LABEL_406c46:\n
    *((v3 + 8)) = v4;\n
    *((v3 + 4)) = v2;\n
    return v8;\n
}\n
", "4221948:sub_406bfc": null, "4222036:sub_406c54": null, "4222048:_ZN6ParserC1Ecccccc": "short Parser::__ctor__(char v1[6], char a0, char a1, char a2, char a3, char a4, char a5)\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    unsigned int v2;  // esi\n
    char v3;  // al\n
    char v4;  // ah\n
    char v5[6];  // esi\n
    unsigned int v6;  // esi\n
\n
    v0 = v2;\n
    v3 = a5;\n
    v4 = a2;\n
    v5 = v1;\n
    v5[0] = a0;\n
    v5[1] = a1;\n
    v5[2] = a2;\n
    v5[3] = a3;\n
    v5[4] = a4;\n
    v5[5] = a5;\n
    v6 = v0;\n
    return ax<2>;\n
}\n
", "4222096:_ZN6Parser5parseEPKcS1_": "int Parser::parse()\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x14]\n
    char *v6;  // [bp+0x4]\n
    char v7;  // [bp+0xc]\n
    char *v8;  // ebp, Other Possible Types: unsigned int\n
    char *v9;  // esi\n
    void* v10;  // edx, Other Possible Types: unsigned int\n
    void* v11;  // eax\n
\n
    v8 = *(&v7);\n
    v9 = v6;\n
    v5 = v9 + 1031;\n
    v0 = 0;\n
    v4 = 0;\n
    v1 = v9 + 6;\n
    v3 = 0;\n
    v2 = 0;\n
    v10 = 0;\n
    while (true)\n
    {\n
        if (*(v8))\n
        {\n
            if (v10 <= 9)\n
            {\n
                v10 = 2;\n
                if (!(*(v8) == *(v9)))\n
                    goto LABEL_407173;\n
            }\n
            v8 += 1;\n
            if (v1 == v5)\n
                goto LABEL_407173;\n
        }\n
        else\n
        {\n
            if (!(v0 & 1) && v10 == 9)\n
                return;\n
LABEL_407173:\n
            v11 = v3;\n
            if (v11)\n
            {\n
                Node::delete_tree(v11);\n
                break;\n
            }\n
        }\n
    }\n
    v3 = 0;\n
    return;\n
}\n
", "4222251:sub_406d2b": "int sub_406d2b(unsigned int v0, unsigned int a0)\n
{\n
    void* v1;  // [bp+0xc], Other Possible Types: char, unsigned int\n
    char v2;  // [bp+0x10]\n
    char v3;  // cl\n
    char v4[6];  // esi\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    if (v3 == v4[0] && !(*(&v1) & 1))\n
    {\n
        if (v5 == *(&v2))\n
            goto LABEL_0x406ce0;\n
        *(v5) = 0;\n
        return sub_406d4d();\n
    }\n
    if (!(v1 & 1))\n
    {\n
        v1 = 1;\n
        if (v3 == v4[5])\n
            goto LABEL_0x406d00;\n
    }\n
    *(v6) = v3;\n
    v1 = 0;\n
}\n
", "4222285:sub_406d4d": "int sub_406d4d()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v2;  // [bp+0x10]\n
    char v3;  // [bp+0x14]\n
    unsigned int v4;  // [bp+0x1c]\n
    unsigned int v5;  // ebx\n
    struct struct_1 **v7;  // ecx\n
\n
    String::create(*(&v2));\n
    v4 = Node::create(0, v5 - 14790);\n
    TextNode::set_text(v4);\n
    if (!*(&v3))\n
        goto LABEL_0x406ce0;\n
    v7 = *(&v3);\n
    v0 = v4;\n
    *(v7)->field_10(v7, 0);\n
}\n
", "4222382:sub_406dae": "int sub_406dae(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x14]\n
    unsigned int v3;  // [bp+0x1c]\n
    void* v4;  // [bp+0x20], Other Possible Types: unsigned int\n
    char v5[6];  // esi\n
    char v6;  // dl\n
    char v7;  // cl\n
    char v8;  // cl\n
    unsigned int v9;  // ecx\n
    char *v10;  // edi\n
    char v11;  // dl\n
    char *v12;  // eax\n
\n
    v6 = v5[4];\n
    if (v7 == v6)\n
    {\n
        v8 = 1;\n
        v4 = v9;\n
    }\n
    v4 = 0;\n
    v10 = *(&v1);\n
    if (v7 == v5[0])\n
        goto LABEL_0x407173;\n
    if (v7 == v5[3])\n
        goto LABEL_0x407173;\n
    if (v7 == v6)\n
        goto LABEL_0x407173;\n
    v11 = a1 & 1;\n
    if (v7 == v5[1])\n
    {\n
        v3 = 1;\n
        if (!v11)\n
            goto LABEL_407004;\n
    }\n
    if (v7 != v5[2])\n
    {\n
LABEL_4070ab:\n
        if (!(!(a1 & 1)))\n
            goto LABEL_0x4070cb;\n
        a1 = 1;\n
        if (v7 == v5[5])\n
            goto LABEL_0x406d00;\n
        else\n
            goto LABEL_0x4070cb;\n
    }\n
    else\n
    {\n
        v3 = 4;\n
        if (!(!v11))\n
            goto LABEL_4070ab;\n
    }\n
LABEL_407004:\n
    *(v12) = 0;\n
    if (!*(v10))\n
        goto LABEL_0x407173;\n
    if (!(v4 & 1))\n
    {\n
        if (!*(&v2))\n
            goto LABEL_0x407137;\n
        return sub_407030();\n
    }\n
    if (!*(&v2))\n
        goto LABEL_0x407173;\n
    else\n
        goto LABEL_0x407066;\n
}\n
", "4222410:sub_406dca": "int sub_406dca()\n
{\n
    char v1;  // cl\n
    char *v2;  // esi\n
\n
    if (!(v1 == *(v2)))\n
        goto LABEL_0x406fc2;\n
}\n
", "4222431:sub_406ddf": "int sub_406ddf()\n
{\n
    unsigned int v1;  // [bp+0xc], Other Possible Types: char\n
    char v2;  // [bp+0x20]\n
    char v3;  // cl\n
    char v4[6];  // esi\n
\n
    if (v3 == v4[0])\n
        goto LABEL_0x407173;\n
    if (v3 == v4[3])\n
        goto LABEL_0x407173;\n
    if (v3 == v4[4])\n
        goto LABEL_0x407173;\n
    if (v3 == v4[2])\n
        goto LABEL_0x406d00;\n
    if (v3 == v4[1])\n
        goto LABEL_0x406d00;\n
    if (!(!(v2 & 1)))\n
        goto LABEL_0x407173;\n
    if (!(!(v1 & 1)))\n
        goto LABEL_0x4070cb;\n
    v1 = 1;\n
    if (v3 == v4[5])\n
        goto LABEL_0x406d00;\n
}\n
", "4222537:sub_406e49": "int sub_406e49()\n
{\n
    unsigned int v1;  // [bp+0xc], Other Possible Types: char\n
    char v2;  // cl\n
    char v3[6];  // esi\n
    char *v4;  // eax\n
    unsigned int v5;  // ebx\n
    char *v7;  // eax\n
    char v8;  // cl\n
    unsigned int v9;  // ecx\n
\n
    if ((v1 & 1))\n
        *(v7) = v2;\n
    if (v2 == v3[0])\n
        goto LABEL_0x407173;\n
    if (v2 == v3[1])\n
        goto LABEL_0x407173;\n
    if (v2 == v3[4])\n
        goto LABEL_0x407173;\n
    if (v2 == v3[2])\n
        goto LABEL_0x406d00;\n
    if (v2 == v3[3])\n
    {\n
        *(v4) = 0;\n
        if (!(!*((v5 + 3220))))\n
            goto LABEL_0x406ec1;\n
        Singleton::_create();\n
        sub_406ec1();\n
        return;\n
    }\n
    else if (v2 == v3[5])\n
    {\n
        v8 = 1;\n
        v1 = v9;\n
    }\n
}\n
", "4222612:sub_406e94": "int sub_406e94()\n
{\n
    char v1;  // cl\n
    char v2[4];  // esi\n
\n
    if (v1 == v2[2])\n
        goto LABEL_0x406d00;\n
    if (v1 == v2[3])\n
        goto LABEL_0x406eab;\n
    else\n
        goto LABEL_0x407173;\n
}\n
", "4222657:sub_406ec1": "int sub_406ec1()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v2;  // [bp+0x10]\n
    unsigned int v3;  // [bp+0x24]\n
    unsigned int v4;  // eax\n
\n
    v0 = *(&v2);\n
    v3 = StringManager::intern(v4);\n
}\n
", "4222690:sub_406ee2": "int sub_406ee2(char a0)\n
{\n
    char v1;  // [bp+0xc]\n
    char v2;  // cl\n
    char v3[6];  // esi\n
    char *v4;  // eax\n
\n
    if (!(v1 & 1))\n
    {\n
        if (v2 == v3[0])\n
            goto LABEL_0x407173;\n
        if (v2 == v3[1])\n
            goto LABEL_0x407173;\n
        if (v2 == v3[4])\n
            goto LABEL_0x407173;\n
        if (v2 == v3[3])\n
            goto LABEL_0x407173;\n
        if (v2 == v3[2])\n
            goto LABEL_0x406d00;\n
    }\n
    *(v4) = v2;\n
}\n
", "4222755:sub_406f23": "int sub_406f23(char a0)\n
{\n
    char v1;  // [bp+0xc]\n
    char v2;  // cl\n
    char v3[5];  // esi\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    if (!(!(v1 & 1)))\n
        goto LABEL_0x407120;\n
    if (v2 == v3[0])\n
        goto LABEL_0x407173;\n
    if (v2 == v3[4])\n
        goto LABEL_0x407173;\n
    if (v2 == v3[3])\n
        goto LABEL_0x407173;\n
    if (v2 != v3[2])\n
    {\n
        if (!(v2 == v3[1]))\n
            goto LABEL_0x40710b;\n
        *(v5) = 0;\n
        return sub_4070da();\n
    }\n
    *(v4) = 0;\n
    return sub_406f54();\n
}\n
", "4222804:sub_406f54": "int sub_406f54()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v2;  // [bp+0x14]\n
    char v3;  // [bp+0x24]\n
    struct struct_1 **v4;  // edx\n
\n
    v4 = *(&v2);\n
    v0 = String::create();\n
    *(v4)->field_c(v4, *(&v3));\n
}\n
", "4223024:sub_407030": "int sub_407030()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int *v2;  // eax\n
    unsigned int v3;  // edi\n
    struct struct_1 **v5;  // esi\n
\n
    v0 = Node::create(*(v2), v3);\n
    *(v5)->field_10(v5, 0);\n
}\n
", "4223078:sub_407066": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
    char padding_c[28];\n
    unsigned int field_28;\n
} struct_0;\n
\n
int sub_407066()\n
{\n
    unsigned int v1;  // [bp+0x14]\n
    struct_0 *v2;  // eax\n
    char *v4;  // edi\n
\n
    if (!(!cgc_strcmp(v4, v2->field_8)))\n
        goto LABEL_0x407173;\n
    v1 = v2->field_28;\n
}\n
", "4223194:sub_4070da": "int sub_4070da()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v2;  // [bp+0x14]\n
    char v3;  // [bp+0x24]\n
    struct struct_1 **v4;  // edx\n
\n
    v4 = *(&v2);\n
    v0 = String::create();\n
    *(v4)->field_c(v4, *(&v3));\n
}\n
", "4223287:sub_407137": "int sub_407137()\n
{\n
    unsigned int v1;  // [bp+0x14]\n
    unsigned int v2;  // [bp+0x18], Other Possible Types: char\n
    char v3;  // [bp+0x44]\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v5 = Node::create(*(&v3), v4);\n
    v6 = *(&v2);\n
    v1 = v5;\n
    if (!v6)\n
        v6 = v5;\n
    v2 = v6;\n
}\n
", "4223387:sub_40719b": null, "4223392:_ZN5QueryC2EPKhj": "int Query::__base_ctor__(unsigned int *v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    *(v1) = 0;\n
    v0 = a1;\n
    return Query::parse(v1, a0);\n
}\n
", "4223442:sub_4071d2": null, "4223456:_ZN5Query5parseEPKhj": "int Query::parse(unsigned int v1[772], unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v2[772];  // edx, Other Possible Types: unsigned int\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int v5[772];  // eax, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // esi\n
\n
    v2 = v1;\n
    if (!a1)\n
    {\n
        v5 = v2;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        v6 = 0;\n
        do\n
        {\n
            if (v3 == 0xc00)\n
            {\n
                *((v2 + 3084)) = 2;\n
                return v5;\n
            }\n
            v5 = *((a0 + v6));\n
            *((v2 + v3)) = v5;\n
            if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Conv(32->8, eax<4>) + 0x7f<8>)), 0x2<32>, 0x0<32>)))\n
            {\n
                *(&v5) = v5 - 1;\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Conv(32->8, eax<4>) + 0x7f<8>)), 0x2<32>, 0x0<32>))\n
                {\n
                    v6 += 1;\n
                    goto LABEL_407230;\n
                }\n
            }\n
            if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Conv(32->8, eax<4>) + 0x7f<8>)), 0x2<32>, 0x0<32>)))\n
            {\n
                if (v5 == 131)\n
                {\n
                    v0 = a0 + v6 + 1;\n
                    v5 = cgc_memchr(v0, 0, a1 - (v6 + 1));\n
                    v2 = v1;\n
                    if (v5)\n
                    {\n
                        v7 = v5;\n
                        *((4 + &v1[0] + v3)) = String::create();\n
                        v8 = v6 - v0;\n
                        v9 = v5 + v8;\n
                        v10 = v8 + v7 + 2;\n
                        v0 = a0 + v9 + 2;\n
                        v5 = cgc_memchr(v0, 0, a1 - v10);\n
                        v2 = v1;\n
                        if (v5)\n
                        {\n
                            v11 = v5;\n
                            v5 = String::create();\n
                            v2 = v1;\n
                            *((v2 + v3 + 8)) = v5;\n
                            v6 = 1 + v10 - v0 + v11;\n
                            goto LABEL_407230;\n
                        }\n
                    }\n
                }\n
                else if (v5 == 132)\n
                {\n
                    v5 = ~(v6) + a1;\n
                    if (v5 >= 2)\n
                    {\n
                        v5 = *((a0 + v6 + 1));\n
                        *(&v5) = __ROL__(v5, 8);\n
                        *((v2 + v3 + 4)) = v5;\n
                        v6 += 3;\n
                        goto LABEL_407230;\n
                    }\n
                }\n
            }\n
            v0 = a0 + v6 + 1;\n
            v5 = cgc_memchr(v0, 0, a1 - (v6 + 1));\n
            v2 = v1;\n
            if (!v5)\n
            {\n
                *((v2 + 3084)) = 3;\n
                *(v2) = 0;\n
                return v5;\n
            }\n
            v4 = v5;\n
            v5 = String::create();\n
            v2 = v1;\n
            *((v2 + v3 + 4)) = v5;\n
            v6 = 2 + v6 - v0 + v4;\n
LABEL_407230:\n
            v3 += 12;\n
        } while (v6 < a1);\n
        v5 = v2 + v3;\n
    }\n
    *(v5) = 128;\n
    *((v2 + 3084)) = 0;\n
    return v5;\n
}\n
", "4223591:sub_407267": null, "4223671:sub_4072b7": null, "4223960:sub_4073d8": null, "4223968:_ZN5QueryD1Ev": "typedef struct struct_0 {\n
    unsigned int field_-8;\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_0;\n
\n
int Query::__dtor__(unsigned int *v0)\n
{\n
    struct_0 *v1;  // edi, Other Possible Types: unsigned int\n
    void* v2;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // esi\n
\n
    v1 = v0 + 2;\n
    v2 = 0;\n
    v5 = 257;\n
    do\n
    {\n
        v3 = *((v1 - 8));\n
        if (v3 > 130)\n
        {\n
            if (!(v3 == 131))\n
                continue;\n
            cgc_free(*((v1 - 4)));\n
            v4 = v1;\n
        }\n
        else if (v3 - 129 < 2)\n
        {\n
            v4 = &v0[3 * v2 + 1];\n
        }\n
        else\n
        {\n
            if (!v3)\n
                break;\n
            if (v3 == 128)\n
                break;\n
            continue;\n
        }\n
        cgc_free(*(v4));\n
        v2 += 1;\n
        v1 += 12;\n
        v5 -= 1;\n
    } while (true);\n
    *(v0) = 0;\n
    return v0;\n
}\n
", "4224003:sub_407403": null, "4224128:_ZN5Query13destroy_insnsEv": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_0;\n
\n
int Query::destroy_insns(unsigned int v0[2])\n
{\n
    void* v1;  // esi, Other Possible Types: unsigned int\n
    unsigned int v2[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int v3;  // edi\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = 0;\n
    v2 = 4;\n
    v3 = v0;\n
    do\n
    {\n
        v5 = *((v3 + v2 - 4));\n
        if (v5 > 130)\n
        {\n
            if (!(v5 == 131))\n
                continue;\n
            cgc_free(*((v3 + v2)));\n
            v4 = v3 + v1 * 12 + 8;\n
        }\n
        else if (v5 - 129 < 2)\n
        {\n
            v4 = v3 + v2;\n
        }\n
        else\n
        {\n
            if (!v5)\n
                break;\n
            if (v5 == 128)\n
                break;\n
            continue;\n
        }\n
        v5 = cgc_free(*(v4));\n
        v1 += 1;\n
        v2 += 12;\n
    } while (v2 != 3088);\n
    *(v3) = 0;\n
    return v5;\n
}\n
", "4224263:sub_407507": null, "4224272:_ZN5Query5applyEP4NodePNS_11InstructionEj": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    char padding_18[8];\n
    struct struct_0 *field_20;\n
    char padding_24[4];\n
    struct struct_1 *field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    char padding_18[8];\n
    struct struct_0 *field_20;\n
    char padding_24[4];\n
    struct struct_2 *field_28;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    char *field_4;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_3;\n
\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int Query::apply(unsigned int v6[773], struct_1 *a0, struct_4 *a1, unsigned int a2)\n
{\n
    struct_1 *v0;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x1c]\n
    unsigned int v4[2];  // [bp-0x18]\n
    unsigned int v5[2];  // [bp-0x14]\n
    unsigned int v7[773];  // edi\n
    unsigned int v8;  // ecx\n
    struct_2 *v9;  // ebp\n
    unsigned int v10;  // eax\n
    struct_1 *v13;  // eax\n
    struct_1 *v14;  // edx, Other Possible Types: unsigned int\n
    struct_1 *v15;  // eax\n
    struct_0 *v16;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v17;  // eax\n
    unsigned int v18;  // eax\n
    void* v20;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v21;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // ecx\n
    unsigned int v24[773];  // ebp\n
    struct_1 *v25;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v26;  // edi, Other Possible Types: unsigned int\n
    unsigned int v27;  // ecx\n
    unsigned int v28[773];  // esi\n
    void* v29;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v30;  // edi, Other Possible Types: unsigned int\n
    unsigned int v31;  // ecx\n
    unsigned int v32[773];  // esi\n
    unsigned int v33;  // eax\n
    unsigned int v34[773];  // ebp\n
    struct_3 *v36;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v37;  // eax, Other Possible Types: unsigned int\n
    unsigned int v38;  // esi\n
    unsigned int v40[773];  // esi, Other Possible Types: unsigned int\n
\n
    v7 = v6;\n
    v8 = v7[772];\n
    if (v8 == 0x400)\n
        v7[771] = 2;\n
    v9 = a0;\n
    v4[0] = a1;\n
    v10 = v4[0];\n
    if (!(v10 & 128))\n
    {\n
        switch (v10)\n
        {\n
        case 1:\n
            v13 = v9->field_28;\n
            if (!v13)\n
                goto LABEL_0x40753f;\n
            v7[772] = v8 + 1;\n
            v14 = Query::apply(v7, v13, &a1[1].field_4, 0);\n
            v22 = v7[772];\n
            v7[772] = v22 - 1;\n
            if (!(!v14))\n
                goto LABEL_0x407541;\n
            v40 = v6;\n
            v40[772] = v22;\n
            v2 = 0;\n
            v1[0] = a1;\n
            v0 = &v9->field_28->padding_0;\n
            goto LABEL_407887;\n
        case 2:\n
            v26 = v9->field_20;\n
            v14 = 0;\n
            if (!v26)\n
                goto LABEL_0x407541;\n
            v5[0] = &a1[1].field_4;\n
            do\n
            {\n
                v23 = v8 + 1;\n
                v24 = v6;\n
                v6[772] = v23;\n
                v25 = Query::apply(v6, v26, v5, 0);\n
                v8 = v24[772] - 1;\n
                v24[772] = v8;\n
                if (!(!v25))\n
                    goto LABEL_40789c;\n
                v26 = *((v26 + 24));\n
            } while (v26);\n
            v30 = v9->field_20;\n
            if (!v30)\n
                goto LABEL_0x40753f;\n
            v34 = v6;\n
            while (true)\n
            {\n
                v34[772] = v8 + 1;\n
                v25 = Query::apply(v34, v30, a1, 0);\n
                v8 = v34[772] - 1;\n
                v34[772] = v8;\n
                if (v25)\n
                    break;\n
                v30 = *((v30 + 24));\n
                if (!v30)\n
                    break;\n
            }\n
        case 3:\n
            v15 = v9->field_28;\n
            if (!v15)\n
                goto LABEL_0x40753f;\n
            v7[772] = v8 + 1;\n
            v37 = Query::apply(v7, v15, &a1[1].field_4, 0);\n
            v7[772] = v7[772] - 1;\n
            return v37;\n
        case 4:\n
            v16 = v9->field_20;\n
            if (!v16)\n
                goto LABEL_0x40753f;\n
            v4[0] = &v4[1 + 1];\n
            v20 = 0;\n
            while (true)\n
            {\n
                v27 = v8 + 1;\n
                v28 = v6;\n
                v28[772] = v27;\n
                v25 = Query::apply(v28, v16, v4, v20);\n
                v8 = v28[772] - 1;\n
                v28[772] = v8;\n
                if (v25)\n
                    break;\n
                v20 += 1;\n
                v16 = *((v16 + 24));\n
                v14 = 0;\n
            }\n
        case 5:\n
            v17 = v9->field_28;\n
            v14 = 0;\n
            if (!v17)\n
                goto LABEL_0x407541;\n
            v21 = v17->field_20;\n
            if (!v17->field_20)\n
                goto LABEL_0x407541;\n
            v4[0] = &v4[1 + 1];\n
            v29 = 0;\n
            while (true)\n
            {\n
                v31 = v8 + 1;\n
                v32 = v6;\n
                v32[772] = v31;\n
                v25 = Query::apply(v32, v21, v4, v29);\n
                v8 = v32[772] - 1;\n
                v32[772] = v8;\n
                if (v25)\n
                    break;\n
                v29 += 1;\n
                v21 = *((v21 + 24));\n
                v14 = 0;\n
            }\n
        default:\n
            v7[771] = 3;\n
            break;\n
        }\n
LABEL_40789c:\n
        v14 = v25;\n
    }\n
    else\n
    {\n
        switch (v10)\n
        {\n
        case 128:\n
            v7[771] = 0;\n
            v14 = v9;\n
            break;\n
        case 129:\n
            v14 = 0;\n
            if (!cgc_strcmp(v9->field_8, a1->field_4))\n
                goto LABEL_407870;\n
            break;\n
        case 130:\n
            v14 = 0;\n
            if (!v9->field_4)\n
                goto LABEL_0x407541;\n
            goto LABEL_4077e0;\n
        case 131:\n
            v18 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
            if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
            {\n
                Singleton::_create();\n
                v18 = _ZN9SingletonI13StringManagerE10d_instanceE;\n
            }\n
            v33 = StringManager::intern(v18);\n
            if (!v9->field_c)\n
                goto LABEL_0x40753f;\n
            v36 = *((v9->field_14 + ((0 CONCAT v33 * 0x10000 ^ v33 * 761886451) /m v9->field_10 >> 32) * 4));\n
            v14 = 0;\n
            if (!v36)\n
                goto LABEL_0x407541;\n
            v38 = a2;\n
            while (*((v36 + 4)) != v33)\n
            {\n
                v36 = *((v36 + 8));\n
                if (!v36)\n
                    break;\n
            }\n
            if (!*(v36))\n
                goto LABEL_0x407541;\n
            goto LABEL_4077e0;\n
        case 132:\n
            v14 = 0;\n
            if (!(a1->field_4 == v38))\n
                goto LABEL_0x407541;\n
LABEL_407870:\n
            v40 = v6;\n
            *((v40 + 3088)) = *((v40 + 3088)) + 1;\n
            v2 = v38;\n
            v1 = &a1[1].field_4;\n
            v0 = v9;\n
LABEL_407887:\n
            v37 = Query::apply(v40, v0, v1, v2);\n
            *((v40 + 3088)) = *((v40 + 3088)) - 1;\n
            return v37;\n
        default:\n
            v7[771] = 3;\n
        }\n
LABEL_4077e0:\n
        v14 = 0;\n
        if (!cgc_strcmp(*(&v3), v4))\n
            goto LABEL_407870;\n
    }\n
}\n
", "4225215:sub_4078bf": null, "4225216:_ZN5Query5matchEP4Node": "int Query::match(unsigned int v0[773], void* a0)\n
{\n
    unsigned int v1[773];  // ecx\n
\n
    v1 = v0;\n
    v1[772] = 0;\n
    v1[771] = 1;\n
    return Query::apply(v1, a0, v1, 0);\n
}\n
", "4225275:sub_4078fb": null, "4225280:main": "extern unsigned int cgc_stdin;\n
extern void* cgc_stdout;\n
\n
int main()\n
{\n
    char v0;  // [bp-0x24]\n
    char v1;  // [bp-0x10]\n
\n
    Interface::__ctor__(&v0, cgc_stdin, cgc_stdout);\n
    do\n
    { } while (Interface::process(&v0));\n
    cgc_free(*(&v1));\n
    return 0;\n
}\n
", "4225376:_ZN6StringC1EPKc": "int String::__ctor__(char *v0, char *a0)\n
{\n
    return cgc_strcpy(v0, a0);\n
}\n
", "4225413:sub_407985": null, "4225424:_ZN6String6createEPKc": "extern void* cgc_stderr;\n
\n
int String::create(char *v0)\n
{\n
    char *v1;  // esi\n
    char *v2;  // eax\n
\n
    v1 = cgc_malloc(cgc_strlen(v0) + 1);\n
    if (!v1)\n
    {\n
        cgc_fprintf(cgc_stderr, \"out of memory\");\n
        cgc_exit(1);\n
    }\n
    v2 = operator new(0);\n
    cgc_strcpy(v2, v0);\n
    cgc_memcpy(v1, v2, 0);\n
    operator delete(v2);\n
    return v1;\n
}\n
", "4225574:sub_407a26": null, "4225584:_ZN9SingletonI13StringManagerE7_createEv": "extern struct_0 *_ZN9SingletonI13StringManagerE10d_instanceE;\n
\n
int Singleton::_create()\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = operator new(12);\n
    v1[0] = 0;\n
    v1[1] = 10;\n
    v1[2] = 0;\n
    _ZN9SingletonI13StringManagerE10d_instanceE = &v1[0];\n
    return _ZN9SingletonI13StringManagerE10d_instanceE;\n
}\n
", "4225643:sub_407a6b": null, "4225648:_ZN13StringManagerC1Ev": "int StringManager::__ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 10;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4225673:sub_407a89": null, "4225680:_ZN13StringManager6internEPKc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_4 *field_0;\n
    char *field_4;\n
    struct struct_3 *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    struct struct_2 *field_0;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int StringManager::intern(struct_0 *v0, char *a0)\n
{\n
    char *v1;  // esi\n
    struct_0 *v2;  // ebp\n
    unsigned int v3;  // ecx, Other Possible Types: char\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    struct_3 *v6;  // edi, Other Possible Types: unsigned int\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    char *v9;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // edi\n
    unsigned int v12[3];  // eax\n
    unsigned int *v13;  // ecx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (v0->field_0)\n
    {\n
        v3 = *(v1);\n
        if (!*(v1))\n
        {\n
            v5 = 336958053;\n
        }\n
        else\n
        {\n
            v4 = v1 + 1;\n
            v5 = 336958053;\n
            do\n
            {\n
                v5 = v5 * 43 ^ v3;\n
                v3 = *(v4);\n
                v4 += 1;\n
            } while (v3);\n
        }\n
        v6 = v2->field_8[(0 CONCAT v5) /m v2->field_4 >> 32].field_0;\n
        if (v6)\n
        {\n
            do\n
            {\n
                if (!cgc_strcmp(v1, *((v6 + 4))))\n
                    return *(v6);\n
                v6 = *((v6 + 8));\n
            } while (v6);\n
        }\n
    }\n
    v7 = String::create(v1);\n
    v8 = v2->field_0 + 1;\n
    v2->field_0 = v8;\n
    if (v2->field_8)\n
    {\n
        if (!(v8 << 1 <= v2->field_4))\n
            goto LABEL_407b86;\n
        goto LABEL_407b40;\n
    }\n
    else\n
    {\n
        v2->field_4 = 0;\n
        HashMap::resize(v2);\n
        if (v2->field_0 << 1 <= v2->field_4)\n
        {\n
LABEL_407b40:\n
            *(&v4) = *(v7);\n
            if (!*(v7))\n
                goto LABEL_407b9a;\n
            goto LABEL_407b46;\n
        }\n
        else\n
        {\n
LABEL_407b86:\n
            HashMap::resize(v2);\n
            *(&v4) = *(v7);\n
            if (!*(v7))\n
            {\n
LABEL_407b9a:\n
                v10 = 336958053;\n
            }\n
            else\n
            {\n
LABEL_407b46:\n
                v9 = v7 + 1;\n
                v10 = 336958053;\n
                do\n
                {\n
                    v10 = v10 * 43 ^ v4;\n
                    v4 = *(v9);\n
                    v9 += 1;\n
                } while (v4);\n
            }\n
        }\n
    }\n
    v11 = (0 CONCAT v10) /m v2->field_4 >> 32;\n
    v12 = operator new(12);\n
    v12[0] = v7;\n
    v12[1] = v7;\n
    v13 = v2->field_8;\n
    v12[2] = v13[v11];\n
    v13[v11] = v12;\n
    return v7;\n
}\n
", "4226001:sub_407bd1": null, "4226016:_ZN7HashMapIPKcP6String17CStringComparatorE6resizeEi": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_0 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern void* cgc_stderr;\n
\n
int HashMap::resize(struct_2 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // edi\n
    struct_2 *v3;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v4;  // esi\n
    char *v5;  // edx\n
    unsigned int v6;  // cl, Other Possible Types: char\n
    unsigned int v7;  // eax\n
    char *v8;  // edx, Other Possible Types: unsigned int\n
    unsigned int v9;  // edx\n
    struct_0 *v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v12;  // ebx, Other Possible Types: unsigned int\n
\n
    v2 = a0;\n
    if ((0 CONCAT v2 << 2) /m v2 != 4)\n
    {\n
        cgc_fprintf(cgc_stderr, \"detected overflow\");\n
        cgc_exit(1);\n
    }\n
    v3 = v1;\n
    v4 = cgc_calloc(v2, 4);\n
    if (v4)\n
    {\n
        v10 = v3->field_4;\n
        v0 = v10;\n
        if (!v10)\n
            goto LABEL_407cf4;\n
    }\n
    else\n
    {\n
        cgc_fprintf(cgc_stderr, \"out of memory\");\n
        cgc_exit(1);\n
        v10 = v3->field_4;\n
        v0 = v10;\n
        if (!v10)\n
            goto LABEL_407cf4;\n
    }\n
    v12 = 0;\n
    do\n
    {\n
        v10 = *((v3 + 8));\n
        v11 = *((v10 + v12 * 4));\n
        if (*((v10 + (v12 << 2))))\n
        {\n
            do\n
            {\n
                v5 = *((v11 + 4));\n
                v6 = *(v5);\n
                if (!*(v5))\n
                {\n
                    v7 = 336958053;\n
                }\n
                else\n
                {\n
                    v8 = v5 + 1;\n
                    v7 = 336958053;\n
                    do\n
                    {\n
                        v7 = v7 * 43 ^ v6;\n
                        v6 = *(v8);\n
                        v8 += 1;\n
                    } while (v6);\n
                }\n
                v9 = (0 CONCAT v7) /m v2 >> 32;\n
                v10 = *((v11 + 8));\n
                *((v11 + 8)) = v4[v9];\n
                v4[v9] = v11;\n
                v11 = v10;\n
            } while (v10);\n
        }\n
        v12 += 1;\n
        v3 = v1;\n
    } while (v12 != v0);\n
LABEL_407cf4:\n
    *((v3 + 8)) = v4;\n
    *((v3 + 4)) = v2;\n
    return v10;\n
}\n
", "4226188:sub_407c8c": null, "4226217:sub_407ca9": null, "4226306:sub_407d02": null, "4226320:_ZN8TextNodeC2EPK6StringS2_": "extern char g_40ba4c;\n
\n
int TextNode::__base_ctor__(unsigned int v2[13], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5[13];  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    Node::__ctor__(v5, a0, a1, 2);\n
    v5[0] = &g_40ba4c;\n
    v5[12] = 0;\n
    return &g_40ba4c;\n
}\n
", "4226379:sub_407d4b": null, "4226384:_ZN8TextNode4textEv": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern unsigned int _ZN9SingletonI13StringManagerE10d_instanceE;\n
extern char g_4081d6;\n
\n
int TextNode::text(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1->field_30)\n
    {\n
        return v1->field_30;\n
    }\n
    else if (!_ZN9SingletonI13StringManagerE10d_instanceE)\n
    {\n
        Singleton::_create();\n
        return StringManager::intern(_ZN9SingletonI13StringManagerE10d_instanceE, &g_4081d6);\n
    }\n
    else\n
    {\n
        return StringManager::intern(_ZN9SingletonI13StringManagerE10d_instanceE, &g_4081d6);\n
    }\n
}\n
", "4226457:sub_407d99": null, "4226464:_ZN8TextNode8set_textEP6String": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
int TextNode::set_text(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // edi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_30;\n
    if (v2)\n
        v2 = cgc_free(v2);\n
    v1->field_30 = a0;\n
    return v2;\n
}\n
", "4226515:sub_407dd3": null, "4226528:_ZN8TextNodeD0Ev": "int TextNode::__deleting_dtor__(void* v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
\n
    v0 = v2;\n
    Node::__dtor__(v1);\n
    return operator delete(v1);\n
}\n
", "4226572:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_receive": null, "5242892:cgc_allocate": null, "5242896:cgc__terminate": null, "5242900:_ZdlPv": null, "5242904:cgc_deallocate": null, "5242908:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}