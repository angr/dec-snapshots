{"4202496:_init": "extern struct_0 *g_4094ec;\n
\n
int _init()\n
{\n
    if (g_4094ec)\n
    {\n
        g_4094ec();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:sub_402090": "int sub_402090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202646:sub_402096": null, "4202656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202699:sub_4020cb": null, "4202700:sub_4020cc": "int sub_4020cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202708:sub_4020d4": null, "4202720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 29715;\n
    v6 = v5 + 46;\n
    v7 = v5 + 46;\n
    if (v7 == v6)\n
        return v5 + 46;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202771:sub_402113": "int sub_402113()\n
{\n
}\n
", "4202777:sub_402119": "int sub_402119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 29651;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 46;\n
    v9 = (v6 + 46 - (v6 + 46) >> 31) + (46 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202855:sub_402167": "int sub_402167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4094e8;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4094e8)\n
    {\n
        v0 = __dso_handle;\n
        sub_402090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = a0 * v5;\n
        if ((0 CONCAT v3) /m a0 != v5)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_malloc();\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = v3;\n
        v4 = cgc_memset(v2, 0);\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4203141:sub_402285": null, "4203152:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_isalpha())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isdigit();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203241:sub_4022e9": null, "4203248:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_islower())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isupper();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203337:sub_402349": null, "4203344:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203369:sub_402369": null, "4203376:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203401:sub_402389": null, "4203408:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203433:sub_4023a9": null, "4203440:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return ((v0 & -128) ^ 255) & 1;\n
}\n
", "4203467:sub_4023cb": null, "4203472:cgc_isblank": "int cgc_isblank(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 32)\n
        v1 = v2 == 9;\n
    return v1 & 1;\n
}\n
", "4203517:sub_4023fd": null, "4203520:cgc_iscntrl": "int cgc_iscntrl(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 127)\n
        v1 = v2 < 32;\n
    return v1 & 1;\n
}\n
", "4203565:sub_40242d": null, "4203568:cgc_isgraph": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isgraph(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (v3 != 32)\n
    {\n
        v0 = v3;\n
        v2 = cgc_isprint();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203645:sub_40247d": null, "4203648:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 32)\n
        v1 = v2 != 127;\n
    return v1 & 1;\n
}\n
", "4203693:sub_4024ad": null, "4203696:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[9456 + v0];\n
}\n
", "4203727:sub_4024cf": null, "4203728:cgc_isspace": "int cgc_isspace(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 > 8)\n
    {\n
        v1 = 1;\n
        if (v2 < 14)\n
            return v1 & 1;\n
    }\n
    v1 = v2 == 32;\n
    return v1 & 1;\n
}\n
", "4203783:sub_402507": null, "4203792:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[9328 + v0];\n
}\n
", "4203823:sub_40252f": null, "4203824:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203838:sub_40253e": null, "4203840:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 | 32;\n
    return v0;\n
}\n
", "4203911:sub_402587": null, "4203920:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 & 95;\n
    return v0;\n
}\n
", "4203991:sub_4025d7": null, "4204000:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v3[2])\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2[0] = v3 + 3;\n
    v4 = v2;\n
    if (*((v4 + 4)))\n
    {\n
        return v2;\n
    }\n
    else if (v2[0] >= 0x40000)\n
    {\n
        v0[0] = v2;\n
        v4 = cgc_free_huge();\n
        return v4;\n
    }\n
    else\n
    {\n
        v0[0] = v2;\n
        cgc_insert_into_flist();\n
        v0[0] = v2;\n
        v4 = cgc_coalesce();\n
        return v4;\n
    }\n
}\n
", "4204135:sub_402667": null, "4204144:cgc_free_huge": "int cgc_free_huge(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = *(v1);\n
    return cgc_deallocate(v1);\n
}\n
", "4204192:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v7)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[6];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct struct_1 **v4;  // [bp-0x14]\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7 + 24 < 0x40000)\n
    {\n
        if ((v7 & 7))\n
            v7 = v7 - -7 & -8;\n
        if (v7 >= 0x80000000)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v7 += 24;\n
        v5 = 0;\n
        v0 = &v5;\n
        v4 = cgc_find_fit(v7);\n
        if (!v5)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v4 = 31;\n
                v5 = *((v1 + 188 + v4 * 4));\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
        cgc_remove_from_flist();\n
        v3 = *(v5) - v7;\n
        if (v3 > 48)\n
        {\n
            v2[0] = v5 + v7;\n
            v2[0] = v3;\n
            v2[1] = 1;\n
            v2[2] = 0;\n
            v2[3] = 0;\n
            *(v5) = v7;\n
            v2[5] = v5;\n
            v2[4] = *((v5 + 16));\n
            if (*((v5 + 16)))\n
                *((*((v5 + 16)) + 20)) = v2;\n
            *((v5 + 16)) = v2;\n
            cgc_insert_into_flist();\n
        }\n
        v6 = v5 + 24;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = cgc_malloc_huge();\n
        return v6;\n
    }\n
}\n
", "4204625:sub_402851": null, "4204640:cgc_malloc_huge": "int cgc_malloc_huge(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[6];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 += 24;\n
    v0 = &v2;\n
    if (cgc_allocate(v4, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v4;\n
    v1[1] = 0;\n
    v1[3] = 0;\n
    v1[2] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v3 = v1 + 1;\n
    return v3;\n
}\n
", "4204802:sub_402902": null, "4204816:cgc_find_fit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_fit(unsigned int v5, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    for (v2 = cgc_get_size_class(); v2 < 32; v2 = v2 + 1)\n
    {\n
        for (*(a0) = *((v1 + 188 + v2 * 4)); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v3 = -1;\n
    return v3;\n
}\n
", "4204994:sub_4029c2": null, "4205008:cgc_allocate_new_blk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_new_blk()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[6];  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0x40000;\n
    v0 = &v4;\n
    if (cgc_allocate(v2, 0))\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (*(&v4))\n
    {\n
        v3[0] = *(&v4);\n
        v3[0] = v2;\n
        v3[1] = 1;\n
        v3[3] = 0;\n
        v3[2] = 0;\n
        v3[5] = 0;\n
        v3[4] = 0;\n
        cgc_insert_into_flist();\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4205202:sub_402a92": null, "4205216:cgc_get_size_class": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_size_class(unsigned int v3)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2 < 32)\n
            v0 = !(v3 <= *((v1 + (v2 << 2) + 40)));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4205327:sub_402b0f": null, "4205328:cgc_insert_into_flist": "extern unsigned int _GLOBAL_OFFSET_TABLE_[4];\n
\n
int cgc_insert_into_flist(unsigned int v3[4])\n
{\n
    unsigned int v0[4];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // eax\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = cgc_get_size_class(v3[0]);\n
    v3[1] = 1;\n
    if (!v0[11 + 3 + v1])\n
    {\n
        v5 = v0;\n
        v5[11 + 3 + v1] = v3;\n
        return v0;\n
    }\n
    v6 = v0;\n
    v3[2] = v6[11 + 3 + v1];\n
    *((v6[11 + 3 + v1] + 12)) = v3;\n
    v6[11 + 3 + v1] = v3;\n
    v5 = v3;\n
    *((v5 + 12)) = 0;\n
    return v3;\n
}\n
", "4205486:sub_402bae": null, "4205488:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_size_class(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((v0 + (v1 << 2) + 188)) == v3)\n
        *((v0 + v1 * 4 + 188)) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4205662:sub_402c5e": null, "4205664:cgc_coalesce": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[2];  // eax\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int, unsigned int [2]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v2 = v1->field_14;\n
        v2[0] = v1->field_0 + v2[0];\n
        v3 = v1->field_14;\n
        v3[0] = v1->field_10->field_0 + v3[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        cgc_remove_from_blist();\n
        v6 = cgc_remove_from_blist();\n
        return v6;\n
    }\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && !v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1);\n
        v4 = v1->field_14;\n
        v4[0] = v1->field_0 + v4[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        v6 = cgc_remove_from_blist();\n
        goto LABEL_402e4c;\n
    }\n
    v6 = v1;\n
    if (v6->field_14)\n
    {\n
        v6 = v1->field_14;\n
        if (!v6[1])\n
        {\n
            v6 = v1;\n
            if (v6->field_10)\n
            {\n
                v6 = v1->field_10;\n
                if (v6[1])\n
                {\n
                    cgc_remove_from_flist(v1->field_10);\n
                    cgc_remove_from_flist(v1);\n
                    v5 = v1;\n
                    v5->field_0 = v1->field_10->field_0 + v5->field_0;\n
                    cgc_insert_into_flist(v1);\n
                    v6 = cgc_remove_from_blist();\n
                }\n
            }\n
        }\n
    }\n
LABEL_402e4c:\n
    return v6;\n
}\n
", "4206172:sub_402e5c": null, "4206176:cgc_remove_from_blist": "int cgc_remove_from_blist(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (*((v0 + 20)))\n
        *((*((v0 + 20)) + 16)) = *((v0 + 16));\n
    v1 = v0;\n
    if (*((v1 + 16)))\n
    {\n
        v1 = *((v0 + 16));\n
        *((v1 + 20)) = *((v0 + 20));\n
    }\n
    return v1;\n
}\n
", "4206240:cgc_memchr": "int cgc_memchr(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v2 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206336:cgc_memcmp": "int cgc_memcmp(char *v2, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*(v2) != *(a0))\n
        {\n
            v1 = *(a0) - *(v2);\n
            return v1;\n
        }\n
        v2 += 1;\n
        a0 += 1;\n
        v0 += 1;\n
    }\n
}\n
", "4206464:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v3;\n
}\n
", "4206550:sub_402fd6": null, "4206560:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v3;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v2 = v3;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v3;\n
        return v2;\n
    }\n
}\n
", "4206689:sub_403061": null, "4206704:cgc_output_number_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_printf(unsigned int v8, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char v3;  // [bp-0x2d]\n
    char v4;  // [bp-0x25]\n
    char v5;  // [bp-0x1d]\n
    char v6;  // [bp-0x15]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (v8 >= a0)\n
    {\n
        v7 = cgc_output_number_printf((0 CONCAT v8) /m a0, a0, a1 - 1, a2);\n
        v8 = (0 CONCAT v8) /m a0 >> 32;\n
    }\n
    if (!v7 && a1 > 0)\n
    {\n
        while (true)\n
        {\n
            a1 -= 1;\n
            if (!a1)\n
                break;\n
            if (!(a2 & 1))\n
            {\n
                v5 = 32;\n
                cgc_transmit(1, &v5, 1);\n
            }\n
            else\n
            {\n
                v6 = 48;\n
                cgc_transmit(1, &v6, 1);\n
            }\n
        }\n
    }\n
    if ((a2 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v4 = v1;\n
        cgc_transmit(1, &v4, 1);\n
        return v7 + 1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v3 = v0;\n
        cgc_transmit(1, &v3, 1);\n
        return v7 + 1;\n
    }\n
}\n
", "4207195:sub_40325b": null, "4207200:cgc_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf(char *v18)\n
{\n
    char *v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    char v4;  // [bp-0x51]\n
    char v5;  // [bp-0x49]\n
    char v6;  // [bp-0x41]\n
    char v7;  // [bp-0x39]\n
    char v8;  // [bp-0x31]\n
    char v9;  // [bp-0x29]\n
    struct struct_0 **v10;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x24]\n
    void* v12;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x18]\n
    unsigned int v15;  // [bp-0x14]\n
    unsigned int v16;  // [bp-0x10]\n
    char *v17;  // [bp-0xc]\n
    char v19;  // [bp+0x8]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(v18))\n
    {\n
        v20 = v18;\n
        v18 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            cgc_transmit(1, &v4, 1);\n
LABEL_403585:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = v18;\n
                    v18 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(v18 - 1, &v18);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                cgc_transmit(1, &v8, 1);\n
                goto LABEL_40353d;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = *(v22);\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        cgc_transmit(1, &v6, 1);\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number_printf(v16, 10, v12, v13);\n
                    goto LABEL_40353d;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        cgc_transmit(1, &v7, 1);\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_40353d;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    cgc_transmit(1, &v5, 1);\n
LABEL_40353d:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_403585;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = *(v24);\n
            cgc_output_number_printf(v11, 16, v12, v13);\n
            goto LABEL_40353d;\n
        }\n
    }\n
    return v14;\n
}\n
", "4208019:sub_403593": null, "4208032:cgc_output_number_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_sprintf(unsigned int *v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char v3;  // [bp-0x2d]\n
    char v4;  // [bp-0x25]\n
    char v5;  // [bp-0x1d]\n
    char v6;  // [bp-0x15]\n
    struct struct_0 **v8;  // eax\n
    unsigned int *v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    unsigned int *v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a1 >= a2)\n
    {\n
        cgc_output_number_sprintf(v7, a0, (0 CONCAT a1) /m a2, a2, a3 - 1, a4);\n
        a1 = (0 CONCAT a1) /m a2 >> 32;\n
    }\n
    if (a1 < a2 && a3 > 0)\n
    {\n
        while (true)\n
        {\n
            a3 -= 1;\n
            if (!a3)\n
                break;\n
            if ((a4 & 1))\n
            {\n
                v6 = 48;\n
                *(a0)->field_0 = v6;\n
            }\n
            else\n
            {\n
                v5 = 32;\n
                *(a0)->field_0 = v5;\n
            }\n
            v8 = a0;\n
            *(v8) = *(v8) + 1;\n
            v9 = v7;\n
            *(v9) = *(v9) + 1;\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (a1 < 10)\n
            v1 = a1 + 48;\n
        else\n
            v1 = a1 + 55;\n
        v4 = v1;\n
        *(a0)->field_0 = v4;\n
    }\n
    else\n
    {\n
        if (a1 < 10)\n
            v0 = a1 + 48;\n
        else\n
            v0 = a1 + 87;\n
        v3 = v0;\n
        *(a0)->field_0 = v3;\n
    }\n
    v10 = a0;\n
    *(v10) = *(v10) + 1;\n
    v11 = v7;\n
    *(v11) = *(v11) + 1;\n
    return v11;\n
}\n
", "4208503:sub_403777": null, "4208512:cgc_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprintf(char *v18, char *a0)\n
{\n
    char *v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    unsigned int v3;  // [bp-0x60]\n
    char v4;  // [bp-0x59]\n
    char v5;  // [bp-0x51]\n
    char v6;  // [bp-0x49]\n
    char v7;  // [bp-0x41]\n
    char v8;  // [bp-0x39]\n
    char v9;  // [bp-0x31]\n
    struct struct_0 **v10;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v11;  // [bp-0x2c]\n
    void* v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x1c]\n
    char *v16;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v17;  // [bp-0x14]\n
    char v19;  // [bp+0xc]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(a0))\n
    {\n
        v20 = a0;\n
        a0 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            *(v18) = v4;\n
            v18 += 1;\n
            v14 += 1;\n
LABEL_403a8f:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = a0;\n
                    a0 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                *(v18) = v8;\n
                v18 += 1;\n
                v14 += 1;\n
                goto LABEL_403a52;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = &*(v22)->field_0;\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        *(v18) = v6;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number_sprintf(&v14, &v18, v16, 10, v12, v13);\n
                    goto LABEL_403a52;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        *(v18) = v7;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_403a52;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    *(v18) = v5;\n
                    v18 += 1;\n
                    v14 += 1;\n
LABEL_403a52:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_403a8f;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = &*(v24)->field_0;\n
            cgc_output_number_sprintf(&v14, &v18, v11, 16, v12, v13);\n
            goto LABEL_403a52;\n
        }\n
    }\n
    v25 = v18;\n
    v18 = v25 + 1;\n
    *(v25) = 0;\n
    return v14;\n
}\n
", "4209325:sub_403aad": null, "4209328:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = cgc_malloc(a0);\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v2 = cgc_malloc(a0);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = &v4[3];\n
        if (a0 >= *(v1) - 24)\n
            cgc_memcpy(v2, v4, *(v1) - 24);\n
        else\n
            cgc_memcpy(v2, v4, a0);\n
        cgc_free(v4);\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_free(v4);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209586:sub_403bb2": null, "4209600:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v3 = v0;\n
            v0 = v3 + 1;\n
            if (*(v3) == a0)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4209684:sub_403c14": null, "4209696:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(a0) - *(v2);\n
}\n
", "4209824:cgc_strcpy": "int cgc_strcpy(unsigned int v1, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    for (v0 = 0; *(a0); *((v1 + v4)) = *(v3))\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4209908:sub_403cf4": null, "4209920:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4209972:sub_403d34": null, "4209984:cgc_strsep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strsep(struct struct_0 **v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = cgc_strchr(a0, *(v2)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    a0 = &*(v4)->field_0;\n
    if (!*(v2))\n
    {\n
        *(v4) = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        *(v4) = v2 + 1;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4210200:sub_403e18": null, "4210208:cgc_strtol": "int cgc_strtol(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v12;\n
    if (a1 == 1)\n
    {\n
LABEL_403e68:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_403e68;\n
        if (a1 < 0)\n
            goto LABEL_403e68;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 43)\n
            v6 = &v6[1];\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_403f5f:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_403f5f;\n
                v6 = &v6[1];\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_403fd4;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_403fd4:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_404132;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_4040f2;\n
            }\n
            if (!v7)\n
            {\n
LABEL_4040f2:\n
                if (v8 >= a1)\n
                    goto LABEL_404132;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                v6 = &v6[1];\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_4040e9;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_4040e9:\n
                v8 += 10;\n
                goto LABEL_4040f2;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_404068;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_404068:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_404132:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v12;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4211070:sub_40417e": null, "4211072:cgc_strtoul": "int cgc_strtoul(char v0[2], unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4211131:sub_4041bb": null, "4211136:cgc_init_deck": "typedef struct struct_0 {\n
    char padding_0[168];\n
    unsigned int field_a8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_deck(unsigned int v3[105], unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (a0)\n
        v0->field_a8 = *(a0);\n
    for (v2 = 0; v2 < 4; v2 += 1)\n
    {\n
        for (v1 = 0; v1 < 13; v1 += 1)\n
        {\n
            *((&v3[0] + 0x68 * v2 + 8 * v1)) = v1 + 1;\n
            *((4 + &v3[0] + 0x68 * v2 + 8 * v1)) = v2;\n
        }\n
    }\n
    v3[104] = 0;\n
    return v3;\n
}\n
", "4211308:sub_40426c": null, "4211312:cgc_shuffle_deck": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_shuffle_deck(unsigned int v7[105])\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4[105];  // [bp-0x1c]\n
    unsigned int v5[105];  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8[105];  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10[105];  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v12[105];  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14[105];  // eax\n
    unsigned int v15;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 10000;\n
    for (v6 = 0; v6 < v3; v6 += 1)\n
    {\n
        v5[0] = (0 CONCAT cgc_rng()) /m 52 >> 32;\n
        v4[0] = (0 CONCAT cgc_rng()) /m 52 >> 32;\n
        v8 = v7;\n
        v9 = v5;\n
        v1 = v8[2 * v9];\n
        v2 = v8[1 + 2 * v9];\n
        v10 = v7;\n
        v11 = v5;\n
        v12 = v7;\n
        v13 = v4;\n
        v10[2 * v11] = v12[2 * v13];\n
        v10[1 + 2 * v11] = v12[1 + 2 * v13];\n
        v14 = v7;\n
        v15 = v4;\n
        v14[2 * v15] = v1;\n
        v14[1 + 2 * v15] = v2;\n
    }\n
    v7[104] = 0;\n
    return 1;\n
}\n
", "4211509:sub_404335": null, "4211520:cgc_shuffle_deck_if_needed": "typedef struct struct_0 {\n
    char padding_0[416];\n
    unsigned int field_1a0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_shuffle_deck_if_needed(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_1a0 <= 33)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (cgc_shuffle_deck(v2))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
}\n
", "4211624:sub_4043a8": null, "4211632:cgc_draw_card": "typedef struct struct_0 {\n
    char padding_0[416];\n
    unsigned int field_1a0;\n
} struct_0;\n
\n
int cgc_draw_card(struct_0 *v0)\n
{\n
    struct_0 *v1;  // edx\n
    unsigned int v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_1a0;\n
    v1->field_1a0 = v2 + 1;\n
    return &v0->padding_0[8 * v2];\n
}\n
", "4211670:sub_4043d6": null, "4211680:cgc_rng": "extern unsigned int a;\n
extern unsigned int b;\n
extern unsigned int c;\n
extern unsigned int d;\n
\n
int cgc_rng()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v0 = a ^ a * 128;\n
    a = b;\n
    b = c;\n
    c = d;\n
    d = d ^ d >> 22 ^ v0 ^ v0 >> 16;\n
    v5 = v1;\n
    return d;\n
}\n
", "4211795:sub_404453": null, "4211808:cgc_print_game_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_game_menu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"Game Sultan: Main Menu\\n
\");\n
    cgc_printf(v0 - 9020);\n
    cgc_printf(v0 - 9002);\n
    v4 = v1;\n
    return cgc_printf(v0 - 8992);\n
}\n
", "4211901:sub_4044bd": null, "4211904:cgc_cardtos": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cardtos()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int *v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = *(v3);\n
    if (v1 > 13)\n
    {\n
        v2 = v0 - 8956;\n
        return;\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[12] * 4 - 9200)) + (stack_base)[16];\n
}\n
", "4212220:sub_4045fc": null, "4212224:cgc_suittos": "extern char g_407397;\n
\n
int cgc_suittos(unsigned int v0)\n
{\n
    return &g_407397;\n
}\n
", "4212250:sub_40461a": null, "4212256:cgc_play_squarerabbit": "extern unsigned int _GLOBAL_OFFSET_TABLE_[82];\n
extern char g_40734d;\n
\n
int cgc_play_squarerabbit()\n
{\n
    unsigned int v9;  // [bp+0x0]\n
    unsigned int v13[82];  // [bp+0xffdec]\n
    unsigned int v19[82];  // ecx\n
\n
    v19 = v13;\n
    if (v19[79] >= v19[81] && !(cgc_split() < 0))\n
        goto LABEL_404acd;\n
    v9 = &v13[26 + 42] + 1;\n
    cgc_printf(&v13[26 + 42] + 1);\n
LABEL_404acd:\n
}\n
", "4213553:sub_404b31": null, "4213568:cgc_readline": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readline(unsigned int v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < a1; v3 += 1)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(v5, a0, 1))\n
        {\n
LABEL_404ba9:\n
            break;\n
        }\n
        else\n
        {\n
            if (!*(&v2))\n
                goto LABEL_404ba9;\n
            if (*(a0) == 10)\n
                break;\n
            a0 += 1;\n
        }\n
    }\n
    if (v3 == a1 && *(a0) != 10)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (*(a0) != 10)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    *(a0) = 0;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4213814:sub_404c36": null, "4213824:cgc_readchar": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readchar(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x12]\n
    char v3;  // [bp-0x11]\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v4;\n
    if (!cgc_receive(v7, &v3, 1) && *(&v4))\n
    {\n
        v0 = &v4;\n
        if (!cgc_receive(v7, &v2, 1) && *(&v4))\n
        {\n
            if (v2 == 10)\n
            {\n
                v5 = v3;\n
                return v5;\n
            }\n
            v5 = 255;\n
            return v5;\n
        }\n
        v5 = 255;\n
        return v5;\n
    }\n
    v5 = 255;\n
    return v5;\n
}\n
", "4214012:sub_404cfc": null, "4214016:cgc_play_poker": "int cgc_play_poker()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4214021:sub_404d05": null, "4214032:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x21c]\n
    unsigned int v1;  // [bp-0x218]\n
    char v2;  // [bp-0x211]\n
    void* v3;  // [bp-0x210], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x20c]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v3 = 0;\n
    cgc_printf(\"Enter a number greater than 0: \");\n
    if (cgc_readline(0, &v4, 0x200))\n
    {\n
        cgc_printf(v1 - 8653);\n
        cgc_printf(v1 - 8638);\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = cgc_strtol(&v4, NULL, 10);\n
    if (!v3)\n
    {\n
        cgc_printf(v1 - 8653);\n
        cgc_printf(v1 - 8638);\n
        v5 = 0;\n
        return v5;\n
    }\n
    cgc_printf(v1 - 8547);\n
    cgc_printf(v1 - 8626);\n
    cgc_printf(v1 - 8599);\n
    cgc_printf(v1 - 8572);\n
    cgc_init_player();\n
    cgc_init_squarerabbit();\n
    v2 = 48;\n
    while (v2 != 50)\n
    {\n
        cgc_print_game_menu();\n
        v2 = cgc_readchar(0);\n
        v0 = v2;\n
        if (v0 == 49)\n
        {\n
            cgc_play_squarerabbit();\n
        }\n
        else if (v0 != 50)\n
        {\n
            if ((Not (Not (Load(addr=stack_base-540, size=4, endness=Iend_LE) == 0x33<32>)))) { Goto None } else { Goto None }\n
            cgc_printf(v1 - 8544);\n
        }\n
    }\n
    cgc_printf(v1 - 8508);\n
    return v5;\n
}\n
", "4214625:sub_404f61": null, "4214640:cgc_print_cards": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_0 *field_8;\n
    char padding_c[8];\n
    char field_14;\n
    char field_15;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[8];\n
    char field_14;\n
    char field_15;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_cards()\n
{\n
    struct_0 *v0;  // [bp-0x5c]\n
    void* v1;  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    unsigned int v5;  // [bp-0x48]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    unsigned int v8;  // [bp-0x3c]\n
    unsigned int v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x34]\n
    struct_2 *v11;  // [bp-0x30]\n
    struct_0 *v12;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v13;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x24]\n
    struct_1 *v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x18]\n
    unsigned int v18;  // [bp-0x14]\n
    void* v19;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0xc]\n
    unsigned int v21;  // [bp-0x8]\n
    unsigned int v23;  // ebx\n
\n
    v21 = v23;\n
    v10 = &_GLOBAL_OFFSET_TABLE_;\n
    v19 = 1;\n
    v15 = cgc_get_srabbit_game();\n
    v14 = cgc_get_split_hand();\n
    v13 = v15->field_8;\n
    v12 = v15->field_4;\n
    v0 = v13;\n
    v1 = 0;\n
    v17 = cgc_calc_score(v0);\n
    if (!cgc_is_player_finished(v0))\n
    {\n
        v16 = v15->field_4->field_0;\n
        v9 = cgc_cardtos();\n
        v1 = v9;\n
        v2 = cgc_suittos(v16);\n
        cgc_printf(v10 - 8487);\n
        cgc_printf(v10 - 8423);\n
    }\n
    else\n
    {\n
        cgc_dealer_hit();\n
        v1 = 0;\n
        v18 = cgc_calc_score(v12);\n
        cgc_printf(v10 - 8469);\n
        for (; v12; v12 = v12->field_4)\n
        {\n
            v16 = v12->field_0;\n
            v8 = cgc_cardtos();\n
            v1 = v8;\n
            v2 = cgc_suittos(v16);\n
            cgc_printf(v10 - 8459);\n
        }\n
        v1 = v18;\n
        cgc_printf(v10 - 8453);\n
        cgc_printf(v10 - 8438);\n
    }\n
    cgc_printf(v10 - 8405);\n
    for (; v13; v13 = *((v13 + 4)))\n
    {\n
        v16 = *(v13);\n
        v7 = cgc_cardtos();\n
        v1 = v7;\n
        v2 = cgc_suittos(v16);\n
        cgc_printf(v10 - 8459);\n
    }\n
    v1 = v17;\n
    cgc_printf(v10 - 8453);\n
    if (v15->field_14)\n
    {\n
        if (cgc_is_player_finished())\n
        {\n
            v1 = v18;\n
            cgc_print_winner(v17);\n
        }\n
        v19 = 0;\n
        while (true)\n
        {\n
            v5 = v19;\n
            if (v5 >= cgc_split_len())\n
            {\n
                v20 = 0;\n
                return v20;\n
            }\n
            v11 = v14 + v19 * 24;\n
            v13 = v11->field_8;\n
            v1 = 0;\n
            v17 = cgc_calc_score(v13);\n
            v1 = v19 + 1;\n
            cgc_printf(v10 - 8377);\n
            for (; v13; v13 = *((v13 + 4)))\n
            {\n
                v16 = *(v13);\n
                v4 = cgc_cardtos();\n
                v1 = v4;\n
                v2 = cgc_suittos(v16);\n
                cgc_printf(v10 - 8459);\n
            }\n
            v1 = v17;\n
            cgc_printf(v10 - 8453);\n
            if (!v11->field_14)\n
                break;\n
            if (cgc_is_player_finished())\n
            {\n
                v1 = v18;\n
                cgc_print_winner(v17);\n
            }\n
            v19 += 1;\n
        }\n
        cgc_printf(v10 - 8395);\n
        if (v11->field_15)\n
        {\n
            cgc_printf(v10 - 8383);\n
            if (cgc_can_split())\n
            {\n
                v3 = cgc_split_len();\n
                if (v3 < cgc_max_split())\n
                    cgc_printf(v10 - 8380);\n
            }\n
        }\n
        cgc_printf(v10 - 8849);\n
        v20 = 1;\n
        return v20;\n
    }\n
    else\n
    {\n
        cgc_printf(v10 - 8395);\n
        if (v15->field_15)\n
        {\n
            cgc_printf(v10 - 8383);\n
            if (cgc_can_split())\n
            {\n
                v6 = cgc_split_len();\n
                if (v6 < cgc_max_split())\n
                    cgc_printf(v10 - 8380);\n
            }\n
        }\n
        cgc_printf(v10 - 8849);\n
        v20 = 1;\n
        return v20;\n
    }\n
}\n
", "4215835:sub_40541b": null, "4215840:cgc_print_winner": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_winner(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1 > 21)\n
    {\n
        v2 = cgc_printf(v0 - 8365);\n
        return v2;\n
    }\n
    if (v1 > a0)\n
    {\n
LABEL_405472:\n
        v2 = cgc_printf(v0 - 8332);\n
    }\n
    else\n
    {\n
        if (!(a0 <= 21))\n
            goto LABEL_405472;\n
        if (v1 != a0)\n
            v2 = cgc_printf(v0 - 8310);\n
        else\n
            v2 = cgc_printf(v0 - 8321);\n
    }\n
    return v2;\n
}\n
", "4216011:sub_4054cb": null, "4216016:cgc_init_player": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* g_409638;\n
extern void* g_40963c;\n
extern unsigned int g_player;\n
\n
int cgc_init_player()\n
{\n
    g_player = 100000;\n
    g_409638 = 0;\n
    g_40963c = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4216063:sub_4054ff": null, "4216064:cgc_get_card": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_card(struct struct_0 **v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2[0] = cgc_malloc(8);\n
    v1 = *(v4);\n
    v2[0] = a0;\n
    if (!*(v4))\n
    {\n
        *(v4) = &v2[0];\n
    }\n
    else\n
    {\n
        for (v2[1] = 0; v1->field_4; v1 = v1->field_4);\n
        *((v1 + 4)) = v2;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4216240:cgc_get_card_in_order": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_card_in_order(struct struct_0 **v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = cgc_malloc(8);\n
    v2 = *(v5);\n
    v3->field_0 = a0;\n
    if (!*(v5))\n
    {\n
        *(v5) = &v3->field_0;\n
    }\n
    else\n
    {\n
        for (v3->field_4 = 0; v2; v2 = v2->field_4)\n
        {\n
            if (v3->field_0->field_0 >= v2->field_0->field_0)\n
            {\n
                v1 = v2;\n
            }\n
            else\n
            {\n
                v3->field_4 = v2;\n
                if (v2 == *(v5))\n
                    *(v5) = &v3->field_0;\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        v1->field_4 = &v3->field_0;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4216482:sub_4056a2": null, "4216496:cgc_replace_card": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_replace_card(struct struct_0 **v2, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (!*(v2))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v0 = *(v2);\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*(v0) != a1)\n
        {\n
            v0 = *((v0 + 4));\n
        }\n
        else\n
        {\n
            *(v0) = a0;\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4216616:sub_405728": null, "4216624:cgc_remove_card": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_card(struct struct_0 **v4, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v4))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 = *(v4);\n
    v1 = *(v4);\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        if (*(*(v2)) == a0[0] && *((*(v2) + 4)) == a0[1])\n
            break;\n
        v1 = v2;\n
        v2 = *((v2 + 4));\n
    }\n
    if (*(v4) == v2)\n
        *(v4) = *((v2 + 4));\n
    else\n
        *((v1 + 4)) = *((v2 + 4));\n
    cgc_free(v2);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4216844:sub_40580c": null, "4216848:cgc_discard_hand": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_discard_hand(struct struct_0 **v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc]\n
    struct struct_0 **v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    if (!*(v4))\n
        return v3;\n
    v1 = *(v3);\n
    while (v1->field_4)\n
    {\n
        v2 = v1;\n
        v1 = v1->field_4;\n
        cgc_free(v2);\n
    }\n
    cgc_free(v1);\n
    v4 = v3;\n
    *(v4) = 0;\n
    return v3;\n
}\n
", "4216974:sub_40588e": null, "4216976:cgc_init_squarerabbit": "typedef struct struct_3 {\n
    char padding_0[328];\n
    struct struct_2 *field_148;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0[105];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char field_14;\n
    char field_15;\n
    char field_16;\n
    char field_17;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_squarerabbit(unsigned int *v2)\n
{\n
    struct_3 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_3 *v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0->field_148 = cgc_malloc(24);\n
    v4 = v0;\n
    v4->field_148->field_0 = cgc_malloc(420);\n
    v4->field_148->field_4 = 0;\n
    v4->field_148->field_8 = 0;\n
    v4->field_148->field_c = 0;\n
    v4->field_148->field_10 = 0;\n
    v4->field_148->field_14 = 0;\n
    v4->field_148->field_15 = 1;\n
    v4->field_148->field_16 = 0;\n
    v4->field_148->field_17 = 0;\n
    cgc_init_deck(v4->field_148->field_0, v2);\n
    v5 = v1;\n
    return cgc_shuffle_deck(v0->field_148->field_0);\n
}\n
", "4217187:sub_405963": null, "4217200:cgc_get_srabbit_game": "extern unsigned int g_srabbit;\n
\n
int cgc_get_srabbit_game()\n
{\n
    return g_srabbit;\n
}\n
", "4217223:sub_405987": null, "4217232:cgc_get_split_hand": "extern char split_hand;\n
\n
int cgc_get_split_hand()\n
{\n
    return &split_hand;\n
}\n
", "4217255:sub_4059a7": null, "4217264:cgc_max_split": "int cgc_max_split()\n
{\n
    return 2;\n
}\n
", "4217274:sub_4059ba": null, "4217280:cgc_split_len": "typedef struct struct_1 {\n
    char padding_0[328];\n
    struct struct_0 *field_148;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[23];\n
    char field_17;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_srabbit;\n
\n
int cgc_split_len()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_srabbit->field_17 > 2)\n
    {\n
        v0 = 2;\n
        return v0;\n
    }\n
    v0 = v1->field_148->field_17;\n
    return v0;\n
}\n
", "4217357:sub_405a0d": null, "4217360:cgc_all_hands_busted": "typedef struct struct_0 {\n
    char padding_0[22];\n
    char field_16;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_srabbit;\n
\n
int cgc_all_hands_busted()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = g_srabbit;\n
    if (!v2->field_16)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_split_len())\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
        v2 = v1 + 332 + v3 * 24;\n
        if (!v2->field_16)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4217534:sub_405abe": null, "4217536:cgc_is_player_finished": "typedef struct struct_0 {\n
    char padding_0[20];\n
    char field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_srabbit;\n
\n
int cgc_is_player_finished()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = g_srabbit;\n
    if (!v2->field_14)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_split_len())\n
        {\n
            v4 = 1;\n
            return v4;\n
        }\n
        v2 = v1 + 332 + v3 * 24;\n
        if (!v2->field_14)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4217710:sub_405b6e": null, "4217712:cgc_calc_score": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int cgc_calc_score(struct_0 *v3, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    for (v1 = 0; v3; v3 = *((v3 + 4)))\n
    {\n
        v0 = v3->field_0->field_0;\n
        if (v0 == 1)\n
        {\n
            v1 += 1;\n
            v2 += 1;\n
        }\n
        else if (v0 - 11 < 3)\n
        {\n
            v2 += 10;\n
        }\n
        else\n
        {\n
            v2 = v3->field_0->field_0 + v2;\n
        }\n
    }\n
    if (v2 <= 11 && v1)\n
    {\n
        v2 += 10;\n
        if (!a0)\n
            return v2;\n
        *(a0) = 1;\n
    }\n
    if (a0)\n
        *(a0) = 0;\n
    return v2;\n
}\n
", "4217941:sub_405c55": null, "4217952:cgc_srabbit_payout": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    void* field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char padding_14[2];\n
    char field_16;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *g_srabbit;\n
\n
int cgc_srabbit_payout()\n
{\n
    void* v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
\n
    v9 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = &g_srabbit->padding_0;\n
    v0 = v6->field_4;\n
    v5 = cgc_calc_score(v0, NULL);\n
    v3 = 0;\n
    if (cgc_check_dealer_squarerabbit(v0) && cgc_calc_score(v6->field_8, NULL) != 21)\n
    {\n
        v3 = v6->field_c * -1 + v6->field_10 * 2;\n
        v8 = v3;\n
        return v8;\n
    }\n
    v3 -= v6->field_10;\n
    v4 = cgc_calc_score(v6->field_8, NULL);\n
    if (cgc_check_player_squarerabbit(v6) && v5 != 21)\n
    {\n
        v12 = v6->field_c * 3;\n
        v3 = (v12 >> 31 CONCAT v12) /m 2 + v3;\n
        goto LABEL_405de5;\n
    }\n
    if (v6->field_16)\n
    {\n
        v3 -= v6->field_c;\n
    }\n
    else if (v5 > 21)\n
    {\n
        v3 = v6->field_c + v3;\n
    }\n
    else if (v5 > v4)\n
    {\n
        v3 -= v6->field_c;\n
    }\n
    else if (v5 < v4)\n
    {\n
        v3 = v6->field_c + v3;\n
    }\n
LABEL_405de5:\n
    v7 = 0;\n
    while (true)\n
    {\n
        v1 = v7;\n
        if (v1 >= cgc_split_len())\n
            break;\n
        v6 = v2 + 332 + v7 * 24;\n
        v4 = cgc_calc_score(v6->field_8, NULL);\n
        if (cgc_check_player_squarerabbit(v6) && v5 != 21)\n
        {\n
            v13 = v6->field_c * 3;\n
            v3 = (v13 >> 31 CONCAT v13) /m 2 + v3;\n
            goto LABEL_405ef5;\n
        }\n
        if (v6->field_16)\n
        {\n
            v3 -= v6->field_c;\n
        }\n
        else if (v5 > 21)\n
        {\n
            v3 = v6->field_c + v3;\n
        }\n
        else if (v5 > v4)\n
        {\n
            v3 -= v6->field_c;\n
        }\n
        else if (v5 < v4)\n
        {\n
            v3 = v6->field_c + v3;\n
        }\n
LABEL_405ef5:\n
        v7 += 1;\n
    }\n
    v8 = v3;\n
    return v8;\n
}\n
", "4218652:sub_405f1c": null, "4218656:cgc_check_player_squarerabbit": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    char padding_c[8];\n
    char field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_check_player_squarerabbit(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = v3->field_8;\n
    v0 = cgc_calc_score(v1, NULL);\n
    if (v0 == 21 && !v1->field_4->field_4)\n
    {\n
        v3->field_14 = 1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4218772:sub_405f94": null, "4218784:cgc_deal_srabbit": "typedef struct struct_2 {\n
    char padding_0[328];\n
    struct struct_3 *field_148;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    void* field_4;\n
    void* field_8;\n
    char padding_c[8];\n
    char field_14;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[328];\n
    struct struct_1 *field_148;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    void* field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern struct_5 *g_srabbit;\n
\n
int cgc_deal_srabbit(unsigned int v7)\n
{\n
    struct struct_0 **v0;  // [bp-0x20]\n
    struct struct_0 **v1;  // [bp-0x1c]\n
    struct_2 *v2;  // [bp-0x18]\n
    struct_4 *v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_0 *v9;  // ebx\n
    struct_0 *v10;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = &g_srabbit->padding_0;\n
    cgc_new_srabbit_game();\n
    for (v4 = 0; v4 < 2; v4 += 1)\n
    {\n
        v9 = v2;\n
        v1 = &v9->field_148[2].field_0;\n
        if (cgc_get_card(v1, cgc_draw_card(v9->field_148->field_0)))\n
        {\n
LABEL_406052:\n
            v5 = -1;\n
            return v5;\n
        }\n
        v10 = v2;\n
        v0 = &v10->field_148[1].field_0;\n
        if (!(!cgc_get_card(v0, cgc_draw_card(v10->field_148->field_0))))\n
            goto LABEL_406052;\n
    }\n
    if (cgc_calc_score(v3->field_8, NULL) == 21 && cgc_calc_score(v3->field_4, NULL) == 21)\n
    {\n
        v3->field_14 = 1;\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (cgc_dealer_has_duck())\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    else if (cgc_calc_score(v3->field_8, NULL) == 21)\n
    {\n
        v3->field_14 = 1;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (cgc_calc_score(v3->field_8, NULL) == 21)\n
    {\n
        v3->field_14 = 1;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 3;\n
        return v5;\n
    }\n
}\n
", "4219239:sub_406167": null, "4219248:cgc_new_srabbit_game": "typedef struct struct_2 {\n
    char padding_0[328];\n
    struct struct_3 *field_148;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[328];\n
    struct struct_0 *field_148;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_new_srabbit_game(unsigned int v2)\n
{\n
    struct_2 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_1 *v4;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_clear_split_squarerabbit();\n
    cgc_clear_squarerabbit();\n
    v4 = v0;\n
    v4->field_148->field_c = v2;\n
    v6 = v1;\n
    return cgc_shuffle_deck_if_needed(v4->field_148->field_0);\n
}\n
", "4219332:sub_4061c4": null, "4219344:cgc_pay_insurance": "typedef struct struct_2 {\n
    char padding_0[328];\n
    struct struct_0 *field_148;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *g_srabbit;\n
\n
int cgc_pay_insurance()\n
{\n
    struct_2 *v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8]\n
    unsigned int v3;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = g_srabbit;\n
    v3 = v1->field_c;\n
    v5 = v0->field_148;\n
    v5->field_10 = (v3 >> 31 CONCAT v3) /m 2;\n
    return v5;\n
}\n
", "4219407:sub_40620f": null, "4219408:cgc_check_dealer_squarerabbit": "typedef struct struct_3 {\n
    char padding_0[328];\n
    struct struct_2 *field_148;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    char field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern struct_4 *g_srabbit;\n
\n
int cgc_check_dealer_squarerabbit()\n
{\n
    struct_3 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = g_srabbit->field_4;\n
    if (v1->field_0->field_0 != 1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v1->field_4;\n
    if (v1->field_0->field_0 - 10 > 3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v0->field_148->field_14 = 1;\n
    v2 = 1;\n
    return v2;\n
}\n
", "4219540:sub_406294": null, "4219552:cgc_check_dealer_squarerabbit2": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_2 *g_srabbit;\n
\n
int cgc_check_dealer_squarerabbit2()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = g_srabbit->field_4;\n
    v0 = cgc_calc_score(v1, NULL);\n
    if (v0 == 21 && !v1->field_4->field_4)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4219661:sub_40630d": null, "4219664:cgc_hit": "typedef struct struct_1 {\n
    void* field_0;\n
    char padding_4[4];\n
    void* field_8;\n
    char padding_c[8];\n
    char field_14;\n
    char field_15;\n
    char field_16;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_srabbit;\n
\n
int cgc_hit()\n
{\n
    struct struct_0 **v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1d]\n
    unsigned int v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v9;  // ecx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = &g_srabbit->field_0;\n
    v5 = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*((v6 + 20)))\n
        {\n
            v1 = v4;\n
            v2 = v1 < cgc_split_len();\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        v9 = v4;\n
        v4 = v9 + 1;\n
        v6 = v3 + 332 + v9 * 24;\n
    }\n
    v0 = v6 + 8;\n
    if (cgc_get_card(v0, cgc_draw_card(*(v6))))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = cgc_calc_score(*((v6 + 8)), NULL);\n
    if (v5 > 21)\n
    {\n
        *((v6 + 20)) = 1;\n
        *((v6 + 22)) = 1;\n
    }\n
    *((v6 + 21)) = 0;\n
    v7 = v5;\n
    return v7;\n
}\n
", "4219946:sub_40642a": null, "4219952:cgc_stand": "typedef struct struct_0 {\n
    char padding_0[8];\n
    void* field_8;\n
    char padding_c[8];\n
    char field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *g_srabbit;\n
\n
int cgc_stand()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // ecx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = &g_srabbit->padding_0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*((v3 + 20)))\n
        {\n
            v0 = v4;\n
            v1 = v0 < cgc_split_len();\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v6 = v4;\n
        v4 = v6 + 1;\n
        v3 = v2 + 332 + v6 * 24;\n
    }\n
    *((v3 + 20)) = 1;\n
    return cgc_calc_score(*((v3 + 8)), NULL);\n
}\n
", "4220127:sub_4064df": null, "4220128:cgc_double_down": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char field_14;\n
    char field_15;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_srabbit;\n
\n
int cgc_double_down()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // ecx\n
    struct_0 *v9;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = g_srabbit;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4->field_14)\n
        {\n
            v0 = v5;\n
            v1 = v0 < cgc_split_len();\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v8 = v5;\n
        v5 = v8 + 1;\n
        v4 = v2 + 332 + v8 * 24;\n
    }\n
    if (!*((v4 + 21)))\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v3 = cgc_hit();\n
    *((v4 + 20)) = 1;\n
    v9 = v4;\n
    v9->field_c = v9->field_c * 2;\n
    v6 = v3;\n
    return v6;\n
}\n
", "4220340:sub_4065b4": null, "4220352:cgc_can_split": "typedef struct struct_3 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
int cgc_can_split(struct_3 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1->field_8->field_0->field_0 == v1->field_8->field_4->field_0->field_0)\n
    {\n
LABEL_406615:\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (v1->field_8->field_0->field_0 >= 10 && !(v1->field_8->field_4->field_0->field_0 < 10))\n
        goto LABEL_406615;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4220452:sub_406624": null, "4220464:cgc_split": "typedef struct struct_1 {\n
    char padding_0[328];\n
    struct struct_0 *field_148;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    void* field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char field_14;\n
    char field_15;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[23];\n
    char field_17;\n
} struct_0;\n
\n
typedef struct struct_8 {\n
    void* field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char field_14;\n
    char field_15;\n
    char field_16;\n
} struct_8;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_3 *field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0[2];\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern struct_7 *g_srabbit;\n
\n
int cgc_split()\n
{\n
    int tmp_18;  // tmp #18\n
    struct struct_0 **v0;  // [bp-0x2c]\n
    struct struct_0 **v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    char v3;  // [bp-0x1d]\n
    struct_1 *v4;  // [bp-0x1c]\n
    struct_8 *v5;  // [bp-0x18]\n
    struct_4 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v10;  // ecx\n
    struct_0 *v11;  // ecx\n
    struct_1 *v13;  // ebx\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = &g_srabbit->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (*((v6 + 20)))\n
        {\n
            v2 = v7;\n
            v3 = v2 < cgc_split_len();\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 = v7;\n
        v7 = v10 + 1;\n
        v6 = &v4->padding_0[1 + 24 * v10];\n
    }\n
    if (*((v6 + 21)) && cgc_can_split(v6))\n
    {\n
        v11 = v4->field_148;\n
        tmp_18 = v11->field_17;\n
        v11->field_17 = v11->field_17 + 1;\n
        if (tmp_18 >= 2)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v13 = v4;\n
        v7 = v13->field_148->field_17 - 1;\n
        v5 = &v13[1].padding_0[24 * v7];\n
        v5->field_0 = *(v6);\n
        v5->field_4 = *((v6 + 4));\n
        v5->field_8 = 0;\n
        v5->field_c = *((v6 + 12));\n
        v5->field_10 = 0;\n
        v5->field_14 = 0;\n
        v5->field_15 = 1;\n
        v5->field_16 = 0;\n
        if (!cgc_get_card(&v5->field_8, *(*((*((v6 + 8)) + 4)))) && !cgc_remove_card(v6 + 8, *(*((*((v6 + 8)) + 4)))))\n
        {\n
            v1 = v6 + 8;\n
            if (!cgc_get_card(v1, cgc_draw_card(*(v6))))\n
            {\n
                v0 = &v5->field_8;\n
                if (!cgc_get_card(v0, cgc_draw_card(v5->field_0)))\n
                {\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            }\n
        }\n
        v8 = -1;\n
        return v8;\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4221031:sub_406867": null, "4221040:cgc_dealer_hit": "typedef struct struct_2 {\n
    char padding_0[328];\n
    struct struct_1 *field_148;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[328];\n
    struct struct_3 *field_148;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    void* field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    void* field_0;\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_5 _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_srabbit;\n
\n
int cgc_dealer_hit()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    struct_4 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    if (!g_srabbit->field_14)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = cgc_calc_score(v1->field_148->field_4, &v2);\n
    if (cgc_all_hands_busted())\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    if (cgc_check_player_squarerabbit(v1->field_148) && !cgc_split_len())\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    for (; v3 <= 17; v3 = cgc_calc_score(v1->field_148->field_4, &v2))\n
    {\n
        if (v3 == 17 && !v2)\n
            break;\n
        v6 = v1;\n
        v0 = &v6->field_148->field_4;\n
        if (cgc_get_card(v0, cgc_draw_card(v6->field_148->field_0)))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4221376:cgc_clear_squarerabbit": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    char field_14;\n
    char field_15;\n
    char field_16;\n
    char field_17;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_clear_squarerabbit(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_discard_hand(&v2->padding_0[4]);\n
    cgc_discard_hand(&v2->padding_0[8]);\n
    v2->field_c = 0;\n
    v2->field_10 = 0;\n
    v2->field_14 = 0;\n
    v2->field_15 = 1;\n
    v2->field_16 = 0;\n
    v2->field_17 = 0;\n
    v4 = v1;\n
    return v2;\n
}\n
", "4221486:sub_406a2e": null, "4221488:cgc_clear_split_squarerabbit": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_clear_split_squarerabbit()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_split_len())\n
            break;\n
        v2 = v1 + 332 + v3 * 24;\n
        v2->field_4 = 0;\n
        cgc_clear_squarerabbit(v2);\n
        v3 += 1;\n
    }\n
    return v0;\n
}\n
", "4221603:sub_406aa3": null, "4221616:cgc_dealer_has_duck": "extern struct_1 *g_srabbit;\n
\n
int cgc_dealer_has_duck()\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &g_srabbit->field_4->field_0;\n
    if (*(v0)->field_0 == 1)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4221688:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:cgc_deallocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}