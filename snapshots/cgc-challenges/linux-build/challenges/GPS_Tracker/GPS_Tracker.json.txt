{"4202496:_init": "extern struct_0 *g_408134;\n
\n
int _init()\n
{\n
    if (g_408134)\n
    {\n
        g_408134();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_atan2": "// attributes: PLT stub\n
int cgc_atan2()\n
{\n
    ::libc.so.0::cgc_atan2();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc_sqrt": "// attributes: PLT stub\n
int cgc_sqrt()\n
{\n
    ::libc.so.0::cgc_sqrt();\n
    return;\n
}\n
", "4202608:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4202656:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202672:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202688:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4202704:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202720:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202736:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202752:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202768:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202784:cgc_cos": "// attributes: PLT stub\n
int cgc_cos()\n
{\n
    ::libc.so.0::cgc_cos();\n
    return;\n
}\n
", "4202800:sub_402130": "int sub_402130()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4202806:sub_402136": null, "4202816:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202859:sub_40216b": null, "4202860:sub_40216c": "int sub_40216c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202864:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202868:sub_402174": null, "4202880:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24503;\n
    v6 = v5 + 20;\n
    v7 = v5 + 20;\n
    if (v7 == v6)\n
        return v5 + 20;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4202931:sub_4021b3": "int sub_4021b3()\n
{\n
}\n
", "4202937:sub_4021b9": "int sub_4021b9()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202944:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 24439;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 20;\n
    v9 = (v6 + 20 - (v6 + 20) >> 31) + (20 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4203015:sub_402207": "int sub_402207()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4203024:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408128;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408128)\n
    {\n
        v0 = __dso_handle;\n
        sub_402130();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203099:sub_40225b": "int sub_40225b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203104:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203113:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203117:sub_40226d": null, "4203120:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4203212:sub_4022cc": null, "4203216:cgc_malloc": "typedef struct struct_1 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_1 *v1;  // [bp-0x2c]\n
    struct struct_0 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_0 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_54->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_54 == v9)\n
        {\n
            v1->field_54 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_54 == v9)\n
    {\n
        v1->field_54 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4203899:sub_40257b": null, "4203904:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_54;\n
    v7->field_54 = v3;\n
    return v3;\n
}\n
", "4204104:sub_402648": null, "4204112:cgc_free": "typedef struct struct_1 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_0 *v3[2];  // [bp-0x1c]\n
    struct struct_0 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_1 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_1 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_0 **, unsigned int, struct struct_0 *[2], struct_1 *\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_54 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_54 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_54;\n
    v2[1] = 0;\n
    if (v9->field_54)\n
    {\n
        v12 = v1;\n
        *((&v12->field_54->field_0 + (v12->field_54->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_54 = v7;\n
    return v1;\n
}\n
", "4204576:cgc_floor": "typedef struct struct_1 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_0 *v3[2];  // [bp-0x1c]\n
    struct struct_0 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_1 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_1 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_0 **, unsigned int, struct struct_0 *[2], struct_1 *\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_54 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_54 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_54;\n
    v2[1] = 0;\n
    if (v9->field_54)\n
    {\n
        v12 = v1;\n
        *((&v12->field_54->field_0 + (v12->field_54->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_54 = v7;\n
    return v1;\n
}\n
", "4204740:sub_4028c4": null, "4204752:cgc_round_away_from_zero": null, "4204906:sub_40296a": null, "4204912:cgc_round": null, "4205056:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4205148:sub_402a5c": null, "4205152:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205361:sub_402b31": null, "4205376:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        a0->field_0 = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205569:sub_402c01": null, "4205584:cgc_float_to_str": null, "4206447:sub_402f6f": null, "4206448:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v26, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    void* v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp-0xc]\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!v26)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(v26))\n
    {\n
        if (*(v26) != 64)\n
        {\n
            cgc_putc(*(v26));\n
            v26 += 1;\n
            v24 += 1;\n
LABEL_403844:\n
        }\n
        else\n
        {\n
            v26 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(v26) == 64)\n
            {\n
                cgc_putc(64);\n
                v26 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 45)\n
            {\n
                v19 = 1;\n
                v26 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(v26) == 48)\n
                {\n
                    v20 = 1;\n
                    v26 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
                }\n
            }\n
            if (*(v26) == 46)\n
            {\n
                v26 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
            }\n
            if (*(v26) == 99)\n
            {\n
                v27 = a0;\n
                a0 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                cgc_putc(v16);\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 100)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v15 = &*(v28)->field_0;\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; *(v14); v14 += 1)\n
                {\n
                    cgc_putc(*(v14));\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 120)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v13 = &*(v29)->field_0;\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    cgc_putc(v12->field_0);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    cgc_putc(v10->field_0);\n
                    v24 += 1;\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (!(*(v26) == 115))\n
                goto LABEL_403844;\n
            v35 = a0;\n
            a0 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_4036c3;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_4036c3:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (v20)\n
                        cgc_putc(48);\n
                    else\n
                        cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                cgc_putc(*(v9));\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            v26 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4208731:sub_40385b": null, "4208736:cgc_vsprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v26, char *a0, struct struct_1 **a1)\n
{\n
    struct_0 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_0 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_0 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x78]\n
    struct_0 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    char *v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v25;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_1 **v27;  // eax\n
    struct struct_1 **v28;  // eax\n
    struct struct_1 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_1 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!a0)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            v24[v26] = *(a0);\n
            a0 += 1;\n
            v24 += 1;\n
LABEL_40409b:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(a0) == 64)\n
            {\n
                v24[v26] = 64;\n
                a0 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v19 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v20 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            v24[v26] = 48;\n
                        else\n
                            v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                v24[v26] = v16;\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v15 = &*(v28)->field_0;\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            v24[v26] = 32;\n
                        else\n
                            v24[v26] = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; v14->field_0; v14 += 1)\n
                {\n
                    v24[v26] = v14->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v13 = *(v29);\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            v24[v26] = 32;\n
                        else\n
                            v24[v26] = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    v24[v26] = v12->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 8;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            v24[v26] = 48;\n
                        else\n
                            v24[v26] = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    v24[v26] = v10->field_0;\n
                    v24 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_40409b;\n
            v35 = a1;\n
            a1 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_403f3e;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_403f3e:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (!v20)\n
                        v24[v26] = 32;\n
                    else\n
                        v24[v26] = 48;\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                v24[v26] = *(v9);\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    v24[v26] = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4210866:sub_4040b2": null, "4210880:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4210944:cgc_sprintf": "int cgc_sprintf(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    v3[v0] = 0;\n
    return v0;\n
}\n
", "4211023:sub_40414f": null, "4211024:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4211118:sub_4041ae": null, "4211120:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211174:sub_4041e6": null, "4211184:cgc_isnan": null, "4211207:sub_404207": null, "4211216:cgc_isinf": null, "4211263:sub_40423f": null, "4211264:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = v1 + 32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4211322:sub_40427a": null, "4211328:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = v1 + -32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4211386:sub_4042ba": null, "4211392:cgc_strcmp": "int cgc_strcmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v2 + v0)) && !*((a0 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!*((a0 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) < *((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) <= *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4211630:sub_4043ae": null, "4211632:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4211723:sub_40440b": null, "4211728:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4211834:sub_40447a": null, "4211840:cgc_flush_input": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flush_input(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x4bc]\n
    unsigned int v1;  // [bp-0x4ac]\n
    char v2;  // [bp-0x4a4]\n
    void* v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    char v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    char v7;  // [bp-0x94]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        cgc_memset(&v7, 0);\n
        v10 = v9 >> 5;\n
        *(&(&v7)[4 * v10]) = 1 << (v9 & 31 & 31) | *(&(&v7)[4 * v10]);\n
        v3 = 0;\n
        v4 = 10;\n
        v0 = &v5;\n
        v6 = cgc_fdwait(v9 + 1, &v7, 0, &v3);\n
        if (v6)\n
        {\n
            v8 = v6;\n
            return v8;\n
        }\n
        if (!(*(&(&v7)[4 * (v9 >> 5)]) & 1 << (v9 & 31 & 31)))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_receive(v9, &v2, 0x400);\n
    }\n
}\n
", "4212172:sub_4045cc": null, "4212176:cgc_memset": "int cgc_memset(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *((v3 + v2)) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        *((v3 + v2)) = v1;\n
    }\n
    return v3;\n
}\n
", "4212345:sub_404679": null, "4212352:cgc_getline": "int cgc_getline(char *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v1 = cgc_receive_until(v2, 10);\n
    if (v1 != a0)\n
    {\n
        v2[v1] = 0;\n
        return v1;\n
    }\n
    v2[1 + a0] = 0;\n
    return v1;\n
}\n
", "4212455:sub_4046e7": null, "4212464:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v4 < a1; v4 += 1)\n
    {\n
        *((v5 + v4)) = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (v2 == a0)\n
                break;\n
            *((v5 + v4)) = v2;\n
        }\n
    }\n
    if (v4 == a1)\n
        cgc_flush_input(0);\n
    return v4;\n
}\n
", "4212685:sub_4047cd": null, "4212688:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *((v1 + v0)) = *((a0 + v0));\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v1;\n
}\n
", "4212832:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4213236:sub_4049f4": null, "4213248:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4213303:sub_404a37": null, "4213312:cgc_abs": "int cgc_abs(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < 0)\n
    {\n
        v0 = -(v1);\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4213356:sub_404a6c": null, "4213360:_Z13CommReadBytesPhj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommReadBytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = a0;\n
    for (v3 = 0; v4 > 0; v4 -= *(&v2))\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, v6 + v3, v4))\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
        v3 = *(&v2) + v3;\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4213563:sub_404b3b": null, "4213568:_Z13CommSendBytesPhj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CommSendBytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = a0;\n
    for (v3 = 0; v4 > 0; v4 -= *(&v2))\n
    {\n
        v0 = &v2;\n
        if (cgc_transmit(1, v6 + v3, v4))\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
        v3 = *(&v2) + v3;\n
    }\n
    v5 = v3;\n
    return v5;\n
}\n
", "4213769:sub_404c09": null, "4213776:_ZN14CGeofencePointC2Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CGeofencePoint::__base_ctor__(struct_0 *v2)\n
{\n
    void* v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = v2;\n
    v0 = 0;\n
    CGPSCoordinates::__ctor__(v1, 0, 0, 0, 0, 0);\n
    v1->field_8 = 0;\n
    return v1;\n
}\n
", "4213878:sub_404c76": null, "4213888:_ZN14CGeofencePointC2ER15CGPSCoordinatesj": "int CGeofencePoint::__base_ctor__(unsigned int v0[3], unsigned int a0[2], unsigned int a1)\n
{\n
    unsigned int v1[3];  // eax\n
    unsigned int v2[2];  // ecx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    v1[0] = v2[0];\n
    v1[1] = v2[1];\n
    v1[2] = a1;\n
    return v0;\n
}\n
", "4213924:sub_404ca4": null, "4213936:_ZN14CGeofencePointD2Ev": "int CGeofencePoint::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CGPSCoordinates::__dtor__(v1, *(&v0));\n
}\n
", "4213973:sub_404cd5": null, "4213984:_ZN15CGPSCoordinatesC2Ev": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char field_3;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
} struct_0;\n
\n
int CGPSCoordinates::__base_ctor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = 0;\n
    v1->field_2 = 0;\n
    v1->field_3 = 0;\n
    v1->field_4 = 0;\n
    v1->field_6 = 0;\n
    v1->field_7 = 0;\n
    return v0;\n
}\n
", "4214022:sub_404d06": null, "4214032:_ZN15CGPSCoordinatesC1Ethhthh": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char field_3;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
} struct_0;\n
\n
int CGPSCoordinates::__ctor__(struct_0 *v0, unsigned short a0, char a1, char a2, unsigned short a3, char a4, char a5)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = a0;\n
    v1->field_2 = a1;\n
    v1->field_3 = a2;\n
    v1->field_4 = a3;\n
    v1->field_6 = a4;\n
    v1->field_7 = a5;\n
    return v0;\n
}\n
", "4214102:sub_404d56": null, "4214112:_ZN15CGPSCoordinatesD1Ev": "int CGPSCoordinates::__dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4214120:sub_404d68": null, "4214128:_ZN15CGPSCoordinates17GetSerializedSizeEv": "int CGPSCoordinates::GetSerializedSize(unsigned int v0)\n
{\n
    return 6;\n
}\n
", "4214141:sub_404d7d": null, "4214144:_ZN15CGPSCoordinates9SerializeEPhj": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char field_3;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CGPSCoordinates::Serialize(struct_0 *v6, char a0[6], unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = a1;\n
    if (v0 < CGPSCoordinates::GetSerializedSize(v2))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v7 = v2;\n
    v4 = 0;\n
    v4 = v7->field_0 * 3600 + v7->field_2 * 60 + v7->field_3;\n
    v3 = 0;\n
    v3 = v7->field_4 * 3600 + v7->field_6 * 60 + v7->field_7;\n
    a0[0] = v4 >> 16;\n
    a0[1] = v4 >> 8;\n
    a0[2] = v4;\n
    a0[3] = v3 >> 16;\n
    a0[4] = v3 >> 8;\n
    a0[5] = v3;\n
    v5 = CGPSCoordinates::GetSerializedSize(v7);\n
    return v5;\n
}\n
", "4214456:sub_404eb8": null, "4214464:_ZN15CGPSCoordinates11DeserializeEPhj": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char field_3;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CGPSCoordinates::Deserialize(struct_0 *v6, char a0[6], unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
    struct_0 *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v0 = a1;\n
    if (v0 < CGPSCoordinates::GetSerializedSize(v2))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 0;\n
    v4 = a0[0] * 0x10000 | a0[1] * 0x100 | a0[2];\n
    v3 = a0[3] * 0x10000 | a0[4] * 0x100 | a0[5];\n
    v7 = v2;\n
    v7->field_0 = (0 CONCAT v4) /m 3600;\n
    v4 -= v7->field_0 * 3600;\n
    v9 = v2;\n
    v9->field_2 = (0 CONCAT v4) /m 60;\n
    v4 -= v9->field_2 * 60;\n
    v9->field_3 = v4;\n
    v10 = v2;\n
    v10->field_4 = (0 CONCAT v3) /m 3600;\n
    v3 -= v10->field_4 * 3600;\n
    v12 = v2;\n
    v12->field_6 = (0 CONCAT v3) /m 60;\n
    v3 -= v12->field_6 * 60;\n
    v12->field_7 = v3;\n
    v5 = CGPSCoordinates::GetSerializedSize(v12);\n
    return v5;\n
}\n
", "4214830:sub_40502e": null, "4214832:_ZN15CGPSCoordinates13GetLatRadiansEv": null, "4215049:sub_405109": null, "4215056:_ZN15CGPSCoordinates14GetLongRadiansEv": null, "4215279:sub_4051ef": null, "4215280:_ZN4CGPSC2Ev": "int CGPS::__base_ctor__(char *v0)\n
{\n
    *(v0) = 0;\n
    return CGPSCoordinates::__ctor__(v0 + 2, 0, 0, 0, 0, 0, 0);\n
}\n
", "4215375:sub_40524f": null, "4215376:_ZN4CGPSD2Ev": "int CGPS::__base_dtor__(unsigned int v0)\n
{\n
    return CGPSCoordinates::__dtor__(v0 + 2);\n
}\n
", "4215416:sub_405278": null, "4215424:_ZN4CGPS14SetCoordinatesER15CGPSCoordinates": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned int field_2;\n
    unsigned int field_6;\n
} struct_0;\n
\n
int CGPS::SetCoordinates(struct_0 *v0, unsigned int a0[2])\n
{\n
    struct_0 *v1;  // eax\n
    unsigned int v2[2];  // ecx\n
\n
    v1 = v0;\n
    v1->field_0 = 1;\n
    v2 = a0;\n
    *(&(&v1->padding_1)[1]) = v2[0];\n
    *((&v1->field_2 + 2)) = v2[1];\n
    return 1;\n
}\n
", "4215462:sub_4052a6": null, "4215472:_ZN4CGPS17GetDistanceMetersER15CGPSCoordinatesS1_": null, "4215906:sub_405462": null, "4215920:_ZNK15CGPSCoordinates18GetLatitudeDegreesEv": "int CGPSCoordinates::GetLatitudeDegrees const(unsigned short *v0)\n
{\n
    return *(v0);\n
}\n
", "4215934:sub_40547e": null, "4215936:_ZNK15CGPSCoordinates18GetLatitudeMinutesEv": "typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
} struct_0;\n
\n
int CGPSCoordinates::GetLatitudeMinutes const(struct_0 *v0)\n
{\n
    return v0->field_2;\n
}\n
", "4215951:sub_40548f": null, "4215952:_ZNK15CGPSCoordinates18GetLatitudeSecondsEv": "typedef struct struct_0 {\n
    char padding_0[3];\n
    char field_3;\n
} struct_0;\n
\n
int CGPSCoordinates::GetLatitudeSeconds const(struct_0 *v0)\n
{\n
    return v0->field_3;\n
}\n
", "4215967:sub_40549f": null, "4215968:_ZNK15CGPSCoordinates19GetLongitudeDegreesEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int CGPSCoordinates::GetLongitudeDegrees const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4215983:sub_4054af": null, "4215984:_ZNK15CGPSCoordinates19GetLongitudeMinutesEv": "typedef struct struct_0 {\n
    char padding_0[6];\n
    char field_6;\n
} struct_0;\n
\n
int CGPSCoordinates::GetLongitudeMinutes const(struct_0 *v0)\n
{\n
    return v0->field_6;\n
}\n
", "4215999:sub_4054bf": null, "4216000:_ZNK15CGPSCoordinates19GetLongitudeSecondsEv": "typedef struct struct_0 {\n
    char padding_0[7];\n
    char field_7;\n
} struct_0;\n
\n
int CGPSCoordinates::GetLongitudeSeconds const(struct_0 *v0)\n
{\n
    return v0->field_7;\n
}\n
", "4216015:sub_4054cf": null, "4216016:_ZN15CPackageTrackerC2EPv": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[243];\n
    char field_f4;\n
    char field_f5;\n
    char field_f6;\n
    char field_f7;\n
    char padding_f8[10];\n
    char field_102;\n
    char padding_103[5];\n
    unsigned int field_108;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::__base_ctor__(struct_0 *v6, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    v3->field_0 = 0;\n
    v7 = &v3->padding_1[3];\n
    v4 = v7 + 240;\n
    v5 = v7;\n
    do\n
    {\n
        v0 = v5;\n
        CGeofencePoint::__base_ctor__(v0);\n
        v1 = v0 + 12;\n
        v5 = v1;\n
    } while (v1 != v4);\n
    v8 = v3;\n
    v8->field_f4 = 0;\n
    v8->field_f5 = 0;\n
    v8->field_f6 = 0;\n
    v8->field_f7 = 0;\n
    CGPS::__base_ctor__(&v8->padding_f8);\n
    v9 = v3;\n
    v9->field_102 = 0;\n
    v9->field_108 = a0;\n
    return v3;\n
}\n
", "4216182:sub_405576": null, "4216192:_ZN15CPackageTrackerD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::__dtor__(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    CGPS::__base_dtor__(v2 + 248);\n
    v3 = v2 + 4;\n
    v4 = v3 + 240;\n
    do\n
    {\n
        v0 = v4 - 12;\n
        CGeofencePoint::__base_dtor__(v0);\n
        v4 = v0;\n
    } while (v4 != v3);\n
    v8 = v5;\n
    return v0;\n
}\n
", "4216296:sub_4055e8": null, "4216304:_ZN15CPackageTracker14SeedSimulationEP5CPRNG": "typedef struct struct_0 {\n
    char padding_0[258];\n
    char field_102;\n
    char padding_103[1];\n
    unsigned int field_104;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::SeedSimulation(struct_0 *v8, unsigned int a0)\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned short v1;  // [bp-0x28]\n
    char v2;  // [bp-0x26]\n
    char v3;  // [bp-0x25]\n
    struct_0 *v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v8;\n
    v4->field_104 = CPRNG::GetRandomU32();\n
    v4->field_102 = CPRNG::GetRandomRange(a0, 10);\n
    v0 = CPRNG::GetRandomRange(a0, 0);\n
    v3 = CPRNG::GetRandomRange(a0, 0);\n
    v1 = CPRNG::GetRandomRange(a0, 0);\n
    v2 = CPRNG::GetRandomRange(a0, 0);\n
    CGPSCoordinates::__ctor__(&v6, CPRNG::GetRandomRange(a0, 30), v0, v3, v1, v2, CPRNG::GetRandomRange(a0, 0));\n
    CGPS::SetCoordinates(&v4->padding_0[248], &v6);\n
    return CGPSCoordinates::__dtor__(&v6);\n
}\n
", "4216731:sub_40579b": null, "4216736:_ZN15CPackageTracker3RunEv": "typedef struct struct_0 {\n
    char padding_0[244];\n
    char field_f4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::Run()\n
{\n
}\n
", "4217623:sub_405b17": null, "4217632:_ZN15CPackageTracker14UpdateChecksumEPhjh": "int CPackageTracker::UpdateChecksum(unsigned int v1, unsigned int a0, unsigned int a1, char a2)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        a2 += *((a0 + v0));\n
    }\n
    return a2;\n
}\n
", "4217709:sub_405b6d": null, "4217712:_ZN15CPackageTracker12SendResponseEhhPht": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::SendResponse(unsigned int v7, char a0, char a1, unsigned int a2, unsigned short a3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    char v3;  // [bp-0xc]\n
    char v4;  // [bp-0xb]\n
    unsigned short v5;  // [bp-0xa]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v3 = a0;\n
    v4 = a1;\n
    v5 = a3;\n
    v2 = 0;\n
    if (CommSendBytes(&v3, 4) != 4)\n
    {\n
        v9 = CPackageTracker::SetError(v1);\n
        return v9;\n
    }\n
    v2 = CPackageTracker::UpdateChecksum(v1, &v3, 4, v2);\n
    if (v5 > 0)\n
    {\n
        if (!a2)\n
        {\n
            v9 = CPackageTracker::SetError(v1);\n
            return v9;\n
        }\n
        if (CommSendBytes(a2, a3) != a3)\n
        {\n
            v9 = CPackageTracker::SetError(v1);\n
            return v9;\n
        }\n
        v2 = CPackageTracker::UpdateChecksum(v1, a2, a3, v2);\n
    }\n
    v9 = CommSendBytes(&v2, 1);\n
    if (v9 != 1)\n
    {\n
        v9 = CPackageTracker::SetError(v1);\n
        return v9;\n
    }\n
    return v9;\n
}\n
", "4218085:sub_405ce5": null, "4218096:_ZN15CPackageTracker6DoInfoEPhj": "typedef struct struct_0 {\n
    char padding_0[245];\n
    char field_f5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::DoInfo(struct_0 *v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    char v3;  // [bp-0x13]\n
    unsigned int v4;  // [bp-0x12]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    v3 = CPackageTracker::GetBatteryLevel const();\n
    v4 = CPackageTracker::GetDeviceID const();\n
    if (!(v1->field_f5 & 1))\n
    {\n
        v2 = 1;\n
        return CPackageTracker::SendResponse(v1, 0, 0, &v2, 6);\n
    }\n
    if ((CGPS::IsLocked const() & 1))\n
        v2 = 0;\n
    else\n
        v2 = 2;\n
    return CPackageTracker::SendResponse(v1, 0, 0, &v2, 6);\n
}\n
", "4218288:_ZN15CPackageTracker10DoShutdownEPhj": "int CPackageTracker::DoShutdown(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return CPackageTracker::SendResponse(v0, 1, 0, 0, 0);\n
}\n
", "4218367:sub_405dff": null, "4218368:_ZN15CPackageTracker7DoDebugEPhj": "typedef struct struct_0 {\n
    char padding_0[258];\n
    char field_102;\n
    char padding_103[1];\n
    unsigned int field_104;\n
    struct struct_1 *field_108;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::DoDebug(struct_0 *v11, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    struct_0 *v2;  // [bp-0x38]\n
    char v3;  // [bp-0x34]\n
    char *v4;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    char v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x18]\n
    char v9;  // [bp-0x14]\n
    char v10;  // [bp-0x13]\n
    unsigned int v12;  // eax\n
    unsigned int v13[2];  // ecx\n
    unsigned int v16;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v11;\n
    if (a1 < 10)\n
    {\n
        v12 = CPackageTracker::SetError(v2);\n
        return v12;\n
    }\n
    v13 = v2->field_108;\n
    v16 = v13[0] ^ 825457279;\n
    v6 = v13[1] ^ 3736352515;\n
    v5 = v16;\n
    v4 = 0;\n
    cgc_memcpy(&v7, a0 + v4, 10);\n
    v4 += 10;\n
    if (v10 + 10 != a1)\n
    {\n
        v12 = CPackageTracker::SendResponse(v2, 2, 1, 0, 0);\n
        return v12;\n
    }\n
    else if (!(!(*(&v7) ^ v5)) || !(!(*(&v8) ^ v6)))\n
    {\n
        v12 = CPackageTracker::SendResponse(v2, 2, 1, 0, 0);\n
        return v12;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        if (!v0)\n
        {\n
            if (v10 == 1)\n
            {\n
                v2->field_102 = a0[v4];\n
            }\n
            else\n
            {\n
                v12 = CPackageTracker::SendResponse(v2, 2, 1, 0, 0);\n
                return v12;\n
            }\n
        }\n
        else\n
        {\n
            if (v0 != 1)\n
            {\n
                if (v0 != 2)\n
                {\n
                    v12 = CPackageTracker::SendResponse(v2, 2, 1, 0, 0);\n
                    return v12;\n
                }\n
                if (v10 != 4)\n
                {\n
                    v12 = CPackageTracker::SendResponse(v2, 2, 1, 0, 0);\n
                    return v12;\n
                }\n
                v2->field_104 = *(&a0[v4]);\n
            }\n
            else if (v10 == 6)\n
            {\n
                CGPSCoordinates::__base_ctor__(&v3);\n
                CGPSCoordinates::Deserialize(&v3, &a0[v4], 6);\n
                CGPS::SetCoordinates(&v2->padding_0[248], &v3);\n
                CGPSCoordinates::__dtor__(&v3);\n
            }\n
            else\n
            {\n
                v12 = CPackageTracker::SendResponse(v2, 2, 1, 0, 0);\n
                return v12;\n
            }\n
        }\n
        v12 = CPackageTracker::SendResponse(v2, 2, 0, 0, 0);\n
        return v12;\n
    }\n
}\n
", "4219171:sub_406123": null, "4219184:_ZN15CPackageTracker16DoUpdateGeofenceEPhj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::DoUpdateGeofence(char v21[246], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x60]\n
    char v3[246];  // [bp-0x5c]\n
    unsigned int v4;  // [bp-0x58]\n
    unsigned int v5;  // [bp-0x54]\n
    char v6;  // [bp-0x4d]\n
    char v7;  // [bp-0x4c]\n
    char v8;  // [bp-0x44]\n
    char v9[6];  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    char v12;  // [bp-0x2c]\n
    char v13[6];  // [bp-0x28]\n
    char v14;  // [bp-0x21]\n
    void* v15;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v16;  // [bp-0x1c]\n
    char v17;  // [bp-0x1b]\n
    char v18;  // [bp-0x14]\n
    char v19[6];  // [bp-0x13]\n
    void* v20;  // [bp-0xd], Other Possible Types: unsigned int\n
    unsigned int v22;  // eax\n
    char v23[246];  // eax\n
    char v24[246];  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v3[0]) = v21;\n
    if (a1 < 2)\n
    {\n
        v22 = CPackageTracker::SetError(v3);\n
        return v22;\n
    }\n
    v15 = 0;\n
    cgc_memcpy(&v16, a0 + v15, 2);\n
    v15 += 2;\n
    v1 = v16;\n
    if (!v1)\n
    {\n
        if (v17 > 20)\n
        {\n
            v22 = CPackageTracker::SendResponse(v3, 3, 3, 0, 0);\n
            return v22;\n
        }\n
        for (v14 = 0; v14 < v17; v14 += 1)\n
        {\n
            if (a1 - v15 >= 10)\n
            {\n
                cgc_memcpy(&v12, a0 + v15, 10);\n
                v15 += 10;\n
                CGeofencePoint::SetDistance(&v3[4 + 12 * v14]);\n
                CGPSCoordinates::Deserialize(CGeofencePoint::GetCoords(&v3[4 + 12 * v14]), v13, 6);\n
            }\n
            else\n
            {\n
                v22 = CPackageTracker::SetError(v3);\n
                return v22;\n
            }\n
        }\n
        v3[0] = v17;\n
    }\n
    else\n
    {\n
        if (v1 != 1)\n
        {\n
            if (v1 != 2)\n
            {\n
                v22 = CPackageTracker::SendResponse(v3, 3, 1, 0, 0);\n
                return v22;\n
            }\n
            v23 = v3;\n
            v23[0] = 0;\n
            v22 = CPackageTracker::SendResponse(v23, 3, 0, 0, 0);\n
            return v22;\n
        }\n
        if (v17 > 20)\n
        {\n
            v22 = CPackageTracker::SendResponse(v3, 3, 3, 0, 0);\n
            return v22;\n
        }\n
        v24 = v3;\n
        v11 = v24[0] + v17;\n
        for (v10 = v24[0]; v10 < v11; v10 += 1)\n
        {\n
            if (a1 - v15 < 10)\n
            {\n
                v22 = CPackageTracker::SetError(v3);\n
                return v22;\n
            }\n
            cgc_memcpy(&v8, a0 + v15, 10);\n
            v15 += 10;\n
            CGeofencePoint::SetDistance(&v3[4 + 12 * v10]);\n
            CGPSCoordinates::Deserialize(CGeofencePoint::GetCoords(&v3[4 + 12 * v10]), v9, 6);\n
        }\n
        v3[0] = v11;\n
    }\n
    if (!(v3[245] & 1))\n
    {\n
        v22 = CPackageTracker::SendResponse(v3, 3, 5, 0, 0);\n
        return v22;\n
    }\n
    CGPSCoordinates::__base_ctor__(&v7);\n
    CGPS::GetLastCoordinates(&v3[1 + 2]);\n
    v6 = 0;\n
    while (true)\n
    {\n
        if (v6 >= v3[0])\n
        {\n
            v20 = 0;\n
            v18 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            v5 = CGPS::GetDistanceMeters(&v7, CGeofencePoint::GetCoords());\n
            v0 = v5;\n
            if (v0 > CGeofencePoint::GetDistance const(&v3[4 + 12 * v6]))\n
            {\n
                v18 = 1;\n
                v20 = v5;\n
                CGPSCoordinates::Serialize(CGeofencePoint::GetCoords(), v19, 6);\n
            }\n
            else\n
            {\n
                v6 += 1;\n
            }\n
        }\n
    }\n
    CPackageTracker::SendResponse(v3, 3, 0, &v18, 11);\n
    v4 = 1;\n
    v22 = CGPSCoordinates::__dtor__(&v7);\n
    return v22;\n
}\n
", "4220503:sub_406657": null, "4220512:_ZN15CPackageTracker10DoPositionEPhj": "typedef struct struct_0 {\n
    char padding_0[245];\n
    char field_f5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPackageTracker::DoPosition(struct_0 *v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x14]\n
    char v4[6];  // [bp-0x13]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    CGPSCoordinates::__base_ctor__(&v2);\n
    if (!(v1->field_f5 & 1))\n
    {\n
        v3 = 1;\n
    }\n
    else if (!(CGPS::GetLastCoordinates(&v1[1].padding_0[2]) & 1))\n
    {\n
        v3 = 2;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        CGPSCoordinates::Serialize(&v2, v4, 6);\n
    }\n
    CPackageTracker::SendResponse(v1, 4, 0, &v3, 7);\n
    return CGPSCoordinates::__dtor__(&v2);\n
}\n
", "4220737:sub_406741": null, "4220752:_ZN15CPackageTracker8DoGPSOffEPhj": "typedef struct struct_0 {\n
    char padding_0[245];\n
    char field_f5;\n
} struct_0;\n
\n
int CPackageTracker::DoGPSOff(struct_0 *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0->field_f5 = 0;\n
    return CPackageTracker::SendResponse(v0, 5, 0, 0, 0);\n
}\n
", "4220838:sub_4067a6": null, "4220848:_ZN15CPackageTracker7DoGPSOnEPhj": "typedef struct struct_0 {\n
    char padding_0[245];\n
    char field_f5;\n
} struct_0;\n
\n
int CPackageTracker::DoGPSOn(struct_0 *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0->field_f5 = 1;\n
    return CPackageTracker::SendResponse(v0, 6, 0, 0, 0);\n
}\n
", "4220934:sub_406806": null, "4220944:_ZN15CPackageTracker7DoSleepEPhj": "typedef struct struct_0 {\n
    char padding_0[244];\n
    char field_f4;\n
} struct_0;\n
\n
int CPackageTracker::DoSleep(struct_0 *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0->field_f4 = 1;\n
    return CPackageTracker::SendResponse(v0, 7, 0, 0, 0);\n
}\n
", "4221030:sub_406866": null, "4221040:_ZN15CPackageTracker8DoWakeupEPhj": "typedef struct struct_0 {\n
    char padding_0[244];\n
    char field_f4;\n
} struct_0;\n
\n
int CPackageTracker::DoWakeup(struct_0 *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0->field_f4 = 0;\n
    return CPackageTracker::SendResponse(v0, 8, 0, 0, 0);\n
}\n
", "4221126:sub_4068c6": null, "4221136:_ZN15CPackageTracker8HasErrorEv": "typedef struct struct_0 {\n
    char padding_0[246];\n
    char field_f6;\n
} struct_0;\n
\n
int CPackageTracker::HasError(struct_0 *v0)\n
{\n
    return v0->field_f6 & 1;\n
}\n
", "4221158:sub_4068e6": null, "4221168:_ZN15CPackageTracker8SetErrorEh": "int CPackageTracker::SetError(char v0[248], char a0)\n
{\n
    char v1[248];  // eax\n
\n
    v1 = v0;\n
    v1[246] = 1;\n
    v1[247] = a0;\n
    return v0;\n
}\n
", "4221198:sub_40690e": null, "4221200:_ZNK15CPackageTracker15GetBatteryLevelEv": "typedef struct struct_0 {\n
    char padding_0[258];\n
    char field_102;\n
} struct_0;\n
\n
int CPackageTracker::GetBatteryLevel const(struct_0 *v0)\n
{\n
    return v0->field_102;\n
}\n
", "4221218:sub_406922": null, "4221232:_ZNK15CPackageTracker11GetDeviceIDEv": "typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
} struct_0;\n
\n
int CPackageTracker::GetDeviceID const(struct_0 *v0)\n
{\n
    return v0->field_104;\n
}\n
", "4221249:sub_406941": null, "4221264:_ZNK4CGPS8IsLockedEv": "int CGPS::IsLocked const(char *v0)\n
{\n
    return *(v0) & 1;\n
}\n
", "4221282:sub_406962": null, "4221296:_ZN14CGeofencePoint11SetDistanceEj": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CGeofencePoint::SetDistance(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_8 = a0;\n
    return v0;\n
}\n
", "4221316:sub_406984": null, "4221328:_ZN14CGeofencePoint9GetCoordsEv": "int CGeofencePoint::GetCoords(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4221339:sub_40699b": null, "4221344:_ZN4CGPS18GetLastCoordinatesER15CGPSCoordinates": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned int field_2;\n
    unsigned int field_6;\n
} struct_0;\n
\n
int CGPS::GetLastCoordinates(struct_0 *v2, unsigned int a0[2])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    struct_0 *v3;  // ecx\n
    unsigned int v4[2];  // eax\n
\n
    v0 = v2;\n
    if (!(v0->field_0 & 1))\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = a0;\n
    v4[0] = *(&(&v3->padding_1)[1]);\n
    v4[1] = *((&v3->field_2 + 2));\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4221414:sub_4069e6": null, "4221424:_ZNK14CGeofencePoint11GetDistanceEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CGeofencePoint::GetDistance const(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4221438:sub_4069fe": null, "4221440:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x140]\n
    char v1;  // [bp-0x13c]\n
    char v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v6 = 0x4347c000;\n
    v3 = v6;\n
    CPRNG::__base_ctor__(&v2, v3 + 32, 4064);\n
    CPackageTracker::__base_ctor__(&v1, v3);\n
    CPackageTracker::SeedSimulation(&v1, &v2);\n
    CPackageTracker::Run(&v1);\n
    v4 = 0;\n
    CPackageTracker::__dtor__(&v1);\n
    CPRNG::__base_dtor__();\n
    v8 = v5;\n
    return v4;\n
}\n
", "4221653:sub_406ad5": null, "4221664:_ZN5CPRNGC2EPjj": "int CPRNG::__base_ctor__(unsigned int v0[6], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1[6];  // eax\n
\n
    v1 = v0;\n
    v1[5] = a0;\n
    v1[4] = a1 >> 2;\n
    v1[3] = 0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4221723:sub_406b1b": null, "4221728:_ZN5CPRNGD2Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPRNG::__base_dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    v2 = v4;\n
    if (!v4->field_8)\n
        return v3;\n
    v4 = v2->field_8;\n
    v0 = v4;\n
    if (!v4)\n
        return v4;\n
    v4 = operator delete(v0);\n
}\n
", "4221812:sub_406b74": null, "4221824:_ZN5CPRNG12GetRandomU32Ev": "int CPRNG::GetRandomU32(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CPRNG::GetRandomInternal(v1, *(&v0));\n
}\n
", "4221861:sub_406ba5": null, "4221872:_ZN5CPRNG17GetRandomInternalEv": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int CPRNG::GetRandomInternal(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // edx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v0 = v2;\n
    if (!v0->field_8)\n
        CPRNG::GenerateMatrix(v0, &_GLOBAL_OFFSET_TABLE_);\n
    v3 = v0;\n
    if (v3->field_0 >= v3->field_4)\n
        CPRNG::GenerateMatrix();\n
    v4 = v0;\n
    v5 = v4->field_8;\n
    v6 = v4->field_0;\n
    v4->field_0 = v6 + 1;\n
    v1 = v5[v6];\n
    return v1;\n
}\n
", "4221987:sub_406c23": null, "4222000:_ZN5CPRNG12GetRandomU16Ev": "int CPRNG::GetRandomU16(void* v0)\n
{\n
    return CPRNG::GetRandomInternal(v0);\n
}\n
", "4222045:sub_406c5d": null, "4222048:_ZN5CPRNG11GetRandomU8Ev": "int CPRNG::GetRandomU8(void* v0)\n
{\n
    return CPRNG::GetRandomInternal(v0);\n
}\n
", "4222093:sub_406c8d": null, "4222096:_ZN5CPRNG14GetRandomRangeEjj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPRNG::GetRandomRange(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    if (a0 > a1)\n
    {\n
        v4 = a1;\n
        a1 = a0;\n
        a0 = v4;\n
    }\n
    v3 = a1 - a0;\n
    if (!v3)\n
    {\n
        v5 = a0;\n
        return v5;\n
    }\n
    v0 = a0;\n
    v5 = v0 + ((0 CONCAT CPRNG::GetRandomInternal(v2)) /m (v3 + 1) >> 32);\n
    return v5;\n
}\n
", "4222240:_ZN5CPRNG14GenerateMatrixEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CPRNG::GenerateMatrix(struct_0 *v9)\n
{\n
    int tmp_4;  // tmp #4\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    struct_0 *v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int *v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    struct_0 *v13;  // ecx\n
    unsigned int *v14;  // eax\n
    unsigned int v15;  // edx\n
    struct_0 *v16;  // ecx\n
    struct_0 *v17;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v9;\n
    if (!v2->field_8)\n
    {\n
        v2->field_8 = operator new[](0x800);\n
        for (v8 = 0; v8 < 0x200; v8 += 1)\n
        {\n
            *((v2->field_8 + v8 * 4)) = v8;\n
        }\n
        v10 = v2;\n
        v10->field_4 = 0x200;\n
        v10->field_0 = 0;\n
    }\n
    v7 = v2->field_4 + 0x200;\n
    if (v7 > 0x1000)\n
        v7 = 0x1000;\n
    v11 = v7;\n
    tmp_4 = v11;\n
    v12 = v11 * 4;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t4, 0x4<32>, 0x0<32>))\n
        v12 = -1;\n
    v6 = operator new[](v12);\n
    v5 = 0;\n
    v4 = 0;\n
    for (v3 = 0; v3 < v7; v3 += 1)\n
    {\n
        v13 = v2;\n
        v14 = v13->field_14;\n
        v15 = v13->field_c;\n
        v13->field_c = v15 + 1;\n
        v6[v3] = v14[v15] & 2780934913;\n
        v6[v3] = v6[v3] ^ v4 + v3 + 1;\n
        if (v13->field_c >= v13->field_10)\n
            v2->field_c = 0;\n
        v16 = v2;\n
        v6[v3] = v6[v3] ^ *((v16->field_8 + v5 * 4));\n
        v4 = v6[v3];\n
        v5 += 1;\n
        if (v5 > v16->field_4)\n
            v5 = 0;\n
    }\n
    v0 = v2->field_8;\n
    if (v0)\n
        operator delete(v0);\n
    v17 = v2;\n
    v17->field_8 = v6;\n
    v17->field_4 = v7;\n
    v17->field_0 = 0;\n
    return v2;\n
}\n
", "4222712:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_atan2": null, "5242884:__libc_start_main": null, "5242888:cgc_sqrt": null, "5242892:cgc_fdwait": null, "5242896:cgc_receive": null, "5242900:_Znaj": null, "5242904:cgc_allocate": null, "5242908:cgc__terminate": null, "5242912:_ZdlPv": null, "5242916:cgc_rint": null, "5242920:cgc_log10": null, "5242924:cgc_sin": null, "5242928:cgc_transmit": null, "5242932:cgc_pow": null, "5242936:cgc_cos": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}