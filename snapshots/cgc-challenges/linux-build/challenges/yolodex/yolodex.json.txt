{"4198400:_init": "extern struct_0 *g_406118;\n
\n
int _init()\n
{\n
    if (g_406118)\n
    {\n
        g_406118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198480:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198544:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198560:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4198576:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4198592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198608:sub_4010d0": "int sub_4010d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198614:sub_4010d6": null, "4198624:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198667:sub_40110b": null, "4198668:sub_40110c": "int sub_40110c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198672:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198676:sub_401114": null, "4198688:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 20479;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198739:sub_401153": "int sub_401153()\n
{\n
}\n
", "4198745:sub_401159": "int sub_401159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198752:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 20415;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198823:sub_4011a7": "int sub_4011a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198832:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198907:sub_4011fb": "int sub_4011fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198912:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198921:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198925:sub_40120d": null, "4198928:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4199020:sub_40126c": null, "4199024:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[68];\n
    struct struct_1 *field_44;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_44->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_44 == v9)\n
        {\n
            v1->field_44 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_44 == v9)\n
    {\n
        v1->field_44 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4199707:sub_40151b": null, "4199712:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_44;\n
    v7->field_44 = v3;\n
    return v3;\n
}\n
", "4199912:sub_4015e8": null, "4199920:cgc_free": "typedef struct struct_0 {\n
    char padding_0[68];\n
    struct struct_1 *field_44;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 **, struct struct_1 *[2], struct_0 *, unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_44 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_44 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_44;\n
    v2[1] = 0;\n
    if (v9->field_44)\n
    {\n
        v12 = v1;\n
        *((&v12->field_44->field_0 + (v12->field_44->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_44 = v7;\n
    return v1;\n
}\n
", "4200384:cgc_floor": "typedef struct struct_0 {\n
    char padding_0[68];\n
    struct struct_1 *field_44;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 **, struct struct_1 *[2], struct_0 *, unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_44 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_44 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_44;\n
    v2[1] = 0;\n
    if (v9->field_44)\n
    {\n
        v12 = v1;\n
        *((&v12->field_44->field_0 + (v12->field_44->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_44 = v7;\n
    return v1;\n
}\n
", "4200548:sub_401864": null, "4200560:cgc_round_away_from_zero": null, "4200714:sub_40190a": null, "4200720:cgc_round": null, "4200864:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4200956:sub_4019fc": null, "4200960:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4201169:sub_401ad1": null, "4201184:cgc_float_to_str": null, "4202042:sub_401e3a": null, "4202048:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v10, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    struct_0 *v3;  // [bp-0x68], Other Possible Types: unsigned int\n
    unsigned long v4;  // [bp-0x64]\n
    struct_0 *v5;  // [bp-0x58], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x54]\n
    char v7;  // [bp-0x50]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int *v11;  // eax\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    if (!v10)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        if (!*(v10))\n
        {\n
            v9 = v8;\n
            return v9;\n
        }\n
        else if (*(v10) != 64)\n
        {\n
            cgc_putc(*(v10));\n
            v10 += 1;\n
            v8 += 1;\n
        }\n
        else\n
        {\n
            v10 += 1;\n
            v1 = *(v10);\n
            if (!v1)\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v11 = a0;\n
                a0 = v11 + 1;\n
                v6 = *(v11);\n
                cgc_int_to_str(v6, &v7);\n
                for (v5 = &v7; *(v5); v5 += 1)\n
                {\n
                    cgc_putc(*(v5));\n
                    v8 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v4 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v14 = ftop<4> - 1 + 1;\n
                v15 = v14 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v7;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v16 = v15 + 1;\n
                cgc_float_to_str();\n
                for (v3 = &v7; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v8 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v9 = -1;\n
                return v9;\n
            }\n
            v10 += 1;\n
        }\n
    }\n
}\n
", "4202532:sub_402024": null, "4202544:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4202602:sub_40206a": null, "4202608:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4202702:sub_4020ce": null, "4202704:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202758:sub_402106": null, "4202768:cgc_isnan": null, "4202791:sub_402127": null, "4202800:cgc_isinf": null, "4202847:sub_40215f": null, "4202848:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_402392:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40236b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40236b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40236b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_402392;\n
                if (!v4)\n
                {\n
LABEL_4022e7:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40236b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_4022e7;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40236b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4203436:sub_4023ac": null, "4203440:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4203844:sub_402544": null, "4203856:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4203947:sub_4025ab": null, "4203952:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4204060:sub_40261c": null, "4204064:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4204172:sub_40268c": null, "4204176:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4204371:sub_402753": null, "4204384:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4204461:sub_4027ad": null, "4204464:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4204656:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4204815:sub_40290f": null, "4204816:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4205015:sub_4029d7": null, "4205024:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 4292, 1);\n
}\n
", "4205147:sub_402a5b": null, "4205152:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_24;  // tmp #24\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1; a1 -= 1)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_24 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = tmp_24;\n
    }\n
    return v0;\n
}\n
", "4205229:sub_402aad": null, "4205232:cgc_memset": "int cgc_memset(char *v1, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v0;\n
}\n
", "4205300:sub_402af4": null, "4205312:cgc_strchr": "int cgc_strchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a0)\n
            break;\n
    }\n
    if (!*(v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4205420:sub_402b6c": null, "4205424:cgc_put": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_put(unsigned int v4)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = 0;\n
    v6 = v3;\n
    return cgc_transmit(1, v2, cgc_strlen(v4));\n
}\n
", "4205508:sub_402bc4": null, "4205520:cgc_validateName": "int cgc_validateName(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (*(v1) >= 65 && *(v1) <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205584:cgc_validatePhone": "int cgc_validatePhone(char *v3)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
\n
    v0 = v3;\n
    v4 = v0;\n
    v0 = v4 + 1;\n
    if (*(v4) != 40)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 3)\n
        {\n
            v5 = v0;\n
            v0 = v5 + 1;\n
            if (*(v5) != 41)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            v1 = 0;\n
            while (true)\n
            {\n
                if (v1 >= 3)\n
                {\n
                    v6 = v0;\n
                    v0 = v6 + 1;\n
                    if (*(v6) != 45)\n
                    {\n
                        v2 = 0;\n
                        return v2;\n
                    }\n
                    v1 = 0;\n
                    while (true)\n
                    {\n
                        if (v1 >= 4)\n
                        {\n
                            v2 = 1;\n
                            return v2;\n
                        }\n
                        if (*(v0) < 48)\n
                            break;\n
                        if (*(v0) > 57)\n
                            break;\n
                        v1 += 1;\n
                        v0 += 1;\n
                    }\n
                }\n
                if (*(v0) < 48)\n
                {\n
LABEL_402ceb:\n
                    v2 = 0;\n
                    return v2;\n
                }\n
                if (!(*(v0) <= 57))\n
                    goto LABEL_402ceb;\n
                v1 += 1;\n
                v0 += 1;\n
            }\n
        }\n
        if (*(v0) < 48)\n
        {\n
LABEL_402c71:\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (!(*(v0) <= 57))\n
            goto LABEL_402c71;\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4205980:sub_402d9c": null, "4205984:cgc_createContact": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[80];\n
    unsigned short field_50;\n
    char field_52;\n
    char field_53;\n
    unsigned int field_54;\n
    unsigned int field_58;\n
    unsigned int field_5c;\n
    unsigned int field_60;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_createContact(char *v10, char *a0, char *a1, unsigned short a2, char a3, char a4)\n
{\n
    char *v0;  // [bp-0x2c]\n
    char *v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x20]\n
    struct_1 *v4;  // [bp-0x1c]\n
    char *v5;  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: struct_1 *\n
    struct_1 *v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v7 = cgc_calloc(1, 100);\n
    if (!v7)\n
    {\n
        cgc_puts(&v6[65].padding_0[44]);\n
        cgc__terminate();\n
    }\n
    if (!cgc_validateName(v10))\n
    {\n
        cgc_puts(&v6[64].field_3c + 1);\n
        cgc_free(v7);\n
        v7 = 0;\n
        v8 = 0;\n
        return v8;\n
    }\n
    v4 = v7;\n
    v5 = v10;\n
    cgc_memcpy(v4, v5, cgc_strlen(v10));\n
    if (!cgc_validateName(a0))\n
    {\n
        cgc_puts(&v6[64].padding_0[6]);\n
        cgc_free(v7);\n
        v7 = 0;\n
        v8 = 0;\n
        return v8;\n
    }\n
    v2 = &v7->padding_0[32];\n
    v3 = a0;\n
    cgc_memcpy(v2, v3, cgc_strlen(a0));\n
    if (cgc_validatePhone(a1))\n
    {\n
        v0 = &v7->padding_0[64];\n
        v1 = a1;\n
        cgc_memcpy(v0, v1, cgc_strlen(a1));\n
        v7->field_50 = a2;\n
        v7->field_52 = a3;\n
        v7->field_53 = a4;\n
        v7->field_54 = v6->field_3c;\n
        v7->field_58 = 0;\n
        v7->field_60 = 0;\n
        v7->field_5c = 0;\n
        v8 = v7;\n
        return v8;\n
    }\n
    cgc_puts(&v6[63].padding_0[16]);\n
    cgc_free(v7);\n
    v7 = 0;\n
    v8 = 0;\n
    return v8;\n
}\n
", "4206579:sub_402ff3": null, "4206592:cgc_insert": "typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
    char padding_44[24];\n
    unsigned int field_5c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_0 *field_60;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_head;\n
\n
int cgc_insert(struct_1 *v2)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_1 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_head)\n
    {\n
        v3 = v0;\n
        v3->field_40 = &v2;\n
        return v0;\n
    }\n
    for (v1 = v0->field_40; v1->field_60; v1 = v1->field_60);\n
    *((v1 + 96)) = v2;\n
    v3 = v2;\n
    *((v3 + 92)) = v1;\n
    return v2;\n
}\n
", "4206708:sub_403074": null, "4206720:cgc_remove": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[92];\n
    struct struct_1 *field_5c;\n
    struct struct_2 *field_60;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[96];\n
    unsigned int field_60;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove(struct_3 *v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_3 *v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v2->field_60 && !v2->field_5c)\n
    {\n
        v0->field_40 = 0;\n
        goto LABEL_40314f;\n
    }\n
    if (!v2->field_5c)\n
    {\n
        v0->field_40 = v2->field_60;\n
        v2->field_60->field_5c = 0;\n
    }\n
    else\n
    {\n
        v2->field_5c->field_60 = v2->field_60;\n
    }\n
    if (!v2->field_60)\n
        v2->field_5c->field_60 = 0;\n
    else\n
        v2->field_60->field_5c = v2->field_5c;\n
    v2->field_60 = 0;\n
    v2->field_5c = 0;\n
LABEL_40314f:\n
    v1 = v2;\n
    return v1;\n
}\n
", "4206935:sub_403157": null, "4206944:cgc_printGender": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printGender(char v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v2;\n
    if (v1 == 70)\n
    {\n
        v3 = cgc_puts(v0 - 3991);\n
        return v3;\n
    }\n
    else if (v1 == 77)\n
    {\n
        v3 = cgc_puts(v0 - 3996);\n
        return v3;\n
    }\n
    else if (v1 == 84)\n
    {\n
        v3 = cgc_puts(v0 - 3984);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = cgc_puts(v0 - 3971);\n
        return v3;\n
    }\n
}\n
", "4207113:sub_403209": null, "4207120:cgc_printContact": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printContact(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_put(\"First Name: \\t\");\n
    cgc_puts(v2);\n
    cgc_put(v0 - 3951);\n
    cgc_puts(v2 + 32);\n
    cgc_put(v0 - 3938);\n
    v4 = v1;\n
    return cgc_puts(v2 + 64);\n
}\n
", "4207247:sub_40328f": null, "4207248:cgc_printList": "typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_0 *field_60;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *cgc_head;\n
\n
int cgc_printList()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_head;\n
    if (!cgc_head)\n
        cgc_puts(v0 - 3922);\n
    for (; v1; v1 = v1->field_60)\n
    {\n
        cgc_puts(v0 - 3907);\n
        cgc_printContact(v1);\n
    }\n
    return cgc_puts(v0 - 3907);\n
}\n
", "4207392:cgc_sortYolodex": "typedef struct struct_2 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[96];\n
    struct struct_1 *field_60;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
    struct struct_0 *field_60;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *cgc_head;\n
\n
int cgc_sortYolodex()\n
{\n
    char v0;  // [bp-0x25]\n
    struct_2 *v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x1c], Other Possible Types: unsigned int, struct_1 *\n
    struct_1 *v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_2 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v7 = cgc_head;\n
    for (v5 = cgc_head; v6; v6 = v9->field_40)\n
    {\n
        for (v6 = cgc_head; v7; v7 = v7->field_60)\n
        {\n
            v2 = 0;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (*((v5 + v2 + 32)))\n
                    v0 = *((v7 + v2 + 32));\n
                if (!(v0 & 1))\n
                    break;\n
                if (*((v5 + v2 + 32)) > *((v7 + v2 + 32)))\n
                {\n
                    v5 = v7;\n
                    break;\n
                }\n
                else\n
                {\n
                    if (*((v5 + v2 + 32)) != *((v7 + v2 + 32)))\n
                        break;\n
                    v2 += 1;\n
                }\n
            }\n
            if (!v7->padding_0[32 + v2] && *((v5 + v2 + 32)))\n
                v5 = v7;\n
        }\n
        v6 = cgc_remove(v5);\n
        if (!v3)\n
        {\n
            v3 = v5;\n
        }\n
        else\n
        {\n
            for (v4 = v3; v4->field_60; v4 = v4->field_60);\n
            *((v4 + 96)) = v6;\n
            v6->field_5c = v4;\n
        }\n
        v9 = v1;\n
        v5 = v9->field_40;\n
        v7 = v9->field_40;\n
    }\n
    v1->field_40 = v3;\n
    return v1;\n
}\n
", "4207835:sub_4034db": null, "4207840:cgc_initYolodex": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initYolodex()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = v0;\n
    v4->field_40 = cgc_createContact(\"Robert\", \"Morris\", \"(617)253-5982\", 32972, 77, 121);\n
    cgc_insert(cgc_createContact(&v4[56].padding_0[30], &v4[56].padding_0[22], &v4[56].padding_0[12], 4242, 77, 110));\n
    v5 = v0;\n
    cgc_insert(cgc_createContact(&v5[55].field_40 + 2, &v5[55].padding_0[62], &v5[55].padding_0[50], 404, 77, 121));\n
    v6 = v0;\n
    cgc_insert(cgc_createContact(&v6[55].padding_0[36], &v6[55].padding_0[29], &v6[55].padding_0[23], 31337, 70, 121));\n
    v7 = v0;\n
    v9 = v1;\n
    return cgc_insert(cgc_createContact(&v7[55].padding_0[9], &v7[55].padding_0[3], &v7[54].padding_0[62], 31337, 70, 110));\n
}\n
", "4208220:sub_40365c": null, "4208224:cgc_recvUntil": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvUntil(char *v4, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4;\n
    while (true)\n
    {\n
        v5 = a0;\n
        a0 = v5 - 1;\n
        if (!v5)\n
            return v3 - v4;\n
        v0 = &v2;\n
        cgc_receive(0, v3, 1);\n
        if (!*(&v2))\n
            cgc__terminate();\n
        if (*(v3) == a1)\n
        {\n
            *(v3) = 0;\n
            return v3 - v4;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4208402:sub_403712": null, "4208416:cgc_promptAdd": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptAdd()\n
{\n
    struct_0 *v0;  // [bp-0x78]\n
    struct_1 *v1;  // [bp-0x74], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x6e]\n
    char v3;  // [bp-0x6c]\n
    char v4;  // [bp-0x6b]\n
    unsigned short v5;  // [bp-0x6a]\n
    char v6;  // [bp-0x68]\n
    char v7;  // [bp-0x60]\n
    char v8;  // [bp-0x50]\n
    char v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_memset(&v7, 0, 16);\n
    cgc_memset(&v6, 0, 8);\n
    for (v1 = 0; !v1; v1 = cgc_createContact(&v9, &v8, &v7, v5, v4, v3))\n
    {\n
        cgc_put(&v0[58].padding_0[8]);\n
        cgc_recvUntil(&v9, 32, 10);\n
        cgc_put(v0 + 58);\n
        cgc_recvUntil(&v8, 32, 10);\n
        cgc_put(&v0[57].padding_0[57]);\n
        cgc_recvUntil(&v7, 14, 10);\n
        cgc_put(&v0[57].padding_0[42]);\n
        cgc_memset(&v6, 0, 8);\n
        cgc_recvUntil(&v6, 6, 10);\n
        v5 = cgc_atoi(&v6);\n
        cgc_put(&v0[57].padding_0[26]);\n
        cgc_recvUntil(&v2, 2, 10);\n
        v4 = v2;\n
        v3 = 63;\n
        while (v3 == 63)\n
        {\n
            cgc_put(&v0[57].padding_0[17]);\n
            cgc_recvUntil(&v2, 2, 10);\n
            if (v2 == 110)\n
            {\n
LABEL_403906:\n
                v3 = v2;\n
                goto LABEL_403922;\n
            }\n
            else\n
            {\n
                if (v2 == 121)\n
                    goto LABEL_403906;\n
                cgc_puts(&v0[57].padding_0[8]);\n
LABEL_403922:\n
            }\n
        }\n
    }\n
    if (*((v1 + 84)) == v0->field_3c)\n
        return cgc_insert(v1);\n
    cgc_puts(&v0[56].padding_0[40]);\n
    cgc__terminate();\n
    return cgc_insert(v1);\n
}\n
", "4209078:sub_4039b6": null, "4209088:cgc_findContact": "typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[96];\n
    struct struct_0 *field_60;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_findContact()\n
{\n
    struct_1 *v0;  // [bp-0x54]\n
    struct_0 *v1;  // [bp-0x50], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x4c], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x48]\n
    char v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 0;\n
    cgc_put(\"First: \");\n
    cgc_recvUntil(&v4, 32, 10);\n
    cgc_put(&v0[54].padding_0[40]);\n
    cgc_recvUntil(&v3, 32, 10);\n
    v2 = v0->field_40;\n
    while (true)\n
    {\n
        if (!v2)\n
            return v1;\n
        if (!cgc_strcmp(&v4, v2) && !cgc_strcmp(&v3, &v2->padding_0[32]))\n
        {\n
            v1 = v2;\n
            return v1;\n
        }\n
        v2 = v2->field_60;\n
    }\n
}\n
", "4209332:sub_403ab4": null, "4209344:cgc_promptDel": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptDel()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_findContact();\n
    if (!v1)\n
    {\n
        v5 = cgc_puts(v0 - 3578);\n
        return v5;\n
    }\n
    v1 = cgc_remove(v1);\n
    cgc_free(v1);\n
    v5 = cgc_puts(v0 - 3595);\n
    return v5;\n
}\n
", "4209460:sub_403b34": null, "4209472:cgc_editUser": "typedef struct struct_1 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned short field_50;\n
    char field_52;\n
    char field_53;\n
    unsigned int field_54;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_editUser(struct_0 *v9)\n
{\n
    char *v0;  // [bp-0x4c]\n
    struct_2 *v1;  // [bp-0x48]\n
    char *v2;  // [bp-0x44]\n
    struct_2 *v3;  // [bp-0x40]\n
    struct_0 *v4;  // [bp-0x3c]\n
    struct_2 *v5;  // [bp-0x38]\n
    struct_1 *v6;  // [bp-0x34]\n
    char v7;  // [bp-0x30]\n
    char v8;  // [bp-0x28]\n
    unsigned int v10;  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v9)\n
    {\n
        cgc_puts(&v6[55].padding_0[35]);\n
        cgc_put(&v6[54].padding_0[43]);\n
        cgc_recvUntil(&v8, 32, 10);\n
        if (v8 && !cgc_validateName(&v8))\n
        {\n
            v10 = cgc_puts(&v6[54].padding_0[26]);\n
            return v10;\n
        }\n
        if (v8)\n
        {\n
            cgc_memset(v9, 0, 32);\n
            v4 = v9;\n
            v5 = &v8;\n
            cgc_memcpy(v4, v5, cgc_strlen(&v8));\n
        }\n
        cgc_put(&v6[53].padding_0[50]);\n
        cgc_recvUntil(&v8, 32, 10);\n
        if (v8 && !cgc_validateName(&v8))\n
        {\n
            v10 = cgc_puts(&v6[53].padding_0[34]);\n
            return v10;\n
        }\n
        if (v8)\n
        {\n
            cgc_memset(&v9->padding_0[32], 0, 32);\n
            v2 = &v9->padding_0[32];\n
            v3 = &v8;\n
            cgc_memcpy(v2, v3, cgc_strlen(&v8));\n
        }\n
        cgc_put(&v6[52].padding_0[59]);\n
        cgc_recvUntil(&v8, 14, 10);\n
        if (v8 && !cgc_validatePhone(&v8))\n
        {\n
            v10 = cgc_puts(&v6[52].padding_0[40]);\n
            return v10;\n
        }\n
        if (v8)\n
        {\n
            cgc_memset(&v9->padding_0[64], 0, 16);\n
            v0 = &v9->padding_0[64];\n
            v1 = &v8;\n
            cgc_memcpy(v0, v1, cgc_strlen(&v8));\n
        }\n
        cgc_put(&v6[51].field_3c + 2);\n
        cgc_recvUntil(&v8, 6, 10);\n
        if (v8)\n
        {\n
            cgc_memcpy(&v7, &v8, 5);\n
            v9->field_50 = cgc_atoi(&v7);\n
        }\n
        cgc_put(&v6[51].padding_0[42]);\n
        cgc_recvUntil(&v8, 2, 10);\n
        if (v8)\n
            v9->field_52 = v8;\n
        cgc_put(&v6[51].padding_0[29]);\n
        cgc_recvUntil(&v8, 2, 10);\n
        if (v8)\n
            v9->field_53 = v8;\n
    }\n
    v10 = v9->field_54;\n
    if (v10 != v6->field_3c)\n
    {\n
        cgc_puts(&v6[56].padding_0[40]);\n
        v10 = cgc__terminate();\n
        return v10;\n
    }\n
    return v9->field_54;\n
}\n
", "4210445:sub_403f0d": null, "4210448:cgc_promptEdit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptEdit()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x34]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&v1, 0, 8);\n
    v2 = cgc_findContact();\n
    if (v2)\n
    {\n
        v6 = cgc_editUser(v2);\n
        return v6;\n
    }\n
    v6 = cgc_puts(v0 - 3270);\n
    return v6;\n
}\n
", "4210562:sub_403f82": null, "4210576:cgc_promptShow": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned short field_50;\n
    char field_52;\n
    char field_53;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptShow()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct struct_0 **v2;  // [bp-0x18]\n
    char v3;  // [bp-0x16]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    struct_0 *v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_findContact();\n
    if (!v6)\n
    {\n
        v10 = cgc_puts(v1 - 3270);\n
        return v10;\n
    }\n
    cgc_memset(&v3, 0, 2);\n
    v3 = 115;\n
    while (true)\n
    {\n
        v10 = v3;\n
        if (v10 == 113)\n
            return v3;\n
        cgc_memset(&v4, 0, 6);\n
        cgc_puts(v1 - 3253);\n
        cgc_put(v1 - 3212);\n
        cgc_puts(v6);\n
        cgc_put(v1 - 3199);\n
        cgc_puts(&v6->padding_0[32]);\n
        cgc_put(v1 - 3187);\n
        cgc_puts(&v6->padding_0[64]);\n
        cgc_itoa(&v4, v6->field_50, 6);\n
        cgc_put(v1 - 3175);\n
        cgc_puts(&v4);\n
        cgc_put(v1 - 3159);\n
        cgc_printGender(v6->field_52);\n
        if (v6->field_53 == 121)\n
            cgc_puts(v1 - 3149);\n
        cgc_puts(v1 - 3253);\n
        cgc_recvUntil(&v3, 2, 10);\n
        v0 = v3 - 100;\n
        if (v0 <= 13)\n
        {\n
            cgc_promptDel();\n
            while (true)\n
            {\n
                v2 = &v6;\n
                cgc_memset(&v6, 0, 2);\n
                cgc_recvUntil(v2, 2, 10);\n
                *(&v4) = *(&v6 + 2) - 64;\n
                if (*(&v4) <= 6)\n
                    break;\n
                cgc_puts(*(&v5) - 2946);\n
            }\n
            goto *(((stack_base)[16] + *(&v4) * 4 - 4232)) + (stack_base)[16];\n
        }\n
    }\n
}\n
", "4211050:sub_40416a": "int sub_40416a()\n
{\n
}\n
", "4211055:sub_40416f": "typedef struct struct_1 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
    void* field_60;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[92];\n
    void* field_5c;\n
    unsigned int field_60;\n
} struct_0;\n
\n
int sub_40416f()\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x12]\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int [25], struct_1 *\n
\n
    if (!v2[24] && !v2[23])\n
    {\n
        cgc_remove(v2);\n
        cgc_puts(*(&v0) - 3094);\n
        v1 = 113;\n
        goto LABEL_4041f7;\n
    }\n
    if (v2[24])\n
    {\n
        v2 = v2[24];\n
        cgc_remove(v2->field_5c);\n
    }\n
    else\n
    {\n
        v2 = v2[23];\n
        cgc_remove(v2->field_60);\n
    }\n
LABEL_4041f7:\n
}\n
", "4211201:sub_404201": "int sub_404201()\n
{\n
    char v0;  // [bp-0x8]\n
\n
    cgc_editUser(*(&v0));\n
}\n
", "4211220:sub_404214": "int sub_404214()\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (*((*(&v1) + 96)))\n
        v1 = *((*(&v1) + 96));\n
    else\n
        cgc_puts(*(&v0) - 3054);\n
}\n
", "4211269:sub_404245": "int sub_404245()\n
{\n
    char v0;  // [bp-0x18]\n
    char v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (*((*(&v1) + 92)))\n
        v1 = *((*(&v1) + 92));\n
    else\n
        cgc_puts(*(&v0) - 3037);\n
}\n
", "4211329:sub_404281": null, "4211344:cgc_initCookies": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_cookie;\n
\n
int cgc_initCookies()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v0 = &v4;\n
    cgc_random(&cgc_cookie, 4);\n
    if (*(&v4) != 4)\n
    {\n
        cgc_puts(&v1[47].padding_0[8]);\n
        cgc__terminate();\n
    }\n
    v8 = v1;\n
    v8->field_3c = v8->field_3c | 270549120;\n
    return v1;\n
}\n
", "4211478:sub_404316": null, "4211488:cgc_inputLoop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_inputLoop()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4211607:sub_404397": "int sub_404397()\n
{\n
    cgc_promptAdd();\n
}\n
", "4211633:sub_4043b1": "int sub_4043b1()\n
{\n
    cgc_promptEdit();\n
}\n
", "4211646:sub_4043be": "int sub_4043be()\n
{\n
    char v0;  // [bp-0xc]\n
\n
    cgc_puts(*(&v0) - 2979);\n
    cgc__terminate();\n
    cgc_printList();\n
}\n
", "4211693:sub_4043ed": "int sub_4043ed()\n
{\n
    cgc_sortYolodex();\n
}\n
", "4211706:sub_4043fa": "int sub_4043fa()\n
{\n
    cgc_promptShow();\n
}\n
", "4211741:sub_40441d": null, "4211744:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_initCookies();\n
    cgc_puts(v0 - 2924);\n
    cgc_initYolodex();\n
    cgc_inputLoop();\n
    cgc__terminate();\n
}\n
", "4211836:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_random": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_log10": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}