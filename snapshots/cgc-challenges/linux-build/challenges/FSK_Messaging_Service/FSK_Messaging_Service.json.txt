{"4202496:_init": "extern struct_0 *g_40a4e4;\n
\n
int _init()\n
{\n
    if (g_40a4e4)\n
    {\n
        g_40a4e4();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_log": "// attributes: PLT stub\n
int cgc_log()\n
{\n
    ::libc.so.0::cgc_log();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_sqrt": "// attributes: PLT stub\n
int cgc_sqrt()\n
{\n
    ::libc.so.0::cgc_sqrt();\n
    return;\n
}\n
", "4202720:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202736:sub_4020f0": "int sub_4020f0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202742:sub_4020f6": null, "4202752:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202795:sub_40212b": null, "4202796:sub_40212c": "int sub_40212c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202800:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202804:sub_402134": null, "4202816:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33707;\n
    v6 = v5 + 16;\n
    v7 = v5 + 16;\n
    if (v7 == v6)\n
        return v5 + 16;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202867:sub_402173": "int sub_402173()\n
{\n
}\n
", "4202873:sub_402179": "int sub_402179()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202880:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33643;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 16;\n
    v9 = (v6 + 16 - (v6 + 16) >> 31) + (16 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202951:sub_4021c7": "int sub_4021c7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202960:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a4e0;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a4e0)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020f0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203035:sub_40221b": "int sub_40221b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203040:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203049:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203053:sub_40222d": null, "4203056:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203110:sub_402266": null, "4203120:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203174:sub_4022a6": null, "4203184:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203238:sub_4022e6": null, "4203248:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203344:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203440:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203494:sub_4023e6": null, "4203504:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203578:sub_40243a": null, "4203584:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203658:sub_40248a": null, "4203664:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203758:sub_4024ee": null, "4203760:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 68));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 68)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204097:sub_402641": null, "4204112:cgc_add_freelist_block": "typedef struct struct_1 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[131].padding_0[16]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_44)\n
    {\n
        v7 = v1;\n
        v7->field_44 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204337:sub_402731": null, "4204352:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204423:sub_402787": null, "4204432:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[68];\n
    struct struct_1 *field_44;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_44);\n
    v3[0] = v1->field_44;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4204649:sub_402869": null, "4204656:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: struct_2 *, unsigned int\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4204740:sub_4028c4": null, "4204752:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[68];\n
    struct struct_0 *field_44;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_44; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4205033:sub_4029e9": null, "4205040:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205148:sub_402a5c": null, "4205152:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 68)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 68));\n
        *((v6 + v3 * 4 + 68)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205437:sub_402b7d": null, "4205440:cgc_round": null, "4205586:sub_402c12": null, "4205600:cgc_floor": null, "4205756:sub_402cbc": null, "4205760:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[1088];\n
    unsigned int field_440;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_440 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[960 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[960 + 4 * (v2 + 1 & 31)]);\n
        *((960 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4205983:sub_402d9f": null, "4205984:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4206031:sub_402dcf": null, "4206032:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[960 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4206315:sub_402eeb": null, "4206320:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4206508:sub_402fac": null, "4206512:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4206613:sub_403015": null, "4206624:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4206658:sub_403042": null, "4206672:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4206942:sub_40315e": null, "4206944:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4207036:sub_4031bc": null, "4207040:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4207228:sub_40327c": null, "4207232:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4207535:sub_4033af": null, "4207536:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc], Other Possible Types: unsigned long\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    unsigned int *v45;  // [bp+0x10001c], Other Possible Types: struct struct_1 **\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_4038e9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_4038e9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 9360)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4208892:sub_4038fc": null, "4208896:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4208954:sub_40393a": null, "4208960:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4209029:sub_403985": null, "4209040:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4209179:sub_403a1b": null, "4209184:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209456:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4210112:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4212528:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213194:sub_4049ca": null, "4213200:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4213740:sub_404bec": null, "4213744:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4213791:sub_404c1f": null, "4213792:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4213829:sub_404c45": null, "4213840:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4214077:sub_404d3d": null, "4214080:cgc_atof": null, "4214365:sub_404e5d": null, "4214368:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4214444:sub_404eac": null, "4214448:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4214585:sub_404f39": null, "4214592:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4214728:sub_404fc8": null, "4214736:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_4050ea;\n
    if (*(v7) != 48)\n
    {\n
LABEL_4050ea:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_40513d;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_40513d;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_40513d:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_4050ea;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (cgc_isupper(v1))\n
                v1 -= 55;\n
            else\n
                v1 -= 87;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_405275:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_40527a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_40527a;\n
            goto LABEL_405275;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4215507:sub_4052d3": null, "4215520:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215579:sub_40531b": null, "4215584:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4215639:sub_405357": null, "4215648:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4215803:sub_4053fb": null, "4215808:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4215966:sub_40549e": null, "4215968:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[580];\n
    struct struct_1 *field_244;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_244)\n
        {\n
            v6 = v1->field_244;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_244 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_244 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            *((v6 + v3)) = 0;\n
        }\n
        else\n
        {\n
            v1->field_244 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
    }\n
    if (v3 == v2)\n
        v1->field_244 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4216487:sub_4056a7": null, "4216496:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (*(v2) < *(a0))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4216846:sub_40580e": null, "4216848:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217031:sub_4058c7": null, "4217040:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v4];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217193:sub_405969": null, "4217200:cgc_init_baseband": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char field_20;\n
    char field_21;\n
    char field_22;\n
    char field_23;\n
    char field_24;\n
    char field_25;\n
    char padding_26[256];\n
    unsigned short field_126;\n
} struct_0;\n
\n
int cgc_init_baseband(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v0->field_0 = 0;\n
    v0->field_1 = 0;\n
    v1 = v0;\n
    v1->field_8 = 0;\n
    v1->field_4 = 0;\n
    v0->field_18 = 0;\n
    v0->field_1c = 0;\n
    v0->field_20 = 0;\n
    v0->field_22 = 0;\n
    v0->field_21 = 0;\n
    v0->field_23 = 0;\n
    v0->field_24 = 0;\n
    v0->field_25 = 0;\n
    v0->field_126 = 0;\n
    return v0;\n
}\n
", "4217312:cgc_process_sample": "int cgc_process_sample(unsigned int v1, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return cgc_run_cdr(v1);\n
}\n
", "4217362:sub_405a12": null, "4217376:cgc_run_cdr": null, "4218063:sub_405ccf": null, "4218064:cgc_free_run_lock": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned long long field_4;\n
    unsigned long long field_c;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_run_lock(struct_0 *v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10]\n
    unsigned long v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v6;\n
    v3 = v7->field_14;\n
    v4 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v1 = *((&v7->field_c + 4));\n
    v2 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t2,1] = t3\n
    [D] PutI(136:I8x8)[t2,1] = 0x01\n
    [D] PutI(136:I8x8)[t2,0] = 0x00\n
    [D] PutI(72:F64x8)[t22,1] = t23\n
    [D] PutI(136:I8x8)[t22,1] = 0x01\n
    [D] PutI(136:I8x8)[t22,0] = 0x00\n
    v5 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t56,0] = t59\n
    [D] PutI(136:I8x8)[t56,0] = 0x01\n
    [D] PutI(72:F64x8)[t66,0] = t69\n
    [D] PutI(136:I8x8)[t66,0] = 0x01\n
    [D] PutI(136:I8x8)[t81,0] = 0x00\n
    [D] PutI(72:F64x8)[t95,0] = t96\n
    [D] PutI(136:I8x8)[t95,0] = 0x01\n
    [D] PutI(136:I8x8)[t95,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t81,0] ? [D] GetI(72:F64x8)[t81,0] : nan), ([D] GetI(136:I8x8)[t81,1] ? [D] GetI(72:F64x8)[t81,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t81,0] ? [D] GetI(72:F64x8)[t81,0] : nan), ([D] GetI(136:I8x8)[t81,1] ? [D] GetI(72:F64x8)[t81,1] : nan)) & 69) >> 6)) & 1) == 1)\n
    {\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t2,0] = t5\n
        [D] PutI(136:I8x8)[t2,0] = 0x01\n
        [D] PutI(72:F64x8)[t15,0] = t19\n
        [D] PutI(136:I8x8)[t15,0] = 0x01\n
        [D] PutI(72:F64x8)[t15,1] = t12\n
        [D] PutI(136:I8x8)[t15,1] = 0x01\n
        [D] PutI(136:I8x8)[t35,0] = 0x00\n
        [D] PutI(72:F64x8)[t49,0] = t50\n
        [D] PutI(136:I8x8)[t49,0] = 0x01\n
        [D] PutI(136:I8x8)[t49,0] = 0x00\n
        if (((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69) >> 6)) & 1) != 1)\n
        {\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t1,1] = t2\n
            [D] PutI(136:I8x8)[t1,1] = 0x01\n
            [D] PutI(136:I8x8)[t1,0] = 0x00\n
            *(&(&v6->padding_0)[1]) = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
            [D] PutI(136:I8x8)[t26,0] = 0x00\n
        }\n
    }\n
    else\n
    {\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t1,1] = t2\n
        [D] PutI(136:I8x8)[t1,1] = 0x01\n
        [D] PutI(136:I8x8)[t1,0] = 0x00\n
        *(&(&v6->padding_0)[1]) = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
        [D] PutI(136:I8x8)[t26,0] = 0x00\n
    }\n
    *((&v6->field_c + 4)) = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t8,1] = t9\n
    [D] PutI(136:I8x8)[t8,1] = 0x01\n
    [D] PutI(136:I8x8)[t8,0] = 0x00\n
    *((&v6->field_4 + 4)) = ([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan);\n
    [D] PutI(136:I8x8)[t33,0] = 0x00\n
    return v6;\n
}\n
", "4218263:sub_405d97": null, "4218272:cgc_do_sample": "typedef struct struct_0 {\n
    char padding_0[32];\n
    char field_20;\n
    char field_21;\n
    char field_22;\n
    char field_23;\n
    char field_24;\n
    char field_25;\n
    char padding_26[256];\n
    unsigned short field_126;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_sample(struct_0 *v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0xe]\n
    char v3;  // [bp-0xd]\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    unsigned int v9;  // ecx\n
    struct_0 *v10;  // eax\n
    struct_0 *v11;  // eax\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // eax\n
    struct_0 *v14;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4->field_20;\n
    v5 = v3;\n
    if (!v5)\n
        return v3;\n
    if (v3 == 1)\n
    {\n
        if (v4->field_22)\n
        {\n
            if (v4->field_22 != 1)\n
            {\n
                v2 = v4->field_22;\n
                if (!v4->field_21 && v4->field_22 == 2 && a0 == 1)\n
                {\n
                    v5 = v4;\n
                    v5->field_21 = 1;\n
                    goto LABEL_405f43;\n
                }\n
                if (a0 == (1 << (15 - v2 & 31) & 53155) >> (15 - v2 & 31))\n
                {\n
                    v14 = v4;\n
                    v14->field_22 = v14->field_22 + 1;\n
                }\n
                else\n
                {\n
                    cgc_reset_baseband_state();\n
                }\n
                v5 = v4->field_22;\n
                if (v5 == 16)\n
                {\n
                    v4->field_20 = 2;\n
                    v4->field_25 = 0;\n
                    v4->field_24 = 0;\n
                    v5 = v4;\n
                    v5->field_23 = 0;\n
                }\n
LABEL_405f43:\n
            }\n
            else if (a0)\n
            {\n
                v5 = v4;\n
                v5->field_22 = 2;\n
            }\n
            else\n
            {\n
                v4->field_21 = 0;\n
                v5 = v4;\n
                v5->field_22 = 0;\n
            }\n
        }\n
        else\n
        {\n
            if (a0 == 1)\n
            {\n
                v5 = v4;\n
                v5->field_22 = 1;\n
            }\n
            else if (a0 != v4->field_21)\n
            {\n
                v5 = v4;\n
                v5->field_21 = a0;\n
            }\n
            else\n
            {\n
                v5 = cgc_reset_baseband_state();\n
            }\n
        }\n
    }\n
    else\n
    {\n
        if (v3 == 2)\n
        {\n
            v6 = v4;\n
            v6->field_23 = v6->field_23 | (a0 & 1) << (7 - v4->field_25 & 31);\n
            v7 = v4;\n
            v7->field_25 = v7->field_25 + 1;\n
            v5 = v4->field_25;\n
            if (v5 == 8)\n
            {\n
                if (v4->field_23)\n
                {\n
                    v4->field_20 = 3;\n
                    v4->field_25 = 0;\n
                    v5 = cgc_memset(&v4->padding_26, 0, 255);\n
                }\n
                else\n
                {\n
                    v5 = cgc_reset_baseband_state();\n
                }\n
            }\n
        }\n
        else if (v3 == 3)\n
        {\n
            v8 = v4;\n
            v9 = v4->field_24;\n
            v8->padding_26[v9] = v8->padding_26[v9] | (a0 & 1) << (7 - v4->field_25 & 31);\n
            v10 = v4;\n
            v10->field_25 = v10->field_25 + 1;\n
            v5 = v4->field_25;\n
            if (v5 == 8)\n
            {\n
                v4->field_25 = 0;\n
                v11 = v4;\n
                v11->field_24 = v11->field_24 + 1;\n
                v5 = v4->field_24;\n
                if (v5 == v4->field_23)\n
                {\n
                    v4->field_20 = 4;\n
                    v5 = v4;\n
                    v5->field_126 = 0;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v5 = v3;\n
            if (v5 == 4)\n
            {\n
                v12 = v4;\n
                v12->field_126 = v12->field_126 | (a0 & 1) << (15 - v4->field_25 & 31);\n
                v13 = v4;\n
                v13->field_25 = v13->field_25 + 1;\n
                v5 = v4->field_25;\n
                if (v5 == 16)\n
                {\n
                    v0 = v4->field_23;\n
                    cgc_receive_packet(&v4->padding_26, v0);\n
                    v5 = cgc_reset_baseband_state(v4, v0);\n
                }\n
            }\n
        }\n
    }\n
    return v5;\n
}\n
", "4219215:sub_40614f": null, "4219216:cgc_reset_baseband_state": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    char field_20;\n
    char field_21;\n
    char field_22;\n
    char field_23;\n
    char field_24;\n
    char field_25;\n
    char padding_26[256];\n
    unsigned short field_126;\n
} struct_0;\n
\n
int cgc_reset_baseband_state(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v0->field_0 = 0;\n
    v0->field_20 = 0;\n
    v0->field_1 = 0;\n
    v1 = v0;\n
    v1->field_8 = 0;\n
    v1->field_4 = 0;\n
    v0->field_18 = 0;\n
    v0->field_1c = 0;\n
    v0->field_22 = 0;\n
    v0->field_21 = 0;\n
    v0->field_23 = 0;\n
    v0->field_24 = 0;\n
    v0->field_25 = 0;\n
    v0->field_126 = 0;\n
    return v0;\n
}\n
", "4219328:cgc_init_packet_handler": "typedef struct struct_1 {\n
    char padding_0[584];\n
    struct struct_0 *field_248;\n
    char field_24c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    char field_10;\n
    char padding_11[3];\n
    unsigned int field_14;\n
    char field_18;\n
    char padding_19[3];\n
    unsigned int field_1c;\n
    char field_20;\n
    char padding_21[3];\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_packet_handler()\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_1 *v5;  // ecx\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v0;\n
    v5->field_248 = cgc_malloc(40);\n
    v5->field_24c = 5;\n
    v1 = v5->field_248;\n
    v1->field_0 = 0;\n
    v1->field_4 = &v5[28].padding_0[548];\n
    v1->field_8 = 1;\n
    v1->field_c = &v5[28].padding_0[132];\n
    v1->field_10 = 2;\n
    v1->field_14 = &v5[27].padding_0[289];\n
    v1->field_18 = 3;\n
    v1->field_1c = &v5[26].padding_0[270];\n
    v1->field_20 = 4;\n
    v1->field_24 = &v5[26].padding_0[14];\n
    v6 = v2;\n
    return v1;\n
}\n
", "4219487:sub_40625f": null, "4219488:cgc_HandleBroadcastPacket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleBroadcastPacket(char *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    char v1;  // [bp-0x113]\n
    char v2;  // [bp-0x10a]\n
    char v3;  // [bp-0xa]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v6 = cgc_printf(v0 - 9035);\n
        return v6;\n
    }\n
    else if (a0 < 1)\n
    {\n
        v6 = cgc_printf(v0 - 9015);\n
        return v6;\n
    }\n
    else\n
    {\n
        v4 = *(v5);\n
        if (a0 < v4 + 2)\n
        {\n
            v6 = cgc_printf(v0 - 8988);\n
            return v6;\n
        }\n
        else if (v4 > 8)\n
        {\n
            v6 = cgc_printf(v0 - 8953);\n
            return v6;\n
        }\n
        else\n
        {\n
            v3 = v5[1 + v4];\n
            if (a0 != v4 + v3 + 2)\n
            {\n
                v6 = cgc_printf(v0 - 8911);\n
                return v6;\n
            }\n
            cgc_memcpy(&v1, v5 + 1, v4);\n
            (&v1)[v4] = 0;\n
            cgc_memcpy(&v2, &v5[v4 + 2], v3);\n
            (&v2)[v3] = 0;\n
            v6 = cgc_printf(v0 - 8856);\n
            return v6;\n
        }\n
    }\n
}\n
", "4219899:sub_4063fb": null, "4219904:cgc_HandleChannelPacket": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleChannelPacket(char *v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x120]\n
    unsigned int v1;  // [bp-0x11c]\n
    char v2;  // [bp-0x118]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0xf]\n
    char v5;  // [bp-0xe]\n
    char v6;  // [bp-0xd]\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v8 = cgc_printf(v1 - 8832);\n
        return v8;\n
    }\n
    else if (a0 < 2)\n
    {\n
        v8 = cgc_printf(v1 - 8814);\n
        return v8;\n
    }\n
    else\n
    {\n
        v6 = *(v7);\n
        if (a0 < v6 + 3)\n
        {\n
            v8 = cgc_printf(v1 - 8789);\n
            return v8;\n
        }\n
        else if (v6 > 8)\n
        {\n
            v8 = cgc_printf(v1 - 8756);\n
            return v8;\n
        }\n
        else\n
        {\n
            v5 = v7[1 + v6];\n
            v4 = v7[2 + v6];\n
            if (a0 != v6 + v4 + 3)\n
            {\n
                v8 = cgc_printf(v1 - 8716);\n
                return v8;\n
            }\n
            cgc_memcpy(&v3, v7 + 1, v6);\n
            (&v3)[v6] = 0;\n
            cgc_memcpy(&v2, &v7[v6 + 3], v4);\n
            (&v2)[v4] = 0;\n
            v0 = &v2;\n
            v8 = cgc_printf(v1 - 8663);\n
            return v8;\n
        }\n
    }\n
}\n
", "4220330:sub_4065aa": null, "4220336:cgc_HandlePrivatePacket": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandlePrivatePacket(char *v8, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x130]\n
    unsigned int v1;  // [bp-0x128]\n
    char v2;  // [bp-0x121]\n
    char v3;  // [bp-0x118]\n
    char v4;  // [bp-0x10f]\n
    char v5;  // [bp-0xf]\n
    char v6;  // [bp-0xe]\n
    char v7;  // [bp-0xd]\n
    unsigned int v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v8)\n
    {\n
        v9 = cgc_printf(v1 - 8630);\n
        return v9;\n
    }\n
    else if (a0 < 2)\n
    {\n
        v9 = cgc_printf(v1 - 8604);\n
        return v9;\n
    }\n
    else\n
    {\n
        v7 = *(v8);\n
        if (a0 < v7 + 3)\n
        {\n
            v9 = cgc_printf(v1 - 8571);\n
            return v9;\n
        }\n
        else if (v7 > 8)\n
        {\n
            v9 = cgc_printf(v1 - 8510);\n
            return v9;\n
        }\n
        else\n
        {\n
            v6 = v8[1 + v7];\n
            if (a0 < v7 + v6 + 3)\n
            {\n
                v9 = cgc_printf(v1 - 8571);\n
                return v9;\n
            }\n
            else if (v6 > 8)\n
            {\n
                v9 = cgc_printf(v1 - 8510);\n
                return v9;\n
            }\n
            else\n
            {\n
                v5 = v8[2 + v6 + v7];\n
                if (a0 != v7 + v6 + v5 + 3)\n
                {\n
                    v9 = cgc_printf(v1 - 8571);\n
                    return v9;\n
                }\n
                cgc_memcpy(&v2, v8 + 1, v7);\n
                (&v2)[v7] = 0;\n
                cgc_memcpy(&v3, &v8[v7 + 2], v6);\n
                (&v3)[v6] = 0;\n
                cgc_memcpy(&v4, &v8[v7 + v6 + 3], v5);\n
                (&v4)[v5] = 0;\n
                v0 = &v4;\n
                v9 = cgc_printf(v1 - 8462);\n
                return v9;\n
            }\n
        }\n
    }\n
}\n
", "4220934:sub_406806": null, "4220944:cgc_HandleConnectPacket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleConnectPacket(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    char v2;  // [bp-0x9]\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v4 = cgc_printf(v0 - 8431);\n
        return v4;\n
    }\n
    else if (a0 < 1)\n
    {\n
        v4 = cgc_printf(v0 - 8405);\n
        return v4;\n
    }\n
    else\n
    {\n
        v2 = *(v3);\n
        if (a0 != v2 + 1)\n
        {\n
            v4 = cgc_printf(v0 - 8372);\n
            return v4;\n
        }\n
        else if (v2 >= 8)\n
        {\n
            v4 = cgc_printf(v0 - 8311);\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_memcpy(&v1, v3 + 1, v2);\n
            (&v1)[v2] = 0;\n
            v4 = cgc_printf(v0 - 8263);\n
            return v4;\n
        }\n
    }\n
}\n
", "4221190:sub_406906": null, "4221200:cgc_HandleDisconnectPacket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleDisconnectPacket(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    char v2;  // [bp-0x9]\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v4 = cgc_printf(v0 - 8232);\n
        return v4;\n
    }\n
    else if (a0 < 1)\n
    {\n
        v4 = cgc_printf(v0 - 8203);\n
        return v4;\n
    }\n
    else\n
    {\n
        v2 = *(v3);\n
        if (a0 != v2 + 1)\n
        {\n
            v4 = cgc_printf(v0 - 8167);\n
            return v4;\n
        }\n
        else if (v2 >= 8)\n
        {\n
            v4 = cgc_printf(v0 - 8103);\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_memcpy(&v1, v3 + 1, v2);\n
            (&v1)[v2] = 0;\n
            v4 = cgc_printf(v0 - 8052);\n
            return v4;\n
        }\n
    }\n
}\n
", "4221446:sub_406a06": null, "4221456:cgc_destroy_packet_handler": "typedef struct struct_1 {\n
    char padding_0[584];\n
    unsigned int field_248;\n
    char padding_24c[4];\n
    struct struct_0 *field_250;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[52];\n
    struct struct_0 *field_34;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_g_packetHandlers;\n
\n
int cgc_destroy_packet_handler()\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_g_packetHandlers)\n
        cgc_free(v0->field_248);\n
    v4 = v0;\n
    v4->field_248 = 0;\n
    for (v2 = v4->field_250; v2; v2 = v1)\n
    {\n
        v1 = *((v2 + 52));\n
        cgc_free(v2);\n
    }\n
    v0->field_250 = 0;\n
    return v0;\n
}\n
", "4221593:sub_406a99": null, "4221600:cgc_simple_checksum16": "int cgc_simple_checksum16(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v3;  // eax\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    char *v5;  // eax\n
\n
    v0 = v3;\n
    v4 = v2;\n
    v1 = 49069;\n
    while (true)\n
    {\n
        *(&v4) = a0;\n
        a0 = v4 - 1;\n
        if (v4 <= 0)\n
            break;\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v4 = v1 + *(v5);\n
        v1 = v4;\n
    }\n
    return v1;\n
}\n
", "4221682:sub_406af2": null, "4221696:cgc_receive_packet": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_packet(unsigned int v6, char a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    char v4;  // [bp-0xf]\n
    unsigned short v5;  // [bp-0xe]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
        return v6;\n
    v7 = a0;\n
    if (!v7)\n
        return a0;\n
    v5 = cgc_simple_checksum16(v6, a0);\n
    v7 = a1;\n
    if (v7 != v5)\n
        return a1;\n
    v4 = *(v6);\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v7 = v2;\n
        if (v7 >= *((v1 + 588)))\n
            break;\n
        if (*((*((v1 + 584)) + (v2 << 3))) == v4)\n
        {\n
            v3 = 1;\n
            v0 = a0 - 1;\n
            cgc_add_new_packet(v4, *((*((v1 + 584)) + v2 * 8 + 4)), v6 + 1);\n
            v8 = v1;\n
            *((v8 + 596)) = *((v8 + 596)) + 1;\n
            *((v8 + 600)) = a0 + *((v8 + 600));\n
        }\n
        v2 += 1;\n
    }\n
    if (v3)\n
        return v7;\n
    v7 = v1;\n
    *((v7 + 604)) = *((v7 + 604)) + 1;\n
}\n
", "4222035:sub_406c53": null, "4222048:cgc_add_new_packet": "typedef struct struct_0 {\n
    char padding_0[592];\n
    unsigned int field_250;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    unsigned int field_34;\n
    unsigned int field_38;\n
    char field_3c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_new_packet(char v3, unsigned int a0, char *a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = cgc_malloc(64);\n
    v1->field_3c = v3;\n
    v1->field_38 = a0;\n
    v1->field_34 = 0;\n
    v1->field_30 = a2;\n
    cgc_memcpy(v1, a1, a2);\n
    if (!v0->field_250)\n
    {\n
        v5 = v0;\n
    }\n
    else\n
    {\n
        v5 = v0;\n
        v1->field_34 = *((v5 + 592));\n
    }\n
    *((v5 + 592)) = v1;\n
    return v5;\n
}\n
", "4222227:sub_406d13": null, "4222240:cgc_display_packets": "typedef struct struct_2 {\n
    char padding_0[592];\n
    struct struct_1 *field_250;\n
    unsigned int field_254;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    struct struct_1 *field_34;\n
    struct struct_0 *field_38;\n
    char field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_40a748;\n
extern unsigned int g_40a74c;\n
\n
int cgc_display_packets()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_2 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_2 *v8;  // ebx\n
    struct_1 *v9;  // eax, Other Possible Types: unsigned int\n
    unsigned int v10;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v0 = g_40a748;\n
    v1 = g_40a74c;\n
    cgc_printf(\"Total $d bytes received and $d invalid packets.\\n
\");\n
    v8 = v2;\n
    v0 = v8->field_254;\n
    cgc_printf(&v8[15].padding_0[99]);\n
    v3 = 0;\n
    v9 = v2->field_250;\n
    while (true)\n
    {\n
        v4 = v9;\n
        if (!v4)\n
            break;\n
        v0 = v3;\n
        v1 = v4->field_3c;\n
        cgc_printf(&v2[15].padding_0[66]);\n
        v0 = v4->field_30;\n
        v4->field_38(v4);\n
        v3 += 1;\n
        v9 = v4->field_34;\n
    }\n
    v10 = v5;\n
    return v9;\n
}\n
", "4222450:sub_406df2": null, "4222464:cgc_get_rand_uniform": null, "4222558:sub_406e5e": null, "4222560:cgc_add_awgn_to_sample": null, "4222920:sub_406fc8": null, "4222928:cgc_receive_sample": "extern unsigned long long _GLOBAL_OFFSET_TABLE_[120];\n
\n
int cgc_receive_sample(char v15)\n
{\n
    unsigned long long v0[120];  // [bp-0x4c]\n
    int tmp_5;  // tmp #5\n
    unsigned short v1;  // [bp-0x48]\n
    unsigned short v2;  // [bp-0x46]\n
    unsigned long v3;  // [bp-0x44]\n
    unsigned long v4;  // [bp-0x3c]\n
    unsigned int v5;  // [bp-0x34]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned long v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned long v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    char v13;  // [bp-0x9]\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned long long v17[120];  // eax\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v30;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v40;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v48;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v56;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int v60;  // ftop\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v65;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v74;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v82;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v90;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int v94;  // ftop\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v99;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v108;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v116;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
\n
    v14 = v16;\n
    *(&v0[0]) = &_GLOBAL_OFFSET_TABLE_[0];\n
    tmp_5 = cgc_add_awgn_to_sample(v15);\n
    v17 = v0;\n
    v15 = tmp_5;\n
    v12 = 1085251875;\n
    v11 = 2783138808;\n
    v19 = v18 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = v19 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v20 = v19 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[76]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v21 = v20 + 1;\n
    }\n
    else\n
    {\n
        v17[76] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v21 = v20 + 1;\n
    }\n
    v22 = v21 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v23 = v22 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v23 = v22 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[77]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v24 = v23 + 1;\n
    }\n
    else\n
    {\n
        v17[77] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v24 = v23 + 1;\n
    }\n
    v25 = v24 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v26 = v25 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v26 = v25 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[78]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v27 = v26 + 1;\n
    }\n
    else\n
    {\n
        v17[78] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v27 = v26 + 1;\n
    }\n
    v28 = v27 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v29 = v28 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v29 = v28 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[79]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v30 = v29 + 1;\n
    }\n
    else\n
    {\n
        v17[79] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v30 = v29 + 1;\n
    }\n
    v31 = v30 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v32 = v31 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v32 = v31 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[80]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v33 = v32 + 1;\n
    }\n
    else\n
    {\n
        v17[80] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v33 = v32 + 1;\n
    }\n
    v34 = v33 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v35 = v34 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v35 = v34 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[81]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v17[81] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v2 = v15;\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v39 = v38 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v40 = v39 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v40 = v39 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t48,1] = t49\n
    [D] PutI(136:I8x8)[t48,1] = 0x01\n
    [D] PutI(136:I8x8)[t48,0] = 0x00\n
    v41 = v40 + 1;\n
    *(&v17[82]) = ([D] GetI(136:I8x8)[t73,0] ? [D] GetI(72:F64x8)[t73,0] : nan);\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    [D] PutI(72:F64x8)[t82,0] = t85\n
    [D] PutI(136:I8x8)[t82,0] = 0x01\n
    *(&v17[83]) = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v41 - 0 - 0;\n
    [D] PutI(72:F64x8)[t106,0] = t109\n
    [D] PutI(136:I8x8)[t106,0] = 0x01\n
    *(&v17[84]) = ([D] GetI(136:I8x8)[t121,0] ? [D] GetI(72:F64x8)[t121,0] : nan);\n
    [D] PutI(136:I8x8)[t121,0] = 0x00\n
    v44 = v43 - 0;\n
    [D] PutI(72:F64x8)[t130,0] = t133\n
    [D] PutI(136:I8x8)[t130,0] = 0x01\n
    *(&v17[85]) = ([D] GetI(136:I8x8)[t145,0] ? [D] GetI(72:F64x8)[t145,0] : nan);\n
    [D] PutI(136:I8x8)[t145,0] = 0x00\n
    v45 = v44 - 0;\n
    [D] PutI(72:F64x8)[t154,0] = t157\n
    [D] PutI(136:I8x8)[t154,0] = 0x01\n
    *(&v17[86]) = ([D] GetI(136:I8x8)[t169,0] ? [D] GetI(72:F64x8)[t169,0] : nan);\n
    [D] PutI(136:I8x8)[t169,0] = 0x00\n
    v46 = v45 - 0;\n
    [D] PutI(72:F64x8)[t178,0] = t181\n
    [D] PutI(136:I8x8)[t178,0] = 0x01\n
    *(&v17[87]) = ([D] GetI(136:I8x8)[t193,0] ? [D] GetI(72:F64x8)[t193,0] : nan);\n
    [D] PutI(136:I8x8)[t193,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t202,0] = t205\n
    [D] PutI(136:I8x8)[t202,0] = 0x01\n
    *(&v17[88]) = ([D] GetI(136:I8x8)[t217,0] ? [D] GetI(72:F64x8)[t217,0] : nan);\n
    [D] PutI(136:I8x8)[t217,0] = 0x00\n
    v48 = v47 - 0;\n
    [D] PutI(72:F64x8)[t226,0] = t229\n
    [D] PutI(136:I8x8)[t226,0] = 0x01\n
    v49 = v48 - 1;\n
    [D] PutI(72:F64x8)[t238,0] = t241\n
    [D] PutI(136:I8x8)[t238,0] = 0x01\n
    [D] PutI(72:F64x8)[t248,1] = t249\n
    [D] PutI(136:I8x8)[t248,1] = 0x01\n
    [D] PutI(136:I8x8)[t248,0] = 0x00\n
    v50 = v49 - 0;\n
    [D] PutI(72:F64x8)[t270,0] = t273\n
    [D] PutI(136:I8x8)[t270,0] = 0x01\n
    v51 = v50 - 1;\n
    [D] PutI(72:F64x8)[t282,0] = t285\n
    [D] PutI(136:I8x8)[t282,0] = 0x01\n
    [D] PutI(72:F64x8)[t292,1] = t293\n
    [D] PutI(136:I8x8)[t292,1] = 0x01\n
    [D] PutI(136:I8x8)[t292,0] = 0x00\n
    v52 = v51 - 0;\n
    [D] PutI(72:F64x8)[t314,0] = t317\n
    [D] PutI(136:I8x8)[t314,0] = 0x01\n
    [D] PutI(72:F64x8)[t325,1] = t326\n
    [D] PutI(136:I8x8)[t325,1] = 0x01\n
    [D] PutI(72:F64x8)[t345,0] = t349\n
    [D] PutI(136:I8x8)[t345,0] = 0x01\n
    [D] PutI(72:F64x8)[t345,1] = t342\n
    [D] PutI(136:I8x8)[t345,1] = 0x01\n
    [D] PutI(72:F64x8)[t360,2] = t361\n
    [D] PutI(136:I8x8)[t360,2] = 0x01\n
    [D] PutI(136:I8x8)[t360,0] = 0x00\n
    v53 = v52 - 0;\n
    [D] PutI(72:F64x8)[t382,0] = t385\n
    [D] PutI(136:I8x8)[t382,0] = 0x01\n
    v54 = v53 - 1;\n
    [D] PutI(72:F64x8)[t394,0] = t397\n
    [D] PutI(136:I8x8)[t394,0] = 0x01\n
    [D] PutI(72:F64x8)[t404,1] = t405\n
    [D] PutI(136:I8x8)[t404,1] = 0x01\n
    [D] PutI(72:F64x8)[t424,0] = t428\n
    [D] PutI(136:I8x8)[t424,0] = 0x01\n
    [D] PutI(72:F64x8)[t424,1] = t421\n
    [D] PutI(136:I8x8)[t424,1] = 0x01\n
    [D] PutI(72:F64x8)[t439,3] = t440\n
    [D] PutI(136:I8x8)[t439,3] = 0x01\n
    [D] PutI(136:I8x8)[t439,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t461,0] = t464\n
    [D] PutI(136:I8x8)[t461,0] = 0x01\n
    v56 = v55 - 1;\n
    [D] PutI(72:F64x8)[t473,0] = t476\n
    [D] PutI(136:I8x8)[t473,0] = 0x01\n
    [D] PutI(72:F64x8)[t483,1] = t484\n
    [D] PutI(136:I8x8)[t483,1] = 0x01\n
    [D] PutI(136:I8x8)[t483,0] = 0x00\n
    v57 = v56 + 1;\n
    [D] PutI(72:F64x8)[t503,3] = t504\n
    [D] PutI(136:I8x8)[t503,3] = 0x01\n
    [D] PutI(136:I8x8)[t503,0] = 0x00\n
    v58 = v57 - 0;\n
    [D] PutI(72:F64x8)[t525,0] = t528\n
    [D] PutI(136:I8x8)[t525,0] = 0x01\n
    v59 = v58 - 1;\n
    [D] PutI(72:F64x8)[t537,0] = t540\n
    [D] PutI(136:I8x8)[t537,0] = 0x01\n
    [D] PutI(72:F64x8)[t547,1] = t548\n
    [D] PutI(136:I8x8)[t547,1] = 0x01\n
    [D] PutI(136:I8x8)[t547,0] = 0x00\n
    v60 = v59 + 1;\n
    [D] PutI(72:F64x8)[t567,3] = t568\n
    [D] PutI(136:I8x8)[t567,3] = 0x01\n
    [D] PutI(136:I8x8)[t567,0] = 0x00\n
    v61 = v60 - 0;\n
    [D] PutI(72:F64x8)[t589,0] = t592\n
    [D] PutI(136:I8x8)[t589,0] = 0x01\n
    v62 = v61 - 1;\n
    [D] PutI(72:F64x8)[t601,0] = t604\n
    [D] PutI(136:I8x8)[t601,0] = 0x01\n
    [D] PutI(72:F64x8)[t611,1] = t612\n
    [D] PutI(136:I8x8)[t611,1] = 0x01\n
    [D] PutI(136:I8x8)[t611,0] = 0x00\n
    v63 = v62 + 1;\n
    [D] PutI(72:F64x8)[t631,3] = t632\n
    [D] PutI(136:I8x8)[t631,3] = 0x01\n
    [D] PutI(136:I8x8)[t631,0] = 0x00\n
    v64 = v63 - 0;\n
    [D] PutI(72:F64x8)[t653,0] = t656\n
    [D] PutI(136:I8x8)[t653,0] = 0x01\n
    v65 = v64 - 1;\n
    [D] PutI(72:F64x8)[t665,0] = t668\n
    [D] PutI(136:I8x8)[t665,0] = 0x01\n
    [D] PutI(72:F64x8)[t675,1] = t676\n
    [D] PutI(136:I8x8)[t675,1] = 0x01\n
    [D] PutI(136:I8x8)[t675,0] = 0x00\n
    v66 = v65 + 1;\n
    [D] PutI(72:F64x8)[t695,3] = t696\n
    [D] PutI(136:I8x8)[t695,3] = 0x01\n
    [D] PutI(136:I8x8)[t695,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t717,0] = t720\n
    [D] PutI(136:I8x8)[t717,0] = 0x01\n
    v68 = v67 - 1;\n
    [D] PutI(72:F64x8)[t729,0] = t732\n
    [D] PutI(136:I8x8)[t729,0] = 0x01\n
    [D] PutI(72:F64x8)[t739,1] = t740\n
    [D] PutI(136:I8x8)[t739,1] = 0x01\n
    [D] PutI(136:I8x8)[t739,0] = 0x00\n
    v69 = v68 + 1;\n
    [D] PutI(72:F64x8)[t759,3] = t760\n
    [D] PutI(136:I8x8)[t759,3] = 0x01\n
    [D] PutI(136:I8x8)[t759,0] = 0x00\n
    v70 = v69 + 1;\n
    [D] PutI(72:F64x8)[t782,0] = t786\n
    [D] PutI(136:I8x8)[t782,0] = 0x01\n
    [D] PutI(72:F64x8)[t782,2] = t779\n
    [D] PutI(136:I8x8)[t782,2] = 0x01\n
    *(&v17[89]) = ([D] GetI(136:I8x8)[t802,0] ? [D] GetI(72:F64x8)[t802,0] : nan);\n
    [D] PutI(136:I8x8)[t802,0] = 0x00\n
    v71 = v70 - 0;\n
    [D] PutI(72:F64x8)[t811,0] = t814\n
    [D] PutI(136:I8x8)[t811,0] = 0x01\n
    v10 = ([D] GetI(136:I8x8)[t826,0] ? [D] GetI(72:F64x8)[t826,0] : nan);\n
    [D] PutI(136:I8x8)[t826,0] = 0x00\n
    v72 = v71 + 1;\n
    v9 = 1085251875;\n
    v8 = 2787536854;\n
    v73 = v72 - 1;\n
    [D] PutI(72:F64x8)[t839,0] = t842\n
    [D] PutI(136:I8x8)[t839,0] = 0x01\n
    *(&v17[90]) = ([D] GetI(136:I8x8)[t854,0] ? [D] GetI(72:F64x8)[t854,0] : nan);\n
    [D] PutI(136:I8x8)[t854,0] = 0x00\n
    v74 = v73 - 0;\n
    [D] PutI(72:F64x8)[t863,0] = t866\n
    [D] PutI(136:I8x8)[t863,0] = 0x01\n
    *(&v17[91]) = ([D] GetI(136:I8x8)[t878,0] ? [D] GetI(72:F64x8)[t878,0] : nan);\n
    [D] PutI(136:I8x8)[t878,0] = 0x00\n
    v75 = v74 - 0;\n
    [D] PutI(72:F64x8)[t887,0] = t890\n
    [D] PutI(136:I8x8)[t887,0] = 0x01\n
    *(&v17[92]) = ([D] GetI(136:I8x8)[t902,0] ? [D] GetI(72:F64x8)[t902,0] : nan);\n
    [D] PutI(136:I8x8)[t902,0] = 0x00\n
    v76 = v75 - 0;\n
    [D] PutI(72:F64x8)[t911,0] = t914\n
    [D] PutI(136:I8x8)[t911,0] = 0x01\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[93]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v77 = v76 + 1;\n
    }\n
    else\n
    {\n
        v17[93] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v77 = v76 + 1;\n
    }\n
    v78 = v77 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v79 = v78 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v79 = v78 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[94]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v80 = v79 + 1;\n
    }\n
    else\n
    {\n
        v17[94] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v80 = v79 + 1;\n
    }\n
    v81 = v80 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v82 = v81 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v82 = v81 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *(&v17[95]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v83 = v82 + 1;\n
    }\n
    else\n
    {\n
        v17[95] = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        v83 = v82 + 1;\n
    }\n
    v1 = v15;\n
    v84 = v83 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v85 = v84 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v85 = v84 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v86 = v85 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v87 = v86 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v87 = v86 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t57,1] = t58\n
    [D] PutI(136:I8x8)[t57,1] = 0x01\n
    [D] PutI(136:I8x8)[t57,0] = 0x00\n
    v88 = v87 + 1;\n
    *(&v17[96]) = ([D] GetI(136:I8x8)[t82,0] ? [D] GetI(72:F64x8)[t82,0] : nan);\n
    [D] PutI(136:I8x8)[t82,0] = 0x00\n
    [D] PutI(72:F64x8)[t91,0] = t94\n
    [D] PutI(136:I8x8)[t91,0] = 0x01\n
    *(&v17[97]) = ([D] GetI(136:I8x8)[t106,0] ? [D] GetI(72:F64x8)[t106,0] : nan);\n
    [D] PutI(136:I8x8)[t106,0] = 0x00\n
    v90 = v88 - 0 - 0;\n
    [D] PutI(72:F64x8)[t115,0] = t118\n
    [D] PutI(136:I8x8)[t115,0] = 0x01\n
    *(&v17[98]) = ([D] GetI(136:I8x8)[t130,0] ? [D] GetI(72:F64x8)[t130,0] : nan);\n
    [D] PutI(136:I8x8)[t130,0] = 0x00\n
    v91 = v90 - 0;\n
    [D] PutI(72:F64x8)[t139,0] = t142\n
    [D] PutI(136:I8x8)[t139,0] = 0x01\n
    *(&v17[99]) = ([D] GetI(136:I8x8)[t154,0] ? [D] GetI(72:F64x8)[t154,0] : nan);\n
    [D] PutI(136:I8x8)[t154,0] = 0x00\n
    v92 = v91 - 0;\n
    [D] PutI(72:F64x8)[t163,0] = t166\n
    [D] PutI(136:I8x8)[t163,0] = 0x01\n
    *(&v17[100]) = ([D] GetI(136:I8x8)[t178,0] ? [D] GetI(72:F64x8)[t178,0] : nan);\n
    [D] PutI(136:I8x8)[t178,0] = 0x00\n
    v93 = v92 - 0;\n
    [D] PutI(72:F64x8)[t187,0] = t190\n
    [D] PutI(136:I8x8)[t187,0] = 0x01\n
    *(&v17[101]) = ([D] GetI(136:I8x8)[t202,0] ? [D] GetI(72:F64x8)[t202,0] : nan);\n
    [D] PutI(136:I8x8)[t202,0] = 0x00\n
    v94 = v93 - 0;\n
    [D] PutI(72:F64x8)[t211,0] = t214\n
    [D] PutI(136:I8x8)[t211,0] = 0x01\n
    *(&v17[102]) = ([D] GetI(136:I8x8)[t226,0] ? [D] GetI(72:F64x8)[t226,0] : nan);\n
    [D] PutI(136:I8x8)[t226,0] = 0x00\n
    v95 = v94 - 0;\n
    [D] PutI(72:F64x8)[t235,0] = t238\n
    [D] PutI(136:I8x8)[t235,0] = 0x01\n
    v96 = v95 - 1;\n
    [D] PutI(72:F64x8)[t247,0] = t250\n
    [D] PutI(136:I8x8)[t247,0] = 0x01\n
    [D] PutI(72:F64x8)[t257,1] = t258\n
    [D] PutI(136:I8x8)[t257,1] = 0x01\n
    [D] PutI(136:I8x8)[t257,0] = 0x00\n
    v97 = v96 - 0;\n
    [D] PutI(72:F64x8)[t279,0] = t282\n
    [D] PutI(136:I8x8)[t279,0] = 0x01\n
    v98 = v97 - 1;\n
    [D] PutI(72:F64x8)[t291,0] = t294\n
    [D] PutI(136:I8x8)[t291,0] = 0x01\n
    [D] PutI(72:F64x8)[t301,1] = t302\n
    [D] PutI(136:I8x8)[t301,1] = 0x01\n
    [D] PutI(136:I8x8)[t301,0] = 0x00\n
    v99 = v98 + 1;\n
    [D] PutI(72:F64x8)[t321,0] = t322\n
    [D] PutI(136:I8x8)[t321,0] = 0x01\n
    [D] PutI(72:F64x8)[t338,1] = t339\n
    [D] PutI(136:I8x8)[t338,1] = 0x01\n
    [D] PutI(136:I8x8)[t338,0] = 0x00\n
    v100 = v99 - 0;\n
    [D] PutI(72:F64x8)[t360,0] = t363\n
    [D] PutI(136:I8x8)[t360,0] = 0x01\n
    [D] PutI(72:F64x8)[t370,3] = t371\n
    [D] PutI(136:I8x8)[t370,3] = 0x01\n
    [D] PutI(136:I8x8)[t370,0] = 0x00\n
    v101 = v100 + 1;\n
    [D] PutI(72:F64x8)[t390,2] = t391\n
    [D] PutI(136:I8x8)[t390,2] = 0x01\n
    [D] PutI(136:I8x8)[t390,0] = 0x00\n
    v102 = v101 - 0;\n
    [D] PutI(72:F64x8)[t412,0] = t415\n
    [D] PutI(136:I8x8)[t412,0] = 0x01\n
    v103 = v102 - 1;\n
    [D] PutI(72:F64x8)[t422,0] = t425\n
    [D] PutI(136:I8x8)[t422,0] = 0x01\n
    [D] PutI(72:F64x8)[t432,1] = t433\n
    [D] PutI(136:I8x8)[t432,1] = 0x01\n
    [D] PutI(72:F64x8)[t452,0] = t456\n
    [D] PutI(136:I8x8)[t452,0] = 0x01\n
    [D] PutI(72:F64x8)[t452,1] = t449\n
    [D] PutI(136:I8x8)[t452,1] = 0x01\n
    [D] PutI(72:F64x8)[t467,3] = t468\n
    [D] PutI(136:I8x8)[t467,3] = 0x01\n
    [D] PutI(136:I8x8)[t467,0] = 0x00\n
    v104 = v103 - 0;\n
    [D] PutI(72:F64x8)[t489,0] = t492\n
    [D] PutI(136:I8x8)[t489,0] = 0x01\n
    v105 = v104 - 1;\n
    [D] PutI(72:F64x8)[t501,0] = t504\n
    [D] PutI(136:I8x8)[t501,0] = 0x01\n
    [D] PutI(72:F64x8)[t511,1] = t512\n
    [D] PutI(136:I8x8)[t511,1] = 0x01\n
    [D] PutI(136:I8x8)[t511,0] = 0x00\n
    v106 = v105 + 1;\n
    [D] PutI(72:F64x8)[t531,3] = t532\n
    [D] PutI(136:I8x8)[t531,3] = 0x01\n
    [D] PutI(136:I8x8)[t531,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t553,0] = t556\n
    [D] PutI(136:I8x8)[t553,0] = 0x01\n
    [D] PutI(72:F64x8)[t563,0] = t564\n
    [D] PutI(136:I8x8)[t563,0] = 0x01\n
    [D] PutI(72:F64x8)[t580,3] = t581\n
    [D] PutI(136:I8x8)[t580,3] = 0x01\n
    [D] PutI(136:I8x8)[t580,0] = 0x00\n
    v108 = v107 - 0;\n
    [D] PutI(72:F64x8)[t602,0] = t605\n
    [D] PutI(136:I8x8)[t602,0] = 0x01\n
    v109 = v108 - 1;\n
    [D] PutI(72:F64x8)[t614,0] = t617\n
    [D] PutI(136:I8x8)[t614,0] = 0x01\n
    [D] PutI(72:F64x8)[t624,1] = t625\n
    [D] PutI(136:I8x8)[t624,1] = 0x01\n
    [D] PutI(136:I8x8)[t624,0] = 0x00\n
    v110 = v109 + 1;\n
    [D] PutI(72:F64x8)[t644,3] = t645\n
    [D] PutI(136:I8x8)[t644,3] = 0x01\n
    [D] PutI(136:I8x8)[t644,0] = 0x00\n
    v111 = v110 - 0;\n
    [D] PutI(72:F64x8)[t666,0] = t669\n
    [D] PutI(136:I8x8)[t666,0] = 0x01\n
    [D] PutI(72:F64x8)[t676,1] = t677\n
    [D] PutI(136:I8x8)[t676,1] = 0x01\n
    [D] PutI(136:I8x8)[t676,0] = 0x00\n
    v112 = v111 + 1;\n
    [D] PutI(72:F64x8)[t696,2] = t697\n
    [D] PutI(136:I8x8)[t696,2] = 0x01\n
    [D] PutI(136:I8x8)[t696,0] = 0x00\n
    v113 = v112 + 1;\n
    [D] PutI(72:F64x8)[t719,0] = t723\n
    [D] PutI(136:I8x8)[t719,0] = 0x01\n
    [D] PutI(72:F64x8)[t719,1] = t716\n
    [D] PutI(136:I8x8)[t719,1] = 0x01\n
    *(&v17[103]) = ([D] GetI(136:I8x8)[t739,0] ? [D] GetI(72:F64x8)[t739,0] : nan);\n
    [D] PutI(136:I8x8)[t739,0] = 0x00\n
    v114 = v113 - 0;\n
    [D] PutI(72:F64x8)[t748,0] = t751\n
    [D] PutI(136:I8x8)[t748,0] = 0x01\n
    v7 = ([D] GetI(136:I8x8)[t763,0] ? [D] GetI(72:F64x8)[t763,0] : nan);\n
    [D] PutI(136:I8x8)[t763,0] = 0x00\n
    v115 = v114 + 1;\n
    v6 = 1080530244;\n
    v5 = 0xe06f4100;\n
    v116 = v115 - 1;\n
    [D] PutI(72:F64x8)[t776,0] = t779\n
    [D] PutI(136:I8x8)[t776,0] = 0x01\n
    *(&v17[104]) = ([D] GetI(136:I8x8)[t791,0] ? [D] GetI(72:F64x8)[t791,0] : nan);\n
    [D] PutI(136:I8x8)[t791,0] = 0x00\n
    v117 = v116 - 0;\n
    [D] PutI(72:F64x8)[t800,0] = t803\n
    [D] PutI(136:I8x8)[t800,0] = 0x01\n
    *(&v17[105]) = ([D] GetI(136:I8x8)[t815,0] ? [D] GetI(72:F64x8)[t815,0] : nan);\n
    [D] PutI(136:I8x8)[t815,0] = 0x00\n
    v118 = v117 - 0;\n
    [D] PutI(72:F64x8)[t824,0] = t827\n
    [D] PutI(136:I8x8)[t824,0] = 0x01\n
    *(&v17[106]) = ([D] GetI(136:I8x8)[t839,0] ? [D] GetI(72:F64x8)[t839,0] : nan);\n
    [D] PutI(136:I8x8)[t839,0] = 0x00\n
    v119 = v118 - 0;\n
    [D] PutI(72:F64x8)[t848,0] = t851\n
    [D] PutI(136:I8x8)[t848,0] = 0x01\n
    [D] PutI(72:F64x8)[t858,0] = t859\n
    [D] PutI(136:I8x8)[t858,0] = 0x01\n
    v120 = v119 - 1;\n
    [D] PutI(72:F64x8)[t877,0] = t880\n
    [D] PutI(136:I8x8)[t877,0] = 0x01\n
    [D] PutI(72:F64x8)[t887,1] = t888\n
    [D] PutI(136:I8x8)[t887,1] = 0x01\n
    [D] PutI(72:F64x8)[t907,0] = t911\n
    [D] PutI(136:I8x8)[t907,0] = 0x01\n
    [D] PutI(72:F64x8)[t907,1] = t904\n
    [D] PutI(136:I8x8)[t907,1] = 0x01\n
    *(&v17[107]) = ([D] GetI(136:I8x8)[t927,0] ? [D] GetI(72:F64x8)[t927,0] : nan);\n
    [D] PutI(136:I8x8)[t927,0] = 0x00\n
    v121 = v120 - 0;\n
    [D] PutI(72:F64x8)[t936,0] = t939\n
    [D] PutI(136:I8x8)[t936,0] = 0x01\n
    *(&v17[108]) = ([D] GetI(136:I8x8)[t951,0] ? [D] GetI(72:F64x8)[t951,0] : nan);\n
    [D] PutI(136:I8x8)[t951,0] = 0x00\n
    [D] PutI(72:F64x8)[t960,0] = t963\n
    [D] PutI(136:I8x8)[t960,0] = 0x01\n
    *(&v17[109]) = ([D] GetI(136:I8x8)[t975,0] ? [D] GetI(72:F64x8)[t975,0] : nan);\n
    [D] PutI(136:I8x8)[t975,0] = 0x00\n
    [D] PutI(72:F64x8)[t984,0] = t987\n
    [D] PutI(136:I8x8)[t984,0] = 0x01\n
    *(&v17[110]) = ([D] GetI(136:I8x8)[t999,0] ? [D] GetI(72:F64x8)[t999,0] : nan);\n
    [D] PutI(136:I8x8)[t999,0] = 0x00\n
    [D] PutI(72:F64x8)[t1008,0] = t1011\n
    [D] PutI(136:I8x8)[t1008,0] = 0x01\n
    [D] PutI(72:F64x8)[t1020,0] = t1023\n
    [D] PutI(136:I8x8)[t1020,0] = 0x01\n
    [D] PutI(72:F64x8)[t1030,1] = t1031\n
    [D] PutI(136:I8x8)[t1030,1] = 0x01\n
    [D] PutI(136:I8x8)[t1030,0] = 0x00\n
    [D] PutI(72:F64x8)[t1052,0] = t1055\n
    [D] PutI(136:I8x8)[t1052,0] = 0x01\n
    [D] PutI(72:F64x8)[t1064,0] = t1067\n
    [D] PutI(136:I8x8)[t1064,0] = 0x01\n
    [D] PutI(72:F64x8)[t1074,1] = t1075\n
    [D] PutI(136:I8x8)[t1074,1] = 0x01\n
    [D] PutI(136:I8x8)[t1074,0] = 0x00\n
    [D] PutI(72:F64x8)[t1094,0] = t1095\n
    [D] PutI(136:I8x8)[t1094,0] = 0x01\n
    [D] PutI(72:F64x8)[t1111,1] = t1112\n
    [D] PutI(136:I8x8)[t1111,1] = 0x01\n
    [D] PutI(136:I8x8)[t1111,0] = 0x00\n
    [D] PutI(72:F64x8)[t1133,0] = t1136\n
    [D] PutI(136:I8x8)[t1133,0] = 0x01\n
    [D] PutI(72:F64x8)[t1145,0] = t1148\n
    [D] PutI(136:I8x8)[t1145,0] = 0x01\n
    [D] PutI(72:F64x8)[t47,1] = t48\n
    [D] PutI(136:I8x8)[t47,1] = 0x01\n
    [D] PutI(72:F64x8)[t67,0] = t71\n
    [D] PutI(136:I8x8)[t67,0] = 0x01\n
    [D] PutI(72:F64x8)[t67,1] = t64\n
    [D] PutI(136:I8x8)[t67,1] = 0x01\n
    [D] PutI(72:F64x8)[t82,2] = t83\n
    [D] PutI(136:I8x8)[t82,2] = 0x01\n
    [D] PutI(136:I8x8)[t82,0] = 0x00\n
    [D] PutI(72:F64x8)[t104,0] = t107\n
    [D] PutI(136:I8x8)[t104,0] = 0x01\n
    [D] PutI(72:F64x8)[t116,0] = t119\n
    [D] PutI(136:I8x8)[t116,0] = 0x01\n
    [D] PutI(72:F64x8)[t126,1] = t127\n
    [D] PutI(136:I8x8)[t126,1] = 0x01\n
    [D] PutI(72:F64x8)[t146,0] = t150\n
    [D] PutI(136:I8x8)[t146,0] = 0x01\n
    [D] PutI(72:F64x8)[t146,1] = t143\n
    [D] PutI(136:I8x8)[t146,1] = 0x01\n
    [D] PutI(72:F64x8)[t161,3] = t162\n
    [D] PutI(136:I8x8)[t161,3] = 0x01\n
    [D] PutI(136:I8x8)[t161,0] = 0x00\n
    [D] PutI(72:F64x8)[t183,0] = t186\n
    [D] PutI(136:I8x8)[t183,0] = 0x01\n
    [D] PutI(72:F64x8)[t195,0] = t198\n
    [D] PutI(136:I8x8)[t195,0] = 0x01\n
    [D] PutI(72:F64x8)[t205,1] = t206\n
    [D] PutI(136:I8x8)[t205,1] = 0x01\n
    [D] PutI(72:F64x8)[t225,0] = t229\n
    [D] PutI(136:I8x8)[t225,0] = 0x01\n
    [D] PutI(72:F64x8)[t225,1] = t222\n
    [D] PutI(136:I8x8)[t225,1] = 0x01\n
    [D] PutI(72:F64x8)[t240,4] = t241\n
    [D] PutI(136:I8x8)[t240,4] = 0x01\n
    [D] PutI(136:I8x8)[t240,0] = 0x00\n
    [D] PutI(72:F64x8)[t263,0] = t267\n
    [D] PutI(136:I8x8)[t263,0] = 0x01\n
    [D] PutI(72:F64x8)[t263,3] = t260\n
    [D] PutI(136:I8x8)[t263,3] = 0x01\n
    *(&v17[111]) = ([D] GetI(136:I8x8)[t283,0] ? [D] GetI(72:F64x8)[t283,0] : nan);\n
    [D] PutI(136:I8x8)[t283,0] = 0x00\n
    [D] PutI(72:F64x8)[t292,0] = t295\n
    [D] PutI(136:I8x8)[t292,0] = 0x01\n
    v4 = ([D] GetI(136:I8x8)[t307,0] ? [D] GetI(72:F64x8)[t307,0] : nan);\n
    [D] PutI(136:I8x8)[t307,0] = 0x00\n
    [D] PutI(72:F64x8)[t316,0] = t319\n
    [D] PutI(136:I8x8)[t316,0] = 0x01\n
    *(&v17[112]) = ([D] GetI(136:I8x8)[t331,0] ? [D] GetI(72:F64x8)[t331,0] : nan);\n
    [D] PutI(136:I8x8)[t331,0] = 0x00\n
    [D] PutI(72:F64x8)[t340,0] = t343\n
    [D] PutI(136:I8x8)[t340,0] = 0x01\n
    *(&v17[113]) = ([D] GetI(136:I8x8)[t355,0] ? [D] GetI(72:F64x8)[t355,0] : nan);\n
    [D] PutI(136:I8x8)[t355,0] = 0x00\n
    [D] PutI(72:F64x8)[t364,0] = t367\n
    [D] PutI(136:I8x8)[t364,0] = 0x01\n
    *(&v17[114]) = ([D] GetI(136:I8x8)[t379,0] ? [D] GetI(72:F64x8)[t379,0] : nan);\n
    [D] PutI(136:I8x8)[t379,0] = 0x00\n
    [D] PutI(72:F64x8)[t388,0] = t391\n
    [D] PutI(136:I8x8)[t388,0] = 0x01\n
    [D] PutI(72:F64x8)[t398,0] = t399\n
    [D] PutI(136:I8x8)[t398,0] = 0x01\n
    [D] PutI(72:F64x8)[t415,4] = t416\n
    [D] PutI(136:I8x8)[t415,4] = 0x01\n
    [D] PutI(136:I8x8)[t415,0] = 0x00\n
    [D] PutI(72:F64x8)[t438,0] = t442\n
    [D] PutI(136:I8x8)[t438,0] = 0x01\n
    [D] PutI(72:F64x8)[t438,3] = t435\n
    [D] PutI(136:I8x8)[t438,3] = 0x01\n
    *(&v17[115]) = ([D] GetI(136:I8x8)[t458,0] ? [D] GetI(72:F64x8)[t458,0] : nan);\n
    [D] PutI(136:I8x8)[t458,0] = 0x00\n
    [D] PutI(72:F64x8)[t467,0] = t470\n
    [D] PutI(136:I8x8)[t467,0] = 0x01\n
    *(&v17[116]) = ([D] GetI(136:I8x8)[t482,0] ? [D] GetI(72:F64x8)[t482,0] : nan);\n
    [D] PutI(136:I8x8)[t482,0] = 0x00\n
    [D] PutI(72:F64x8)[t491,0] = t494\n
    [D] PutI(136:I8x8)[t491,0] = 0x01\n
    *(&v17[117]) = ([D] GetI(136:I8x8)[t506,0] ? [D] GetI(72:F64x8)[t506,0] : nan);\n
    [D] PutI(136:I8x8)[t506,0] = 0x00\n
    [D] PutI(72:F64x8)[t515,0] = t518\n
    [D] PutI(136:I8x8)[t515,0] = 0x01\n
    *(&v17[118]) = ([D] GetI(136:I8x8)[t530,0] ? [D] GetI(72:F64x8)[t530,0] : nan);\n
    [D] PutI(136:I8x8)[t530,0] = 0x00\n
    [D] PutI(72:F64x8)[t539,0] = t542\n
    [D] PutI(136:I8x8)[t539,0] = 0x01\n
    [D] PutI(72:F64x8)[t551,0] = t554\n
    [D] PutI(136:I8x8)[t551,0] = 0x01\n
    [D] PutI(72:F64x8)[t561,1] = t562\n
    [D] PutI(136:I8x8)[t561,1] = 0x01\n
    [D] PutI(136:I8x8)[t561,0] = 0x00\n
    [D] PutI(72:F64x8)[t583,0] = t586\n
    [D] PutI(136:I8x8)[t583,0] = 0x01\n
    [D] PutI(72:F64x8)[t595,0] = t598\n
    [D] PutI(136:I8x8)[t595,0] = 0x01\n
    [D] PutI(72:F64x8)[t605,1] = t606\n
    [D] PutI(136:I8x8)[t605,1] = 0x01\n
    [D] PutI(136:I8x8)[t605,0] = 0x00\n
    [D] PutI(72:F64x8)[t625,5] = t626\n
    [D] PutI(136:I8x8)[t625,5] = 0x01\n
    [D] PutI(136:I8x8)[t625,0] = 0x00\n
    [D] PutI(72:F64x8)[t645,4] = t646\n
    [D] PutI(136:I8x8)[t645,4] = 0x01\n
    [D] PutI(136:I8x8)[t645,0] = 0x00\n
    [D] PutI(72:F64x8)[t667,0] = t670\n
    [D] PutI(136:I8x8)[t667,0] = 0x01\n
    [D] PutI(72:F64x8)[t677,1] = t678\n
    [D] PutI(136:I8x8)[t677,1] = 0x01\n
    [D] PutI(136:I8x8)[t677,0] = 0x00\n
    [D] PutI(72:F64x8)[t697,3] = t698\n
    [D] PutI(136:I8x8)[t697,3] = 0x01\n
    [D] PutI(136:I8x8)[t697,0] = 0x00\n
    [D] PutI(72:F64x8)[t719,0] = t722\n
    [D] PutI(136:I8x8)[t719,0] = 0x01\n
    [D] PutI(72:F64x8)[t729,2] = t730\n
    [D] PutI(136:I8x8)[t729,2] = 0x01\n
    [D] PutI(136:I8x8)[t729,0] = 0x00\n
    [D] PutI(72:F64x8)[t752,0] = t756\n
    [D] PutI(136:I8x8)[t752,0] = 0x01\n
    [D] PutI(72:F64x8)[t752,1] = t749\n
    [D] PutI(136:I8x8)[t752,1] = 0x01\n
    [D] PutI(72:F64x8)[t767,2] = t768\n
    [D] PutI(136:I8x8)[t767,2] = 0x01\n
    [D] PutI(136:I8x8)[t767,0] = 0x00\n
    [D] PutI(72:F64x8)[t789,0] = t792\n
    [D] PutI(136:I8x8)[t789,0] = 0x01\n
    [D] PutI(72:F64x8)[t799,1] = t800\n
    [D] PutI(136:I8x8)[t799,1] = 0x01\n
    [D] PutI(136:I8x8)[t799,0] = 0x00\n
    [D] PutI(72:F64x8)[t819,1] = t820\n
    [D] PutI(136:I8x8)[t819,1] = 0x01\n
    [D] PutI(136:I8x8)[t819,0] = 0x00\n
    *(&v17[119]) = ([D] GetI(136:I8x8)[t844,0] ? [D] GetI(72:F64x8)[t844,0] : nan);\n
    [D] PutI(136:I8x8)[t844,0] = 0x00\n
    [D] PutI(72:F64x8)[t853,0] = t856\n
    [D] PutI(136:I8x8)[t853,0] = 0x01\n
    v3 = ([D] GetI(136:I8x8)[t868,0] ? [D] GetI(72:F64x8)[t868,0] : nan);\n
    [D] PutI(136:I8x8)[t868,0] = 0x00\n
    [D] PutI(72:F64x8)[t877,0] = t880\n
    [D] PutI(136:I8x8)[t877,0] = 0x01\n
    [D] PutI(72:F64x8)[t889,0] = t892\n
    [D] PutI(136:I8x8)[t889,0] = 0x01\n
    [D] PutI(72:F64x8)[t902,0] = t906\n
    [D] PutI(136:I8x8)[t902,0] = 0x01\n
    [D] PutI(72:F64x8)[t902,1] = t899\n
    [D] PutI(136:I8x8)[t902,1] = 0x01\n
    [D] PutI(136:I8x8)[t922,0] = 0x00\n
    [D] PutI(72:F64x8)[t936,0] = t937\n
    [D] PutI(136:I8x8)[t936,0] = 0x01\n
    [D] PutI(136:I8x8)[t936,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t922,0] ? [D] GetI(72:F64x8)[t922,0] : nan), ([D] GetI(136:I8x8)[t922,1] ? [D] GetI(72:F64x8)[t922,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t922,0] ? [D] GetI(72:F64x8)[t922,0] : nan), ([D] GetI(136:I8x8)[t922,1] ? [D] GetI(72:F64x8)[t922,1] : nan)) & 69) >> 6)) & 1) == 1)\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    v13 = 1;\n
    return v13;\n
}\n
", "4224036:sub_407424": null, "4224048:cgc_init_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_prng()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x2c]\n
    char v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_random(&v2, 32, &v1))\n
        return cgc_seed_prng_array(&v2, 0x8);\n
    cgc_printf(v0 - 7896);\n
    cgc__terminate();\n
    return cgc_seed_prng_array(&v2, 0x8);\n
}\n
", "4224165:sub_4074a5": null, "4224176:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x260]\n
    unsigned int v1;  // [bp-0x254]\n
    char v2;  // [bp-0x24d]\n
    unsigned int v3;  // [bp-0x24c]\n
    char v4;  // [bp-0x248]\n
    char v5;  // [bp-0x244]\n
    void* v6;  // [bp-0x144], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x140]\n
    char v8;  // [bp-0x13c]\n
    unsigned int v9[4];  // [bp-0x10]\n
    void* v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebx\n
\n
    v11 = v13;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v12[0] = 0x4347c000;\n
    v9[0] = v12;\n
    v7 = v9[0] + v9[1] + v9[2] + v9[3];\n
    v7 &= 524287;\n
    v7 += 1452975630;\n
    cgc_printf(\"[[RECEIVER STARTED -- TIMESTAMP: $d]]\\n
\");\n
    cgc_init_prng();\n
    cgc_init_baseband(&v8);\n
    cgc_init_packet_handler();\n
    v6 = 0;\n
    while (v6 < 0x9600)\n
    {\n
        v0 = &v4;\n
        if (cgc_receive(0, &v5, 0x100))\n
        {\n
            cgc_printf(v1 - 7832);\n
            cgc__terminate();\n
        }\n
        if (*(&v4) < 1)\n
        {\n
            cgc_printf(v1 - 7803);\n
            cgc__terminate();\n
        }\n
        for (v3 = 0; v3 < *(&v4); v3 += 1)\n
        {\n
            if (v6 >= 0x9600)\n
                break;\n
            v2 = cgc_receive_sample((&v5)[v3]);\n
            cgc_process_sample(&v8, v2);\n
            v6 += 1;\n
        }\n
    }\n
    cgc_display_packets();\n
    cgc_destroy_packet_handler();\n
    v14 = v11;\n
    return 0;\n
}\n
", "4224720:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_random": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_log": null, "5242912:cgc_log10": null, "5242916:cgc_sqrt": null, "5242920:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}