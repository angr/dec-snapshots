{"4202496:_init": "extern struct_0 *g_40dea8;\n
\n
int _init()\n
{\n
    if (g_40dea8)\n
    {\n
        g_40dea8();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202688:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 48511;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 48447;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40dea4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40dea4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4203132:sub_40227c": null, "4203136:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_50->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_50 == v9)\n
        {\n
            v1->field_50 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_50 == v9)\n
    {\n
        v1->field_50 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4203819:sub_40252b": null, "4203824:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_50;\n
    v7->field_50 = v3;\n
    return v3;\n
}\n
", "4204024:sub_4025f8": null, "4204032:cgc_free": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 *[2], unsigned int, struct_0 *, struct struct_1 **\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_50 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_50 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_50;\n
    v2[1] = 0;\n
    if (v9->field_50)\n
    {\n
        v12 = v1;\n
        *((&v12->field_50->field_0 + (v12->field_50->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_50 = v7;\n
    return v1;\n
}\n
", "4204496:cgc_floor": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 *[2], unsigned int, struct_0 *, struct struct_1 **\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_50 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_50 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_50;\n
    v2[1] = 0;\n
    if (v9->field_50)\n
    {\n
        v12 = v1;\n
        *((&v12->field_50->field_0 + (v12->field_50->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_50 = v7;\n
    return v1;\n
}\n
", "4204660:sub_402874": null, "4204672:cgc_round_away_from_zero": null, "4204826:sub_40291a": null, "4204832:cgc_round": null, "4204976:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v0;\n
}\n
", "4205048:sub_4029f8": null, "4205056:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205110:sub_402a36": null, "4205120:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205174:sub_402a76": null, "4205184:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4205250:sub_402ac2": null, "4205264:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4205330:sub_402b12": null, "4205344:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4205398:sub_402b56": null, "4205408:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4205502:sub_402bbe": null, "4205504:cgc_isnan": null, "4205527:sub_402bd7": null, "4205536:cgc_isinf": null, "4205583:sub_402c0f": null, "4205584:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_402e42:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_402e1b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_402e1b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_402e1b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_402e42;\n
                if (!v4)\n
                {\n
LABEL_402d97:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_402e1b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_402d97;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_402e1b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4206172:sub_402e5c": null, "4206176:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    int tmp_27;  // tmp #27\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v9)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 1;\n
    for (v3 = 0; cgc_isspace(*(v9)); v9 += 1);\n
    for (v4 = 0; *(v9); v9 += 1)\n
    {\n
        if (*(v9) == 45)\n
        {\n
            if (!v4)\n
            {\n
                v5 = -1;\n
                v4 += 1;\n
            }\n
            else\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v9) != 43)\n
            {\n
                if (!cgc_isdigit(*(v9)))\n
                    break;\n
                if (v4 && v4 != 1)\n
                {\n
                    v8 = 0;\n
                    return v8;\n
                }\n
                v4 = 1;\n
                v0 = v7;\n
                v10 = v6 * 10;\n
                tmp_27 = v10;\n
                v12 = (v6 * 10 >> 32) + v0 * 10 + (*(v9) - 48 >> 31) + (tmp_27 + *(v9) - 48 < tmp_27);\n
                v6 = v10 + *(v9) - 48;\n
                v7 = v12;\n
                v3 += 1;\n
                if (v3 == 10)\n
                    break;\n
            }\n
            else if (!v4)\n
            {\n
                v4 += 1;\n
            }\n
            else\n
            {\n
                v8 = 0;\n
                return v8;\n
            }\n
        }\n
    }\n
    v13 = v6;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-24, size=4, endness=Iend_LE), Conv(1->32, (0x7fffffff<32> < esi<4>))), Conv(1->32, (0x7fffffff<32> < esi<4>))))\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v2 = v6;\n
    v2 *= v5;\n
    v8 = v2;\n
    return v8;\n
}\n
", "4206674:sub_403052": null, "4206688:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4206779:sub_4030bb": null, "4206784:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4206939:sub_40315b": null, "4206944:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4207052:sub_4031cc": null, "4207056:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4207134:sub_40321e": null, "4207136:cgc_strcmp": "int cgc_strcmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v2 + v0)) && !*((a0 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        if (!*((a0 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) < *((a0 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) <= *((a0 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4207374:sub_40330e": null, "4207376:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4207571:sub_4033d3": null, "4207584:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4207639:sub_403417": null, "4207648:cgc_receive_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = a0 - v4;\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v0 = &v2;\n
        if (cgc_receive(0, v6 + v4, v3))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v3 -= v2;\n
        v4 = v2 + v4;\n
    }\n
}\n
", "4207823:sub_4034cf": null, "4207824:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!v3)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4208038:sub_4035a6": null, "4208048:cgc_receive_until_flush": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until_flush(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v4[v5] = 0;\n
            v0 = &v3;\n
            if (cgc_receive(0, &v2, 1))\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (v2 != a0)\n
            {\n
                v4[v5] = v2;\n
                v4 += 1;\n
            }\n
            else\n
            {\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                v0 = &v3;\n
                if (cgc_receive(0, &v2, 1))\n
                {\n
                    return v4;\n
                }\n
                else if (v2 == a0)\n
                {\n
                    return v4;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4208319:sub_4036bf": null, "4208320:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4208479:sub_40375f": null, "4208480:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4208679:sub_403827": null, "4208688:cgc_puts": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: char\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!v5)\n
        return v5;\n
    v2 = cgc_strlen(v5);\n
    while (true)\n
    {\n
        v6 = v3;\n
        if (v6 >= v2)\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                if (v4 == 1)\n
                    return v6;\n
                v0 = &v4;\n
                v6 = cgc_transmit(1, v1 - 11820, 1);\n
                if (v6)\n
                    return v6;\n
            }\n
        }\n
        else\n
        {\n
            v0 = &v4;\n
            v6 = cgc_transmit(1, v5 + v3, v2 - v3);\n
            if (v6)\n
                return v6;\n
            v3 = *(&v4) + v3;\n
        }\n
    }\n
}\n
", "4208916:sub_403914": null, "4208928:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4209034:sub_40398a": null, "4209040:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_44)\n
        {\n
            cgc_deallocate(v4->field_44);\n
            v12 = v4;\n
            v12->field_44 = 0;\n
            v12->field_48 = 0;\n
            v12->field_4c = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_44)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_4c >= v11->field_44 + v11->field_48)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_44)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_48 = cgc_strlen(v10);\n
        v0 = &v13->field_44;\n
        if (cgc_allocate(v13->field_48, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_44, v10);\n
        v14 = v4;\n
        v14->field_4c = v14->field_44;\n
    }\n
    v10 = &v4->field_4c->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_44 + v15->field_48;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_44 + v16->field_48)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_40 = v8;\n
    *(v7) = 0;\n
    v17->field_4c = v7 + 1;\n
    v9 = v17->field_40;\n
    return v9;\n
}\n
", "4209787:sub_403c7b": null, "4209792:cgc_write": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 < a0)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v5 + v2, a0 - v2))\n
            {\n
                v4 = v2;\n
                return v4;\n
            }\n
            v2 = *(&v3) + v2;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4209957:sub_403d25": null, "4209968:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4210160:cgc_putc": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v3)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (!v2)\n
    {\n
        v0 = &v2;\n
        if (cgc_transmit(1, &v3, 1))\n
            cgc__terminate();\n
    }\n
    return v3;\n
}\n
", "4210277:sub_403e65": null, "4210288:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4210497:sub_403f41": null, "4210512:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        a0->field_0 = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4210705:sub_404011": null, "4210720:cgc_float_to_str": null, "4211583:sub_40437f": null, "4211584:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v27, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xbc]\n
    struct_1 *v1;  // [bp-0xb4]\n
    unsigned int v2;  // [bp-0xb0]\n
    char v3;  // [bp-0xa5]\n
    unsigned int v4;  // [bp-0xa4]\n
    unsigned int v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    unsigned int v7;  // [bp-0x98]\n
    unsigned int v8;  // [bp-0x94]\n
    unsigned int v9;  // [bp-0x90]\n
    char *v10;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v11;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v12;  // [bp-0x84]\n
    struct_1 *v13;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v14;  // [bp-0x78]\n
    struct_1 *v15;  // [bp-0x74], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x70]\n
    char v17;  // [bp-0x69]\n
    void* v18;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v19;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x60]\n
    void* v21;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v23;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v24;  // [bp-0x50]\n
    void* v25;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v26;  // [bp-0xc]\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    struct struct_0 **v36;  // eax\n
\n
    v8 = &_GLOBAL_OFFSET_TABLE_;\n
    v25 = 0;\n
    if (!v27)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (*(v27))\n
    {\n
        if (*(v27) != 64)\n
        {\n
            cgc_putc(*(v27));\n
            v27 += 1;\n
            v25 += 1;\n
LABEL_404c54:\n
        }\n
        else\n
        {\n
            v27 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (*(v27) == 64)\n
            {\n
                cgc_putc(64);\n
                v27 += 1;\n
                v25 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 45)\n
            {\n
                v20 = 1;\n
                v27 += 1;\n
            }\n
            if (cgc_isdigit(*(v27)))\n
            {\n
                if (*(v27) == 48)\n
                {\n
                    v21 = 1;\n
                    v27 += 1;\n
                }\n
                if (cgc_isdigit(*(v27)))\n
                {\n
                    for (v23 = cgc_atoi(v27); cgc_isdigit(*(v27)); v27 += 1);\n
                }\n
            }\n
            if (*(v27) == 46)\n
            {\n
                v27 += 1;\n
                for (v22 = cgc_atoi(v27); cgc_isdigit(*(v27)); v27 += 1);\n
            }\n
            if (*(v27) == 99)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v17 = *(v28);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v25 += 1;\n
                    }\n
                }\n
                cgc_putc(v17);\n
                v25 += 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 100)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v16 = *(v29);\n
                cgc_int_to_str(v16, &v24);\n
                v7 = v23;\n
                v18 = v7 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v15 = &v24; *(v15); v15 += 1)\n
                {\n
                    cgc_putc(*(v15));\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 120)\n
            {\n
                v30 = a0;\n
                a0 = v30 + 1;\n
                v14 = &*(v30)->field_0;\n
                cgc_int_to_hex(v14, &v24);\n
                v6 = v23;\n
                v18 = v6 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v13 = &v24; *(v13); v13 += 1)\n
                {\n
                    cgc_putc(*(v13));\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (*(v27) == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v12 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v33 = ftop<4> - 1 + 1;\n
                v34 = v33 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v2 = v22;\n
                v1 = &v24;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v35 = v34 + 1;\n
                cgc_float_to_str();\n
                v5 = v23;\n
                v0 = &v24;\n
                v18 = v5 - cgc_strlen(v0);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v11 = &v24; v11->field_0; v11 += 1)\n
                {\n
                    cgc_putc(v11->field_0);\n
                    v25 += 1;\n
                }\n
                v27 += 1;\n
                continue;\n
            }\n
            if (!(*(v27) == 115))\n
                goto LABEL_404c54;\n
            v36 = a0;\n
            a0 = v36 + 1;\n
            v10 = &*(v36)->field_0;\n
            if (v22 > 0)\n
            {\n
                v4 = v22;\n
                if (v4 < cgc_strlen(v10))\n
                {\n
                    v9 = v22;\n
                    goto LABEL_404ad3;\n
                }\n
            }\n
            v9 = cgc_strlen(v10);\n
LABEL_404ad3:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (v21)\n
                        cgc_putc(48);\n
                    else\n
                        cgc_putc(32);\n
                    v25 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v3 = 0;\n
                if (*(v10))\n
                    v3 = !(v9 <= 0);\n
                if (!(v3 & 1))\n
                    break;\n
                cgc_putc(*(v10));\n
                v25 += 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v25 += 1;\n
                }\n
            }\n
            v27 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4213867:sub_404c6b": null, "4213872:cgc_vsprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v27, char *a0, struct struct_1 **a1)\n
{\n
    struct_0 *v0;  // [bp-0xbc]\n
    struct_0 *v1;  // [bp-0xb4]\n
    unsigned int v2;  // [bp-0xb0]\n
    char v3;  // [bp-0xa5]\n
    unsigned int v4;  // [bp-0xa4]\n
    unsigned int v5;  // [bp-0xa0]\n
    unsigned int v6;  // [bp-0x9c]\n
    unsigned int v7;  // [bp-0x98]\n
    unsigned int v8;  // [bp-0x94]\n
    unsigned int v9;  // [bp-0x90]\n
    char *v10;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_0 *v11;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v12;  // [bp-0x84]\n
    struct_0 *v13;  // [bp-0x7c], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x78]\n
    struct_0 *v15;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v16;  // [bp-0x70]\n
    char v17;  // [bp-0x69]\n
    void* v18;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v19;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x60]\n
    void* v21;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v23;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v24;  // [bp-0x50]\n
    char *v25;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v26;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_1 **v28;  // eax\n
    struct struct_1 **v29;  // eax\n
    struct struct_1 **v30;  // eax\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    struct struct_1 **v36;  // eax\n
\n
    v8 = &_GLOBAL_OFFSET_TABLE_;\n
    v25 = 0;\n
    if (!a0)\n
    {\n
        v26 = -1;\n
        return v26;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            *((v27 + v25)) = *(a0);\n
            a0 += 1;\n
            v25 += 1;\n
LABEL_4054ab:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v23 = 0;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v18 = 0;\n
            if (*(a0) == 64)\n
            {\n
                *((v27 + v25)) = 64;\n
                a0 += 1;\n
                v25 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v20 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit(*(a0)))\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v21 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit(*(a0)))\n
                {\n
                    for (v23 = cgc_atoi(a0); cgc_isdigit(*(a0)); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v22 = cgc_atoi(a0); cgc_isdigit(*(a0)); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v17 = *(v28);\n
                v18 = v23 - 1;\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            *((v27 + v25)) = 48;\n
                        else\n
                            *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                *((v27 + v25)) = v17;\n
                v25 += 1;\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v16 = &*(v29)->field_0;\n
                cgc_int_to_str(v16, &v24);\n
                v7 = v23;\n
                v18 = v7 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (!v21)\n
                            *((v27 + v25)) = 32;\n
                        else\n
                            *((v27 + v25)) = 48;\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v15 = &v24; *(v15); v15 += 1)\n
                {\n
                    *((v27 + v25)) = *(v15);\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v30 = a1;\n
                a1 = v30 + 1;\n
                v14 = *(v30);\n
                cgc_int_to_hex(v14, &v24);\n
                v6 = v23;\n
                v18 = v6 - cgc_strlen(&v24);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            *((v27 + v25)) = 48;\n
                        else\n
                            *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v13 = &v24; *(v13); v13 += 1)\n
                {\n
                    *((v27 + v25)) = *(v13);\n
                    v25 += 1;\n
                }\n
                if (v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v12 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v33 = ftop<4> - 1 + 1;\n
                v34 = v33 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v2 = v22;\n
                v1 = &v24;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v35 = v34 + 1;\n
                cgc_float_to_str();\n
                v5 = v23;\n
                v0 = &v24;\n
                v18 = v5 - cgc_strlen(v0);\n
                if (!v20)\n
                {\n
                    for (v19 = 0; v19 < v18; v19 += 1)\n
                    {\n
                        if (v21)\n
                            *((v27 + v25)) = 48;\n
                        else\n
                            *((v27 + v25)) = 32;\n
                        v25 += 1;\n
                    }\n
                }\n
                for (v11 = &v24; v11->field_0; v11 += 1)\n
                {\n
                    *((v27 + v25)) = v11->field_0;\n
                    v25 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_4054ab;\n
            v36 = a1;\n
            a1 = v36 + 1;\n
            v10 = &*(v36)->field_0;\n
            if (v22 > 0)\n
            {\n
                v4 = v22;\n
                if (v4 < cgc_strlen(v10))\n
                {\n
                    v9 = v22;\n
                    goto LABEL_40534e;\n
                }\n
            }\n
            v9 = cgc_strlen(v10);\n
LABEL_40534e:\n
            v18 = v23 - v9;\n
            if (!v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    if (!v21)\n
                        *((v27 + v25)) = 32;\n
                    else\n
                        *((v27 + v25)) = 48;\n
                    v25 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v3 = 0;\n
                if (*(v10))\n
                    v3 = !(v9 <= 0);\n
                if (!(v3 & 1))\n
                    break;\n
                *((v27 + v25)) = *(v10);\n
                v25 += 1;\n
                v10 += 1;\n
                v9 -= 1;\n
            }\n
            if (v20)\n
            {\n
                for (v19 = 0; v19 < v18; v19 += 1)\n
                {\n
                    *((v27 + v25)) = 32;\n
                    v25 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v26 = v25;\n
    return v26;\n
}\n
", "4216002:sub_4054c2": null, "4216016:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4216080:cgc_sprintf": "int cgc_sprintf(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    return v0;\n
}\n
", "4216149:sub_405555": null, "4216160:cgc_die": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_die()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v5 = &v3;\n
    v2 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    cgc_printf(\"\\n
******************\\n
@s\\n
*****************\\n
\");\n
    v7 = v1;\n
    cgc__terminate(1);\n
    cgc_mallocOrDie();\n
    return;\n
}\n
", "4216224:cgc_mallocOrDie": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_mallocOrDie(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc(v3);\n
    if (!v1)\n
        cgc_die();\n
    cgc_bzero(v1, v3);\n
    return v1;\n
}\n
", "4216320:cgc_init_data": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_data()\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_1 *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v3 = cgc_mallocOrDie(28, \"Failed to malloc workingData\");\n
    v3->field_0 = cgc_mallocOrDie(44, v1 - 11789);\n
    v3->field_0->field_20 = 0;\n
    v3->field_0->field_4 = 0;\n
    v3->field_0->field_10 = 0;\n
    v3->field_18 = 0;\n
    v3->field_0->field_8 = 68;\n
    v3->field_4 = v3->field_0;\n
    v3->field_10 = cgc__add_user(v1 - 11412);\n
    v3->field_14 = cgc__add_group(v1 - 11412);\n
    v3->field_8 = v3->field_10;\n
    v3->field_c = v3->field_14;\n
    cgc_add_user_to_group(v3->field_10);\n
    v0 = v3->field_0;\n
    v3->field_0->field_14 = cgc_add_perm(v3->field_10, 0);\n
    v0 = v3->field_0;\n
    cgc_add_perm(0, v3->field_14);\n
    v3->field_0->field_1c = 0;\n
    v3->field_0->field_20 = 0;\n
    v3->field_0->field_24 = 0;\n
    v2 = cgc_mallocOrDie(5, v1 - 11762);\n
    v3->field_0->field_18 = v2;\n
    cgc_strcpy(v2, v1 - 11819);\n
    v7 = v4;\n
    return v3;\n
}\n
", "4216783:sub_4057cf": null, "4216784:cgc__add_user": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__add_user(unsigned int v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[3];  // [bp-0x10]\n
    unsigned int v5[3];  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = cgc_mallocOrDie(12, \"Failed to allocate user\");\n
    v3 = cgc_mallocOrDie(cgc_strlen(v7) + 1, v0 - 11476);\n
    cgc_strcpy(v3, v7);\n
    v4[2] = v3;\n
    if (!a0)\n
    {\n
        v4[0] = 0;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        for (v1 = a0->field_4; v1; v1 = *((v1 + 4)))\n
        {\n
            v2 = v1;\n
        }\n
        *((v2 + 4)) = v4;\n
        v4[0] = v2;\n
    }\n
    v4[1] = 0;\n
    v5[0] = v4;\n
    return v5;\n
}\n
", "4217037:sub_4058cd": null, "4217040:cgc__add_group": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__add_group(unsigned int v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[5];  // [bp-0x10]\n
    unsigned int v5[5];  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = cgc_mallocOrDie(20, \"Failed to allocate group\");\n
    v3 = cgc_mallocOrDie(cgc_strlen(v7) + 1, v0 - 11329);\n
    cgc_strcpy(v3, v7);\n
    v4[4] = v3;\n
    v4[0] = 0;\n
    v4[3] = 0;\n
    v4[2] = 0;\n
    if (!a0)\n
    {\n
        a0[0] = v4;\n
    }\n
    else\n
    {\n
        v2 = a0;\n
        for (v1 = v2; v1; v1 = *((v2 + 8)))\n
        {\n
            v2 = v1;\n
        }\n
        v4[1] = v2;\n
        *((v2 + 8)) = v4;\n
    }\n
    v5[0] = v4;\n
    return v5;\n
}\n
", "4217297:sub_4059d1": null, "4217312:cgc_add_user_to_group": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_add_user_to_group(unsigned int v3, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2[3];  // [bp-0xc]\n
    struct_1 *v4;  // eax\n
\n
    v2[0] = cgc_mallocOrDie(12, \"Failed to allocate newUser\");\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    if (!a0->field_c)\n
    {\n
        a0->field_c = &v2[0];\n
        v2[0] = 0;\n
        a0->field_0 = 1;\n
        return v2;\n
    }\n
    v1 = a0->field_c;\n
    for (v0 = v1; v0; v0 = *((v0 + 4)))\n
    {\n
        v1 = v0;\n
    }\n
    *((v1 + 4)) = v2;\n
    v2[0] = v1;\n
    v4 = a0;\n
    v4->field_0 = v4->field_0 + 1;\n
    return v2;\n
}\n
", "4217507:sub_405aa3": null, "4217520:cgc_add_perm": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_perm(unsigned int v5, unsigned int a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3[4];  // [bp-0x10]\n
    unsigned int v4[4];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5 && !a0)\n
        goto LABEL_405af7;\n
    if (!v5)\n
        goto LABEL_405b08;\n
    if (!a0)\n
        goto LABEL_405b08;\n
LABEL_405af7:\n
    cgc_die();\n
LABEL_405b08:\n
    v3[0] = cgc_mallocOrDie(16, v0 - 11713);\n
    if (v5)\n
        v3[2] = v5;\n
    if (a0)\n
        v3[3] = a0;\n
    if (!a1->field_14)\n
    {\n
        a1->field_14 = &v3[0];\n
    }\n
    else\n
    {\n
        v2 = a1->field_14;\n
        for (v1 = v2; v1; v1 = *((v2 + 4)))\n
        {\n
            if (v2->field_8 && v2->field_8 == v5)\n
            {\n
                v4[0] = 0;\n
                return v4;\n
            }\n
            if (v2->field_c && v2->field_c == a0)\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
            v2 = v1;\n
        }\n
        *((v2 + 4)) = v3;\n
        v3[0] = v2;\n
        v3[1] = 0;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4217868:sub_405c0c": null, "4217872:cgc_find_perm_by_name": "typedef struct struct_3 {\n
    char padding_0[20];\n
    struct struct_2 *field_14;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_perm_by_name(unsigned int v4, struct_3 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_validate_current_perms(a0, a1);\n
    v1 = a0->field_14;\n
    while (true)\n
    {\n
        if (v1)\n
        {\n
            if (v1->field_8 && !cgc_strcmp(v1->field_8->field_8, v4))\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
            if (v1->field_c && !cgc_strcmp(v1->field_c->field_10, v4))\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
            v1 = v1->field_4;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4218100:sub_405cf4": null, "4218112:cgc_validate_current_perms": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_validate_current_perms(struct_1 *v4, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v4->field_14;\n
    v3 = v5;\n
    v2 = 0;\n
    if (!v3)\n
        return v4->field_14;\n
    v5 = v3;\n
    if (!v5->field_8)\n
    {\n
        v5 = v3;\n
        if (!v5->field_c)\n
        {\n
            v0 = v4->field_18;\n
            v5 = cgc_printf(v1 - 11689);\n
            return v5;\n
        }\n
    }\n
    for (; v3; v3 = v5)\n
    {\n
        if (v3->field_8)\n
        {\n
            v0 = a0;\n
            if (cgc_is_user_valid(v3->field_8))\n
            {\n
                v2 = v3->field_4;\n
            }\n
            else\n
            {\n
                v0 = v3;\n
                v2 = cgc_delete_perms(v4);\n
            }\n
        }\n
        if (*((v3 + 12)))\n
        {\n
            v0 = a0;\n
            if (cgc_is_group_valid(*((v3 + 12))))\n
            {\n
                v2 = *((v3 + 4));\n
            }\n
            else\n
            {\n
                v0 = v3;\n
                v2 = cgc_delete_perms(v4);\n
            }\n
        }\n
        v5 = v2;\n
    }\n
    return v5;\n
}\n
", "4218444:sub_405e4c": null, "4218448:cgc_delete_perms": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_3 *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_perms(struct_0 *v3, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = &a0->field_4->field_0;\n
    if (a0->field_0)\n
        a0->field_0->field_4 = a0->field_4;\n
    if (a0->field_4)\n
    {\n
        a0->field_4->field_0 = a0->field_0;\n
        if (!a0->field_0)\n
            v3->field_14 = a0->field_4;\n
    }\n
    cgc_free(a0);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4218617:sub_405ef9": null, "4218624:cgc_is_user_valid": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_is_user_valid(unsigned int v2, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = a0->field_10;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0 == v2)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v0 = *((v0 + 4));\n
    }\n
}\n
", "4218708:sub_405f54": null, "4218720:cgc_is_group_valid": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
int cgc_is_group_valid(unsigned int v2, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = a0->field_14;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (v0 == v2)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        v0 = *((v0 + 8));\n
    }\n
}\n
", "4218804:sub_405fb4": null, "4218816:cgc__add_node": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
    struct struct_2 *field_28;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__add_node(char v4, unsigned int a0, unsigned int a1, struct_1 *a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_mallocOrDie(44, \"Failed to mallod node\");\n
    v2->field_20 = a2;\n
    v2->field_0 = 0;\n
    v2->field_28 = 0;\n
    v2->field_24 = 0;\n
    v2->field_8 = v4;\n
    v2->field_10 = a0;\n
    v2->field_14 = cgc_add_perm(a3, 0, v2);\n
    v1 = cgc_mallocOrDie(cgc_strlen(a1) + 1, v0 - 11654);\n
    cgc_strcpy(v1, a1);\n
    v2->field_18 = v1;\n
    v2->field_1c = 0;\n
    v2->field_20 = a2;\n
    if (!a2->field_24)\n
    {\n
        a2->field_24 = v2;\n
        a2->field_28 = &v2->field_0;\n
        v2->field_4 = 0;\n
        return v2;\n
    }\n
    a2->field_28->field_0 = v2;\n
    v2->field_4 = a2->field_28;\n
    a2->field_28 = &v2->field_0;\n
    return v2;\n
}\n
", "4219152:cgc_get_file_size": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int cgc_get_file_size(struct_1 *v2)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v2->field_4;\n
    for (v0 = 0; v1; v1 = v1->field_c)\n
    {\n
        v0 = v1->field_4 + v0;\n
    }\n
    return v0;\n
}\n
", "4219221:sub_406155": null, "4219232:cgc_delete_file_bytes": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_file_bytes(struct_1 *v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = v7->field_4;\n
    v5 = v7->field_4;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (v6)\n
    {\n
        v3 = *((v6 + 4)) + v3;\n
        if (v2 == 1)\n
        {\n
            v6 = cgc_delete_chunk(v7);\n
        }\n
        else\n
        {\n
            if (v3 >= a0)\n
            {\n
                v5 = v6;\n
                v2 = 1;\n
                v4 = v3 - a0;\n
            }\n
            v6 = v6->field_c;\n
        }\n
    }\n
    v3 = *((v5 + 4)) - v4;\n
    v1 = cgc_mallocOrDie(v3, v0 - 11632);\n
    cgc_memcpy(v1, *(v5), v3);\n
    cgc_free(*(v5));\n
    *((v5 + 4)) = v3;\n
    *(v5) = v1;\n
    return v5;\n
}\n
", "4219516:sub_40627c": null, "4219520:cgc_delete_chunk": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_chunk(unsigned int v3[3], struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[3];  // eax\n
    unsigned int v5[3];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = a0->field_c;\n
    if (!a0)\n
    {\n
        cgc_puts(v0 - 11560);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (a0->field_8)\n
    {\n
        a0->field_8->field_c = a0->field_c;\n
        if (!a0->field_c)\n
            v3[2] = 0;\n
        else\n
            a0->field_c->field_8 = a0->field_8;\n
        v5 = v3;\n
        v5[0] = v5[0] - 1;\n
    }\n
    else\n
    {\n
        v3[1] = a0->field_c;\n
        if (!a0->field_c)\n
        {\n
            v3[2] = 0;\n
            v3[0] = 0;\n
        }\n
        else\n
        {\n
            a0->field_c->field_8 = 0;\n
            v4 = v3;\n
            v4[0] = v4[0] - 1;\n
        }\n
    }\n
    cgc_free(a0->field_0);\n
    cgc_free(a0);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4219799:sub_406397": null, "4219808:cgc_add_file_chunk": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_file_chunk(unsigned int v3, struct_1 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_1 *v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_mallocOrDie(16, \"Failed to malloc filechunk\");\n
    v1[0] = cgc_mallocOrDie(a1, v0 - 11605);\n
    cgc_memcpy(v1[0], v3, a1);\n
    v1[1] = a1;\n
    if (!a0->field_8)\n
    {\n
        a0->field_4 = v1;\n
        a0->field_8 = &v1[0];\n
        v1[2] = 0;\n
        a0->field_0 = 1;\n
    }\n
    else\n
    {\n
        v5 = a0;\n
        v5->field_0 = v5->field_0 + 1;\n
        a0->field_8->field_c = v1;\n
        v1[2] = a0->field_8;\n
        a0->field_8 = &v1[0];\n
    }\n
    v1[3] = 0;\n
    return v1;\n
}\n
", "4220051:sub_406493": null, "4220064:cgc_add_file": "typedef struct struct_0 {\n
    char padding_0[28];\n
    unsigned int field_1c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_file(void* v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_mallocOrDie(12, \"Failed to malloc file\");\n
    if (a1 > 0)\n
        v2 = cgc_add_file_chunk(a3, v3, a1);\n
    v1 = cgc__add_node(70, a0, a2, v5, a4);\n
    v1->field_1c = v3;\n
    return v1;\n
}\n
", "4220236:sub_40654c": null, "4220240:cgc_delete_file": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_file(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v1 = v2->field_4; v1; v1 = cgc_delete_chunk(v2, v1));\n
    return cgc_free(v2);\n
}\n
", "4220333:sub_4065ad": null, "4220336:cgc_delete_node": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
    char field_8;\n
    char padding_9[11];\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    struct struct_3 *field_20;\n
    unsigned int field_24;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[36];\n
    unsigned int field_24;\n
    unsigned int field_28;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_node(struct_1 *v5, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v5->field_0;\n
    if (v5 == *(a0))\n
        cgc_puts(v0 - 11530);\n
    if (v5->field_8 == 70)\n
    {\n
        v3 = v5->field_1c;\n
        cgc_delete_file(v3);\n
    }\n
    if (v5->field_8 == 68)\n
    {\n
        for (v2 = v5->field_24; v2; v2 = cgc_delete_node(v2, a0));\n
    }\n
    if (v5->field_4)\n
    {\n
        v5->field_4->field_0 = v5->field_0;\n
        if (!v5->field_0)\n
            v5->field_20->field_28 = v5->field_4;\n
        else\n
            v5->field_0->field_4 = v5->field_4;\n
    }\n
    else\n
    {\n
        v5->field_20->field_24 = v5->field_0;\n
        if (!v5->field_0)\n
        {\n
            v5->field_20->field_24 = 0;\n
            v5->field_20->field_28 = 0;\n
        }\n
        else\n
        {\n
            v5->field_0->field_4 = 0;\n
        }\n
    }\n
    for (v1 = v5->field_14; v1; v1 = cgc_delete_perms(v5, v1));\n
    cgc_free(v5->field_18);\n
    cgc_free(v5);\n
    return v4;\n
}\n
", "4220750:sub_40674e": null, "4220752:cgc_add_directory": "int cgc_add_directory(unsigned int v2, unsigned int a0, void* a1, unsigned int a2)\n
{\n
    unsigned int v0[11];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0[0] = cgc__add_node(68, v2, a0, a1, a2);\n
    v0[9] = 0;\n
    v0[10] = 0;\n
    return v0;\n
}\n
", "4220857:sub_4067b9": null, "4220864:cgc_add_user": "typedef struct struct_0 {\n
    char padding_0[16];\n
    void* field_10;\n
} struct_0;\n
\n
int cgc_add_user(unsigned int v0, struct_0 *a0)\n
{\n
    return cgc__add_user(v0, a0->field_10);\n
}\n
", "4220916:sub_4067f4": null, "4220928:cgc_is_user_in_group": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_is_user_in_group(unsigned int v2, struct_1 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = a0->field_c;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((v0 + 8)) != v2)\n
        {\n
            v0 = *((v0 + 4));\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4221014:sub_406856": null, "4221024:cgc_remove_user_from_group": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_user_from_group(unsigned int v5, unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7[4];  // eax\n
    unsigned int v8[4];  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_is_user_in_group(v5, a0);\n
    v1 = 0;\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (v2->field_0)\n
    {\n
        if (!v2->field_4)\n
        {\n
            v2->field_0->field_4 = 0;\n
        }\n
        else\n
        {\n
            v2->field_0->field_4 = v2->field_4;\n
            v2->field_4->field_0 = v2->field_0;\n
        }\n
        v8 = a0;\n
        v8[0] = v8[0] - 1;\n
    }\n
    else if (!v2->field_4)\n
    {\n
        a0[3] = 0;\n
        a0[0] = 0;\n
    }\n
    else\n
    {\n
        a0[3] = v2->field_4;\n
        v2->field_4->field_0 = 0;\n
        v7 = a0;\n
        v7[0] = v7[0] - 1;\n
    }\n
    v1 = v2->field_0;\n
    cgc_free(v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4221309:sub_40697d": null, "4221312:cgc_remove_user": "typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_4 *field_4;\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
} struct_4;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_user(struct_3 *v5, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    struct_2 *v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0->field_14;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        cgc_puts(v0 - 11448);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (!v5->field_0)\n
    {\n
        cgc_puts(v0 - 11427);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v5 != a0->field_10)\n
    {\n
        for (v1 = 0; v3; v3 = *((v3 + 8)))\n
        {\n
            cgc_remove_user_from_group(v5, v3);\n
        }\n
        v5->field_0->field_4 = v5->field_4;\n
        if (v5->field_4)\n
            v5->field_4->field_0 = v5->field_0;\n
        v2 = v5->field_0;\n
        cgc_free(v5->field_8);\n
        cgc_free(v5);\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4221614:sub_406aae": null, "4221616:cgc_remove_group": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
    struct struct_2 *field_c;\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_group(struct_3 *v5, struct_4 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_2 *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_2 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        cgc_puts(v0 - 11407);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v5 == a0->field_14)\n
    {\n
        cgc_puts(v0 - 11382);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v2 = v5->field_c;\n
        for (v1 = v2; v2; v2 = *((v2 + 4)))\n
        {\n
            v1 = v2;\n
        }\n
        for (; v1; v1 = cgc_remove_user_from_group(*((v1 + 8)), v5));\n
        if (v5->field_4)\n
            v5->field_4->field_8 = v5->field_8;\n
        if (v5->field_8)\n
            v5->field_8->field_4 = v5->field_4;\n
        v3 = v5->field_4;\n
        cgc_free(v5->field_10);\n
        cgc_free(v5);\n
        v4 = v3;\n
        return v4;\n
    }\n
}\n
", "4221951:sub_406bff": null, "4221952:cgc_find_user_by_name": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_user_by_name(unsigned int v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = a0->field_10;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        if (!cgc_strcmp(v4, *((v1 + 8))))\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
        v1 = *((v1 + 4));\n
    }\n
}\n
", "4222079:sub_406c7f": null, "4222080:cgc_find_user_by_number": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
int cgc_find_user_by_number(unsigned int v4, struct_1 *a0)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0->field_10;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        if (v0 == v4)\n
        {\n
            v3 = v1;\n
            return v3;\n
        }\n
        v0 += 1;\n
        v1 = *((v1 + 4));\n
    }\n
}\n
", "4222185:sub_406ce9": null, "4222192:cgc_add_group": "typedef struct struct_0 {\n
    char padding_0[20];\n
    void* field_14;\n
} struct_0;\n
\n
int cgc_add_group(unsigned int v0, struct_0 *a0)\n
{\n
    return cgc__add_group(v0, a0->field_14);\n
}\n
", "4222244:sub_406d24": null, "4222256:cgc_find_group_by_number": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
int cgc_find_group_by_number(unsigned int v3, struct_1 *a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0->field_14;\n
    v0 = 0;\n
    while (v1)\n
    {\n
        if (v0 == v3)\n
        {\n
            v2 = v1;\n
            v1 = 0;\n
        }\n
        else\n
        {\n
            v0 += 1;\n
            v1 = *((v1 + 8));\n
        }\n
    }\n
    return v2;\n
}\n
", "4222362:sub_406d9a": null, "4222368:cgc_find_group_by_name": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_group_by_name(unsigned int v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (a0->field_14)\n
    {\n
        for (v1 = a0->field_14; v1; v1 = *((v1 + 8)))\n
        {\n
            if (!cgc_strcmp(v4, *((v1 + 16))))\n
            {\n
                v3 = v1;\n
                return v3;\n
            }\n
        }\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4222513:sub_406e31": null, "4222528:cgc_recursive_path": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recursive_path(unsigned int v6, unsigned int a0[9])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 == v6)\n
    {\n
        v4 = cgc_mallocOrDie(cgc_strlen(a0[6]) + 2, v1 - 11273);\n
        cgc_strcpy(v4, a0[6]);\n
        v5 = v4;\n
        return v5;\n
    }\n
    else if (a0[8])\n
    {\n
        v3 = cgc_recursive_path(v6, a0[8]);\n
        if (!v3)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = cgc_strlen(v3);\n
        v2 = cgc_mallocOrDie(v0 + cgc_strlen(a0[6]) + 2, v1 - 11246);\n
        cgc_strcpy(v2, v3);\n
        cgc_strcat(v2, v1 - 10902);\n
        cgc_strcat(v2, a0[6]);\n
        cgc_free(v3);\n
        v5 = v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
}\n
", "4222887:sub_406fa7": null, "4222896:cgc_str_of_path": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_str_of_path(unsigned int v3, unsigned int *a0, unsigned int a1[9])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_recursive_path(*(a0), a1);\n
    cgc_strcpy(v3, v1);\n
    v5 = v2;\n
    return cgc_free(v1);\n
}\n
", "4222991:sub_40700f": null, "4222992:cgc_find_node_by_name": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[20];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_node_by_name(unsigned int v3, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = a0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcmp(v3, *((v1 + 24))))\n
        {\n
            v1 = *(v1);\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4223109:sub_407085": null, "4223120:cgc_find_directory_by_name": "typedef struct struct_0 {\n
    char padding_0[36];\n
    void* field_24;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    void* field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_directory_by_name(unsigned int v4, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_find_node_by_name(v4, a0->field_24);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v1->field_8 == 68)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_find_node_by_name(v4, v1->field_0);\n
    }\n
}\n
", "4223256:sub_407118": null, "4223264:cgc_find_file_by_name": "typedef struct struct_0 {\n
    char padding_0[36];\n
    void* field_24;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    void* field_0;\n
    char padding_4[4];\n
    char field_8;\n
    char padding_9[19];\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_file_by_name(unsigned int v4, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_find_node_by_name(v4, a0->field_24);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v1->field_8 != 70)\n
        {\n
            v1 = cgc_find_node_by_name(v4, v1->field_0);\n
        }\n
        else\n
        {\n
            v2 = *((v1 + 28));\n
            return v2;\n
        }\n
    }\n
}\n
", "4223403:sub_4071ab": null, "4223408:cgc_find_file_node_by_name": "typedef struct struct_0 {\n
    char padding_0[36];\n
    void* field_24;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    void* field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_file_node_by_name(unsigned int v4, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_find_node_by_name(v4, a0->field_24);\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v1->field_8 != 70)\n
        {\n
            v1 = cgc_find_node_by_name(v4, v1->field_0);\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4223544:sub_407238": null, "4223552:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = cgc_init_data();\n
    v0 = v2;\n
    cgc_start_UI();\n
    v7 = v4;\n
    return 0;\n
}\n
", "4223617:sub_407281": null, "4223632:cgc_strict_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strict_atoi(unsigned int v4)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = cgc_atoi(v4);\n
            return v3;\n
        }\n
        if (*((v4 + v2)) > 57)\n
            break;\n
        if (*((v4 + v2)) < 48)\n
            break;\n
        v2 += 1;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4223792:cgc_get_int": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_int(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x12]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"@s :\");\n
    v2 = cgc_receive_until(&v3, 10, 9);\n
    (&v3)[v2] = 0;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        if ((&v3)[v1] <= 57 && !((&v3)[v1] < 48))\n
            goto LABEL_4073c4;\n
        (&v3)[v1] = 48;\n
LABEL_4073c4:\n
    }\n
    v2 = cgc_atoi(&v3);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4223985:sub_4073f1": null, "4224000:cgc_get_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_string(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"@s >\");\n
    v1 = cgc_receive_until(v3, 10, a0);\n
    v3[v1] = 0;\n
    v5 = v2;\n
    return v1;\n
}\n
", "4224103:sub_407467": null, "4224112:cgc_print_prompt": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4[9];\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_prompt(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0xfac]\n
    char v1;  // [bp-0xfa8]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v1, 4000);\n
    cgc_str_of_path(&v1, v3, v3->field_4);\n
    v5 = v2;\n
    return cgc_printf(v0 - 10914);\n
}\n
", "4224254:sub_4074fe": null, "4224256:cgc_print_help": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_help(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"< \");\n
    for (v2 = 0; v2 < a0 - 1; v2 = v2 + 1)\n
    {\n
        v0 = *((v4 + v2 * 4));\n
        cgc_printf(v1 - 10897);\n
    }\n
    v0 = *((v4 + (a0 - 1) * 4));\n
    v6 = v3;\n
    return cgc_printf(v1 - 10892);\n
}\n
", "4224405:sub_407595": null, "4224416:cgc_parse_arg": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_arg(unsigned int v7, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 1;\n
    v1 = cgc_strlen(a0);\n
    for (v2 = 0; v2 < v1; v2 += 1)\n
    {\n
        if (a0[v2] != 32)\n
        {\n
            if (v3 == 1)\n
                v4 = v2;\n
            v3 = 0;\n
        }\n
        else\n
        {\n
            if (!v3)\n
            {\n
                cgc_bzero(v7 + v5 * 0x100, 0x100);\n
                cgc_strncpy(v7 + v5 * 0x100, a0 + v4, v2 - v4);\n
                if (v5 == 15)\n
                    break;\n
                v5 += 1;\n
            }\n
            v3 = 1;\n
            v4 = v2;\n
        }\n
    }\n
    if (v4 < v2)\n
    {\n
        cgc_bzero(v7 + v5 * 0x100, 0x100);\n
        cgc_strncpy(v7 + v5 * 0x100, &a0[v4], v2 - v4);\n
        v5 += 1;\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4224785:sub_407711": null, "4224800:cgc_print_perms": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_perms(struct_1 *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3->field_14;\n
    v5 = cgc_validate_current_perms(v3, a0);\n
    for (; v1; v1 = v5)\n
    {\n
        if (v1->field_8)\n
            cgc_printf(v0 - 10886);\n
        if (v1->field_c)\n
            cgc_printf(v0 - 10886);\n
        v5 = v1->field_4;\n
    }\n
    v6 = v2;\n
    return v5;\n
}\n
", "4224971:sub_4077cb": null, "4224976:cgc_print_user_list": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_user_list(struct_1 *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6->field_10;\n
    v3 = 0;\n
    v8 = cgc_printf(\"UID    NAME\\n
__________\\n
\");\n
    for (; v4; v4 = v8)\n
    {\n
        v0 = v3;\n
        v1 = v4->field_8;\n
        cgc_printf(v2 - 10858);\n
        v3 += 1;\n
        v8 = v4->field_4;\n
    }\n
    v9 = v5;\n
    return v8;\n
}\n
", "4225104:cgc_print_group_list": "typedef struct struct_1 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_group_list(struct_1 *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6->field_14;\n
    v3 = 0;\n
    v8 = cgc_printf(\"GUID     NAME\\n
____________________\\n
\");\n
    for (; v4; v4 = v8)\n
    {\n
        v0 = v3;\n
        v1 = v4->field_10;\n
        cgc_printf(v2 - 10858);\n
        v3 += 1;\n
        v8 = v4->field_8;\n
    }\n
    v9 = v5;\n
    return v8;\n
}\n
", "4225232:cgc_print_users_in_group": "typedef struct struct_2 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_users_in_group(struct_2 *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_1 *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6->field_c;\n
    v3 = 0;\n
    v8 = cgc_printf(\"Count Name\\n
____________________\\n
\");\n
    for (; v4; v4 = v8)\n
    {\n
        v0 = v3;\n
        v1 = v4->field_8->field_8;\n
        cgc_printf(v2 - 10858);\n
        v3 += 1;\n
        v8 = v4->field_4;\n
    }\n
    v9 = v5;\n
    return v8;\n
}\n
", "4225363:sub_407953": null, "4225376:cgc_find_group": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_group(unsigned int v5, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = cgc_strict_atoi(v5);\n
    if (cgc_strcmp(v5, v0 - 11412) && cgc_strcmp(v5, v0 - 11862))\n
    {\n
        if (v1)\n
        {\n
            v2 = cgc_find_group_by_number(v1, a0);\n
            if (v2)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
        v2 = cgc_find_group_by_name(v5, a0);\n
        v3 = v2;\n
        return v3;\n
    }\n
    v3 = a0->field_14;\n
    return v3;\n
}\n
", "4225604:sub_407a44": null, "4225616:cgc_find_user": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_user(unsigned int v6, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = cgc_strict_atoi(v6);\n
    v1 = 0;\n
    if (cgc_strcmp(v6, v0 - 11412))\n
        v1 = cgc_strcmp(v6, v0 - 11862);\n
    if (!(v1 & 1))\n
    {\n
        v4 = a0->field_10;\n
        return v4;\n
    }\n
    if (v2)\n
    {\n
        v3 = cgc_find_user_by_number(v2, a0);\n
        if (v3)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
    v3 = cgc_find_user_by_name(v6, a0);\n
    v4 = v3;\n
    return v4;\n
}\n
", "4225868:sub_407b4c": null, "4225872:cgc_print_working_dir": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
    char padding_4[4];\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned int field_18;\n
    void* field_1c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    char field_8;\n
    char padding_9[7];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[36];\n
    struct struct_0 *field_24;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_working_dir(struct_2 *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_3 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = &v5->field_4->field_24->field_0;\n
    v7 = cgc_printf(\"Type  Size     Date     Name       Perms\\n
_______________________________________\\n
\");\n
    for (; v3; v3 = v7)\n
    {\n
        if (v3->field_8 == 70)\n
        {\n
            cgc_get_file_size(v3->field_1c);\n
            v0 = v3->field_10;\n
            v1 = v3->field_18;\n
            cgc_printf(v2 - 10700);\n
            cgc_print_perms(v3, v5);\n
            cgc_printf(v2 - 11820);\n
        }\n
        if (v3->field_8 == 68)\n
        {\n
            v0 = v3->field_10;\n
            v1 = v3->field_18;\n
            cgc_printf(v2 - 10681);\n
            cgc_print_perms(v3, v5);\n
            cgc_printf(v2 - 11820);\n
        }\n
        v7 = v3->field_0;\n
    }\n
    return v7;\n
}\n
", "4226167:sub_407c77": null, "4226176:cgc_main_loop": "typedef struct struct_0 {\n
    unsigned int field_-1d8;\n
    unsigned int field_-1d4;\n
    unsigned int field_-1d0;\n
    unsigned int field_-1cc;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void g_40dcb8;\n
\n
int cgc_main_loop()\n
{\n
    unsigned int v0;  // [bp-0x218c]\n
    struct_0 *v1;  // [bp-0x2188]\n
    void* v2;  // [bp-0x2184]\n
    void* v3;  // [bp-0x2180]\n
    void* v4;  // [bp-0x217c]\n
    void* v5;  // [bp-0x2178]\n
    void* v6;  // [bp-0x2174]\n
    void* v7;  // [bp-0x2170]\n
    void* v8;  // [bp-0x216c]\n
    void* v9;  // [bp-0x2164]\n
    char v10;  // [bp-0x2160]\n
    void* v11;  // [bp-0x11c0]\n
    void* v12;  // [bp-0x11b8], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x11b4]\n
    void* v14;  // [bp-0x11b0], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x11ac], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x11a8], Other Possible Types: unsigned int\n
    char v17;  // [bp-0x11a4]\n
    char v18;  // [bp-0x10a4]\n
    char v19;  // [bp-0xa4]\n
    char v20;  // [bp-0x84]\n
    char v21;  // [bp-0x64]\n
    unsigned int v22;  // [bp-0x44]\n
    unsigned int v23;  // [bp-0x40]\n
    unsigned int v24;  // [bp-0x3c]\n
    unsigned int v25;  // [bp-0x38]\n
    char v26;  // [bp-0x34]\n
    unsigned int v27;  // [bp-0x10]\n
    unsigned int v28;  // [bp-0xc]\n
    unsigned int v29;  // [bp-0x8]\n
    void* v30;  // [bp+0x4]\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // edi\n
    unsigned int v33;  // esi\n
    struct_0 *v34;  // ebx\n
\n
    v29 = v31;\n
    v28 = v32;\n
    v27 = v33;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.field_-1d8;\n
    memcpy(&v26, &g_40dcb8, 36);\n
    v34 = v1;\n
    v22 = v34[29].field_-1d0;\n
    v23 = v34[29].field_-1d4;\n
    v24 = v34[29].field_-1d8;\n
    v25 = v34[28].field_-1cc;\n
    memcpy(&v21, &v34[28].field_-1d0, 32);\n
    memcpy(&v20, &v1[26].field_-1d0, 32);\n
    memcpy(&v19, &v1[24].field_-1d0, 32);\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v12 = 0;\n
        v13 = 0;\n
        v14 = 0;\n
        v15 = 0;\n
        v16 = 0;\n
        v11 = 0;\n
        cgc_bzero(&v10, 4000);\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 0;\n
        v6 = 0;\n
        v5 = 0;\n
        v4 = 0;\n
        v3 = 0;\n
        v2 = 0;\n
        cgc_bzero(&v17, 0x100);\n
        cgc_print_prompt(v30);\n
        cgc_get_string(&v17, 255, &v1[738].field_-1d0 + 3);\n
        for (v14 = 0; v14 < 16; v14 += 1)\n
        {\n
            cgc_bzero(&(&v18)[0x100 * v14], 0x100);\n
        }\n
        v16 = cgc_parse_arg(&v18, &v17);\n
        v13 = 0;\n
        v12 = 100;\n
        for (v15 = 0; v15 < 9; v15 += 1)\n
        {\n
            if (!cgc_strcmp(*((&v26 + 0x4 * v15)), &v18))\n
                v12 = v15;\n
        }\n
        v0 = v12;\n
        if (v0 <= 8)\n
            break;\n
        cgc_printf(&v1[593].field_-1d8 + 3);\n
        cgc_print_help(&v26, 9);\n
    }\n
    goto *(((stack_base)[8584] + (stack_base)[8588] * 4 - 11216)) + (stack_base)[8584];\n
}\n
", "4226988:sub_407fac": "int sub_407fac()\n
{\n
    unsigned int v6;  // [bp+0x0]\n
    unsigned int v7[7];  // [bp+0x4], Other Possible Types: unsigned int\n
    void* v8;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xfde80]\n
    unsigned int v10;  // [bp+0xfde94]\n
    char v12;  // [bp+0xfef64]\n
    char v13;  // [bp+0xff164]\n
    unsigned int v14[7];  // [bp+0x10000c]\n
    unsigned int v24;  // ecx\n
    unsigned int v26[7];  // eax\n
\n
    v6 = ebp<4> + -3744;\n
    v7 = v9 - 11819;\n
    if (!cgc_strcmp(v7, v8))\n
    {\n
        cgc_puts(v9 - 10497);\n
    }\n
    else\n
    {\n
        v24 = &v12;\n
        v26 = v14;\n
        v6 = &v13;\n
        v7[0] = v26;\n
        v10 = cgc_find_group(v7, v8);\n
        if (v10)\n
            v14[3] = v10;\n
        else\n
            cgc_printf(v9 - 10468);\n
    }\n
}\n
", "4227602:sub_408212": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_408212()\n
{\n
    unsigned int v6;  // [bp+0x0]\n
    struct_0 *v7;  // [bp+0x4], Other Possible Types: unsigned int\n
    void* v8;  // [bp+0x8]\n
    unsigned int v10;  // [bp+0xfde80]\n
    void* v11;  // [bp+0xfde94]\n
    struct_0 *v13;  // [bp+0x10000c]\n
\n
    v6 = ebp<4> + -3744;\n
    v7 = v10 - 11819;\n
    if (!cgc_strcmp(v7, v8))\n
    {\n
        cgc_puts(v10 - 10497);\n
    }\n
    else\n
    {\n
        v6 = ebp<4> + -3744;\n
        v7 = v13;\n
        v11 = cgc_find_group(v7, v8);\n
        if (!v11)\n
            cgc_printf(v10 - 10468);\n
        else\n
            cgc_print_users_in_group(v11);\n
    }\n
}\n
", "4228266:sub_4084aa": "int sub_4084aa()\n
{\n
    unsigned int v0;  // [bp-0x2194]\n
    char v1;  // [bp-0x2184]\n
    unsigned int v2;  // [bp-0x11b4]\n
    unsigned int v3;  // [bp-0x11a8]\n
    char v4;  // [bp-0xfa0]\n
    char v5;  // [bp-0x80]\n
\n
    v2 = 100;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= 8)\n
        {\n
            v0 = v2;\n
            if (v0 <= 7)\n
                goto *(((stack_base)[8580] + (stack_base)[8596] * 4 - 11148)) + (stack_base)[8580];\n
            else\n
                cgc_printf(*(&v1) - 10449);\n
        }\n
        else\n
        {\n
            if (!cgc_strcmp(*(&(&v5)[4 * v3]), &v4))\n
                v2 = v3;\n
            v3 += 1;\n
        }\n
    }\n
}\n
", "4231240:sub_409048": "int sub_409048()\n
{\n
    unsigned int v5;  // [bp+0x0]\n
    unsigned int v6;  // [bp+0x4]\n
    unsigned int v7;  // [bp+0x8]\n
    unsigned int v9;  // [bp+0xfde80]\n
    unsigned int v12;  // [bp+0xfde90]\n
    unsigned int v15;  // [bp+0xfde9c]\n
    unsigned int v17;  // [bp+0xfee4c]\n
    unsigned int v18;  // [bp+0xfee54]\n
    char v19;  // [bp+0xfef64]\n
    char v20;  // [bp+0xff164]\n
    unsigned int v22;  // [bp+0x10000c]\n
    unsigned int v76;  // ecx\n
    unsigned int v79;  // eax\n
    unsigned int v115;  // eax\n
\n
    v5 = ebp<4> + -3744;\n
    v6 = v9 - 11819;\n
    if (!cgc_strcmp(v6, v7))\n
    {\n
        cgc_puts(v9 - 10355);\n
    }\n
    else\n
    {\n
        v17 = cgc_strict_atoi(&v19 + 0x300);\n
        if (!v17)\n
        {\n
            cgc_puts(v9 - 9612);\n
        }\n
        else\n
        {\n
            v76 = &v19;\n
            v79 = *((v22 + 4));\n
            v5 = &v20;\n
            v6 = v79;\n
            v15 = cgc_find_file_node_by_name(v6, v7);\n
            v12 = *((v15 + 28));\n
            if (!v15)\n
            {\n
                cgc_puts(v9 - 9789);\n
                cgc_printf(v9 - 10432);\n
            }\n
            else\n
            {\n
                v18 = cgc_get_file_size(v12);\n
                if (v17 > v18)\n
                    cgc_puts(v9 - 9593);\n
                v18 -= v17;\n
                v115 = v18;\n
                v5 = v12;\n
                v6 = v115;\n
                cgc_delete_file_bytes(v6, v7);\n
            }\n
        }\n
    }\n
}\n
", "4233481:sub_409909": "int sub_409909()\n
{\n
    char v0;  // [bp-0x2184]\n
    char v2;  // [bp+0x21bc]\n
    char v3;  // [bp+0x21c0]\n
    char v4;  // [bp+0x21c4]\n
    char v5;  // [bp+0x21c8]\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebp\n
\n
    cgc_puts(*(&v0) - 9578);\n
    v6 = *(&v2);\n
    v7 = *(&v3);\n
    v8 = *(&v4);\n
    v9 = *(&v5);\n
    return;\n
}\n
", "4233506:sub_409922": "int sub_409922()\n
{\n
    char v0;  // [bp-0x30]\n
\n
    cgc_print_help(&v0, 9);\n
}\n
", "4233536:sub_409940": "int sub_409940()\n
{\n
    char v1;  // [bp+0x8]\n
\n
    cgc_print_working_dir(*(&v1));\n
}\n
", "4233558:sub_409956": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int sub_409956()\n
{\n
    unsigned int v0;  // [bp-0x21a8]\n
    char v1;  // [bp-0x2184]\n
    struct_0 *v2;  // [bp-0x217c], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x2174]\n
    char v4;  // [bp-0xfa0]\n
    char v6;  // [bp+0x8]\n
\n
    if (!cgc_strcmp(&v4, *(&v1) - 11819))\n
    {\n
        cgc_puts(*(&v1) - 10355);\n
    }\n
    else\n
    {\n
        v3 = cgc_find_file_by_name(&v4, *((*(&v6) + 4)));\n
        if (v3)\n
        {\n
            v2 = v3->field_4;\n
            cgc_puts(*(&v1) - 10252);\n
            for (; v2; v2 = *((v2 + 12)))\n
            {\n
                v0 = *((v2 + 4));\n
                if (v0 != cgc_write(v2, *((v2 + 4))))\n
                    cgc_puts(*(&v1) - 9570);\n
            }\n
            cgc_puts(*(&v1) - 9552);\n
        }\n
    }\n
}\n
", "4233860:sub_409a84": "int sub_409a84()\n
{\n
    char v0;  // [bp-0x2184]\n
    unsigned int v1;  // [bp-0x2168]\n
    char v2;  // [bp-0xfa0]\n
    char v4;  // [bp+0x8]\n
\n
    if (!cgc_strcmp(&v2, *(&v0) - 11819))\n
    {\n
        cgc_puts(*(&v0) - 10083);\n
    }\n
    else if (cgc_strcmp(&v2, *(&v0) - 9533))\n
    {\n
        v1 = cgc_find_directory_by_name(&v2, *((*(&v4) + 4)));\n
        if (v1)\n
            *((*(&v4) + 4)) = v1;\n
        cgc_puts(*(&v0) - 9530);\n
    }\n
    else if (*((*((*(&v4) + 4)) + 32)))\n
    {\n
        *((*(&v4) + 4)) = *((*((*(&v4) + 4)) + 32));\n
    }\n
}\n
", "4234179:sub_409bc3": null, "4234192:cgc_strofdate": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void g_40dd4c;\n
\n
int cgc_strofdate(unsigned int v21)\n
{\n
    unsigned int v0;  // [bp-0xb0]\n
    unsigned int v1;  // [bp-0xac]\n
    unsigned int v2;  // [bp-0xa8]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x90]\n
    unsigned int v6;  // [bp-0x8c]\n
    unsigned int v7;  // [bp-0x88]\n
    unsigned int v8;  // [bp-0x84]\n
    unsigned int v9;  // [bp-0x80]\n
    unsigned int v10;  // [bp-0x7c]\n
    unsigned int v11;  // [bp-0x78]\n
    char v12;  // [bp-0x74]\n
    char v13;  // [bp-0x70]\n
    char v14;  // [bp-0x6c]\n
    char v15;  // [bp-0x68]\n
    char v16;  // [bp-0x64]\n
    char v17;  // [bp-0x60]\n
    char v18;  // [bp-0x5c]\n
    char v19;  // [bp-0x2c]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v22;  // ebx\n
\n
    v20 = v22;\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    memcpy(&v19, &g_40dd4c, 28);\n
    memcpy(&v18, v5 - 332, 48);\n
    cgc_date_from_epoch(v21);\n
    v11 = (0 CONCAT (0 CONCAT v21) /m 86400) /m 7 >> 32;\n
    v10 = *(&(&v19)[4 * v11]);\n
    v9 = *(&(&v18)[4 + 4 * *(&v13)]);\n
    v6 = v10;\n
    v7 = v9;\n
    v8 = *(&v17);\n
    v0 = *(&v12);\n
    v1 = *(&v14);\n
    v2 = *(&v15);\n
    v3 = *(&v16);\n
    v4 = v8;\n
    return cgc_printf(v5 - 9328);\n
}\n
", "4234470:sub_409ce6": null, "4234480:cgc_date_from_epoch": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_date_from_epoch(unsigned int v12, unsigned int a0[6])\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    char v1;  // [bp-0x5c]\n
    unsigned int v2;  // [bp-0x58]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x24]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 1970;\n
    v10 = 1;\n
    v9 = 1;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = v12;\n
    v4 = 1;\n
    while (v4)\n
    {\n
        v3 = 0x1e28500;\n
        if (!(v11 >> 31 CONCAT v11) /m 4 >> 32 && !(v11 == 2100))\n
            goto LABEL_409d7c;\n
        v3 = 31536000;\n
LABEL_409d7c:\n
        if (v5 > v3)\n
        {\n
            v5 -= v3;\n
            v11 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
        }\n
    }\n
    memcpy(&v1, v0 - 11068, 48);\n
    if (!(v11 >> 31 CONCAT v11) /m 4 >> 32 && !(v11 == 2100))\n
        goto LABEL_409df5;\n
    v2 = 28;\n
LABEL_409df5:\n
    v4 = 1;\n
    while (v4)\n
    {\n
        if (v5 <= *(&(&v1)[4 + 4 * v10]) * 86400)\n
        {\n
            v4 = 0;\n
        }\n
        else\n
        {\n
            v5 -= *(&(&v1)[4 + 4 * v10]) * 86400;\n
            v10 += 1;\n
        }\n
    }\n
    for (; v5 >= 86400; v9 += 1)\n
    {\n
        v5 -= 86400;\n
    }\n
    for (; v5 >= 3600; v8 += 1)\n
    {\n
        v5 -= 3600;\n
    }\n
    for (; v5 >= 60; v7 += 1)\n
    {\n
        v5 -= 60;\n
    }\n
    v6 = v5;\n
    a0[0] = v11;\n
    a0[1] = v10;\n
    a0[2] = v9;\n
    a0[3] = v8;\n
    a0[4] = v7;\n
    a0[5] = v6;\n
    return a0;\n
}\n
", "4235020:sub_409f0c": null, "4235024:cgc_make_epoch": "extern void g_40b3a8;\n
\n
int cgc_make_epoch(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    char v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 = 0;\n
    memcpy(&v2, &g_40b3a8, 48);\n
    if (!(v5 >> 31 CONCAT v5) /m 4 >> 32 && !(v5 == 2100))\n
        goto LABEL_409f81;\n
    v3 = 28;\n
LABEL_409f81:\n
    v1 = 1970;\n
    while (v1 < v5)\n
    {\n
        if ((v1 >> 31 CONCAT v1) /m 4 >> 32)\n
        {\n
LABEL_409fb5:\n
            v4 += 31536000;\n
            goto LABEL_409fd0;\n
        }\n
        else\n
        {\n
            if (v1 == 2100)\n
                goto LABEL_409fb5;\n
            v4 += 0x1e28500;\n
LABEL_409fd0:\n
            v1 += 1;\n
        }\n
    }\n
    for (v0 = 1; v0 < a0; v0 += 1)\n
    {\n
        v4 = *(&(&v2)[4 + 4 * v0]) * 86400 + v4;\n
    }\n
    v4 = (a1 - 1) * 86400 + v4;\n
    v4 = a2 * 3600 + v4;\n
    v4 = a3 * 60 + v4;\n
    v4 = a4 + v4;\n
    return v4;\n
}\n
", "4235347:sub_40a053": null, "4235360:cgc_get_time": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_time()\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    char v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 100;\n
    v4 = 100;\n
    v3 = 100;\n
    cgc_puts(\"Please enter the date as prompted\");\n
    for (; !v8; LABEL_40a100:\n
)\n
    {\n
        v8 = cgc_get_int(v0 - 9267);\n
        if (v8 >= 1970 && v8 <= 2105)\n
            goto LABEL_40a100;\n
        cgc_puts(v0 - 9234);\n
        v8 = 0;\n
    }\n
    for (; !v7; LABEL_40a154:\n
)\n
    {\n
        v7 = cgc_get_int(v0 - 9215);\n
        if (v7 >= 1 && v7 <= 12)\n
            goto LABEL_40a154;\n
        cgc_puts(v0 - 9203);\n
        v7 = 0;\n
    }\n
    for (; !v6; LABEL_40a1e8:\n
)\n
    {\n
        memcpy(&v1, v0 - 10972, 48);\n
        if (!(v8 >> 31 CONCAT v8) /m 4 >> 32 && !(v8 == 2100))\n
            goto LABEL_40a1b0;\n
        v2 = 28;\n
LABEL_40a1b0:\n
        v6 = cgc_get_int(v0 - 9183);\n
        if (v6 >= 1 && v6 <= *(&(&v1)[4 + 4 * v7]))\n
            goto LABEL_40a1e8;\n
        v6 = 0;\n
    }\n
    for (; v5 == 100; v5 = 100)\n
    {\n
        v5 = cgc_get_int(v0 - 9173);\n
    }\n
    for (; v4 == 100; v4 = 100)\n
    {\n
        v4 = cgc_get_int(v0 - 9154);\n
    }\n
    for (; v3 == 100; v3 = 100)\n
    {\n
        v3 = cgc_get_int(v0 - 9133);\n
    }\n
    return cgc_make_epoch(v8, v7, v6, v5, v4, v3);\n
}\n
", "4235985:sub_40a2d1": null, "4236000:cgc_start_UI": "typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_start_UI(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_puts(\"Welcome to SPIFFS (Somewhat Poorly Implemented Fast File System)\");\n
    v2->field_18 = cgc_get_time();\n
    v4 = v1;\n
    return cgc_main_loop();\n
}\n
", "4236076:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_deallocate": null, "5242912:cgc_log10": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}