{"4206592:_init": "extern struct_0 *g_40b528;\n
\n
int _init()\n
{\n
    if (g_40b528)\n
    {\n
        g_40b528();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4206704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206720:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206736:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206752:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206768:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206784:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206800:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206816:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206832:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206848:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206864:sub_403110": "int sub_403110()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206870:sub_403116": null, "4206880:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206923:sub_40314b": null, "4206924:sub_40314c": "int sub_40314c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206928:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206932:sub_403154": null, "4206944:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33739;\n
    v6 = v5 + 18;\n
    v7 = v5 + 18;\n
    if (v7 == v6)\n
        return v5 + 18;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4206995:sub_403193": "int sub_403193()\n
{\n
}\n
", "4207001:sub_403199": "int sub_403199()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207008:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33675;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 18;\n
    v9 = (v6 + 18 - (v6 + 18) >> 31) + (18 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207079:sub_4031e7": "int sub_4031e7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207088:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40b51c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40b51c)\n
    {\n
        v0 = __dso_handle;\n
        sub_403110();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207163:sub_40323b": "int sub_40323b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207168:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207177:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207181:sub_40324d": null, "4207184:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4207276:sub_4032ac": null, "4207280:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[76];\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_4c->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_4c == v9)\n
        {\n
            v1->field_4c = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_4c == v9)\n
    {\n
        v1->field_4c = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4207963:sub_40355b": null, "4207968:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_4c;\n
    v7->field_4c = v3;\n
    return v3;\n
}\n
", "4208168:sub_403628": null, "4208176:cgc_free": "typedef struct struct_1 {\n
    char padding_0[76];\n
    struct struct_0 *field_4c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_0 *v3[2];  // [bp-0x1c]\n
    struct struct_0 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_1 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_1 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_0 *[2], struct_1 *, struct struct_0 **, unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_4c != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_4c = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_4c;\n
    v2[1] = 0;\n
    if (v9->field_4c)\n
    {\n
        v12 = v1;\n
        *((&v12->field_4c->field_0 + (v12->field_4c->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_4c = v7;\n
    return v1;\n
}\n
", "4208640:cgc_floor": "typedef struct struct_1 {\n
    char padding_0[76];\n
    struct struct_0 *field_4c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_0 *v3[2];  // [bp-0x1c]\n
    struct struct_0 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_1 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_1 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_0 *[2], struct_1 *, struct struct_0 **, unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_4c != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_4c = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_4c;\n
    v2[1] = 0;\n
    if (v9->field_4c)\n
    {\n
        v12 = v1;\n
        *((&v12->field_4c->field_0 + (v12->field_4c->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_4c = v7;\n
    return v1;\n
}\n
", "4208804:sub_4038a4": null, "4208816:cgc_round_away_from_zero": null, "4208970:sub_40394a": null, "4208976:cgc_round": null, "4209120:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4209212:sub_403a3c": null, "4209216:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209425:sub_403b11": null, "4209440:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        v1->field_0 = (v3 & 15) + 48;\n
        if (v1->field_0 > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4209633:sub_403be1": null, "4209648:cgc_float_to_str": null, "4210511:sub_403f4f": null, "4210512:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v26, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    void* v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp-0xc]\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!v26)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(v26))\n
    {\n
        if (*(v26) != 64)\n
        {\n
            cgc_putc(*(v26));\n
            v26 += 1;\n
            v24 += 1;\n
LABEL_404824:\n
        }\n
        else\n
        {\n
            v26 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(v26) == 64)\n
            {\n
                cgc_putc(64);\n
                v26 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 45)\n
            {\n
                v19 = 1;\n
                v26 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(v26) == 48)\n
                {\n
                    v20 = 1;\n
                    v26 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
                }\n
            }\n
            if (*(v26) == 46)\n
            {\n
                v26 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
            }\n
            if (*(v26) == 99)\n
            {\n
                v27 = a0;\n
                a0 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                cgc_putc(v16);\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 100)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v15 = &*(v28)->field_0;\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; *(v14); v14 += 1)\n
                {\n
                    cgc_putc(*(v14));\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 120)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v13 = &*(v29)->field_0;\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; *(v12); v12 += 1)\n
                {\n
                    cgc_putc(*(v12));\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    cgc_putc(v10->field_0);\n
                    v24 += 1;\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (!(*(v26) == 115))\n
                goto LABEL_404824;\n
            v35 = a0;\n
            a0 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_4046a3;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_4046a3:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (v20)\n
                        cgc_putc(48);\n
                    else\n
                        cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                cgc_putc(*(v9));\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            v26 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4212795:sub_40483b": null, "4212800:cgc_vsprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v26, char *a0, struct struct_0 **a1)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    char *v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v25;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!a0)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            *((v26 + v24)) = *(a0);\n
            a0 += 1;\n
            v24 += 1;\n
LABEL_40507b:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(a0) == 64)\n
            {\n
                *((v26 + v24)) = 64;\n
                a0 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v19 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v20 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                *((v26 + v24)) = v16;\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v15 = *(v28);\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            *((v26 + v24)) = 48;\n
                        else\n
                            *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; *(v14); v14 += 1)\n
                {\n
                    *((v26 + v24)) = *(v14);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v13 = *(v29);\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            *((v26 + v24)) = 48;\n
                        else\n
                            *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; *(v12); v12 += 1)\n
                {\n
                    *((v26 + v24)) = *(v12);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 8;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    *((v26 + v24)) = v10->field_0;\n
                    v24 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_40507b;\n
            v35 = a1;\n
            a1 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_404f1e;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_404f1e:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (!v20)\n
                        *((v26 + v24)) = 32;\n
                    else\n
                        *((v26 + v24)) = 48;\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                *((v26 + v24)) = *(v9);\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    *((v26 + v24)) = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4214930:sub_405092": null, "4214944:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4215008:cgc_sprintf": "int cgc_sprintf(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    v3[v0] = 0;\n
    return v0;\n
}\n
", "4215087:sub_40512f": null, "4215088:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4215182:sub_40518e": null, "4215184:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4215238:sub_4051c6": null, "4215248:cgc_isnan": null, "4215271:sub_4051e7": null, "4215280:cgc_isinf": null, "4215327:sub_40521f": null, "4215328:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = v1 + 32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4215386:sub_40525a": null, "4215392:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = v1 + -32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4215450:sub_40529a": null, "4215456:cgc_strcmp": "int cgc_strcmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*((v2 + v0)) && !*((a0 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!*((a0 + v0)))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (v0[v2] < v0[a0])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (v0[v2] <= v0[a0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4215694:sub_40538e": null, "4215696:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4215787:sub_4053eb": null, "4215792:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4215898:sub_40545a": null, "4215904:cgc_flush_input": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flush_input(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x4bc]\n
    unsigned int v1;  // [bp-0x4ac]\n
    char v2;  // [bp-0x4a4]\n
    void* v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    char v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    char v7;  // [bp-0x94]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        cgc_memset(&v7, 0);\n
        v10 = v9 >> 5;\n
        *(&(&v7)[4 * v10]) = 1 << (v9 & 31 & 31) | *(&(&v7)[4 * v10]);\n
        v3 = 0;\n
        v4 = 10;\n
        v0 = &v5;\n
        v6 = cgc_fdwait(v9 + 1, &v7, 0, &v3);\n
        if (v6)\n
        {\n
            v8 = v6;\n
            return v8;\n
        }\n
        if (!(*(&(&v7)[4 * (v9 >> 5)]) & 1 << (v9 & 31 & 31)))\n
        {\n
            v8 = 0;\n
            return v8;\n
        }\n
        cgc_receive(v9, &v2, 0x400);\n
    }\n
}\n
", "4216236:sub_4055ac": null, "4216240:cgc_memset": "int cgc_memset(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *((v3 + v2)) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        *((v3 + v2)) = v1;\n
    }\n
    return v3;\n
}\n
", "4216409:sub_405659": null, "4216416:cgc_getline": "int cgc_getline(char *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = a0;\n
    v1 = cgc_receive_until(v2, 10);\n
    if (v1 != a0)\n
    {\n
        v2[v1] = 0;\n
        return v1;\n
    }\n
    v2[1 + a0] = 0;\n
    return v1;\n
}\n
", "4216519:sub_4056c7": null, "4216528:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v4 < a1; v4 += 1)\n
    {\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (v2 == a0)\n
                break;\n
            v4[v5] = v2;\n
        }\n
    }\n
    if (v4 == a1)\n
        cgc_flush_input(0);\n
    return v4;\n
}\n
", "4216749:sub_4057ad": null, "4216752:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *((v1 + v0)) = *((a0 + v0));\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v1;\n
}\n
", "4216896:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4217300:sub_4059d4": null, "4217312:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4217367:sub_405a17": null, "4217376:cgc_abs": "int cgc_abs(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < 0)\n
    {\n
        v0 = -(v1);\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4217420:sub_405a4c": null, "4217424:_ZN6StringC2Ev": "int String::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4217448:sub_405a68": null, "4217456:_ZN6StringC1EPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__ctor__(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v4;\n
    v2 = cgc_strlen(a0) + 1;\n
    v6 = v1;\n
    v6[1] = operator new[](v2);\n
    cgc_memcpy(v6[1], a0, v2 - 1);\n
    v7 = v1;\n
    *((v7[1] + v2 - 1)) = 0;\n
    v7[0] = v2 - 1;\n
    v8 = v3;\n
    return v1;\n
}\n
", "4217590:sub_405af6": null, "4217600:_ZN6StringC2ERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__base_ctor__(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[2];  // eax\n
    unsigned int v7[2];  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v4;\n
    v2 = a0[0] + 1;\n
    v6 = v1;\n
    v6[1] = operator new[](v2);\n
    cgc_memcpy(v6[1], a0[1], a0[0]);\n
    v7 = v1;\n
    *((v7[1] + v2 - 1)) = 0;\n
    v7[0] = a0[0];\n
    v8 = v3;\n
    return v1;\n
}\n
", "4217726:sub_405b7e": null, "4217728:_ZN6StringD2Ev": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::__base_dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    v2 = v4;\n
    if (!v4->field_4)\n
        return v3;\n
    v4 = v2->field_4;\n
    v0 = v4;\n
    if (!v4)\n
        return v4;\n
    v4 = operator delete[](v0);\n
}\n
", "4217812:sub_405bd4": null, "4217824:_ZN6StringpLERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator+=(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v9[2];  // eax\n
    unsigned int v10[2];  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v6;\n
    v4 = v2[0] + a0[0] + 1;\n
    v9 = v2;\n
    v3 = operator new[](v4);\n
    cgc_memcpy(v3, v9[1], v9[0]);\n
    cgc_memcpy(v3 + v2[0], a0[1], a0[0]);\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v10 = v2;\n
    v10[1] = v3;\n
    v10[0] = v4 - 1;\n
    return v2;\n
}\n
", "4218028:sub_405cac": null, "4218032:_ZNK6StringplERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator+ const(unsigned int v6, unsigned int a0[2], unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v3 = v1;\n
    v0[0] = a1;\n
    String::__base_ctor__(&v4, a0);\n
    String::__base_ctor__(v1, String::operator+=(&v4, v0));\n
    String::__base_dtor__(&v4);\n
    v8 = v5;\n
    return v3;\n
}\n
", "4218157:sub_405d2d": null, "4218160:_ZNK6String5c_strEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int String::c_str const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4218174:sub_405d3e": null, "4218176:_ZN6String6lengthEv": "int String::length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4218189:sub_405d4d": null, "4218192:_ZN6String5emptyEv": "int String::empty(unsigned int *v0)\n
{\n
    return !*(v0);\n
}\n
", "4218214:sub_405d66": null, "4218224:_ZNK6String5upperEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::upper const(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v2[0] = v1;\n
    v4 = 0;\n
    String::__base_ctor__(v1, a0);\n
    for (v3 = 0; v3 < v1[0]; v3 += 1)\n
    {\n
        *((v1[1] + v3)) = cgc_toupper(*((v1[1] + v3)));\n
    }\n
    v4 = 1;\n
    if (!(v4 & 1))\n
        String::__base_dtor__(v1);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4218393:sub_405e19": null, "4218400:_ZNK6String5lowerEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::lower const(unsigned int v6[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v6;\n
    v2[0] = v1;\n
    v4 = 0;\n
    String::__base_ctor__(v1, a0);\n
    for (v3 = 0; v3 < v1[0]; v3 += 1)\n
    {\n
        *((v1[1] + v3)) = cgc_tolower(*((v1[1] + v3)));\n
    }\n
    v4 = 1;\n
    if (!(v4 & 1))\n
        String::__base_dtor__(v1);\n
    v8 = v5;\n
    return v2;\n
}\n
", "4218569:sub_405ec9": null, "4218576:_ZNK6String11StripSpacesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::StripSpaces const(unsigned int v7, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v7;\n
    v3 = v2;\n
    v4[0] = a0;\n
    for (v5 = 0; v5 < v4[0]; v5 += 1)\n
    {\n
        if (*((v4[1] + v5)) != 32)\n
            break;\n
    }\n
    v0 = -1;\n
    String::SubString const(v2, v4, v5);\n
    return v3;\n
}\n
", "4218733:sub_405f6d": null, "4218736:_ZNK6String9SubStringEmm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::SubString const(unsigned int v8, unsigned int a0[2], char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[2];  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[2];  // [bp-0x20]\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v9;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v2 = v1;\n
    v3[0] = a0;\n
    if (a1 >= v3[0])\n
    {\n
        String::__ctor__(v1, v0 - 9350);\n
        return v2;\n
    }\n
    if (a2 > v3[0])\n
        a2 = v3[0];\n
    if (a1 >= a2)\n
    {\n
        String::__ctor__(v1, v0 - 9350);\n
        return v2;\n
    }\n
    v7 = a2 - a1;\n
    v6 = operator new[](v7 + 1);\n
    v5 = 0;\n
    for (v4 = a1; v4 < a2; v4 += 1)\n
    {\n
        v9 = v5;\n
        v5 = v9 + 1;\n
        v6[v9] = *((v3[1] + v4));\n
    }\n
    v6[v5] = 0;\n
    String::__ctor__(v1, v6);\n
    return v2;\n
}\n
", "4219026:sub_406092": null, "4219040:_ZN6String4TrimEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::Trim(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x20]\n
    unsigned int v2[2];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // ebx\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v3 = v1;\n
    v2[0] = a0;\n
    String::SubString const(&v4, v2, NULL, a1);\n
    String::operator=(v2);\n
    String::__base_dtor__(&v4);\n
    String::__base_ctor__(v1, v2);\n
    v11 = *(&v5);\n
    v12 = v6;\n
    return v3;\n
}\n
", "4219187:sub_406133": null, "4219200:_ZN6StringaSERKS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::operator=(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[2];  // eax\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v3 = a0[0] + 1;\n
    v5 = v2;\n
    v5[1] = operator new[](v3);\n
    cgc_memcpy(v5[1], a0[1], a0[0]);\n
    v6 = v2;\n
    *((v6[1] + v3 - 1)) = 0;\n
    v6[0] = a0[0];\n
    return v2;\n
}\n
", "4219376:_ZNK6StringeqERKS_": "int String::operator== const(unsigned int v3[2], unsigned int a0[2])\n
{\n
    unsigned int v0[2];  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0[0] = v3;\n
    if (v0[0] != a0[0])\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v0[0])\n
        {\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
        if (*((v0[1] + v1)) != *((a0[1] + v1)))\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4219516:sub_40627c": null, "4219520:_ZNK6StringneERKS_": "int String::operator!= const(unsigned int v0[2], unsigned int a0[2])\n
{\n
    return (String::operator== const(v0, a0) ^ 255) & 1;\n
}\n
", "4219576:sub_4062b8": null, "4219584:_ZN6String9SetStringEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int String::SetString(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5[2];  // eax\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1])\n
    {\n
        v0 = v2[1];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v3 = cgc_strlen(a0) + 1;\n
    v5 = v2;\n
    v5[1] = operator new[](v3);\n
    cgc_memcpy(v5[1], a0, v3 - 1);\n
    v6 = v2;\n
    *((v6[1] + v3 - 1)) = 0;\n
    v6[0] = v3 - 1;\n
    return v2;\n
}\n
", "4219768:sub_406378": null, "4219776:_ZN11CDataStreamC1Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_0;\n
\n
int CDataStream::__ctor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = 0;\n
    v1->field_8 = 0;\n
    return v0;\n
}\n
", "4219797:sub_406395": null, "4219808:_ZN11CDataStreamD2Ev": "int CDataStream::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4219816:sub_4063a8": null, "4219824:_ZN11CDataStream5SetupEi": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
    char field_9;\n
} struct_0;\n
\n
int CDataStream::Setup(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_4 = a0;\n
    v1->field_8 = 0;\n
    v1->field_9 = 0;\n
    return v0;\n
}\n
", "4219852:sub_4063cc": null, "4219856:_ZN11CDataStream7ReadBitEv": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int CDataStream::ReadBit(char v2[10])\n
{\n
    char v0[10];  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    char v3[10];  // eax\n
\n
    *(&v0[0]) = v2;\n
    v1 = 0;\n
    if (v0[8] >= 8)\n
        CDataStream::RefillBuffer(v0, &_GLOBAL_OFFSET_TABLE_);\n
    v3 = v0;\n
    v1 = (v3[9] & 1 << (7 - v3[8] & 31)) >> (7 - v3[8] & 31);\n
    v3[8] = v3[8] + 1;\n
    return v1;\n
}\n
", "4219986:sub_406452": null, "4220000:_ZN11CDataStream12RefillBufferEv": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char field_9;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDataStream::RefillBuffer(struct_0 *v6)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = 1;\n
    if (v2->field_0 >= 0xfa00)\n
        cgc__terminate();\n
    v0 = &v3;\n
    v5 = cgc_receive(v2->field_4, &v4, 1);\n
    if (v5)\n
        cgc__terminate();\n
    if (v3 != 1)\n
        cgc__terminate();\n
    v7 = v2;\n
    v7->field_0 = v7->field_0 + 1;\n
    v7->field_9 = v4;\n
    v7->field_8 = 0;\n
    return v2;\n
}\n
", "4220184:sub_406518": null, "4220192:_ZN11CDataStream8ReadByteEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDataStream::ReadByte(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1[10];  // [bp-0x10]\n
    char v2;  // [bp-0xa]\n
    char v3;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v1[0]) = v4;\n
    v3 = 0;\n
    for (v2 = 0; v2 < 8; v2 += 1)\n
    {\n
        v3 |= CDataStream::ReadBit(v1) << (7 - v2 & 31);\n
    }\n
    return v3;\n
}\n
", "4220308:sub_406594": null, "4220320:_ZN11CDoubleListC1Ev": "int CDoubleList::__ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4220344:sub_4065b8": null, "4220352:_ZN11CDoubleListD2Ev": "int CDoubleList::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CDoubleList::DeleteAll(v1, *(&v0));\n
}\n
", "4220389:sub_4065e5": null, "4220400:_ZN11CDoubleList9DeleteAllEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleList::DeleteAll(unsigned int v5[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v5;\n
    for (v3 = v2[0]; v3; v3 = v4)\n
    {\n
        v4 = CDoubleListElement::GetNext const();\n
        v0 = v3;\n
        if (v0)\n
        {\n
            CDoubleListElement::__base_dtor__();\n
            operator delete(v0);\n
        }\n
    }\n
    v6 = v2;\n
    v6[0] = 0;\n
    v6[1] = 0;\n
    return v2;\n
}\n
", "4220544:_ZN11CDoubleList10InsertHeadEP18CDoubleListElement": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CDoubleList::InsertHead(struct_1 *v1, struct_1 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v4;  // eax\n
    struct_1 *v5;  // ecx\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (v0->field_0)\n
    {\n
        v3 = v0;\n
        a0->field_4 = 0;\n
        a0->field_0 = *(v3);\n
        *((*(v3) + 4)) = a0;\n
        *(v3) = a0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v4 = v0;\n
        v5 = a0;\n
        v4->field_4 = v5;\n
        v4->field_0 = &v5->field_0;\n
        a0->field_0 = 0;\n
        v3 = a0;\n
        *((v3 + 4)) = 0;\n
        return a0;\n
    }\n
}\n
", "4220660:sub_4066f4": null, "4220672:_ZN11CDoubleList10InsertTailEP18CDoubleListElement": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int CDoubleList::InsertTail(struct_0 *v1, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // ecx\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    if (!a0)\n
    {\n
        return v1;\n
    }\n
    else if (v0->field_4)\n
    {\n
        v3 = v0;\n
        a0->field_0 = 0;\n
        a0->field_4 = *((v3 + 4));\n
        *(*((v3 + 4))) = a0;\n
        *((v3 + 4)) = a0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v4 = v0;\n
        v5 = a0;\n
        v4->field_0 = v5;\n
        v4->field_4 = &v5->field_0;\n
        a0->field_0 = 0;\n
        v3 = a0;\n
        *((v3 + 4)) = 0;\n
        return a0;\n
    }\n
}\n
", "4220791:sub_406777": null, "4220800:_ZN11CDoubleList11InsertAfterEP18CDoubleListElementS1_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CDoubleList::InsertAfter(struct_0 *v2, unsigned int *a0, struct_1 *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int, struct_1 *\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = v3;\n
    if (!a1)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        v3 = CDoubleList::InsertHead(v1, a1);\n
        return v3;\n
    }\n
    else if (a0 != v1->field_4)\n
    {\n
        a1->field_0 = *(a0);\n
        a1->field_4 = a0;\n
        *(a0) = a1;\n
        v3 = a1;\n
        if (!v3->field_0)\n
            return v3;\n
        v3 = a1->field_0;\n
        v3->field_4 = a1;\n
    }\n
    else\n
    {\n
        v3 = CDoubleList::InsertTail(v1, a1);\n
        return v3;\n
    }\n
}\n
", "4220990:sub_40683e": null, "4220992:_ZN11CDoubleList6UnlinkEP18CDoubleListElement": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_3 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
} struct_3;\n
\n
int CDoubleList::Unlink(struct struct_0 *v1[2], struct_2 *a0)\n
{\n
    struct struct_0 *v0[2];  // [bp-0x8]\n
    struct struct_0 *v2[2];  // eax\n
    struct struct_0 *v3[2];  // ecx\n
    struct struct_0 *v4[2];  // eax\n
    struct struct_0 *v5[2];  // eax\n
    struct struct_0 *v6[2];  // ecx\n
    struct struct_0 *v7[2];  // eax\n
    struct struct_0 *v8[2];  // eax\n
    struct_2 *v9;  // eax, Other Possible Types: unsigned int\n
\n
    v0[0] = &v2[0];\n
    v0[0] = &v1[0];\n
    if (a0 != v0[0])\n
    {\n
        if (a0 != v0[1])\n
        {\n
            if (a0->field_0)\n
                a0->field_0->field_4 = a0->field_4;\n
            if (a0->field_4)\n
                a0->field_4->field_0 = a0->field_0;\n
            a0->field_0 = 0;\n
            v9 = a0;\n
            v9->field_4 = 0;\n
        }\n
        else\n
        {\n
            v6 = v0;\n
            if (v6[0] == v6[1])\n
            {\n
                v7 = v0;\n
                v7[1] = 0;\n
                v7[0] = 0;\n
            }\n
            else\n
            {\n
                v8 = v0;\n
                v8[1] = v8[1]->field_4;\n
                v8[1]->field_0 = 0;\n
            }\n
            a0->field_0 = 0;\n
            v9 = a0;\n
            v9->field_4 = 0;\n
        }\n
        return v9;\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        if (v3[0] == v3[1])\n
        {\n
            v4 = v0;\n
            v4[1] = 0;\n
            v4[0] = 0;\n
        }\n
        else\n
        {\n
            v5 = v0;\n
            v5[0] = v5[0]->field_0;\n
            v5[0]->field_4 = 0;\n
        }\n
        a0->field_0 = 0;\n
        v9 = a0;\n
        v9->field_4 = 0;\n
        return a0;\n
    }\n
}\n
", "4221272:sub_406958": null, "4221280:_ZNK18CDoubleListElement7GetNextEv": "int CDoubleListElement::GetNext const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4221293:sub_40696d": null, "4221296:_ZN18CDoubleListElementD2Ev": "int CDoubleListElement::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4221304:sub_406978": null, "4221312:_ZN20CMessageFragmentList28GetFragmentForSequenceNumberEt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageFragmentList::GetFragmentForSequenceNumber(unsigned int v4, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = CDoubleList::GetFirst const();\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (CMessageFragmentList::CFragmentData::GetSequenceNumber const() == a0)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = CDoubleListElement::GetNext const(v1);\n
    }\n
}\n
", "4221451:sub_406a0b": null, "4221456:_ZNK20CMessageFragmentList13CFragmentData23GetAssembledMessageSizeEv": "typedef struct struct_0 {\n
    char padding_0[72];\n
    char field_48;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageFragmentList::CFragmentData::GetAssembledMessageSize const(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    v4 = 0;\n
    for (v3 = 0; v3 < v2->field_48; v3 += 1)\n
    {\n
        if (*((8 + &v2->padding_0[0] + 0x4 * v3)))\n
        {\n
            v0 = *((8 + &v2->padding_0[0] + 0x4 * v3));\n
            v4 = CMessagePacket::GetDataLength const() + v4;\n
        }\n
    }\n
    return v4;\n
}\n
", "4221594:sub_406a9a": null, "4221600:_ZNK20CMessageFragmentList13CFragmentData17AssembleFragmentsEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageFragmentList::CFragmentData::AssembleFragments const(unsigned int v12)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    void* v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    void* v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v12;\n
    v10 = operator new[](CMessageFragmentList::CFragmentData::GetAssembledMessageSize const(v5));\n
    v9 = 0;\n
    for (v8 = 0; v8 < 16; v8 += 1)\n
    {\n
        if (*((8 + v5 + 4 * v8)))\n
        {\n
            v3 = v10 + v9;\n
            v4 = CMessagePacket::GetData();\n
            v0 = v4;\n
            cgc_memcpy(v3, v0, CMessagePacket::GetDataLength const());\n
            v9 = CMessagePacket::GetDataLength const(*((8 + v5 + 4 * v8)), v0) + v9;\n
        }\n
    }\n
    v2 = operator new(16);\n
    v1 = 0;\n
    CFullMessage::__ctor__(v2, v10, v9);\n
    v7 = v2;\n
    return v7;\n
}\n
", "4221899:sub_406bcb": null, "4221904:_ZN20CMessageFragmentList11AddFragmentEP14CMessagePacketRP12CFullMessage": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageFragmentList::AddFragment(unsigned int *v17, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    unsigned int v9;  // [bp-0x24]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int *v12;  // [bp-0x18]\n
    void* v13;  // [bp-0x14]\n
    void* v14;  // [bp-0x10]\n
    unsigned short v15;  // [bp-0xc]\n
    char v16;  // [bp-0x9]\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int *v20;  // eax\n
    unsigned int *v21;  // eax\n
\n
    v11 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = v17;\n
    *(a1) = 0;\n
    if (!a0)\n
    {\n
        v16 = 0;\n
        return v16 & 1;\n
    }\n
    else if (*(v12) >= 64)\n
    {\n
        v16 = 0;\n
        return v16 & 1;\n
    }\n
    else if ((CMessagePacket::IsFragmented const() & 1))\n
    {\n
        v15 = CMessagePacket::GetSequenceNumber const();\n
        v14 = CMessageFragmentList::GetFragmentForSequenceNumber(v12, v15);\n
        if (!v14)\n
        {\n
            v10 = operator new(76);\n
            CMessageFragmentList::CFragmentData::__base_ctor__(v10);\n
            v13 = v10;\n
            if ((CMessagePacket::IsLastFragment const(a0) & 1))\n
            {\n
                v9 = v13;\n
                v19 = CMessagePacket::GetFragmentNumber const() + 1;\n
                CMessageFragmentList::CFragmentData::SetTotalFragmentCount(v9);\n
            }\n
            v7 = v13;\n
            v8 = a0;\n
            v0 = v8;\n
            v1 = CMessagePacket::GetFragmentNumber const();\n
            CMessageFragmentList::CFragmentData::AddFragmentData(v7, v0);\n
            if (!(CMessageFragmentList::CFragmentData::HasAllFragments const(v13, v0) & 1))\n
            {\n
                CDoubleList::InsertTail(v12 + 1, v13);\n
                v20 = v12;\n
                *(v20) = *(v20) + 1;\n
            }\n
            else\n
            {\n
                *(a1) = CMessageFragmentList::CFragmentData::AssembleFragments const(v13);\n
                v6 = v13;\n
                if (v6)\n
                {\n
                    CMessageFragmentList::CFragmentData::__base_dtor__();\n
                    operator delete(v6);\n
                }\n
            }\n
        }\n
        else\n
        {\n
            if ((CMessagePacket::IsLastFragment const() & 1))\n
            {\n
                v5 = v14;\n
                v18 = CMessagePacket::GetFragmentNumber const() + 1;\n
                CMessageFragmentList::CFragmentData::SetTotalFragmentCount(v5);\n
            }\n
            v3 = v14;\n
            v4 = a0;\n
            v0 = v4;\n
            v1 = CMessagePacket::GetFragmentNumber const();\n
            CMessageFragmentList::CFragmentData::AddFragmentData(v3, v0);\n
            if ((CMessageFragmentList::CFragmentData::HasAllFragments const(v14, v0) & 1))\n
            {\n
                *(a1) = CMessageFragmentList::CFragmentData::AssembleFragments const(v14);\n
                CDoubleList::Unlink(v12 + 1, v14);\n
                v2 = v14;\n
                if (v2)\n
                {\n
                    CMessageFragmentList::CFragmentData::__base_dtor__();\n
                    operator delete(v2);\n
                }\n
                v21 = v12;\n
                *(v21) = *(v21) - 1;\n
            }\n
        }\n
        v16 = 1;\n
        return v16 & 1;\n
    }\n
    else\n
    {\n
        v16 = 0;\n
        return v16 & 1;\n
    }\n
}\n
", "4222659:sub_406ec3": null, "4222672:_ZN12CFullMessageC1EPhjb": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CFullMessage::__ctor__(unsigned int v4[4], unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[4];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[4];  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a2 & 1;\n
    v1[0] = v4;\n
    CDoubleListElement::__base_ctor__();\n
    if (!(v2 & 1))\n
    {\n
        v1[2] = a0;\n
    }\n
    else\n
    {\n
        v6 = v1;\n
        v6[2] = operator new[](a1);\n
        cgc_memcpy(v6[2], a0, a1);\n
    }\n
    v1[3] = a1;\n
    return v1;\n
}\n
", "4222814:sub_406f5e": null, "4222816:_ZN12CFullMessageD2Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CFullMessage::__base_dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v3;\n
    if (!v2->field_8)\n
        return CDoubleListElement::__base_dtor__(v2);\n
    v0 = v2->field_8;\n
    if (!v0)\n
        return CDoubleListElement::__base_dtor__(v2);\n
    operator delete(v0);\n
}\n
", "4222914:sub_406fc2": null, "4222928:_ZN15CMessageHandlerC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageHandler::__base_ctor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CMessageFragmentList::__base_ctor__();\n
    v5 = v2;\n
    return CDoubleList::__ctor__(v1 + 12);\n
}\n
", "4222990:sub_40700e": null, "4222992:_ZN15CMessageHandlerD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageHandler::__dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CDoubleList::__base_dtor__(v1 + 12);\n
    v5 = v2;\n
    return CMessageFragmentList::__base_dtor__();\n
}\n
", "4223054:sub_40704e": null, "4223056:_ZN15CMessageHandler13ReceivePacketEP14CMessagePacket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageHandler::ReceivePacket(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1[4];  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int *v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc]\n
    unsigned int v9;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = v8;\n
    v5 = v9;\n
    if (!a0)\n
    {\n
        return v8;\n
    }\n
    else if (!(CMessagePacket::IsFragmented const() & 1))\n
    {\n
        v1[0] = operator new(16);\n
        v0 = CMessagePacket::GetData();\n
        CFullMessage::__ctor__(v1, v0, CMessagePacket::GetDataLength const(), 1);\n
        v6 = v1;\n
        v2 = a0;\n
        if (v2)\n
        {\n
            CMessagePacket::__base_dtor__();\n
            operator delete(v2);\n
        }\n
        v9 = CDoubleList::InsertTail(v5 + 3, v6);\n
        return v9;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        v9 = CMessageFragmentList::AddFragment(v5, a0, &v7);\n
        if ((v9 & 1))\n
        {\n
            if (!v7)\n
                return v9;\n
            v9 = CDoubleList::InsertTail(v5 + 3, v7);\n
        }\n
        else\n
        {\n
            v9 = a0;\n
            v3 = v9;\n
            if (!v9)\n
                return v9;\n
            CMessagePacket::__base_dtor__();\n
            v9 = operator delete(v3);\n
        }\n
    }\n
}\n
", "4223426:sub_4071c2": null, "4223440:_ZN15CMessageHandler14IsMsgAvailableEv": "int CMessageHandler::IsMsgAvailable(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CDoubleList::GetFirst const(v1 + 12, *(&v0));\n
}\n
", "4223491:sub_407203": null, "4223504:_ZN15CMessageHandler15PopFirstMessageEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageHandler::PopFirstMessage(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    if (!(CMessageHandler::IsMsgAvailable(v1) & 1))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = CDoubleList::GetFirst const();\n
    CDoubleList::Unlink(v1 + 12, v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4223622:sub_407286": null, "4223632:_ZNK11CDoubleList8GetFirstEv": "int CDoubleList::GetFirst const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4223645:sub_40729d": null, "4223648:_ZNK20CMessageFragmentList13CFragmentData17GetSequenceNumberEv": "typedef struct struct_0 {\n
    char padding_0[74];\n
    unsigned short field_4a;\n
} struct_0;\n
\n
int CMessageFragmentList::CFragmentData::GetSequenceNumber const(struct_0 *v0)\n
{\n
    return v0->field_4a;\n
}\n
", "4223663:sub_4072af": null, "4223664:_ZNK14CMessagePacket13GetDataLengthEv": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
int CMessagePacket::GetDataLength const(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = v3;\n
    v0 = v1;\n
    if (!(CMessagePacket::IsFragmented const() & 1))\n
    {\n
        v2 = v1->field_1;\n
        return v2;\n
    }\n
    else if (v1->field_1 >= 2)\n
    {\n
        v2 = v1->field_1 - 2;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4223775:sub_40731f": null, "4223776:_ZN14CMessagePacket7GetDataEv": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CMessagePacket::GetData(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = v3;\n
    v0 = v1;\n
    if ((CMessagePacket::IsFragmented const() & 1) && v1->field_1 >= 2)\n
    {\n
        v2 = v1->field_8 + 2;\n
        return v2;\n
    }\n
    v2 = v1->field_8;\n
    return v2;\n
}\n
", "4223876:sub_407384": null, "4223888:_ZNK14CMessagePacket12IsFragmentedEv": "int CMessagePacket::IsFragmented const(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if ((*(v2) & 1))\n
    {\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    v1 = 0;\n
    return v1 & 1;\n
}\n
", "4223939:sub_4073c3": null, "4223952:_ZNK14CMessagePacket17GetSequenceNumberEv": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
int CMessagePacket::GetSequenceNumber const(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned short v1;  // [bp-0xa]\n
\n
    v0 = v2;\n
    if ((CMessagePacket::IsFragmented const(v0) & 1) && v0->field_1 >= 2)\n
    {\n
        v1 = v0->field_8->field_0 >> 4;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4224054:sub_407436": null, "4224064:_ZN20CMessageFragmentList13CFragmentDataC2Et": "typedef struct struct_0 {\n
    char padding_0[72];\n
    char field_48;\n
    char padding_49[1];\n
    unsigned short field_4a;\n
} struct_0;\n
\n
int CMessageFragmentList::CFragmentData::__base_ctor__(struct_0 *v3, unsigned short a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    struct_0 *v4;  // eax\n
\n
    v1 = v3;\n
    v0 = v1;\n
    CDoubleListElement::__base_ctor__();\n
    v4 = v1;\n
    v4->field_4a = a0;\n
    v4->field_48 = 0;\n
    for (v2 = 0; v2 < 16; v2 += 1)\n
    {\n
        *(&v1->padding_0[8 + 4 * v2]) = 0;\n
    }\n
    return v2;\n
}\n
", "4224176:_ZNK14CMessagePacket14IsLastFragmentEv": "int CMessagePacket::IsLastFragment const(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if ((*(v2) & 2))\n
    {\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    v1 = 0;\n
    return v1 & 1;\n
}\n
", "4224227:sub_4074e3": null, "4224240:_ZN20CMessageFragmentList13CFragmentData21SetTotalFragmentCountEh": "typedef struct struct_0 {\n
    char padding_0[72];\n
    char field_48;\n
} struct_0;\n
\n
int CMessageFragmentList::CFragmentData::SetTotalFragmentCount(struct_0 *v2, char a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (a0 > 16)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v0->field_48 = a0;\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4224306:sub_407532": null, "4224320:_ZNK14CMessagePacket17GetFragmentNumberEv": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[6];\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
int CMessagePacket::GetFragmentNumber const(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = v2;\n
    if ((CMessagePacket::IsFragmented const(v0) & 1) && v0->field_1 >= 2)\n
    {\n
        v1 = v0->field_8->field_0 & 15;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4224419:sub_4075a3": null, "4224432:_ZN20CMessageFragmentList13CFragmentData15AddFragmentDataEP14CMessagePacketh": "int CMessageFragmentList::CFragmentData::AddFragmentData(unsigned int v2, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (a1 >= 16)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    else if (!*((v0 + (a1 << 2) + 8)))\n
    {\n
        *((v0 + a1 * 4 + 8)) = a0;\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
}\n
", "4224533:sub_407615": null, "4224544:_ZNK20CMessageFragmentList13CFragmentData15HasAllFragmentsEv": "typedef struct struct_0 {\n
    char padding_0[72];\n
    char field_48;\n
} struct_0;\n
\n
int CMessageFragmentList::CFragmentData::HasAllFragments const(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x5]\n
\n
    v0 = v4;\n
    v2 = 0;\n
    if (!v0->field_48)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    for (v1 = 0; v1 < v0->field_48; v1 += 1)\n
    {\n
        if (*((8 + &v0->padding_0[0] + 0x4 * v1)))\n
            v2 += 1;\n
    }\n
    v3 = v2 == v0->field_48;\n
    return v3 & 1;\n
}\n
", "4224691:sub_4076b3": null, "4224704:_ZN20CMessageFragmentList13CFragmentDataD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageFragmentList::CFragmentData::__base_dtor__(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned short v3;  // [bp-0xa]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    for (v3 = 0; v3 < 16; v3 += 1)\n
    {\n
        if (*((v2 + (v3 << 2) + 8)))\n
        {\n
            v0 = *((v2 + v3 * 4 + 8));\n
            if (v0)\n
            {\n
                CMessagePacket::__base_dtor__();\n
                operator delete(v0);\n
            }\n
        }\n
    }\n
    return CDoubleListElement::__base_dtor__(v2);\n
}\n
", "4224870:sub_407766": null, "4224880:_ZN18CDoubleListElementC2Ev": "int CDoubleListElement::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4224904:sub_407788": null, "4224912:_ZN20CMessageFragmentListC2Ev": "int CMessageFragmentList::__base_ctor__(unsigned int *v1)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    CDoubleList::__ctor__(v0 + 1);\n
    *(v0) = 0;\n
    return v0;\n
}\n
", "4224966:sub_4077c6": null, "4224976:_ZN20CMessageFragmentListD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageFragmentList::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CDoubleList::DeleteAll(v1 + 4);\n
    v5 = v2;\n
    return CDoubleList::__base_dtor__(v1 + 4);\n
}\n
", "4225041:sub_407811": null, "4225056:_ZN14CMessagePacketC1Ehh": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[6];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CMessagePacket::__ctor__(struct_0 *v1, char a0, char a1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    v0->field_0 = a0;\n
    v0->field_1 = a1;\n
    v0->field_8 = operator new[](a1);\n
    return v0;\n
}\n
", "4225127:sub_407867": null, "4225136:_ZN14CMessagePacketD2Ev": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessagePacket::__base_dtor__(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    v2 = v4;\n
    if (!v4->field_8)\n
        return v3;\n
    v4 = v2->field_8;\n
    v0 = v4;\n
    if (!v4)\n
        return v4;\n
    v4 = operator delete[](v0);\n
}\n
", "4225220:sub_4078c4": null, "4225232:_ZN14CMessagePacket13SetDataByteAtEhh": "int CMessagePacket::SetDataByteAt(unsigned int v1, char a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    if (*((v3 + 8)))\n
    {\n
        v3 = a0;\n
        if (v3 < *((v0 + 1)))\n
        {\n
            v3 = *((v0 + 8));\n
            *((v3 + a0)) = a1;\n
        }\n
    }\n
    return v3;\n
}\n
", "4225311:sub_40791f": null, "4225312:_ZN14CMessagePacket19WaitForPreambleLockEP11CDataStream": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessagePacket::WaitForPreambleLock(char v4[10])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xe]\n
    char v2;  // [bp-0xd]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 1;\n
    while (v3 < 15)\n
    {\n
        v1 = CDataStream::ReadBit(v4);\n
        if (v2 != 1)\n
        {\n
            if (!v1)\n
            {\n
                v2 = 1;\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                v2 = 1;\n
                v3 = 0;\n
            }\n
        }\n
        else\n
        {\n
            if (v1 != 1)\n
            {\n
                v2 = 1;\n
                v3 = 0;\n
            }\n
            else\n
            {\n
                v2 = 0;\n
                v3 += 1;\n
            }\n
        }\n
    }\n
    return v2;\n
}\n
", "4225497:sub_4079d9": null, "4225504:_ZN14CMessagePacket11ParseStreamEP11CDataStream": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessagePacket::ParseStream(char v23[10])\n
{\n
    void* v0;  // [bp-0x3c]\n
    void* v1;  // [bp-0x38]\n
    void* v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned short v4;  // [bp-0x2a]\n
    void* v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x24]\n
    char v7;  // [bp-0x23]\n
    unsigned short v8;  // [bp-0x22]\n
    void* v9;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x16]\n
    char v12;  // [bp-0x15]\n
    char v13;  // [bp-0x14]\n
    char v14;  // [bp-0x13]\n
    char v15;  // [bp-0x12]\n
    char v16;  // [bp-0x11]\n
    char v17;  // [bp-0x10]\n
    char v18;  // [bp-0xf]\n
    char v19;  // [bp-0xe]\n
    char v20;  // [bp-0xd]\n
    void* v21;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x8]\n
    unsigned int v24;  // ebx\n
\n
    v22 = v24;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v20 = CMessagePacket::WaitForPreambleLock(v23);\n
    v19 = 0;\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    while (((v16 ^ 255) & 1))\n
    {\n
        v18 = CDataStream::ReadBit(v23);\n
        if (v19)\n
        {\n
            if (!v17)\n
            {\n
                if (v18 == 1)\n
                    v17 = 3;\n
                else\n
                    v17 = 4;\n
            }\n
            else\n
            {\n
                if (v18 == (50092 >> (16 - v17 & 31) & 1))\n
                {\n
                    v17 += 1;\n
                    if (v17 >= 17)\n
                        v16 = 1;\n
                }\n
                else\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            if (v20 != 1)\n
            {\n
                if (v18 == 1)\n
                    v19 = 1;\n
                else\n
                    v20 = 1;\n
            }\n
            else\n
            {\n
                if (v18)\n
                {\n
                    v20 = 0;\n
                }\n
                else\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
            }\n
        }\n
    }\n
    v15 = CDataStream::ReadByte(v23);\n
    if ((v15 & 240) != 176)\n
    {\n
        v21 = 0;\n
        return v21;\n
    }\n
    v13 = 0;\n
    for (v12 = 0; v12 < 8; v12 += 1)\n
    {\n
        if (((1 << (v12 & 31)) & 247))\n
            v13 += (v15 & 1 << (v12 & 31)) >> (v12 & 31) & 1;\n
    }\n
    v13 = (v13 >> 31 CONCAT v13) /m 2 >> 32;\n
    v11 = ((v15 & 8) >> 3) & 1;\n
    if (v11 != v13)\n
    {\n
        v21 = 0;\n
        return v21;\n
    }\n
    v14 = CDataStream::ReadByte(v23);\n
    v2 = operator new(12);\n
    CMessagePacket::__ctor__(v2, v15, v14);\n
    v10 = v2;\n
    v9 = 0;\n
    v8 = 0;\n
    for (v7 = 0; v7 < v14; v7 += 1)\n
    {\n
        v6 = CDataStream::ReadByte(v23);\n
        v9 = v6 + v9;\n
        v8 += v6;\n
        CMessagePacket::SetDataByteAt(v10, v7, v6);\n
    }\n
    if (!(CMessagePacket::IsLargeChecksum const() & 1))\n
    {\n
        v4 = 0;\n
        v4 = CDataStream::ReadByte(v23) * 0x100;\n
        v4 |= CDataStream::ReadByte(v23);\n
        if (v8 == v4)\n
        {\n
            CMessagePacket::SetChecksum16(v10);\n
        }\n
        else\n
        {\n
            v0 = v10;\n
            if (v0)\n
            {\n
                CMessagePacket::__base_dtor__(v0);\n
                operator delete(v0);\n
            }\n
            v21 = 0;\n
            return v21;\n
        }\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        v5 = CDataStream::ReadByte(v23) * 0x1000000;\n
        v5 = CDataStream::ReadByte(v23) * 0x10000 | v5;\n
        v5 = CDataStream::ReadByte(v23) * 0x100 | v5;\n
        v5 = CDataStream::ReadByte(v23) | v5;\n
        if (v9 == v5)\n
        {\n
            CMessagePacket::SetChecksum32(v10);\n
        }\n
        else\n
        {\n
            v1 = v10;\n
            if (v1)\n
            {\n
                CMessagePacket::__base_dtor__(v1);\n
                operator delete(v1);\n
            }\n
            v21 = 0;\n
            return v21;\n
        }\n
    }\n
    v21 = v10;\n
    return v21;\n
}\n
", "4226615:sub_407e37": null, "4226624:_ZNK14CMessagePacket15IsLargeChecksumEv": "int CMessagePacket::IsLargeChecksum const(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if ((*(v2) & 4))\n
    {\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    v1 = 0;\n
    return v1 & 1;\n
}\n
", "4226675:sub_407e73": null, "4226688:_ZN14CMessagePacket13SetChecksum32Ej": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CMessagePacket::SetChecksum32(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_4 = a0;\n
    return v0;\n
}\n
", "4226708:sub_407e94": null, "4226720:_ZN14CMessagePacket13SetChecksum16Et": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int CMessagePacket::SetChecksum16(struct_0 *v0, unsigned short a0)\n
{\n
    v0->field_4 = a0;\n
    return v0;\n
}\n
", "4226743:sub_407eb7": null, "4226752:_ZN16CMessageRenderer12RenderHeaderEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageRenderer::RenderHeader(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"<HTML>\\n
\");\n
    cgc_printf(v0 - 9372);\n
    cgc_printf(v0 - 9349);\n
    v4 = v1;\n
    return 1;\n
}\n
", "4226838:sub_407f16": null, "4226848:_ZN16CMessageRenderer12RenderFooterEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageRenderer::RenderFooter(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"</BODY>\\n
\");\n
    cgc_printf(v0 - 9332);\n
    v4 = v1;\n
    return 1;\n
}\n
", "4226917:sub_407f65": null, "4226928:_Z17add_render_bufferPhjPKcj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int add_render_buffer(unsigned int v4, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4 + a0;\n
    v1 = a1;\n
    cgc_memcpy(v0, v1, cgc_strlen(a1));\n
    v6 = v3;\n
    return cgc_strlen(a1);\n
}\n
", "4227033:sub_407fd9": null, "4227040:_ZN16CMessageRenderer13RenderMessageEP12CFullMessage": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CMessageRenderer::RenderMessage()\n
{\n
    unsigned int v3;  // [bp-0x1038]\n
    unsigned int *v4;  // [bp-0x1034]\n
    char v10;  // [bp-0x102b]\n
    char v11;  // [bp-0x102a]\n
    char v12;  // [bp-0x1029]\n
    void* v13;  // [bp-0x1028]\n
    struct_0 *v14;  // [bp-0x1024]\n
    char *v15;  // [bp-0x1020]\n
    char *v16;  // [bp-0x101c]\n
    char v17;  // [bp-0x1016]\n
    char v18;  // [bp-0x1015]\n
    unsigned int v19;  // [bp-0x1014]\n
    char v21;  // [bp-0xd]\n
    unsigned int v22;  // [bp-0x8]\n
    unsigned int *v24;  // [bp+0x4]\n
    unsigned int v33;  // ebx\n
\n
    v22 = v33;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v24;\n
    v19 = 0x1000;\n
    if (CFullMessage::GetLength const() < 1)\n
    {\n
        v21 = 0;\n
        return;\n
    }\n
    v18 = *(CFullMessage::GetData const());\n
    if (CFullMessage::GetLength const() < 2)\n
    {\n
        v21 = 0;\n
        return;\n
    }\n
    v17 = *((CFullMessage::GetData const() + 1));\n
    v16 = 2;\n
    v15 = CFullMessage::GetData const();\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    CMessageRenderer::RenderHeader(v4);\n
}\n
", "4227491:sub_4081a3": "int sub_4081a3()\n
{\n
    char v0;  // [bp-0x102b]\n
    char v1;  // [bp-0x102a]\n
    char v2;  // [bp-0x1029]\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
}\n
", "4227517:sub_4081bd": "int sub_4081bd()\n
{\n
    char v0;  // [bp-0x1029]\n
\n
    v0 = 1;\n
}\n
", "4227529:sub_4081c9": "int sub_4081c9()\n
{\n
    char v0;  // [bp-0x102a]\n
\n
    v0 = 1;\n
}\n
", "4227541:sub_4081d5": "int sub_4081d5()\n
{\n
    char v0;  // [bp-0x102b]\n
\n
    v0 = 1;\n
}\n
", "4227553:sub_4081e1": "int sub_4081e1()\n
{\n
    char v0;  // [bp-0x102a]\n
    char v1;  // [bp-0x1029]\n
\n
    v1 = 1;\n
    v0 = 1;\n
}\n
", "4227572:sub_4081f4": "int sub_4081f4()\n
{\n
    char v0;  // [bp-0x102b]\n
    char v1;  // [bp-0x1029]\n
\n
    v1 = 1;\n
    v0 = 1;\n
}\n
", "4227591:sub_408207": "int sub_408207()\n
{\n
    char v0;  // [bp-0x102b]\n
    char v1;  // [bp-0x102a]\n
\n
    v1 = 1;\n
    v0 = 1;\n
}\n
", "4227610:sub_40821a": "int sub_40821a()\n
{\n
    char v0;  // [bp-0x102b]\n
    char v1;  // [bp-0x102a]\n
    char v2;  // [bp-0x1029]\n
\n
    v2 = 1;\n
    v1 = 1;\n
    v0 = 1;\n
}\n
", "4229272:sub_408898": null, "4229280:_ZNK12CFullMessage9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int CFullMessage::GetLength const(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4229294:sub_4088ae": null, "4229296:_ZNK12CFullMessage7GetDataEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int CFullMessage::GetData const(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4229310:sub_4088be": null, "4229312:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v11, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x44]\n
    void* v4;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x3c]\n
    char v6;  // [bp-0x34]\n
    char v7;  // [bp-0x1c]\n
    char v8;  // [bp-0xd]\n
    void* v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // ebx\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = 0;\n
    CDataStream::__ctor__(&v7);\n
    CMessageHandler::__base_ctor__(&v6);\n
    CMessageRenderer::__base_ctor__();\n
    CDataStream::Setup(&v7, 0);\n
    v4 = 0;\n
    do\n
    {\n
        v3 = CMessagePacket::ParseStream(&v7);\n
        v4 += 1;\n
        if (CDataStream::BytesReceived const() > 0xfa00)\n
            v8 = 1;\n
        if (v3)\n
        {\n
            CMessageHandler::ReceivePacket(&v6, v3);\n
            if ((CMessageHandler::IsMsgAvailable(&v6) & 1))\n
            {\n
                v2 = CMessageHandler::PopFirstMessage(&v6);\n
                CMessageRenderer::RenderMessage(&v5);\n
                v0 = v2;\n
                if (v0)\n
                {\n
                    CFullMessage::__base_dtor__(v0);\n
                    operator delete(v0);\n
                }\n
            }\n
        }\n
    } while (((v8 ^ 255) & 1));\n
    v9 = 0;\n
    CMessageRenderer::__base_dtor__();\n
    CMessageHandler::__dtor__(&v6);\n
    CDataStream::__base_dtor__(&v7);\n
    v13 = v10;\n
    return v9;\n
}\n
", "4229701:sub_408a45": null, "4229712:_ZN16CMessageRendererC2Ev": "int CMessageRenderer::__base_ctor__(unsigned int *v0)\n
{\n
    *(v0) = 0;\n
    return v0;\n
}\n
", "4229729:sub_408a61": null, "4229744:_ZNK11CDataStream13BytesReceivedEv": "int CDataStream::BytesReceived const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4229757:sub_408a7d": null, "4229760:_ZN16CMessageRendererD2Ev": "int CMessageRenderer::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4229768:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_fdwait": null, "5242892:cgc_receive": null, "5242896:_Znaj": null, "5242900:cgc_allocate": null, "5242904:cgc__terminate": null, "5242908:_ZdlPv": null, "5242912:_ZdaPv": null, "5242916:cgc_rint": null, "5242920:cgc_log10": null, "5242924:cgc_transmit": null, "5242928:cgc_pow": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}