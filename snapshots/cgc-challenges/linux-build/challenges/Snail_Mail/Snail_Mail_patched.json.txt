{"4202496:_init": "extern struct_0 *g_406118;\n
\n
int _init()\n
{\n
    if (g_406118)\n
    {\n
        g_406118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:rand": "// attributes: PLT stub\n
int rand()\n
{\n
    return ::libc.so.0::rand();\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202678:sub_4020b6": null, "4202688:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202731:sub_4020eb": null, "4202732:sub_4020ec": "int sub_4020ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202736:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202740:sub_4020f4": null, "4202752:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 16415;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202803:sub_402133": "int sub_402133()\n
{\n
}\n
", "4202809:sub_402139": "int sub_402139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202816:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 16351;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202887:sub_402187": "int sub_402187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202971:sub_4021db": "int sub_4021db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202976:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_bst_create_node": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_create_node(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[5];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 20;\n
    v2[0] = cgc_malloc();\n
    if (!v2)\n
    {\n
        v0 = -7;\n
        cgc__terminate();\n
    }\n
    v2[0] = v4;\n
    v2[1] = 0;\n
    v2[2] = 0;\n
    v2[3] = 0;\n
    v2[4] = 0;\n
    return v2;\n
}\n
", "4203115:sub_40226b": null, "4203120:cgc_bst_delete_node": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_delete_node(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 20;\n
    cgc_memset(*(v3), 0);\n
    v5 = v2;\n
    return cgc_free(*(v3), 0);\n
}\n
", "4203198:sub_4022be": null, "4203200:cgc_bst_init": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char field_c;\n
} struct_0;\n
\n
int cgc_bst_init(struct_0 *v0)\n
{\n
    v0->field_0 = 0;\n
    v0->field_4 = 0;\n
    v0->field_8 = 0;\n
    v0->field_c = 1;\n
    return v0;\n
}\n
", "4203244:sub_4022ec": null, "4203248:cgc_bst_search": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int cgc_bst_search(struct struct_0 **v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = *(v2);\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1)\n
            v0 = *(v1) != a0;\n
        if (!(v0 & 1))\n
            break;\n
        if (a0 >= *(v1))\n
            v1 = *((v1 + 16));\n
        else\n
            v1 = *((v1 + 12));\n
    }\n
    return v1;\n
}\n
", "4203363:sub_402363": null, "4203376:cgc_bst_max_node_subtree": "typedef struct struct_0 {\n
    char padding_0[16];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
int cgc_bst_max_node_subtree(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v2)\n
            v1 = 0 != v2->field_10;\n
        if (!(v1 & 1))\n
            break;\n
        v2 = v2->field_10;\n
    }\n
    return v2;\n
}\n
", "4203451:sub_4023bb": null, "4203456:cgc_bst_max_subtree": "int cgc_bst_max_subtree(void* v0)\n
{\n
    return *(cgc_bst_max_node_subtree(v0));\n
}\n
", "4203495:sub_4023e7": null, "4203504:cgc_bst_max_node": "int cgc_bst_max_node(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0xc]\n
\n
    v0 = *(v1);\n
    return cgc_bst_max_node_subtree(v0);\n
}\n
", "4203551:sub_40241f": null, "4203552:cgc_bst_max": "int cgc_bst_max(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0xc]\n
\n
    v0 = *(v1);\n
    return cgc_bst_max_subtree(v0);\n
}\n
", "4203599:sub_40244f": null, "4203600:cgc_bst_min_node_subtree": "typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int cgc_bst_min_node_subtree(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v2)\n
            v1 = 0 != v2->field_c;\n
        if (!(v1 & 1))\n
            break;\n
        v2 = v2->field_c;\n
    }\n
    return v2;\n
}\n
", "4203675:sub_40249b": null, "4203680:cgc_bst_min_subtree": "int cgc_bst_min_subtree(void* v0)\n
{\n
    return *(cgc_bst_min_node_subtree(v0));\n
}\n
", "4203719:sub_4024c7": null, "4203728:cgc_bst_min_node": "int cgc_bst_min_node(void* *v0)\n
{\n
    return cgc_bst_min_node_subtree(*(v0));\n
}\n
", "4203767:sub_4024f7": null, "4203776:cgc_bst_min": "int cgc_bst_min(void* *v0)\n
{\n
    return cgc_bst_min_subtree(*(v0));\n
}\n
", "4203815:sub_402527": null, "4203824:cgc_bst_predecessor": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    void* field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_predecessor(struct_1 *v5)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5->field_c)\n
    {\n
        v4 = cgc_bst_max_node_subtree(v5->field_c);\n
        return v4;\n
    }\n
    v3 = &v5->padding_0;\n
    v2 = &v5->field_8->padding_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2)\n
            v0 = v3 == *((v2 + 12));\n
        if (!(v0 & 1))\n
            break;\n
        v3 = v2;\n
        v2 = *((v2 + 8));\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4203984:cgc_bst_successor": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    void* field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_successor(struct_1 *v5)\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5->field_10)\n
    {\n
        v4 = cgc_bst_min_node_subtree(v5->field_10);\n
        return v4;\n
    }\n
    v3 = &v5->padding_0;\n
    v2 = &v5->field_8->padding_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2)\n
            v0 = v3 == *((v2 + 16));\n
        if (!(v0 & 1))\n
            break;\n
        v3 = v2;\n
        v2 = *((v2 + 8));\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4204144:cgc_bst_iter_start": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_iter_start(struct_0 *v1, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1->field_c = a0;\n
    if (v1->field_c == 1)\n
    {\n
        v1->field_8 = cgc_bst_min_node(v1);\n
        return v1->field_8;\n
    }\n
    v1->field_8 = cgc_bst_max_node(v1);\n
    return v1->field_8;\n
}\n
", "4204262:sub_4026e6": null, "4204272:cgc_bst_iter_next": "typedef struct struct_0 {\n
    char padding_0[8];\n
    void* field_8;\n
    char field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_iter_next(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_c == 1)\n
    {\n
        v1->field_8 = cgc_bst_successor(v1->field_8);\n
        return v1->field_8;\n
    }\n
    v1->field_8 = cgc_bst_predecessor(v1->field_8);\n
    return v1->field_8;\n
}\n
", "4204384:cgc_bst_iter_end": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_bst_iter_end(struct_0 *v0)\n
{\n
    return 0 == v0->field_8;\n
}\n
", "4204408:sub_402778": null, "4204416:cgc_bst_insert_node": "int cgc_bst_insert_node(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // eax\n
\n
    v1 = *(v2);\n
    v0 = *(v2);\n
    while (v0)\n
    {\n
        v1 = v0;\n
        if (*(a0) < *(v0))\n
            v0 = *((v0 + 12));\n
        else\n
            v0 = *((v0 + 16));\n
    }\n
    *((a0 + 8)) = v1;\n
    if (!v1)\n
    {\n
        *(v2) = a0;\n
    }\n
    else if (*(a0) < *(v1))\n
    {\n
        *((v1 + 12)) = a0;\n
    }\n
    else\n
    {\n
        *((v1 + 16)) = a0;\n
    }\n
    v3 = v2;\n
    *((v3 + 4)) = *((v3 + 4)) + 1;\n
    return v2;\n
}\n
", "4204598:sub_402836": null, "4204608:cgc_bst_insert": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_insert(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_bst_create_node(a0);\n
    v5 = v2;\n
    return cgc_bst_insert_node(v3, v1);\n
}\n
", "4204677:sub_402885": null, "4204688:cgc_bst_remove_node": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_2 *field_8;\n
    struct struct_0 *field_c;\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_remove_node(unsigned int v3[2], struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0->field_c)\n
    {\n
LABEL_4028c8:\n
        v2 = a0;\n
    }\n
    else\n
    {\n
        if (0 == a0->field_10)\n
            goto LABEL_4028c8;\n
        v2 = cgc_bst_successor(a0);\n
    }\n
    if (*((v2 + 12)))\n
        v1 = *((v2 + 12));\n
    else\n
        v1 = *((v2 + 16));\n
    if (v1)\n
        *((v1 + 8)) = *((v2 + 8));\n
    if (!*((v2 + 8)))\n
    {\n
        v3[0] = v1;\n
    }\n
    else if (v2 == *((*((v2 + 8)) + 12)))\n
    {\n
        *((*((v2 + 8)) + 12)) = v1;\n
    }\n
    else\n
    {\n
        *((*((v2 + 8)) + 16)) = v1;\n
    }\n
    if (v2 != a0)\n
        a0->field_0 = *(v2);\n
    v4 = v3;\n
    v4[1] = v4[1] - 1;\n
    return v2;\n
}\n
", "4204954:sub_40299a": null, "4204960:cgc_bst_remove": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bst_remove(unsigned int v4[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_bst_search(v4, a0);\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = cgc_bst_remove_node(v4, v1);\n
    return v2;\n
}\n
", "4205064:sub_402a08": null, "4205072:cgc_bst_is_empty": "int cgc_bst_is_empty(unsigned int *v0)\n
{\n
    return 0 == *(v0);\n
}\n
", "4205095:sub_402a27": null, "4205104:cgc_list_create_node": "int cgc_list_create_node(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 12;\n
    v1[0] = cgc_malloc();\n
    if (!v1)\n
    {\n
        v2[0] = v1;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4205206:sub_402a96": null, "4205216:cgc_list_destroy_node": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy_node(struct_2 *v2, struct struct_0 **a0)\n
{\n
    unsigned int v0[3];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_10)\n
    {\n
        v0 = *(a0)->field_0;\n
        v2->field_10();\n
    }\n
    *(a0)->field_0 = 0;\n
    *(a0)->field_4 = 0;\n
    *(a0)->field_8 = 0;\n
    v0[0] = *(a0);\n
    cgc_free();\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205345:sub_402b21": null, "4205360:cgc_list_init": "int cgc_list_init(unsigned int v0[5], unsigned int a0)\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v0[2] = &v0[1];\n
    v0[3] = &v0[1];\n
    v0[4] = a0;\n
    return v0;\n
}\n
", "4205423:sub_402b6f": null, "4205424:cgc_list_destroy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy(unsigned int v2[5])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    while (cgc_list_head_node())\n
    {\n
        v1[0] = cgc_list_pop();\n
        cgc_list_destroy_node(v2, v1);\n
    }\n
    v2[0] = 0;\n
    v2[2] = 0;\n
    v2[3] = 0;\n
    v2[4] = 0;\n
    return v2;\n
}\n
", "4205563:sub_402bfb": null, "4205568:cgc_list_head_node": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_list_head_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_8;\n
    return v0;\n
}\n
", "4205622:sub_402c36": null, "4205632:cgc_list_pop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_pop(void* v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_list_head_node(v5);\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = v2;\n
    cgc_list_remove_node(v5);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205729:sub_402ca1": null, "4205744:cgc_list_insert_before_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_list_insert_before_node(struct_0 *v0, struct_2 *a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    a0->field_4 = v0;\n
    a0->field_8 = v0->field_8;\n
    a0->field_8->field_4 = a0;\n
    v1 = a0->field_4;\n
    v1->field_8 = a0;\n
    return v1;\n
}\n
", "4205800:sub_402ce8": null, "4205808:cgc_list_insert_after_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
int cgc_list_insert_after_node(struct_0 *v0, void* a0)\n
{\n
    return cgc_list_insert_before_node(v0->field_4, a0);\n
}\n
", "4205860:sub_402d24": null, "4205872:cgc_list_insert_node_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_end(unsigned int *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_end_marker();\n
    cgc_list_insert_before_node(v1, a0);\n
    v5 = v3;\n
    *(v5) = *(v5) + 1;\n
    v6 = v2;\n
    return v3;\n
}\n
", "4205951:sub_402d7f": null, "4205952:cgc_list_end_marker": "int cgc_list_end_marker(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4205966:sub_402d8e": null, "4205968:cgc_list_insert_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_end(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_at_end(v3, v1);\n
}\n
", "4206037:sub_402dd5": null, "4206048:cgc_list_insert_node_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_start(unsigned int *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_start_marker();\n
    cgc_list_insert_after_node(v1, a0);\n
    v5 = v3;\n
    *(v5) = *(v5) + 1;\n
    v6 = v2;\n
    return v3;\n
}\n
", "4206127:sub_402e2f": null, "4206128:cgc_list_start_marker": "int cgc_list_start_marker(unsigned int v0)\n
{\n
    return cgc_list_end_marker(v0);\n
}\n
", "4206165:sub_402e55": null, "4206176:cgc_list_insert_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_start(unsigned int *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_at_start(v3, v1);\n
}\n
", "4206245:sub_402ea5": null, "4206256:cgc_list_insert_node_sorted": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_sorted(unsigned int *v5, unsigned int *a0, struct struct_0 **a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!*(v5))\n
    {\n
        v6 = cgc_list_insert_node_at_start(v5, a0);\n
        return v6;\n
    }\n
    v4 = cgc_list_head_node(v5);\n
    while (true)\n
    {\n
        v1 = v4;\n
        v2 = 0;\n
        if (v1 != cgc_list_end_marker(v5))\n
        {\n
            v0 = a2;\n
            v2 = v0 != a1(*(a0));\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        v4 = cgc_list_next_node();\n
    }\n
    cgc_list_insert_before_node(v4, a0);\n
    v6 = v5;\n
    *(v6) = *(v6) + 1;\n
    return v5;\n
}\n
", "4206514:sub_402fb2": null, "4206528:cgc_list_next_node": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_next_node(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4206542:sub_402fce": null, "4206544:cgc_list_insert_sorted": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_sorted(unsigned int *v3, unsigned int a0, void* **a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_create_node(a0);\n
    v5 = v2;\n
    return cgc_list_insert_node_sorted(v3, v1, a1, a2);\n
}\n
", "4206634:sub_40302a": null, "4206640:cgc_list_remove_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_list_remove_node(unsigned int *v2, struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8]\n
    unsigned int *v3;  // eax\n
\n
    v1 = a0->field_8;\n
    v0 = a0->field_4;\n
    v1->field_4 = v0;\n
    v0->field_8 = v1;\n
    a0->field_8 = 0;\n
    a0->field_4 = 0;\n
    v3 = v2;\n
    *(v3) = *(v3) - 1;\n
    return v2;\n
}\n
", "4206723:sub_403083": null, "4206736:cgc_list_tail_node": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_list_tail_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_c)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_c;\n
    return v0;\n
}\n
", "4206790:sub_4030c6": null, "4206800:cgc_list_length": "int cgc_list_length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4206813:sub_4030dd": null, "4206816:cgc_list_find_node_with_data": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find_node_with_data(void* v7, struct struct_1 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_list_head_node(v7);\n
    v3 = cgc_list_end_marker(v7);\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = v4 != v3;\n
        if (!(v1 & 1))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a1;\n
        if (a0(*(v4)) == 1)\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
        v4 = *((v4 + 4));\n
    }\n
}\n
", "4207002:sub_40319a": null, "4207008:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
    void* field_40;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[17];\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0[17];  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[17];  // ebx\n
    unsigned int v5[17];  // eax\n
    struct_0 *v6;  // ebx\n
    unsigned int v7[17];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v3 += 12;\n
    v1 = 0;\n
    cgc_init_heap();\n
    v4 = v0;\n
    v1 = cgc_list_find_node_with_data(&v4[1 + 6], &v4[171 + 10], v3);\n
    if (v1)\n
    {\n
        cgc_list_remove_node(&v0[1 + 6], v1);\n
    }\n
    else\n
    {\n
        if (v3 <= v0[15])\n
        {\n
            v5 = v0;\n
            v1 = v5[16];\n
            v5[15] = v5[15] - v3;\n
        }\n
        else\n
        {\n
            if (v0[15] > 12)\n
            {\n
                cgc_set_block_size(v0[16]);\n
                v6 = v0;\n
                cgc_list_insert_node_at_end(&v6[1].padding_0[24], v6->field_40);\n
                v7 = v0;\n
                v7[16] = 0;\n
                v7[15] = 0;\n
            }\n
            if (cgc_allocate(v3, 0))\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (!(v3 & 4095))\n
            {\n
                v0[15] = 0;\n
            }\n
            else\n
            {\n
                v0[15] = 0x1000 - (v3 & 4095);\n
            }\n
        }\n
        cgc_set_block_size(v1);\n
        v0[16] = v1 + v3;\n
    }\n
    cgc_list_insert_node_at_end(&v0[1 + 1], v1);\n
    v2 = v1 + 12;\n
    return v2;\n
}\n
", "4207502:sub_40338e": null, "4207504:cgc_is_enough_room": "int cgc_is_enough_room(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 >= a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4207548:sub_4033bc": null, "4207552:cgc_set_block_size": "int cgc_set_block_size(unsigned int *v0, unsigned int a0)\n
{\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4207571:sub_4033d3": null, "4207584:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int allocated_list;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 -= 12;\n
    cgc_list_remove_node(&allocated_list, v2);\n
    v4 = v1;\n
    return cgc_list_insert_node_at_end(v0 + 92, v2);\n
}\n
", "4207669:sub_403435": null, "4207680:cgc_init_heap": "typedef struct struct_0 {\n
    char padding_0[56];\n
    char field_38;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_init_heap_done;\n
\n
int cgc_init_heap()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_init_heap_done)\n
    {\n
        cgc_list_init(&v0[1].padding_0[15], 0);\n
        cgc_list_init(&v0[1].padding_0[35], 0);\n
        v0->field_38 = 1;\n
        return v0;\n
    }\n
    return 0;\n
}\n
", "4207789:sub_4034ad": null, "4207792:cgc_memcmp": "int cgc_memcmp(char *v5, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = v5;\n
    v2 = a0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v3[v1] == *((v2 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (v1 == a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (v3[v1] <= *((v2 + v1)))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
}\n
", "4208003:sub_403583": null, "4208016:cgc_memcpy": "int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4208131:sub_403603": null, "4208144:cgc_memset": "int cgc_memset(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v3;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v1[v0] = a0;\n
    }\n
    v2 = a1;\n
    return v2;\n
}\n
", "4208247:sub_403677": null, "4208256:cgc_rand": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rand(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    for (v2 = 0; a0 > v3; v3 = v2 + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_random(v4 + v3, a0 - v3))\n
            cgc__terminate();\n
    }\n
    return a0;\n
}\n
", "4208391:sub_403707": null, "4208400:cgc_recv_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v4 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_receive(v6, v2, a1 - v3))\n
            {\n
                v5 = -11;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4208615:sub_4037e7": null, "4208624:cgc_send_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_bytes(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 && a1)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        for (v2 = a0; v3 < a1; v2 = v4 + v2)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(v6, v2, a1 - v3))\n
            {\n
                v5 = -9;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 = v4 + v3;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = -9;\n
    return v5;\n
}\n
", "4208839:sub_4038c7": null, "4208848:cgc_setup": "extern unsigned int _GLOBAL_OFFSET_TABLE_[48];\n
\n
int cgc_setup()\n
{\n
    unsigned int v0[48];  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4[48];  // eax\n
    unsigned int v5;  // ebx\n
\n
    v1 = v3;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_init_stamp_roll();\n
    cgc_bst_init(&v0[43]);\n
    v4 = v0;\n
    v4[38] = 0;\n
    v4[28] = 1;\n
    v4[33] = 2;\n
    v4[47] = 3;\n
    v5 = v1;\n
    return v0;\n
}\n
", "4208941:sub_40392d": null, "4208944:cgc_process_cmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_cmd()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned short v1;  // [bp-0xe]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (0 > cgc_recv_bytes(0, &v2, 4))\n
        cgc__terminate();\n
    if (!cgc_memcmp(v0 - 4380, &v2, 4))\n
    {\n
        v1 = cgc_do_add_address();\n
        return v1;\n
    }\n
    if (!cgc_memcmp(v0 - 4376, &v2, 4))\n
    {\n
        v1 = cgc_do_receive_mail();\n
    }\n
    else if (!cgc_memcmp(v0 - 4372, &v2, 4))\n
    {\n
        v1 = cgc_do_list_addresses();\n
    }\n
    else if (!cgc_memcmp(v0 - 4368, &v2, 4))\n
    {\n
        v1 = cgc_do_sort_mail();\n
    }\n
    else if (!cgc_memcmp(v0 - 4364, &v2, 4))\n
    {\n
        v1 = cgc_do_list_undeliverable_mail();\n
    }\n
    else if (!cgc_memcmp(v0 - 4360, &v2, 4))\n
    {\n
        v1 = cgc_do_deliver_mail();\n
    }\n
    else if (!cgc_memcmp(v0 - 4356, &v2, 4))\n
    {\n
        v1 = cgc_do_return_to_sender();\n
    }\n
    else if (!cgc_memcmp(v0 - 0x1100, &v2, 4))\n
    {\n
        v1 = cgc_do_list_lost_mail();\n
    }\n
    else if (!cgc_memcmp(v0 - 4348, &v2, 4))\n
    {\n
        v1 = cgc_do_destroy_lost_mail();\n
    }\n
    else if (!cgc_memcmp(v0 - 4344, &v2, 4))\n
    {\n
        v1 = cgc_do_buy_postage();\n
    }\n
    else if (!cgc_memcmp(v0 - 4340, &v2, 4))\n
    {\n
        v1 = 65534;\n
    }\n
    else\n
    {\n
        v1 = 65535;\n
    }\n
    return v1;\n
}\n
", "4209759:sub_403c5f": null, "4209760:cgc_do_add_address": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_add_address()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned short v1;  // [bp-0xe]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (0 > cgc_recv_bytes(0, &v1, 2))\n
        cgc__terminate();\n
    if (10 <= v1 && !cgc_address_exists())\n
    {\n
        cgc_bst_insert(v0 + 172, v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4209942:sub_403d16": null, "4209952:cgc_do_receive_mail": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_receive_mail()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (0 > cgc_recv_bytes(0, &v3, 3))\n
        cgc__terminate();\n
    if (cgc_use_stamp() == -1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v2 = cgc_malloc(388);\n
    if (!v2)\n
        cgc__terminate();\n
    if (0 > cgc_recv_bytes(0, v2, 388))\n
        cgc__terminate();\n
    v0 = v2;\n
    cgc_get_received_mailbox();\n
    cgc_put_mail_in_mailbox(v0);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4210222:sub_403e2e": null, "4210224:cgc_do_list_addresses": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void mailboxes;\n
\n
int cgc_do_list_addresses()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0xe]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = cgc_bst_iter_start(&mailboxes, 1);\n
    if (!v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (v2 >= 10 && cgc_send_bytes(1, &v2, 2) != 2)\n
            cgc__terminate();\n
        v1 = cgc_bst_iter_next(v0 + 172);\n
    }\n
}\n
", "4210444:sub_403f0c": null, "4210448:cgc_do_sort_mail": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_sort_mail()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_get_received_mailbox();\n
    if (cgc_is_mailbox_empty() == 1)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        cgc_get_received_mailbox();\n
        v4 = cgc_pop_mail_from_mailbox();\n
        if (!v4)\n
            break;\n
        if (cgc_address_exists() == 1)\n
        {\n
            v2 = v4;\n
            v0 = cgc_get_sorted_mailbox();\n
            cgc_put_mail_in_mailbox(v2);\n
        }\n
        else\n
        {\n
            v1 = v4;\n
            v0 = cgc_get_undeliverable_mailbox();\n
            cgc_put_mail_in_mailbox(v1);\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4210676:sub_403ff4": null, "4210688:cgc_do_list_undeliverable_mail": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_list_undeliverable_mail()\n
{\n
    char v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x40]\n
    struct_0 *v2;  // [bp-0x3c]\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned short v4[2];  // [bp-0x34]\n
    void* v5;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v6[3];  // [bp-0x2c], Other Possible Types: unsigned int, struct struct_1 **\n
    void* v7;  // [bp-0x28]\n
    char v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_get_undeliverable_mailbox();\n
    if (cgc_is_mailbox_empty() == 1)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    cgc_list_init(&v8, 0);\n
    v7 = *((cgc_get_undeliverable_mailbox(*(&v0)) + 4));\n
    v6 = cgc_list_head_node(v7);\n
    v5 = cgc_list_end_marker(v7);\n
    *(&v4[0]) = 0;\n
    v3 = 0;\n
    for (v2 = &v3; v5 != v6; v6 = cgc_list_next_node(v6))\n
    {\n
        *(&v4[0]) = *(v6);\n
        *(&v2->field_0) = v4[1];\n
        v2->field_2 = v4[0];\n
        cgc_list_insert_sorted(&v8, v3, v1 - 6068, 0);\n
    }\n
    v6[0] = cgc_list_pop(&v8);\n
    for (v5 = 0; v5 != v6; v6 = cgc_list_pop(&v8))\n
    {\n
        v3 = v6[0];\n
        if (cgc_send_bytes(1, v2, 2) != 2)\n
            cgc__terminate();\n
        if (cgc_send_bytes(1, &v2->field_2, 2) != 2)\n
            cgc__terminate();\n
        cgc_list_destroy_node(&v8, v6);\n
    }\n
    v9 = 0;\n
    return v9;\n
}\n
", "4211182:sub_4041ee": null, "4211184:cgc_do_deliver_mail": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_deliver_mail()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_get_sorted_mailbox();\n
    if (cgc_is_mailbox_empty() == 1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        cgc_get_sorted_mailbox();\n
        v3 = cgc_pop_mail_from_mailbox();\n
        if (!v3)\n
            break;\n
        v2 = cgc_get_mailbox_for_address();\n
        v0 = v2;\n
        cgc_put_mail_in_mailbox(v3);\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4211351:sub_404297": null, "4211360:cgc_do_return_to_sender": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_return_to_sender()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned short v1[2];  // [bp-0x1c]\n
    unsigned short v2[2];  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned short v4[2];  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_get_undeliverable_mailbox();\n
    if (cgc_is_mailbox_empty() == 1)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        cgc_get_undeliverable_mailbox();\n
        *(&v4[0]) = cgc_pop_mail_from_mailbox();\n
        if (!v4)\n
            break;\n
        if (!cgc_address_exists())\n
        {\n
            *(&v2[0]) = v4;\n
            v0 = cgc_get_lost_mailbox();\n
            cgc_put_mail_in_mailbox(v2);\n
        }\n
        else\n
        {\n
            v4[1] = v4[0];\n
            *(&v1[0]) = v4;\n
            v0 = cgc_get_received_mailbox();\n
            cgc_put_mail_in_mailbox(v1);\n
        }\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211597:sub_40438d": null, "4211600:cgc_do_list_lost_mail": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_list_lost_mail()\n
{\n
    char v0;  // [bp-0x5c]\n
    unsigned int v1;  // [bp-0x44]\n
    char v2;  // [bp-0x40]\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v4[3];  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x30]\n
    char v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_get_lost_mailbox();\n
    if (cgc_is_mailbox_empty() == 1)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_list_init(&v6, 0);\n
    v5 = *((cgc_get_lost_mailbox(*(&v0)) + 4));\n
    v4[0] = cgc_list_head_node(v5);\n
    for (v3 = cgc_list_end_marker(v5); v3 != v4; v4 = cgc_list_next_node(v4))\n
    {\n
        v7 = v4[0];\n
        cgc_list_insert_sorted(&v6, v7, v1 - 5940, 0);\n
    }\n
    v4[0] = cgc_list_pop(&v6);\n
    for (v3 = 0; v3 != v4; v4 = cgc_list_pop(&v6))\n
    {\n
        v7 = *(v4);\n
        cgc_memset(&v2, 0, 8);\n
        cgc_hash_mail(v7);\n
        if (cgc_send_bytes(1, &v2, 8) != 8)\n
            cgc__terminate();\n
        cgc_list_destroy_node(&v6, v4);\n
    }\n
    v8 = 0;\n
    return v8;\n
}\n
", "4212038:sub_404546": null, "4212048:cgc_do_destroy_lost_mail": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_destroy_lost_mail()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_get_lost_mailbox();\n
    if (cgc_is_mailbox_empty() == 1)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v2 = *((cgc_get_lost_mailbox() + 4));\n
    while (true)\n
    {\n
        v1[0] = cgc_list_pop(v2);\n
        if (!v1)\n
            break;\n
        v3 = v1[0];\n
        cgc_delete_mail();\n
        cgc_list_destroy_node(v2, v1);\n
    }\n
    if (cgc_list_length(v2))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4212274:sub_404632": null, "4212288:cgc_do_buy_postage": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_buy_postage()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_new_stamp();\n
    if (!v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if (cgc_send_bytes(1, v1, 3) != 3)\n
        cgc__terminate();\n
    v2 = 0;\n
    return v2;\n
}\n
", "4212417:sub_4046c1": null, "4212432:cgc_send_status": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_status(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_send_bytes(1, v2, 2) != 2)\n
        return cgc__terminate();\n
    return 2;\n
}\n
", "4212520:sub_404728": null, "4212528:cgc_address_exists": "extern struct_0 *mailboxes;\n
\n
int cgc_address_exists(unsigned short v0)\n
{\n
    return 0 != cgc_bst_search(&mailboxes, v0);\n
}\n
", "4212596:sub_404774": null, "4212608:cgc_put_mail_in_mailbox": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_put_mail_in_mailbox(unsigned int v1, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0->field_4)\n
        return cgc_list_insert_at_end(a0->field_4, v1);\n
    a0->field_4 = cgc_malloc(20);\n
    if (!a0->field_4)\n
        cgc__terminate();\n
    cgc_list_init(a0->field_4, 0);\n
    return cgc_list_insert_at_end(a0->field_4, v1);\n
}\n
", "4212759:sub_404817": null, "4212768:cgc_get_received_mailbox": "extern char received_box;\n
\n
int cgc_get_received_mailbox()\n
{\n
    return &received_box;\n
}\n
", "4212791:sub_404837": null, "4212800:cgc_is_mailbox_empty": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_mailbox_empty(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 1;\n
    if (v2->field_4)\n
    {\n
        v1 = 0 == cgc_list_length(v2->field_4);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4212887:sub_404897": null, "4212896:cgc_pop_mail_from_mailbox": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pop_mail_from_mailbox(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_list_length(v5->field_4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2[0] = cgc_list_pop(v5->field_4);\n
    v1 = v2[0];\n
    cgc_list_destroy_node(v5->field_4, v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4213026:sub_404922": null, "4213040:cgc_get_sorted_mailbox": "extern char sorted_box;\n
\n
int cgc_get_sorted_mailbox()\n
{\n
    return &sorted_box;\n
}\n
", "4213063:sub_404947": null, "4213072:cgc_get_undeliverable_mailbox": "extern char undeliverable_box;\n
\n
int cgc_get_undeliverable_mailbox()\n
{\n
    return &undeliverable_box;\n
}\n
", "4213095:sub_404967": null, "4213104:cgc_udm_sort": "int cgc_udm_sort(unsigned int v0, unsigned int a0)\n
{\n
    return !(v0 < a0);\n
}\n
", "4213132:sub_40498c": null, "4213136:cgc_get_mailbox_for_address": "extern struct_0 *mailboxes;\n
\n
int cgc_get_mailbox_for_address(unsigned short v0)\n
{\n
    return cgc_bst_search(&mailboxes, v0);\n
}\n
", "4213187:sub_4049c3": null, "4213200:cgc_get_lost_mailbox": "extern char lost_box;\n
\n
int cgc_get_lost_mailbox()\n
{\n
    return &lost_box;\n
}\n
", "4213223:sub_4049e7": null, "4213232:cgc_lm_sort": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_lm_sort(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&v2, 0, 8);\n
    cgc_memset(&v1, 0, 8);\n
    cgc_hash_mail(v4);\n
    cgc_hash_mail(a0);\n
    v7 = v3;\n
    return -1 != cgc_memcmp(&v2, &v1, 8);\n
}\n
", "4213418:sub_404aaa": null, "4213424:cgc_hash_mail": "int cgc_hash_mail(unsigned int v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc]\n
    char *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // edx\n
    char *v8;  // eax\n
    unsigned int v9;  // edx\n
    char *v10;  // eax\n
\n
    v4 = a0;\n
    v6 = a0 + 4;\n
    v3 = v6;\n
    v2 = 0;\n
    for (v2 = 0; v2 < 128; v2 = v6)\n
    {\n
        v1 = v4;\n
        v7 = (v2 >> 31 CONCAT v2) /m 4 >> 32;\n
        v8 = v1;\n
        v8[v7] = v8[v7] + *((v5 + v2 + 4));\n
        v6 = v2 + 1;\n
    }\n
    for (v2 = 0; v2 < 0x100; v2 = v6)\n
    {\n
        v0 = v3;\n
        v9 = (v2 >> 31 CONCAT v2) /m 4 >> 32;\n
        v10 = v0;\n
        v10[v9] = v10[v9] + *((v5 + v2 + 132));\n
        v6 = v2 + 1;\n
    }\n
    return v6;\n
}\n
", "4213616:cgc_delete_mail": "int cgc_delete_mail(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4213653:sub_404b95": null, "4213664:cgc_init_stamp_roll": "extern unsigned int stamp_roll[5];\n
\n
int cgc_init_stamp_roll()\n
{\n
    return cgc_list_init(&stamp_roll[0], cgc_free);\n
}\n
", "4213713:sub_404bd1": null, "4213728:cgc_get_new_stamp": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    char padding_34[16];\n
    unsigned short field_44;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_new_stamp()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = cgc_malloc(3);\n
    if (!v3)\n
        cgc__terminate();\n
    do\n
    {\n
        for (v2 = 0; v2 < 3; v2 += 1)\n
        {\n
            rand();\n
            v7 = v1;\n
            v0 = v7->field_30;\n
            v8 = v7->field_44;\n
            v3[v2] = *((v0 + ((v8 >> 31 CONCAT v8) /m 4093 >> 32)));\n
        }\n
    } while (!cgc_memcmp(v3, &v1[61].padding_34[14], 3));\n
    cgc_list_insert_at_end(&v1[2].field_44, v3);\n
    v9 = v4;\n
    return v3;\n
}\n
", "4213976:sub_404cd8": null, "4213984:cgc_use_stamp": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void stamp_roll;\n
\n
int cgc_use_stamp(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_list_find_node_with_data(&stamp_roll, cgc_stamp_cmp, v4);\n
    if (!v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    cgc_list_remove_node(v0 + 208, v1);\n
    cgc_list_destroy_node(v0 + 208, &v1);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4214130:sub_404d72": null, "4214144:cgc_stamp_cmp": "int cgc_stamp_cmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
\n
    v1 = v2;\n
    v0 = a0;\n
    return 0 == cgc_memcmp(v1, v0, 3);\n
}\n
", "4214230:sub_404dd6": null, "4214240:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned short v1;  // [bp-0xe]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_setup();\n
    while (true)\n
    {\n
        v1 = cgc_process_cmd();\n
        if (!v1)\n
        {\n
            cgc_send_status(v0 - 4333);\n
        }\n
        else\n
        {\n
            if (v1 != -1)\n
                break;\n
            cgc_send_status(v0 - 4331);\n
        }\n
    }\n
    cgc_send_status(v0 - 4329);\n
    v6 = v3;\n
    return 0;\n
}\n
", "4214416:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:rand": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}