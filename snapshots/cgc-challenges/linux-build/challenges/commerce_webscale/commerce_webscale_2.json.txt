{"4202496:_init": "extern struct_0 *g_408b10;\n
\n
int _init()\n
{\n
    if (g_408b10)\n
    {\n
        g_408b10();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:sub_402090": "int sub_402090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202646:sub_402096": null, "4202656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202699:sub_4020cb": null, "4202700:sub_4020cc": "int sub_4020cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202708:sub_4020d4": null, "4202720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 27191;\n
    v6 = v5 + 42;\n
    v7 = v5 + 42;\n
    if (v7 == v6)\n
        return v5 + 42;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202771:sub_402113": "int sub_402113()\n
{\n
}\n
", "4202777:sub_402119": "int sub_402119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 27127;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 42;\n
    v9 = (v6 + 42 - (v6 + 42) >> 31) + (42 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202855:sub_402167": "int sub_402167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408b0c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408b0c)\n
    {\n
        v0 = __dso_handle;\n
        sub_402090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (!v4)\n
        return 0;\n
    v5 = a0;\n
    if (!v5)\n
        return 0;\n
    tmp_2 = v5;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v7 = v5 * v4;\n
    v8 = cgc_malloc();\n
    if (v8)\n
    {\n
        v0 = v7;\n
        return cgc_memset(v8, 0);\n
    }\n
    return 0;\n
}\n
", "4203039:sub_40221f": null, "4203040:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4203073:sub_402241": null, "4203088:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203107:sub_402263": null, "4203120:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203136:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203152:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203168:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4203182:sub_4022ae": null, "4203184:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4203206:sub_4022c6": null, "4203216:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4203238:sub_4022e6": null, "4203248:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4203270:sub_402306": null, "4203280:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4203302:sub_402326": null, "4203312:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[11028 + v0];\n
}\n
", "4203337:sub_402349": null, "4203344:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4203369:sub_402369": null, "4203376:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[10900 + v0];\n
}\n
", "4203401:sub_402389": null, "4203408:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203416:sub_402398": null, "4203424:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4203443:sub_4023b3": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4203475:sub_4023d3": null, "4203488:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // esi\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v3;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v4 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            return cgc_coalesce();\n
        }\n
        v0 = *(v4);\n
        return cgc_deallocate(v4);\n
    }\n
}\n
", "4203577:sub_402439": null, "4203584:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_408c44;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct_2 *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v12[6];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
        return 0;\n
    if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        if (v10 <= 31)\n
        {\n
            v11 = *((&cgc_free_lists + 0x4 * v10));\n
            if (!*((&cgc_free_lists + 0x4 * v10)))\n
                goto LABEL_4024f0;\n
            else\n
                goto LABEL_0x402500;\n
        }\n
        else\n
        {\n
            v0 = &v2;\n
            if (cgc_allocate(0x40000, 0))\n
                return 0;\n
            v12 = *(&v2);\n
            if (!v12)\n
                return 0;\n
            v12[0] = 0x40000;\n
            v12[1] = 1;\n
            v12[3] = 0;\n
            v12[2] = 0;\n
            v12[5] = 0;\n
            v12[4] = 0;\n
            cgc_insert_into_flist();\n
            v11 = g_408c44;\n
            cgc_remove_from_flist();\n
            v13 = *(v11) - v9;\n
            if (v13 < 49)\n
                return v11 + 24;\n
            v14 = v9 + v11;\n
            *((&v9->field_0 + v11)) = v13;\n
            *(&v9->padding_4[v11]) = 1;\n
            *((8 + &v9->field_0 + v11)) = 0;\n
            *(&v9->padding_c[v11]) = 0;\n
            *(v11) = v9;\n
            *((20 + &v9->field_0 + v11)) = v11;\n
            *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
            v15 = *((v11 + 16));\n
            if (v15)\n
                v15->field_14 = v14;\n
            *((v11 + 16)) = v14;\n
            cgc_insert_into_flist();\n
        }\n
        while (true)\n
        {\n
            while (*(v11) < v9)\n
            {\n
                v11 = *((v11 + 8));\n
                if (!v11)\n
                    goto LABEL_4024f0;\n
            }\n
            while (true)\n
            {\n
LABEL_4024f0:\n
                v10 += 1;\n
                if (v10 == 32)\n
                    break;\n
                v11 = *(&(&cgc_free_lists)[4 * v10]);\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            return v8 + 1;\n
        }\n
        return 0;\n
    }\n
}\n
", "4203994:sub_4025da": null, "4204000:cgc_get_size_class": "extern unsigned int g_408b48;\n
extern unsigned int g_408b4c;\n
extern unsigned int g_408b50;\n
extern unsigned int g_408b54;\n
extern unsigned int g_408b58;\n
extern unsigned int g_408b5c;\n
extern unsigned int g_408b60;\n
extern unsigned int g_408b64;\n
extern unsigned int g_408b68;\n
extern unsigned int g_408b6c;\n
extern unsigned int g_408b70;\n
extern unsigned int g_408b74;\n
extern unsigned int g_408b78;\n
extern unsigned int g_408b7c;\n
extern unsigned int g_408b80;\n
extern unsigned int g_408b84;\n
extern unsigned int g_408b88;\n
extern unsigned int g_408b8c;\n
extern unsigned int g_408b90;\n
extern unsigned int g_408b94;\n
extern unsigned int g_408b98;\n
extern unsigned int g_408b9c;\n
extern unsigned int g_408ba0;\n
extern unsigned int g_408ba4;\n
extern unsigned int g_408ba8;\n
extern unsigned int g_408bac;\n
extern unsigned int g_408bb0;\n
extern unsigned int g_408bb4;\n
extern unsigned int g_408bb8;\n
extern unsigned int g_408bbc;\n
extern unsigned int g_408bc0;\n
extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (size_class_limits >= v1)\n
        return v2;\n
    v2 = 1;\n
    if (g_408b48 < v1)\n
    {\n
        v2 = 2;\n
        if (g_408b4c < v1)\n
        {\n
            v2 = 3;\n
            if (g_408b50 < v1)\n
            {\n
                v2 = 4;\n
                if (g_408b54 < v1)\n
                {\n
                    v2 = 5;\n
                    if (g_408b58 < v1)\n
                    {\n
                        v2 = 6;\n
                        if (g_408b5c < v1)\n
                        {\n
                            v2 = 7;\n
                            if (g_408b60 < v1)\n
                            {\n
                                v2 = 8;\n
                                if (g_408b64 < v1)\n
                                {\n
                                    v2 = 9;\n
                                    if (g_408b68 < v1)\n
                                    {\n
                                        v2 = 10;\n
                                        if (g_408b6c < v1)\n
                                        {\n
                                            v2 = 11;\n
                                            if (g_408b70 < v1)\n
                                            {\n
                                                v2 = 12;\n
                                                if (g_408b74 < v1)\n
                                                {\n
                                                    v2 = 13;\n
                                                    if (g_408b78 < v1)\n
                                                    {\n
                                                        v2 = 14;\n
                                                        if (g_408b7c < v1)\n
                                                        {\n
                                                            v2 = 15;\n
                                                            if (g_408b80 < v1)\n
                                                            {\n
                                                                v2 = 16;\n
                                                                if (g_408b84 < v1)\n
                                                                {\n
                                                                    v2 = 17;\n
                                                                    if (g_408b88 < v1)\n
                                                                    {\n
                                                                        v2 = 18;\n
                                                                        if (g_408b8c < v1)\n
                                                                        {\n
                                                                            v2 = 19;\n
                                                                            if (g_408b90 < v1)\n
                                                                            {\n
                                                                                v2 = 20;\n
                                                                                if (g_408b94 < v1)\n
                                                                                {\n
                                                                                    v2 = 21;\n
                                                                                    if (g_408b98 < v1)\n
                                                                                    {\n
                                                                                        v2 = 22;\n
                                                                                        if (g_408b9c < v1)\n
                                                                                        {\n
                                                                                            v2 = 23;\n
                                                                                            if (g_408ba0 < v1)\n
                                                                                            {\n
                                                                                                v2 = 24;\n
                                                                                                if (g_408ba4 < v1)\n
                                                                                                {\n
                                                                                                    v2 = 25;\n
                                                                                                    if (g_408ba8 < v1)\n
                                                                                                    {\n
                                                                                                        v2 = 26;\n
                                                                                                        if (g_408bac < v1)\n
                                                                                                        {\n
                                                                                                            v2 = 27;\n
                                                                                                            if (g_408bb0 < v1)\n
                                                                                                            {\n
                                                                                                                v2 = 28;\n
                                                                                                                if (g_408bb4 < v1)\n
                                                                                                                {\n
                                                                                                                    v2 = 29;\n
                                                                                                                    if (g_408bb8 < v1)\n
                                                                                                                    {\n
                                                                                                                        v2 = 30;\n
                                                                                                                        if (g_408bbc < v1)\n
                                                                                                                            v2 = 31 + (g_408bc0 < v1);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4204519:sub_4027e7": null, "4204528:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1[0]);\n
    v1[1] = 1;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]);\n
    if (!v3)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
        return v2;\n
    }\n
    v1[2] = v3;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return v2;\n
}\n
", "4204621:sub_40284d": null, "4204624:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // ecx\n
    struct_1 *v4;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1->field_0);\n
    v3 = v1->field_c;\n
    if (v3)\n
        v3->field_8 = v1->field_8;\n
    v4 = v1->field_8;\n
    if (v4)\n
        v4->field_c = v1->field_c;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) == v1)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1->field_8;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v2;\n
}\n
", "4204725:sub_4028b5": null, "4204736:cgc_coalesce": "typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_2 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_4 *field_14;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_2 *field_c;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_2 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_1 *field_14;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_5 *v1)\n
{\n
    struct struct_1 **v0;  // [bp-0x14]\n
    struct_5 *v2;  // esi\n
    struct_4 *v3;  // ebp\n
    struct_3 *v4;  // edi\n
    struct struct_1 **v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_2 *v8;  // ecx\n
    struct_2 *v9;  // ecx\n
    unsigned int v10;  // eax\n
    struct_0 *v11;  // ecx\n
    struct_2 *v12;  // ecx\n
    struct_0 *v13;  // ecx\n
    struct_0 *v14;  // ecx\n
    struct_3 *v15;  // edi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    struct_2 *v18;  // ecx\n
    struct_2 *v19;  // ecx\n
    unsigned int v20;  // eax\n
    struct_0 *v21;  // ecx\n
    struct_2 *v22;  // ecx\n
    struct_0 *v23;  // ecx\n
    struct_0 *v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // eax\n
    struct_2 *v28;  // ecx\n
    unsigned int v29;  // ecx\n
    struct_4 *v31;  // edi\n
    unsigned int v32;  // eax\n
    struct_3 *v33;  // edx, Other Possible Types: unsigned int\n
    struct_1 *v34;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v35;  // ecx\n
    unsigned int v36;  // ecx\n
    struct struct_1 **v37;  // edx, Other Possible Types: unsigned int, unsigned int *\n
    struct_1 *v38;  // eax, Other Possible Types: unsigned int\n
    struct_3 *v39;  // eax, Other Possible Types: unsigned int\n
    struct_4 *v42;  // edi\n
    unsigned int v43;  // eax\n
    unsigned int v44;  // ecx\n
    struct_3 *v45;  // eax\n
    struct_1 *v46;  // ecx\n
    struct_3 *v47;  // ecx\n
\n
    v2 = v1;\n
    v3 = v2->field_14;\n
    if (!v2->field_14)\n
        return v39;\n
    v4 = v2->field_10;\n
    if (!v3->field_4)\n
    {\n
        if (!v4)\n
            return v39;\n
        if (!v4->field_4)\n
            return v39;\n
        v7 = cgc_get_size_class(v4->field_0);\n
        v9 = v4->field_c;\n
        if (v9)\n
            v9->field_8 = v4->field_8;\n
        v13 = v4->field_8;\n
        if (v13)\n
            v13->field_c = v4->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v7]) == v4)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v7]) = v4->field_8;\n
        v4->field_8 = 0;\n
        v4->field_c = 0;\n
        v4->field_4 = 0;\n
        v17 = cgc_get_size_class(v2->field_0);\n
        v19 = v2->field_c;\n
        if (v19)\n
            v19->field_8 = v2->field_8;\n
        v23 = v2->field_8;\n
        if (v23)\n
            v23->field_c = v2->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v17]) == v2)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v17]) = v2->field_8;\n
        v2->field_8 = 0;\n
        v2->field_c = 0;\n
        v2->field_4 = 0;\n
        v26 = v2->field_0 + v2->field_10->field_0;\n
        v2->field_0 = v26;\n
        v27 = cgc_get_size_class(v26);\n
        v2->field_4 = 1;\n
        v29 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v27]);\n
        if (v29)\n
        {\n
            v2->field_8 = v29;\n
            *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v27]) + 12)) = v2;\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v27]) = v2;\n
            v2->field_c = 0;\n
            v33 = v2->field_10;\n
            v34 = v33->field_14;\n
            if (!v34)\n
                goto LABEL_402c4a;\n
        }\n
        else\n
        {\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v27]) = v2;\n
            v33 = v2->field_10;\n
            v34 = *((v33 + 20));\n
            if (!v34)\n
                goto LABEL_402c4a;\n
        }\n
        *((v34 + 16)) = *((v33 + 16));\n
LABEL_402c4a:\n
        v39 = *((v33 + 16));\n
        if (!v39)\n
            return *((v33 + 16));\n
        v37 = v33 + 20;\n
        goto LABEL_402c95;\n
        goto LABEL_402c95;\n
    }\n
    v5 = &v2->field_14;\n
    if (v4 && v4->field_4)\n
    {\n
        v0 = v5;\n
        v6 = cgc_get_size_class(v3->field_0);\n
        v8 = v3->field_c;\n
        if (v8)\n
            v8->field_8 = v3->field_8;\n
        v11 = v3->field_8;\n
        if (v11)\n
            v11->field_c = v3->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v6]) == v3)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v6]) = v3->field_8;\n
        v3->field_8 = 0;\n
        v3->field_c = 0;\n
        v3->field_4 = 0;\n
        v15 = v2->field_10;\n
        v16 = cgc_get_size_class(v15->field_0);\n
        v18 = v15->field_c;\n
        if (v18)\n
            v18->field_8 = v15->field_8;\n
        v21 = v15->field_8;\n
        if (v21)\n
            v21->field_c = v15->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v16]) == v15)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v16]) = v15->field_8;\n
        v15->field_8 = 0;\n
        v15->field_c = 0;\n
        v15->field_4 = 0;\n
        v25 = cgc_get_size_class(v2->field_0);\n
        v28 = v2->field_c;\n
        if (v28)\n
            v28->field_8 = v2->field_8;\n
        v35 = v2->field_8;\n
        if (v35)\n
            v35->field_c = v2->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v25]) == v2)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v25]) = v2->field_8;\n
        v2->field_8 = 0;\n
        v2->field_c = 0;\n
        v2->field_4 = 0;\n
        v2->field_14->field_0 = v2->field_14->field_0 + v2->field_0;\n
        v2->field_14->field_0 = v2->field_14->field_0 + v2->field_10->field_0;\n
        v42 = v2->field_14;\n
        v43 = cgc_get_size_class(v42->field_0);\n
        v42->field_4 = 1;\n
        v44 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v43]);\n
        if (!v44)\n
        {\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v43]) = v42;\n
        }\n
        else\n
        {\n
            v42->field_8 = v44;\n
            *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v43]) + 12)) = v42;\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v43]) = v42;\n
            v42->field_c = 0;\n
        }\n
        v37 = v0;\n
        v45 = v2->field_10;\n
        v46 = v45->field_14;\n
        if (v46)\n
        {\n
            v46->field_10 = v45->field_10;\n
            v37 = v0;\n
        }\n
        v47 = v45->field_10;\n
        if (v47)\n
            v47->field_14 = v45->field_14;\n
        v38 = *(v37);\n
        if (!v38)\n
            goto LABEL_402c8e;\n
        goto LABEL_402c88;\n
    }\n
    v39 = v2->field_10;\n
    if (!v39)\n
        return v2->field_10;\n
    if (v39->field_4)\n
        return v2->field_10;\n
    v0 = v5;\n
    v10 = cgc_get_size_class(v3->field_0);\n
    v12 = v3->field_c;\n
    if (v12)\n
        v12->field_8 = v3->field_8;\n
    v14 = v3->field_8;\n
    if (v14)\n
        v14->field_c = v3->field_c;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v10]) == v3)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v10]) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    v20 = cgc_get_size_class(v2->field_0);\n
    v22 = v2->field_c;\n
    if (v22)\n
        v22->field_8 = v2->field_8;\n
    v24 = v2->field_8;\n
    if (v24)\n
        v24->field_c = v2->field_c;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v20]) == v2)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v20]) = v2->field_8;\n
    v2->field_8 = 0;\n
    v2->field_c = 0;\n
    v2->field_4 = 0;\n
    v2->field_14->field_0 = v2->field_14->field_0 + v2->field_0;\n
    v31 = v2->field_14;\n
    v32 = cgc_get_size_class(v31->field_0);\n
    v31->field_4 = 1;\n
    v36 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v32]);\n
    if (v36)\n
    {\n
        v31->field_8 = v36;\n
        *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v32]) + 12)) = v31;\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v32]) = v31;\n
        v31->field_c = 0;\n
        v37 = v0;\n
        v38 = *(v37);\n
        if (!v38)\n
            goto LABEL_402c8e;\n
    }\n
    else\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v32]) = v31;\n
        v37 = v0;\n
        v38 = *(v37);\n
        if (!v38)\n
            goto LABEL_402c8e;\n
    }\n
LABEL_402c88:\n
    *((v38 + 16)) = v2->field_10;\n
LABEL_402c8e:\n
    v39 = v2->field_10;\n
    if (!v39)\n
        return v2->field_10;\n
LABEL_402c95:\n
    *((v39 + 20)) = *(v37);\n
    return v39;\n
}\n
", "4205768:sub_402cc8": null, "4205776:cgc_memchr": "int cgc_memchr(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) == a0)\n
            return v0 + v2;\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4205833:sub_402d09": null, "4205840:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v2)) != *((v0 + v2)))\n
            return *((a0 + v2)) - *((v0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4205903:sub_402d4f": null, "4205904:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4206034:sub_402dd2": null, "4206048:cgc_memset": "int cgc_memset(char v0[8], unsigned int a0, unsigned int a1)\n
{\n
    int tmp_13;  // tmp #13\n
    char v1[8];  // eax\n
    unsigned int v2;  // edi\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edi\n
    char v6[8];  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = a0;\n
    v4 = v2 & 7;\n
    v6 = v1;\n
    if (v2 - 1 >= 7)\n
    {\n
        v5 = v2 & -8;\n
        v6 = v1;\n
        do\n
        {\n
            *(v6) = v3;\n
            *((v6 + 1)) = v3;\n
            *((v6 + 2)) = v3;\n
            *((v6 + 3)) = v3;\n
            *((v6 + 4)) = v3;\n
            *((v6 + 5)) = v3;\n
            *((v6 + 6)) = v3;\n
            *((v6 + 7)) = v3;\n
            v6 += 8;\n
            tmp_13 = v5;\n
            v5 -= 8;\n
        } while (tmp_13 != 8);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = v3;\n
        v7 += 1;\n
    } while (v4 != v7);\n
    return v0;\n
}\n
", "4206158:sub_402e4e": null, "4206160:cgc_output_number_printf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    struct_0 *v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    char v14;  // al\n
\n
    v6 = a2;\n
    v7 = a1;\n
    v8 = a0;\n
    v11 = v5;\n
    if (v8 < v7)\n
    {\n
        v3 = v8;\n
        v2 = 0;\n
        if (v6 <= 0)\n
            goto LABEL_402f2b;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v8) /m v7;\n
        v3 = tmp_9 >> 32;\n
        v11 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v8) /m v7, v7, v6 - 1, a3);\n
        if (v6 <= 0)\n
            goto LABEL_402f2b;\n
    }\n
    if (!v2)\n
    {\n
        tmp_2 = v6;\n
        v12 = v6 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            if ((a3 & 1))\n
            {\n
                do\n
                {\n
                    v1 = 48;\n
                    v0 = &v4;\n
                    cgc_transmit(v11, &v1, 1);\n
                    v11 = v5;\n
                    tmp_6 = v12;\n
                    v12 -= 1;\n
                } while (tmp_6 != 1);\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v1 = 32;\n
                    v0 = &v4;\n
                    cgc_transmit(v11, &v1, 1);\n
                    v11 = v5;\n
                    tmp_6 = v12;\n
                    v12 -= 1;\n
                } while (tmp_6 != 1);\n
            }\n
        }\n
    }\n
LABEL_402f2b:\n
    if (!(a3 & 2))\n
    {\n
        v13 = v3;\n
        v14 = v13 + 87;\n
    }\n
    else\n
    {\n
        v13 = v3;\n
        v14 = v13 + 55;\n
    }\n
    if (v13 < 10)\n
        v14 = v13 + 48;\n
    v1 = v14;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4206452:sub_402f74": null, "4206464:cgc_fdprintf": "int cgc_fdprintf(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x30]\n
    char v6;  // [bp-0x1d]\n
    char v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    char v11;  // [bp+0xc]\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edi\n
\n
    v12 = a0;\n
    v8 = &v11;\n
    if (!*(v12))\n
        return 0;\n
    v13 = v10;\n
    v14 = &v7;\n
    v15 = &v6;\n
    do\n
    {\n
        v20 = v12 + 1;\n
        a0 = v20;\n
        *(&v12) = *(v12);\n
        if (v6 == 37)\n
        {\n
            v9 = 0;\n
            v18 = 0;\n
            v19 = v20;\n
            while (true)\n
            {\n
                v20 = v19 + 1;\n
                a0 = v20;\n
                v16 = *(v19);\n
                v17 = v16;\n
                if (v17 - 49 >= 9)\n
                    break;\n
                v18 = cgc_strtol(v19, &a0);\n
                v19 = a0;\n
            }\n
            switch (v17)\n
            {\n
            case 88:\n
                v21 = v9 | 2;\n
                goto LABEL_403139;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
                v6 = v16;\n
                break;\n
            case 99:\n
                v22 = v8;\n
                v8 = v22 + 4;\n
                v6 = *(v22);\n
                break;\n
            case 100:\n
                v23 = v8;\n
                v8 = v23 + 4;\n
                v24 = *(v23);\n
                if (v24 >= 0)\n
                {\n
                    v28 = v10;\n
                }\n
                else\n
                {\n
LABEL_403177:\n
                    v6 = 45;\n
                    v5 = &v7;\n
                    v28 = v10;\n
                    cgc_transmit(v10, &v6, 1);\n
                    v24 = -(v24);\n
                }\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                v0 = v24;\n
                goto LABEL_4031a2;\n
            case 115:\n
                v25 = v8;\n
                v8 = v25 + 4;\n
                v9 = *(v25);\n
                v27 = v10;\n
                v14 = &v7;\n
                v15 = &v6;\n
                if (cgc_strlen())\n
                {\n
                    v29 = 0;\n
                    do\n
                    {\n
                        v6 = *((v9 + v29));\n
                        v5 = v14;\n
                        v4 = v15;\n
                        cgc_transmit(v27, v15, 1);\n
                        v29 += 1;\n
                        v15 = &v6;\n
                        v14 = &v7;\n
                    } while (v29 < cgc_strlen(v9, v4, 1));\n
                }\n
                goto LABEL_402fd7;\n
            case 117:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                goto LABEL_40314b;\n
            case 120:\n
                v21 = v9;\n
LABEL_403139:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v21;\n
                v2 = v18;\n
                v1 = 16;\n
LABEL_40314b:\n
                v0 = *(v26);\n
                v28 = v10;\n
LABEL_4031a2:\n
                cgc_output_number_printf(v28, v0, v1, v2, v3);\n
                v27 = v28;\n
                v14 = &v7;\n
                v15 = &v6;\n
                goto LABEL_402fd7;\n
            default:\n
                if (v17 == 37)\n
                    goto LABEL_0x403153;\n
                else\n
                    goto LABEL_0x403041;\n
            }\n
            v5 = &v7;\n
            v15 = &v6;\n
            cgc_transmit(v10, &v6, 1);\n
            v27 = v10;\n
            goto LABEL_403177;\n
        }\n
        v6 = v12;\n
        v5 = v14;\n
        cgc_transmit(v13, v15, 1);\n
        v27 = v13;\n
        v14 = &v7;\n
LABEL_402fd7:\n
        v13 = v27;\n
        v12 = a0;\n
    } while (*(v12));\n
    return 0;\n
}\n
", "4206518:sub_402fb6": null, "4207044:sub_4031c4": null, "4207056:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v4, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    int tmp_22;  // tmp #22\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
    struct struct_0 **v9;  // ebp\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // edi\n
    unsigned int *v12;  // esi, Other Possible Types: unsigned int\n
    unsigned int v13;  // ecx\n
    char v14;  // dl\n
    unsigned int v15;  // eax\n
    char v16;  // cl\n
    char v17;  // cl\n
    char *v18;  // eax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v14 = a4;\n
    v13 = a3;\n
    v8 = a2;\n
    v11 = a1;\n
    v9 = a0;\n
    if (v11 < v8)\n
    {\n
        v12 = v4;\n
        if (v13 <= 0)\n
            goto LABEL_4032df;\n
    }\n
    else\n
    {\n
        v10 = (0 CONCAT v11) /m v8;\n
        v11 = (0 CONCAT v11) /m v8 >> 32;\n
        v0 = v8;\n
        v12 = v4;\n
        cgc_output_number_sprintf(v12, v9, v10, v0, a3 - 1, a4);\n
        v13 = a3;\n
        v14 = a4;\n
        if (v13 <= 0)\n
            goto LABEL_4032df;\n
    }\n
    if (v11 < a2)\n
    {\n
        v15 = v13 - 1;\n
        if (v13 != 1)\n
        {\n
            if ((v14 & 1))\n
            {\n
                if ((v15 & 1))\n
                {\n
                    *(v9)->field_0 = 48;\n
                    *(v9) = *(v9) + 1;\n
                    *(v12) = *(v12) + 1;\n
                    v15 = v13 - 2;\n
                }\n
                if (v13 != 2)\n
                {\n
                    do\n
                    {\n
                        *(v9)->field_0 = 48;\n
                        *(v9) = *(v9) + 1;\n
                        *(v12) = *(v12) + 1;\n
                        *(v9)->field_0 = 48;\n
                        *(v9) = *(v9) + 1;\n
                        *(v12) = *(v12) + 1;\n
                        tmp_22 = v15;\n
                        v15 -= 2;\n
                    } while (tmp_22 != 2);\n
                }\n
            }\n
            else\n
            {\n
                if ((v15 & 1))\n
                {\n
                    *(v9)->field_0 = 32;\n
                    *(v9) = *(v9) + 1;\n
                    *(v12) = *(v12) + 1;\n
                    v15 = v13 - 2;\n
                }\n
                if (v13 != 2)\n
                {\n
                    do\n
                    {\n
                        *(v9)->field_0 = 32;\n
                        *(v9) = *(v9) + 1;\n
                        *(v12) = *(v12) + 1;\n
                        *(v9)->field_0 = 32;\n
                        *(v9) = *(v9) + 1;\n
                        *(v12) = *(v12) + 1;\n
                        tmp_22 = v15;\n
                        v15 -= 2;\n
                    } while (tmp_22 != 2);\n
                }\n
            }\n
        }\n
    }\n
LABEL_4032df:\n
    v16 = (!(v11 < 10) ? 48 : ((!(v14 & 2)) * 32 + 55));\n
    v17 = v16 + v11;\n
    v18 = *(v9);\n
    *(v18) = v17;\n
    *(v9) = *(v9) + 1;\n
    *(v12) = *(v12) + 1;\n
    return v18;\n
}\n
", "4207374:sub_40330e": null, "4207376:cgc_sprintf": "typedef struct struct_1 {\n
    char field_-1;\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
int cgc_sprintf(char *v8, struct_1 *a0)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp+0xc]\n
    struct_1 *v10;  // eax, Other Possible Types: unsigned int\n
    char *v11;  // ecx, Other Possible Types: unsigned int\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx\n
    unsigned int v14;  // eax\n
    char v15;  // dl\n
    struct_1 *v16;  // ecx, Other Possible Types: unsigned int\n
    void* v17;  // esi, Other Possible Types: unsigned int\n
    unsigned int v18;  // ecx\n
    struct_1 *v19;  // ecx, Other Possible Types: unsigned int\n
    char *v20;  // eax, Other Possible Types: unsigned int\n
    unsigned int v21;  // edi\n
    struct struct_0 **v22;  // ecx\n
    char *v23;  // ecx, Other Possible Types: unsigned int\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v26;  // edi\n
    struct struct_0 **v27;  // ecx\n
    char *v28;  // edx\n
    unsigned int v29;  // edi\n
\n
    v10 = a0;\n
    v11 = v8;\n
    v5 = 0;\n
    v7 = &v9;\n
    if (!v10->field_-1)\n
    {\n
        v12 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v19 = v10 + 1;\n
            a0 = v19;\n
            *(&v10) = *(v10);\n
            if (*(&v10) != 37)\n
            {\n
                v13 = v8;\n
                *(v13) = v10;\n
                v8 = v13 + 1;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                v17 = 0;\n
                while (true)\n
                {\n
                    v14 = v17 | 1;\n
                    v16 = v19 + 1;\n
                    do\n
                    {\n
                        v21 = v17;\n
                        a0 = v16;\n
                        v15 = *((v16 - 1));\n
                        v16 += 1;\n
                        v17 = v14;\n
                    } while (v15 == 48);\n
                    switch (v15)\n
                    {\n
                    case 37:\n
                        v20 = v8;\n
                        *(v20) = 37;\n
                        goto LABEL_4034b7;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v18 = v16 - 2;\n
                        v4 = 10;\n
                        v6 = cgc_strtol(v18, &a0);\n
                        v19 = a0;\n
                        v17 = v21;\n
                        continue;\n
                    case 100:\n
                        v22 = v7;\n
                        v7 = v22 + 1;\n
                        v23 = *(v22);\n
                        if (v23 < 0)\n
                        {\n
                            v28 = v8;\n
                            *(v28) = 45;\n
                            v8 = v28 + 1;\n
                            v5 += 1;\n
                            v23 = -(v23);\n
                        }\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 10;\n
                        v0 = v23;\n
LABEL_403437:\n
                        cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                        break;\n
                    case 115:\n
                        v24 = v7;\n
                        v7 = v24 + 1;\n
                        v25 = v8;\n
                        v26 = v5;\n
                        if (cgc_strlen())\n
                        {\n
                            v6 = v26;\n
                            v29 = 0;\n
                            do\n
                            {\n
                                v25[v29] = (*(v24))[v29].field_0;\n
                                v29 += 1;\n
                            } while (v29 < cgc_strlen());\n
                            v25 = &v25[v29];\n
                            v26 = v6 + v29;\n
                        }\n
                        v8 = v25;\n
                        v5 = v26;\n
                        break;\n
                    case 88:\n
                        v21 |= 2;\n
                    case 120:\n
                        v27 = v7;\n
                        v7 = v27 + 1;\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 16;\n
                        v0 = &*(v27)->field_0;\n
                        goto LABEL_403437;\n
                    default:\n
                        v20 = v8;\n
                        *(v20) = v15;\n
LABEL_4034b7:\n
                        v8 = v20 + 1;\n
                        goto LABEL_40335d;\n
                    }\n
                }\n
            }\n
LABEL_40335d:\n
            v5 += 1;\n
            v10 = a0;\n
        } while (*(v10));\n
        v11 = v8;\n
        v12 = v5;\n
    }\n
    *(v11) = 0;\n
    return v12;\n
}\n
", "4207430:sub_403346": null, "4207829:sub_4034d5": null, "4207840:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_40354a;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_40354a:\n
    return v5;\n
}\n
", "4207956:sub_403554": null, "4207968:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4208002:sub_403582": null, "4208016:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return *(v1) - v5;\n
            if (v5 != v3)\n
                return *(v1) - v5;\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return *(v1) - 0;\n
}\n
", "4208084:sub_4035d4": null, "4208096:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        *(v2) = 0;\n
        return v0;\n
    }\n
    v4 = 0;\n
    do\n
    {\n
        v2[v4] = v3;\n
        v3 = v1[1 + v4];\n
        v4 += 1;\n
    } while (v3);\n
    v2[v4] = 0;\n
    return v0;\n
}\n
", "4208161:sub_403621": null, "4208176:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4208203:sub_40364b": null, "4208208:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    struct struct_0 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_4036bd;\n
                }\n
            }\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_4036bd:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4208327:sub_4036c7": null, "4208336:cgc_strtol": "int cgc_strtol(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    void* v4;  // ebp, Other Possible Types: unsigned int\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char v6;  // bl\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebp\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = 0;\n
    if (v1 > 36)\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
        if (v1 != 1)\n
        {\n
            v7 = v3;\n
            while (true)\n
            {\n
                v6 = *(v7);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v6 != 32)\n
                    break;\n
                v7 += 1;\n
            }\n
            v8 = 0;\n
            *(&v8) = v6 == 45;\n
            v9 = (*((v7 + v8)) == 43) + v8;\n
            v10 = v7 + v9;\n
            if (!v1)\n
            {\n
                v1 = 10;\n
                if (*(v10) == 48)\n
                {\n
                    if ((*((v7 + v9 + 1)) | 32) == 120)\n
                    {\n
                        v10 = v7 + v9 + 2;\n
                        v1 = 16;\n
                    }\n
                    else\n
                    {\n
                        v10 = v7 + v9 + 1;\n
                        v1 = 8;\n
                    }\n
                }\n
            }\n
            else if (v1 == 16)\n
            {\n
                v1 = 16;\n
                if (*(v10) == 48 && (*((v7 + v9 + 1)) | 32) == 120)\n
                    v10 = v7 + v9 + 2;\n
            }\n
            v11 = 0;\n
            v12 = 0;\n
            while (true)\n
            {\n
                v13 = *((v10 + v12));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v14 = v13 - 48;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v15 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v15 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v14 = v13 + v15 + 10;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                v11 = v1 * v11 + v14;\n
                v12 += 1;\n
            }\n
            v4 = -(v11);\n
            if (v6 != 45)\n
                v4 = v11;\n
            v5 = v10 + v12;\n
            v2 = a0;\n
            v3 = v0;\n
        }\n
    }\n
    if (!v2)\n
        return v4;\n
    if (!v12)\n
        v5 = v3;\n
    *(v2) = v5;\n
    return v4;\n
}\n
", "4208379:sub_4036fb": null, "4208551:sub_4037a7": null, "4208647:sub_403807": null, "4208656:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4208697:sub_403839": null, "4208704:cgc_database_run": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 *__buf;\n
extern struct_0 *__rpc;\n
extern struct_0 *g_408c4c;\n
\n
int cgc_database_run(struct struct_0 **v7, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0xb4]\n
    char v1;  // [bp-0x80]\n
    struct struct_0 **v2;  // [bp-0x10]\n
    struct struct_0 **v3;  // [bp-0xc]\n
    struct struct_0 **v4;  // [bp-0x8]\n
    struct struct_0 **v14;  // [bp+0x28]\n
    struct struct_0 **v15;  // [bp+0x2c]\n
    char v28;  // [bp+0x68]\n
    char v29;  // [bp+0x6c]\n
    char v30;  // [bp+0x70]\n
    unsigned int v31;  // [bp+0x74]\n
    char v32;  // [bp+0x78]\n
    char v33;  // [bp+0x7c]\n
    struct struct_0 **v38;  // ebx\n
    struct struct_0 **v39;  // edi\n
    struct struct_0 **v40;  // esi\n
    unsigned int v41;  // eax\n
    struct struct_0 **v44;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v38;\n
    v3 = v39;\n
    v2 = v40;\n
    g_408c4c = v7;\n
    __rpc = a0;\n
    v0 = 0x8000;\n
    v44 = cgc__rpc_recv(&__rpc, &__buf);\n
    if (v44 < 0)\n
    {\n
LABEL_403b40:\n
        return 0;\n
    }\n
    while (true)\n
    {\n
        v14 = &__buf;\n
        v15 = v44;\n
        v4 = &v1;\n
        v3 = &v14;\n
        v2 = &v28;\n
        if (cgc_unmarshal_rpc_msg(v7, a0) >= 0)\n
            break;\n
        v4 = 0x8000;\n
        v3 = &__buf;\n
        v2 = &__rpc;\n
        v44 = cgc__rpc_recv(v7, a0);\n
        if (v44 < 0)\n
            goto LABEL_403b40;\n
    }\n
    v41 = *(&v29);\n
    if (v41)\n
    {\n
        if (v41 == 2)\n
            goto LABEL_403b40;\n
        continue;\n
    }\n
    else\n
    {\n
        if (!(*(&v30) == 2))\n
            continue;\n
        if (!(v31 == 232323))\n
            continue;\n
        if (!(*(&v32) == 1))\n
            continue;\n
        if (!(*(&v33) - 1 <= 4))\n
            continue;\n
    }\n
}\n
", "4208796:sub_40389c": null, "4209485:sub_403b4d": null, "4209488:cgc_marshal_result_status": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_result_status(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4209529:sub_403b79": null, "4209536:cgc_unmarshal_result_status": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_result_status(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4209577:sub_403ba9": null, "4209584:cgc_marshal_key": "int cgc_marshal_key(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // esi\n
    char *v4;  // edi, Other Possible Types: unsigned int\n
    char *v5;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    *(v3)->field_0 = __buildin_bswap32(*(v0));\n
    *(v1) = *(v1) - 4;\n
    v4 = *(v3) + 1;\n
    *(v3) = &v4;\n
    if (*(-1) > 200)\n
        return -1;\n
    if (!*(-1))\n
    {\n
LABEL_403c20:\n
        return 0;\n
    }\n
    v5 = 0;\n
    while (*(v1))\n
    {\n
        *(v4) = *((*(3) + v5));\n
        *(v1) = *(v1) - 1;\n
        v4 = &*(v3)->field_0 + 1;\n
        *(v3) = v4;\n
        v5 += 1;\n
        if (v5 >= *(-1))\n
            goto LABEL_403c20;\n
    }\n
}\n
", "4209703:sub_403c27": null, "4209712:cgc_unmarshal_key": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_unmarshal_key(struct_0 *v0, struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edi\n
    struct struct_1 **v3;  // ebp\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // ecx\n
    char *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4->field_0 = __buildin_bswap32(*(&*(a0)));\n
    *(v1) = *(v1) - 4;\n
    *(a0) = *(a0) + 4;\n
    v5 = v4->field_0;\n
    if (v5 > 200)\n
        return -1;\n
    v4->field_4 = cgc_calloc(v5, 1);\n
    if (!v4->field_0)\n
        return 0;\n
    v6 = 0;\n
    do\n
    {\n
        if (!*(v1))\n
            return -1;\n
        v4->field_4[v6].field_0 = *(v3)->field_0;\n
        *(v1) = *(v1) - 1;\n
        *(v3) = *(v3) + 1;\n
        v6 += 1;\n
    } while (v6 < v4->field_0);\n
}\n
", "4209856:cgc_marshal_record": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    struct struct_1 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_marshal_record(struct_0 *v0, struct struct_2 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_2 **v3;  // edx\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // edi\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // edi, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    char *v10;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4->field_0);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3) + 1;\n
    *(v3) = &v7;\n
    v5 = v4->field_0;\n
    if (v5 > 200)\n
        return -1;\n
    if (v5)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v7) = v4->field_4[v6].field_0;\n
            *(v1) = *(v1) - 1;\n
            v7 = &*(v3)->field_0 + 1;\n
            *(v3) = v7;\n
            v6 += 1;\n
        } while (v6 < v4->field_0);\n
    }\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v7) = __buildin_bswap32(v4->field_8);\n
    *(v1) = *(v1) - 4;\n
    v8 = *(v3) + 1;\n
    *(v3) = &v8;\n
    v9 = v4->field_8;\n
    if (v9 > 0x400)\n
    {\n
        return -1;\n
    }\n
    else if (!v9)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        while (true)\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v8) = v4->field_c[v10].field_0;\n
            *(v1) = *(v1) - 1;\n
            v8 = &*(v3)->field_0 + 1;\n
            *(v3) = v8;\n
            v10 += 1;\n
            if (v10 >= v4->field_8)\n
                return 0;\n
        }\n
    }\n
}\n
", "4210045:sub_403d7d": null, "4210048:cgc_unmarshal_record": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    struct struct_1 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_unmarshal_record(struct_0 *v0, struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    struct struct_1 **v2;  // edi\n
    struct_0 *v3;  // ebp\n
    unsigned int v4;  // eax\n
    char *v5;  // eax, Other Possible Types: unsigned int\n
    char *v6;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) >= 4)\n
    {\n
        v2 = a0;\n
        v3 = v0;\n
        v0->field_0 = __buildin_bswap32(*(&*(v2)));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v4 = v0->field_0;\n
        if (!(v4 <= 200))\n
            goto LABEL_403e27;\n
        v3->field_4 = cgc_calloc(v4, 1);\n
        if (!v3->field_0)\n
        {\n
            v6 = *(v2);\n
            if (*(v1) < 4)\n
                goto LABEL_403e27;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            do\n
            {\n
                if (!*(v1))\n
                    goto LABEL_403e27;\n
                v3->field_4[v5].field_0 = *(v2)->field_0;\n
                *(v1) = *(v1) - 1;\n
                v6 = *(v2) + 1;\n
                *(v2) = v6;\n
                v5 += 1;\n
            } while (v5 < v3->field_0);\n
            goto LABEL_403e27;\n
        }\n
        v3->field_8 = __buildin_bswap32(*(v6));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v7 = v3->field_8;\n
        if (v7 <= 0x400)\n
        {\n
            v3->field_c = cgc_calloc(v7, 1);\n
            if (!v3->field_8)\n
                return 0;\n
            v8 = 0;\n
            while (*(v1))\n
            {\n
                v3->field_c[v8].field_0 = *(v2)->field_0;\n
                *(v1) = *(v1) - 1;\n
                *(v2) = *(v2) + 1;\n
                v8 += 1;\n
                if (v8 >= v3->field_8)\n
                    return 0;\n
            }\n
        }\n
    }\n
LABEL_403e27:\n
    return -1;\n
}\n
", "4210294:sub_403e76": null, "4210304:cgc_marshal_result": "int cgc_marshal_result(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ebp\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edi\n
    unsigned int v4[3];  // esi\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6;  // ecx\n
    void* v7;  // edi, Other Possible Types: unsigned int\n
    void* v8;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(a1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v5[1] = __buildin_bswap32(v4[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v6 = v4[1];\n
    if (v6 > 1)\n
        return -1;\n
    if (!v6)\n
        return 0;\n
    v7 = 0;\n
    v8 = 0;\n
    do\n
    {\n
        v2 = cgc_marshal_record(v4[2] + v7, a0, a1);\n
        if (v2 < 0)\n
            return v2;\n
        v8 += 1;\n
        v7 += 16;\n
    } while (v8 < v4[1]);\n
}\n
", "4210466:sub_403f22": null, "4210480:cgc_unmarshal_result": "int cgc_unmarshal_result(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edi\n
    unsigned int v4[3];  // ebp\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6;  // ecx\n
    void* v7;  // eax\n
    unsigned int v8[3];  // ecx\n
    void* v9;  // edi, Other Possible Types: unsigned int\n
    unsigned int v10[3];  // edx, Other Possible Types: unsigned int\n
    unsigned int v11;  // ecx\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v0[0] = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v6 = v4[1];\n
    if (v6 > 1)\n
        return -1;\n
    v7 = cgc_calloc(v6, 16);\n
    v8 = v0;\n
    v8[2] = v7;\n
    if (!v8[1])\n
        return 0;\n
    v2 = cgc_unmarshal_record(v7, a0, v1);\n
    if (v2 < 0)\n
        return v2;\n
    v11 = 16;\n
    v9 = 0;\n
    v10 = v0;\n
    while (true)\n
    {\n
        v9 += 1;\n
        if (v9 >= *((v10 + 4)))\n
            break;\n
        v2 = cgc_unmarshal_record(v11 + *((v10 + 8)), a0, v1);\n
        v10 = v0;\n
        v11 += 16;\n
        if (v2 < 0)\n
            return v2;\n
    }\n
}\n
", "4210693:sub_404005": null, "4210704:cgc__rpc_recv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc__rpc_recv(struct_0 *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    struct_0 *v4;  // edi\n
    unsigned int v6;  // eax\n
\n
    v4 = v3;\n
    v0 = &v1;\n
    if (cgc_receive(v4->field_4, &v2, 4))\n
    {\n
        return -1;\n
    }\n
    else if (*(&v1) != 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v6 = *(&v2);\n
        if (v6 < 0)\n
        {\n
            return -1;\n
        }\n
        else if (v6 > a1)\n
        {\n
            return -1;\n
        }\n
        else\n
        {\n
            v0 = &v1;\n
            if (!cgc_receive(v4->field_4, a0, v6))\n
                return (*(&v1) == -1 ? -1 : *(&v2));\n
            return -1;\n
        }\n
    }\n
}\n
", "4210827:sub_40408b": null, "4210832:cgc__rpc_send": "int cgc__rpc_send(unsigned int *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int *v4;  // esi\n
\n
    v4 = v3;\n
    v1 = a1;\n
    v0 = &v2;\n
    if (cgc_transmit(*(v4), &v1, 4))\n
    {\n
        return -1;\n
    }\n
    else if (*(&v2) != 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v0 = &v2;\n
        if (!cgc_transmit(*(v4), a0, v1))\n
            return -(*(&v2) != v1);\n
        return -1;\n
    }\n
}\n
", "4210952:sub_404108": null, "4210960:cgc_DB_CURRENT_db_lookup": "extern unsigned int root;\n
\n
int cgc_DB_CURRENT_db_lookup(unsigned int v1[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2[3];  // esi\n
    unsigned int v3[7];  // eax\n
    unsigned int v4[7];  // edi\n
    unsigned int v5[4];  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v2 = v1;\n
    v0 = a0;\n
    v3 = cgc_tree_lookup(&root, a1);\n
    if (!v3)\n
    {\n
        v6 = 0;\n
        v7 = 2;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        v5 = cgc_malloc(16);\n
        v2[2] = v5;\n
        v5[0] = v4[4];\n
        v5[1] = v4[3];\n
        v5[2] = v4[6];\n
        v5[3] = v4[5];\n
        v6 = 1;\n
        v7 = 0;\n
    }\n
    v2[0] = v7;\n
    v2[1] = v6;\n
    return v1;\n
}\n
", "4211079:sub_404187": null, "4211088:cgc_DB_CURRENT_db_insert": "extern unsigned int root;\n
\n
int cgc_DB_CURRENT_db_insert(unsigned int v0[3], unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v1[3];  // esi\n
    unsigned int v2[7];  // eax\n
    unsigned int v3[7];  // eax\n
    unsigned int v4[7];  // edi\n
    unsigned int v5[4];  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = v0;\n
    v2 = cgc_malloc(28);\n
    cgc_memset(v2, 0, 28);\n
    v2[3] = a1;\n
    v2[4] = a0;\n
    v2[5] = a3;\n
    v2[6] = a2;\n
    v3 = cgc_tree_insert(&root);\n
    if (!v3)\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        v5 = cgc_malloc(16);\n
        v1[2] = v5;\n
        v5[0] = v4[4];\n
        v5[1] = v4[3];\n
        v5[2] = v4[6];\n
        v5[3] = v4[5];\n
        v6 = 1;\n
    }\n
    v1[0] = v6;\n
    v1[1] = v6;\n
    return v0;\n
}\n
", "4211263:sub_40423f": null, "4211264:cgc_DB_CURRENT_db_delete": "extern unsigned int root;\n
\n
int cgc_DB_CURRENT_db_delete(unsigned int v1[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2[3];  // esi\n
    unsigned int v3[7];  // eax\n
    unsigned int v4[7];  // edi\n
    unsigned int v5[4];  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v2 = v1;\n
    v0 = a0;\n
    v3 = cgc_tree_delete(&root, a1);\n
    if (!v3)\n
    {\n
        v6 = 0;\n
        v7 = 2;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        v5 = cgc_malloc(16);\n
        v2[2] = v5;\n
        v5[0] = v4[4];\n
        v5[1] = v4[3];\n
        v5[2] = v4[6];\n
        v5[3] = v4[5];\n
        v6 = 1;\n
        v7 = 0;\n
    }\n
    v2[0] = v7;\n
    v2[1] = v6;\n
    return v1;\n
}\n
", "4211383:sub_4042b7": null, "4211392:cgc_DB_CURRENT_db_next": "extern unsigned int root;\n
\n
int cgc_DB_CURRENT_db_next(unsigned int v1[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14], Other Possible Types: char\n
    unsigned int v2[3];  // esi\n
    unsigned int v3[7];  // edi, Other Possible Types: unsigned int\n
    unsigned int v4[4];  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = v1;\n
    if (*(&v0))\n
    {\n
        v0 = a0;\n
        v3 = cgc_tree_next(&root, a1);\n
        if (!v3)\n
            goto LABEL_404344;\n
        goto LABEL_404301;\n
    }\n
    else\n
    {\n
        v3 = cgc_tree_smallest();\n
        if (!v3)\n
        {\n
LABEL_404344:\n
            v5 = 0;\n
            v6 = 2;\n
        }\n
        else\n
        {\n
LABEL_404301:\n
            v4 = cgc_malloc(16);\n
            v2[2] = v4;\n
            v4[0] = *((v3 + 16));\n
            v4[1] = *((v3 + 12));\n
            v4[2] = *((v3 + 24));\n
            v4[3] = *((v3 + 20));\n
            v5 = 1;\n
            v6 = 0;\n
        }\n
    }\n
    v2[0] = v6;\n
    v2[1] = v5;\n
    return v1;\n
}\n
", "4211547:sub_40435b": null, "4211552:cgc_DB_CURRENT_db_prev": "extern unsigned int root;\n
\n
int cgc_DB_CURRENT_db_prev(unsigned int v1[3], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14], Other Possible Types: char\n
    unsigned int v2[3];  // esi\n
    unsigned int v3[7];  // edi, Other Possible Types: unsigned int\n
    unsigned int v4[4];  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v2 = v1;\n
    if (*(&v0))\n
    {\n
        v0 = a0;\n
        v3 = cgc_tree_prev(&root, a1);\n
        if (!v3)\n
            goto LABEL_4043e4;\n
        goto LABEL_4043a1;\n
    }\n
    else\n
    {\n
        v3 = cgc_tree_largest();\n
        if (!v3)\n
        {\n
LABEL_4043e4:\n
            v5 = 0;\n
            v6 = 2;\n
        }\n
        else\n
        {\n
LABEL_4043a1:\n
            v4 = cgc_malloc(16);\n
            v2[2] = v4;\n
            v4[0] = *((v3 + 16));\n
            v4[1] = *((v3 + 12));\n
            v4[2] = *((v3 + 24));\n
            v4[3] = *((v3 + 20));\n
            v5 = 1;\n
            v6 = 0;\n
        }\n
    }\n
    v2[0] = v6;\n
    v2[1] = v5;\n
    return v1;\n
}\n
", "4211707:sub_4043fb": null, "4211712:main": "int main()\n
{\n
    cgc_database_run(0x6, 0x3);\n
    return 0;\n
}\n
", "4211750:sub_404426": null, "4211760:cgc_marshal_msg_type": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_msg_type(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4211801:sub_404459": null, "4211808:cgc_unmarshal_msg_type": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_msg_type(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4211849:sub_404489": null, "4211856:cgc_marshal_reply_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_reply_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4211897:sub_4044b9": null, "4211904:cgc_unmarshal_reply_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_reply_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4211945:sub_4044e9": null, "4211952:cgc_marshal_accept_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_accept_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4211993:sub_404519": null, "4212000:cgc_unmarshal_accept_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_accept_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212041:sub_404549": null, "4212048:cgc_marshal_reject_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_reject_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212089:sub_404579": null, "4212096:cgc_unmarshal_reject_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_reject_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212137:sub_4045a9": null, "4212144:cgc_marshal_auth_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_auth_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212185:sub_4045d9": null, "4212192:cgc_unmarshal_auth_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_auth_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212233:sub_404609": null, "4212240:cgc_marshal_auth_flavor": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_auth_flavor(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212281:sub_404639": null, "4212288:cgc_unmarshal_auth_flavor": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_auth_flavor(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4212329:sub_404669": null, "4212336:cgc_marshal_opaque_auth": "int cgc_marshal_opaque_auth(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // esi\n
    unsigned int v4[2];  // edi\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char *v6;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    *(v3)->field_0 = __buildin_bswap32(v0[0]);\n
    *(v1) = *(v1) - 4;\n
    v4 = *(v3);\n
    *(v3) = &v4[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v0[1]);\n
    *(v1) = *(v1) - 4;\n
    v5 = &*(v3)->field_4;\n
    *(v3) = &v5;\n
    if (*(3) <= 400)\n
    {\n
        if (!*(3))\n
        {\n
LABEL_4046f1:\n
            return 0;\n
        }\n
        v6 = 0;\n
        while (*(v1))\n
        {\n
            *(v5) = *((*(7) + v6));\n
            *(v1) = *(v1) - 1;\n
            v5 = &*(v3)->field_0 + 1;\n
            *(v3) = v5;\n
            v6 += 1;\n
            if (v6 >= *(3))\n
                goto LABEL_4046f1;\n
        }\n
    }\n
}\n
", "4212469:sub_4046f5": null, "4212480:cgc_unmarshal_opaque_auth": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_unmarshal_opaque_auth(struct_1 *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edi\n
    struct struct_0 **v3;  // ebp\n
    struct_1 *v4;  // esi\n
    unsigned int v5[2];  // edx\n
    unsigned int v6;  // ecx\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4->field_0 = __buildin_bswap32(*(&*(a0)->field_0));\n
    *(v1) = *(v1) - 4;\n
    v5 = *(a0);\n
    *(a0) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4->field_4 = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v6 = v4->field_4;\n
    if (v6 > 400)\n
        return -1;\n
    v4->field_8 = cgc_calloc(v6, 1);\n
    if (!v4->field_4)\n
        return 0;\n
    v7 = 0;\n
    do\n
    {\n
        if (!*(v1))\n
            return -1;\n
        v4->field_8[v7].field_0 = *(v3)->field_0;\n
        *(v1) = *(v1) - 1;\n
        *(v3) = &*(v3)->padding_1;\n
        v7 += 1;\n
    } while (v7 < v4->field_4);\n
}\n
", "4212657:sub_4047b1": null, "4212672:cgc_marshal_call_body": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    struct struct_1 *field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    struct struct_1 *field_24;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_marshal_call_body(struct_0 *v0, struct struct_2 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_2 **v3;  // edx\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // edi\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // edi, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    char *v10;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4->field_0);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_4);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_8);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_c);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_10);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_14);\n
    *(v1) = *(v1) - 4;\n
    v7 = &*(v3)->field_4;\n
    *(v3) = &v7;\n
    v5 = v4->field_14;\n
    if (v5 > 400)\n
        return -1;\n
    if (v5)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v7) = v4->field_18[v6].field_0;\n
            *(v1) = *(v1) - 1;\n
            v7 = &*(v3)->field_0 + 1;\n
            *(v3) = v7;\n
            v6 += 1;\n
        } while (v6 < v4->field_14);\n
    }\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v7) = __buildin_bswap32(v4->field_1c);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_20);\n
    *(v1) = *(v1) - 4;\n
    v8 = &*(v3)->field_4;\n
    *(v3) = &v8;\n
    v9 = v4->field_20;\n
    if (v9 > 400)\n
    {\n
        return -1;\n
    }\n
    else if (!v9)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        while (true)\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v8) = v4->field_24[v10].field_0;\n
            *(v1) = *(v1) - 1;\n
            v8 = &*(v3)->field_0 + 1;\n
            *(v3) = v8;\n
            v10 += 1;\n
            if (v10 >= v4->field_20)\n
                return 0;\n
        }\n
    }\n
}\n
", "4213014:sub_404916": null, "4213024:cgc_unmarshal_call_body": "int cgc_unmarshal_call_body(unsigned int v0[4], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // ebp\n
    unsigned int v4[4];  // edi\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6[2];  // ecx\n
    unsigned int v7[2];  // ecx\n
    unsigned int v8;  // eax\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4[0] = __buildin_bswap32(*(a0)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(a0);\n
    *(a0) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    v6 = *(v3);\n
    *(v3) = &v6[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[2] = __buildin_bswap32(v6[1]);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3);\n
    *(v3) = &v7[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[3] = __buildin_bswap32(v7[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v2 = cgc_unmarshal_opaque_auth(v4 + 1, v3, v1);\n
    if (v2 >= 0)\n
    {\n
        v8 = cgc_unmarshal_opaque_auth(&v4[1 + 3], v3, v1);\n
        v2 = v8 >> 31 & v8;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4213213:sub_4049dd": null, "4213216:cgc_marshal_accepted_reply": "int cgc_marshal_accepted_reply(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // esi\n
    unsigned int v4[2];  // edi\n
    char *v5;  // ebx, Other Possible Types: unsigned int\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    unsigned int v7[2];  // edi\n
    unsigned int v8[2];  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    *(v3)->field_0 = __buildin_bswap32(v0[0]);\n
    *(v1) = *(v1) - 4;\n
    v4 = *(v3);\n
    *(v3) = &v4[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v0[1]);\n
    *(v1) = *(v1) - 4;\n
    v6 = &*(v3)->field_4;\n
    *(v3) = &v6;\n
    if (*(3) <= 400)\n
    {\n
        if (!*(3))\n
        {\n
LABEL_404a61:\n
            if (*(v1) < 4)\n
                return -1;\n
            *(v6) = __buildin_bswap32(*(11));\n
            *(v1) = *(v1) - 4;\n
            v7 = *(v3);\n
            *(v3) = &v7[1];\n
            if (*(11) != 2)\n
                return 0;\n
            if (*(v1) < 4)\n
                return -1;\n
            v7[1] = __buildin_bswap32(*(15));\n
            *(v1) = *(v1) - 4;\n
            v8 = *(v3);\n
            *(v3) = &v8[1];\n
            if (*(v1) < 4)\n
                return -1;\n
            v8[1] = __buildin_bswap32(*(19));\n
            *(v1) = *(v1) - 4;\n
            *(v3) = &*(v3)->field_4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            while (*(v1))\n
            {\n
                *(v6) = *((*(7) + v5));\n
                *(v1) = *(v1) - 1;\n
                v6 = &*(v3)->field_0 + 1;\n
                *(v3) = v6;\n
                v5 += 1;\n
                if (v5 >= *(3))\n
                    goto LABEL_404a61;\n
            }\n
        }\n
    }\n
}\n
", "4213431:sub_404ab7": null, "4213440:cgc_unmarshal_accepted_reply": "int cgc_unmarshal_accepted_reply(unsigned int v2[6], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int *v5;  // edi\n
    struct struct_0 **v6;  // esi\n
    unsigned int v7[6];  // ebp\n
    unsigned int v8[2];  // ecx\n
    unsigned int v9[2];  // ecx\n
    unsigned int v10;  // eax\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = a1;\n
    v6 = a0;\n
    v7 = v2;\n
    v10 = cgc_unmarshal_opaque_auth(v2, v6, v5);\n
    if (v10 < 0)\n
    {\n
        return v10;\n
    }\n
    else if (*(v5) < 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v7[3] = __buildin_bswap32(*(v6)->field_0);\n
        *(v5) = *(v5) - 4;\n
        v8 = *(v6);\n
        *(v6) = &v8[1];\n
        if (v7[3] != 2)\n
            return 0;\n
        if (*(v5) < 4)\n
            return -1;\n
        v7[4] = __buildin_bswap32(v8[1]);\n
        *(v5) = *(v5) - 4;\n
        v9 = *(v6);\n
        *(v6) = &v9[1];\n
        if (*(v5) < 4)\n
            return -1;\n
        v7[5] = __buildin_bswap32(v9[1]);\n
        *(v5) = *(v5) - 4;\n
        *(v6) = &*(v6)->field_4;\n
    }\n
}\n
", "4213576:sub_404b48": null, "4213584:cgc_marshal_rejected_reply": "int cgc_marshal_rejected_reply(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[2];  // esi\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3);\n
    *(v3) = &v7[1];\n
    v5 = v4[0];\n
    if (!v5)\n
    {\n
        if (*(v1) < 4)\n
            return -1;\n
        v7[1] = __buildin_bswap32(v4[1]);\n
        *(v1) = *(v1) - 4;\n
        v7 = *(v3);\n
        *(v3) = v7 + 4;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = v4 + 1;\n
    }\n
    else\n
    {\n
        if (v5 != 1)\n
            return -1;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = &v4[1];\n
    }\n
    *((v7 + 4)) = __buildin_bswap32(*(v6));\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    return 0;\n
}\n
", "4213698:sub_404bc2": null, "4213712:cgc_unmarshal_rejected_reply": "int cgc_unmarshal_rejected_reply(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[2];  // esi\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4[0] = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3);\n
    *(v3) = &v7[1];\n
    v5 = v4[0];\n
    if (!v5)\n
    {\n
        if (*(v1) < 4)\n
            return -1;\n
        v4[1] = __buildin_bswap32(v7[1]);\n
        *(v1) = *(v1) - 4;\n
        v7 = *(v3);\n
        *(v3) = v7 + 4;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = v4 + 1;\n
    }\n
    else\n
    {\n
        if (v5 != 1)\n
            return -1;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = &v4[1];\n
    }\n
    *(v6) = __buildin_bswap32(*((v7 + 4)));\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    return 0;\n
}\n
", "4213826:sub_404c42": null, "4213840:cgc_marshal_reply_body": "int cgc_marshal_reply_body(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[3];  // esi\n
    unsigned int v5[2];  // edi\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (!v4[0])\n
    {\n
        v2 = cgc_marshal_accepted_reply(&v4[1], v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else\n
    {\n
        if (v4[0] != 1)\n
            return -1;\n
        if (*(v1) < 4)\n
            return -1;\n
        v5[1] = __buildin_bswap32(v4[1]);\n
        *(v1) = *(v1) - 4;\n
        v8 = *(v3);\n
        *(v3) = &v8[1];\n
        v6 = v4[1];\n
        if (!v6)\n
        {\n
            if (*(v1) < 4)\n
                return -1;\n
            v8[1] = __buildin_bswap32(v4[2]);\n
            *(v1) = *(v1) - 4;\n
            v8 = *(v3);\n
            *(v3) = v8 + 4;\n
            if (*(v1) < 4)\n
                return -1;\n
            v7 = v4 + 1;\n
        }\n
        else\n
        {\n
            if (v6 != 1)\n
                return -1;\n
            if (*(v1) < 4)\n
                return -1;\n
            v7 = &v4[2];\n
        }\n
        *((v8 + 4)) = __buildin_bswap32(*(v7));\n
        *(v1) = *(v1) - 4;\n
        *(v3) = &*(v3)->field_4;\n
    }\n
    return 0;\n
}\n
", "4214033:sub_404d11": null, "4214048:cgc_unmarshal_reply_body": "int cgc_unmarshal_reply_body(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edx\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // esi\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v4) = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = *(v3) + 1;\n
    v5 = *(v4);\n
    if (!v5)\n
    {\n
        v2 = cgc_unmarshal_accepted_reply(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else if (v5 != 1)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v2 = cgc_unmarshal_rejected_reply(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    return 0;\n
}\n
", "4214160:cgc_marshal_rpc_msg": "int cgc_marshal_rpc_msg(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edx\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // esi\n
    unsigned int v4[2];  // ecx\n
    unsigned int v5[2];  // edi\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v6 = __buildin_bswap32(v4[1]);\n
    v5[1] = __buildin_bswap32(v4[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v7 = v4[1];\n
    if (!v7)\n
    {\n
        v2 = cgc_marshal_call_body(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else if (v7 != 1)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v2 = cgc_marshal_reply_body(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    return 0;\n
}\n
", "4214305:sub_404e21": null, "4214320:cgc_unmarshal_rpc_msg": "int cgc_unmarshal_rpc_msg(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[3];  // ecx\n
    unsigned int v5[2];  // edi\n
    unsigned int v6[2];  // edi\n
    unsigned int v7;  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4[0] = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    v6 = *(v3);\n
    *(v3) = &v6[1];\n
    if (!v4[1])\n
    {\n
        v2 = cgc_unmarshal_call_body(&v4[2], v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else if (v4[1] == 1)\n
    {\n
        if (*(v1) < 4)\n
            return -1;\n
        v4[2] = __buildin_bswap32(v6[1]);\n
        *(v1) = *(v1) - 4;\n
        *(v3) = &*(v3)->field_4;\n
        v7 = v4[2];\n
        if (!v7)\n
        {\n
            v2 = cgc_unmarshal_accepted_reply(v4 + 1, v3, v1);\n
            if (v2 < 0)\n
                return v2;\n
        }\n
        else if (v7 != 1)\n
        {\n
            return -1;\n
        }\n
        else\n
        {\n
            v2 = cgc_unmarshal_rejected_reply(v4 + 1, v3, v1);\n
            if (v2 < 0)\n
                return v2;\n
        }\n
    }\n
    return 0;\n
}\n
", "4214526:sub_404efe": null, "4214528:cgc_tree_lookup": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_tree_lookup(struct struct_0 **v0, char *a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    struct_0 *v1;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v3;  // edx\n
    char *v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ebx\n
\n
    v1 = *(v0);\n
    if (!v1)\n
        return 0;\n
    v3 = a1;\n
    if (v3)\n
    {\n
        v4 = a0;\n
        while (true)\n
        {\n
            v6 = *((v1 + 16));\n
            v7 = 0;\n
            while (true)\n
            {\n
                if (v6 == v7)\n
                {\n
LABEL_404f8b:\n
                    v9 = v3 - v6;\n
                    break;\n
                }\n
                else\n
                {\n
                    v8 = v4[v7];\n
                    tmp_5 = v8;\n
                    v9 = v8 - v1->field_c[v7].field_0;\n
                    if (tmp_5 != v1->field_c[v7].field_0)\n
                        break;\n
                    v7 += 1;\n
                    if (v3 == v7)\n
                        goto LABEL_404f8b;\n
                }\n
            }\n
            if (v9 >= 0)\n
            {\n
                v10 = 0;\n
                while (true)\n
                {\n
                    if (v6 == v10)\n
                    {\n
LABEL_404f50:\n
                        v12 = v3 - v6;\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v11 = v4[v10];\n
                        tmp_5 = v11;\n
                        v12 = v11 - v1->field_c[v10].field_0;\n
                        if (tmp_5 != v1->field_c[v10].field_0)\n
                            break;\n
                        v10 += 1;\n
                        if (v3 == v10)\n
                            goto LABEL_404f50;\n
                    }\n
                }\n
                if (v12 <= 0)\n
                    break;\n
                v1 = &v1->padding_4;\n
            }\n
            v1 = *(v1);\n
            if (!v1)\n
                return 0;\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v5 = *((v1 + 16));\n
            if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, edx<4>, 0xffffffff<32>, 0x0<32>))\n
            {\n
                if (!v5)\n
                    break;\n
                v1 += 4;\n
            }\n
            v1 = *(v1);\n
            if (!v1)\n
                return 0;\n
        }\n
    }\n
    return v1;\n
}\n
", "4214562:sub_404f22": null, "4214605:sub_404f4d": null, "4214728:sub_404fc8": null, "4214736:cgc_tree_insert": "typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_4 *field_c;\n
    unsigned int field_10;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    struct struct_4 *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tree_insert(struct struct_2 **v1, struct_5 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_5;  // tmp #5\n
    struct_5 *v2;  // ecx\n
    struct struct_2 **v3;  // ebx, Other Possible Types: unsigned int\n
    struct_2 *v4;  // eax, Other Possible Types: unsigned int\n
    char *v5;  // ebx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ebp\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // edx\n
    struct_5 *v16;  // edx\n
    struct_2 *v17;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v18[3];  // edx\n
    struct_1 *v19;  // edx\n
    struct_0 *v20;  // esi\n
    struct_2 *v21;  // ecx\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v4 = *(v3);\n
    if (!v4)\n
    {\n
        *(v3) = &v2->field_0;\n
        v2->field_0 = 0;\n
        v2->field_4 = 0;\n
        v2->field_8 = 1;\n
        v4 = 0;\n
        v17 = *(v3);\n
        if (!v17)\n
            return 0;\n
        goto LABEL_4050c8;\n
    }\n
    else\n
    {\n
        v0 = &_GLOBAL_OFFSET_TABLE_;\n
        v5 = v2->field_c;\n
        v6 = v2->field_10;\n
        v7 = v4->field_10;\n
        if (v6)\n
        {\n
            v11 = 0;\n
            while (v7 != v11)\n
            {\n
                v8 = v5[v11];\n
                v9 = v4->field_c[v11].field_0;\n
                tmp_5 = v8;\n
                v10 = v8 - v9;\n
                if (!(tmp_5 == v9))\n
                    goto LABEL_40502e;\n
                v11 += 1;\n
                if (v6 == v11)\n
                    break;\n
            }\n
            goto LABEL_40502e;\n
        }\n
        v10 = v6 - v7;\n
LABEL_40502e:\n
        if (v10 >= 0)\n
        {\n
            if (v6)\n
            {\n
                v12 = 0;\n
                while (v7 != v12)\n
                {\n
                    v13 = v5[v12];\n
                    v14 = v4->field_c[v12].field_0;\n
                    tmp_5 = v13;\n
                    v15 = v13 - v14;\n
                    if (!(tmp_5 == v14))\n
                        goto LABEL_40505e;\n
                    v12 += 1;\n
                    if (v6 == v12)\n
                        break;\n
                }\n
                goto LABEL_40505e;\n
            }\n
            v15 = v6 - v7;\n
LABEL_40505e:\n
            if (v15 > 0)\n
            {\n
                v4 = &v4->field_4;\n
            }\n
            else\n
            {\n
                v3 = v1;\n
                v16 = a0;\n
                *(v3) = v16;\n
                v16->field_0 = v4->field_0;\n
                v16->field_4 = v4->field_4;\n
                v16->field_8 = v4->field_8;\n
                v17 = *(v3);\n
                if (!v17)\n
                    return v4;\n
LABEL_4050c8:\n
                v18 = *(v17);\n
                if (v18 && v18[2] == *((v17 + 8)))\n
                {\n
                    *(v3) = v18;\n
                    *(v17) = v18[1];\n
                    *((*(v3) + 4)) = v17;\n
                    v17 = *(v3);\n
                    if (!v17)\n
                        return v4;\n
                }\n
                v19 = *((v17 + 4));\n
                if (!v19)\n
                    return v4;\n
                v20 = v19->field_4;\n
                if (!v20)\n
                {\n
                    return v4;\n
                }\n
                else if (*((v17 + 8)) != v20->field_8)\n
                {\n
                    return v4;\n
                }\n
                else\n
                {\n
                    *(v3) = v19;\n
                    *((v17 + 4)) = v19->field_0;\n
                    *(*(v3)) = v17;\n
                    v21 = *(v3);\n
                    v21->field_8 = v21->field_8 + 1;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v4 = cgc_tree_insert(v4, a0);\n
        v3 = v1;\n
        v17 = *(v3);\n
        if (!v17)\n
            return v4;\n
        goto LABEL_4050c8;\n
    }\n
}\n
", "4215063:sub_405117": null, "4215072:cgc_tree_delete": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    struct struct_4 *field_c;\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_2 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_7 {\n
    struct struct_1 *field_0;\n
    struct struct_6 *field_4;\n
    unsigned int field_8;\n
} struct_7;\n
\n
typedef struct struct_6 {\n
    struct struct_1 *field_0;\n
    struct struct_5 *field_4;\n
    unsigned int field_8;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
int cgc_tree_delete(struct struct_3 **v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    struct_3 *v1;  // ecx\n
    unsigned int v2;  // eax\n
    struct_3 *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // esi\n
    char *v7;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // ecx\n
    struct_2 *v13;  // ecx, Other Possible Types: unsigned int\n
    struct_2 *v14;  // ebp, Other Possible Types: unsigned int\n
    struct_2 *v15;  // ecx, Other Possible Types: unsigned int\n
    struct struct_3 **v16;  // ebp, Other Possible Types: unsigned int\n
    struct_3 *v17;  // ebx, Other Possible Types: unsigned int\n
    struct struct_3 **v18;  // ecx\n
    unsigned int v19[3];  // ecx\n
    struct_7 *v20;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v21[3];  // edx\n
    struct_6 *v22;  // edx\n
    unsigned int v23[3];  // edi\n
    struct_7 *v24;  // ecx\n
    struct_6 *v25;  // edx\n
    struct_3 *v26;  // ecx\n
    struct_7 *v27;  // ecx\n
    struct_6 *v28;  // edx\n
    struct_5 *v29;  // edi\n
    struct_7 *v30;  // ecx\n
    struct_3 *v31;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = *(v0);\n
    if (!v1)\n
        return 0;\n
    v2 = a1;\n
    v3 = v1;\n
    v4 = v1->field_10;\n
    if (v2)\n
    {\n
        v7 = 0;\n
        while (v4 != v7)\n
        {\n
            v5 = *((a0 + v7));\n
            v6 = v3->field_c[v7].field_0;\n
            tmp_6 = v5;\n
            v8 = v5 - v6;\n
            if (!(tmp_6 == v6))\n
                goto LABEL_405172;\n
            v7 += 1;\n
            if (v2 == v7)\n
                break;\n
        }\n
        goto LABEL_405172;\n
    }\n
    v8 = v2 - v4;\n
LABEL_405172:\n
    if (v8 >= 0)\n
    {\n
        if (v2)\n
        {\n
            v9 = 0;\n
            while (v4 != v9)\n
            {\n
                v10 = *((a0 + v9));\n
                v11 = v3->field_c[v9].field_0;\n
                tmp_6 = v10;\n
                v12 = v10 - v11;\n
                if (!(tmp_6 == v11))\n
                    goto LABEL_4051a2;\n
                v9 += 1;\n
                if (v2 == v9)\n
                    break;\n
            }\n
            goto LABEL_4051a2;\n
        }\n
        v12 = v2 - v4;\n
LABEL_4051a2:\n
        if (v12 > 0)\n
        {\n
            v3 = &v3->field_4;\n
        }\n
        else\n
        {\n
            v13 = v3->field_0;\n
            if (v13)\n
            {\n
                do\n
                {\n
                    v14 = v13;\n
                    v13 = *((v13 + 4));\n
                } while (v13);\n
            }\n
            else\n
            {\n
                v15 = v3->field_4;\n
                if (!v15)\n
                {\n
                    *(v0) = 0;\n
                    return v3;\n
                }\n
                do\n
                {\n
                    v14 = v15;\n
                    v15 = *(v15);\n
                } while (v15);\n
            }\n
            cgc_tree_delete(v0, a0, a1);\n
            v18 = v0;\n
            *(v18) = v14;\n
            *(v14) = v3->field_0;\n
            *((v14 + 4)) = v3->field_4;\n
            *((v14 + 8)) = v3->field_8;\n
            v16 = v18;\n
            v31 = v3;\n
            v17 = *(v18);\n
            if (!v17)\n
            {\n
LABEL_405280:\n
                v17 = 0;\n
LABEL_405282:\n
                v20 = *((v17 + 4));\n
                if (v20)\n
                {\n
                    v21 = v20->field_0;\n
                    if (v21 && v21[2] == v20->field_8)\n
                    {\n
                        *((v17 + 4)) = v21;\n
                        v20->field_0 = v21[1];\n
                        *((*((v17 + 4)) + 4)) = v20;\n
                        v17 = *(v16);\n
                        v20 = *((v17 + 4));\n
                        if (!v20)\n
                            goto LABEL_40530e;\n
                    }\n
                    v22 = *((v20 + 4));\n
                    if (v22)\n
                    {\n
                        v23 = v22->field_0;\n
                        if (v23 && v23[2] == v22->field_8)\n
                        {\n
                            *((v20 + 4)) = v23;\n
                            v22->field_0 = v23[1];\n
                            *((*((v20 + 4)) + 4)) = v22;\n
                            v17 = *(v16);\n
                        }\n
                    }\n
                    if (!v17)\n
                    {\n
                        v17 = 0;\n
                    }\n
                    else\n
                    {\n
                        v24 = *((v17 + 4));\n
                        if (v24)\n
                        {\n
                            v25 = v24->field_4;\n
                            if (v25 && *((v17 + 8)) == v25->field_8)\n
                            {\n
                                *(v16) = v24;\n
                                *((v17 + 4)) = v24->field_0;\n
                                *(*(v16)) = v17;\n
                                v26 = *(v16);\n
                                v26->field_8 = v26->field_8 + 1;\n
                                v17 = *(v16);\n
                            }\n
                        }\n
                    }\n
                }\n
LABEL_40530e:\n
                v27 = *((v17 + 4));\n
                if (!v27)\n
                    return v31;\n
                v28 = v27->field_4;\n
                if (v28)\n
                {\n
                    v29 = v28->field_4;\n
                    if (v29 && v27->field_8 == v29->field_8)\n
                    {\n
                        *((v17 + 4)) = v28;\n
                        v27->field_4 = &v28->field_0->padding_0;\n
                        *(*((v17 + 4))) = v27;\n
                        v30 = *((v17 + 4));\n
                        v30->field_8 = v30->field_8 + 1;\n
                    }\n
                }\n
            }\n
LABEL_4051c9:\n
            v19 = *(v17);\n
            if (v19 && v19[2] == *((v17 + 8)))\n
            {\n
                *(v16) = v19;\n
                *(v17) = v19[1];\n
                *((*(v16) + 4)) = v17;\n
                v17 = *(v16);\n
                goto LABEL_405282;\n
            }\n
        }\n
    }\n
    v31 = cgc_tree_delete(v3, a0, v2);\n
    v16 = v0;\n
    v17 = *(v0);\n
    if (!v17)\n
        goto LABEL_405280;\n
    goto LABEL_4051c9;\n
}\n
", "4215635:sub_405353": null, "4215648:cgc_tree_succ": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int cgc_tree_succ(struct struct_1 **v0)\n
{\n
    struct_1 *v1;  // ecx\n
    struct struct_0 **v2;  // eax, Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = *(v0);\n
    v2 = 0;\n
    if (v1)\n
    {\n
        v3 = v1->field_4;\n
        if (v3)\n
        {\n
            do\n
            {\n
                v2 = v3;\n
                v3 = *(v3);\n
            } while (v3);\n
        }\n
    }\n
    return v2;\n
}\n
", "4215689:sub_405389": null, "4215696:cgc_tree_pred": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_tree_pred(struct struct_1 **v0)\n
{\n
    struct struct_0 **v1;  // ecx\n
    struct_0 *v2;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = *(v0);\n
    v2 = 0;\n
    if (v1)\n
    {\n
        v3 = *(v1);\n
        if (v3)\n
        {\n
            do\n
            {\n
                v2 = v3;\n
                v3 = *((v3 + 4));\n
            } while (v3);\n
        }\n
    }\n
    return v2;\n
}\n
", "4215738:sub_4053ba": null, "4215744:cgc_tree_smallest": "int cgc_tree_smallest(struct struct_0 **v0)\n
{\n
    struct struct_0 **v1;  // ecx, Other Possible Types: unsigned int\n
    struct struct_0 **v2;  // eax\n
\n
    v1 = *(v0);\n
    do\n
    {\n
        v2 = v1;\n
        v1 = *(v1);\n
    } while (v1);\n
    return v2;\n
}\n
", "4215769:sub_4053d9": null, "4215776:cgc_tree_largest": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_tree_largest(struct struct_0 **v0)\n
{\n
    struct_0 *v1;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax\n
\n
    v1 = *(v0);\n
    do\n
    {\n
        v2 = v1;\n
        v1 = *((v1 + 4));\n
    } while (v1);\n
    return v2;\n
}\n
", "4215802:sub_4053fa": null, "4215808:cgc_tree_next": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_tree_next(struct struct_0 **v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    struct_0 *v1;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax, Other Possible Types: unsigned int, void*\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edx\n
    char *v9;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // edx\n
    struct_0 *v14;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = *(v0);\n
    v2 = 0;\n
    if (!v1)\n
        return 0;\n
    v3 = a1;\n
    if (!v3)\n
    {\n
        while (true)\n
        {\n
            v4 = *((v1 + 16));\n
            if (!([D] x86g_calculate_condition(0x8<32>, 0x3<32>, edx<4>, 0xffffffff<32>, 0x0<32>)))\n
                break;\n
            if (!v4)\n
                goto LABEL_4054f3;\n
            v1 = *((v1 + 4));\n
            if (!v1)\n
                return 0;\n
        }\n
        goto LABEL_4054f3;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v5 = *((v1 + 16));\n
            v9 = 0;\n
            while (true)\n
            {\n
                if (v5 == v9)\n
                {\n
LABEL_40546e:\n
                    v8 = v3 - v5;\n
                    break;\n
                }\n
                else\n
                {\n
                    v6 = *((a0 + v9));\n
                    v7 = v1->field_c[v9].field_0;\n
                    tmp_6 = v6;\n
                    v8 = v6 - v7;\n
                    if (tmp_6 != v7)\n
                        break;\n
                    v9 += 1;\n
                    if (v3 == v9)\n
                        goto LABEL_40546e;\n
                }\n
            }\n
            if (v8 < 0)\n
                break;\n
            v10 = 0;\n
            while (true)\n
            {\n
                if (v5 == v10)\n
                {\n
LABEL_40549e:\n
                    v13 = v3 - v5;\n
                    break;\n
                }\n
                else\n
                {\n
                    v11 = *((a0 + v10));\n
                    v12 = v1->field_c[v10].field_0;\n
                    tmp_6 = v11;\n
                    v13 = v11 - v12;\n
                    if (tmp_6 != v12)\n
                        break;\n
                    v10 += 1;\n
                    if (v3 == v10)\n
                        goto LABEL_40549e;\n
                }\n
            }\n
            if (v13 > 0)\n
            {\n
                v1 = *(&v1->padding_4[0]);\n
                if (!v1)\n
                    return 0;\n
            }\n
            else\n
            {\n
                v2 = 0;\n
LABEL_4054f3:\n
                v14 = *((v1 + 4));\n
                if (!v14)\n
                    return v2;\n
                do\n
                {\n
                    v2 = v14;\n
                    v14 = *(v14);\n
                } while (v14);\n
            }\n
        }\n
    }\n
    v2 = cgc_tree_next(v1, a0, v3);\n
    if (v2)\n
        return v2;\n
    v2 = v1;\n
}\n
", "4215985:sub_4054b1": null, "4216082:sub_405512": null, "4216096:cgc_tree_prev": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    struct struct_1 *field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_tree_prev(struct struct_0 **v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    struct_0 *v1;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // eax\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edx\n
    struct_0 *v13;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = *(v0);\n
    if (!v1)\n
        return 0;\n
    v3 = a1;\n
    if (v3)\n
    {\n
        while (true)\n
        {\n
            v8 = *((v1 + 16));\n
            v6 = 0;\n
            while (true)\n
            {\n
                if (v8 == v6)\n
                {\n
LABEL_40557e:\n
                    v7 = v3 - v8;\n
                    break;\n
                }\n
                else\n
                {\n
                    v4 = *((a0 + v6));\n
                    v5 = v1->field_c[v6].field_0;\n
                    tmp_6 = v4;\n
                    v7 = v4 - v5;\n
                    if (tmp_6 != v5)\n
                        break;\n
                    v6 += 1;\n
                    if (v3 == v6)\n
                        goto LABEL_40557e;\n
                }\n
            }\n
            if (v7 >= 0)\n
                break;\n
            v1 = v1->field_0;\n
            if (!v1)\n
                return 0;\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v8 = *((v1 + 16));\n
            if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, edi<4>, 0xffffffff<32>, 0x0<32>))\n
                break;\n
            v1 = *(v1);\n
            if (!v1)\n
                return 0;\n
        }\n
    }\n
    if (v3)\n
    {\n
        v9 = 0;\n
        while (v8 != v9)\n
        {\n
            v10 = *((a0 + v9));\n
            v11 = *((*((v1 + 12)) + v9));\n
            tmp_6 = v10;\n
            v12 = v10 - v11;\n
            if (!(tmp_6 == v11))\n
                goto LABEL_4055d2;\n
            v9 += 1;\n
            if (v3 == v9)\n
                break;\n
        }\n
        goto LABEL_4055d2;\n
    }\n
    v12 = v3 - v8;\n
LABEL_4055d2:\n
    if (v12 <= 0)\n
    {\n
        v13 = *(v1);\n
        v2 = 0;\n
        if (!v13)\n
            return v2;\n
        do\n
        {\n
            v2 = v13;\n
            v13 = *((v13 + 4));\n
        } while (v13);\n
    }\n
    else\n
    {\n
        v2 = cgc_tree_prev(v1 + 4, a0, v3);\n
        if (v2)\n
            return v2;\n
        v2 = v1;\n
    }\n
}\n
", "4216340:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:cgc_deallocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}