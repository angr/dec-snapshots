{"4202496:_init": "extern struct_0 *g_408cd0;\n
\n
int _init()\n
{\n
    if (g_408cd0)\n
    {\n
        g_408cd0();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 27623;\n
    v6 = v5 + 55;\n
    v7 = v5 + 55;\n
    if (v7 == v6)\n
        return v5 + 55;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 27559;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 55;\n
    v9 = (v6 + 55 - (v6 + 55) >> 31) + (55 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408ccc;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408ccc)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (!v4)\n
        return 0;\n
    v5 = a0;\n
    if (!v5)\n
        return 0;\n
    tmp_2 = v5;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v7 = v5 * v4;\n
    v8 = cgc_malloc();\n
    if (v8)\n
    {\n
        v0 = v7;\n
        return cgc_memset(v8, 0);\n
    }\n
    return 0;\n
}\n
", "4203055:sub_40222f": null, "4203056:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4203089:sub_402251": null, "4203104:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203123:sub_402273": null, "4203136:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203152:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203168:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203184:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4203198:sub_4022be": null, "4203200:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4203222:sub_4022d6": null, "4203232:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4203254:sub_4022f6": null, "4203264:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4203286:sub_402316": null, "4203296:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4203318:sub_402336": null, "4203328:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[11476 + v0];\n
}\n
", "4203353:sub_402359": null, "4203360:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4203385:sub_402379": null, "4203392:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[11348 + v0];\n
}\n
", "4203417:sub_402399": null, "4203424:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203432:sub_4023a8": null, "4203440:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4203459:sub_4023c3": null, "4203472:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4203491:sub_4023e3": null, "4203504:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int *v4;  // esi\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v3;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v4 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            return cgc_coalesce();\n
        }\n
        v0 = *(v4);\n
        return cgc_deallocate(v4);\n
    }\n
}\n
", "4203593:sub_402449": null, "4203600:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_408e38;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct_2 *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v12[6];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        if (v10 <= 31)\n
        {\n
            v11 = *((&cgc_free_lists + 0x4 * v10));\n
            if (!*((&cgc_free_lists + 0x4 * v10)))\n
                goto LABEL_402500;\n
            else\n
                goto LABEL_0x402510;\n
        }\n
        else\n
        {\n
            v0 = &v2;\n
            if (cgc_allocate(0x40000, 0))\n
                return 0;\n
            v12 = *(&v2);\n
            if (!v12)\n
                return 0;\n
            v12[0] = 0x40000;\n
            v12[1] = 1;\n
            v12[3] = 0;\n
            v12[2] = 0;\n
            v12[5] = 0;\n
            v12[4] = 0;\n
            cgc_insert_into_flist();\n
            v11 = g_408e38;\n
            cgc_remove_from_flist();\n
            v13 = *(v11) - v9;\n
            if (v13 < 49)\n
                return v11 + 24;\n
            v14 = v9 + v11;\n
            *((&v9->field_0 + v11)) = v13;\n
            *(&v9->padding_4[v11]) = 1;\n
            *((8 + &v9->field_0 + v11)) = 0;\n
            *(&v9->padding_c[v11]) = 0;\n
            *(v11) = v9;\n
            *((20 + &v9->field_0 + v11)) = v11;\n
            *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
            v15 = *((v11 + 16));\n
            if (v15)\n
                v15->field_14 = v14;\n
            *((v11 + 16)) = v14;\n
            cgc_insert_into_flist();\n
        }\n
        while (true)\n
        {\n
            while (true)\n
            {\n
LABEL_402500:\n
                v10 += 1;\n
                if (v10 == 32)\n
                    break;\n
                v11 = *(&(&cgc_free_lists)[4 * v10]);\n
            }\n
            while (*(v11) < v9)\n
            {\n
                v11 = *((v11 + 8));\n
                if (!v11)\n
                    goto LABEL_402500;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            return v8 + 1;\n
        }\n
        return 0;\n
    }\n
}\n
", "4204010:sub_4025ea": null, "4204016:cgc_get_size_class": "extern unsigned int g_408d0c;\n
extern unsigned int g_408d10;\n
extern unsigned int g_408d14;\n
extern unsigned int g_408d18;\n
extern unsigned int g_408d1c;\n
extern unsigned int g_408d20;\n
extern unsigned int g_408d24;\n
extern unsigned int g_408d28;\n
extern unsigned int g_408d2c;\n
extern unsigned int g_408d30;\n
extern unsigned int g_408d34;\n
extern unsigned int g_408d38;\n
extern unsigned int g_408d3c;\n
extern unsigned int g_408d40;\n
extern unsigned int g_408d44;\n
extern unsigned int g_408d48;\n
extern unsigned int g_408d4c;\n
extern unsigned int g_408d50;\n
extern unsigned int g_408d54;\n
extern unsigned int g_408d58;\n
extern unsigned int g_408d5c;\n
extern unsigned int g_408d60;\n
extern unsigned int g_408d64;\n
extern unsigned int g_408d68;\n
extern unsigned int g_408d6c;\n
extern unsigned int g_408d70;\n
extern unsigned int g_408d74;\n
extern unsigned int g_408d78;\n
extern unsigned int g_408d7c;\n
extern unsigned int g_408d80;\n
extern unsigned int g_408d84;\n
extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (size_class_limits >= v1)\n
        return v2;\n
    v2 = 1;\n
    if (g_408d0c < v1)\n
    {\n
        v2 = 2;\n
        if (g_408d10 < v1)\n
        {\n
            v2 = 3;\n
            if (g_408d14 < v1)\n
            {\n
                v2 = 4;\n
                if (g_408d18 < v1)\n
                {\n
                    v2 = 5;\n
                    if (g_408d1c < v1)\n
                    {\n
                        v2 = 6;\n
                        if (g_408d20 < v1)\n
                        {\n
                            v2 = 7;\n
                            if (g_408d24 < v1)\n
                            {\n
                                v2 = 8;\n
                                if (g_408d28 < v1)\n
                                {\n
                                    v2 = 9;\n
                                    if (g_408d2c < v1)\n
                                    {\n
                                        v2 = 10;\n
                                        if (g_408d30 < v1)\n
                                        {\n
                                            v2 = 11;\n
                                            if (g_408d34 < v1)\n
                                            {\n
                                                v2 = 12;\n
                                                if (g_408d38 < v1)\n
                                                {\n
                                                    v2 = 13;\n
                                                    if (g_408d3c < v1)\n
                                                    {\n
                                                        v2 = 14;\n
                                                        if (g_408d40 < v1)\n
                                                        {\n
                                                            v2 = 15;\n
                                                            if (g_408d44 < v1)\n
                                                            {\n
                                                                v2 = 16;\n
                                                                if (g_408d48 < v1)\n
                                                                {\n
                                                                    v2 = 17;\n
                                                                    if (g_408d4c < v1)\n
                                                                    {\n
                                                                        v2 = 18;\n
                                                                        if (g_408d50 < v1)\n
                                                                        {\n
                                                                            v2 = 19;\n
                                                                            if (g_408d54 < v1)\n
                                                                            {\n
                                                                                v2 = 20;\n
                                                                                if (g_408d58 < v1)\n
                                                                                {\n
                                                                                    v2 = 21;\n
                                                                                    if (g_408d5c < v1)\n
                                                                                    {\n
                                                                                        v2 = 22;\n
                                                                                        if (g_408d60 < v1)\n
                                                                                        {\n
                                                                                            v2 = 23;\n
                                                                                            if (g_408d64 < v1)\n
                                                                                            {\n
                                                                                                v2 = 24;\n
                                                                                                if (g_408d68 < v1)\n
                                                                                                {\n
                                                                                                    v2 = 25;\n
                                                                                                    if (g_408d6c < v1)\n
                                                                                                    {\n
                                                                                                        v2 = 26;\n
                                                                                                        if (g_408d70 < v1)\n
                                                                                                        {\n
                                                                                                            v2 = 27;\n
                                                                                                            if (g_408d74 < v1)\n
                                                                                                            {\n
                                                                                                                v2 = 28;\n
                                                                                                                if (g_408d78 < v1)\n
                                                                                                                {\n
                                                                                                                    v2 = 29;\n
                                                                                                                    if (g_408d7c < v1)\n
                                                                                                                    {\n
                                                                                                                        v2 = 30;\n
                                                                                                                        if (g_408d80 < v1)\n
                                                                                                                            v2 = 31 + (g_408d84 < v1);\n
                                                                                                                    }\n
                                                                                                                }\n
                                                                                                            }\n
                                                                                                        }\n
                                                                                                    }\n
                                                                                                }\n
                                                                                            }\n
                                                                                        }\n
                                                                                    }\n
                                                                                }\n
                                                                            }\n
                                                                        }\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                }\n
                                            }\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4204535:sub_4027f7": null, "4204544:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1[0]);\n
    v1[1] = 1;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v2]);\n
    if (v3)\n
    {\n
        v1[2] = v3;\n
        *((*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v2]) + 12)) = v1;\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v2]) = v1;\n
        v1[3] = 0;\n
        return v2;\n
    }\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v2]) = v1;\n
    return v2;\n
}\n
", "4204637:sub_40285d": null, "4204640:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct_1 *v3;  // ecx\n
    struct_0 *v4;  // ecx\n
\n
    v1 = v0;\n
    v2 = cgc_get_size_class(v1->field_0);\n
    v3 = v1->field_c;\n
    if (v3)\n
        v3->field_8 = v1->field_8;\n
    v4 = v1->field_8;\n
    if (v4)\n
        v4->field_c = v1->field_c;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v2]) == v1)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v2]) = v1->field_8;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v2;\n
}\n
", "4204741:sub_4028c5": null, "4204752:cgc_coalesce": "typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_4 *field_14;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
    struct struct_3 *field_10;\n
    struct struct_2 *field_14;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_5 *v1)\n
{\n
    struct struct_2 **v0;  // [bp-0x14]\n
    struct_5 *v2;  // esi\n
    struct_4 *v3;  // ebp\n
    struct_3 *v4;  // edi\n
    struct struct_2 **v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ecx\n
    struct_0 *v9;  // ecx\n
    unsigned int v10;  // eax\n
    struct_1 *v11;  // ecx\n
    struct_0 *v12;  // ecx\n
    struct_1 *v13;  // ecx\n
    struct_1 *v14;  // ecx\n
    struct_3 *v15;  // edi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    struct_0 *v18;  // ecx\n
    struct_0 *v19;  // ecx\n
    unsigned int v20;  // eax\n
    struct_1 *v21;  // ecx\n
    struct_0 *v22;  // ecx\n
    struct_1 *v23;  // ecx\n
    struct_1 *v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // eax\n
    struct_0 *v28;  // ecx\n
    unsigned int v29;  // ecx\n
    struct_4 *v31;  // edi\n
    unsigned int v32;  // eax\n
    struct_3 *v33;  // edx, Other Possible Types: unsigned int\n
    struct_2 *v34;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v35;  // ecx\n
    unsigned int v36;  // ecx\n
    struct struct_2 **v37;  // edx, Other Possible Types: unsigned int, unsigned int *\n
    struct_2 *v38;  // eax, Other Possible Types: unsigned int\n
    struct_3 *v39;  // eax, Other Possible Types: unsigned int\n
    struct_4 *v42;  // edi\n
    unsigned int v43;  // eax\n
    unsigned int v44;  // ecx\n
    struct_3 *v45;  // eax\n
    struct_2 *v46;  // ecx\n
    struct_3 *v47;  // ecx\n
\n
    v2 = v1;\n
    v3 = v2->field_14;\n
    if (!v2->field_14)\n
        return v39;\n
    v4 = v2->field_10;\n
    if (!v3->field_4)\n
    {\n
        if (!v4)\n
            return v39;\n
        if (!v4->field_4)\n
            return v39;\n
        v7 = cgc_get_size_class(v4->field_0);\n
        v9 = v4->field_c;\n
        if (v9)\n
            v9->field_8 = v4->field_8;\n
        v13 = v4->field_8;\n
        if (v13)\n
            v13->field_c = v4->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v7]) == v4)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v7]) = v4->field_8;\n
        v4->field_8 = 0;\n
        v4->field_c = 0;\n
        v4->field_4 = 0;\n
        v17 = cgc_get_size_class(v2->field_0);\n
        v19 = v2->field_c;\n
        if (v19)\n
            v19->field_8 = v2->field_8;\n
        v23 = v2->field_8;\n
        if (v23)\n
            v23->field_c = v2->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v17]) == v2)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v17]) = v2->field_8;\n
        v2->field_8 = 0;\n
        v2->field_c = 0;\n
        v2->field_4 = 0;\n
        v26 = v2->field_0 + v2->field_10->field_0;\n
        v2->field_0 = v26;\n
        v27 = cgc_get_size_class(v26);\n
        v2->field_4 = 1;\n
        v29 = *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v27]);\n
        if (v29)\n
        {\n
            v2->field_8 = v29;\n
            *((*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v27]) + 12)) = v2;\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v27]) = v2;\n
            v2->field_c = 0;\n
            v33 = v2->field_10;\n
            v34 = v33->field_14;\n
            if (!v34)\n
                goto LABEL_402c5a;\n
        }\n
        else\n
        {\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v27]) = v2;\n
            v33 = v2->field_10;\n
            v34 = *((v33 + 20));\n
            if (!v34)\n
                goto LABEL_402c5a;\n
        }\n
        *((v34 + 16)) = *((v33 + 16));\n
LABEL_402c5a:\n
        v39 = *((v33 + 16));\n
        if (!v39)\n
            return *((v33 + 16));\n
        v37 = v33 + 20;\n
        goto LABEL_402ca5;\n
        goto LABEL_402ca5;\n
    }\n
    v5 = &v2->field_14;\n
    if (v4 && v4->field_4)\n
    {\n
        v0 = v5;\n
        v6 = cgc_get_size_class(v3->field_0);\n
        v8 = v3->field_c;\n
        if (v8)\n
            v8->field_8 = v3->field_8;\n
        v11 = v3->field_8;\n
        if (v11)\n
            v11->field_c = v3->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v6]) == v3)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v6]) = v3->field_8;\n
        v3->field_8 = 0;\n
        v3->field_c = 0;\n
        v3->field_4 = 0;\n
        v15 = v2->field_10;\n
        v16 = cgc_get_size_class(v15->field_0);\n
        v18 = v15->field_c;\n
        if (v18)\n
            v18->field_8 = v15->field_8;\n
        v21 = v15->field_8;\n
        if (v21)\n
            v21->field_c = v15->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v16]) == v15)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v16]) = v15->field_8;\n
        v15->field_8 = 0;\n
        v15->field_c = 0;\n
        v15->field_4 = 0;\n
        v25 = cgc_get_size_class(v2->field_0);\n
        v28 = v2->field_c;\n
        if (v28)\n
            v28->field_8 = v2->field_8;\n
        v35 = v2->field_8;\n
        if (v35)\n
            v35->field_c = v2->field_c;\n
        if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v25]) == v2)\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v25]) = v2->field_8;\n
        v2->field_8 = 0;\n
        v2->field_c = 0;\n
        v2->field_4 = 0;\n
        v2->field_14->field_0 = v2->field_14->field_0 + v2->field_0;\n
        v2->field_14->field_0 = v2->field_14->field_0 + v2->field_10->field_0;\n
        v42 = v2->field_14;\n
        v43 = cgc_get_size_class(v42->field_0);\n
        v42->field_4 = 1;\n
        v44 = *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v43]);\n
        if (!v44)\n
        {\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v43]) = v42;\n
        }\n
        else\n
        {\n
            v42->field_8 = v44;\n
            *((*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v43]) + 12)) = v42;\n
            *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v43]) = v42;\n
            v42->field_c = 0;\n
        }\n
        v37 = v0;\n
        v45 = v2->field_10;\n
        v46 = v45->field_14;\n
        if (v46)\n
        {\n
            v46->field_10 = v45->field_10;\n
            v37 = v0;\n
        }\n
        v47 = v45->field_10;\n
        if (v47)\n
            v47->field_14 = v45->field_14;\n
        v38 = *(v37);\n
        if (!v38)\n
            goto LABEL_402c9e;\n
        goto LABEL_402c98;\n
    }\n
    v39 = v2->field_10;\n
    if (!v39)\n
        return v2->field_10;\n
    if (v39->field_4)\n
        return v2->field_10;\n
    v0 = v5;\n
    v10 = cgc_get_size_class(v3->field_0);\n
    v12 = v3->field_c;\n
    if (v12)\n
        v12->field_8 = v3->field_8;\n
    v14 = v3->field_8;\n
    if (v14)\n
        v14->field_c = v3->field_c;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v10]) == v3)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v10]) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    v20 = cgc_get_size_class(v2->field_0);\n
    v22 = v2->field_c;\n
    if (v22)\n
        v22->field_8 = v2->field_8;\n
    v24 = v2->field_8;\n
    if (v24)\n
        v24->field_c = v2->field_c;\n
    if (*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v20]) == v2)\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v20]) = v2->field_8;\n
    v2->field_8 = 0;\n
    v2->field_c = 0;\n
    v2->field_4 = 0;\n
    v2->field_14->field_0 = v2->field_14->field_0 + v2->field_0;\n
    v31 = v2->field_14;\n
    v32 = cgc_get_size_class(v31->field_0);\n
    v31->field_4 = 1;\n
    v36 = *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v32]);\n
    if (v36)\n
    {\n
        v31->field_8 = v36;\n
        *((*(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v32]) + 12)) = v31;\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v32]) = v31;\n
        v31->field_c = 0;\n
        v37 = v0;\n
        v38 = *(v37);\n
        if (!v38)\n
            goto LABEL_402c9e;\n
    }\n
    else\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[224 + 4 * v32]) = v31;\n
        v37 = v0;\n
        v38 = *(v37);\n
        if (!v38)\n
            goto LABEL_402c9e;\n
    }\n
LABEL_402c98:\n
    *((v38 + 16)) = v2->field_10;\n
LABEL_402c9e:\n
    v39 = v2->field_10;\n
    if (!v39)\n
        return v2->field_10;\n
LABEL_402ca5:\n
    *((v39 + 20)) = *(v37);\n
    return v39;\n
}\n
", "4205784:sub_402cd8": null, "4205792:cgc_memchr": "int cgc_memchr(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) == a0)\n
            return v0 + v2;\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4205849:sub_402d19": null, "4205856:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((a0 + v2)) != *((v0 + v2)))\n
            return *((a0 + v2)) - *((v0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4205919:sub_402d5f": null, "4205920:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4206050:sub_402de2": null, "4206064:cgc_memset": "int cgc_memset(char v0[8], unsigned int a0, unsigned int a1)\n
{\n
    int tmp_13;  // tmp #13\n
    char v1[8];  // eax\n
    unsigned int v2;  // edi\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // edi\n
    char v6[8];  // esi, Other Possible Types: unsigned int\n
    unsigned int v7;  // edi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = a0;\n
    v4 = v2 & 7;\n
    v6 = v1;\n
    if (v2 - 1 >= 7)\n
    {\n
        v5 = v2 & -8;\n
        v6 = v1;\n
        do\n
        {\n
            *(v6) = v3;\n
            *((v6 + 1)) = v3;\n
            *((v6 + 2)) = v3;\n
            *((v6 + 3)) = v3;\n
            *((v6 + 4)) = v3;\n
            *((v6 + 5)) = v3;\n
            *((v6 + 6)) = v3;\n
            *((v6 + 7)) = v3;\n
            v6 += 8;\n
            tmp_13 = v5;\n
            v5 -= 8;\n
        } while (tmp_13 != 8);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = 0;\n
    do\n
    {\n
        *((v6 + v7)) = v3;\n
        v7 += 1;\n
    } while (v4 != v7);\n
    return v0;\n
}\n
", "4206174:sub_402e5e": null, "4206176:cgc_output_number_printf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    struct_0 *v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    char v14;  // al\n
\n
    v6 = a2;\n
    v7 = a1;\n
    v8 = a0;\n
    v11 = v5;\n
    if (v8 < v7)\n
    {\n
        v3 = v8;\n
        v2 = 0;\n
        if (v6 <= 0)\n
            goto LABEL_402f3b;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v8) /m v7;\n
        v3 = tmp_9 >> 32;\n
        v11 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v8) /m v7, v7, v6 - 1, a3);\n
        if (v6 <= 0)\n
            goto LABEL_402f3b;\n
    }\n
    if (!v2)\n
    {\n
        tmp_2 = v6;\n
        v12 = v6 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            if ((a3 & 1))\n
            {\n
                do\n
                {\n
                    v1 = 48;\n
                    v0 = &v4;\n
                    cgc_transmit(v11, &v1, 1);\n
                    v11 = v5;\n
                    tmp_6 = v12;\n
                    v12 -= 1;\n
                } while (tmp_6 != 1);\n
            }\n
            else\n
            {\n
                do\n
                {\n
                    v1 = 32;\n
                    v0 = &v4;\n
                    cgc_transmit(v11, &v1, 1);\n
                    v11 = v5;\n
                    tmp_6 = v12;\n
                    v12 -= 1;\n
                } while (tmp_6 != 1);\n
            }\n
        }\n
    }\n
LABEL_402f3b:\n
    if (!(a3 & 2))\n
    {\n
        v13 = v3;\n
        v14 = v13 + 87;\n
    }\n
    else\n
    {\n
        v13 = v3;\n
        v14 = v13 + 55;\n
    }\n
    if (v13 < 10)\n
        v14 = v13 + 48;\n
    v1 = v14;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4206468:sub_402f84": null, "4206480:cgc_fdprintf": "int cgc_fdprintf(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x30]\n
    char v6;  // [bp-0x1d]\n
    char v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    char v11;  // [bp+0xc]\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // ecx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edi\n
\n
    v12 = a0;\n
    v8 = &v11;\n
    if (!*(v12))\n
        return 0;\n
    v13 = v10;\n
    v14 = &v7;\n
    v15 = &v6;\n
    do\n
    {\n
        v20 = v12 + 1;\n
        a0 = v20;\n
        *(&v12) = *(v12);\n
        if (v6 == 37)\n
        {\n
            v9 = 0;\n
            v18 = 0;\n
            v19 = v20;\n
            while (true)\n
            {\n
                v20 = v19 + 1;\n
                a0 = v20;\n
                v16 = *(v19);\n
                v17 = v16;\n
                if (v17 - 49 >= 9)\n
                    break;\n
                v18 = cgc_strtol(v19, &a0);\n
                v19 = a0;\n
            }\n
            switch (v17)\n
            {\n
            case 88:\n
                v21 = v9 | 2;\n
                goto LABEL_403149;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 118: case 119:\n
                v6 = v16;\n
                break;\n
            case 99:\n
                v22 = v8;\n
                v8 = v22 + 4;\n
                v6 = *(v22);\n
                break;\n
            case 100:\n
                v23 = v8;\n
                v8 = v23 + 4;\n
                v24 = *(v23);\n
                if (v24 >= 0)\n
                {\n
                    v28 = v10;\n
                }\n
                else\n
                {\n
LABEL_403187:\n
                    v6 = 45;\n
                    v5 = &v7;\n
                    v28 = v10;\n
                    cgc_transmit(v10, &v6, 1);\n
                    v24 = -(v24);\n
                }\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                v0 = v24;\n
                goto LABEL_4031b2;\n
            case 115:\n
                v25 = v8;\n
                v8 = v25 + 4;\n
                v9 = *(v25);\n
                v27 = v10;\n
                v14 = &v7;\n
                v15 = &v6;\n
                if (cgc_strlen())\n
                {\n
                    v29 = 0;\n
                    do\n
                    {\n
                        v6 = *((v9 + v29));\n
                        v5 = v14;\n
                        v4 = v15;\n
                        cgc_transmit(v27, v15, 1);\n
                        v29 += 1;\n
                        v15 = &v6;\n
                        v14 = &v7;\n
                    } while (v29 < cgc_strlen(v9, v4, 1));\n
                }\n
                goto LABEL_402fe7;\n
            case 117:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v9;\n
                v2 = v18;\n
                v1 = 10;\n
                goto LABEL_40315b;\n
            case 120:\n
                v21 = v9;\n
LABEL_403149:\n
                v26 = v8;\n
                v8 = v26 + 4;\n
                v3 = v21;\n
                v2 = v18;\n
                v1 = 16;\n
LABEL_40315b:\n
                v0 = *(v26);\n
                v28 = v10;\n
LABEL_4031b2:\n
                cgc_output_number_printf(v28, v0, v1, v2, v3);\n
                v27 = v28;\n
                v14 = &v7;\n
                v15 = &v6;\n
                goto LABEL_402fe7;\n
            default:\n
                if (v17 == 37)\n
                    goto LABEL_403163;\n
                else\n
                    goto LABEL_0x403051;\n
            }\n
LABEL_403163:\n
            v6 = 37;\n
            v5 = &v7;\n
            v15 = &v6;\n
            cgc_transmit(v10, &v6, 1);\n
            v27 = v10;\n
            goto LABEL_403187;\n
        }\n
        v6 = v12;\n
        v5 = v14;\n
        cgc_transmit(v13, v15, 1);\n
        v27 = v13;\n
        v14 = &v7;\n
LABEL_402fe7:\n
        v13 = v27;\n
        v12 = a0;\n
    } while (*(v12));\n
    return 0;\n
}\n
", "4206534:sub_402fc6": null, "4207060:sub_4031d4": null, "4207072:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v5, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    int tmp_22;  // tmp #22\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ecx\n
    struct struct_0 **v10;  // ebp\n
    unsigned int *v11;  // esi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    void* v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v16;  // edx\n
    char v17;  // bl\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ecx\n
    char v20;  // dl\n
    unsigned int v21;  // eax\n
\n
    v4 = v6;\n
    v3 = v7;\n
    v2 = v8;\n
    v16 = a3;\n
    v9 = a2;\n
    v10 = a0;\n
    v11 = v5;\n
    v15 = 0;\n
    if (*(&v0) < v9)\n
    {\n
        v0 = a1;\n
        v17 = a4;\n
        v18 = v0;\n
        if (v16 <= 0)\n
            goto LABEL_4032ff;\n
    }\n
    else\n
    {\n
        v1 = v16 - 1;\n
        v12 = (0 CONCAT *(&v0)) /m v9;\n
        v0 = (0 CONCAT *(&v0)) /m v9 >> 32;\n
        v13 = a4;\n
        v15 = cgc_output_number_sprintf(v11, v10, v12, v9, v1, v13);\n
        v16 = a3;\n
        v17 = v13;\n
        v18 = v0;\n
        if (v16 <= 0)\n
            goto LABEL_4032ff;\n
    }\n
    if (!v15)\n
    {\n
        v19 = v16 - 1;\n
        if (v16 != 1)\n
        {\n
            if ((v17 & 1))\n
            {\n
                if ((v19 & 1))\n
                {\n
                    *(v10)->field_0 = 48;\n
                    *(v10) = *(v10) + 1;\n
                    *(v11) = *(v11) + 1;\n
                    v19 = v16 - 2;\n
                }\n
                if (v16 != 2)\n
                {\n
                    do\n
                    {\n
                        *(v10)->field_0 = 48;\n
                        *(v10) = *(v10) + 1;\n
                        *(v11) = *(v11) + 1;\n
                        *(v10)->field_0 = 48;\n
                        *(v10) = *(v10) + 1;\n
                        *(v11) = *(v11) + 1;\n
                        tmp_22 = v19;\n
                        v19 -= 2;\n
                    } while (tmp_22 != 2);\n
                }\n
            }\n
            else\n
            {\n
                if ((v19 & 1))\n
                {\n
                    *(v10)->field_0 = 32;\n
                    *(v10) = *(v10) + 1;\n
                    *(v11) = *(v11) + 1;\n
                    v19 = v16 - 2;\n
                }\n
                if (v16 != 2)\n
                {\n
                    do\n
                    {\n
                        *(v10)->field_0 = 32;\n
                        *(v10) = *(v10) + 1;\n
                        *(v11) = *(v11) + 1;\n
                        *(v10)->field_0 = 32;\n
                        *(v10) = *(v10) + 1;\n
                        *(v11) = *(v11) + 1;\n
                        tmp_22 = v19;\n
                        v19 -= 2;\n
                    } while (tmp_22 != 2);\n
                }\n
            }\n
        }\n
    }\n
LABEL_4032ff:\n
    v20 = (!(v18 < 10) ? 48 : ((!(v17 & 2)) * 32 + 55));\n
    *(v10)->field_0 = v20 + v18;\n
    *(v10) = *(v10) + 1;\n
    *(v11) = *(v11) + 1;\n
    v21 = v15 + 1;\n
    return v21;\n
}\n
", "4207409:sub_403331": null, "4207424:cgc_sprintf": "typedef struct struct_1 {\n
    char field_-1;\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
int cgc_sprintf(char *v8, struct_1 *a0)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp+0xc]\n
    struct_1 *v10;  // eax, Other Possible Types: unsigned int\n
    char *v11;  // ecx, Other Possible Types: unsigned int\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx\n
    unsigned int v14;  // eax\n
    char v15;  // dl\n
    struct_1 *v16;  // ecx, Other Possible Types: unsigned int\n
    void* v17;  // esi, Other Possible Types: unsigned int\n
    unsigned int v18;  // ecx\n
    struct_1 *v19;  // ecx, Other Possible Types: unsigned int\n
    char *v20;  // eax, Other Possible Types: unsigned int\n
    unsigned int v21;  // edi\n
    struct struct_0 **v22;  // ecx\n
    char *v23;  // ecx, Other Possible Types: unsigned int\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v26;  // edi\n
    struct struct_0 **v27;  // ecx\n
    char *v28;  // edx\n
    unsigned int v29;  // edi\n
\n
    v10 = a0;\n
    v11 = v8;\n
    v5 = 0;\n
    v7 = &v9;\n
    if (!v10->field_-1)\n
    {\n
        v12 = 0;\n
    }\n
    else\n
    {\n
        do\n
        {\n
            v19 = v10 + 1;\n
            a0 = v19;\n
            *(&v10) = *(v10);\n
            if (*(&v10) != 37)\n
            {\n
                v13 = v8;\n
                *(v13) = v10;\n
                v8 = v13 + 1;\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                v17 = 0;\n
                while (true)\n
                {\n
                    v14 = v17 | 1;\n
                    v16 = v19 + 1;\n
                    do\n
                    {\n
                        v21 = v17;\n
                        a0 = v16;\n
                        v15 = *((v16 - 1));\n
                        v16 += 1;\n
                        v17 = v14;\n
                    } while (v15 == 48);\n
                    switch (v15)\n
                    {\n
                    case 37:\n
                        v20 = v8;\n
                        *(v20) = 37;\n
                        goto LABEL_4034e7;\n
                    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                        v18 = v16 - 2;\n
                        v4 = 10;\n
                        v6 = cgc_strtol(v18, &a0);\n
                        v19 = a0;\n
                        v17 = v21;\n
                        continue;\n
                    case 100:\n
                        v22 = v7;\n
                        v7 = v22 + 1;\n
                        v23 = *(v22);\n
                        if (v23 < 0)\n
                        {\n
                            v28 = v8;\n
                            *(v28) = 45;\n
                            v8 = v28 + 1;\n
                            v5 += 1;\n
                            v23 = -(v23);\n
                        }\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 10;\n
                        v0 = v23;\n
LABEL_403467:\n
                        cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                        break;\n
                    case 115:\n
                        v24 = v7;\n
                        v7 = v24 + 1;\n
                        v25 = v8;\n
                        v26 = v5;\n
                        if (cgc_strlen())\n
                        {\n
                            v6 = v26;\n
                            v29 = 0;\n
                            do\n
                            {\n
                                v25[v29] = (*(v24))[v29].field_0;\n
                                v29 += 1;\n
                            } while (v29 < cgc_strlen());\n
                            v25 = &v25[v29];\n
                            v26 = v6 + v29;\n
                        }\n
                        v8 = v25;\n
                        v5 = v26;\n
                        break;\n
                    case 88:\n
                        v21 |= 2;\n
                    case 120:\n
                        v27 = v7;\n
                        v7 = v27 + 1;\n
                        v3 = v21;\n
                        v2 = v6;\n
                        v1 = 16;\n
                        v0 = &*(v27)->field_0;\n
                        goto LABEL_403467;\n
                    default:\n
                        v20 = v8;\n
                        *(v20) = v15;\n
LABEL_4034e7:\n
                        v8 = v20 + 1;\n
                        goto LABEL_40338d;\n
                    }\n
                }\n
            }\n
LABEL_40338d:\n
            v5 += 1;\n
            v10 = a0;\n
        } while (*(v10));\n
        v11 = v8;\n
        v12 = v5;\n
    }\n
    *(v11) = 0;\n
    return v12;\n
}\n
", "4207478:sub_403376": null, "4207877:sub_403505": null, "4207888:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_40357a;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_40357a:\n
    return v5;\n
}\n
", "4208004:sub_403584": null, "4208016:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4208050:sub_4035b2": null, "4208064:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return *(v1) - v5;\n
            if (v5 != v3)\n
                return *(v1) - v5;\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return *(v1) - 0;\n
}\n
", "4208132:sub_403604": null, "4208144:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        *(v2) = 0;\n
        return v0;\n
    }\n
    v4 = 0;\n
    do\n
    {\n
        v2[v4] = v3;\n
        v3 = v1[1 + v4];\n
        v4 += 1;\n
    } while (v3);\n
    v2[v4] = 0;\n
    return v0;\n
}\n
", "4208209:sub_403651": null, "4208224:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4208251:sub_40367b": null, "4208256:cgc_strsep": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strsep(struct struct_1 **v0, char *a0)\n
{\n
    struct struct_1 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_0 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_4036ed;\n
                }\n
            }\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_4036ed:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4208375:sub_4036f7": null, "4208384:cgc_strtol": "int cgc_strtol(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    void* v4;  // ebp, Other Possible Types: unsigned int\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char v6;  // bl\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // edi\n
    void* v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebp\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = 0;\n
    if (v1 > 36)\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
    }\n
    else\n
    {\n
        v12 = 0;\n
        v5 = v3;\n
        if (v1 != 1)\n
        {\n
            v7 = v3;\n
            while (true)\n
            {\n
                v6 = *(v7);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v6 != 32)\n
                    break;\n
                v7 += 1;\n
            }\n
            v8 = 0;\n
            *(&v8) = v6 == 45;\n
            v9 = (*((v7 + v8)) == 43) + v8;\n
            v10 = v7 + v9;\n
            if (!v1)\n
            {\n
                v1 = 10;\n
                if (*(v10) == 48)\n
                {\n
                    if ((*((v7 + v9 + 1)) | 32) == 120)\n
                    {\n
                        v10 = v7 + v9 + 2;\n
                        v1 = 16;\n
                    }\n
                    else\n
                    {\n
                        v10 = v7 + v9 + 1;\n
                        v1 = 8;\n
                    }\n
                }\n
            }\n
            else if (v1 == 16)\n
            {\n
                v1 = 16;\n
                if (*(v10) == 48 && (*((v7 + v9 + 1)) | 32) == 120)\n
                    v10 = v7 + v9 + 2;\n
            }\n
            v11 = 0;\n
            v12 = 0;\n
            while (true)\n
            {\n
                v13 = *((v10 + v12));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v14 = v13 - 48;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v15 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v15 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v14 = v13 + v15 + 10;\n
                    if (v14 >= v1)\n
                        break;\n
                }\n
                v11 = v1 * v11 + v14;\n
                v12 += 1;\n
            }\n
            v4 = -(v11);\n
            if (v6 != 45)\n
                v4 = v11;\n
            v5 = v10 + v12;\n
            v2 = a0;\n
            v3 = v0;\n
        }\n
    }\n
    if (!v2)\n
        return v4;\n
    if (!v12)\n
        v5 = v3;\n
    *(v2) = v5;\n
    return v4;\n
}\n
", "4208427:sub_40372b": null, "4208599:sub_4037d7": null, "4208695:sub_403837": null, "4208704:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4208745:sub_403869": null, "4208752:cgc_database_init": "extern unsigned int __rpc;\n
extern unsigned int g_408e40;\n
extern unsigned int g_408e48;\n
extern unsigned int g_408e4c;\n
\n
int cgc_database_init(unsigned int v0, unsigned int a0)\n
{\n
    g_408e40 = v0;\n
    __rpc = a0;\n
    g_408e48 = 232323;\n
    g_408e4c = 1;\n
    return 0;\n
}\n
", "4208807:sub_4038a7": null, "4208816:cgc_database_close": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int __buf;\n
extern unsigned int __rpc;\n
extern unsigned int g_408e44;\n
\n
int cgc_database_close()\n
{\n
    struct_0 *v0;  // [bp-0x54], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v5 = v7;\n
    v1 = 0x8000;\n
    v2 = &__buf;\n
    v8 = g_408e44;\n
    g_408e44 = g_408e44 + 1;\n
    v3 = v8;\n
    v4 = 2;\n
    v0 = &v1;\n
    cgc_marshal_rpc_msg(&v3, &v2);\n
    v0 = 0x8000 - v1;\n
    return cgc__rpc_send(&__rpc, &__buf);\n
}\n
", "4208938:sub_40392a": null, "4208944:cgc_db_lookup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int __buf;\n
extern unsigned int __rpc;\n
extern unsigned int g_408e44;\n
extern unsigned int g_408e48;\n
extern unsigned int g_408e4c;\n
\n
int cgc_db_lookup(unsigned int v15)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    unsigned int v3;  // [bp-0x74]\n
    void* v4;  // [bp-0x70]\n
    unsigned int v5;  // [bp-0x6c]\n
    unsigned int v6;  // [bp-0x68]\n
    unsigned int v7;  // [bp-0x64]\n
    unsigned int v8;  // [bp-0x60]\n
    void* v9;  // [bp-0x5c]\n
    void* v10;  // [bp-0x58]\n
    void* v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x44]\n
    unsigned int v14;  // [bp-0x10]\n
    char v16;  // [bp+0x8]\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
\n
    v14 = v17;\n
    v1 = 0x8000;\n
    v2 = &__buf;\n
    v18 = g_408e44;\n
    g_408e44 = g_408e44 + 1;\n
    v3 = v18;\n
    v4 = 0;\n
    v5 = 2;\n
    v6 = g_408e48;\n
    v7 = g_408e4c;\n
    v8 = 1;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = 0;\n
    v0 = &v1;\n
    if (cgc_marshal_rpc_msg(&v3, &v2) >= 0)\n
    {\n
        v0 = &v1;\n
        if (cgc_marshal_key(&v16, &v2) >= 0)\n
        {\n
            v0 = 0x8000 - v1;\n
            if (cgc__rpc_send(&__rpc, &__buf) >= 0)\n
            {\n
                v0 = 0x8000;\n
                v19 = cgc__rpc_recv(&__rpc, &__buf);\n
                if (v19 >= 0)\n
                {\n
                    v2 = &__buf;\n
                    v1 = v19;\n
                    v0 = &v1;\n
                    if (cgc_unmarshal_rpc_msg(&v13, &v2) >= 0 && *(&v13) == v3)\n
                    {\n
                        v0 = &v1;\n
                        if (cgc_unmarshal_result(v15, &v2) >= 0)\n
                            return v15;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    cgc__terminate();\n
    return cgc_db_insert();\n
}\n
", "4209312:cgc_db_insert": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int __buf;\n
extern unsigned int __rpc;\n
extern unsigned int g_408e44;\n
extern unsigned int g_408e48;\n
extern unsigned int g_408e4c;\n
\n
int cgc_db_insert(unsigned int v15)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    unsigned int v3;  // [bp-0x74]\n
    void* v4;  // [bp-0x70]\n
    unsigned int v5;  // [bp-0x6c]\n
    unsigned int v6;  // [bp-0x68]\n
    unsigned int v7;  // [bp-0x64]\n
    unsigned int v8;  // [bp-0x60]\n
    void* v9;  // [bp-0x5c]\n
    void* v10;  // [bp-0x58]\n
    void* v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x44]\n
    unsigned int v14;  // [bp-0x10]\n
    char v16;  // [bp+0x8]\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
\n
    v14 = v17;\n
    v1 = 0x8000;\n
    v2 = &__buf;\n
    v18 = g_408e44;\n
    g_408e44 = g_408e44 + 1;\n
    v3 = v18;\n
    v4 = 0;\n
    v5 = 2;\n
    v6 = g_408e48;\n
    v7 = g_408e4c;\n
    v8 = 2;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = 0;\n
    v0 = &v1;\n
    if (cgc_marshal_rpc_msg(&v3, &v2) >= 0)\n
    {\n
        v0 = &v1;\n
        if (cgc_marshal_record(&v16, &v2) >= 0)\n
        {\n
            v0 = 0x8000 - v1;\n
            if (cgc__rpc_send(&__rpc, &__buf) >= 0)\n
            {\n
                v0 = 0x8000;\n
                v19 = cgc__rpc_recv(&__rpc, &__buf);\n
                if (v19 >= 0)\n
                {\n
                    v2 = &__buf;\n
                    v1 = v19;\n
                    v0 = &v1;\n
                    if (cgc_unmarshal_rpc_msg(&v13, &v2) >= 0 && *(&v13) == v3)\n
                    {\n
                        v0 = &v1;\n
                        if (cgc_unmarshal_result(v15, &v2) >= 0)\n
                            return v15;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    cgc__terminate();\n
    return cgc_db_delete();\n
}\n
", "4209680:cgc_db_delete": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int __buf;\n
extern unsigned int __rpc;\n
extern unsigned int g_408e44;\n
extern unsigned int g_408e48;\n
extern unsigned int g_408e4c;\n
\n
int cgc_db_delete(unsigned int v15)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    unsigned int v3;  // [bp-0x74]\n
    void* v4;  // [bp-0x70]\n
    unsigned int v5;  // [bp-0x6c]\n
    unsigned int v6;  // [bp-0x68]\n
    unsigned int v7;  // [bp-0x64]\n
    unsigned int v8;  // [bp-0x60]\n
    void* v9;  // [bp-0x5c]\n
    void* v10;  // [bp-0x58]\n
    void* v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x44]\n
    unsigned int v14;  // [bp-0x10]\n
    char v16;  // [bp+0x8]\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
\n
    v14 = v17;\n
    v1 = 0x8000;\n
    v2 = &__buf;\n
    v18 = g_408e44;\n
    g_408e44 = g_408e44 + 1;\n
    v3 = v18;\n
    v4 = 0;\n
    v5 = 2;\n
    v6 = g_408e48;\n
    v7 = g_408e4c;\n
    v8 = 3;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = 0;\n
    v0 = &v1;\n
    if (cgc_marshal_rpc_msg(&v3, &v2) >= 0)\n
    {\n
        v0 = &v1;\n
        if (cgc_marshal_key(&v16, &v2) >= 0)\n
        {\n
            v0 = 0x8000 - v1;\n
            if (cgc__rpc_send(&__rpc, &__buf) >= 0)\n
            {\n
                v0 = 0x8000;\n
                v19 = cgc__rpc_recv(&__rpc, &__buf);\n
                if (v19 >= 0)\n
                {\n
                    v2 = &__buf;\n
                    v1 = v19;\n
                    v0 = &v1;\n
                    if (cgc_unmarshal_rpc_msg(&v13, &v2) >= 0 && *(&v13) == v3)\n
                    {\n
                        v0 = &v1;\n
                        if (cgc_unmarshal_result(v15, &v2) >= 0)\n
                            return v15;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    cgc__terminate();\n
    return cgc_db_next();\n
}\n
", "4210048:cgc_db_next": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int __buf;\n
extern unsigned int __rpc;\n
extern unsigned int g_408e44;\n
extern unsigned int g_408e48;\n
extern unsigned int g_408e4c;\n
\n
int cgc_db_next(unsigned int v15)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    unsigned int v3;  // [bp-0x74]\n
    void* v4;  // [bp-0x70]\n
    unsigned int v5;  // [bp-0x6c]\n
    unsigned int v6;  // [bp-0x68]\n
    unsigned int v7;  // [bp-0x64]\n
    unsigned int v8;  // [bp-0x60]\n
    void* v9;  // [bp-0x5c]\n
    void* v10;  // [bp-0x58]\n
    void* v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x44]\n
    unsigned int v14;  // [bp-0x10]\n
    char v16;  // [bp+0x8]\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
\n
    v14 = v17;\n
    v1 = 0x8000;\n
    v2 = &__buf;\n
    v18 = g_408e44;\n
    g_408e44 = g_408e44 + 1;\n
    v3 = v18;\n
    v4 = 0;\n
    v5 = 2;\n
    v6 = g_408e48;\n
    v7 = g_408e4c;\n
    v8 = 4;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = 0;\n
    v0 = &v1;\n
    if (cgc_marshal_rpc_msg(&v3, &v2) >= 0)\n
    {\n
        v0 = &v1;\n
        if (cgc_marshal_key(&v16, &v2) >= 0)\n
        {\n
            v0 = 0x8000 - v1;\n
            if (cgc__rpc_send(&__rpc, &__buf) >= 0)\n
            {\n
                v0 = 0x8000;\n
                v19 = cgc__rpc_recv(&__rpc, &__buf);\n
                if (v19 >= 0)\n
                {\n
                    v2 = &__buf;\n
                    v1 = v19;\n
                    v0 = &v1;\n
                    if (cgc_unmarshal_rpc_msg(&v13, &v2) >= 0 && *(&v13) == v3)\n
                    {\n
                        v0 = &v1;\n
                        if (cgc_unmarshal_result(v15, &v2) >= 0)\n
                            return v15;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    cgc__terminate();\n
    return cgc_db_prev();\n
}\n
", "4210416:cgc_db_prev": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int __buf;\n
extern unsigned int __rpc;\n
extern unsigned int g_408e44;\n
extern unsigned int g_408e48;\n
extern unsigned int g_408e4c;\n
\n
int cgc_db_prev(unsigned int v15)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    unsigned int v3;  // [bp-0x74]\n
    void* v4;  // [bp-0x70]\n
    unsigned int v5;  // [bp-0x6c]\n
    unsigned int v6;  // [bp-0x68]\n
    unsigned int v7;  // [bp-0x64]\n
    unsigned int v8;  // [bp-0x60]\n
    void* v9;  // [bp-0x5c]\n
    void* v10;  // [bp-0x58]\n
    void* v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x44]\n
    unsigned int v14;  // [bp-0x10]\n
    char v16;  // [bp+0x8]\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
\n
    v14 = v17;\n
    v1 = 0x8000;\n
    v2 = &__buf;\n
    v18 = g_408e44;\n
    g_408e44 = g_408e44 + 1;\n
    v3 = v18;\n
    v4 = 0;\n
    v5 = 2;\n
    v6 = g_408e48;\n
    v7 = g_408e4c;\n
    v8 = 5;\n
    v9 = 0;\n
    v10 = 0;\n
    v11 = 0;\n
    v12 = 0;\n
    v0 = &v1;\n
    if (cgc_marshal_rpc_msg(&v3, &v2) >= 0)\n
    {\n
        v0 = &v1;\n
        if (cgc_marshal_key(&v16, &v2) >= 0)\n
        {\n
            v0 = 0x8000 - v1;\n
            if (cgc__rpc_send(&__rpc, &__buf) >= 0)\n
            {\n
                v0 = 0x8000;\n
                v19 = cgc__rpc_recv(&__rpc, &__buf);\n
                if (v19 >= 0)\n
                {\n
                    v2 = &__buf;\n
                    v1 = v19;\n
                    v0 = &v1;\n
                    if (cgc_unmarshal_rpc_msg(&v13, &v2) >= 0 && *(&v13) == v3)\n
                    {\n
                        v0 = &v1;\n
                        if (cgc_unmarshal_result(v15, &v2) >= 0)\n
                            return v15;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    cgc__terminate();\n
    return cgc_marshal_result_status();\n
}\n
", "4210784:cgc_marshal_result_status": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_result_status(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4210825:sub_404089": null, "4210832:cgc_unmarshal_result_status": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_result_status(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4210873:sub_4040b9": null, "4210880:cgc_marshal_key": "int cgc_marshal_key(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // esi\n
    char *v4;  // edi, Other Possible Types: unsigned int\n
    char *v5;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    *(v3)->field_0 = __buildin_bswap32(*(v0));\n
    *(v1) = *(v1) - 4;\n
    v4 = *(v3) + 1;\n
    *(v3) = &v4;\n
    if (*(-1) > 200)\n
        return -1;\n
    if (!*(-1))\n
    {\n
LABEL_404130:\n
        return 0;\n
    }\n
    v5 = 0;\n
    while (*(v1))\n
    {\n
        *(v4) = *((*(3) + v5));\n
        *(v1) = *(v1) - 1;\n
        v4 = &*(v3)->field_0 + 1;\n
        *(v3) = v4;\n
        v5 += 1;\n
        if (v5 >= *(-1))\n
            goto LABEL_404130;\n
    }\n
}\n
", "4210999:sub_404137": null, "4211008:cgc_unmarshal_key": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_unmarshal_key(struct_0 *v1, struct struct_1 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x14], Other Possible Types: char\n
    unsigned int *v2;  // edi\n
    struct struct_1 **v4;  // ebp\n
    struct_0 *v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    if (*(v2) < 4)\n
        return -1;\n
    v4 = a0;\n
    v5 = v1;\n
    v5->field_0 = __buildin_bswap32(*(&*(a0)));\n
    *(v2) = *(v2) - 4;\n
    *(a0) = *(a0) + 4;\n
    if (*(&v0) > 200)\n
        return -1;\n
    v0 = v5->field_0;\n
    v6 = cgc_calloc(*(&v0), 1);\n
    v5->field_4 = v6;\n
    if (!v6)\n
    {\n
        if (v0)\n
        {\n
LABEL_404200:\n
            cgc__terminate();\n
            return cgc_marshal_record();\n
        }\n
        v7 = cgc_malloc(8);\n
        v5->field_4 = v7;\n
        if (!v7)\n
            goto LABEL_404200;\n
    }\n
    if (!v5->field_0)\n
        return 0;\n
    v8 = 0;\n
    do\n
    {\n
        if (!*(v2))\n
            return -1;\n
        v5->field_4[v8].field_0 = *(v4)->field_0;\n
        *(v2) = *(v2) - 1;\n
        *(v4) = *(v4) + 1;\n
        v8 += 1;\n
    } while (v8 < v5->field_0);\n
}\n
", "4211216:cgc_marshal_record": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_2 *field_4;\n
    unsigned int field_8;\n
    struct struct_2 *field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_marshal_record(struct_1 *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // edx\n
    struct_1 *v4;  // esi\n
    unsigned int v5;  // edi\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // edi, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    char *v10;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4->field_0);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3) + 1;\n
    *(v3) = &v7;\n
    v5 = v4->field_0;\n
    if (v5 > 200)\n
        return -1;\n
    if (v5)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v7) = v4->field_4[v6].field_0;\n
            *(v1) = *(v1) - 1;\n
            v7 = &*(v3)->field_0 + 1;\n
            *(v3) = v7;\n
            v6 += 1;\n
        } while (v6 < v4->field_0);\n
    }\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v7) = __buildin_bswap32(v4->field_8);\n
    *(v1) = *(v1) - 4;\n
    v8 = *(v3) + 1;\n
    *(v3) = &v8;\n
    v9 = v4->field_8;\n
    if (v9 > 0x400)\n
    {\n
        return -1;\n
    }\n
    else if (!v9)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        while (true)\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v8) = v4->field_c[v10].field_0;\n
            *(v1) = *(v1) - 1;\n
            v8 = &*(v3)->field_0 + 1;\n
            *(v3) = v8;\n
            v10 += 1;\n
            if (v10 >= v4->field_8)\n
                return 0;\n
        }\n
    }\n
}\n
", "4211405:sub_4042cd": null, "4211408:cgc_unmarshal_record": "typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_unmarshal_record(struct_1 *v2, struct struct_0 **a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // edi\n
    unsigned int *v4;  // edi\n
    struct_1 *v5;  // ebp\n
    unsigned int v6;  // eax\n
    struct struct_0 **v7;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
    struct struct_0 **v11;  // ebx\n
\n
    v1 = v3;\n
    v4 = a1;\n
    v5 = v2;\n
    v6 = cgc_unmarshal_key(v2, a0, v4);\n
    if (v6 < 0)\n
    {\n
        return v6;\n
    }\n
    else if (*(v4) < 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v7 = a0;\n
        v5->field_8 = __buildin_bswap32(*(&*(v7)));\n
        *(v4) = *(v4) - 4;\n
        *(v7) = *(v7) + 4;\n
        if (*(&v0) > 0x400)\n
            return -1;\n
        v0 = v5->field_8;\n
        v8 = cgc_calloc(*(&v0), 1);\n
        v5->field_c = v8;\n
        if (!v8)\n
        {\n
            if (v0)\n
            {\n
LABEL_4043ae:\n
                cgc__terminate();\n
                return cgc_marshal_result();\n
            }\n
            v9 = cgc_malloc(8);\n
            v5->field_c = v9;\n
            if (!v9)\n
                goto LABEL_4043ae;\n
        }\n
        if (!v5->field_8)\n
            return 0;\n
        v10 = 0;\n
        v11 = a0;\n
        do\n
        {\n
            if (!*(v4))\n
                return -1;\n
            v5->field_c[v10].field_0 = *(v11)->field_0;\n
            *(v4) = *(v4) - 1;\n
            *(v11) = *(v11) + 1;\n
            v10 += 1;\n
        } while (v10 < v5->field_8);\n
    }\n
}\n
", "4211648:cgc_marshal_result": "int cgc_marshal_result(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ebp\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edi\n
    unsigned int v4[3];  // esi\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6;  // ecx\n
    void* v7;  // edi, Other Possible Types: unsigned int\n
    void* v8;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(a1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v5[1] = __buildin_bswap32(v4[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v6 = v4[1];\n
    if (v6 > 1)\n
        return -1;\n
    if (!v6)\n
        return 0;\n
    v7 = 0;\n
    v8 = 0;\n
    do\n
    {\n
        v2 = cgc_marshal_record(v4[2] + v7, a0, a1);\n
        if (v2 < 0)\n
            return v2;\n
        v8 += 1;\n
        v7 += 16;\n
    } while (v8 < v4[1]);\n
}\n
", "4211810:sub_404462": null, "4211824:cgc_unmarshal_result": "int cgc_unmarshal_result(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edi\n
    unsigned int v4[3];  // ebp\n
    unsigned int v5[2];  // ecx\n
    unsigned int v6;  // edi\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8[3];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // ecx\n
    void* v10;  // edi, Other Possible Types: unsigned int\n
    unsigned int v11[3];  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v0[0] = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v6 = v4[1];\n
    if (v6 > 1)\n
        return -1;\n
    v7 = cgc_calloc(v6, 16);\n
    v8 = v0;\n
    v8[2] = v7;\n
    if (!v7)\n
    {\n
        if (v6)\n
        {\n
LABEL_404575:\n
            cgc__terminate();\n
            return cgc__rpc_recv();\n
        }\n
        v7 = cgc_malloc(8);\n
        v8 = v0;\n
        *((v8 + 8)) = v7;\n
        if (!v7)\n
            goto LABEL_404575;\n
    }\n
    if (!*((v8 + 4)))\n
        return 0;\n
    v2 = cgc_unmarshal_record(v7, a0, v1);\n
    if (v2 < 0)\n
        return v2;\n
    v9 = 16;\n
    v10 = 0;\n
    v11 = v0;\n
    while (true)\n
    {\n
        v10 += 1;\n
        if (v10 >= *((v11 + 4)))\n
            break;\n
        v2 = cgc_unmarshal_record(v9 + *((v11 + 8)), a0, v1);\n
        v11 = v0;\n
        v9 += 16;\n
        if (v2 < 0)\n
            return v2;\n
    }\n
}\n
", "4212096:cgc__rpc_recv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc__rpc_recv(struct_0 *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    struct_0 *v4;  // edi\n
    unsigned int v6;  // eax\n
\n
    v4 = v3;\n
    v0 = &v1;\n
    if (cgc_receive(v4->field_4, &v2, 4))\n
    {\n
        return -1;\n
    }\n
    else if (*(&v1) != 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v6 = *(&v2);\n
        if (v6 < 0)\n
        {\n
            return -1;\n
        }\n
        else if (v6 > a1)\n
        {\n
            return -1;\n
        }\n
        else\n
        {\n
            v0 = &v1;\n
            if (!cgc_receive(v4->field_4, a0, v6))\n
                return (*(&v1) == -1 ? -1 : *(&v2));\n
            return -1;\n
        }\n
    }\n
}\n
", "4212219:sub_4045fb": null, "4212224:cgc__rpc_send": "int cgc__rpc_send(unsigned int *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int *v4;  // esi\n
\n
    v4 = v3;\n
    v1 = a1;\n
    v0 = &v2;\n
    if (cgc_transmit(*(v4), &v1, 4))\n
    {\n
        return -1;\n
    }\n
    else if (*(&v2) != 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v0 = &v2;\n
        if (!cgc_transmit(*(v4), a0, v1))\n
            return -(*(&v2) != v1);\n
        return -1;\n
    }\n
}\n
", "4212344:sub_404678": null, "4212352:cgc_read_until": "int cgc_read_until(unsigned int v2, unsigned int a0, char *a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    char *v3;  // ebp\n
    char *v4;  // edi, Other Possible Types: unsigned int\n
    char *v5;  // esi\n
\n
    v3 = a1;\n
    v4 = 0;\n
    if (a1)\n
    {\n
        while (true)\n
        {\n
            v5 = a0 + v4;\n
            v0 = &v1;\n
            if (cgc_receive(v2, v5, 1))\n
                break;\n
            if (*(&v1) != 1)\n
                break;\n
            if (*(v5) == a2)\n
                break;\n
            v4 += 1;\n
            if (v3 == v4)\n
            {\n
                v4 = v3;\n
                break;\n
            }\n
        }\n
    }\n
    *((a0 + v4)) = 0;\n
    return a0;\n
}\n
", "4212456:sub_4046e8": null, "4212464:cgc_list": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_2 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_2;\n
\n
int cgc_list()\n
{\n
    unsigned int v0;  // [bp-0x1038]\n
    unsigned int v1;  // [bp-0x1034]\n
    char v2;  // [bp-0x1030]\n
    char v3;  // [bp-0x102c]\n
    char v4;  // [bp-0x1028]\n
    unsigned int v5;  // [bp-0x1024]\n
    void* v6;  // [bp-0x101c]\n
    char v7;  // [bp-0x1018]\n
    char v8;  // [bp-0x1014]\n
    char v9;  // [bp-0x1010]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v17;  // [bp+0x0]\n
    char *v18;  // [bp+0x4], Other Possible Types: unsigned int\n
    void* v19;  // [bp+0x8], Other Possible Types: unsigned int\n
    struct_0 *v20;  // [bp+0xc], Other Possible Types: char\n
    unsigned int v21;  // [bp+0x10]\n
    struct_1 *v22;  // [bp+0x14]\n
    unsigned int v23;  // [bp+0x18]\n
    char v24;  // [bp+0x1c]\n
    char v25;  // [bp+0x20]\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // edi\n
    unsigned int v31;  // esi\n
    unsigned int v32[2];  // esi\n
    unsigned int v33;  // ecx\n
    unsigned int v34;  // edx\n
    unsigned int v35;  // ecx\n
    unsigned int v36;  // eax\n
    struct_1 *v37;  // edi, Other Possible Types: unsigned int\n
\n
    v16 = v29;\n
    v15 = v30;\n
    v14 = v31;\n
    v9 = 0;\n
    v6 = 0;\n
    v1 = *(&v7);\n
    v0 = v6;\n
    cgc_db_next(&v3);\n
    if (*(&v2))\n
    {\n
        v14 = &v24;\n
        v20 = &v21;\n
        v19 = cgc_strlen(v17);\n
        v18 = &v24;\n
        v17 = 1;\n
        return cgc_transmit(v18, v19, v20);\n
    }\n
    v37 = *(&v4);\n
    v5 = \"%s%s (Price: %d.%02d, Count: %d)\\n
\";\n
    while (true)\n
    {\n
        v14 = &v8;\n
        v17 = *((v37 + 4));\n
        if (cgc_strlen(v17) + cgc_strlen(v17) - 4067 < -4097)\n
            break;\n
        v32 = *((v37 + 12));\n
        v33 = v32[1];\n
        v34 = (v33 * 1374389535 >> 32 >> 5) + (v33 * 1374389535 >> 32 >> 31);\n
        v35 = v33 - v34 * 100;\n
        v36 = -(v35);\n
        if (!(v35) < 0)\n
            v36 = v35;\n
        v16 = v32[0];\n
        v15 = v36;\n
        v14 = v34;\n
        v13 = *((v37 + 4));\n
        v12 = &v8;\n
        v11 = *(&v20);\n
        v10 = &v8;\n
        cgc_sprintf(v18, v19);\n
        v23 = *((v37 + 4));\n
        v22 = *(v37);\n
        v21 = &v25;\n
        cgc_db_next(v17);\n
        v37 = v22;\n
        if (*(&v20))\n
            break;\n
    }\n
}\n
", "4212736:cgc_buy": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_2 *field_c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_buy()\n
{\n
    unsigned int v0;  // [bp-0x10c]\n
    unsigned int v1;  // [bp-0x108]\n
    unsigned int v2;  // [bp-0x104]\n
    struct_0 *v3;  // [bp-0xf0]\n
    unsigned int v4;  // [bp-0xec]\n
    struct_0 *v5;  // [bp-0xe8]\n
    char v6;  // [bp-0xe4]\n
    char v7;  // [bp-0xe0]\n
    char v8;  // [bp-0xd8]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    struct_0 *v19;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v20;  // eax\n
    unsigned int *v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // eax\n
    unsigned int v25;  // edi\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // eax\n
\n
    v11 = v16;\n
    v10 = v17;\n
    v9 = v18;\n
    v19 = 0;\n
    do\n
    {\n
        v3 = &v6;\n
        if (cgc_receive(0, &(&v8)[v19], 1))\n
        {\n
LABEL_404855:\n
            (&v8)[v19] = 0;\n
            v4 = cgc_strlen(&v8) + 1;\n
            v5 = &v8;\n
            cgc_db_lookup(&v6);\n
            if (v5)\n
            {\n
                v23 = \"Item not found\\n
\";\n
                goto LABEL_40489a;\n
            }\n
            else\n
            {\n
                v20 = *(&v7);\n
                v21 = v20->field_c;\n
                v22 = *(v21);\n
                if (v22)\n
                {\n
                    *(v21) = v22 - 1;\n
                    if (v22 == 1)\n
                    {\n
                        v27 = cgc_db_delete(&v6);\n
                        goto LABEL_4048a5;\n
                    }\n
                    else\n
                    {\n
                        v25 = v20->field_0;\n
                        v26 = v20->field_4;\n
                        v2 = v20->field_8;\n
                        v1 = v26;\n
                        v0 = v25;\n
                        v27 = cgc_db_insert(&v6);\n
                        goto LABEL_4048a5;\n
                    }\n
                }\n
                else\n
                {\n
                    v23 = \"Not enought items\\n
\";\n
LABEL_40489a:\n
                    v27 = cgc_fdprintf(1, v23);\n
                    goto LABEL_4048a5;\n
                }\n
            }\n
        }\n
        if (*(&v6) != 1)\n
            goto LABEL_404855;\n
        if ((&v8)[v19] == 10)\n
            goto LABEL_404855;\n
        v19 += 1;\n
    } while (v19 != 200);\n
    v19 = 200;\n
LABEL_4048a5:\n
    return v27;\n
}\n
", "4212996:sub_404904": null, "4213008:cgc_sell": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_sell()\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    char *v1;  // [bp-0x94]\n
    unsigned int v2;  // [bp-0x90]\n
    struct_0 *v3;  // [bp-0x80]\n
    char v4;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x70]\n
    unsigned int v6;  // [bp-0x6c]\n
    struct_0 *v7;  // [bp-0x68]\n
    char *v8;  // [bp-0x60]\n
    unsigned int v9;  // [bp-0x5c]\n
    unsigned int v10;  // [bp-0x58]\n
    char v11;  // [bp-0x50]\n
    char v12;  // [bp-0x1c]\n
    char v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // esi\n
    char *v22;  // edi\n
    char *v23;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v24;  // edi\n
    char *v25;  // esi\n
    unsigned int v26;  // edi\n
    char *v27;  // esi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edi\n
    unsigned int v30;  // ebx\n
\n
    v16 = v18;\n
    v15 = v19;\n
    v14 = v20;\n
    v23 = 0;\n
    v21 = cgc_malloc(200);\n
    do\n
    {\n
        v22 = v21 + v23;\n
        v3 = &v11;\n
        if (cgc_receive(0, v22, 1))\n
        {\n
LABEL_404975:\n
            v8 = v21;\n
            *((v21 + v23)) = 0;\n
            v24 = 0;\n
            do\n
            {\n
                v25 = &v11;\n
                v3 = &v4;\n
                if (cgc_receive(0, v25, 1))\n
                {\n
LABEL_4049c1:\n
                    (&v11)[v24] = 0;\n
                    v10 = cgc_strtol(&v11, NULL, 10);\n
                    v26 = 0;\n
                    while (true)\n
                    {\n
                        v27 = &v11;\n
                        v3 = &v4;\n
                        if (cgc_receive(0, v27, 1))\n
                            break;\n
                        if (*(&v4) != 1)\n
                            break;\n
                        if (*(v27) == 10)\n
                            break;\n
                        v26 += 1;\n
                        if (v26 == 50)\n
                        {\n
                            v26 = 50;\n
                            break;\n
                        }\n
                    }\n
                }\n
                if (*(&v4) != 1)\n
                    goto LABEL_4049c1;\n
                if (*(v25) == 10)\n
                    goto LABEL_4049c1;\n
                v24 += 1;\n
            } while (v24 != 50);\n
            v24 = 50;\n
            goto LABEL_4049c1;\n
        }\n
        if (*(&v11) != 1)\n
            goto LABEL_404975;\n
        if (*(v22) == 10)\n
            goto LABEL_404975;\n
        v23 += 1;\n
    } while (v23 != 200);\n
    v23 = 200;\n
    (&v11)[v26] = 0;\n
    v9 = cgc_strtoul(&v11, NULL, 10);\n
    v4 = cgc_strlen(v5) + 1;\n
    v5 = v8;\n
    v6 = 8;\n
    v7 = &v9;\n
    v2 = v6;\n
    v1 = v5;\n
    v0 = v4;\n
    v28 = *(&v13);\n
    v29 = v14;\n
    v30 = v15;\n
    return cgc_db_insert(&v12);\n
}\n
", "4213381:sub_404a85": null, "4213392:cgc_menu": "int cgc_menu()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0xd]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp-0x4]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // esi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ebx\n
\n
    v4 = v6;\n
    v3 = v7;\n
    cgc_fdprintf(1, \"\\n
Please make a selection:\\n
\\ta) List products\\n
\\tb) Buy a product\\n
\\tc) Sell a product\\n
\");\n
    v0 = &v2;\n
    v9 = v3;\n
    v10 = v4;\n
    return (!(*(&v2) ^ 1) && !cgc_receive(0, &v1, 1) ? 0 : v1);\n
}\n
", "4213478:sub_404ae6": null, "4213488:cgc_init_db": "extern char g_408d8c;\n
extern unsigned int g_408d94;\n
extern char g_408d98;\n
extern unsigned int g_408da0;\n
extern char g_408da4;\n
extern unsigned int g_408dac;\n
extern char g_408db0;\n
extern unsigned int g_items;\n
\n
int cgc_init_db()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3[8];  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    char v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x18]\n
    char v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v12;  // [bp-0x4]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ebx\n
\n
    v12 = v14;\n
    v11 = v15;\n
    v10 = v16;\n
    cgc_memset(v3, 0, 16);\n
    *(v3) = cgc_strlen(g_items) + 1;\n
    v4 = g_items;\n
    v5 = 8;\n
    v6 = \"\\n
\";\n
    cgc_db_insert(&v7);\n
    v2 = cgc_strlen(g_408d94) + 1;\n
    *(v3) = g_408d94;\n
    v4 = 8;\n
    v5 = &g_408d98;\n
    cgc_db_insert(&v7);\n
    v1 = cgc_strlen(g_408da0) + 1;\n
    v2 = g_408da0;\n
    v3 = 8;\n
    v4 = \"\\n
\";\n
    cgc_db_insert(&v7);\n
    v0 = cgc_strlen(g_408dac) + 1;\n
    v2 = 8;\n
    v3 = &g_408db0;\n
    v17 = *(&v7);\n
    v18 = *(&v8);\n
    v19 = *(&v9);\n
    return cgc_db_insert(&v7);\n
}\n
", "4213854:sub_404c5e": null, "4213856:main": "int main()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    void* v5;  // ecx, Other Possible Types: unsigned int\n
\n
    cgc_database_init(4, 5);\n
    cgc_init_db();\n
    cgc_fdprintf(1, \"Welcome to eCommerce v0.1\\n
\");\n
    v2 = \"Invalid selection\\n
\";\n
    while (true)\n
    {\n
        cgc_fdprintf(1, \"\\n
Please make a selection:\\n
\\ta) List products\\n
\\tb) Buy a product\\n
\\tc) Sell a product\\n
\");\n
        v0 = &v3;\n
        v5 = v1;\n
        if (!(!(*(&v3) != 1) && !(cgc_receive(0, &v1, 1))))\n
            v5 = 0;\n
        if ([D] x86g_calculate_condition(0xe<32>, 0x4<32>, Conv(8->32, cl<1>), 0x61<32>, 0x0<32>))\n
        {\n
            if ([D] x86g_calculate_condition(0xe<32>, 0x4<32>, Conv(8->32, cl<1>), 0x61<32>, 0x0<32>))\n
            {\n
                cgc_list();\n
                continue;\n
            }\n
            else if (!v5)\n
            {\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 98)\n
            {\n
                cgc_buy();\n
            }\n
            else if (v5 == 99)\n
            {\n
                cgc_sell();\n
                continue;\n
            }\n
        }\n
        cgc_fdprintf(1, v2);\n
    }\n
    cgc_database_close();\n
    return 0;\n
}\n
", "4213939:sub_404cb3": null, "4214028:sub_404d0c": null, "4214079:sub_404d3f": null, "4214080:cgc_marshal_msg_type": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_msg_type(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214121:sub_404d69": null, "4214128:cgc_unmarshal_msg_type": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_msg_type(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214169:sub_404d99": null, "4214176:cgc_marshal_reply_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_reply_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214217:sub_404dc9": null, "4214224:cgc_unmarshal_reply_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_reply_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214265:sub_404df9": null, "4214272:cgc_marshal_accept_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_accept_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214313:sub_404e29": null, "4214320:cgc_unmarshal_accept_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_accept_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214361:sub_404e59": null, "4214368:cgc_marshal_reject_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_reject_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214409:sub_404e89": null, "4214416:cgc_unmarshal_reject_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_reject_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214457:sub_404eb9": null, "4214464:cgc_marshal_auth_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_auth_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214505:sub_404ee9": null, "4214512:cgc_unmarshal_auth_stat": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_auth_stat(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214553:sub_404f19": null, "4214560:cgc_marshal_auth_flavor": "extern unsigned int g_ffffffff;\n
\n
int cgc_marshal_auth_flavor(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(a0)->field_0 = __buildin_bswap32(*(v0));\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214601:sub_404f49": null, "4214608:cgc_unmarshal_auth_flavor": "extern unsigned int g_ffffffff;\n
\n
int cgc_unmarshal_auth_flavor(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int *v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    v2 = &g_ffffffff;\n
    if (*(v1) >= 4)\n
    {\n
        *(v0) = __buildin_bswap32(*(a0)->field_0);\n
        *(v1) = *(v1) - 4;\n
        *(v2) = *(v2) + 4;\n
        v2 = 0;\n
    }\n
    return v2;\n
}\n
", "4214649:sub_404f79": null, "4214656:cgc_marshal_opaque_auth": "int cgc_marshal_opaque_auth(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // esi\n
    unsigned int v4[2];  // edi\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    char *v6;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    *(v3)->field_0 = __buildin_bswap32(v0[0]);\n
    *(v1) = *(v1) - 4;\n
    v4 = *(v3);\n
    *(v3) = &v4[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v0[1]);\n
    *(v1) = *(v1) - 4;\n
    v5 = &*(v3)->field_4;\n
    *(v3) = &v5;\n
    if (*(3) <= 400)\n
    {\n
        if (!*(3))\n
        {\n
LABEL_405001:\n
            return 0;\n
        }\n
        v6 = 0;\n
        while (*(v1))\n
        {\n
            *(v5) = *((*(7) + v6));\n
            *(v1) = *(v1) - 1;\n
            v5 = &*(v3)->field_0 + 1;\n
            *(v3) = v5;\n
            v6 += 1;\n
            if (v6 >= *(3))\n
                goto LABEL_405001;\n
        }\n
    }\n
}\n
", "4214789:sub_405005": null, "4214800:cgc_unmarshal_opaque_auth": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_unmarshal_opaque_auth(struct_1 *v1, struct struct_0 **a0, unsigned int *a1)\n
{\n
    char v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v2;  // edi\n
    struct struct_0 **v4;  // ebp\n
    struct_1 *v5;  // esi\n
    struct_0 *v6;  // edx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    if (*(v2) < 4)\n
        return -1;\n
    v4 = a0;\n
    v5 = v1;\n
    v5->field_0 = __buildin_bswap32(*(&*(a0)->field_0));\n
    *(v2) = *(v2) - 4;\n
    v6 = *(a0);\n
    *(a0) = &v6->field_4;\n
    if (*(v2) < 4)\n
        return -1;\n
    v5->field_4 = __buildin_bswap32(v6->field_4);\n
    *(v2) = *(v2) - 4;\n
    *(v4) = &*(v4)->field_4;\n
    if (*(&v0) > 400)\n
        return -1;\n
    v0 = v5->field_4;\n
    v7 = cgc_calloc(*(&v0), 1);\n
    v5->field_8 = v7;\n
    if (!v7)\n
    {\n
        if (v0)\n
        {\n
LABEL_4050f1:\n
            cgc__terminate();\n
            return cgc_marshal_call_body();\n
        }\n
        v8 = cgc_malloc(8);\n
        v5->field_8 = v8;\n
        if (!v8)\n
            goto LABEL_4050f1;\n
    }\n
    if (!v5->field_4)\n
        return 0;\n
    v9 = 0;\n
    do\n
    {\n
        if (!*(v2))\n
            return -1;\n
        v5->field_8[v9].field_0 = *(v4)->field_0;\n
        *(v2) = *(v2) - 1;\n
        *(v4) = &*(v4)->padding_1;\n
        v9 += 1;\n
    } while (v9 < v5->field_4);\n
}\n
", "4215040:cgc_marshal_call_body": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    struct struct_2 *field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    struct struct_2 *field_24;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_marshal_call_body(struct_1 *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // edx\n
    struct_1 *v4;  // esi\n
    unsigned int v5;  // edi\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char *v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // edi, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    char *v10;  // ebx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4->field_0);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_4);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_8);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_c);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_10);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_14);\n
    *(v1) = *(v1) - 4;\n
    v7 = &*(v3)->field_4;\n
    *(v3) = &v7;\n
    v5 = v4->field_14;\n
    if (v5 > 400)\n
        return -1;\n
    if (v5)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v7) = v4->field_18[v6].field_0;\n
            *(v1) = *(v1) - 1;\n
            v7 = &*(v3)->field_0 + 1;\n
            *(v3) = v7;\n
            v6 += 1;\n
        } while (v6 < v4->field_14);\n
    }\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v7) = __buildin_bswap32(v4->field_1c);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    *(v3)->field_4 = __buildin_bswap32(v4->field_20);\n
    *(v1) = *(v1) - 4;\n
    v8 = &*(v3)->field_4;\n
    *(v3) = &v8;\n
    v9 = v4->field_20;\n
    if (v9 > 400)\n
    {\n
        return -1;\n
    }\n
    else if (!v9)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        while (true)\n
        {\n
            if (!*(v1))\n
                return -1;\n
            *(v8) = v4->field_24[v10].field_0;\n
            *(v1) = *(v1) - 1;\n
            v8 = &*(v3)->field_0 + 1;\n
            *(v3) = v8;\n
            v10 += 1;\n
            if (v10 >= v4->field_20)\n
                return 0;\n
        }\n
    }\n
}\n
", "4215382:sub_405256": null, "4215392:cgc_unmarshal_call_body": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unmarshal_call_body(unsigned int v0[4], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // ebp\n
    unsigned int v4[4];  // edi\n
    unsigned int v5[2];  // ecx\n
    struct_1 *v6;  // ecx\n
    struct_1 *v7;  // ecx\n
    unsigned int v8;  // eax\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4[0] = __buildin_bswap32(*(a0)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(a0);\n
    *(a0) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    v6 = *(v3);\n
    *(v3) = &v6->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[2] = __buildin_bswap32(v6->field_4);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3);\n
    *(v3) = &v7->field_4;\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[3] = __buildin_bswap32(v7->field_4);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v2 = cgc_unmarshal_opaque_auth(v4 + 1, v3, v1);\n
    if (v2 >= 0)\n
    {\n
        v8 = cgc_unmarshal_opaque_auth(&v4[1 + 3], v3, v1);\n
        v2 = v8 >> 31 & v8;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4215581:sub_40531d": null, "4215584:cgc_marshal_accepted_reply": "int cgc_marshal_accepted_reply(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // esi\n
    unsigned int v4[2];  // edi\n
    char *v5;  // ebx, Other Possible Types: unsigned int\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    unsigned int v7[2];  // edi\n
    unsigned int v8[2];  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    *(v3)->field_0 = __buildin_bswap32(v0[0]);\n
    *(v1) = *(v1) - 4;\n
    v4 = *(v3);\n
    *(v3) = &v4[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v0[1]);\n
    *(v1) = *(v1) - 4;\n
    v6 = &*(v3)->field_4;\n
    *(v3) = &v6;\n
    if (*(3) <= 400)\n
    {\n
        if (!*(3))\n
        {\n
LABEL_4053a1:\n
            if (*(v1) < 4)\n
                return -1;\n
            *(v6) = __buildin_bswap32(*(11));\n
            *(v1) = *(v1) - 4;\n
            v7 = *(v3);\n
            *(v3) = &v7[1];\n
            if (*(11) != 2)\n
                return 0;\n
            if (*(v1) < 4)\n
                return -1;\n
            v7[1] = __buildin_bswap32(*(15));\n
            *(v1) = *(v1) - 4;\n
            v8 = *(v3);\n
            *(v3) = &v8[1];\n
            if (*(v1) < 4)\n
                return -1;\n
            v8[1] = __buildin_bswap32(*(19));\n
            *(v1) = *(v1) - 4;\n
            *(v3) = &*(v3)->field_4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            while (*(v1))\n
            {\n
                *(v6) = *((*(7) + v5));\n
                *(v1) = *(v1) - 1;\n
                v6 = &*(v3)->field_0 + 1;\n
                *(v3) = v6;\n
                v5 += 1;\n
                if (v5 >= *(3))\n
                    goto LABEL_4053a1;\n
            }\n
        }\n
    }\n
}\n
", "4215799:sub_4053f7": null, "4215808:cgc_unmarshal_accepted_reply": "int cgc_unmarshal_accepted_reply(unsigned int v2[6], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // esi\n
    unsigned int *v5;  // edi\n
    struct struct_0 **v6;  // esi\n
    unsigned int v7[6];  // ebp\n
    unsigned int v8[2];  // ecx\n
    unsigned int v9[2];  // ecx\n
    unsigned int v10;  // eax\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = a1;\n
    v6 = a0;\n
    v7 = v2;\n
    v10 = cgc_unmarshal_opaque_auth(v2, v6, v5);\n
    if (v10 < 0)\n
    {\n
        return v10;\n
    }\n
    else if (*(v5) < 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v7[3] = __buildin_bswap32(*(v6)->field_0);\n
        *(v5) = *(v5) - 4;\n
        v8 = *(v6);\n
        *(v6) = &v8[1];\n
        if (v7[3] != 2)\n
            return 0;\n
        if (*(v5) < 4)\n
            return -1;\n
        v7[4] = __buildin_bswap32(v8[1]);\n
        *(v5) = *(v5) - 4;\n
        v9 = *(v6);\n
        *(v6) = &v9[1];\n
        if (*(v5) < 4)\n
            return -1;\n
        v7[5] = __buildin_bswap32(v9[1]);\n
        *(v5) = *(v5) - 4;\n
        *(v6) = &*(v6)->field_4;\n
    }\n
}\n
", "4215944:sub_405488": null, "4215952:cgc_marshal_rejected_reply": "int cgc_marshal_rejected_reply(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[2];  // esi\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3);\n
    *(v3) = &v7[1];\n
    v5 = v4[0];\n
    if (!v5)\n
    {\n
        if (*(v1) < 4)\n
            return -1;\n
        v7[1] = __buildin_bswap32(v4[1]);\n
        *(v1) = *(v1) - 4;\n
        v7 = *(v3);\n
        *(v3) = v7 + 4;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = v4 + 1;\n
    }\n
    else\n
    {\n
        if (v5 != 1)\n
            return -1;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = &v4[1];\n
    }\n
    *((v7 + 4)) = __buildin_bswap32(*(v6));\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    return 0;\n
}\n
", "4216066:sub_405502": null, "4216080:cgc_unmarshal_rejected_reply": "int cgc_unmarshal_rejected_reply(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[2];  // esi\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // esi, Other Possible Types: unsigned int\n
    unsigned int v7[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4[0] = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v7 = *(v3);\n
    *(v3) = &v7[1];\n
    v5 = v4[0];\n
    if (!v5)\n
    {\n
        if (*(v1) < 4)\n
            return -1;\n
        v4[1] = __buildin_bswap32(v7[1]);\n
        *(v1) = *(v1) - 4;\n
        v7 = *(v3);\n
        *(v3) = v7 + 4;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = v4 + 1;\n
    }\n
    else\n
    {\n
        if (v5 != 1)\n
            return -1;\n
        if (*(v1) < 4)\n
            return -1;\n
        v6 = &v4[1];\n
    }\n
    *(v6) = __buildin_bswap32(*((v7 + 4)));\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    return 0;\n
}\n
", "4216194:sub_405582": null, "4216208:cgc_marshal_reply_body": "int cgc_marshal_reply_body(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // ecx\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[3];  // esi\n
    unsigned int v5[2];  // edi\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (!v4[0])\n
    {\n
        v2 = cgc_marshal_accepted_reply(&v4[1], v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else\n
    {\n
        if (v4[0] != 1)\n
            return -1;\n
        if (*(v1) < 4)\n
            return -1;\n
        v5[1] = __buildin_bswap32(v4[1]);\n
        *(v1) = *(v1) - 4;\n
        v8 = *(v3);\n
        *(v3) = &v8[1];\n
        v6 = v4[1];\n
        if (!v6)\n
        {\n
            if (*(v1) < 4)\n
                return -1;\n
            v8[1] = __buildin_bswap32(v4[2]);\n
            *(v1) = *(v1) - 4;\n
            v8 = *(v3);\n
            *(v3) = v8 + 4;\n
            if (*(v1) < 4)\n
                return -1;\n
            v7 = v4 + 1;\n
        }\n
        else\n
        {\n
            if (v6 != 1)\n
                return -1;\n
            if (*(v1) < 4)\n
                return -1;\n
            v7 = &v4[2];\n
        }\n
        *((v8 + 4)) = __buildin_bswap32(*(v7));\n
        *(v1) = *(v1) - 4;\n
        *(v3) = &*(v3)->field_4;\n
    }\n
    return 0;\n
}\n
", "4216401:sub_405651": null, "4216416:cgc_unmarshal_reply_body": "int cgc_unmarshal_reply_body(unsigned int *v0, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edx\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // esi\n
    unsigned int *v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v4) = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = *(v3) + 1;\n
    v5 = *(v4);\n
    if (!v5)\n
    {\n
        v2 = cgc_unmarshal_accepted_reply(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else if (v5 != 1)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v2 = cgc_unmarshal_rejected_reply(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    return 0;\n
}\n
", "4216528:cgc_marshal_rpc_msg": "int cgc_marshal_rpc_msg(unsigned int v0[2], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edx\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // esi\n
    unsigned int v4[2];  // ecx\n
    unsigned int v5[2];  // edi\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    *(v3)->field_0 = __buildin_bswap32(v4[0]);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v6 = __buildin_bswap32(v4[1]);\n
    v5[1] = __buildin_bswap32(v4[1]);\n
    *(v1) = *(v1) - 4;\n
    *(v3) = &*(v3)->field_4;\n
    v7 = v4[1];\n
    if (!v7)\n
    {\n
        v2 = cgc_marshal_call_body(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else if (v7 != 1)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v2 = cgc_marshal_reply_body(v4 + 1, v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    return 0;\n
}\n
", "4216673:sub_405761": null, "4216688:cgc_unmarshal_rpc_msg": "int cgc_unmarshal_rpc_msg(unsigned int v0[3], struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // esi\n
    unsigned int v2;  // eax\n
    struct struct_0 **v3;  // edx\n
    unsigned int v4[3];  // ecx\n
    unsigned int v5[2];  // edi\n
    unsigned int v6[2];  // edi\n
    unsigned int v7;  // edi\n
\n
    v1 = a1;\n
    if (*(v1) < 4)\n
        return -1;\n
    v3 = a0;\n
    v4 = v0;\n
    v4[0] = __buildin_bswap32(*(v3)->field_0);\n
    *(v1) = *(v1) - 4;\n
    v5 = *(v3);\n
    *(v3) = &v5[1];\n
    if (*(v1) < 4)\n
        return -1;\n
    v4[1] = __buildin_bswap32(v5[1]);\n
    *(v1) = *(v1) - 4;\n
    v6 = *(v3);\n
    *(v3) = &v6[1];\n
    if (!v4[1])\n
    {\n
        v2 = cgc_unmarshal_call_body(&v4[2], v3, v1);\n
        if (v2 < 0)\n
            return v2;\n
    }\n
    else if (v4[1] != 1)\n
    {\n
        return -1;\n
    }\n
    else if (*(v1) < 4)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v4[2] = __buildin_bswap32(v6[1]);\n
        *(v1) = *(v1) - 4;\n
        *(v3) = &*(v3)->field_4;\n
        v7 = v4[2];\n
        if (!v7)\n
        {\n
            v2 = cgc_unmarshal_accepted_reply(v4 + 1, v3, v1);\n
            if (v2 < 0)\n
                return v2;\n
        }\n
        else if (v7 != 1)\n
        {\n
            return -1;\n
        }\n
        else\n
        {\n
            v2 = cgc_unmarshal_rejected_reply(v4 + 1, v3, v1);\n
            if (v2 < 0)\n
                return v2;\n
        }\n
    }\n
    return 0;\n
}\n
", "4216896:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}