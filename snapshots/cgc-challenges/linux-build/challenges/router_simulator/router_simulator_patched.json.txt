{"4198400:_init": "extern struct_0 *g_404118;\n
\n
int _init()\n
{\n
    if (g_404118)\n
    {\n
        g_404118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198528:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198544:sub_401090": "int sub_401090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198550:sub_401096": null, "4198560:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198603:sub_4010cb": null, "4198604:sub_4010cc": "int sub_4010cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198608:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198612:sub_4010d4": null, "4198624:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 12351;\n
    v6 = v5 + 42;\n
    v7 = v5 + 42;\n
    if (v7 == v6)\n
        return v5 + 42;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198675:sub_401113": "int sub_401113()\n
{\n
}\n
", "4198681:sub_401119": "int sub_401119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198688:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 12287;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 42;\n
    v9 = (v6 + 42 - (v6 + 42) >> 31) + (42 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198759:sub_401167": "int sub_401167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198768:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_404114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_404114)\n
    {\n
        v0 = __dso_handle;\n
        sub_401090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198843:sub_4011bb": "int sub_4011bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198848:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198857:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198861:sub_4011cd": null, "4198864:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (v4)\n
    {\n
        v5 = a0;\n
        if (v5)\n
        {\n
            tmp_2 = v5;\n
            if (!([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>)))\n
            {\n
                v7 = v5 * v4;\n
                v8 = cgc_malloc();\n
                if (v8)\n
                {\n
                    v0 = v7;\n
                    return cgc_memset(v8, 0);\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4198942:sub_40121e": null, "4198944:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4198977:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4198996:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4199012:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4199028:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4199044:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4199058:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4199080:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4199102:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4199124:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4199146:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[4380 + v0];\n
}\n
", "4199171:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4199196:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[4252 + v0];\n
}\n
", "4199221:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4199229:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4199248:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4199267:sub_401363": null, "4199268:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (!v3)\n
    {\n
        return v2;\n
    }\n
    else if (v3[5].field_-14)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = v3 + 6;\n
        cgc_insert_into_flist();\n
        v0 = v0;\n
        v2 = cgc_coalesce();\n
        return v2;\n
    }\n
}\n
", "4199322:sub_40139a": null, "4199324:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_40424c;\n
\n
int cgc_malloc(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned int v5;  // edi\n
    struct_1 *v6;  // edi\n
    struct struct_1 **v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8[6];  // eax\n
    unsigned int v9;  // ebp\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    struct_0 *v12;  // ecx\n
\n
    v3 = v2;\n
    if (!v3)\n
        return 0;\n
    v5 = v3 + 7 & -8;\n
    if (!(v3 & 7))\n
        v5 = v3;\n
    v6 = v5 + 24;\n
    v7 = cgc_get_size_class();\n
    do\n
    {\n
        v9 = *(&(&cgc_free_lists)[4 * v7]);\n
        if (v9)\n
        {\n
            if (*(v9) < v6)\n
            {\n
                v9 = *((v9 + 8));\n
                continue;\n
            }\n
            goto LABEL_40144d;\n
        }\n
        v7 = v7 + 1;\n
    } while (v7 != 32);\n
    v0 = &v1;\n
    if (cgc_allocate(0x40000, 0))\n
        return 0;\n
    v8 = *(&v1);\n
    if (!v8)\n
        return 0;\n
    v8[0] = 0x40000;\n
    v8[1] = 1;\n
    v8[3] = 0;\n
    v8[2] = 0;\n
    v8[5] = 0;\n
    v8[4] = 0;\n
    cgc_insert_into_flist();\n
    v9 = g_40424c;\n
LABEL_40144d:\n
    cgc_remove_from_flist();\n
    v10 = *(v9) - v6;\n
    if (v10 < 25)\n
        return v9 + 24;\n
    v11 = v6 + v9;\n
    *((&v6->field_0 + v9)) = v10;\n
    *(&v6->padding_4[v9]) = 1;\n
    *((8 + &v6->field_0 + v9)) = 0;\n
    *(&v6->padding_c[v9]) = 0;\n
    *(v9) = v6;\n
    *((20 + &v6->field_0 + v9)) = v9;\n
    *((16 + &v6->field_0 + v9)) = *((v9 + 16));\n
    v12 = *((v9 + 16));\n
    if (v12)\n
        v12->field_14 = v11;\n
    *((v9 + 16)) = v11;\n
    cgc_insert_into_flist();\n
}\n
", "4199593:sub_4014a9": null, "4199596:cgc_get_size_class": "extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int *v2;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v2 = &size_class_limits;\n
    while (true)\n
    {\n
        if (*(v2) >= v0)\n
            return v1;\n
        v1 += 1;\n
        v2 += 4;\n
        if (v1 == 32)\n
            return 32;\n
    }\n
}\n
", "4199639:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    while (*(v3) < v1[0])\n
    {\n
        v2 += 1;\n
        v3 += 4;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    v1[1] = 1;\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]);\n
    if (!v4)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
        return &_GLOBAL_OFFSET_TABLE_;\n
    }\n
    v1[2] = v4;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4199742:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // esi\n
    struct_1 *v5;  // edi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    do\n
    {\n
        if (*(v3) >= v1->field_0)\n
        {\n
            v4 = v1->field_c;\n
            if (v4)\n
                v4->field_8 = v1->field_8;\n
            v5 = v1->field_8;\n
            if (v5)\n
                v5->field_c = v4;\n
            if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) == v1)\n
            {\n
                *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v5;\n
                goto LABEL_401593;\n
            }\n
        }\n
        v2 += 1;\n
        v3 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_401593:\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v0;\n
}\n
", "4199841:cgc_coalesce": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
} struct_1;\n
\n
int cgc_coalesce(struct_2 *v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int v2[5];  // eax, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // ecx\n
    unsigned int v5[5];  // eax\n
    unsigned int v6;  // ecx\n
    struct_0 *v7;  // ecx\n
    struct_0 *v8;  // ecx\n
    unsigned int v9[5];  // eax\n
    unsigned int v10[5];  // ecx\n
    struct_0 *v11;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v12;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_14;\n
    if (!v2)\n
        return v2;\n
    v3 = v1->field_10;\n
    if (!v2[1])\n
    {\n
        if (!v3)\n
            return v2;\n
        if (!v3->field_4)\n
            return v2;\n
        cgc_remove_from_flist(v3);\n
        cgc_remove_from_flist(v1);\n
        v1->field_0 = v1->field_0 + v1->field_10->field_0;\n
        cgc_insert_into_flist(v1);\n
        v7 = v1->field_10;\n
        v2 = v7->field_14;\n
        if (v2)\n
            *((v2 + 16)) = v7->field_10;\n
        v11 = v7->field_10;\n
LABEL_40169f:\n
        if (!v11)\n
            return v2;\n
        *((v11 + 20)) = v2;\n
    }\n
    if (v3 && v3->field_4)\n
    {\n
        cgc_remove_from_flist(v2);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v5 = v1->field_14;\n
        v6 = v5[0] + v1->field_0;\n
        v5[0] = v6;\n
        v5[0] = v6 + v1->field_10->field_0;\n
        cgc_insert_into_flist(v5);\n
        v8 = v1->field_10;\n
        v9 = v8->field_14;\n
        if (v9)\n
            v9[4] = v8->field_10;\n
        v12 = v8->field_10;\n
        if (v12)\n
        {\n
            v12->field_14 = &v9[0];\n
            goto LABEL_401651;\n
        }\n
    }\n
    v4 = v1->field_10;\n
    if (!v4)\n
        return v2;\n
    if (v4->field_4)\n
        return v1->field_14;\n
    cgc_remove_from_flist(v2);\n
    cgc_remove_from_flist(v1);\n
    v10 = v1->field_14;\n
    v10[0] = v10[0] + v1->field_0;\n
    cgc_insert_into_flist(v10);\n
LABEL_401651:\n
    v2 = v1->field_14;\n
    if (v2)\n
        *((v2 + 16)) = v1->field_10;\n
    v11 = v1->field_10;\n
    goto LABEL_40169f;\n
}\n
", "4200108:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4200150:sub_4016d6": null, "4200152:cgc_memcpy": "int cgc_memcpy(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4200157:sub_4016dd": null, "4200160:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    char *v1;  // eax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = a0;\n
        v3 += 1;\n
    } while (v2 != v3);\n
    return v0;\n
}\n
", "4200193:sub_401701": null, "4200196:cgc_output_number": "int cgc_output_number(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    int tmp_6;  // tmp #6\n
    char v0;  // [bp-0x1d]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    char v4;  // dl\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // edx\n
    char v12;  // al\n
\n
    v4 = a2;\n
    v5 = a1;\n
    v6 = a0;\n
    v7 = v3;\n
    if (v7 < v6)\n
    {\n
        v2 = v7;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        tmp_6 = (0 CONCAT v7) /m v6;\n
        v2 = tmp_6 >> 32;\n
        v4 = a2;\n
        v1 = cgc_output_number((0 CONCAT v7) /m v6, v6, v5 - 1, a2);\n
    }\n
    if (v5 > 0 && !v1)\n
    {\n
        v10 = v5 - 1;\n
        if (v10)\n
        {\n
            do\n
            {\n
                if (!(v4 & 1))\n
                    v0 = 32;\n
                else\n
                    v0 = 48;\n
                cgc_transmit(1, &v0, 1);\n
                v4 = a2;\n
                v10 -= 1;\n
            } while (v10);\n
        }\n
    }\n
    if (!(v4 & 2))\n
    {\n
        v11 = v2;\n
        v12 = v11 + 87;\n
    }\n
    else\n
    {\n
        v11 = v2;\n
        v12 = v11 + 55;\n
    }\n
    if (v11 < 10)\n
        v12 = v11 + 48;\n
    v0 = v12;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4200412:cgc_printf": "int cgc_printf(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char v6;  // [bp+0x8]\n
    unsigned int v7;  // [bp+0xc]\n
    unsigned int v8;  // [bp+0x10]\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // ebp\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // ebp\n
\n
    v9 = v5;\n
    v2 = &v6;\n
    if (!*(v9))\n
        return 0;\n
    v10 = &v4;\n
    v11 = &v1;\n
    do\n
    {\n
        v15 = v9 + 1;\n
        v5 = v15;\n
        *(&v9) = *(v9);\n
        if (v1 != 37)\n
        {\n
            v1 = v9;\n
            cgc_transmit(1, v11, 1);\n
            v16 = v10;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            while (true)\n
            {\n
                v14 = v15;\n
                while (true)\n
                {\n
                    v15 = v14 + 1;\n
                    v5 = v15;\n
                    v12 = *(v14);\n
                    if (v12 - 49 >= 9)\n
                        break;\n
                    v13 = cgc_strtol(v14, &v5);\n
                    v14 = v5;\n
                }\n
                if (v12 > 99)\n
                {\n
                    if (v12 == 100)\n
                    {\n
                        v17 = v2;\n
                        v2 = v17 + 4;\n
                        if (*(v17) >= 0)\n
                        {\n
                            v18 = &v4;\n
                        }\n
                        else\n
                        {\n
                            v1 = 45;\n
                            v18 = &v4;\n
                            cgc_transmit(1, &v1, 1);\n
                        }\n
LABEL_401998:\n
                        cgc_output_number(v5, *(&v6), v7, v8);\n
                        v11 = &v1;\n
                        v16 = v18;\n
                        goto LABEL_40196b;\n
                    }\n
                    if (v12 == 115)\n
                    {\n
                        v19 = v2;\n
                        v2 = v19 + 4;\n
                        v20 = *(v19);\n
                        v16 = &v4;\n
                        v11 = &v1;\n
                        if (cgc_strlen())\n
                        {\n
                            v21 = 0;\n
                            do\n
                            {\n
                                v1 = *((v20 + v21));\n
                                v0 = v11;\n
                                cgc_transmit(1, v11, 1);\n
                                v21 += 1;\n
                                v11 = &v1;\n
                            } while (v21 < cgc_strlen(v20, v0, 1));\n
                        }\n
                    }\n
                    if (v12 == 120)\n
                    {\n
                        v18 = &v4;\n
                        goto LABEL_4018b9;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v12 == 37)\n
                    {\n
                        v1 = 37;\n
                        goto LABEL_401955;\n
                    }\n
                    if (v12 == 48)\n
                    {\n
                        v3 = 1;\n
                    }\n
                    else\n
                    {\n
                        if (v12 == 88)\n
                        {\n
                            v18 = &v4;\n
LABEL_4018b9:\n
                            v2 += 4;\n
                            goto LABEL_401998;\n
                        }\n
                        v1 = *(v14);\n
LABEL_401955:\n
                        v11 = &v1;\n
                        cgc_transmit(1, &v1, 1);\n
                        v16 = &v4;\n
                        goto LABEL_40196b;\n
                    }\n
                }\n
            }\n
            continue;\n
        }\n
LABEL_40196b:\n
        v10 = v16;\n
        v9 = v5;\n
    } while (*(v9));\n
    return 0;\n
}\n
", "4200898:sub_4019c2": null, "4200900:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // ebp\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    void* v7;  // esi, Other Possible Types: unsigned int\n
\n
    v3 = a0;\n
    v4 = v2;\n
    if (!v4)\n
        return cgc_malloc(v3);\n
    if (!v3)\n
    {\n
        cgc_free(v4);\n
    }\n
    else\n
    {\n
        v5 = cgc_malloc(v3);\n
        if (v5)\n
        {\n
            v7 = v5;\n
            v6 = v4[6].field_-18 - 24;\n
            if (v6 > v3)\n
                v6 = v3;\n
            v0 = v4;\n
            v1 = v6;\n
            cgc_memcpy(v7);\n
            cgc_free(v4);\n
            goto LABEL_401a2e;\n
        }\n
    }\n
    v7 = 0;\n
LABEL_401a2e:\n
    return v7;\n
}\n
", "4201016:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4201040:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    int tmp_13;  // tmp #13\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    if (*(v2))\n
    {\n
        v3 = v2 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return *(v1) - v4;\n
            if (v4 != *(v1))\n
                return *(v1) - v4;\n
            v1 += 1;\n
            tmp_13 = *(v3);\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (tmp_13);\n
    }\n
    return *(v1) - 0;\n
}\n
", "4201086:sub_401a7e": null, "4201088:cgc_strcpy": "int cgc_strcpy(char *v0, char a0[2])\n
{\n
    char v1[2];  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v1[0];\n
    if (!v1[0])\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v1[1]);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4201133:sub_401aad": null, "4201136:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4201154:sub_401ac2": null, "4201156:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // edx\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v3 = a0;\n
        v4 = 0;\n
        while (true)\n
        {\n
            v2[v4] = *((v3 + v4));\n
            if (!*((v3 + v4)))\n
                break;\n
            v4 += 1;\n
            if (v1 == v4)\n
                return v0;\n
        }\n
    }\n
    if (v4 < v1)\n
    {\n
        do\n
        {\n
            v2[v4] = 0;\n
            v4 += 1;\n
        } while (v1 != v4);\n
    }\n
    return v0;\n
}\n
", "4201213:sub_401afd": null, "4201216:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    struct struct_0 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_401b66;\n
                }\n
            }\n
            tmp_7 = *(v4);\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (tmp_7);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_401b66:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4201328:cgc_strtol": "int cgc_strtol()\n
{\n
    char *v0;  // [bp+0x4]\n
    char v1;  // [bp+0x8]\n
    char v2;  // [bp+0xc]\n
    unsigned int v3;  // esi\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
    char *v5;  // edx, Other Possible Types: unsigned int\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char v7;  // bl\n
    char *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edi\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // ebp\n
\n
    v3 = *(&v2);\n
    v4 = *(&v1);\n
    v5 = v0;\n
    if (v3 > 36)\n
    {\n
        v13 = 0;\n
        v6 = v5;\n
    }\n
    else\n
    {\n
        v13 = 0;\n
        v6 = v5;\n
        if (v3 != 1)\n
        {\n
            v8 = v5;\n
            while (true)\n
            {\n
                v7 = *(v8);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v7 != 32)\n
                    break;\n
                v8 += 1;\n
            }\n
            v9 = 0;\n
            *(&v9) = v7 == 45;\n
            v10 = (*((v8 + v9)) == 43) + v9;\n
            v11 = v8 + v10;\n
            if (!v3)\n
            {\n
                v3 = 10;\n
                if (*(v11) == 48)\n
                {\n
                    if ((*((v8 + v10 + 1)) | 32) == 120)\n
                    {\n
                        v11 = v8 + v10 + 2;\n
                        v3 = 16;\n
                    }\n
                    else\n
                    {\n
                        v11 = v8 + v10 + 1;\n
                        v3 = 8;\n
                    }\n
                }\n
            }\n
            else if (v3 == 16)\n
            {\n
                v3 = 16;\n
                if (*(v11) == 48 && (*((v8 + v10 + 1)) | 32) == 120)\n
                    v11 = v8 + v10 + 2;\n
            }\n
            v12 = 0;\n
            v13 = 0;\n
            while (true)\n
            {\n
                v14 = *((v11 + v13));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v15 = v14 - 48;\n
                }\n
                else\n
                {\n
                    v16 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v16 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v15 = v14 + v16 + 10;\n
                }\n
                if (v15 >= v3)\n
                    break;\n
                v12 = v3 * v12 + v15;\n
                v13 += 1;\n
            }\n
            v6 = v11 + v13;\n
            v4 = *(&v1);\n
            v5 = v0;\n
        }\n
    }\n
    if (!v4)\n
        return;\n
    if (!v13)\n
        v6 = v5;\n
    *(v4) = v6;\n
    return;\n
}\n
", "4201611:cgc_strtoul": "int cgc_strtoul(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return cgc_strtol(v1, a0);\n
}\n
", "4201652:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_1000000;\n
extern char g_40310e;\n
extern char g_enable;\n
\n
int main()\n
{\n
    int tmp_3;  // tmp #3\n
    int tmp_0;  // tmp #0\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0xdc]\n
    unsigned int v1;  // [bp-0x78]\n
    unsigned int v2;  // [bp-0x74]\n
    unsigned int v3;  // [bp-0x70]\n
    unsigned int v4;  // [bp-0x68], Other Possible Types: char\n
    unsigned int v5;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x5c]\n
    unsigned int v7;  // [bp-0x58]\n
    unsigned int v8;  // [bp-0x54]\n
    unsigned int v9;  // [bp-0x50]\n
    char v10;  // [bp-0x4c]\n
    unsigned int v11;  // [bp-0x48]\n
    unsigned int v12;  // [bp-0x44]\n
    unsigned int v13;  // [bp-0x40]\n
    unsigned int v14;  // [bp-0x3c]\n
    unsigned int v15;  // [bp-0x38]\n
    unsigned int v16;  // [bp-0x34]\n
    char v17;  // [bp-0x30]\n
    char v18;  // [bp-0x2c]\n
    unsigned int v19;  // [bp-0x28]\n
    unsigned int v20;  // [bp-0x24]\n
    unsigned int v21;  // [bp-0x20]\n
    unsigned int v22;  // [bp-0x1c]\n
    unsigned int v23;  // [bp-0x18]\n
    unsigned int v25;  // ebp\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // eax\n
    unsigned int v29;  // esi\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // edi\n
    unsigned int v32;  // esi\n
    unsigned int v33;  // eax\n
    unsigned int v34;  // eax\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // esi\n
    unsigned int v37;  // ecx\n
    unsigned int v38;  // ebx\n
    unsigned int v39;  // esi\n
    unsigned int v40;  // ecx\n
    unsigned int v41;  // eax\n
    unsigned int v43;  // edi\n
    unsigned int v44;  // ebp\n
    unsigned int v45;  // eax\n
    unsigned int v46;  // esi\n
    unsigned int v47;  // edx\n
    unsigned int v48;  // edi\n
    unsigned int v50;  // ebp\n
    unsigned int v51;  // esi\n
    unsigned int v52;  // ecx\n
    unsigned int v53;  // esi\n
    unsigned int v54;  // eax\n
    unsigned int v55;  // eax\n
    unsigned int v56;  // eax\n
    unsigned int v57;  // eax\n
    unsigned int v58;  // eax\n
    unsigned int v60;  // ebx\n
    unsigned int v61;  // eax\n
    unsigned int v62;  // ecx\n
    unsigned int v63;  // edx\n
    unsigned int v64;  // esi\n
    unsigned int v65;  // edx\n
    unsigned short v66;  // ax\n
    unsigned int v67;  // edi\n
    unsigned int v68;  // eax\n
    unsigned int v69;  // esi\n
    unsigned int v70;  // esi\n
    unsigned int v71;  // esi\n
    unsigned int v72;  // edi\n
    unsigned int v73;  // edx\n
    unsigned int v74;  // eax\n
    unsigned int v75;  // edx\n
    unsigned int v76;  // esi\n
    unsigned int v78;  // eax\n
    unsigned int v79;  // eax\n
    unsigned int v80;  // edi\n
    unsigned int v81;  // esi\n
    unsigned int v82;  // eax\n
    unsigned int v83;  // esi\n
    unsigned int v84;  // edx\n
    unsigned int v85;  // ecx\n
    char v86;  // dl\n
    char v87;  // dl\n
    unsigned int v88;  // edx\n
    unsigned int v89;  // ebx\n
    unsigned int v90;  // edx\n
    unsigned int v91;  // eax\n
    unsigned int v92;  // esi\n
    unsigned int v93;  // eax\n
    unsigned int v94;  // esi\n
\n
    v25 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_allocate(0x1000, 0))\n
        return 0;\n
    v22 = \"$\";\n
    v23 = \"> \";\n
    v12 = cgc_readline();\n
    if (v12)\n
    {\n
        v26 = \" \";\n
        v21 = &g_40310e;\n
        v14 = \"BAD ARGUMENTS\\n
\";\n
        v8 = \" \";\n
        v9 = &_GLOBAL_OFFSET_TABLE_;\n
        do\n
        {\n
            v6 = cgc_strsep(&v12, v26);\n
            v27 = cgc_strcmp(v6, v21);\n
            if (!*((v25 + 1332)))\n
            {\n
                v70 = v6;\n
                if (v27)\n
                {\n
LABEL_401f31:\n
                    if (cgc_strcmp(v70, v25 - 4114))\n
                    {\n
LABEL_401fea:\n
                        if (cgc_strcmp(v70, v25 - 4107))\n
                        {\n
LABEL_40247f:\n
                            if (cgc_strcmp(v70, v25 - 4101))\n
                            {\n
LABEL_402510:\n
                                if (!cgc_strcmp(v70, v25 - 4094))\n
                                    break;\n
                                continue;\n
                            }\n
                            else\n
                            {\n
                                v7 = v12;\n
                                v91 = cgc_strsep(&v7, v26);\n
                                if (!v91)\n
                                {\n
                                    v92 = v14;\n
                                }\n
                                else if (!cgc_strcmp(v91, v25 - 3954))\n
                                {\n
                                    *((v25 + 1332)) = 1;\n
                                    goto LABEL_402510;\n
                                }\n
                                else\n
                                {\n
                                    v92 = v25 - 3945;\n
                                }\n
                                v93 = cgc_strlen(v92);\n
                                v5 = &v10;\n
                                v4 = v92;\n
                                v70 = v6;\n
                                cgc_transmit(1, v4, v93);\n
                                goto LABEL_402510;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            v7 = v12;\n
                            if (cgc_strsep(&v7, v26) && cgc_parse_ip())\n
                            {\n
                                v80 = v25 + 1336;\n
                                v81 = 0;\n
                                v82 = *(&v17);\n
                                v11 = v80;\n
                                while (true)\n
                                {\n
                                    v84 = 0;\n
                                    if (v80 != v11)\n
                                        v84 = -1 << ((~(*((v80 + 15))) >> 3) & 31);\n
                                    if ((v84 & (*((v80 + 8)) ^ v82)))\n
                                        break;\n
                                    v85 = *((v80 + 12));\n
                                    v86 = *((v80 + 15));\n
                                    if ((v86 & 2))\n
                                        v81 = v85;\n
                                    if (v85)\n
                                        v81 = v85;\n
                                    v87 = v86 / 8;\n
                                    if (v87 == 31)\n
                                        break;\n
                                    v88 = 1 << (30 - v87 & 31);\n
                                    if (v80 == v9 + 1336)\n
                                        v88 = 0x80000000;\n
                                    v80 = *((v80 + ((v82 & v88)) * 4));\n
                                    if (!v80)\n
                                        break;\n
                                }\n
                                v89 = v9;\n
                                v3 = v82 / 0x100;\n
                                v2 = v82 / 0x10000;\n
                                v1 = v82 / &g_1000000;\n
                                cgc_printf(v89 - 4020);\n
                                if (v81)\n
                                {\n
                                    v90 = *((v89 + v81 * 0x100 + v81 * 8 + 1348));\n
                                    v3 = v90 / 0x100;\n
                                    v2 = v90 / 0x10000;\n
                                    v1 = v90 / &g_1000000;\n
                                    cgc_printf(v89 - 3979);\n
                                }\n
                                else\n
                                {\n
                                    cgc_printf(v89 - 3991);\n
                                }\n
                                v26 = v8;\n
                                v25 = v89;\n
                                goto LABEL_40247c;\n
                            }\n
                            v83 = v14;\n
                            v5 = &v10;\n
                            cgc_transmit(1, v83, cgc_strlen(v83));\n
LABEL_40247c:\n
                            v70 = v6;\n
                            goto LABEL_40247f;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        v7 = v12;\n
                        if (cgc_strsep(&v7, v26) && cgc_parse_ip() && cgc_strsep(&v7, v26) && cgc_parse_ip())\n
                        {\n
                            v74 = *(&v18);\n
                            v75 = v74 == -1 ^ 33;\n
                            if (!v74)\n
                                v75 = v74;\n
                            if (v75 != 33)\n
                            {\n
                                if (v74)\n
                                {\n
                                    v78 = cgc_lookup_route();\n
                                    if (v78)\n
                                    {\n
                                        if (!*((v78 + 12)) && !(*((v78 + 15)) & 2))\n
                                            goto LABEL_402596;\n
                                        cgc_delete_route();\n
                                        goto LABEL_401fea;\n
                                    }\n
                                }\n
                                else if (!*(&v17))\n
                                {\n
                                    *((v25 + 1348)) = 0;\n
                                    goto LABEL_401fea;\n
                                }\n
LABEL_402596:\n
                                v76 = v25 - 4037;\n
LABEL_401fcc:\n
                                v79 = cgc_strlen(v76);\n
                                v5 = &v10;\n
                                v4 = v76;\n
                                v70 = v6;\n
                                cgc_transmit(1, v4, v79);\n
                                goto LABEL_401fea;\n
                            }\n
                        }\n
                        v76 = v14;\n
                        goto LABEL_401fcc;\n
                    }\n
                }\n
                else\n
                {\n
                    v7 = v12;\n
                    if (cgc_strsep(&v7, v26) && cgc_parse_ip() && cgc_strsep(&v7, v26) && cgc_parse_ip())\n
                    {\n
                        v33 = cgc_strsep(&v7, v26);\n
                        if (v33)\n
                        {\n
                            v34 = cgc_strtoul(v33, 0, 10);\n
                            if (v34 <= 65535)\n
                            {\n
                                if (v34 && *((v25 + (v34 << 8) + (v34 << 3) + 1088)) + -0x10000 < -65535)\n
                                    goto LABEL_401f0a;\n
                                v37 = *(&v18);\n
                                v38 = v37 == -1 ^ 33;\n
                                if (!v37)\n
                                    v38 = v37;\n
                                if (v38 != 33)\n
                                {\n
                                    v15 = v34;\n
                                    v41 = *(&v17);\n
                                    tmp_3 = ~(v37) & v41;\n
                                    v66 = v15;\n
                                    if (!tmp_3)\n
                                    {\n
                                        v11 = v41;\n
                                        if (!v37)\n
                                        {\n
                                            *((v25 + 1348)) = v66;\n
                                            goto LABEL_401f31;\n
                                        }\n
                                        else\n
                                        {\n
                                            v19 = v38 - 1;\n
                                            v46 = v25 + 1336;\n
                                            v13 = v46;\n
                                            while (true)\n
                                            {\n
                                                v47 = (v46 == v13 ? 1 << ((~(*((v46 + 15))) >> 3) - 1 & 31) : 0x80000000);\n
                                                v48 = (!(v47 & v11) ? v46 + 4 : v46);\n
                                                v16 = v48;\n
                                                v65 = *((v46 + ((v47 & v11)) * 4));\n
                                                if (!v65)\n
                                                {\n
                                                    v55 = cgc_allocate_route();\n
                                                    if (v55)\n
                                                    {\n
                                                        v65 = v55;\n
                                                        tmp_0 = v47 & v11;\n
                                                        v26 = v8;\n
                                                        if (!tmp_0)\n
                                                            *(v46) = v55;\n
                                                        else\n
                                                            *(v26) = v55;\n
                                                        v25 = v9;\n
                                                        goto LABEL_40279e;\n
                                                    }\n
                                                    else\n
                                                    {\n
                                                        v25 = v9;\n
LABEL_402754:\n
                                                        v64 = v25 - 4069;\n
                                                        v5 = &v10;\n
                                                        cgc_transmit(1, v64, cgc_strlen(v64));\n
                                                        v26 = v8;\n
                                                    }\n
                                                }\n
                                                v50 = (v65 == v9 + 1336 ? -1 << ((~(*((v65 + 15))) >> 3) & 31) : 0);\n
                                                v51 = *((v65 + 8)) ^ v11;\n
                                                if ((v50 & v51))\n
                                                {\n
LABEL_402669:\n
                                                    v13 = v65;\n
                                                    *(&v38) = -(v38);\n
                                                    v53 = v51 >> (v38 & 31);\n
                                                    v25 = v9;\n
                                                    v54 = cgc_allocate_route();\n
                                                    v65 = v54;\n
                                                    if (!v53)\n
                                                    {\n
                                                        tmp_2 = v54;\n
                                                        v56 = v13;\n
                                                        if (tmp_2)\n
                                                        {\n
                                                            *(v16) = v65;\n
                                                            if (*((v56 + 8)) >= 0)\n
                                                                *(v65) = v56;\n
                                                            else\n
                                                                *((v65 + 4)) = v56;\n
                                                            v26 = v8;\n
LABEL_40279e:\n
                                                            v66 = v15;\n
LABEL_4027a2:\n
                                                            *((v65 + 8)) = v11;\n
                                                            *((v65 + 12)) = v66;\n
                                                            *((v65 + 15)) = *((v65 + 15)) & 7 | (v19 * 8);\n
                                                            break;\n
                                                        }\n
                                                    }\n
                                                    else if (v54)\n
                                                    {\n
                                                        v20 = v54;\n
                                                        *(v16) = v54;\n
                                                        v57 = cgc_allocate_route();\n
                                                        if (v57)\n
                                                        {\n
                                                            v60 = v11;\n
                                                            v62 = *((v13 + 8)) ^ v60;\n
                                                            v63 = 31;\n
                                                            v66 = v15;\n
                                                            v16 = v57;\n
                                                            while (true)\n
                                                            {\n
                                                                v0 = v62;\n
                                                                v62 = v0;\n
                                                                if (((*(&v0 + ((v63 & 31) >> 3)) >> (v63 & 31 & 7)) & 1) == 1)\n
                                                                {\n
LABEL_4026d2:\n
                                                                    v67 = v20;\n
                                                                    *((v67 + 15)) = (*((v67 + 15)) & 7) - v63 * 8 - 16;\n
                                                                    *((v67 + 8)) = v60 >> (v63 + 1 & 31) << (v63 + 1 & 31);\n
                                                                    v0 = v11;\n
                                                                    if (((*(&v0 + ((v63 & 31) >> 3)) >> (v63 & 31 & 7)) & 1) == 1)\n
                                                                    {\n
                                                                        *(v67) = v13;\n
                                                                        v65 = v16;\n
                                                                        *((v67 + 4)) = v65;\n
                                                                    }\n
                                                                    else\n
                                                                    {\n
                                                                        v65 = v16;\n
                                                                        *(v67) = v65;\n
                                                                        *((v67 + 4)) = v13;\n
                                                                    }\n
                                                                    v26 = v8;\n
                                                                    goto LABEL_4027a2;\n
                                                                }\n
                                                                else\n
                                                                {\n
                                                                    v63 -= 1;\n
                                                                    if (!([D] x86g_calculate_condition(0x2<32>, 0x3<32>, 0x1f<32>, 0xffffffff<32>, 0x0<32>)))\n
                                                                    {\n
                                                                        v63 = -1;\n
                                                                        goto LABEL_4026d2;\n
                                                                    }\n
                                                                }\n
                                                            }\n
                                                        }\n
                                                    }\n
                                                    goto LABEL_402754;\n
                                                }\n
                                                else\n
                                                {\n
                                                    v52 = *((v65 + 15)) >> 3;\n
                                                    if (v38 <= v52)\n
                                                        goto LABEL_402669;\n
                                                    v46 = v65;\n
                                                    v26 = v8;\n
                                                    v25 = v9;\n
                                                    if (v19 == v52)\n
                                                        goto LABEL_4027a2;\n
                                                }\n
                                            }\n
                                            v70 = v6;\n
                                            goto LABEL_401f31;\n
                                        }\n
                                    }\n
                                }\n
                            }\n
                        }\n
                    }\n
LABEL_401f0a:\n
                    v45 = cgc_strlen(*(&v4));\n
                    v5 = &v10;\n
                    v4 = v14;\n
                    v70 = v6;\n
                    cgc_transmit(1, v4, v45);\n
                    goto LABEL_401f31;\n
                }\n
            }\n
            else\n
            {\n
                v69 = v6;\n
                if (v27)\n
                {\n
LABEL_402168:\n
                    if (cgc_strcmp(v69, v25 - 4114))\n
                    {\n
LABEL_40220f:\n
                        if (cgc_strcmp(v69, v25 - 4089))\n
                        {\n
LABEL_4022b4:\n
                            if (!cgc_strcmp(v69, v25 - 4084))\n
                            {\n
                                v71 = 65535;\n
                                v72 = v25 + 1352;\n
                                do\n
                                {\n
                                    if (*(v72) - 0x10000 >= -65535)\n
                                    {\n
                                        cgc_printf(v25 - 3931);\n
                                        cgc_printf(v25 - 3924);\n
                                        v73 = *((v72 + 260));\n
                                        v11 = v9 - 3913;\n
                                        v3 = v73 / 0x100 & 255;\n
                                        v25 = v9;\n
                                        v2 = v73 / 0x10000;\n
                                        v1 = v73 / &g_1000000;\n
                                        cgc_printf(v11);\n
                                    }\n
                                    v72 += 264;\n
                                    v71 -= 1;\n
                                } while (true);\n
                            }\n
                            v26 = v8;\n
                            if (!cgc_strcmp(v6, v25 - 4094))\n
                                *((v25 + 1332)) = 0;\n
                            continue;\n
                        }\n
                        else\n
                        {\n
                            v7 = v12;\n
                            v58 = cgc_strsep(&v7, v26);\n
                            if (v58)\n
                            {\n
                                v61 = cgc_strtoul(v58, 0, 10);\n
                                if (v61 - 0x10000 >= -65535 && *((v25 + (v61 << 8) + (v61 << 3) + 1088)) + -0x10000 >= -65535)\n
                                {\n
                                    cgc_prompt_edit_router();\n
                                    goto LABEL_4022b4;\n
                                }\n
                            }\n
                            v68 = cgc_strlen(v4);\n
                            v5 = &v10;\n
                            v4 = v14;\n
                            v69 = v6;\n
                            cgc_transmit(1, v4, v68);\n
                            goto LABEL_4022b4;\n
                        }\n
                    }\n
                    v7 = v12;\n
                    v35 = cgc_strsep(&v7, v26);\n
                    if (v35)\n
                    {\n
                        v36 = cgc_strtoul(v35, 0, 10);\n
                        if (v36 - 0x10000 >= -65535)\n
                        {\n
                            v13 = v36 * 0x100 + v36 * 8;\n
                            if (*((v25 + v13 + 1088)) + -0x10000 >= -65535)\n
                            {\n
                                if (*((v25 + 300)) <= 0)\n
                                {\n
                                    if (v36 == *((v25 + 1348)))\n
                                    {\n
                                        *((v25 + 1348)) = 0;\n
                                        *((v25 + 1351)) = *((v25 + 1351)) & 253;\n
                                    }\n
                                    *((v13 + v25 + 1088)) = 0;\n
                                    v26 = v8;\n
                                }\n
                                else\n
                                {\n
                                    v40 = 0;\n
                                    v11 = v40;\n
                                    v43 = *((*((v25 + 304)) + v40 * 4)) + 16;\n
                                    v44 = 4095;\n
                                    while (true)\n
                                    {\n
                                        if (!(*((v43 + 15)) & 4) && v36 == *((v43 + 12)))\n
                                            cgc_delete_route();\n
                                        v43 += 16;\n
                                        v44 -= 1;\n
                                    }\n
                                }\n
LABEL_40220c:\n
                                v69 = v6;\n
                                goto LABEL_40220f;\n
                            }\n
                        }\n
                    }\n
                    v39 = v14;\n
                    v5 = &v10;\n
                    cgc_transmit(1, v39, cgc_strlen(v39));\n
                    goto LABEL_40220c;\n
                }\n
                v7 = v12;\n
                v28 = cgc_strsep(&v7, v26);\n
                if (v28)\n
                {\n
                    v29 = cgc_strtoul(v28, 0, 10);\n
                    if (v29 - 0x10000 >= -65535)\n
                    {\n
                        v30 = v29 * 0x100 + v29 * 8;\n
                        if (*((v25 + v30 + 1088)) + -0x10000 <= -0x10000)\n
                        {\n
                            v31 = v30 + v25 + 1088;\n
                            cgc_memset(v31, 0, 264);\n
                            *(v31) = v29;\n
                            v26 = v8;\n
                            cgc_prompt_edit_router();\n
                            goto LABEL_402165;\n
                        }\n
                    }\n
                }\n
                v32 = v14;\n
                v5 = &v10;\n
                cgc_transmit(1, v32, cgc_strlen(v32));\n
LABEL_402165:\n
                v69 = v6;\n
                goto LABEL_402168;\n
            }\n
            v12 = cgc_readline();\n
        } while (v12);\n
    }\n
    v94 = v25 - 4079;\n
    v5 = &v10;\n
    cgc_transmit(1, v94, cgc_strlen(v94));\n
    return 0;\n
}\n
", "4204533:cgc_readline": "extern char g_buffer;\n
\n
int cgc_readline()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi, Other Possible Types: unsigned int\n
\n
    v0 = &v2;\n
    cgc_transmit(1, v4, cgc_strlen(v4));\n
    v6 = 0x400;\n
    v7 = &g_buffer;\n
    while (true)\n
    {\n
        v0 = &v1;\n
        if (cgc_receive(0, v7, 1))\n
            return 0;\n
        if (*(&v1) != 1)\n
            return 0;\n
        if (*(v7) == 10)\n
        {\n
            *(v7) = 0;\n
            return &g_buffer;\n
        }\n
        v7 += 1;\n
        v6 -= 1;\n
    }\n
}\n
", "4204655:cgc_parse_ip": "extern char g_1000000;\n
\n
int cgc_parse_ip()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v17;  // eax\n
    unsigned int v20;  // eax\n
    unsigned int *v21;  // edx\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v7 = cgc_strsep(&v2, \".\");\n
    if (!v7)\n
        return 0;\n
    v9 = cgc_strsep(&v2, \".\");\n
    if (!v9)\n
        return 0;\n
    v0 = v9;\n
    v10 = cgc_strsep(&v2, \".\");\n
    if (v10)\n
    {\n
        v1 = v10;\n
        v11 = cgc_strsep(&v2, \".\");\n
        if (v11)\n
        {\n
            v13 = cgc_strtoul(v7, 0, 10);\n
            if (v13 <= 255)\n
            {\n
                v15 = cgc_strtoul(v0, 0, 10);\n
                if (v15 <= 255)\n
                {\n
                    v0 = v13;\n
                    v17 = cgc_strtoul(v1, 0, 10);\n
                    if (v17 <= 255)\n
                    {\n
                        v20 = cgc_strtoul(v11, 0, 10);\n
                        if (v20 <= 255)\n
                        {\n
                            *(v21) = v17 * 0x100 | v15 * 0x10000 | v0 * &g_1000000 | v20;\n
                            return 1;\n
                        }\n
                        return 0;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4204931:cgc_allocate_route": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[27];\n
    char field_1f;\n
} struct_0;\n
\n
extern struct_2 *g_route_mem_length;\n
extern struct_1 *g_route_memory;\n
\n
int cgc_allocate_route()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax\n
    struct struct_0 **v3;  // edx, Other Possible Types: unsigned int\n
    unsigned int v4;  // edx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    void* v6;  // ecx, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edx\n
    struct_0 *v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // esi\n
\n
    v0 = v2;\n
    v0 = 0;\n
    if (g_route_mem_length > 0)\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            v8 = g_route_memory[v3].field_0;\n
            if (v8)\n
            {\n
                if (!v8->field_0)\n
                    goto LABEL_4029bb;\n
                v0 = v8;\n
                goto LABEL_402a41;\n
            }\n
LABEL_4029bb:\n
            v3 += 1;\n
        } while (g_route_mem_length != v3);\n
        if (g_route_mem_length == 0x400)\n
            return 0;\n
    }\n
    if (cgc_allocate(0x10000, 0))\n
        return 0;\n
    v5 = v0;\n
    v5->field_0 = 1;\n
    v5->field_1f = v5->field_1f | 4;\n
    v6 = 0;\n
    v4 = 2;\n
    do\n
    {\n
        *((v5 + v6 + 24)) = v4;\n
        v5 = v0;\n
        *((v5 + v6 + 47)) = *((v5 + v6 + 47)) | 4;\n
        v6 += 16;\n
        v4 += 1;\n
    } while (v6 != 65504);\n
    *((v5 + v6 + 24)) = 0;\n
    v7 = g_route_mem_length;\n
    g_route_mem_length = &g_route_mem_length->field_0 + 1;\n
    *((&g_route_memory->field_0 + 0x4 * v7)) = v0;\n
    v8 = v0;\n
LABEL_402a41:\n
    v9 = *(v8) * 16;\n
    v10 = *((v9 + v8 + 8));\n
    v11 = v9 + v8;\n
    *(v8) = v10;\n
    cgc_memset(v11, 0, 16);\n
    return v11;\n
}\n
", "4205158:cgc_lookup_route": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[3];\n
    char field_f;\n
} struct_0;\n
\n
extern struct_0 g_default_route;\n
\n
int cgc_lookup_route(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // ecx\n
    unsigned int v10;  // eax\n
    struct_0 *v11;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v12;  // ebx, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v4 = v3;\n
    if (v5)\n
    {\n
        v0 = v5 - 1;\n
        v11 = &g_default_route.padding_0[0];\n
        while (true)\n
        {\n
            v6 = (v11 == &g_default_route.padding_0[0] ? 1 << ((~(*((v11 + 15))) >> 3) - 1 & 31) : 0x80000000);\n
            v12 = *((v11 + ((v4 & v6)) * 4));\n
            if (!v12)\n
                return 0;\n
            v7 = (v12 == &g_default_route.padding_0[0] ? -1 << ((~(v12->field_f) >> 3) & 31) : 0);\n
            v8 = v12->field_8;\n
            if (v8 == v4 && v0 == v12->field_f >> 3)\n
                break;\n
            if ((v7 & (v8 ^ v4)))\n
                return 0;\n
            v11 = v12;\n
            if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, Load(addr=(ebx<4> + 0xf<32>), size=1, endness=Iend_LE)), 0xf7<32>, 0x0<32>)))\n
                goto LABEL_0x402b0f;\n
        }\n
    }\n
    else if (!v3)\n
    {\n
        v11 = 0;\n
        v12 = &g_default_route.padding_0[0];\n
    }\n
    else\n
    {\n
        return 0;\n
    }\n
    v10 = v12;\n
    if (v1)\n
    {\n
        *(v1) = v11;\n
        v10 = v12;\n
    }\n
    return v10;\n
}\n
", "4205335:cgc_delete_route": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    char padding_8[4];\n
    unsigned short field_c;\n
    char padding_e[1];\n
    char field_f;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[4];\n
    unsigned short field_c;\n
    char padding_e[1];\n
    char field_f;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char g_default_route;\n
\n
int cgc_delete_route()\n
{\n
    struct_2 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v3;  // ecx\n
    struct_0 *v4;  // esi\n
    struct_2 *v5;  // edx, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    struct_2 *v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    unsigned int v9[2];  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v3;\n
    v0 = v5;\n
    if (!v5)\n
    {\n
        if (!cgc_lookup_route(&v0))\n
            goto LABEL_402c15;\n
        v5 = v0;\n
        if (!v5)\n
            goto LABEL_402c21;\n
    }\n
    v6 = *(v5);\n
    v8 = *((v5 + 4));\n
    if (v6 == v3)\n
    {\n
        v7 = v5;\n
    }\n
    else if (v8 == v3)\n
    {\n
        v7 = v5 + 4;\n
        v8 = v6;\n
    }\n
    else\n
    {\n
        cgc__terminate();\n
LABEL_402c15:\n
        cgc__terminate();\n
LABEL_402c21:\n
        cgc__terminate();\n
    }\n
    v4->field_c = 0;\n
    v4->field_f = v4->field_f & 253;\n
    v9 = v4->field_4;\n
    if (v4->field_0)\n
    {\n
        if (!v9)\n
        {\n
            *(v7) = v4->field_0;\n
            goto LABEL_402bb3;\n
        }\n
        else\n
        {\n
            return v4->field_4;\n
        }\n
    }\n
    if (v9)\n
    {\n
        *(v7) = v9;\n
        goto LABEL_402bb3;\n
    }\n
    if (v5 != 4212316 && !*((v5 + 12)) && !(*((v5 + 15)) & 2) && v8)\n
    {\n
        v9 = cgc_lookup_route(&v1);\n
        if (!v9)\n
            return v9;\n
        v9 = v1;\n
        if (!v9)\n
            return v9;\n
        if (*(v9) != v0)\n
            *((v9 + 4)) = v8;\n
        else\n
            *(v9) = v8;\n
        cgc_free_route();\n
LABEL_402bb3:\n
        v9 = cgc_free_route();\n
        return v9;\n
    }\n
    *(v7) = 0;\n
    goto LABEL_402bb3;\n
}\n
", "4205613:cgc_free_route": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[3];\n
    char field_f;\n
} struct_2;\n
\n
extern unsigned int g_route_mem_length;\n
extern struct_1 *g_route_memory;\n
\n
int cgc_free_route()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct struct_0 **v2;  // edx, Other Possible Types: unsigned int\n
    unsigned int *v3;  // edi\n
    struct_2 *v4;  // ecx\n
    unsigned int v5;  // eax\n
\n
    if (g_route_mem_length > 0)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = g_route_memory[v2].field_0;\n
            if (v3)\n
                if (v4 - v3 <= 65535)\n
                    goto LABEL_402c76;\n
                else\n
                    goto LABEL_402c65;\n
LABEL_402c65:\n
            v2 += 1;\n
        } while (g_route_mem_length != v2);\n
        goto LABEL_402c76;\n
    }\n
    v0 = 9;\n
    cgc__terminate();\n
LABEL_402c76:\n
    v4->field_f = v4->field_f | 4;\n
    v5 = *(v3);\n
    v4->field_8 = v5;\n
    *(v3) = v4 - v3 >> 4;\n
    return v5;\n
}\n
", "4205708:cgc_prompt_edit_router": "typedef struct struct_0 {\n
    char padding_0[259];\n
    char field_103;\n
    unsigned int field_104;\n
} struct_0;\n
\n
extern char g_1000000;\n
\n
int cgc_prompt_edit_router()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    struct_0 *v6;  // ecx\n
    unsigned int v7;  // eax\n
    char *v8;  // eax\n
    char *v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    cgc_printf(\"AS %d\\n
\");\n
    v3 = &v6->padding_0[4];\n
    cgc_printf(\" Name: %s\\n
\");\n
    v7 = v6->field_104;\n
    v2 = v7 / 0x100;\n
    v1 = v7 / 0x10000;\n
    v0 = v7 / &g_1000000;\n
    cgc_printf(\" IP: %d.%d.%d.%d\\n
\");\n
    v8 = cgc_readline();\n
    if (v8 && !cgc_strcmp(v8, \"y\"))\n
    {\n
        v9 = cgc_readline();\n
        if (v9)\n
        {\n
            cgc_strncpy(v3, v9, 0x100);\n
            v6->field_103 = 0;\n
        }\n
    }\n
    v10 = cgc_readline();\n
    if (!v10)\n
        return v10;\n
    v10 = cgc_strcmp(v10, \"y\");\n
    if (v10)\n
        return v10;\n
    v10 = cgc_readline();\n
    if (!v10)\n
        return v10;\n
    v10 = cgc_parse_ip();\n
    if (v10)\n
    {\n
        v10 = *(&v4);\n
        v6->field_104 = v10;\n
        return v10;\n
    }\n
    return v10;\n
}\n
", "4205996:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "22020096:__libc_start_main": null, "22020100:cgc__terminate": null, "22020104:cgc_transmit": null, "22020108:cgc_allocate": null, "22020112:cgc_receive": null, "23072844:UnresolvableJumpTarget": null, "23072848:UnresolvableCallTarget": null}