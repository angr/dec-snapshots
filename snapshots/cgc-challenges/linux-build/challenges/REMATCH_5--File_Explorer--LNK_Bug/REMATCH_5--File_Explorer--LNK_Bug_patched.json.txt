{"4202496:_init": "extern struct_0 *g_40a5dc;\n
\n
int _init()\n
{\n
    if (g_40a5dc)\n
    {\n
        g_40a5dc();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 34003;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33939;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a5d8;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a5d8)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 60));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 60)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204049:sub_402611": null, "4204064:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[151].padding_0[32]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_3c)\n
    {\n
        v7 = v1;\n
        v7->field_3c = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204289:sub_402701": null, "4204304:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204375:sub_402757": null, "4204384:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_3c);\n
    v3[0] = v1->field_3c;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4204601:sub_402839": null, "4204608:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4204692:sub_402894": null, "4204704:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[60];\n
    struct struct_0 *field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_3c; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4204985:sub_4029b9": null, "4204992:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205100:sub_402a2c": null, "4205104:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 60)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 60));\n
        *((v6 + v3 * 4 + 60)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205389:sub_402b4d": null, "4205392:cgc_round": null, "4205538:sub_402be2": null, "4205552:cgc_floor": null, "4205708:sub_402c8c": null, "4205712:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4205813:sub_402cf5": null, "4205824:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4205858:sub_402d22": null, "4205872:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4206142:sub_402e3e": null, "4206144:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4206236:sub_402e9c": null, "4206240:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4206428:sub_402f5c": null, "4206432:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4206735:sub_40308f": null, "4206736:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    unsigned int *v45;  // [bp+0x10001c], Other Possible Types: struct struct_1 **\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_4035c9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_4035c9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 9608)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4208092:sub_4035dc": null, "4208096:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4208154:sub_40361a": null, "4208160:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4208229:sub_403665": null, "4208240:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4208379:sub_4036fb": null, "4208384:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4208656:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4209312:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4211728:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4212394:sub_4046aa": null, "4212400:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4212962:sub_4048e2": null, "4212976:cgc_receive_fixed": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_fixed(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    for (v4 = 0; v4 < a0; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_receive(0, v6 + v4, a0 - v4);\n
        if (v3)\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4213177:sub_4049b9": null, "4213184:cgc_transmit_fixed": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_fixed(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    for (v3 = 0; v4 < a0; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_transmit(1, v5 + v4, a0 - v4);\n
        if (v3)\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    return 0;\n
}\n
", "4213355:sub_404a6b": null, "4213360:cgc_debug_print": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_debug_print(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x7f8]\n
    void* v1;  // [bp-0x7f0]\n
    unsigned int v2;  // [bp-0x7e8]\n
    struct_0 *v3;  // [bp-0x7e4]\n
    unsigned int v4;  // [bp-0x7e0]\n
    char v5;  // [bp-0x7dc]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    char v9;  // [bp+0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // ebx\n
\n
    v7 = v10;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = &v9;\n
    v0 = v8;\n
    v3 = &v5;\n
    v4 = cgc_vsprintf(&v5, v0, v6);\n
    v1 = 0;\n
    cgc_transmit(2, v3, cgc_strlen(v3, v0));\n
    v11 = v7;\n
    return v4;\n
}\n
", "4213512:sub_404b08": null, "4213520:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4213757:sub_404bfd": null, "4213760:cgc_atof": null, "4214045:sub_404d1d": null, "4214048:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4214124:sub_404d6c": null, "4214128:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4214265:sub_404df9": null, "4214272:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4214408:sub_404e88": null, "4214416:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(v7[0]); v7 = &v7[1]);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = &v7[1];\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = &v7[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_404faa;\n
    if (*(v7) != 48)\n
    {\n
LABEL_404faa:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_404ffd;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_404ffd;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_404ffd:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_404faa;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (!cgc_isupper(v1))\n
                v1 -= 87;\n
            else\n
                v1 -= 55;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_405135:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_40513a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = &v7[1];\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_40513a;\n
            goto LABEL_405135;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4215187:sub_405193": null, "4215200:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215259:sub_4051db": null, "4215264:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4215319:sub_405217": null, "4215328:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4215483:sub_4052bb": null, "4215488:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4215646:sub_40535e": null, "4215648:cgc_strstr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strstr(unsigned int v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 && a0 && a1)\n
    {\n
        v2 = cgc_strlen(a0);\n
        while (true)\n
        {\n
            if (v3 >= a1 - (v2 - 1))\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
            if (v3[v5] == *(a0))\n
            {\n
                v0 = v2;\n
                if (!cgc_strncmp(&v3[v5], a0))\n
                {\n
                    v4 = v5 + v3;\n
                    return v4;\n
                }\n
            }\n
            v3 += 1;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4215887:sub_40544f": null, "4215888:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
            a1 -= 1;\n
            if (!a1)\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4216272:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[572];\n
    struct struct_1 *field_23c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_23c)\n
        {\n
            v6 = v1->field_23c;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_23c = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_23c = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_23c = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_23c = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4216791:sub_4057d7": null, "4216800:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        if (*(v2) < *(a0))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4217150:sub_40593e": null, "4217152:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217335:sub_4059f7": null, "4217344:cgc_strncat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            if (v2 >= a1)\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217547:sub_405acb": null, "4217552:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v4];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217705:sub_405b69": null, "4217712:cgc_ReceiveBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveBytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    for (v4 = 0; v4 < a0; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_receive(0, v6 + v4, a0 - v4);\n
        if (v3)\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4217912:sub_405c38": null, "4217920:cgc_TransmitBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_TransmitBytes(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    for (v3 = 0; v4 < a0; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_transmit(1, v5 + v4, a0 - v4);\n
        if (v3)\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    return 0;\n
}\n
", "4218091:sub_405ceb": null, "4218096:cgc_ReceiveCString": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveCString(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_calloc(8);\n
    if (cgc_ReceiveBytes(v1, 2) != 2)\n
    {\n
        cgc_DestroyCString();\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_0 > v4)\n
    {\n
        cgc_printf(v0 - 9452);\n
        cgc__terminate();\n
    }\n
    if (v1->field_0 > 0)\n
    {\n
        v1->field_4 = cgc_calloc(v1->field_0 + 1);\n
        if (cgc_ReceiveBytes(v1->field_4, v1->field_0) != v1->field_0)\n
        {\n
            cgc_DestroyCString();\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4218370:sub_405e02": null, "4218384:cgc_DestroyCString": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DestroyCString(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1)\n
        cgc_free(v1->field_4);\n
    return cgc_free(v1);\n
}\n
", "4218456:sub_405e58": null, "4218464:cgc_TransmitCString": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_TransmitCString(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_TransmitBytes(v2, 2);\n
    v4 = v1;\n
    return cgc_TransmitBytes(v2->field_4, v2->field_0);\n
}\n
", "4218541:sub_405ead": null, "4218544:cgc_InitializeFileSystem": "typedef struct struct_1 {\n
    char padding_0[836];\n
    unsigned short field_344;\n
    char padding_346[2];\n
    struct struct_0 *field_348;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[65];\n
    char field_41;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitializeFileSystem()\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_1 *v4;  // ebx\n
    struct_1 *v5;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = v0;\n
    v4->field_348 = cgc_calloc(96);\n
    cgc_memcpy(v4->field_348, &v4[11].padding_0[161], 4);\n
    v5 = v0;\n
    v5->field_348->field_41 = 247;\n
    v5->field_344 = 1;\n
    v7 = v1;\n
    return v5->field_348;\n
}\n
", "4218653:sub_405f1d": null, "4218656:cgc_NextFileID": "typedef struct struct_1 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *pNextFileID;\n
\n
int cgc_NextFileID()\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned short *v3;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = pNextFileID;\n
    pNextFileID = pNextFileID + 1;\n
    v1 = *(v3);\n
    if (pNextFileID >= 0x4347d000)\n
        v0->field_34 = 0x4347c000;\n
    return v1;\n
}\n
", "4218749:sub_405f7d": null, "4218752:cgc_CreateFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateFile(unsigned int v8, char a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_strlen(v8);\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    if (a3 && *((a3 + 65)) == 247)\n
        goto LABEL_405ff1;\n
    a3 = *((v0 + 840));\n
LABEL_405ff1:\n
    if (cgc_GetPathDepth() >= 10)\n
    {\n
        v6 = -0x4;\n
        return v6;\n
    }\n
    else if (a0 >= 248)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    else if (a1 > 0x800)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    else if (*((v0 + 836)) >= 0x100)\n
    {\n
        v6 = -5;\n
        return v6;\n
    }\n
    else if (cgc_strcmp(v8, v0 - 9436))\n
    {\n
        if (a0 == 247)\n
            a1 = 0;\n
        v4 = cgc_calloc(96);\n
        cgc_memcpy(v4, v8, v5);\n
        *((v4 + 65)) = a0;\n
        v10 = v0;\n
        *((v4 + 72)) = cgc_NextFileID();\n
        *((v10 + 836)) = *((v10 + 836)) + 1;\n
        if (a1 > 0 && a2)\n
        {\n
            *((v4 + 92)) = cgc_calloc(a1);\n
            cgc_memcpy(*((v4 + 92)), a2, a1);\n
            *((v4 + 68)) = a1;\n
        }\n
        v3 = 0;\n
        v2 = 0;\n
        v3 = *((a3 + 88));\n
        *((v4 + 84)) = a3;\n
        if (!v3)\n
        {\n
            *((a3 + 88)) = v4;\n
            v6 = 0;\n
            return v6;\n
        }\n
        while (true)\n
        {\n
            if (!v3)\n
            {\n
                *((v2 + 80)) = v4;\n
                *((v4 + 76)) = v2;\n
                v6 = 0;\n
                return v6;\n
            }\n
            v1 = cgc_strcmp(v4, v3);\n
            if (!v1)\n
            {\n
                cgc_DestroyNode();\n
                v6 = -3;\n
                return v6;\n
            }\n
            if (v1 < 0)\n
                break;\n
            v2 = v3;\n
            v3 = *((v3 + 80));\n
        }\n
        if (!*((v3 + 76)))\n
        {\n
            *((v4 + 80)) = v3;\n
            *((v3 + 76)) = v4;\n
            *((a3 + 88)) = v4;\n
            v6 = 0;\n
            return v6;\n
        }\n
        *((v4 + 80)) = v3;\n
        *((v4 + 76)) = *((v3 + 76));\n
        *((*((v3 + 76)) + 80)) = v4;\n
        *((*((v4 + 80)) + 76)) = v4;\n
        v6 = 0;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
}\n
", "4219539:sub_406293": null, "4219552:cgc_GetPathDepth": "typedef struct struct_0 {\n
    char padding_0[840];\n
    unsigned int field_348;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[84];\n
    struct struct_1 *field_54;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetPathDepth(struct_1 *v4)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = v4;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2 != v1->field_348)\n
            v0 = v2;\n
        if (!(v0 & 1))\n
            break;\n
        v3 += 1;\n
        v2 = *((v2 + 84));\n
    }\n
    return v3;\n
}\n
", "4219669:sub_406315": null, "4219680:cgc_DestroyNode": "typedef struct struct_0 {\n
    char padding_0[836];\n
    unsigned short field_344;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DestroyNode(unsigned int v1[24])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v3;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v1)\n
    {\n
        v3 = v0;\n
        v3->field_344 = v3->field_344 - 1;\n
        cgc_DestroyNode(v1[22]);\n
        cgc_DestroyNode(v1[20]);\n
        return cgc_free(v1[23]);\n
    }\n
    return v1;\n
}\n
", "4219790:sub_40638e": null, "4219792:cgc_FindFile": "typedef struct struct_1 {\n
    char padding_0[88];\n
    struct struct_0 *field_58;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_0 *field_50;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(char *v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 && v4)\n
    {\n
        for (v2 = a0->field_58; v2; v2 = *((v2 + 80)))\n
        {\n
            v1 = cgc_strcmp(v4, v2);\n
            if (!v1)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
            if (v1 < 0)\n
                break;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4219961:sub_406439": null, "4219968:cgc_FindFileAbsolute": "typedef struct struct_0 {\n
    char padding_0[840];\n
    unsigned int field_348;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFileAbsolute(char *v6)\n
{\n
    struct_0 *v0;  // [bp-0x64]\n
    void* v1;  // [bp-0x60], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x5c]\n
    char *v3;  // [bp-0x58], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x51]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = v6;\n
    v2 = v6;\n
    v1 = v0->field_348;\n
    while (*(v3))\n
    {\n
        v2 = cgc_strchr(v3, 37);\n
        if (!v2)\n
            break;\n
        cgc_memset(&v4, 0, 65);\n
        cgc_memcpy(&v4, v3, &v2[-1 * v3]);\n
        v3 = v2 + 1;\n
        v1 = cgc_FindFile(&v4, v1);\n
        if (!v1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    v5 = cgc_FindFile(v3, v1);\n
    return v5;\n
}\n
", "4220254:sub_40655e": null, "4220256:cgc_DeleteFile": "typedef struct struct_0 {\n
    char padding_0[840];\n
    unsigned int field_348;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[76];\n
    struct struct_2 *field_4c;\n
    struct struct_1 *field_50;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteFile(char *v4, struct_4 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct_3 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = cgc_FindFile(v4, a0);\n
    if (!v1)\n
    {\n
        v2 = -2;\n
        return v2;\n
    }\n
    else if (v1 != v0->field_348)\n
    {\n
        if (a0->field_58 == v1)\n
            a0->field_58 = v1->field_50;\n
        if (v1->field_4c)\n
            v1->field_4c->field_50 = v1->field_50;\n
        if (v1->field_50)\n
            v1->field_50->field_4c = v1->field_4c;\n
        v1->field_4c = 0;\n
        v1->field_50 = 0;\n
        cgc_DestroyNode(v1);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -0x4;\n
        return v2;\n
    }\n
}\n
", "4220490:sub_40664a": null, "4220496:cgc_GetFileType": "typedef struct struct_0 {\n
    char padding_0[65];\n
    char field_41;\n
} struct_0;\n
\n
int cgc_GetFileType(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v2->field_41;\n
    return v1;\n
}\n
", "4220540:sub_40667c": null, "4220544:cgc_GetFileSize": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_0;\n
\n
int cgc_GetFileSize(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_44;\n
    return v0;\n
}\n
", "4220590:sub_4066ae": null, "4220592:cgc_GetFileID": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned short field_48;\n
} struct_0;\n
\n
int cgc_GetFileID(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_48;\n
    return v0;\n
}\n
", "4220639:sub_4066df": null, "4220640:cgc_GetFilePath": "typedef struct struct_3 {\n
    char padding_0[840];\n
    unsigned int field_348;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[84];\n
    struct struct_0 *field_54;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_-1;\n
    char field_0;\n
} struct_2;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetFilePath(struct_1 *v8)\n
{\n
    struct_2 *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x24]\n
    struct_3 *v2;  // [bp-0x20]\n
    struct_2 *v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x18]\n
    struct_0 *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_2 *v9;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v8)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (v8 != v2->field_348)\n
    {\n
        v6 = 5;\n
        for (v5 = v8->field_54; v5 != v2->field_348; v5 = v5->field_54)\n
        {\n
            v6 = cgc_strlen(v5) + 1 + v6;\n
        }\n
        v4 = cgc_calloc(v6 + 1);\n
        v5 = v8->field_54;\n
        v3 = &v4[v6];\n
        v9 = v3;\n
        v3 = &v9->field_0;\n
        for (v9->field_0 = 37; v5 != v2->field_348; v5 = *((v5 + 84)))\n
        {\n
            v3 = &(&v3->field_-1)[-(cgc_strlen(v5))];\n
            v0 = v3;\n
            v1 = v5;\n
            cgc_memcpy(v0, v1, cgc_strlen(v5));\n
            v3 = &v3->field_0;\n
            *(v3) = 37;\n
        }\n
        cgc_memcpy(v4, &v2[11].padding_0[161], 4);\n
        v7 = v4;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
}\n
", "4221014:sub_406856": null, "4221024:cgc_ReadFile": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
    char padding_48[20];\n
    char *field_5c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReadFile(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v3->field_44 > 0)\n
    {\n
        v1 = cgc_calloc(v3->field_44 + 1);\n
        cgc_memcpy(v1, v3->field_5c, v3->field_44);\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4221163:sub_4068eb": null, "4221168:cgc_GetFileName": "int cgc_GetFileName(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4221179:sub_4068fb": null, "4221184:cgc_GetParent": "typedef struct struct_0 {\n
    char padding_0[840];\n
    unsigned int field_348;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_root;\n
\n
int cgc_GetParent(struct_1 *v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v2 == cgc_root)\n
    {\n
        v1 = v0->field_348;\n
        return v1;\n
    }\n
    v1 = v2->field_54;\n
    return v1;\n
}\n
", "4221257:sub_406949": null, "4221264:cgc_LoadSharedLibrary": "typedef struct struct_1 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
    char padding_48[20];\n
    struct struct_0 *field_5c;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    char padding_a[2];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    char *field_4;\n
    unsigned short field_8;\n
    char padding_a[2];\n
    char *field_c;\n
    char *field_10;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    unsigned short field_9;\n
    unsigned short field_b;\n
    unsigned short field_d;\n
    unsigned short field_f;\n
    unsigned short field_11;\n
    unsigned short field_13;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[66];\n
    unsigned int field_42;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_LoadSharedLibrary(struct_1 *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x14]\n
    struct_4 *v4;  // [bp-0x10]\n
    struct_3 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_2 *v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = cgc_calloc(20);\n
    v3 = v6->field_5c;\n
    if (v3->field_0 != v6->field_44)\n
    {\n
        cgc_debug_print(v0 - 9384);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v3->field_4 != 3330066284)\n
    {\n
        cgc_debug_print(v0 - 9348);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        if (v3->field_8 != 225 && v3->field_8 != 226)\n
        {\n
            cgc_debug_print(v0 - 9320);\n
            v5 = 0;\n
            return v5;\n
        }\n
        if (!*(&(&v3->field_8)[1]))\n
        {\n
            cgc_debug_print(v0 - 9293);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (*((&v3->field_9 + 1)) != 21)\n
        {\n
            cgc_debug_print(v0 - 9261);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (*((&v3->field_b + 1)) * 66 > v6->field_44 - 21 - *(&(&v3->field_8)[1]) * 70)\n
        {\n
            cgc_debug_print(v0 - 9217);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (*((&v3->field_d + 1)) > v6->field_44 - *((&v3->field_b + 1)) * 66)\n
        {\n
            cgc_debug_print(v0 - 9181);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (*((&v3->field_f + 1)) > v6->field_44 - 21 - *(&(&v3->field_8)[1]) * 70 - *((&v3->field_b + 1)) * 66)\n
        {\n
            cgc_debug_print(v0 - 9143);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else if (*((&v3->field_11 + 1)) <= v6->field_44 - *((&v3->field_f + 1)))\n
        {\n
            v4->field_0 = v3->field_8;\n
            v4->field_2 = *(&(&v3->field_8)[1]);\n
            v4->field_4 = cgc_calloc(*(&(&v3->field_8)[1]) * 70);\n
            cgc_memcpy(v4->field_4, v6->field_5c + *((&v3->field_9 + 1)), *(&(&v3->field_8)[1]) * 70);\n
            for (v2 = 0; v2 < v4->field_2; v2 += 1)\n
            {\n
                v7 = v4->field_4 + 0x46 * v2;\n
                *(&(&v7->padding_0)[1]) = *(&(&v7->padding_0)[1]) - *((&v3->field_11 + 1));\n
            }\n
            v4->field_8 = *((&v3->field_b + 1));\n
            v4->field_c = cgc_calloc(*((&v3->field_b + 1)) * 66);\n
            cgc_memcpy(v4->field_c, v6->field_5c + *((&v3->field_d + 1)), *((&v3->field_b + 1)) * 66);\n
            v4->field_10 = cgc_calloc(*((&v3->field_f + 1)));\n
            cgc_memcpy(v4->field_10, v6->field_5c + *((&v3->field_11 + 1)), *((&v3->field_f + 1)));\n
            v1 = cgc_GetFunctionAddress(v0 - 9106);\n
            cgc_ExecuteFunction(v1);\n
            v5 = v4;\n
            return v5;\n
        }\n
        else\n
        {\n
            cgc_debug_print(v0 - 9143);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4222261:sub_406d35": null, "4222272:cgc_GetFunctionAddress": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GetFunctionAddress(char *v3, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a0->field_2)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcmp(v3, a0->field_4 + v1 * 70))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = a0->field_10 + *((a0->field_4 + v1 * 70 + 66));\n
            return v2;\n
        }\n
    }\n
}\n
", "4222450:sub_406df2": null, "4222464:cgc_ExecuteFunction": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ExecuteFunction()\n
{\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    char *v6;  // [bp+0x4], Other Possible Types: unsigned int\n
    char *v14;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v4 = -1;\n
        return;\n
    }\n
    v3 = 0;\n
    v14 = v6;\n
    v6 = v14 + 1;\n
    v2 = *(v14);\n
}\n
", "4222785:sub_406f41": null, "4222800:cgc_FreeLibrary": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FreeLibrary(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1)\n
    {\n
        cgc_free(v1->field_10);\n
        return cgc_free(v1);\n
    }\n
    return v1;\n
}\n
", "4222872:sub_406f98": null, "4222880:cgc_LookupResource": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    char padding_a[2];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_LookupResource(struct_0 *v3, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 >= v3->field_8)\n
    {\n
        v0 = a0;\n
        cgc_debug_print(v1 - 9067);\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v3->field_c + a0 * 66 + 2;\n
        return v2;\n
    }\n
}\n
", "4223017:sub_407029": null, "4223024:cgc_InitializeOSFiles": "typedef struct struct_0 {\n
    char padding_0[840];\n
    unsigned int field_348;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[840];\n
    void* field_348;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_root;\n
\n
int cgc_InitializeOSFiles()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    struct_1 *v8;  // ebx\n
    struct_0 *v9;  // ebx\n
    unsigned int v11;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_CreateFile(\"User\", 247, 0, 0, cgc_root);\n
    v6 = v0;\n
    cgc_CreateFile(&v6[10].padding_0[595], 247, 0, 0, v6->field_348);\n
    v7 = v0;\n
    cgc_CreateFile(&v7[10].padding_0[585], 247, 0, 0, v7->field_348);\n
    v8 = v0;\n
    v2 = cgc_FindFile(&v8[10].padding_0[585], v8->field_348);\n
    cgc_CreateFile(&v0[10].padding_0[578], 247, 0, 0, v2);\n
    v9 = v0;\n
    v1 = cgc_FindFile(&v0[10].padding_0[578], v2);\n
    v11 = v3;\n
    return cgc_CreateFile(&v9[9].padding_0[735], 246, 559, &v9[10].padding_0[570], v1);\n
}\n
", "4223397:sub_4071a5": null, "4223408:cgc_ListFilesRecurse": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ListFilesRecurse(unsigned int v4[23], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[23];  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
        return v4;\n
    for (v3 = 0; v3 < a0; v3 += 1)\n
    {\n
        cgc_printf(v2 - 8360);\n
    }\n
    v1[0] = v4;\n
    v0 = cgc_GetFileID(v4);\n
    cgc_printf(v2 - 8355);\n
    cgc_ListFilesRecurse(v4[22], a0 + 1);\n
    return cgc_ListFilesRecurse(v4[20], a0);\n
}\n
", "4223606:sub_407276": null, "4223616:cgc_ListFilesLong": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_0 *field_50;\n
    char padding_54[8];\n
    unsigned int field_5c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[88];\n
    struct struct_0 *field_58;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ListFilesLong(struct_1 *v10)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    struct_2 *v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    struct_0 *v5;  // [bp-0x1c]\n
    struct_0 *v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    struct_0 *v12;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = cgc_FindFileAbsolute(\"System%Special%Flavor.sl\");\n
    v7 = cgc_LoadSharedLibrary(v8);\n
    v6 = v10->field_58;\n
    v12 = v7;\n
    for (v5 = v12; v6; v6 = v12)\n
    {\n
        v5 = v7;\n
        v4 = cgc_GetFileType(v6) - 241;\n
        if (cgc_GetFileType(v6) == 244)\n
        {\n
            v0 = &v4;\n
            cgc_ExtractLinkTargetAndID(v6->field_5c, v10, &v5);\n
        }\n
        v3 = cgc_LookupResource(v5, v4);\n
        v1 = cgc_GetFileName(v6);\n
        cgc_GetFileSize(v6);\n
        v0 = v3;\n
        cgc_printf(v2 - 8321);\n
        v12 = *((v6 + 80));\n
    }\n
    return v12;\n
}\n
", "4223914:sub_4073aa": null, "4223920:cgc_ExtractLinkTargetAndID": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[65];\n
    struct struct_0 *field_49;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ExtractLinkTargetAndID(struct_0 *v8, unsigned int a0, struct_0 *a1, unsigned int *a2)\n
{\n
    struct_0 *v0;  // [bp-0x80]\n
    unsigned int v1;  // [bp-0x74]\n
    struct_0 *v2;  // [bp-0x70]\n
    char *v3;  // [bp-0x6c]\n
    char v4;  // [bp-0x65]\n
    struct_0 *v5;  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp-0x10]\n
    struct_0 *v9;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = -1;\n
    v9 = v8;\n
    if (v9->field_0 > 0x800)\n
        return v8;\n
    v9 = v8;\n
    if (*((v9 + 4)) != 1279872587)\n
        return v8;\n
    if (cgc_strncmp(&v8->padding_8, v1 - 8310, 15))\n
        v6 = -1;\n
    else\n
        v6 = *(&(&v8->padding_8)[1]);\n
    v9 = cgc_strchr(&v8->padding_8, 43);\n
    v5 = v9;\n
    if (v5)\n
        return v9;\n
    v0 = v6;\n
    cgc_sprintf(&v4, v1 - 8294);\n
    v3 = cgc_calloc(68);\n
    cgc_strncpy(v3, &v4, 67);\n
    v9 = cgc_strchr(v3, 43);\n
    v2 = v9;\n
    if (!v2)\n
        return v9;\n
    v9 = cgc_atoi(&v2->field_0 + 1);\n
    v6 = v9;\n
    if (v6 < 0)\n
        return v9;\n
    v9 = cgc_VerifyAndLoadFlavorFile(&v8->padding_8);\n
    v7 = v9;\n
    if (v7)\n
    {\n
        *(a2) = v6;\n
        v9 = a1;\n
        *(v9) = v7;\n
        return a1;\n
    }\n
    return v9;\n
}\n
", "4224347:sub_40755b": null, "4224352:cgc_VerifyAndLoadFlavorFile": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_VerifyAndLoadFlavorFile(char *v9, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    struct_0 *v1;  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x60]\n
    void* v3;  // [bp-0x5c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x58]\n
    char *v5;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x4d]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_memset(&v6, 0, 65);\n
    cgc_strncpy(&v6, v9, 64);\n
    v5 = cgc_strchr(&v6, 95);\n
    if (v5)\n
    {\n
        *(v5) = 0;\n
    }\n
    else\n
    {\n
        v1 = &v6;\n
        v5 = &v1[cgc_strlen(&v6)];\n
    }\n
    v0 = cgc_strlen(&v6);\n
    if (v0 > 64 - cgc_strlen(v2 - 8288))\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    cgc_strcpy(v5, v2 - 8288);\n
    v4 = cgc_FindFile(&v6, a0);\n
    v3 = cgc_FindFile(v9, a0);\n
    if (!v3)\n
        v3 = cgc_FindFileAbsolute(v9);\n
    v7 = cgc_LoadSharedLibrary(v3);\n
    return v7;\n
}\n
", "4224705:sub_4076c1": null, "4224720:cgc_ReceiveCommand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveCommand()\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xb]\n
    char v3;  // [bp-0xa]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 0;\n
    if (cgc_receive(0, &v3, 1))\n
        cgc__terminate();\n
    v0 = 0;\n
    if (cgc_receive(0, &v2, 1))\n
        cgc__terminate();\n
    if (v2 != 10)\n
    {\n
        v4 = 120;\n
        return v4;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4224905:sub_407789": null, "4224912:main": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v1;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v27;  // ebx\n
\n
    v6 = v27;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = cgc_InitializeFileSystem();\n
    v3 = 1;\n
    cgc_InitializeOSFiles();\n
}\n
", "4225884:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}