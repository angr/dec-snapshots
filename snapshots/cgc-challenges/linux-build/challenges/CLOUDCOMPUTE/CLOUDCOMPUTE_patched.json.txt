{"4198400:_init": "extern struct_0 *g_4047f0;\n
\n
int _init()\n
{\n
    if (g_4047f0)\n
    {\n
        g_4047f0();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 14087;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 14023;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4047ec;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4047ec)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_is_non_printable": "int cgc_is_non_printable(char v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x9]\n
\n
    v0 = v2;\n
    if (!cgc_is_printable())\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4198950:sub_401226": null, "4198960:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_digit() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_letter() != 1)\n
        {\n
            v0 = v4;\n
            if (cgc_is_symbol() != 1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4199098:sub_4012ba": null, "4199104:cgc_is_digit": "int cgc_is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4199167:sub_4012ff": null, "4199168:cgc_is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    if (cgc_is_upper() != 1)\n
    {\n
        v0 = v4;\n
        if (cgc_is_lower() != 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4199275:sub_40136b": null, "4199280:cgc_is_symbol": "int cgc_is_symbol(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (33 <= v2 && v2 <= 47)\n
        goto LABEL_4013ef;\n
    if (58 <= v2 && v2 <= 64)\n
        goto LABEL_4013ef;\n
    if (91 <= v2 && v2 <= 96)\n
        goto LABEL_4013ef;\n
    if (123 > v2)\n
    {\n
LABEL_4013f8:\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!(v2 <= 126))\n
    {\n
        goto LABEL_4013f8;\n
    }\n
LABEL_4013ef:\n
    v1 = 1;\n
    return v1;\n
}\n
", "4199429:sub_401405": null, "4199440:cgc_is_upper": "int cgc_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 90 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4199503:sub_40144f": null, "4199504:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (97 <= v2 && 122 >= v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4199567:sub_40148f": null, "4199568:cgc_list_create_node": "int cgc_list_create_node(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 12;\n
    v1[0] = cgc_malloc();\n
    if (!v1)\n
    {\n
        v2[0] = v1;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4199670:sub_4014f6": null, "4199680:cgc_list_destroy_node": "typedef struct struct_2 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy_node(struct_2 *v2, struct struct_0 **a0)\n
{\n
    unsigned int v0[3];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_10)\n
    {\n
        v0 = *(a0)->field_0;\n
        v2->field_10();\n
    }\n
    *(a0)->field_0 = 0;\n
    *(a0)->field_4 = 0;\n
    *(a0)->field_8 = 0;\n
    v0[0] = *(a0);\n
    cgc_free();\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4199809:sub_401581": null, "4199824:cgc_list_init": "int cgc_list_init(unsigned int v0[5], unsigned int a0)\n
{\n
    v0[0] = 0;\n
    v0[1] = 0;\n
    v0[2] = &v0[1];\n
    v0[3] = &v0[1];\n
    v0[4] = a0;\n
    return v0;\n
}\n
", "4199887:sub_4015cf": null, "4199888:cgc_list_destroy": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_destroy(unsigned int v2[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 && 0 < cgc_list_length())\n
    {\n
        while (cgc_list_head_node())\n
        {\n
            v1[0] = cgc_list_pop();\n
            cgc_list_destroy_node(v2, v1);\n
        }\n
    }\n
    v2[2] = &v2[1];\n
    v2[3] = &v2[1];\n
    return v2;\n
}\n
", "4200059:sub_40167b": null, "4200064:cgc_list_length": "int cgc_list_length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4200077:sub_40168d": null, "4200080:cgc_list_head_node": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_list_head_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_8)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_8;\n
    return v0;\n
}\n
", "4200134:sub_4016c6": null, "4200144:cgc_list_pop": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_pop(void* v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_list_head_node(v4);\n
    v0 = v2;\n
    cgc_list_remove_node(v4);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4200245:sub_401735": null, "4200256:cgc_list_insert_node_at_end": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_end(unsigned int v3[4], unsigned int a0[3])\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v0[0] = v3;\n
        v2 = cgc_list_tail_node();\n
        a0[1] = &v3[1];\n
        a0[2] = v3[3];\n
        v3[3] = a0;\n
        if (!v2)\n
            v3[2] = a0;\n
        else\n
            v2->field_4 = a0;\n
        v4 = v3;\n
        *(v4) = *(v4) + 1;\n
        return v3;\n
    }\n
}\n
", "4200406:sub_4017d6": null, "4200416:cgc_list_tail_node": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_list_tail_node(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (&v1->padding_0[4] == v1->field_c)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1->field_c;\n
    return v0;\n
}\n
", "4200470:sub_401816": null, "4200480:cgc_list_insert_at_end": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_end(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2)\n
    {\n
        v1[0] = cgc_list_create_node(a0);\n
        return cgc_list_insert_node_at_end(v2, v1);\n
    }\n
    return 0;\n
}\n
", "4200563:sub_401873": null, "4200576:cgc_list_insert_node_at_start": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_node_at_start(unsigned int v2[4], unsigned int a0[3])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        return 0;\n
    }\n
    else if (!a0)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v1 = cgc_list_head_node(v2);\n
        a0[2] = &v2[1];\n
        a0[1] = v2[2];\n
        v2[2] = a0;\n
        if (!v1)\n
            v2[3] = a0;\n
        else\n
            v1->field_8 = a0;\n
        v3 = v2;\n
        *(v3) = *(v3) + 1;\n
        return v2;\n
    }\n
}\n
", "4200726:sub_401916": null, "4200736:cgc_list_insert_at_start": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_at_start(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2)\n
    {\n
        v1[0] = cgc_list_create_node(a0);\n
        return cgc_list_insert_node_at_start(v2, v1);\n
    }\n
    return 0;\n
}\n
", "4200819:sub_401973": null, "4200832:cgc_list_remove_node": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int cgc_list_remove_node(unsigned int *v2, struct_2 *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    struct_0 *v1;  // [bp-0x8]\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    if (a0)\n
    {\n
        v3 = 0;\n
        if (0 < *(v2))\n
        {\n
            v1 = a0->field_8;\n
            v0 = a0->field_4;\n
            v1->field_4 = v0;\n
            v0->field_8 = v1;\n
            a0->field_8 = 0;\n
            a0->field_4 = 0;\n
            v3 = v2;\n
            *(v3) = *(v3) - 1;\n
        }\n
    }\n
    return v3;\n
}\n
", "4200939:sub_4019eb": null, "4200944:cgc_list_find_node_with_data": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find_node_with_data(unsigned int *v5, struct struct_1 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a1)\n
    {\n
        v3 = cgc_list_head_node(v5);\n
        for (v2 = 0; v2 < *(v5); v2 += 1)\n
        {\n
            v0 = a1;\n
            if (a0(*(v3)) == 1)\n
            {\n
                v4 = v3;\n
                return v4;\n
            }\n
            v3 = *((v3 + 4));\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4201134:sub_401aae": null, "4201136:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
    unsigned int field_38[3];\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0[15];  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[15];  // ebx\n
    unsigned int v5[15];  // eax\n
    struct_0 *v6;  // ebx\n
    unsigned int v7[15];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v3 += 12;\n
    v1 = 0;\n
    cgc_init_heap();\n
    v4 = v0;\n
    v1 = cgc_list_find_node_with_data(&v4[5 + 9], &v4[185 + 8], v3);\n
    if (v1)\n
    {\n
        cgc_list_remove_node(&v0[5 + 9], v1);\n
    }\n
    else\n
    {\n
        if (v3 <= v0[13])\n
        {\n
            v5 = v0;\n
            v1 = v5[14];\n
            v5[13] = v5[13] - v3;\n
        }\n
        else\n
        {\n
            if (v0[13] > 12)\n
            {\n
                cgc_set_block_size(v0[14]);\n
                v6 = v0;\n
                cgc_list_insert_node_at_end(&v6[5].padding_0[36], v6->field_38);\n
                v7 = v0;\n
                v7[14] = 0;\n
                v7[13] = 0;\n
            }\n
            if (cgc_allocate(v3, 0))\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            v0[13] = 0x1000 - (v3 & 4095);\n
        }\n
        cgc_set_block_size(v1);\n
        v0[14] = v1 + v3;\n
    }\n
    cgc_list_insert_node_at_end(&v0[5 + 4], v1);\n
    v2 = v1 + 12;\n
    return v2;\n
}\n
", "4201588:sub_401c74": null, "4201600:cgc_is_enough_room": "int cgc_is_enough_room(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 >= a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4201644:sub_401cac": null, "4201648:cgc_set_block_size": "int cgc_set_block_size(unsigned int *v0, unsigned int a0)\n
{\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4201667:sub_401cc3": null, "4201680:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int allocated_list;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 -= 12;\n
    cgc_list_remove_node(&allocated_list, v2);\n
    v4 = v1;\n
    return cgc_list_insert_node_at_end(v0 + 336, v2);\n
}\n
", "4201765:sub_401d25": null, "4201776:cgc_init_heap": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_init_heap_done;\n
\n
int cgc_init_heap()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_init_heap_done)\n
    {\n
        cgc_list_init(&v0[6].padding_0[22], 0);\n
        cgc_list_init(&v0[6].padding_0[42], 0);\n
        v0->field_30 = 1;\n
        return v0;\n
    }\n
    return 0;\n
}\n
", "4201885:sub_401d9d": null, "4201888:cgc_memcpy": "int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (!a1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    v3 = a1;\n
    return v3;\n
}\n
", "4202003:sub_401e13": null, "4202016:cgc_memset": "int cgc_memset(char *v3, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = v3;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v1[v0] = a0;\n
    }\n
    v2 = a1;\n
    return v2;\n
}\n
", "4202119:sub_401e87": null, "4202128:cgc_recv_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_bytes(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
            return v4;\n
        v2 = 0;\n
        v0 = &v2;\n
        v4 = cgc_receive(0, a0 + a1 - v3, v3);\n
        if (v4)\n
            return v4;\n
        v3 -= v2;\n
        if (!v2)\n
            return v4;\n
    }\n
}\n
", "4202308:sub_401f44": null, "4202320:cgc_recv_until_delim_n": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv_until_delim_n(unsigned int v6, char a0, char *a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a1 && a2)\n
    {\n
        v4 = 0;\n
        v3 = 0;\n
        v2 = 0;\n
        for (v2 = 0; v2 < a2; v2 += 1)\n
        {\n
            v0 = &v4;\n
            if (cgc_receive(v6, &a1[v2], 1))\n
            {\n
                v5 = 32;\n
                return v5;\n
            }\n
            if (!v4)\n
                break;\n
            v3 += 1;\n
            if (a0 == a1[v2])\n
                break;\n
        }\n
        if (a0 != a1[v2])\n
        {\n
            v5 = 32;\n
            return v5;\n
        }\n
        v5 = v3;\n
        return v5;\n
    }\n
    v5 = 32;\n
    return v5;\n
}\n
", "4202611:sub_402073": null, "4202624:cgc_send_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_bytes(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!v3)\n
            return v4;\n
        v2 = 0;\n
        v0 = &v2;\n
        v4 = cgc_transmit(1, a0, v3);\n
        if (v4)\n
            return v4;\n
        v3 -= v2;\n
        if (!v2)\n
            return v4;\n
    }\n
}\n
", "4202794:sub_40212a": null, "4202800:cgc_streq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_streq(char *v4, char *a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char *v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_strlen(v4, a1);\n
    if (v1 != cgc_strlen(a0))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (*(v4) == a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v6 = v4;\n
        v4 = v6 + 1;\n
        v7 = *(v6);\n
        v8 = a0;\n
        a0 = v8 + 1;\n
        if (v7 != *(v8))\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4202992:cgc_strlen": "int cgc_strlen(char *v2, char a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = 0; a0 != *(v2); v0 += 1)\n
    {\n
        v2 += 1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4203089:sub_402251": null, "4203104:cgc_bytecode_exec": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[2];\n
    char field_5;\n
    char padding_6[1];\n
    char field_7;\n
} struct_0;\n
\n
int cgc_bytecode_exec(unsigned int *v10, unsigned short a0)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned short v4;  // [bp-0x18]\n
    char v5;  // [bp-0x15]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x10]\n
    struct_0 *v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x8]\n
    struct_0 *v11;  // ecx\n
    char *v14;  // eax\n
    char *v15;  // eax\n
    char *v16;  // eax\n
    char *v17;  // eax\n
    char *v18;  // eax\n
    unsigned int v19;  // eax\n
\n
    v9 = 0;\n
    v8 = v10 + 3;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = (*(v10) & 16777215) * 0x100;\n
    for (v2 = (v3 | v10) + 3 + a0; v8 < v10 + a0; v8 += 1)\n
    {\n
        v11 = v8;\n
        v6 = v11->field_0 | v11->field_2 * 0x10000;\n
        v5 = v8->field_5;\n
        v4 = v8->field_7;\n
        v7 = v2 + v4;\n
        v1 = v6;\n
        if (v1 == 4347219)\n
        {\n
            v14 = v7;\n
            *(v14) = *(v14) - v5;\n
        }\n
        else if (v1 == 4473921)\n
        {\n
            v15 = v7;\n
            *(v15) = *(v15) + v5;\n
        }\n
        else if (v1 == 4999251)\n
        {\n
            if (v5 >= 8)\n
            {\n
                *(v7) = 0;\n
            }\n
            else\n
            {\n
                v17 = v7;\n
                *(v17) = *(v17) << (v5 & 31);\n
            }\n
        }\n
        else\n
        {\n
            if (v1 == 5002573)\n
            {\n
                v16 = v7;\n
                *(v16) = v5 * *(v16);\n
            }\n
            else if (v1 == 5002574)\n
            {\n
                *(v7) = 0;\n
            }\n
            else if (v1 == 5392467)\n
            {\n
                if (v5 >= 8)\n
                {\n
                    *(v7) = 0;\n
                }\n
                else\n
                {\n
                    v18 = v7;\n
                    *(v18) = *(v18) >> (v5 & 31);\n
                }\n
            }\n
            else\n
            {\n
                if (v1 == 5522771)\n
                {\n
                    *(v7) = v5;\n
                }\n
                else if (v1 == 5654852)\n
                {\n
                    if (v5)\n
                    {\n
                        v0 = v7;\n
                        v19 = *(v0);\n
                        *(v0) = (v19 >> 31 CONCAT v19) /m v5;\n
                    }\n
                    else\n
                    {\n
                        *(v7) = 170;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    return v9;\n
}\n
", "4203681:sub_4024a1": null, "4203696:cgc_find_session": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_session(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 20)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (v3 != *((v0 + 60 + v1 * 12)))\n
        {\n
            v1 = v1 + 1;\n
        }\n
        else\n
        {\n
            v2 = v0 + 60 + v1 * 12;\n
            return v2;\n
        }\n
    }\n
}\n
", "4203820:sub_40252c": null, "4203824:cgc_do_init": "typedef struct struct_1 {\n
    char padding_0[300];\n
    char field_12c;\n
    char padding_12d[7];\n
    unsigned int field_134;\n
    unsigned int field_138;\n
    char padding_13c[40];\n
    unsigned int field_164;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern char rx_buf;\n
\n
int cgc_do_init(struct struct_0 **v5)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // ebx\n
    unsigned int v8;  // eax\n
    struct_1 *v9;  // ebx\n
    unsigned int v10;  // eax\n
    struct_1 *v11;  // ebx\n
    struct_1 *v12;  // ebx\n
    struct_1 *v13;  // ebx\n
    struct_1 *v14;  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    cgc_memset(&rx_buf, 0, 0x10000);\n
    v2 = 0;\n
    v3 = cgc_recv_bytes(0, &v0->field_164, 4);\n
    if (v3)\n
    {\n
        v3 = 32;\n
        return v3;\n
    }\n
    v2 = v0->field_164;\n
    if (v2 == 3823366214)\n
        cgc__terminate();\n
    if (0xe0000000 <= v2 && v2 <= 4026531839)\n
    {\n
        v7 = v0;\n
        v7->field_138 = 3772689897;\n
        v3 = cgc_send_bytes(1, &v7->field_138, 4);\n
        if (v3)\n
        {\n
            v3 = 32;\n
            return v3;\n
        }\n
        *(v5) = 0;\n
        return v3;\n
    }\n
    if (v2)\n
    {\n
        v8 = cgc_find_session(v2);\n
        *(v5) = v8;\n
        if (v8)\n
        {\n
            v3 = cgc_send_bytes(1, *(v5), 4);\n
            if (v3)\n
            {\n
                v3 = 32;\n
                return v3;\n
            }\n
            return v3;\n
        }\n
        else\n
        {\n
            v11 = v0;\n
            v11->field_138 = 3911716348;\n
            v3 = cgc_send_bytes(1, &v11->field_138, 4);\n
            if (v3)\n
            {\n
                v3 = 32;\n
                return v3;\n
            }\n
            return v3;\n
        }\n
    }\n
    else if (20 <= v0->field_12c + 1)\n
    {\n
        v9 = v0;\n
        v9->field_138 = 3807020676;\n
        v3 = cgc_send_bytes(1, &v9->field_138, 4);\n
        if (v3)\n
        {\n
            v3 = 32;\n
            return v3;\n
        }\n
        *(v5) = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v10 = cgc_find_session(v2);\n
        *(v5) = v10;\n
        if (!v10)\n
            return v3;\n
        v1 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (cgc_random(*(v5), 4))\n
            {\n
LABEL_4027de:\n
                return v3;\n
            }\n
            if (!(4 == v1))\n
                goto LABEL_4027de;\n
            if (*(v5)->field_0)\n
            {\n
                if (0xe0000000 > *(v5)->field_0)\n
                    break;\n
                if (4026531839 < *(v5)->field_0)\n
                    break;\n
            }\n
        }\n
        v3 = cgc_send_bytes(1, *(v5), 4);\n
        if (v3)\n
        {\n
            v3 = 32;\n
            return v3;\n
        }\n
        v3 = cgc_recv_bytes(0, &v0->field_138, 4);\n
        if (v3)\n
        {\n
            v3 = 32;\n
            return v3;\n
        }\n
        else if (*(v5)->field_0 != v0->field_138)\n
        {\n
            v12 = v0;\n
            v12->field_138 = 3806177894;\n
            v3 = cgc_send_bytes(1, &v12->field_138, 4);\n
            if (v3)\n
            {\n
                v3 = 32;\n
                return v3;\n
            }\n
            *(v5) = 0;\n
            return v3;\n
        }\n
        else\n
        {\n
            v3 = cgc_recv_bytes(0, &*(v5)->field_8, 2);\n
            if (v3)\n
            {\n
                v3 = 32;\n
                return v3;\n
            }\n
            else if ((*(v5)->field_8 >> 31 CONCAT *(v5)->field_8) /m 8 >> 32)\n
            {\n
                *(v5) = 0;\n
                return v3;\n
            }\n
            else if (0x200 < *(v5)->field_8)\n
            {\n
                v13 = v0;\n
                v13->field_138 = 3812357566;\n
                v3 = cgc_send_bytes(1, &v13->field_138, 4);\n
                if (v3)\n
                {\n
                    v3 = 32;\n
                    return v3;\n
                }\n
                *(v5) = 0;\n
                return v3;\n
            }\n
            else\n
            {\n
                v14 = v0;\n
                v14->field_134 = v14->field_134 + -(*(v5)->field_8 + 259);\n
                *(v5)->field_4 = v14->field_134;\n
                v14->field_12c = v14->field_12c + 1;\n
                return v3;\n
            }\n
        }\n
    }\n
}\n
", "4205092:sub_402a24": null, "4205104:cgc_do_exec": "typedef struct struct_1 {\n
    char padding_0[312];\n
    unsigned int field_138;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_3 *field_4;\n
    unsigned short field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern void* cgc_tmp;\n
\n
int cgc_do_exec(struct_2 *v6)\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_1 *v8;  // ebx\n
    struct_1 *v9;  // ecx\n
    struct_1 *v10;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    cgc_tmp = 0;\n
    v4 = cgc_recv_bytes(0, &cgc_tmp, 4);\n
    if (v4)\n
    {\n
        v4 = 32;\n
        return v4;\n
    }\n
    else if (v6->field_0 != v0->field_138)\n
    {\n
        v8 = v0;\n
        v8->field_138 = 3806177894;\n
        v4 = cgc_send_bytes(1, &v8->field_138, 4);\n
        if (!v4)\n
        {\n
            v6 = 0;\n
            return v4;\n
        }\n
        v4 = 32;\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        v3 = cgc_find_session(v0->field_138);\n
        if (!v3)\n
            return v4;\n
        v9 = v0;\n
        v9->field_138 = v6->field_4->field_0 | v6->field_4[1].field_0 * 0x100 | v6->field_4[2].field_0 * 0x10000;\n
        if (!v9->field_138)\n
        {\n
            v10 = v0;\n
            v10->field_138 = (v6->field_4 & -0x100) >> 8;\n
            cgc_memcpy(v6->field_4, &v10->field_138, 3);\n
        }\n
        v4 = cgc_recv_bytes(0, v6->field_4 + 3, v3->field_8);\n
        if (v4)\n
        {\n
            v4 = 32;\n
            return v4;\n
        }\n
        v4 = cgc_bytecode_exec(v6->field_4, v6->field_8);\n
        if (v4)\n
            return v4;\n
        v4 = cgc_send_bytes(1, v6, 4);\n
        if (v4)\n
        {\n
            v4 = 32;\n
            return v4;\n
        }\n
        v2 = (*(&v6->field_4) & 16777215) * 0x100;\n
        v1 = (v2 | v6->field_4) + 3 + v6->field_8;\n
        v4 = cgc_send_bytes(1, v1, 0x100);\n
        if (v4)\n
        {\n
            v4 = 32;\n
            return v4;\n
        }\n
        return v4;\n
    }\n
}\n
", "4205769:sub_402cc9": null, "4205776:main": "extern unsigned int _GLOBAL_OFFSET_TABLE_[78];\n
extern char cgc_session_dat;\n
\n
int main(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[78];  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10[78];  // eax\n
\n
    v7 = v9;\n
    v2[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v0 = &cgc_session_dat;\n
    v5 = cgc_allocate(15420, 0);\n
    if (v5)\n
        return v5;\n
    v10 = v2;\n
    v10[77] = v10[76] + 15420;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (!v1)\n
        {\n
            v3 = 0;\n
            v5 = cgc_do_init(&v3);\n
            if (v5)\n
            {\n
                return v5;\n
            }\n
            else if (v3)\n
            {\n
                v4 = 1;\n
            }\n
        }\n
        else\n
        {\n
            if (v1 != 1)\n
            {\n
                v5 = 65;\n
                return v5;\n
            }\n
            v5 = cgc_do_exec(v3);\n
            if (v5)\n
                return v5;\n
            v4 = 0;\n
        }\n
    }\n
}\n
", "4206080:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}