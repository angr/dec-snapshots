{"4202496:_init": "extern struct_0 *g_40a7b4;\n
\n
int _init()\n
{\n
    if (g_40a7b4)\n
    {\n
        g_40a7b4();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202688:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202704:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202720:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202736:sub_4020f0": "int sub_4020f0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202742:sub_4020f6": null, "4202752:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202795:sub_40212b": null, "4202796:sub_40212c": "int sub_40212c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202800:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202804:sub_402134": null, "4202816:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 34427;\n
    v6 = v5 + 46;\n
    v7 = v5 + 46;\n
    if (v7 == v6)\n
        return v5 + 46;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202867:sub_402173": "int sub_402173()\n
{\n
}\n
", "4202873:sub_402179": "int sub_402179()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202880:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 34363;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 46;\n
    v9 = (v6 + 46 - (v6 + 46) >> 31) + (46 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202951:sub_4021c7": "int sub_4021c7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202960:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a7b0;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a7b0)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020f0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203035:sub_40221b": "int sub_40221b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203040:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203049:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203053:sub_40222d": null, "4203056:cgc_floor": null, "4203220:sub_4022d4": null, "4203232:cgc_round_away_from_zero": null, "4203386:sub_40237a": null, "4203392:cgc_round": null, "4203536:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203628:sub_40246c": null, "4203632:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4203841:sub_402541": null, "4203856:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4204049:sub_402611": null, "4204064:cgc_float_to_str": null, "4204922:sub_40297a": null, "4204928:cgc_vprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v14, struct struct_1 **a0)\n
{\n
    struct_0 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_0 *v6;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x60]\n
    struct_0 *v8;  // [bp-0x5c], Other Possible Types: unsigned int\n
    char *v9;  // [bp-0x58]\n
    char v10;  // [bp-0x51]\n
    char v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    struct struct_1 **v15;  // eax\n
    struct struct_1 **v16;  // eax\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct struct_1 **v22;  // eax\n
    struct struct_1 **v23;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    if (!v14)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v13 = v12;\n
            return v13;\n
        }\n
        else if (*(v14) != 64)\n
        {\n
            cgc_putc(*(v14));\n
            v14 += 1;\n
            v12 += 1;\n
        }\n
        else\n
        {\n
            v14 += 1;\n
            v1 = *(v14);\n
            if (!v1)\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 99)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v10 = *(v15);\n
                cgc_putc(v10);\n
                v12 += 1;\n
            }\n
            else if (v1 == 100)\n
            {\n
                v16 = a0;\n
                a0 = v16 + 1;\n
                v9 = &*(v16)->field_0;\n
                cgc_int_to_str(v9, &v11);\n
                for (v8 = &v11; v8->field_0; v8 += 1)\n
                {\n
                    cgc_putc(v8->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v19 = ftop<4> - 1 + 1;\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v11;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v21 = v20 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v11; *(v4); v4 += 1)\n
                {\n
                    cgc_putc(*(v4));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v22 = a0;\n
                a0 = v22 + 1;\n
                for (v3 = &*(v22)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 120)\n
            {\n
                v23 = a0;\n
                a0 = v23 + 1;\n
                v7 = *(v23);\n
                cgc_int_to_hex(v7, &v11);\n
                for (v6 = &v11; v6->field_0; v6 += 1)\n
                {\n
                    cgc_putc(v6->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            v14 += 1;\n
        }\n
    }\n
}\n
", "4205687:sub_402c77": null, "4205696:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4205754:sub_402cba": null, "4205760:cgc_sprng": "typedef struct struct_0 {\n
    char padding_0[336];\n
    unsigned int field_150;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprng(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // edi\n
    struct_0 *v16;  // eax\n
    unsigned int v17;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = a0;\n
    v2 = v4;\n
    for (v1 = 0; v1 < 16; v1 += 1)\n
    {\n
        v5 = v2;\n
        v6 = v3;\n
        v3 = v6 ^ v6 / 0x1000;\n
        v2 = v5 ^ ((v6 CONCAT v5) * 0x100000 >> 32);\n
        v8 = v2;\n
        v9 = v3;\n
        v3 = v9 ^ ((v9 CONCAT v8) * 0x2000000 >> 32);\n
        v2 = v8 ^ v8 * 0x2000000;\n
        v12 = v2;\n
        v13 = v3;\n
        v3 = v13 ^ v13 / 0x8000000;\n
        v2 = v12 ^ ((v13 CONCAT v12) * 32 >> 32);\n
        v15 = v2;\n
        v16 = v0;\n
        v17 = v1;\n
        *(&v16->padding_0[208 + 8 * v17]) = v15 * 3625897269;\n
        *(&v16->padding_0[212 + 8 * v17]) = (v15 * 3625897269 >> 32) + v15 * 419896726 + v3 * 3625897269;\n
    }\n
    v0->field_150 = 0;\n
    return v0;\n
}\n
", "4205986:sub_402da2": null, "4206000:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int position;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[212 + 8 * position]);\n
    v2 = *(&(&_GLOBAL_OFFSET_TABLE_)[208 + 8 * position]);\n
    v9 = position + 1;\n
    if (v9 < 0)\n
        v9 = position + 16;\n
    position = position + -(v9 & -0x10) + 1;\n
    v1 = *(&(&_GLOBAL_OFFSET_TABLE_)[212 + 8 * position]);\n
    v0 = *(&(&_GLOBAL_OFFSET_TABLE_)[208 + 8 * position]);\n
    v10 = v0;\n
    v11 = v1;\n
    v1 = v11 ^ ((v11 CONCAT v10) * 0x8000000 >> 32);\n
    v0 = v10 ^ v10 * 0x8000000;\n
    v14 = v0;\n
    v15 = v1;\n
    v1 = v15 ^ v15 / 0x2000;\n
    v0 = v14 ^ ((v15 CONCAT v14) * 0x80000 >> 32);\n
    v2 ^= v3 >> 14;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[212 + 8 * position]) = v3 ^ v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[208 + 8 * position]) = v2 ^ v0;\n
    return *(&(&_GLOBAL_OFFSET_TABLE_)[208 + 8 * position]) * 3479400805;\n
}\n
", "4206264:sub_402eb8": null, "4206272:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 <= v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = a0 - v5 + 1;\n
    v2 = (0 CONCAT -1) /m v3;\n
    do\n
    {\n
        v1 = cgc_prng();\n
    } while (v1 >= v3 * v2);\n
    v4 = (0 CONCAT v1) /m v2 + v5;\n
    return v4;\n
}\n
", "4206401:sub_402f41": null, "4206416:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4206488:sub_402f98": null, "4206496:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206550:sub_402fd6": null, "4206560:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206614:sub_403016": null, "4206624:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4206690:sub_403062": null, "4206704:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4206773:sub_4030b5": null, "4206784:cgc_isdigit": "int cgc_isdigit(char v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4206844:sub_4030fc": null, "4206848:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4206942:sub_40315e": null, "4206944:cgc_isnan": null, "4206967:sub_403177": null, "4206976:cgc_isinf": null, "4207023:sub_4031af": null, "4207024:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_4033e2:\n
                v15 = v5;\n
                v3 = v15;\n
                if (![D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_4033bb;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_4033bb;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_4033bb;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_4033e2;\n
                if (!v4)\n
                {\n
LABEL_403337:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_4033bb;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_403337;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_4033bb:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4207612:sub_4033fc": null, "4207616:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4208020:sub_403594": null, "4208032:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4208123:sub_4035fb": null, "4208128:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4208283:sub_40369b": null, "4208288:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4208396:sub_40370c": null, "4208400:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4208478:sub_40375e": null, "4208480:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4208588:sub_4037cc": null, "4208592:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4208787:sub_403893": null, "4208800:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4208877:sub_4038ed": null, "4208880:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == a0)\n
            return v4;\n
        v4[v5] = v2;\n
        v4 += 1;\n
    }\n
}\n
", "4209072:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4209231:sub_403a4f": null, "4209232:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4209431:sub_403b17": null, "4209440:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 7495, 1);\n
}\n
", "4209563:sub_403b9b": null, "4209568:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4209674:sub_403c0a": null, "4209680:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[188];\n
    unsigned int field_bc;\n
    unsigned int field_c0;\n
    unsigned int field_c4;\n
    struct struct_1 *field_c8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_c0)\n
        {\n
            cgc_deallocate(v4->field_c0);\n
            v12 = v4;\n
            v12->field_c0 = 0;\n
            v12->field_c4 = 0;\n
            v12->field_c8 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_c0)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_c8 >= v11->field_c0 + v11->field_c4)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_c0)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_c4 = cgc_strlen(v10);\n
        v0 = &v13->field_c0;\n
        if (cgc_allocate(v13->field_c4, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_c0, v10);\n
        v14 = v4;\n
        v14->field_c8 = v14->field_c0;\n
    }\n
    v10 = &v4->field_c8->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_c0 + v15->field_c4;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_c0 + v16->field_c4)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_bc = v8;\n
    *(v7) = 0;\n
    v17->field_c8 = v7 + 1;\n
    v9 = v17->field_bc;\n
    return v9;\n
}\n
", "4210427:sub_403efb": null, "4210432:cgc_write": "int cgc_write(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    cgc_transmit(1, v3, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4210529:sub_403f61": null, "4210544:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4210736:cgc_get_user_answer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_user_answer(unsigned int *v9)\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x20]\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x1b]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v6, 15);\n
    v0 = 0;\n
    v4 = cgc_receive(0, &v6, 14);\n
    if (v4)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    v3 = cgc_strlen(&v6);\n
    if (*((&v5 + v3)) == 10)\n
        v3 += 1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v3)\n
        {\n
            *(v9) = cgc_atoi(&v6);\n
            v7 = 1;\n
            return v7;\n
        }\n
        if (!cgc_isdigit((&v6)[v2]) && (&v6)[v2] != 45)\n
        {\n
            cgc_printf(v1 - 10104);\n
            v7 = 0;\n
            return v7;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4211040:cgc_get_user_equation": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_user_equation(unsigned int v10)\n
{\n
    void* v0;  // [bp-0x130]\n
    unsigned int v1;  // [bp-0x124]\n
    struct_0 *v2;  // [bp-0x120]\n
    unsigned int v3;  // [bp-0x11c]\n
    struct_0 *v4;  // [bp-0x118]\n
    unsigned int v5;  // [bp-0x114]\n
    unsigned int v6;  // [bp-0x110]\n
    char v7;  // [bp-0x10c]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v7, 0x100);\n
    v0 = 0;\n
    v6 = cgc_receive(0, &v7, 255);\n
    if (v6)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    if (*(&v6 + cgc_strlen(&v7)) == 10)\n
    {\n
        v3 = v10;\n
        v4 = &v7;\n
        cgc_strncpy(v3, v4, cgc_strlen(&v7) - 1);\n
    }\n
    else\n
    {\n
        v1 = v10;\n
        v2 = &v7;\n
        cgc_strncpy(v1, v2, cgc_strlen(&v7));\n
    }\n
    v8 = 1;\n
    return v8;\n
}\n
", "4211387:sub_4042bb": null, "4211392:cgc_isValidChar": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isValidChar(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 17)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*(68 + v0 + v1) != v3)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4211505:sub_404331": null, "4211520:cgc_parse_input": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_input(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_get_str_end(v5);\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v2)\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
        if (!cgc_isValidChar(v5[v1]))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4211655:sub_4043c7": null, "4211664:cgc_generate_one_equation": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_generate_one_equation(unsigned int v22)\n
{\n
    char v0;  // [bp-0x6d]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x64]\n
    char v4;  // [bp-0x5d]\n
    unsigned int v5;  // [bp-0x5c]\n
    unsigned int v6;  // [bp-0x58]\n
    unsigned int v7;  // [bp-0x54]\n
    unsigned int v8;  // [bp-0x4f]\n
    unsigned int v9;  // [bp-0x40]\n
    void* v10;  // [bp-0x3c], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x38], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    char *v17;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v18;  // [bp-0x1c]\n
    char v19;  // [bp-0x15]\n
    void* v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // ecx\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // ecx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        v19 = 0;\n
        v18 = 1;\n
        v17 = 0;\n
        v16 = cgc_random_in_range(4, 15);\n
        v15 = v16 + 1;\n
        v14 = cgc_random_in_range(0, v16);\n
        v13 = 0;\n
        v12 = 0;\n
        v11 = 0;\n
        v10 = 0;\n
        v10 = 0;\n
        while (v10 < v15)\n
        {\n
            if (v11)\n
            {\n
                v5 = cgc_random_in_range(0, 3);\n
                v4 = *((v3 + v5 + 64));\n
                v19 = v4;\n
                v24 = v17;\n
                v17 = v24 + 1;\n
                *((v22 + v24)) = v4;\n
                v11 = 0;\n
            }\n
            else\n
            {\n
                v2 = v10;\n
                v23 = v15;\n
                if (v2 < (v27 >> 31 CONCAT v27) /m 2 && v13 < v14)\n
                {\n
                    v25 = v17;\n
                    v17 = v25 + 1;\n
                    *((v22 + v25)) = 40;\n
                    v13 += 1;\n
                }\n
                v9 = cgc_random_in_range(1, 0x100);\n
                if (v19 == 47)\n
                    v9 = cgc_random_in_range(1, v18);\n
                v18 = v9;\n
                cgc_itos(v9);\n
                v7 = cgc_get_str_end(&v8);\n
                for (v6 = 0; v6 < v7; v6 += 1)\n
                {\n
                    v26 = v17;\n
                    v17 = v26 + 1;\n
                    *((v22 + v26)) = *(&v8 + v6);\n
                }\n
                v1 = v10 + 1;\n
                v27 = v15;\n
                if (v1 > (v27 >> 31 CONCAT v27) /m 2 && v12 < v13)\n
                {\n
                    v28 = v17;\n
                    v17 = v28 + 1;\n
                    *((v22 + v28)) = 41;\n
                    v12 += 1;\n
                }\n
                v11 = 1;\n
                v10 += 1;\n
            }\n
        }\n
        for (; v12 < v13; v12 += 1)\n
        {\n
            v29 = v17;\n
            v17 = v29 + 1;\n
            *((v22 + v29)) = 41;\n
        }\n
        *((v22 + v17)) = 0;\n
        v20 = 0;\n
        v21 = cgc_solve_equation(v22);\n
        if ((Not (Not (Load(addr=stack_base-16, size=4, endness=Iend_LE) == 0x1<32>)))) { Goto None } else { Goto None }\n
        v0 = 1;\n
        if (v21 == 1)\n
            v0 = !v20;\n
    } while ((v0 & 1));\n
    return v20;\n
}\n
", "4212439:sub_4046d7": null, "4212448:cgc_generate_equation": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_generate_equation()\n
{\n
    struct_0 *v0;  // [bp-0x128]\n
    unsigned int v1;  // [bp-0x118]\n
    void* v2;  // [bp-0x114]\n
    unsigned int v3;  // [bp-0x110]\n
    char v4;  // [bp-0x10c]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_generate_one_equation(&v4);\n
    v2 = 0;\n
    v0 = &v4;\n
    cgc_printf(v1 - 10080);\n
    cgc_printf(v1 - 10066);\n
    if (cgc_get_user_answer(&v2) != 1)\n
    {\n
        cgc_printf(v1 - 10051);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v2 != v3)\n
    {\n
        cgc_printf(v1 - 10029);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        cgc_printf(v1 - 10040);\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4212706:sub_4047e2": null, "4212720:cgc_seed_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_seed_prng()\n
{\n
    unsigned int v0;  // [bp-0x130]\n
    unsigned int v1;  // [bp-0x12c]\n
    unsigned int v2;  // [bp-0x128]\n
    unsigned int v3;  // [bp-0x124]\n
    unsigned int v4;  // [bp-0x120]\n
    char v5;  // [bp-0x118]\n
    unsigned int v6;  // [bp-0x114]\n
    char v7;  // [bp-0x110]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // eax\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
\n
    v9 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_bzero(&v7, 0x100);\n
    cgc_printf(v1 - 10011);\n
    v0 = &v5;\n
    v6 = cgc_receive(0, &v7, 255);\n
    if (v6)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v4 = -1;\n
    v3 = -1;\n
    for (v2 = 0; v2 < *(&v5); v2 += 1)\n
    {\n
        v12 = v3;\n
        v13 = v4;\n
        v16 = (&v7)[v2];\n
        v17 = ((v13 CONCAT v12) * 16 >> 32) ^ v16 >> 31;\n
        v3 = ((v12 CONCAT v13) * 16 >> 32) ^ v16;\n
        v4 = v17;\n
    }\n
    cgc_sprng(v3, v4);\n
    v8 = 1;\n
    return v8;\n
}\n
", "4213045:sub_404935": null, "4213056:cgc_prompt_for_equation": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prompt_for_equation()\n
{\n
    unsigned int v0;  // [bp-0x180]\n
    unsigned int v1;  // [bp-0x17c]\n
    struct_0 *v2;  // [bp-0x174]\n
    unsigned int v3;  // [bp-0x170]\n
    unsigned int v4;  // [bp-0x16c]\n
    void* v5;  // [bp-0x168]\n
    void* v6;  // [bp-0x164], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp-0x160], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x15c]\n
    unsigned int v9;  // [bp-0x158]\n
    unsigned int v10;  // [bp-0x154]\n
    char v11;  // [bp-0x150]\n
    void* v12;  // [bp-0x140], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x13c], Other Possible Types: unsigned int\n
    unsigned int *v14;  // [bp-0x138], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x134]\n
    char v16;  // [bp-0x12c]\n
    char v17;  // [bp-0x128]\n
    char v18;  // [bp-0x121]\n
    unsigned int v19;  // [bp-0x120]\n
    unsigned int v20;  // [bp-0x11c]\n
    void* v21;  // [bp-0x118], Other Possible Types: unsigned int\n
    char v22;  // [bp-0x114]\n
    unsigned int v23;  // [bp-0x14]\n
    unsigned int v24;  // [bp-0x8]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // eax\n
\n
    v24 = v26;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v21 = 0;\n
    cgc_bzero(&v22, 0x100);\n
    v20 = cgc_random_in_range(0, 5);\n
    v19 = cgc_random_in_range(0, 0x8000);\n
    v18 = *((v3 + cgc_random_in_range(0, 3) + 64));\n
    for (v14 = 0; v14 < 4; v14 += 1)\n
    {\n
        *(&(&v15)[4 * v14]) = cgc_random_in_range(1, 0x100);\n
    }\n
    cgc_printf(v3 - 9994);\n
    cgc_printf(v3 - 9943);\n
    v0 = *(&v16);\n
    v1 = *(&v17);\n
    cgc_printf(v3 - 9891);\n
    v13 = 0;\n
    v12 = 0;\n
    memset(&v11, 0, 16);\n
    if (cgc_get_user_equation(&v22) != 1)\n
    {\n
        v23 = 0;\n
        return v23;\n
    }\n
    v21 = cgc_parse_input(&v22);\n
    cgc_printf(v3 - 9848);\n
    v10 = 0;\n
    while (true)\n
    {\n
        v2 = v10;\n
        if (v2 >= cgc_strlen(&v22))\n
            break;\n
        if ((&v22)[v10] == 40)\n
            v13 += 1;\n
        if ((&v22)[v10] == v18)\n
            v12 += 1;\n
        if ((&v22)[v10] <= 57 && (&v22)[v10] >= 48)\n
        {\n
            v8 = 0;\n
            v9 = cgc_stoi(&(&v22)[v10]);\n
            for (v7 = 0; v7 < 4; v7 += 1)\n
            {\n
                if (v9 == *((&v15 + 0x4 * v7)))\n
                {\n
                    v27 = v7;\n
                    *(&(&v11)[4 * v27]) = *(&(&v11)[4 * v27]) + 1;\n
                }\n
            }\n
            v10 = v8 - 1 + v10;\n
        }\n
        v10 += 1;\n
    }\n
    if (v13 != v20)\n
    {\n
        cgc_printf(v3 - 9814);\n
        v23 = 0;\n
        return v23;\n
    }\n
    else if (!v12)\n
    {\n
        cgc_printf(v3 - 9781);\n
        v23 = 0;\n
        return v23;\n
    }\n
    else\n
    {\n
        for (v6 = 0; v6 < 4; v6 += 1)\n
        {\n
            if (!*((&v11 + 0x4 * v6)))\n
            {\n
                cgc_printf(v3 - 9756);\n
                v23 = 0;\n
                return v23;\n
            }\n
        }\n
        v5 = 0;\n
        v4 = cgc_solve_equation(&v22);\n
        if (v4 != 1)\n
        {\n
            cgc_printf(v3 - 9733);\n
            v23 = 0;\n
            return v23;\n
        }\n
        else if (v5 != v19)\n
        {\n
            cgc_printf(v3 - 9708);\n
            v23 = 0;\n
            return v23;\n
        }\n
        else\n
        {\n
            cgc_printf(v3 - 9686);\n
            v23 = 1;\n
            return v23;\n
        }\n
    }\n
}\n
", "4214438:sub_404ea6": null, "4214448:cgc_print_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_menu()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"1. Solve Equation\\n
\");\n
    cgc_printf(v0 - 9609);\n
    cgc_printf(v0 - 9589);\n
    cgc_printf(v0 - 9574);\n
    cgc_printf(v0 - 9554);\n
    cgc_printf(v0 - 9537);\n
    cgc_printf(v0 - 9517);\n
    cgc_get_user_answer(&v1);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4214609:sub_404f51": null, "4214624:cgc_print_statistics": "extern unsigned int _GLOBAL_OFFSET_TABLE_[101];\n
\n
int cgc_print_statistics()\n
{\n
    void* v0;  // [bp-0x30]\n
    unsigned int v1[101];  // [bp-0x2c]\n
    char v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[101];  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v5;\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_printf(\"Total won: @d\\n
\");\n
    cgc_printf(&v1[23 + 50] + 1);\n
    cgc_printf(&v1[23 + 46] + 1);\n
    cgc_printf(&v1[23 + 38] + 1);\n
    cgc_printf(&v1[23 + 29] + 3);\n
    cgc_printf(&v1[23 + 21] + 2);\n
    cgc_printf(&v1[23 + 12] + 3);\n
    cgc_printf(&v1[23 + 5] + 1);\n
    cgc_printf(&v1[22 + 98] + 1);\n
    cgc_printf(&v1[22 + 91] + 2);\n
    cgc_printf(&v1[22 + 84] + 1);\n
    cgc_printf(&v1[22 + 78]);\n
    if (v1[94] == 20)\n
    {\n
        cgc_printf(&v1[22 + 71] + 1);\n
        cgc_bzero(&v2, 32);\n
        v0 = 0;\n
        cgc_receive(0, &v2, 77);\n
        cgc_printf(&v1[22 + 58] + 3);\n
    }\n
    if (v1[90] == 20)\n
    {\n
        cgc_printf(&v1[22 + 55]);\n
        cgc_bzero(&v2, 32);\n
        v0 = 0;\n
        cgc_receive(0, &v2, 77);\n
        cgc_printf(&v1[22 + 58] + 3);\n
    }\n
    v6 = v1;\n
    if (v6[100] == 20)\n
    {\n
        cgc_printf(&v1[22 + 42] + 3);\n
        cgc_bzero(&v2, 32);\n
        v0 = 0;\n
        cgc_receive(0, &v2, 77);\n
        v6 = cgc_printf(&v1[22 + 58] + 3);\n
        return v6;\n
    }\n
    return v1;\n
}\n
", "4215330:sub_405222": null, "4215344:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[88];\n
extern void game_stats;\n
\n
int main()\n
{\n
    int <0x405230[is_8]|Stack bp-0x4c, 1 B>;  // [bp-0x4c]\n
    struct_0 *v1;  // [bp-0x64]\n
    unsigned int v2[88];  // [bp-0x60]\n
    void* v3;  // [bp-0x5c]\n
    void* v4;  // [bp-0x58]\n
    void* v5;  // [bp-0x54]\n
    void* v6;  // [bp-0x4c]\n
    void* v7;  // [bp-0x48]\n
    void* v8;  // [bp-0x44]\n
    void* v9;  // [bp-0x40]\n
    void* v10;  // [bp-0x3c]\n
    void* v11;  // [bp-0x38]\n
    void* v12;  // [bp-0x34]\n
    void* v13;  // [bp-0x30]\n
    void* v14;  // [bp-0x2c]\n
    void* v15;  // [bp-0x28]\n
    void* v16;  // [bp-0x24]\n
    void* v17;  // [bp-0x20]\n
    void* v18;  // [bp-0x1c]\n
    void* v19;  // [bp-0x18]\n
    void* v21;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v22;  // [bp-0x8]\n
    unsigned int v28;  // ebx\n
    unsigned int v34[88];  // ebx\n
\n
    v22 = v28;\n
    v2[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v21 = 0;\n
    v1 = &<0x405230[is_8]|Stack bp-0x4c, 1 B>;\n
    v19 = 0;\n
    v18 = 0;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    memcpy(&game_stats, &<0x405230[is_8]|Stack bp-0x4c, 1 B>, 56);\n
    v34 = v2;\n
    v3 = 0;\n
    v4 = 0;\n
    v5 = 0;\n
    v34[85] = v3;\n
    v34[86] = v4;\n
    v34[87] = v5;\n
    if (cgc_seed_prng() != 1)\n
    {\n
        v21 = 1;\n
        return;\n
    }\n
}\n
", "4216336:cgc_request_perimeter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_request_perimeter()\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    unsigned int v3;  // [bp-0x48]\n
    void* v4;  // [bp-0x44]\n
    unsigned int v5;  // [bp-0x40]\n
    unsigned int v6;  // [bp-0x3c]\n
    unsigned int v7;  // [bp-0x38]\n
    unsigned int v8;  // [bp-0x34]\n
    void* v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    void* v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x14]\n
    unsigned int v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0xc]\n
    unsigned int v19;  // [bp-0x8]\n
    unsigned int v21;  // ebx\n
\n
    v19 = v21;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v17 = cgc_random_in_range(0, 2);\n
    v2 = v17;\n
    if (!v2)\n
    {\n
        v16 = cgc_random_in_range(0, 34567);\n
        v15 = v16 * 6;\n
        cgc_printf(v1 - 8981);\n
        v14 = 0;\n
        v13 = cgc_get_user_answer(&v14);\n
        if (v13 != 1)\n
        {\n
            v18 = 0;\n
            return v18;\n
        }\n
        if (v14 != v15)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v18 = 0;\n
            return v18;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v18 = 1;\n
        return v18;\n
    }\n
    else if (v2 == 1)\n
    {\n
        v12 = cgc_random_in_range(0, 34567);\n
        v11 = cgc_random_in_range(0, 34567);\n
        v10 = v12 * 2 + v11 * 2;\n
        v0 = v12;\n
        cgc_printf(v1 - 8917);\n
        v9 = 0;\n
        v8 = cgc_get_user_answer(&v9);\n
        if (v8 != 1)\n
        {\n
            v18 = 0;\n
            return v18;\n
        }\n
        if (v9 != v10)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v18 = 0;\n
            return v18;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v18 = 1;\n
        return v18;\n
    }\n
    else if (v2 == 2)\n
    {\n
        v7 = cgc_random_in_range(0, 1234);\n
        v6 = cgc_random_in_range(0, 34567);\n
        v5 = v6 * v7;\n
        v0 = v6;\n
        cgc_printf(v1 - 8854);\n
        v4 = 0;\n
        v3 = cgc_get_user_answer(&v4);\n
        if (v3 != 1)\n
        {\n
            v18 = 0;\n
            return v18;\n
        }\n
        else if (v4 != v5)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v18 = 0;\n
            return v18;\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 8940);\n
            v18 = 1;\n
            return v18;\n
        }\n
    }\n
    else\n
    {\n
        v18 = 1;\n
        return v18;\n
    }\n
}\n
", "4217058:sub_4058e2": null, "4217072:cgc_request_2d_peri_dim": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_request_2d_peri_dim()\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x60]\n
    void* v3;  // [bp-0x5c]\n
    unsigned int v4;  // [bp-0x58]\n
    void* v5;  // [bp-0x54], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x50]\n
    unsigned int v7;  // [bp-0x4c]\n
    unsigned int v8;  // [bp-0x48]\n
    unsigned int v9;  // [bp-0x44]\n
    void* v10;  // [bp-0x40]\n
    unsigned int v11;  // [bp-0x3c]\n
    void* v12;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x34]\n
    unsigned int v14;  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x2c]\n
    unsigned int v16;  // [bp-0x28]\n
    void* v17;  // [bp-0x24]\n
    unsigned int v18;  // [bp-0x20]\n
    void* v19;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x18]\n
    unsigned int v21;  // [bp-0x14]\n
    unsigned int v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0xc]\n
    unsigned int v24;  // [bp-0x8]\n
    unsigned int v26;  // ebx\n
\n
    v24 = v26;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v22 = cgc_random_in_range(0, 2);\n
    v2 = v22;\n
    if (!v2)\n
    {\n
        v21 = cgc_random_in_range(0, 34567);\n
        v20 = v21 * 6;\n
        v19 = 0;\n
        v18 = cgc_random_in_range(0, 1);\n
        if (!v18)\n
        {\n
            cgc_printf(v1 - 8981);\n
            v19 = v20;\n
        }\n
        else\n
        {\n
            if (v18 == 1)\n
            {\n
                cgc_printf(v1 - 8801);\n
                v19 = v21;\n
            }\n
        }\n
        v17 = 0;\n
        v16 = cgc_get_user_answer(&v17);\n
        if (v16 != 1)\n
        {\n
            v23 = 0;\n
            return v23;\n
        }\n
        if (v17 != v19)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v23 = 0;\n
            return v23;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v23 = 1;\n
        return v23;\n
    }\n
    else if (v2 == 1)\n
    {\n
        v15 = cgc_random_in_range(0, 34567);\n
        v14 = cgc_random_in_range(0, 34567);\n
        v13 = v15 * 2 + v14 * 2;\n
        v12 = 0;\n
        v11 = cgc_random_in_range(0, 2);\n
        if (!v11)\n
        {\n
            v0 = v15;\n
            cgc_printf(v1 - 8917);\n
            v12 = v13;\n
        }\n
        else\n
        {\n
            if (v11 == 1)\n
            {\n
                v0 = v13;\n
                cgc_printf(v1 - 8760);\n
                v12 = v15;\n
            }\n
            else\n
            {\n
                if (v11 == 2)\n
                {\n
                    v0 = v13;\n
                    cgc_printf(v1 - 8698);\n
                    v12 = v14;\n
                }\n
            }\n
        }\n
        v10 = 0;\n
        v9 = cgc_get_user_answer(&v10);\n
        if (v9 != 1)\n
        {\n
            v23 = 0;\n
            return v23;\n
        }\n
        if (v10 != v12)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v23 = 0;\n
            return v23;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v23 = 1;\n
        return v23;\n
    }\n
    else if (v2 == 2)\n
    {\n
        v8 = cgc_random_in_range(0, 1234);\n
        v7 = cgc_random_in_range(0, 34567);\n
        v6 = v7 * v8;\n
        v5 = 0;\n
        v4 = cgc_random_in_range(0, 2);\n
        if (!v4)\n
        {\n
            v0 = v7;\n
            cgc_printf(v1 - 8854);\n
            v5 = v6;\n
        }\n
        else if (v4 == 1)\n
        {\n
            v0 = v7;\n
            cgc_printf(v1 - 8636);\n
            v5 = v8;\n
        }\n
        else if (v4 == 2)\n
        {\n
            v0 = v8;\n
            cgc_printf(v1 - 8551);\n
            v5 = v7;\n
        }\n
        v3 = 0;\n
        if (cgc_get_user_answer(&v3) != 1)\n
        {\n
            v23 = 0;\n
            return v23;\n
        }\n
        else if (v3 != v5)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v23 = 0;\n
            return v23;\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 8940);\n
            v23 = 1;\n
            return v23;\n
        }\n
    }\n
    else\n
    {\n
        v23 = 1;\n
        return v23;\n
    }\n
}\n
", "4218221:sub_405d6d": null, "4218224:cgc_request_area": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_request_area()\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    void* v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    void* v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    void* v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
\n
    v15 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = cgc_random_in_range(0, 2);\n
    v2 = v13;\n
    if (!v2)\n
    {\n
        v12 = cgc_random_in_range(0, 15000);\n
        v11 = v12 * v12 * 3;\n
        cgc_printf(v1 - 8483);\n
        v10 = 0;\n
        if (cgc_get_user_answer(&v10) != 1)\n
        {\n
            v14 = 0;\n
            return v14;\n
        }\n
        if (v10 != v11)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v14 = 0;\n
            return v14;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v14 = 1;\n
        return v14;\n
    }\n
    else if (v2 == 1)\n
    {\n
        v9 = cgc_random_in_range(0, 34567);\n
        v8 = cgc_random_in_range(0, 34567);\n
        v7 = v8 * v9;\n
        v0 = v9;\n
        cgc_printf(v1 - 8447);\n
        v6 = 0;\n
        if (cgc_get_user_answer(&v6) != 1)\n
        {\n
            v14 = 0;\n
            return v14;\n
        }\n
        if (v6 != v7)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v14 = 0;\n
            return v14;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v14 = 1;\n
        return v14;\n
    }\n
    else if (v2 == 2)\n
    {\n
        v5 = cgc_random_in_range(0, 34567);\n
        v4 = v5 * v5;\n
        cgc_printf(v1 - 8389);\n
        v3 = 0;\n
        if (cgc_get_user_answer(&v3) != 1)\n
        {\n
            v14 = 0;\n
            return v14;\n
        }\n
        else if (v3 != v4)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v14 = 0;\n
            return v14;\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 8940);\n
            v14 = 1;\n
            return v14;\n
        }\n
    }\n
    else\n
    {\n
        v14 = 1;\n
        return v14;\n
    }\n
}\n
", "4218896:cgc_request_2d_area_dim": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_request_2d_area_dim()\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    void* v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    void* v5;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    void* v9;  // [bp-0x24]\n
    unsigned int v10;  // [bp-0x20]\n
    void* v11;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v18;  // ebx\n
\n
    v16 = v18;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = cgc_random_in_range(0, 1);\n
    v2 = v14;\n
    if (!v2)\n
    {\n
        v13 = cgc_random_in_range(0, 15000);\n
        v12 = v13 * v13 * 3;\n
        v11 = 0;\n
        v10 = cgc_random_in_range(0, 1);\n
        if (!v10)\n
        {\n
            cgc_printf(v1 - 8483);\n
            v11 = v12;\n
        }\n
        else\n
        {\n
            if (v10 == 1)\n
            {\n
                cgc_printf(v1 - 8351);\n
                v11 = v13;\n
            }\n
        }\n
        v9 = 0;\n
        if (cgc_get_user_answer(&v9) != 1)\n
        {\n
            v15 = 0;\n
            return v15;\n
        }\n
        if (v9 != v11)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v15 = 0;\n
            return v15;\n
        }\n
        cgc_printf(v1 - 8940);\n
        v15 = 1;\n
        return v15;\n
    }\n
    else if (v2 == 1)\n
    {\n
        v8 = cgc_random_in_range(0, 34567);\n
        v7 = cgc_random_in_range(0, 34567);\n
        v6 = v7 * v8;\n
        v5 = 0;\n
        v4 = cgc_random_in_range(0, 2);\n
        if (!v4)\n
        {\n
            v0 = v8;\n
            cgc_printf(v1 - 8447);\n
            v5 = v6;\n
        }\n
        else if (v4 == 1)\n
        {\n
            v0 = v6;\n
            cgc_printf(v1 - 8315);\n
            v5 = v8;\n
        }\n
        else if (v4 == 2)\n
        {\n
            v0 = v6;\n
            cgc_printf(v1 - 8258);\n
            v5 = v7;\n
        }\n
        v3 = 0;\n
        if (cgc_get_user_answer(&v3) != 1)\n
        {\n
            v15 = 0;\n
            return v15;\n
        }\n
        else if (v3 != v5)\n
        {\n
            cgc_printf(v1 - 8928);\n
            v15 = 0;\n
            return v15;\n
        }\n
        else\n
        {\n
            cgc_printf(v1 - 8940);\n
            v15 = 1;\n
            return v15;\n
        }\n
    }\n
    else\n
    {\n
        v15 = 1;\n
        return v15;\n
    }\n
}\n
", "4219643:sub_4062fb": null, "4219648:cgc_request_volume": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_request_volume()\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x48]\n
    unsigned int v3;  // [bp-0x44]\n
    void* v4;  // [bp-0x40]\n
    unsigned int v5;  // [bp-0x3c]\n
    unsigned int v6;  // [bp-0x38]\n
    void* v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x30]\n
    unsigned int v9;  // [bp-0x2c]\n
    unsigned int v10;  // [bp-0x28]\n
    unsigned int v11;  // [bp-0x24]\n
    void* v12;  // [bp-0x20]\n
    unsigned int v13;  // [bp-0x1c]\n
    unsigned int v14;  // [bp-0x18]\n
    unsigned int v15;  // [bp-0x14]\n
    unsigned int v16;  // [bp-0x10]\n
    unsigned int v17;  // [bp-0x8]\n
    unsigned int v19;  // ebx\n
    unsigned int v20;  // eax\n
\n
    v17 = v19;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = cgc_random_in_range(0, 2);\n
    v3 = v15;\n
    if (!v3)\n
    {\n
        v14 = cgc_random_in_range(0, 430);\n
        v20 = v14 * v14 * v14;\n
        v13 = (v20 >> 31 CONCAT v20) /m 3 * 12;\n
        cgc_printf(v2 - 8201);\n
        v12 = 0;\n
        if (cgc_get_user_answer(&v12) != 1)\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        if (v12 != v13)\n
        {\n
            cgc_printf(v2 - 8928);\n
            v16 = 0;\n
            return v16;\n
        }\n
        cgc_printf(v2 - 8940);\n
        v16 = 1;\n
        return v16;\n
    }\n
    else if (v3 == 1)\n
    {\n
        v11 = cgc_random_in_range(0, 1288);\n
        v10 = cgc_random_in_range(0, 1288);\n
        v9 = cgc_random_in_range(0, 1288);\n
        v8 = v9 * v10 * v11;\n
        v0 = v11;\n
        v1 = v9;\n
        cgc_printf(v2 - 8163);\n
        v7 = 0;\n
        if (cgc_get_user_answer(&v7) != 1)\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        if (v7 != v8)\n
        {\n
            cgc_printf(v2 - 8928);\n
            v16 = 0;\n
            return v16;\n
        }\n
        cgc_printf(v2 - 8940);\n
        v16 = 1;\n
        return v16;\n
    }\n
    else if (v3 == 2)\n
    {\n
        v6 = cgc_random_in_range(0, 1288);\n
        v5 = v6 * v6 * v6;\n
        cgc_printf(v2 - 8081);\n
        v4 = 0;\n
        if (cgc_get_user_answer(&v4) != 1)\n
        {\n
            v16 = 0;\n
            return v16;\n
        }\n
        else if (v4 != v5)\n
        {\n
            cgc_printf(v2 - 8928);\n
            v16 = 0;\n
            return v16;\n
        }\n
        else\n
        {\n
            cgc_printf(v2 - 8940);\n
            v16 = 1;\n
            return v16;\n
        }\n
    }\n
    else\n
    {\n
        v16 = 1;\n
        return v16;\n
    }\n
}\n
", "4220379:sub_4065db": null, "4220384:cgc_request_3d_dim_vol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_request_3d_dim_vol()\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x60]\n
    unsigned int v3;  // [bp-0x5c]\n
    void* v4;  // [bp-0x58]\n
    unsigned int v5;  // [bp-0x54]\n
    void* v6;  // [bp-0x50], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x4c]\n
    unsigned int v8;  // [bp-0x48]\n
    void* v9;  // [bp-0x44]\n
    unsigned int v10;  // [bp-0x40]\n
    void* v11;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x38]\n
    unsigned int v13;  // [bp-0x34]\n
    unsigned int v14;  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x2c]\n
    void* v16;  // [bp-0x28]\n
    unsigned int v17;  // [bp-0x24]\n
    void* v18;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x1c]\n
    unsigned int v20;  // [bp-0x18]\n
    unsigned int v21;  // [bp-0x14]\n
    unsigned int v22;  // [bp-0x10]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // ebx\n
    unsigned int v26;  // eax\n
\n
    v23 = v25;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v21 = cgc_random_in_range(0, 2);\n
    v3 = v21;\n
    if (!v3)\n
    {\n
        v20 = cgc_random_in_range(0, 430);\n
        v26 = v20 * v20 * v20;\n
        v19 = (v26 >> 31 CONCAT v26) /m 3 * 12;\n
        v18 = 0;\n
        v17 = cgc_random_in_range(0, 1);\n
        if (!v17)\n
        {\n
            cgc_printf(v2 - 8201);\n
            v18 = v19;\n
        }\n
        else\n
        {\n
            if (v17 == 1)\n
            {\n
                cgc_printf(v2 - 8043);\n
                v18 = v20;\n
            }\n
        }\n
        v16 = 0;\n
        if (cgc_get_user_answer(&v16) != 1)\n
        {\n
            v22 = 0;\n
            return v22;\n
        }\n
        if (v16 != v18)\n
        {\n
            cgc_printf(v2 - 8928);\n
            v22 = 0;\n
            return v22;\n
        }\n
        cgc_printf(v2 - 8940);\n
        v22 = 1;\n
        return v22;\n
    }\n
    else if (v3 == 1)\n
    {\n
        v15 = cgc_random_in_range(0, 1288);\n
        v14 = cgc_random_in_range(0, 1288);\n
        v13 = cgc_random_in_range(0, 1288);\n
        v12 = v13 * v14 * v15;\n
        v11 = 0;\n
        v10 = cgc_random_in_range(0, 3);\n
        if (!v10)\n
        {\n
            v0 = v15;\n
            v1 = v13;\n
            cgc_printf(v2 - 8163);\n
            v11 = v12;\n
        }\n
        else\n
        {\n
            if (v10 == 1)\n
            {\n
                v0 = v12;\n
                v1 = v13;\n
                cgc_printf(v2 - 8005);\n
                v11 = v15;\n
            }\n
            else\n
            {\n
                if (v10 == 2)\n
                {\n
                    v0 = v15;\n
                    v1 = v13;\n
                    cgc_printf(v2 - 7923);\n
                    v11 = v14;\n
                }\n
                else\n
                {\n
                    if (v10 == 3)\n
                    {\n
                        v0 = v15;\n
                        v1 = v14;\n
                        cgc_printf(v2 - 7841);\n
                        v11 = v13;\n
                    }\n
                }\n
            }\n
        }\n
        v9 = 0;\n
        if (cgc_get_user_answer(&v9) != 1)\n
        {\n
            v22 = 0;\n
            return v22;\n
        }\n
        if (v9 != v11)\n
        {\n
            cgc_printf(v2 - 8928);\n
            v22 = 0;\n
            return v22;\n
        }\n
        cgc_printf(v2 - 8940);\n
        v22 = 1;\n
        return v22;\n
    }\n
    else if (v3 == 2)\n
    {\n
        v8 = cgc_random_in_range(0, 1288);\n
        v7 = v8 * v8 * v8;\n
        v6 = 0;\n
        v5 = cgc_random_in_range(0, 1);\n
        if (!v5)\n
        {\n
            cgc_printf(v2 - 7759);\n
            v6 = v7;\n
        }\n
        else if (v5 == 1)\n
        {\n
            cgc_printf(v2 - 7720);\n
            v6 = v8;\n
        }\n
        v4 = 0;\n
        if (cgc_get_user_answer(&v4) != 1)\n
        {\n
            v22 = 0;\n
            return v22;\n
        }\n
        else if (v4 != v6)\n
        {\n
            cgc_printf(v2 - 8928);\n
            v22 = 0;\n
            return v22;\n
        }\n
        else\n
        {\n
            cgc_printf(v2 - 8940);\n
            v22 = 1;\n
            return v22;\n
        }\n
    }\n
    else\n
    {\n
        v22 = 1;\n
        return v22;\n
    }\n
}\n
", "4221560:sub_406a78": null, "4221568:cgc_run_tests": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_run_tests()\n
{\n
    struct struct_0 **v0;  // [bp-0x178]\n
    struct_0 *v1;  // [bp-0x174]\n
    unsigned int v2;  // [bp-0x170]\n
    unsigned int v3;  // [bp-0x168]\n
    void* v4;  // [bp-0x164], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x160]\n
    char v6;  // [bp-0x15c]\n
    struct struct_0 **v7;  // [bp-0x5c], Other Possible Types: unsigned int\n
    struct_0 *v8;  // [bp-0x58]\n
    char v9;  // [bp-0x52]\n
    struct_0 *v10;  // [bp-0x10]\n
    struct struct_0 **v12;  // eax, Other Possible Types: unsigned int, struct_0 *\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v12 = &v9;\n
    v8 = &v9;\n
    for (v7 = 0; v7 < 1000; v7 = v12)\n
    {\n
        v5 = cgc_generate_one_equation(&v6);\n
        v0 = v7;\n
        v1 = &v6;\n
        v2 = v5;\n
        cgc_printf(v3 - 7528);\n
        v12 = v7 + 1;\n
    }\n
    for (v4 = 0; v4 < 12; v4 = v12)\n
    {\n
        v0 = &v10;\n
        cgc_solve_equation(*((v3 + v4 * 4 + 88)));\n
        v13 = v3;\n
        v0 = *((v13 + v4 * 4 + 88));\n
        v1 = v10;\n
        cgc_printf(v13 - 7513);\n
        v14 = v3;\n
        v15 = v14 - 7493;\n
        if (v10 == *((v14 + (v4 << 2) + 136)))\n
            v15 = v14 - 8926;\n
        cgc_printf(v15);\n
        cgc_printf(v3 - 7486);\n
        v12 = v4 + 1;\n
    }\n
    return v12;\n
}\n
", "4221915:sub_406bdb": null, "4221920:cgc_solve_equation": "typedef struct struct_0 {\n
    char padding_0[480];\n
    unsigned int field_1e0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_curr_num_stack;\n
extern unsigned int cgc_curr_op_stack;\n
\n
int cgc_solve_equation(unsigned int v22, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x60]\n
    struct_0 *v1;  // [bp-0x58]\n
    char v2;  // [bp-0x54]\n
    char v3;  // [bp-0x50]\n
    char v4;  // [bp-0x4c], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x48]\n
    char v6;  // [bp-0x44]\n
    char v7;  // [bp-0x40]\n
    char v8;  // [bp-0x39]\n
    void* v9;  // [bp-0x38]\n
    char v10;  // [bp-0x34]\n
    char v11;  // [bp-0x30]\n
    char v12;  // [bp-0x2a]\n
    char v13;  // [bp-0x29]\n
    void* v14;  // [bp-0x28]\n
    unsigned int v15;  // [bp-0x24]\n
    void* v16;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v17;  // [bp-0x1a]\n
    char v18;  // [bp-0x19]\n
    unsigned int v19;  // [bp-0x18]\n
    char *v20;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v21;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v20 = 0;\n
    cgc_curr_num_stack = -1;\n
    cgc_curr_op_stack = -1;\n
    while (true)\n
    {\n
        if (!v20[v22])\n
        {\n
            cgc_pop_num();\n
            while (true)\n
            {\n
                if (v1->field_1e0 == -1)\n
                {\n
                    *(a0) = v4;\n
                    v21 = 1;\n
                    return v21;\n
                }\n
                else if (cgc_pop_num() == 1)\n
                {\n
                    if (cgc_pop_op() != 1)\n
                    {\n
                        v21 = 0;\n
                        return v21;\n
                    }\n
                    v0 = &v2;\n
                    if (cgc_evaluate(*(&v3), v18, *(&v4)) != 1)\n
                    {\n
                        v21 = 0;\n
                        return v21;\n
                    }\n
                    v4 = *(&v2);\n
                }\n
                else\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
            }\n
        }\n
        v18 = v20[v22];\n
        if (v18 <= 57 && v18 >= 48)\n
        {\n
            v16 = 0;\n
            v19 = cgc_peek_op();\n
            if (v19 == 1 && v17 == 45)\n
            {\n
                if (cgc_pop_op() == 1)\n
                {\n
                    cgc_push_op();\n
                    v16 = 1;\n
                }\n
                else\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
            }\n
            v14 = 0;\n
            v15 = cgc_stoi(v22 + v20);\n
            if (v16)\n
                v15 *= -1;\n
            v16 = 0;\n
            cgc_push_num();\n
            v20 = v14 + v20;\n
            continue;\n
        }\n
        if (v18 == 40)\n
        {\n
            cgc_push_op();\n
            v20 += 1;\n
            continue;\n
        }\n
        if (v18 == 41)\n
        {\n
            if (cgc_satisfy_paren() != 1)\n
            {\n
                v21 = 0;\n
                return v21;\n
            }\n
            v20 += 1;\n
            continue;\n
        }\n
        if (v18 != 43 && v18 != 45)\n
        {\n
            if (v18 != 42 && v18 != 47)\n
            {\n
                v21 = 0;\n
                return v21;\n
            }\n
            v19 = cgc_peek_op();\n
            if (v19 == 1)\n
            {\n
                if (v8 != 42 && !(v8 == 47))\n
                    goto LABEL_406fc8;\n
                v5 = 0;\n
                if (cgc_pop_num() != 1)\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
                if (cgc_pop_num() != 1)\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
                if (cgc_pop_op() != 1)\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
                v0 = &v5;\n
                if (cgc_evaluate(*(&v7), v8, *(&v6)) != 1)\n
                {\n
                    v21 = 0;\n
                    return v21;\n
                }\n
                cgc_push_num();\n
            }\n
LABEL_406fc8:\n
            cgc_push_op();\n
            v20 += 1;\n
            continue;\n
        }\n
        v19 = cgc_peek_op();\n
        if (v19 == 1)\n
        {\n
            if (v13 != 43 && v13 != 45 && v13 != 42 && !(v13 == 47))\n
                goto LABEL_406e9d;\n
            v9 = 0;\n
            if (cgc_pop_num() != 1)\n
            {\n
                v21 = 0;\n
                return v21;\n
            }\n
            if (cgc_pop_num() != 1)\n
            {\n
                v21 = 0;\n
                return v21;\n
            }\n
            if (cgc_pop_op() != 1)\n
            {\n
                v21 = 0;\n
                return v21;\n
            }\n
            v0 = &v9;\n
            if (cgc_evaluate(*(&v11), v12, *(&v10)) != 1)\n
            {\n
                v21 = 0;\n
                return v21;\n
            }\n
            cgc_push_num();\n
        }\n
LABEL_406e9d:\n
        cgc_push_op();\n
        v20 += 1;\n
    }\n
}\n
", "4223164:sub_4070bc": null, "4223168:cgc_get_pow": "int cgc_get_pow(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v0 = 1; v0 <= a0; v0 += 1)\n
    {\n
        v1 = v3 * v3 + v1;\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4223269:sub_407125": null, "4223280:cgc_evaluate": "int cgc_evaluate(unsigned int v3, char a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ecx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // eax\n
\n
    if (a0 == 43)\n
    {\n
        if (v3 > 0 && !(a1 <= 2147483647 - v3))\n
            goto LABEL_40718f;\n
        if (v3 >= 0)\n
        {\n
LABEL_40719b:\n
            *(a2) = v3 + a1;\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (!(a1 < 2147483649 - v3))\n
            goto LABEL_40719b;\n
LABEL_40718f:\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 == 45)\n
    {\n
        if (v3 > 0 && a1 < v3 - 2147483647)\n
            goto LABEL_4071fb;\n
        if (v3 >= 0)\n
        {\n
LABEL_407211:\n
            *(a2) = v3 - a1;\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (a1 <= v3 + 2147483647)\n
            goto LABEL_407211;\n
LABEL_4071fb:\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 == 42)\n
    {\n
        v4 = v3;\n
        v5 = a1;\n
        v1 = v4 * v5 >> 32;\n
        v0 = v4 * v5;\n
        v8 = v0;\n
        if (!([D] x86g_calculate_condition(0xc<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-16, size=4, endness=Iend_LE), Conv(1->32, (0x7fffffff<32> < esi<4>))), Conv(1->32, (0x7fffffff<32> < esi<4>)))))\n
        {\n
            v9 = v0;\n
            if ([D] x86g_calculate_condition(0xc<32>, 0xc<32>, 0x0<32>, Xor(Load(addr=stack_base-16, size=4, endness=Iend_LE), Conv(1->32, (0x7fffffff<32> < esi<4>))), Conv(1->32, (0x7fffffff<32> < esi<4>))))\n
            {\n
                *(a2) = a1 * v3;\n
                v2 = 1;\n
                return v2;\n
            }\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 != 47)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v10 = v3;\n
        *(a2) = (v10 >> 31 CONCAT v10) /m a1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4223742:sub_4072fe": null, "4223744:cgc_satisfy_paren": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_satisfy_paren()\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1c]\n
    char v5;  // [bp-0x18]\n
    char v6;  // [bp-0x11]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v2 = cgc_peek_op();\n
        v0 = 0;\n
        if (v6 != 40)\n
            v0 = v2 == 1;\n
        if (!(v0 & 1))\n
            break;\n
        if (cgc_pop_num() != 1)\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        else if (cgc_pop_num() != 1)\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        else if (cgc_pop_op() != 1)\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        else if (cgc_evaluate(*(&v5), v6, *(&v4), &v3) == 1)\n
        {\n
            cgc_push_num();\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
    }\n
    if (v6 == 40)\n
        cgc_pop_op();\n
    v7 = v2;\n
    return v7;\n
}\n
", "4224078:sub_40744e": null, "4224080:cgc_push_num": "typedef struct struct_0 {\n
    char padding_0[484];\n
    unsigned int field_1e4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_push_num(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v0->field_1e4 >= 64)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_1e4;\n
    v3->field_1e4 = v4 + 1;\n
    *(&v3[1].padding_0[4 + 4 * v4]) = v2;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4224184:sub_4074b8": null, "4224192:cgc_pop_num": "typedef struct struct_0 {\n
    char padding_0[484];\n
    unsigned int field_1e4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pop_num(unsigned int *v2)\n
{\n
    void* v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v1->field_1e4 <= -1)\n
    {\n
        v0 = 0;\n
        cgc__terminate();\n
    }\n
    v3 = v1;\n
    v4 = v3->field_1e4;\n
    v3->field_1e4 = v4 - 1;\n
    *(v2) = *(&v3[1].padding_0[4 * v4]);\n
    return 1;\n
}\n
", "4224308:sub_407534": null, "4224320:cgc_peek_op": "typedef struct struct_0 {\n
    char padding_0[480];\n
    unsigned int field_1e0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_curr_op_stack;\n
\n
int cgc_peek_op(char *v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_curr_op_stack <= -1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    *(v2) = v3->padding_0[408 + v3->field_1e0];\n
    v1 = 1;\n
    return v1;\n
}\n
", "4224405:sub_407595": null, "4224416:cgc_push_op": "typedef struct struct_0 {\n
    char padding_0[480];\n
    unsigned int field_1e0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_push_op(char v2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v0->field_1e0 >= 64)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_1e0;\n
    v3->field_1e0 = v4 + 1;\n
    v3->padding_0[409 + v4] = v2;\n
    v1 = 1;\n
    return v1;\n
}\n
", "4224520:sub_407608": null, "4224528:cgc_pop_op": "typedef struct struct_0 {\n
    char padding_0[480];\n
    unsigned int field_1e0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_pop_op(char *v2)\n
{\n
    void* v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v1->field_1e0 <= -1)\n
    {\n
        v0 = 0;\n
        cgc__terminate();\n
    }\n
    v3 = v1;\n
    v4 = v3->field_1e0;\n
    v3->field_1e0 = v4 - 1;\n
    *(v2) = v3->padding_0[408 + v4];\n
    return 1;\n
}\n
", "4224644:sub_407684": null, "4224656:cgc_get_str_end": "int cgc_get_str_end(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[v1])\n
            return v0;\n
        if (v0[v1] == 10)\n
        {\n
            *((v1 + v0)) = 0;\n
            return v0;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4224745:sub_4076e9": null, "4224752:cgc_reverse": "int cgc_reverse(unsigned int v3, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    for (v1 = a0 - 1; v2 < v1; v1 -= 1)\n
    {\n
        v0 = *((v3 + v1));\n
        *((v3 + v1)) = *((v3 + v2));\n
        *((v3 + v2)) = v0;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4224862:sub_40775e": null, "4224864:cgc_itos": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itos(unsigned int v6, char a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!v6)\n
    {\n
        a0[0] = 48;\n
        a0[1] = 0;\n
    }\n
    else\n
    {\n
        if (v6 < 0)\n
        {\n
            v4 = 1;\n
            v6 *= -1;\n
        }\n
        for (v3 = 0; v6; v6 = (v8 >> 31 CONCAT v8) /m 10)\n
        {\n
            v2 = (v6 >> 31 CONCAT v6) /m 10 >> 32;\n
            if (v2 > 9)\n
                v0 = v2 - 10;\n
            else\n
                v0 = v2 + 48;\n
            v7 = v3;\n
            v3 = v7 + 1;\n
            a0[v7] = v0;\n
            v8 = v6;\n
        }\n
        if (v4)\n
        {\n
            v9 = v3;\n
            v3 = v9 + 1;\n
            a0[v9] = 45;\n
        }\n
        cgc_reverse(a0, v3);\n
        a0[v3] = 0;\n
    }\n
    v5 = 1;\n
    return v5;\n
}\n
", "4225140:sub_407874": null, "4225152:cgc_stoi": "int cgc_stoi(unsigned int v4, unsigned int *a0)\n
{\n
    char v0;  // [bp-0x11]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1[v4] <= 57)\n
            v0 = !(v1[v4] < 48);\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    *(a0) = v1;\n
    for (v2 = 0; v2 < v1; v2 += 1)\n
    {\n
        v3 = v3 * 10 + *((v4 + v2)) - 48;\n
    }\n
    return v3;\n
}\n
", "4225332:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:memset": null, "5242912:cgc_deallocate": null, "5242916:cgc_log10": null, "5242920:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}