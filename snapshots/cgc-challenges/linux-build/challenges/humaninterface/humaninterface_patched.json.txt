{"4198400:_init": "extern struct_0 *g_406384;\n
\n
int _init()\n
{\n
    if (g_406384)\n
    {\n
        g_406384();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 21131;\n
    v6 = v5 + 45;\n
    v7 = v5 + 45;\n
    if (v7 == v6)\n
        return v5 + 45;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 21067;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 45;\n
    v9 = (v6 + 45 - (v6 + 45) >> 31) + (45 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406380;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406380)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_calloc": "int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
        return 0;\n
    v4 = a0;\n
    if (!v4)\n
        return 0;\n
    tmp_2 = v4;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v6 = v4 * v2;\n
    v7 = cgc_malloc();\n
    if (v7)\n
    {\n
        v0 = v6;\n
        return cgc_memset(v7, 0);\n
    }\n
    return 0;\n
}\n
", "4198974:sub_40123e": null, "4198976:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4199009:sub_401261": null, "4199024:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4199043:sub_401283": null, "4199056:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4199072:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4199088:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4199104:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4199118:sub_4012ce": null, "4199120:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4199142:sub_4012e6": null, "4199152:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4199174:sub_401306": null, "4199184:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4199206:sub_401326": null, "4199216:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4199238:sub_401346": null, "4199248:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return *((4210696 + v0));\n
}\n
", "4199273:sub_401369": null, "4199280:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4199305:sub_401389": null, "4199312:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return *((4210824 + v0));\n
}\n
", "4199337:sub_4013a9": null, "4199344:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4199352:sub_4013b8": null, "4199360:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4199379:sub_4013d3": null, "4199392:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4199411:sub_4013f3": null, "4199424:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4199503:sub_40144f": null, "4199504:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_4064c4;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // esi\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct struct_1 **v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // esi\n
    struct_1 *v12;  // edx, Other Possible Types: unsigned int\n
    unsigned int v13[6];  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // eax\n
    struct_0 *v16;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        v11 = 0;\n
        if (v10 <= 31)\n
        {\n
            do\n
            {\n
                v12 = *(&(&cgc_free_lists)[4 * v10]);\n
                if (v12)\n
                {\n
                    do\n
                    {\n
                        if (*(v12) >= v9)\n
                        {\n
                            v11 = v12;\n
                            goto LABEL_40152f;\n
                        }\n
                        v12 = *((v12 + 8));\n
                    } while (v12);\n
                }\n
                v10 += 1;\n
            } while (v10 != 32);\n
        }\n
LABEL_40152f:\n
        if (v11)\n
        {\n
LABEL_401533:\n
            cgc_remove_from_flist();\n
            v14 = *(v11) - v9;\n
            if (v14 >= 49)\n
            {\n
                v15 = v9 + v11;\n
                *((&v9->field_0 + v11)) = v14;\n
                *(&v9->padding_4[v11]) = 1;\n
                *((8 + &v9->field_0 + v11)) = 0;\n
                *(&v9->padding_c[v11]) = 0;\n
                *(v11) = v9;\n
                *((20 + &v9->field_0 + v11)) = v11;\n
                *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
                v16 = *((v11 + 16));\n
                if (v16)\n
                    v16->field_14 = v15;\n
                *((v11 + 16)) = v15;\n
                cgc_insert_into_flist();\n
            }\n
            v5 = v11 + 24;\n
            return v5;\n
        }\n
        else\n
        {\n
            v0 = &v2;\n
            if (cgc_allocate(0x40000, 0))\n
                return 0;\n
            v13 = *(&v2);\n
            if (v13)\n
            {\n
                v13[0] = 0x40000;\n
                v13[1] = 1;\n
                v13[3] = 0;\n
                v13[2] = 0;\n
                v13[5] = 0;\n
                v13[4] = 0;\n
                cgc_insert_into_flist();\n
                v11 = g_4064c4;\n
                goto LABEL_401533;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            v5 = v8 + 1;\n
            return v5;\n
        }\n
        return 0;\n
    }\n
}\n
", "4199931:sub_4015fb": null, "4199936:cgc_get_size_class": "extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int *v2;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v2 = &size_class_limits;\n
    while (true)\n
    {\n
        if (*(v2) >= v0)\n
            return v1;\n
        v1 += 1;\n
        v2 += 4;\n
        if (v1 == 32)\n
            return 32;\n
    }\n
}\n
", "4199989:sub_401635": null, "4200000:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    while (*(v3) < v1[0])\n
    {\n
        v2 += 1;\n
        v3 += 4;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    v1[1] = 1;\n
    v4 = *((4219976 + 4 * v2));\n
    if (!v4)\n
    {\n
        *((4219976 + 4 * v2)) = v1;\n
        return \"tb\";\n
    }\n
    v1[2] = v4;\n
    *((*((4219976 + 4 * v2)) + 12)) = v1;\n
    *((4219976 + 4 * v2)) = v1;\n
    v1[3] = 0;\n
    return \"tb\";\n
}\n
", "4200109:sub_4016ad": null, "4200112:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v4;  // esi\n
    struct_0 *v5;  // edi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    do\n
    {\n
        if (*(v3) >= v1->field_0)\n
        {\n
            v4 = v1->field_c;\n
            if (v4)\n
                v4->field_8 = v1->field_8;\n
            v5 = v1->field_8;\n
            if (v5)\n
                v5->field_c = v4;\n
            if (*((4219976 + 4 * v2)) == v1)\n
            {\n
                *((4219976 + 4 * v2)) = v5;\n
                goto LABEL_40170b;\n
            }\n
        }\n
        v2 += 1;\n
        v3 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_40170b:\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v0;\n
}\n
", "4200227:sub_401723": null, "4200240:cgc_coalesce": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char size_class_limits;\n
\n
int cgc_coalesce(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // ebx\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edi\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // esi\n
    unsigned int v32;  // edi\n
    unsigned int v33;  // ebx\n
    unsigned int v34;  // edi\n
    unsigned int v35;  // edi\n
    unsigned int v36;  // ebx\n
    unsigned int v37;  // esi\n
    unsigned int v38;  // edx\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // ebx\n
    unsigned int v41;  // ebx\n
    unsigned int v42;  // edx\n
    unsigned int v43;  // edx\n
    unsigned int v44;  // esi\n
    unsigned int v45;  // edi\n
    unsigned int v46;  // esi\n
    unsigned int v47;  // edx\n
    unsigned int v48;  // edx\n
    unsigned int v49;  // edi\n
    unsigned int v50;  // ebx\n
    unsigned int v51;  // edx\n
    unsigned int v52;  // edx\n
    unsigned int v53;  // edx\n
    unsigned int v54;  // ecx\n
    unsigned int v55;  // edx\n
    unsigned int v56;  // ecx\n
\n
    v1 = v0;\n
    v2 = *((v1 + 20));\n
    if (!v2)\n
        return v1;\n
    if (*((v2 + 4)))\n
    {\n
        v3 = *((v1 + 16));\n
        if (v3 && *((v3 + 4)))\n
        {\n
            v6 = 0;\n
            v4 = &size_class_limits;\n
            do\n
            {\n
                if (*(v4) >= *(v2))\n
                {\n
LABEL_401794:\n
                    v7 = *((v2 + 12));\n
                    if (v7)\n
                        *((v7 + 8)) = *((v2 + 8));\n
                    v10 = *((v2 + 8));\n
                    if (v10)\n
                        *((v10 + 12)) = v7;\n
                    if (*((4219976 + 4 * v6)) == v2)\n
                        *((4219976 + 4 * v6)) = v10;\n
                    *((v2 + 8)) = 0;\n
                    *((v2 + 12)) = 0;\n
                    *((v2 + 4)) = 0;\n
                    v15 = *((v1 + 16));\n
                    v16 = 0;\n
                    v17 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v17) >= *(v15))\n
                        {\n
LABEL_4017f4:\n
                            v20 = *((v15 + 12));\n
                            if (v20)\n
                                *((v20 + 8)) = *((v15 + 8));\n
                            v25 = *((v15 + 8));\n
                            if (v25)\n
                                *((v25 + 12)) = v20;\n
                            if (*((4219976 + 4 * v16)) == v15)\n
                                *((4219976 + 4 * v16)) = v25;\n
                            *((v15 + 8)) = 0;\n
                            *((v15 + 12)) = 0;\n
                            *((v15 + 4)) = 0;\n
                            v30 = *(v1);\n
                            v31 = 0;\n
                            v32 = &size_class_limits;\n
                            do\n
                            {\n
                                if (*(v32) >= v30)\n
                                {\n
LABEL_401854:\n
                                    v35 = *((v1 + 12));\n
                                    if (v35)\n
                                        *((v35 + 8)) = *((v1 + 8));\n
                                    v41 = *((v1 + 8));\n
                                    if (v41)\n
                                        *((v41 + 12)) = v35;\n
                                    if (*((4219976 + 4 * v31)) == v1)\n
                                        *((4219976 + 4 * v31)) = v41;\n
                                    *((v1 + 8)) = 0;\n
                                    *((v1 + 12)) = 0;\n
                                    *((v1 + 4)) = 0;\n
                                    v46 = *((v1 + 20));\n
                                    v47 = v30 + *(v46);\n
                                    *(v46) = v47;\n
                                    v48 = v47 + *(*((v1 + 16)));\n
                                    *(v46) = v48;\n
                                    v49 = 0;\n
                                    v50 = &size_class_limits;\n
                                    do\n
                                    {\n
                                        if (*(v50) >= v48)\n
                                        {\n
LABEL_4018c4:\n
                                            *((v46 + 4)) = 1;\n
                                            v52 = *((4219976 + 4 * v49));\n
                                            if (!v52)\n
                                            {\n
                                                *((4219976 + 4 * v49)) = v46;\n
                                            }\n
                                            else\n
                                            {\n
                                                *((v46 + 8)) = v52;\n
                                                *((*((4219976 + 4 * v49)) + 12)) = v46;\n
                                                *((4219976 + 4 * v49)) = v46;\n
                                                *((v46 + 12)) = 0;\n
                                            }\n
                                            v53 = *((v1 + 16));\n
                                            v54 = *((v53 + 20));\n
                                            if (v54)\n
                                                *((v54 + 16)) = *((v53 + 16));\n
                                            v55 = *((v53 + 16));\n
                                            if (v55)\n
                                            {\n
                                                *((v55 + 20)) = v54;\n
                                                goto LABEL_401ba6;\n
                                            }\n
                                        }\n
                                        v49 += 1;\n
                                        v50 += 4;\n
                                    } while (v49 != 32);\n
                                    v49 = 32;\n
                                    goto LABEL_4018c4;\n
                                }\n
                                v31 += 1;\n
                                v32 += 4;\n
                            } while (v31 != 32);\n
                            v31 = 32;\n
                            goto LABEL_401854;\n
                        }\n
                        v16 += 1;\n
                        v17 += 4;\n
                    } while (v16 != 32);\n
                    v16 = 32;\n
                    goto LABEL_4017f4;\n
                }\n
                v6 += 1;\n
                v4 += 4;\n
            } while (v6 != 32);\n
            v6 = 32;\n
            goto LABEL_401794;\n
        }\n
    }\n
    if (!v2)\n
        return v1;\n
    if (*((v2 + 4)))\n
    {\n
        v5 = *((v1 + 16));\n
        if (v5 && !*((v5 + 4)))\n
        {\n
            v8 = 0;\n
            v9 = &size_class_limits;\n
            do\n
            {\n
                if (*(v9) >= *(v2))\n
                {\n
                    v12 = *((v2 + 12));\n
                    if (v12)\n
                        *((v12 + 8)) = *((v2 + 8));\n
                    v18 = *((v2 + 8));\n
                    if (v18)\n
                        *((v18 + 12)) = v12;\n
                    if (*((4219976 + 4 * v8)) == v2)\n
                        *((4219976 + 4 * v8)) = v18;\n
                    *((v2 + 8)) = 0;\n
                    *((v2 + 12)) = 0;\n
                    *((v2 + 4)) = 0;\n
                    v22 = *(v1);\n
                    v23 = 0;\n
                    v24 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v24) >= v22)\n
                        {\n
LABEL_401b04:\n
                            v26 = *((v1 + 12));\n
                            if (v26)\n
                                *((v26 + 8)) = *((v1 + 8));\n
                            v33 = *((v1 + 8));\n
                            if (v33)\n
                                *((v33 + 12)) = v26;\n
                            if (*((4219976 + 4 * v23)) == v1)\n
                                *((4219976 + 4 * v23)) = v33;\n
                            *((v1 + 8)) = 0;\n
                            *((v1 + 12)) = 0;\n
                            *((v1 + 4)) = 0;\n
                            v37 = *((v1 + 20));\n
                            v38 = v22 + *(v37);\n
                            *(v37) = v38;\n
                            v39 = 0;\n
                            v40 = &size_class_limits;\n
                            do\n
                            {\n
                                if (*(v40) >= v38)\n
                                {\n
LABEL_401b64:\n
                                    *((v37 + 4)) = 1;\n
                                    v42 = *((4219976 + 4 * v39));\n
                                    if (!v42)\n
                                    {\n
                                        *((4219976 + 4 * v39)) = v37;\n
                                        goto LABEL_401ba6;\n
                                    }\n
                                    else\n
                                    {\n
                                        *((v37 + 8)) = v42;\n
                                        *((*((4219976 + 4 * v39)) + 12)) = v37;\n
                                        *((4219976 + 4 * v39)) = v37;\n
                                        *((v37 + 12)) = 0;\n
                                        goto LABEL_401ba6;\n
                                    }\n
                                }\n
                                v39 += 1;\n
                                v40 += 4;\n
                            } while (v39 != 32);\n
                            v39 = 32;\n
                            goto LABEL_401b64;\n
                        }\n
                        v23 += 1;\n
                        v24 += 4;\n
                    } while (v23 != 32);\n
                    v23 = 32;\n
                    goto LABEL_401b04;\n
                }\n
                v8 += 1;\n
                v9 += 4;\n
            } while (v8 != 32);\n
            v8 = 32;\n
LABEL_401ba6:\n
            v56 = *((v1 + 20));\n
            if (v56)\n
                *((v56 + 16)) = *((v1 + 16));\n
            v1 = *((v1 + 16));\n
            if (!v1)\n
                return v1;\n
            *((v1 + 20)) = v56;\n
        }\n
    }\n
    if (!v2)\n
        return v1;\n
    if (*((v2 + 4)))\n
        return v1;\n
    v11 = *((v1 + 16));\n
    if (!v11)\n
        return v1;\n
    if (!*((v11 + 4)))\n
        return v1;\n
    v13 = 0;\n
    v14 = &size_class_limits;\n
    do\n
    {\n
        if (*(v14) >= *(v11))\n
        {\n
LABEL_401964:\n
            v19 = *((v11 + 12));\n
            if (v19)\n
                *((v19 + 8)) = *((v11 + 8));\n
            v21 = *((v11 + 8));\n
            if (v21)\n
                *((v21 + 12)) = v19;\n
            if (*((4219976 + 4 * v13)) == v11)\n
                *((4219976 + 4 * v13)) = v21;\n
            *((v11 + 8)) = 0;\n
            *((v11 + 12)) = 0;\n
            *((v11 + 4)) = 0;\n
            v27 = *(v1);\n
            v28 = 0;\n
            v29 = &size_class_limits;\n
            do\n
            {\n
                if (*(v29) >= v27)\n
                {\n
LABEL_4019c4:\n
                    v34 = *((v1 + 12));\n
                    if (v34)\n
                        *((v34 + 8)) = *((v1 + 8));\n
                    v36 = *((v1 + 8));\n
                    if (v36)\n
                        *((v36 + 12)) = v34;\n
                    if (*((4219976 + 4 * v28)) == v1)\n
                        *((4219976 + 4 * v28)) = v36;\n
                    *((v1 + 8)) = 0;\n
                    *((v1 + 12)) = 0;\n
                    *((v1 + 4)) = 0;\n
                    v43 = v27 + *(*((v1 + 16)));\n
                    *(v1) = v43;\n
                    v44 = 0;\n
                    v45 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v45) >= v43)\n
                        {\n
LABEL_401a24:\n
                            *((v1 + 4)) = 1;\n
                            v51 = *((4219976 + 4 * v44));\n
                            if (!v51)\n
                            {\n
                                *((4219976 + 4 * v44)) = v1;\n
                            }\n
                            else\n
                            {\n
                                *((v1 + 8)) = v51;\n
                                *((*((4219976 + 4 * v44)) + 12)) = v1;\n
                                *((4219976 + 4 * v44)) = v1;\n
                                *((v1 + 12)) = 0;\n
                            }\n
                            v1 = *((v1 + 16));\n
                            goto LABEL_401ba6;\n
                        }\n
                        v44 += 1;\n
                        v45 += 4;\n
                    } while (v44 != 32);\n
                    v44 = 32;\n
                    goto LABEL_401a24;\n
                }\n
                v28 += 1;\n
                v29 += 4;\n
            } while (v28 != 32);\n
            v28 = 32;\n
            goto LABEL_4019c4;\n
        }\n
        v13 += 1;\n
        v14 += 4;\n
    } while (v13 != 32);\n
    v13 = 32;\n
    goto LABEL_401964;\n
    goto LABEL_401ba6;\n
}\n
", "4201409:sub_401bc1": null, "4201424:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4201480:sub_401c08": null, "4201488:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v4 != v3)\n
                return v4 - v3;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4201549:sub_401c4d": null, "4201552:cgc_memcpy": "int cgc_memcpy(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = *((a0 + v2));\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4201601:sub_401c81": null, "4201616:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    char *v1;  // eax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = a0;\n
        v3 += 1;\n
    } while (v2 != v3);\n
    return v0;\n
}\n
", "4201664:cgc_output_number_printf": "int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    char v12;  // al\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    char v16;  // al\n
\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v14 = v5;\n
    if (v9 < v8)\n
    {\n
        v3 = v9;\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v9) /m v8;\n
        v3 = tmp_9 >> 32;\n
        v14 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v9) /m v8, v8, v7 - 1, v6);\n
    }\n
    v12 = v6;\n
    if (v7 > 0 && !v2)\n
    {\n
        tmp_2 = v7;\n
        v13 = v7 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                if (!(v12 & 1))\n
                    v1 = 32;\n
                else\n
                    v1 = 48;\n
                v0 = &v4;\n
                cgc_transmit(v14, &v1, 1);\n
                v12 = v6;\n
                v14 = v5;\n
                tmp_6 = v13;\n
                v13 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
    }\n
    if (!(v12 & 2))\n
    {\n
        v15 = v3;\n
        v16 = v15 + 87;\n
    }\n
    else\n
    {\n
        v15 = v3;\n
        v16 = v15 + 55;\n
    }\n
    if (v15 < 10)\n
        v16 = v15 + 48;\n
    v1 = v16;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4201785:sub_401d39": null, "4201905:sub_401db1": null, "4201920:cgc_fdprintf": "int cgc_fdprintf(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // [bp+0x10]\n
    unsigned int v8;  // [bp+0x14]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
\n
    v3 = &v6;\n
    v9 = a0;\n
    if (!*(v9))\n
        return 0;\n
    v10 = &v2;\n
    do\n
    {\n
        a0 = v9 + 1;\n
        *(&v9) = *(v9);\n
        if (v1 == 37)\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                v11 = a0;\n
                a0 = v11 + 1;\n
                v12 = *(v11);\n
                v13 = v12;\n
                if (v13 - 49 >= 9)\n
                    break;\n
                v14 = cgc_strtol(v11, &a0);\n
            }\n
            switch (v13)\n
            {\n
            case 88:\n
                break;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 99: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 117: case 118: case 119:\n
LABEL_401eb7:\n
                v1 = v12;\n
                goto LABEL_401f6c;\n
            case 100:\n
                v15 = v3;\n
                v3 = v15 + 4;\n
                if (*(v15) < 0)\n
                {\n
LABEL_401f88:\n
                    v1 = 45;\n
                    v0 = &v2;\n
                    cgc_transmit(v15, &v1, 1);\n
                }\n
                goto LABEL_401fb6;\n
            case 115:\n
                v16 = v3;\n
                v3 = v16 + 4;\n
                v17 = *(v16);\n
                v10 = &v2;\n
                if (cgc_strlen())\n
                {\n
                    v18 = 0;\n
                    do\n
                    {\n
                        v1 = *((v17 + v18));\n
                        v0 = v10;\n
                        cgc_transmit(v5, &v1, 1);\n
                        v18 += 1;\n
                        v10 = &v2;\n
                    } while (v18 < cgc_strlen(v17, &v1, 1));\n
                }\n
                goto LABEL_401e18;\n
            case 120:\n
                break;\n
            default:\n
                if (v13 == 37)\n
                {\n
                    v1 = 37;\n
LABEL_401f6c:\n
                    v0 = &v2;\n
                    goto LABEL_401f88;\n
                }\n
                if (v13 == 48)\n
                    goto LABEL_0x401e90;\n
                else\n
                    goto LABEL_401eb7;\n
            }\n
            v3 += 4;\n
LABEL_401fb6:\n
            cgc_output_number_printf(v5, a0, *(&v6), v7, v8);\n
            v10 = &v2;\n
            goto LABEL_401e18;\n
        }\n
        v1 = v9;\n
        v0 = v10;\n
        cgc_transmit(v5, &v1, 1);\n
        v10 = &v2;\n
LABEL_401e18:\n
        v9 = a0;\n
    } while (*(v9));\n
    return 0;\n
}\n
", "4201970:sub_401df2": null, "4202050:sub_401e42": null, "4202138:sub_401e9a": null, "4202453:sub_401fd5": null, "4202464:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v4, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_11;  // tmp #11\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_2;  // tmp #2\n
    int tmp_12;  // tmp #12\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
    struct struct_0 **v9;  // ebp\n
    unsigned int *v10;  // edi\n
    unsigned int v11;  // eax\n
    unsigned int v13;  // eax\n
    char v14;  // bl\n
    unsigned int v15;  // esi\n
    char v16;  // cl\n
    char v17;  // cl\n
    char *v18;  // eax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v8 = a3;\n
    v13 = a1;\n
    v9 = a0;\n
    v10 = v4;\n
    if (v13 < a2)\n
    {\n
        v14 = a4;\n
        if (v8 <= 0)\n
            goto LABEL_402071;\n
    }\n
    else\n
    {\n
        tmp_11 = (0 CONCAT v13) /m a2;\n
        v11 = (0 CONCAT v13) /m a2;\n
        v0 = tmp_11 >> 32;\n
        cgc_output_number_sprintf(v10, v9, v11, a2, v8 - 1, a4);\n
        v13 = v0;\n
        v14 = a4;\n
        if (v8 <= 0)\n
            goto LABEL_402071;\n
    }\n
    if (v13 < a2)\n
    {\n
        tmp_2 = v8;\n
        v15 = v8 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                *(v9)->field_0 = ((v14 & 1) * 16) | 32;\n
                *(v9) = *(v9) + 1;\n
                *(v10) = *(v10) + 1;\n
                tmp_12 = v15;\n
                v15 -= 1;\n
            } while (tmp_12 != 1);\n
        }\n
    }\n
LABEL_402071:\n
    v16 = (!(v13 < 10) ? 48 : ((!(v14 & 2)) * 32 + 55));\n
    v17 = v16 + v13;\n
    v18 = *(v9);\n
    *(v18) = v17;\n
    *(v9) = *(v9) + 1;\n
    *(v10) = *(v10) + 1;\n
    return v18;\n
}\n
", "4202656:cgc_sprintf": "int cgc_sprintf(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    char v9;  // [bp+0xc]\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    char v14;  // dl\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // edx\n
    unsigned int v25;  // edi\n
    unsigned int v26;  // eax\n
\n
    v5 = 0;\n
    v6 = &v9;\n
    while (true)\n
    {\n
        v10 = a0;\n
        if (!*(v10))\n
            break;\n
        a0 = v10 + 1;\n
        *(&v10) = *(v10);\n
        if (*(&v10) != 37)\n
        {\n
            v11 = v8;\n
            *(v11) = v10;\n
            v8 = v11 + 1;\n
            v5 += 1;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            v15 = 0;\n
            while (true)\n
            {\n
                v12 = v15 | 1;\n
                do\n
                {\n
                    v17 = v15;\n
                    v13 = a0;\n
                    a0 = v13 + 1;\n
                    v14 = *(v13);\n
                    v15 = v12;\n
                } while (v14 == 48);\n
                switch (v14)\n
                {\n
                case 37:\n
                    v16 = v8;\n
                    *(v16) = 37;\n
                    goto LABEL_402227;\n
                case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                    v4 = 10;\n
                    v7 = cgc_strtol(v13, &a0);\n
                    v15 = v17;\n
                    continue;\n
                case 100:\n
                    v18 = v6;\n
                    v6 = v18 + 4;\n
                    v19 = *(v18);\n
                    if (v19 < 0)\n
                    {\n
                        v24 = v8;\n
                        *(v24) = 45;\n
                        v8 = v24 + 1;\n
                        v5 += 1;\n
                        v19 = -(v19);\n
                    }\n
                    v3 = v17;\n
                    v2 = v7;\n
                    v1 = 10;\n
                    v0 = v19;\n
LABEL_4021ae:\n
                    cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                    break;\n
                case 115:\n
                    v20 = v6;\n
                    v6 = v20 + 4;\n
                    v21 = v8;\n
                    v22 = v5;\n
                    if (cgc_strlen())\n
                    {\n
                        v7 = v22;\n
                        v25 = 0;\n
                        do\n
                        {\n
                            *((v21 + v25)) = *((*(v20) + v25));\n
                            v25 += 1;\n
                        } while (v25 < cgc_strlen());\n
                        v21 += v25;\n
                        v22 = v7 + v25;\n
                    }\n
                    v8 = v21;\n
                    v5 = v22;\n
                    break;\n
                case 88:\n
                    v17 |= 2;\n
                case 120:\n
                    v23 = v6;\n
                    v6 = v23 + 4;\n
                    v3 = v17;\n
                    v2 = v7;\n
                    v1 = 16;\n
                    v0 = *(v23);\n
                    goto LABEL_4021ae;\n
                default:\n
                    v16 = v8;\n
                    *(v16) = v14;\n
LABEL_402227:\n
                    v8 = v16 + 1;\n
                    v5 += 1;\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    v26 = v8;\n
    v8 = v26 + 1;\n
    *(v26) = 0;\n
    return v5;\n
}\n
", "4202692:sub_4020c4": null, "4203088:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
    {\n
        v5 = cgc_malloc(v1);\n
        return v5;\n
    }\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            return v5;\n
        }\n
    }\n
    return 0;\n
}\n
", "4203206:sub_4022c6": null, "4203216:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4203250:sub_4022f2": null, "4203264:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    if (!*(v2))\n
        return *(a0) - *(v2);\n
    v3 = v2 + 1;\n
    while (*(v1))\n
    {\n
        if (v4 != *(v1))\n
            break;\n
        v1 += 1;\n
        v4 = *(v3);\n
        v3 += 1;\n
        if (!v4)\n
            break;\n
    }\n
    return *(v1) - v4;\n
}\n
", "4203328:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v3);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4203388:sub_40237c": null, "4203392:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4203419:sub_40239b": null, "4203424:cgc_strsep": "int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    struct struct_0 **v1;  // esi\n
    char v2[2];  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // al, Other Possible Types: char\n
    unsigned int v4;  // eax\n
    char v6[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = v2[0];\n
    if (v2[0])\n
    {\n
        while (true)\n
        {\n
            v4 = cgc_strchr(a0, v3);\n
            if (v4)\n
                break;\n
            v3 = *((v2 + 1));\n
            v2 += 1;\n
            if (!v3)\n
                break;\n
        }\n
    }\n
    if (!*(v2))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        v6 = v2 + 1;\n
    }\n
    *(v1) = v6;\n
    return *(v1);\n
}\n
", "4203534:sub_40240e": null, "4203536:cgc_strtol": "int cgc_strtol(char *v3, unsigned int *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v4;  // esi\n
    unsigned int *v5;  // ecx, Other Possible Types: unsigned int\n
    char *v6;  // edx, Other Possible Types: unsigned int\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // ebx, Other Possible Types: unsigned int\n
    char v9;  // bl\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // ecx\n
    void* v13;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    char *v17;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = a1;\n
    v5 = a0;\n
    v6 = v3;\n
    v7 = 0;\n
    if (v4 > 36)\n
    {\n
        v8 = 0;\n
        v0 = v6;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        v0 = v6;\n
        if (v4 != 1)\n
        {\n
            v10 = v6;\n
            while (true)\n
            {\n
                v9 = *(v10);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v9 != 32)\n
                    break;\n
                v10 += 1;\n
            }\n
            v11 = 0;\n
            *(&v11) = v9 == 45;\n
            v12 = (*((v10 + v11)) == 43) + v11;\n
            v0 = v10 + v12;\n
            if (!v4)\n
            {\n
                v4 = 10;\n
                if (*(v0) == 48)\n
                {\n
                    if ((*((v10 + v12 + 1)) | 32) == 120)\n
                    {\n
                        v0 = v10 + v12 + 2;\n
                        v4 = 16;\n
                    }\n
                    else\n
                    {\n
                        v0 = v10 + v12 + 1;\n
                        v4 = 8;\n
                    }\n
                }\n
            }\n
            else if (v4 == 16)\n
            {\n
                v4 = 16;\n
                if (*(v0) == 48 && (*((v10 + v12 + 1)) | 32) == 120)\n
                    v0 = v10 + v12 + 2;\n
            }\n
            v13 = 0;\n
            v14 = 0;\n
            v1 = v4;\n
            while (true)\n
            {\n
                v15 = *((v0 + v14));\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                {\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                        break;\n
                    v2 = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, ((cl<1> & 0xdf<8>) - 0x41<8>)), 0x1a<32>, 0x0<32>);\n
                }\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v16 = v15 - 48;\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                else if (v2)\n
                {\n
                    v16 = v15 + [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Conv(32->8, ecx<4>) - 0x41<8>)), 0x1a<32>, 0x0<32>) * 32 - 87;\n
                    v4 = v1;\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                else\n
                {\n
                    v16 = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>);\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                v13 = v4 * v13 + v16;\n
                v14 += 1;\n
            }\n
            v7 = -(v13);\n
            if (v9 != 45)\n
                v7 = v13;\n
            v8 = v14;\n
            v0 += v14;\n
            v5 = a0;\n
            v6 = v3;\n
        }\n
    }\n
    if (!v5)\n
        return v7;\n
    v17 = v0;\n
    if (!v8)\n
        v17 = v6;\n
    *(v5) = v17;\n
    return v7;\n
}\n
", "4203583:sub_40243f": null, "4203822:sub_40252e": null, "4203927:sub_402597": null, "4203936:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4203977:sub_4025c9": null, "4203984:cgc_link_send": "int cgc_link_send(unsigned short v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x170]\n
    char v1;  // [bp-0x168]\n
    unsigned short v2;  // [bp-0x164]\n
    char v3;  // [bp-0x162]\n
    unsigned int v5;  // esi\n
\n
    v2 = (v4 & 3) + ((v5 & 511) * 8) + 4;\n
    v5 = (v5 < 339 ? 339 : a0);\n
    cgc_memcpy(&v3, a1, v5);\n
    v0 = &v1;\n
    return cgc_transmit(1, &v2, v5 + 2);\n
}\n
", "4204110:sub_40264e": null, "4204112:cgc_link_recv": "int cgc_link_recv(unsigned int *v3, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x14]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
\n
    do\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, &v1, 2))\n
            return -1;\n
        if (*(&v2) < 2)\n
            return -1;\n
        v5 = *(&v1) >> 3 & 511;\n
    } while (v5 > 339);\n
    v0 = &v2;\n
    if (cgc_receive(0, a1, v5))\n
        return -1;\n
    v6 = *(&v1);\n
    v7 = v6 / 8 & 511;\n
    if (*(&v2) == v7)\n
    {\n
        *(v3) = v6 & 3;\n
        *(a0) = v7;\n
        return 0;\n
    }\n
    return -1;\n
}\n
", "4204254:sub_4026de": null, "4204256:main": "int main()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = cgc_handle_control_connect;\n
    cgc_session_register_psm(4113);\n
    v0 = cgc_handle_interrupt_connect;\n
    cgc_session_register_psm(4115);\n
    cgc_session_loop();\n
    return 0;\n
}\n
", "4204327:sub_402727": null, "4204336:cgc_handle_control_connect": "int cgc_handle_control_connect(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = 0;\n
    cgc_session_register_userdata(v3);\n
    v0 = cgc_handle_event;\n
    return cgc_session_register_events(v3);\n
}\n
", "4204388:sub_402764": null, "4204400:cgc_handle_interrupt_connect": "int cgc_handle_interrupt_connect(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = 1;\n
    cgc_session_register_userdata(v3);\n
    v0 = cgc_handle_event;\n
    return cgc_session_register_events(v3);\n
}\n
", "4204452:sub_4027a4": null, "4204464:cgc_handle_event": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern unsigned int g_incoming_report;\n
extern char g_incoming_report_type;\n
extern unsigned int g_protocol;\n
\n
int cgc_handle_event(unsigned int v12, unsigned int a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x17]\n
    char v3;  // [bp-0x16]\n
    char v4;  // [bp-0x15]\n
    char v5;  // [bp-0x14]\n
    char v6;  // [bp-0x13]\n
    char v7;  // [bp-0x12]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    struct_2 *v11;  // [bp-0x4]\n
    char v13;  // [bp+0xb]\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    struct_0 *v19;  // ecx\n
    unsigned int v20;  // ebp\n
    unsigned int v21;  // esi\n
    char *v22;  // edi\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // edx\n
    unsigned int v26;  // eax\n
    struct_2 *v27;  // eax, Other Possible Types: unsigned int\n
    char *v28;  // edi, Other Possible Types: unsigned int\n
\n
    v10 = v16;\n
    v9 = v17;\n
    v8 = v18;\n
    if (a0)\n
    {\n
LABEL_40281b:\n
        return v26;\n
    }\n
    v19 = a1;\n
    if (!v19->field_0)\n
    {\n
        v20 = v19->field_8;\n
        if (v19->field_8)\n
        {\n
            v21 = v12;\n
            v22 = v19->field_4;\n
            v23 = *(v22);\n
            v24 = v23 / 16;\n
            v1 = g_incoming_report_type;\n
            if (g_incoming_report_type == 1 && v24 != 10)\n
            {\n
                g_incoming_report_type = 0;\n
                v2 = 1;\n
                v27 = &v2;\n
                goto LABEL_40280f;\n
            }\n
            switch (v24)\n
            {\n
            case 1:\n
                if (v26 == 5)\n
                    goto LABEL_0x40283e;\n
                else\n
                    goto LABEL_40281b;\n
            case 4:\n
                if (v26 == 2)\n
                {\n
                    v26 = cgc_send_data(600);\n
LABEL_402818:\n
                    break;\n
                }\n
                else if (v26 == 1)\n
                {\n
                    v26 = cgc_send_report();\n
                    break;\n
                }\n
                else\n
                {\n
                    v3 = 4;\n
                    v27 = &v3;\n
LABEL_40280f:\n
                    v11 = v27;\n
                    v10 = 1;\n
                    v9 = v21;\n
                    v26 = cgc_session_send(v12, a0);\n
                    goto LABEL_402818;\n
                }\n
            case 5:\n
                if (v26 == 2)\n
                {\n
                    g_incoming_report_type = 1;\n
                    break;\n
                }\n
                else\n
                {\n
                    v4 = 4;\n
                    v27 = &v4;\n
                    goto LABEL_40280f;\n
                }\n
            case 6:\n
                v28 = cgc_malloc(2);\n
                *(v28) = 160;\n
                cgc_memcpy(v28 + 1, &g_protocol, 1);\n
                v0 = 2;\n
                goto LABEL_402955;\n
            case 7:\n
                *(&g_protocol) = v23 & 1;\n
                v5 = 0;\n
                v27 = &v5;\n
                goto LABEL_40280f;\n
            case 10:\n
                if (!v1)\n
                {\n
                    v6 = 1;\n
                    v27 = &v6;\n
                    goto LABEL_40280f;\n
                }\n
                else\n
                {\n
                    if (v20 >= 2)\n
                    {\n
                        v23 = (v23 < 600 ? 600 : v20 - 1);\n
                        cgc_memcpy(&g_incoming_report, v22 + 1, v23);\n
                    }\n
                    v7 = 0;\n
                    v26 = cgc_session_send(v21, 1);\n
                    g_incoming_report_type = 0;\n
                    break;\n
                }\n
            case 11:\n
                v28 = cgc_malloc(54);\n
                *(v28) = 160;\n
                cgc_memcpy(v28 + 1, main, 53);\n
                v0 = 54;\n
LABEL_402955:\n
                cgc_session_send(v21, v0);\n
                v26 = cgc_free(v28);\n
                goto LABEL_402818;\n
            default:\n
                v13 = 3;\n
                v27 = &v13;\n
                goto LABEL_40280f;\n
            }\n
        }\n
    }\n
}\n
", "4204988:sub_4029bc": null, "4204992:cgc_send_report": "extern char g_protocol;\n
\n
int cgc_send_report()\n
{\n
    char v0;  // [bp-0x330]\n
    unsigned int v2;  // esi\n
    char *v3;  // edi\n
    unsigned int v4;  // ecx\n
\n
    cgc_random(&v0, 800);\n
    v2 = (!g_protocol ? 700 : 200);\n
    v3 = cgc_malloc(v2 + 1);\n
    *(v3) = 161;\n
    cgc_memcpy(v3 + 1, &v0, v2);\n
    cgc_session_send(v4, v2 + 1);\n
    return cgc_free(v3);\n
}\n
", "4205136:cgc_send_data": "int cgc_send_data(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    char *v3;  // edi\n
    char v4;  // dl\n
    unsigned int v5;  // ecx\n
\n
    v1 = v0;\n
    v3 = cgc_malloc(v1 + 1);\n
    *(v3) = v4 | 160;\n
    cgc_memcpy(v3 + 1, a0, v0);\n
    cgc_session_send(v5, v1 + 1);\n
    return cgc_free(v3);\n
}\n
", "4205239:sub_402ab7": null, "4205248:cgc_session_configuration_response": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_session_configuration_response(struct_0 *v0)\n
{\n
    char v1[2];  // eax\n
\n
    v1 = *((4220708 + 4 * v0->field_4));\n
    if (v1 && v1[0] == 1 && v1[1] == 1)\n
        v1[0] = 2;\n
    return *((4220708 + 4 * v0->field_4));\n
}\n
", "4205294:sub_402aee": null, "4205296:cgc_session_loop": "typedef struct struct_8 {\n
    char field_0;\n
    char padding_1[7];\n
    struct struct_3 *field_8;\n
    unsigned int field_c;\n
} struct_8;\n
\n
typedef struct struct_6 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_6;\n
\n
typedef struct struct_7 {\n
    struct struct_7 *field_0;\n
    unsigned int field_4;\n
} struct_7;\n
\n
typedef struct struct_4 {\n
    char padding_0[8];\n
    struct struct_3 *field_8;\n
} struct_4;\n
\n
typedef struct struct_9 {\n
    char field_0;\n
} struct_9;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned short field_4;\n
    char padding_6[10];\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_6;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    struct struct_1 *field_2;\n
    unsigned short field_4;\n
    char padding_6[10];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_446728;\n
extern struct_4 g_456730;\n
extern unsigned short g_current_packet;\n
extern unsigned int g_dynamic_id;\n
extern struct_7 *g_psm_head;\n
extern unsigned int g_temp_packet;\n
\n
int cgc_session_loop()\n
{\n
    void* v3;  // [bp-0x1ac]\n
    unsigned int *v4;  // [bp-0x1a8]\n
    unsigned int v5;  // [bp-0x1a4]\n
    unsigned int v16;  // [bp-0x178]\n
    unsigned int v20;  // [bp-0x168]\n
    char v21;  // [bp-0x163]\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // esi\n
    unsigned int v25;  // eax\n
    void* v26;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // ecx\n
    void* v30;  // edx\n
    struct_8 *v31;  // ecx\n
    struct struct_3 **v91;  // eax\n
\n
    v23 = cgc_link_recv(&v20, &v16, &v21);\n
    if (v23)\n
        return v23;\n
    v24 = -1;\n
    while (true)\n
    {\n
        v25 = v20;\n
        v26 = v24;\n
        if (v25 != 1)\n
        {\n
            v24 = -1;\n
            if (!(v25 == 2))\n
                continue;\n
            cgc_memset(&g_current_packet, 0, 65539);\n
            v26 = 0;\n
        }\n
        v24 = -1;\n
        if (v26 == -1)\n
            continue;\n
        v27 = v16;\n
        v24 = -1;\n
        if (!(v27 + v26 <= 65539))\n
            continue;\n
        cgc_memcpy(4482852 + v26, &v21, v27);\n
        v28 = v26 + v16;\n
        if (v28 >= 4)\n
            break;\n
        v24 = v28;\n
LABEL_402b4a:\n
        v23 = cgc_link_recv(&v20, &v16, &v21);\n
        if (v23)\n
            return v23;\n
    }\n
    v24 = v28;\n
    if (!(*(&g_current_packet) + 4 == v28))\n
        continue;\n
    v29 = *(&g_current_packet) >> 16;\n
    if (v29 == 1)\n
    {\n
        v30 = 0;\n
    }\n
    else\n
    {\n
        v31 = *((4220708 + 4 * v29));\n
        v24 = -1;\n
        if (!v31)\n
            goto LABEL_402b4a;\n
        v24 = -1;\n
        if (v31->field_0 != 2)\n
            goto LABEL_402b4a;\n
        v3 = 0;\n
        v4 = &g_446728;\n
        v5 = *(&g_current_packet);\n
        if (v31->field_8)\n
            v91(v31, v31->field_c);\n
        v24 = -1;\n
        goto LABEL_402b4a;\n
    }\n
}\n
", "4205368:sub_402b38": null, "4205470:sub_402b9e": null, "4205572:sub_402c04": null, "4207894:sub_403516": null, "4207904:cgc_session_register_psm": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_0 *g_psm_head;\n
\n
int cgc_session_register_psm(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // esi\n
    struct_0 *v2;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = g_psm_head;\n
    v3 = 0;\n
    if (g_psm_head)\n
    {\n
        do\n
        {\n
            if (*((v2 + 4)) == v1)\n
            {\n
                v3 = v2;\n
                if (!(!v2))\n
                    goto LABEL_403578;\n
                goto LABEL_403557;\n
            }\n
            v2 = *(v2);\n
        } while (v2);\n
        goto LABEL_403578;\n
    }\n
    if (!(!0))\n
        goto LABEL_403578;\n
LABEL_403557:\n
    v3 = cgc_malloc(12);\n
    if (!v3)\n
        return v3;\n
    *((v3 + 4)) = v1;\n
    *(v3) = g_psm_head;\n
    g_psm_head = v3;\n
LABEL_403578:\n
    *((v3 + 8)) = a0;\n
    return v3;\n
}\n
", "4208005:sub_403585": null, "4208016:cgc_session_register_events": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_session_register_events(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_8 = a0;\n
    return a0;\n
}\n
", "4208028:sub_40359c": null, "4208032:cgc_session_register_userdata": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int cgc_session_register_userdata(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_c = a0;\n
    return a0;\n
}\n
", "4208044:sub_4035ac": null, "4208048:cgc_session_send": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_456730;\n
extern unsigned int g_temp_packet;\n
\n
int cgc_session_send(struct_0 *v0, unsigned short a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // ebp\n
    void* v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v1 + 4;\n
    g_temp_packet = v0->field_4 * 0x10000 | v1;\n
    cgc_memcpy(&g_456730, a1, v1);\n
    v3 = 0;\n
    do\n
    {\n
        v4 = v2 - v3;\n
        if (v4 >= 339)\n
            v4 = 339;\n
        v5 = cgc_link_send(1 + (v3 < 1), v4, 4548396 + v3);\n
        v3 += v4;\n
    } while (v2 > v3);\n
    return v5;\n
}\n
", "4208196:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}