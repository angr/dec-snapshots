{"4198400:_init": "extern struct_0 *g_408a88;\n
\n
int _init()\n
{\n
    if (g_408a88)\n
    {\n
        g_408a88();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198544:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 31119;\n
    v6 = v5 + 114;\n
    v7 = v5 + 114;\n
    if (v7 == v6)\n
        return v5 + 114;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 31055;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 114;\n
    v9 = (v6 + 114 - (v6 + 114) >> 31) + (114 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408a84;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408a84)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = a0 * v5;\n
        if ((0 CONCAT v3) /m a0 != v5)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_malloc();\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = v3;\n
        v4 = cgc_memset(v2, 0);\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4199077:sub_4012a5": null, "4199088:cgc_isascii": "int cgc_isascii(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 0)\n
        v1 = v2 < 128;\n
    return v1 & 1;\n
}\n
", "4199136:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = !(*((v0 + v3 - 10892)) & 32);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199228:sub_40133c": null, "4199232:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = (*((v0 + v3 - 10892)) & 7);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199324:sub_40139c": null, "4199328:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = (*((v0 + v3 - 10892)) & 3);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199420:sub_4013fc": null, "4199424:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = (*((v0 + v3 - 10892)) & 1);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199516:sub_40145c": null, "4199520:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = (*((v0 + v3 - 10892)) & 2);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199612:sub_4014bc": null, "4199616:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = (*((v0 + v3 - 10892)) & 16);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199708:sub_40151c": null, "4199712:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_isascii(v3))\n
    {\n
        v1 = (*((v0 + v3 - 10892)) & 8);\n
        return v1 & 1;\n
    }\n
    return v1 & 1;\n
}\n
", "4199804:sub_40157c": null, "4199808:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4199879:sub_4015c7": null, "4199888:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 - 32;\n
    return v0;\n
}\n
", "4199959:sub_401617": null, "4199968:cgc_free": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2 = v3 + 3;\n
    v4 = v2;\n
    if (!*((v4 + 4)))\n
    {\n
        v0 = v2;\n
        cgc_insert_into_flist();\n
        v0 = v2;\n
        v4 = cgc_coalesce();\n
        return v4;\n
    }\n
    return v2;\n
}\n
", "4200069:sub_401685": null, "4200080:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v7)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[6];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct struct_1 **v4;  // [bp-0x14]\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if ((v7 & 7))\n
        v7 = v7 - -7 & -8;\n
    v7 += 24;\n
    v5 = 0;\n
    v0 = &v5;\n
    v4 = cgc_find_fit(v7);\n
    if (!v5)\n
    {\n
        if (!cgc_allocate_new_blk())\n
        {\n
            v4 = 31;\n
            v5 = *((v1 + 460 + v4 * 4));\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
    cgc_remove_from_flist();\n
    v3 = *(v5) - v7;\n
    if (v3 > 24)\n
    {\n
        v2[0] = v5 + v7;\n
        v2[0] = v3;\n
        v2[1] = 1;\n
        v2[2] = 0;\n
        v2[3] = 0;\n
        *(v5) = v7;\n
        v2[5] = v5;\n
        v2[4] = *((v5 + 16));\n
        if (*((v5 + 16)))\n
            *((*((v5 + 16)) + 20)) = v2;\n
        *((v5 + 16)) = v2;\n
        cgc_insert_into_flist();\n
    }\n
    v6 = v5 + 24;\n
    return v6;\n
}\n
", "4200449:sub_401801": null, "4200464:cgc_find_fit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_fit(unsigned int v5, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    for (v2 = cgc_get_size_class(); v2 < 32; v2 = v2 + 1)\n
    {\n
        for (*(a0) = *((v1 + 460 + v2 * 4)); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v3 = -1;\n
    return v3;\n
}\n
", "4200642:sub_4018c2": null, "4200656:cgc_allocate_new_blk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_new_blk()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[6];  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0x40000;\n
    v0 = &v4;\n
    if (cgc_allocate(v2, 0))\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (*(&v4))\n
    {\n
        v3[0] = *(&v4);\n
        v3[0] = v2;\n
        v3[1] = 1;\n
        v3[3] = 0;\n
        v3[2] = 0;\n
        v3[5] = 0;\n
        v3[4] = 0;\n
        cgc_insert_into_flist();\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4200850:sub_401992": null, "4200864:cgc_get_size_class": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_size_class(unsigned int v3)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2 < 32)\n
            v0 = !(v3 <= *((v1 + (v2 << 2) + 48)));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4200975:sub_401a0f": null, "4200976:cgc_insert_into_flist": "extern unsigned int _GLOBAL_OFFSET_TABLE_[4];\n
\n
int cgc_insert_into_flist(unsigned int v3[4])\n
{\n
    unsigned int v0[4];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // eax\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = cgc_get_size_class(v3[0]);\n
    v3[1] = 1;\n
    if (!v0[28 + 3 + v1])\n
    {\n
        v5 = v0;\n
        v5[28 + 3 + v1] = v3;\n
        return v0;\n
    }\n
    v6 = v0;\n
    v3[2] = v6[28 + 3 + v1];\n
    *((v6[28 + 3 + v1] + 12)) = v3;\n
    v6[28 + 3 + v1] = v3;\n
    v5 = v3;\n
    *((v5 + 12)) = 0;\n
    return v3;\n
}\n
", "4201134:sub_401aae": null, "4201136:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_size_class(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((v0 + (v1 << 2) + 460)) == v3)\n
        *((v0 + v1 * 4 + 460)) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4201310:sub_401b5e": null, "4201312:cgc_coalesce": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[2];  // eax\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    struct_0 *v5;  // eax\n
    unsigned int v6[2];  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v2 = v1->field_14;\n
        v2[0] = v1->field_0 + v2[0];\n
        v3 = v1->field_14;\n
        v3[0] = v1->field_10->field_0 + v3[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        cgc_remove_from_blist();\n
        v6 = cgc_remove_from_blist();\n
        return v6;\n
    }\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && !v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1);\n
        v4 = v1->field_14;\n
        v4[0] = v1->field_0 + v4[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        v6 = cgc_remove_from_blist();\n
        goto LABEL_401d4c;\n
    }\n
    v6 = v1;\n
    if (v6->field_14)\n
    {\n
        v6 = v1->field_14;\n
        if (!v6[1])\n
        {\n
            v6 = v1;\n
            if (v6->field_10)\n
            {\n
                v6 = v1->field_10;\n
                if (v6[1])\n
                {\n
                    cgc_remove_from_flist(v1->field_10);\n
                    cgc_remove_from_flist(v1);\n
                    v5 = v1;\n
                    v5->field_0 = v1->field_10->field_0 + v5->field_0;\n
                    cgc_insert_into_flist(v1);\n
                    v6 = cgc_remove_from_blist();\n
                }\n
            }\n
        }\n
    }\n
LABEL_401d4c:\n
    return v6;\n
}\n
", "4201820:sub_401d5c": null, "4201824:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_remove_from_blist(struct_1 *v0)\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int\n
\n
    if (v0->field_14)\n
        v0->field_14->field_10 = v0->field_10;\n
    v1 = v0;\n
    if (v1->field_10)\n
    {\n
        v1 = v0->field_10;\n
        *((v1 + 20)) = v0->field_14;\n
    }\n
    return v1;\n
}\n
", "4201888:cgc_memchr": "int cgc_memchr(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v2 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4201989:sub_401e05": null, "4202000:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v3;\n
}\n
", "4202086:sub_401e66": null, "4202096:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v3;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v2 = v3;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v3;\n
        return v2;\n
    }\n
}\n
", "4202225:sub_401ef1": null, "4202240:cgc_output_number": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number(unsigned int v8, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char v3;  // [bp-0x2d]\n
    char v4;  // [bp-0x25]\n
    char v5;  // [bp-0x1d]\n
    char v6;  // [bp-0x15]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (v8 >= a0)\n
    {\n
        v7 = cgc_output_number((0 CONCAT v8) /m a0, a0, a1 - 1, a2);\n
        v8 = (0 CONCAT v8) /m a0 >> 32;\n
    }\n
    if (!v7 && a1 > 0)\n
    {\n
        while (true)\n
        {\n
            a1 -= 1;\n
            if (!a1)\n
                break;\n
            if ((a2 & 1))\n
            {\n
                v6 = 48;\n
                cgc_transmit(1, &v6, 1);\n
            }\n
            else\n
            {\n
                v5 = 32;\n
                cgc_transmit(1, &v5, 1);\n
            }\n
        }\n
    }\n
    if ((a2 & 2))\n
    {\n
        if (v8 < 10)\n
            v1 = v8 + 48;\n
        else\n
            v1 = v8 + 55;\n
        v4 = v1;\n
        cgc_transmit(1, &v4, 1);\n
        return v7 + 1;\n
    }\n
    else\n
    {\n
        if (v8 < 10)\n
            v0 = v8 + 48;\n
        else\n
            v0 = v8 + 87;\n
        v3 = v0;\n
        cgc_transmit(1, &v3, 1);\n
        return v7 + 1;\n
    }\n
}\n
", "4202731:sub_4020eb": null, "4202736:cgc_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf(char *v18)\n
{\n
    char *v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c]\n
    unsigned int v3;  // [bp-0x58]\n
    char v4;  // [bp-0x51]\n
    char v5;  // [bp-0x49]\n
    char v6;  // [bp-0x41]\n
    char v7;  // [bp-0x39]\n
    char v8;  // [bp-0x31]\n
    char v9;  // [bp-0x29]\n
    struct struct_0 **v10;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x24]\n
    void* v12;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x18]\n
    unsigned int v15;  // [bp-0x14]\n
    unsigned int v16;  // [bp-0x10]\n
    char *v17;  // [bp-0xc]\n
    char v19;  // [bp+0x8]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(v18))\n
    {\n
        v20 = v18;\n
        v18 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            cgc_transmit(1, &v4, 1);\n
LABEL_402415:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = v18;\n
                    v18 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(v18 - 1, &v18);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                cgc_transmit(1, &v8, 1);\n
                goto LABEL_4023cd;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = *(v22);\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        cgc_transmit(1, &v6, 1);\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number(v16, 10, v12, v13);\n
                    goto LABEL_4023cd;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        cgc_transmit(1, &v7, 1);\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_4023cd;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    cgc_transmit(1, &v5, 1);\n
LABEL_4023cd:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_402415;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = *(v24);\n
            cgc_output_number(v11, 16, v12, v13);\n
            goto LABEL_4023cd;\n
        }\n
    }\n
    return v14;\n
}\n
", "4203555:sub_402423": null, "4203568:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(char *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = cgc_malloc(a0);\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v2 = cgc_malloc(a0);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = &v4[24];\n
        if (a0 >= *(v1) - 24)\n
            cgc_memcpy(v2, v4, *(v1) - 24);\n
        else\n
            cgc_memcpy(v2, v4, a0);\n
        cgc_free(v4);\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_free(v4);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4203826:sub_402532": null, "4203840:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (*(v0))\n
        {\n
            v3 = v0;\n
            v0 = v3 + 1;\n
            if (*(v3) == a0)\n
            {\n
                v1 = v0;\n
                return v1;\n
            }\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4203924:sub_402594": null, "4203936:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(a0) - *(v2);\n
}\n
", "4204064:cgc_strcpy": "int cgc_strcpy(unsigned int v1, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    for (v0 = 0; *(a0); *((v1 + v4)) = *(v3))\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4204148:sub_402674": null, "4204160:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4204212:sub_4026b4": null, "4204224:cgc_strsep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strsep(struct struct_0 **v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = cgc_strchr(a0, *(v2)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    a0 = &*(v4)->field_0;\n
    if (!*(v2))\n
    {\n
        *(v4) = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        *(v4) = &v2[1];\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4204440:sub_402798": null, "4204448:cgc_strtol": "int cgc_strtol(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v12;\n
    if (a1 == 1)\n
    {\n
LABEL_4027e8:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_4027e8;\n
        if (a1 < 0)\n
            goto LABEL_4027e8;\n
        while (true)\n
        {\n
            if (v6[0] != 32 && v6[0] != 9 && v6[0] != 12 && v6[0] != 10 && v6[0] != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_4028df:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_4028df;\n
                v6 += 1;\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_402954;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_402954:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_402ab2;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_402a72;\n
            }\n
            if (!v7)\n
            {\n
LABEL_402a72:\n
                if (v8 >= a1)\n
                    goto LABEL_402ab2;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = v6 + 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_402a69;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_402a69:\n
                v8 += 10;\n
                goto LABEL_402a72;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_4029e8;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_4029e8:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_402ab2:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v12;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4205310:sub_402afe": null, "4205312:cgc_strtoul": "int cgc_strtoul(char v0[2], unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4205371:sub_402b3b": null, "4205376:cgc_initialize": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initialize()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[7];  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    char v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc], Other Possible Types: unsigned int, char **\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"\\n
   . . . Initializing the inventory . . .\\n
         (movie info from IMDb.com)\\n
\");\n
    for (v4 = 0; v4 <= 21; v4 += 1)\n
    {\n
        cgc_random(&v2, 1);\n
        cgc_random(&v3, 4);\n
        if (!(v2 & 1))\n
            *((v0 + v4 + 596)) = ((0 CONCAT *(&v3)) /m 26 >> 32) + 97;\n
        else\n
            *((v0 + v4 + 596)) = ((0 CONCAT *(&v3)) /m 26 >> 32) + 65;\n
    }\n
    v8 = v0;\n
    *((v8 + v4 + 596)) = 0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= 10)\n
            return v8;\n
        v1[0] = cgc_malloc(28);\n
        if (!v1)\n
            break;\n
        cgc_memset(v1, 0, 28);\n
        v1[0] = cgc_malloc(cgc_strlen(*((v0 + 176 + v4 * 28))) + 1);\n
        v1[1] = cgc_malloc(cgc_strlen(*((v0 + 176 + v4 * 28 + 4))) + 1);\n
        if (!v1[0])\n
        {\n
LABEL_402cec:\n
            break;\n
        }\n
        else\n
        {\n
            if (!v1[1])\n
                goto LABEL_402cec;\n
            cgc_strcpy(v1[0], *((v0 + 176 + v4 * 28)));\n
            cgc_strcpy(v1[1], *((v0 + 176 + v4 * 28 + 4)));\n
            v9 = v0;\n
            v1[2] = *((v9 + 176 + v4 * 28 + 8));\n
            v1[3] = *((v9 + 176 + v4 * 28 + 12));\n
            v1[4] = *((v9 + 176 + v4 * 28 + 16));\n
            v1[5] = *((v9 + 176 + v4 * 28 + 20));\n
            v1[6] = v9 - 23716;\n
            cgc_movie_add(v9 + 620);\n
            v8 = v4 + 1;\n
            v4 = v8;\n
        }\n
    }\n
    cgc_printf(v0 - 8958);\n
    v8 = cgc_quit();\n
    return v8;\n
}\n
", "4206049:sub_402de1": null, "4206064:cgc_print_movie_detail": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_movie_detail()\n
{\n
    unsigned int v8;  // [bp-0x4c]\n
    unsigned int v9;  // [bp-0x48]\n
    unsigned int v10;  // [bp-0x44]\n
    char v11;  // [bp-0x40]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x8]\n
    char v16;  // [bp+0x8]\n
    unsigned int v19;  // ebx\n
\n
    v14 = v19;\n
    v10 = &_GLOBAL_OFFSET_TABLE_;\n
    memcpy(&v11, \"[%d] %s (%d, %s) - %s [%d/100]\\n
  => %s\\n
\", 40);\n
    if (!*(&v16))\n
        return;\n
    v9 = *((*(&v16) + 20)) - 1;\n
    if (v9 <= 3)\n
    {\n
        goto *(((stack_base)[68] + (stack_base)[72] * 4 - 10764)) + (stack_base)[68];\n
    }\n
    else\n
    {\n
        v13 = v10 - 8870;\n
        v8 = *((*(&v16) + 16)) - 1;\n
        if (v8 > 3)\n
            v12 = v10 - 8833;\n
        else\n
            goto *(((stack_base)[68] + (stack_base)[76] * 4 - 10748)) + (stack_base)[68];\n
    }\n
}\n
", "4206171:sub_402e5b": "int sub_402e5b()\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = *(&v0) - 8879;\n
}\n
", "4206188:sub_402e6c": "int sub_402e6c()\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = *(&v0) - 8880;\n
}\n
", "4206205:sub_402e7d": "int sub_402e7d()\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = *(&v0) - 8877;\n
}\n
", "4206222:sub_402e8e": "int sub_402e8e()\n
{\n
    char v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v1 = *(&v0) - 8872;\n
}\n
", "4206469:sub_402f85": null, "4206480:cgc_readuntil": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readuntil(unsigned int v5, struct_0 *a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0;\n
    for (v4 = 0; v4 < a1; v4 += 1)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(v5, v3, 1))\n
        {\n
LABEL_403002:\n
            break;\n
        }\n
        else\n
        {\n
            if (!*(&v2))\n
                goto LABEL_403002;\n
            v6 = v3;\n
            v3 = &v6->field_0;\n
            if (v6->field_-1 == a2)\n
                break;\n
        }\n
    }\n
    *((v3 - 1)) = 0;\n
    return v3 - a0;\n
}\n
", "4206670:sub_40304e": null, "4206672:cgc_list_movies": "typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct struct_2 *_GLOBAL_OFFSET_TABLE_[156];\n
\n
int cgc_list_movies()\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct struct_2 *v1[156];  // [bp-0x14]\n
    struct_2 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v3 = 0;\n
    cgc_printf(\"\\n
Movies (Full)\\n
--------------\\n
\");\n
    for (v2 = v1[155]; v2; v2 = v2->field_4)\n
    {\n
        v3 = &v3->padding_0[1];\n
        v0 = v2->field_0;\n
        v2->field_0->field_18(v3);\n
    }\n
    v0 = v3;\n
    cgc_printf(&v1[14 + 15]);\n
    v3 = 0;\n
    cgc_printf(&v1[14 + 8]);\n
    for (v2 = v1[148]; v2; v2 = v2->field_4)\n
    {\n
        v3 = &v3->padding_0[1];\n
        v0 = v2->field_0;\n
        v2->field_0->field_18(v3);\n
    }\n
    v0 = v3;\n
    v7 = v4;\n
    return cgc_printf(&v1[14 + 15]);\n
}\n
", "4206939:sub_40315b": null, "4206944:cgc_rent_movie": "typedef struct struct_3 {\n
    char padding_0[592];\n
    unsigned int field_250;\n
    char padding_254[24];\n
    struct struct_2 *field_26c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rent_movie()\n
{\n
    struct_3 *v0;  // [bp-0x120]\n
    unsigned int v1;  // [bp-0x11c]\n
    unsigned int *v2;  // [bp-0x118], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x114]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    struct_2 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    cgc_printf(\"\\n
Movies (Full)\\n
--------------\\n
\");\n
    for (v6 = v0->field_26c; v6; v6 = v6->field_4)\n
    {\n
        v4 += 1;\n
        v6->field_0->field_18(v4);\n
    }\n
    cgc_printf(&v0[14].padding_0[60]);\n
    if (!v4)\n
    {\n
        v10 = cgc_printf(&v0[13].field_26c + 3);\n
        return v10;\n
    }\n
    while (true)\n
    {\n
        cgc_printf(&v0[13].padding_0[569]);\n
        v10 = cgc_readuntil(0, &v3, 0x100, 10);\n
        if (v10 < 0)\n
            return v10;\n
        v5 = cgc_strtoul(&v3, NULL, 10);\n
        if (v5 >= 1 && v5 <= v4)\n
            break;\n
        cgc_printf(&v0[13].padding_0[552]);\n
    }\n
    v2 = cgc_movie_find_by_id(v0->field_26c);\n
    v1 = *(v2);\n
    v2 = cgc_movie_find(v0->field_250);\n
    if (v2)\n
    {\n
        v10 = cgc_printf(&v0[13].padding_0[514]);\n
        return v10;\n
    }\n
    v2 = cgc_movie_find_by_id(v0->field_26c);\n
    if (!cgc_movie_add(&v0->field_250))\n
    {\n
        v10 = cgc_printf(&v0[13].padding_0[396]);\n
        return v10;\n
    }\n
    v10 = cgc_printf(&v0[13].padding_0[445]);\n
    return v10;\n
}\n
", "4207591:sub_4033e7": null, "4207600:cgc_return_movie": "typedef struct struct_3 {\n
    char padding_0[592];\n
    struct struct_2 *field_250;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_return_movie()\n
{\n
    struct_3 *v0;  // [bp-0x11c]\n
    unsigned int v1;  // [bp-0x118]\n
    struct_2 *v2;  // [bp-0x114], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x110], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10c]\n
    char v5;  // [bp-0x108]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    cgc_printf(\"\\n
Movies (Rented)\\n
--------------\\n
\");\n
    for (v2 = v0->field_250; v2; v2 = v2->field_4)\n
    {\n
        v3 += 1;\n
        v2->field_0->field_18(v3);\n
    }\n
    cgc_printf(&v0[14].padding_0[452]);\n
    if (!v3)\n
    {\n
        v9 = cgc_printf(&v0[14].padding_0[130]);\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        cgc_printf(&v0[14].padding_0[337]);\n
        v9 = cgc_readuntil(0, &v5, 0x100, 10);\n
        if (v9 < 0)\n
            return v9;\n
        v4 = cgc_strtoul(&v5, NULL, 10);\n
        if (v4 >= 1 && v4 <= v3)\n
            break;\n
        cgc_printf(&v0[14].padding_0[320]);\n
    }\n
    v1 = cgc_movie_find_by_id(v0->field_250);\n
    if (!v1)\n
    {\n
        v9 = cgc_printf(&v0[14].padding_0[84]);\n
        return v9;\n
    }\n
    else if (cgc_movie_delete(&v0->field_250))\n
    {\n
        v9 = cgc_printf(&v0[14].padding_0[26]);\n
        return v9;\n
    }\n
    else\n
    {\n
        v9 = cgc_printf(&v0[13].padding_0[567]);\n
        return v9;\n
    }\n
}\n
", "4208197:sub_403645": null, "4208208:cgc_login": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_login()\n
{\n
    unsigned int v0;  // [bp-0x5c]\n
    char v1;  // [bp-0x56]\n
    char v2;  // [bp-0x50]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    strncpy(&v1, \"admin\", 5);\n
    cgc_printf(\"username: \");\n
    cgc_readuntil(0, &v2, 64, 10);\n
    if (cgc_strcmp(&v1, &v2))\n
    {\n
        cgc_printf(v0 - 8258);\n
        v4 = v3;\n
        return v4;\n
    }\n
    cgc_printf(v0 - 8212);\n
    cgc_readuntil(0, &v2, 68, 10);\n
    if (!cgc_strcmp(v0 + 596, &v2))\n
    {\n
        cgc_printf(v0 - 8201);\n
        v3 = 1;\n
        v4 = v3;\n
        return v4;\n
    }\n
    cgc_printf(v0 - 8258);\n
    v4 = v3;\n
    return v4;\n
}\n
", "4208526:sub_40378e": null, "4208528:cgc_add_movie": "typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    void* field_0;\n
    void* field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_movie()\n
{\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v4;  // [bp-0x414]\n
    void* v5;  // [bp-0x410], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0x40c]\n
    char v7;  // [bp-0x408]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v8 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_malloc(28);\n
    if (!v6)\n
        return;\n
    cgc_printf(v2 - 8183);\n
    cgc_printf(v2 - 8155);\n
    if (cgc_readuntil(0, &v7, 0x400, 10) < 0)\n
        goto LABEL_0x403dce;\n
    v6->field_0 = cgc_malloc(cgc_strlen(&v7) + 1);\n
    if (!v6->field_0)\n
        goto LABEL_0x403dce;\n
    cgc_strcpy(v6->field_0, &v7);\n
    cgc_printf(v2 - 8141);\n
    if (cgc_readuntil(0, &v7, 0x400, 10) < 0)\n
        goto LABEL_0x403dce;\n
    v6->field_4 = cgc_malloc(cgc_strlen(&v7) + 1);\n
    if (!v6->field_4)\n
        goto LABEL_0x403dce;\n
    cgc_strcpy(v6->field_4, &v7);\n
    while (true)\n
    {\n
        cgc_printf(v2 - 8121);\n
        if (cgc_readuntil(0, &v7, 0x400, 10) < 0)\n
            goto LABEL_0x403dce;\n
        v6->field_8 = cgc_strtoul(&v7, NULL, 10);\n
        if (v6->field_8 >= 1800 && v6->field_8 <= 2015)\n
        {\n
            while (true)\n
            {\n
                cgc_printf(v2 - 8062);\n
                if (cgc_readuntil(0, &v7, 0x400, 10) < 0)\n
                    goto LABEL_0x403dce;\n
                v6->field_c = cgc_strtoul(&v7, NULL, 10);\n
                if (v6->field_c >= 0 && v6->field_c <= 100)\n
                {\n
                    v5 = 0;\n
                    while (true)\n
                    {\n
                        if (!((v5 ^ 255) & 1))\n
                        {\n
                            v5 = 0;\n
                        }\n
                        else\n
                        {\n
                            cgc_printf(v2 - 7997);\n
                            if (cgc_readuntil(0, &v7, 0x400, 10) < 0)\n
                                goto LABEL_0x403dce;\n
                            v4 = cgc_strtoul(&v7, NULL, 10);\n
                            v5 = 1;\n
                            v1 = v4 - 1;\n
                            if (v1 <= 4)\n
                            {\n
                                goto *(((stack_base)[1052] + (stack_base)[1056] * 4 - 10712)) + (stack_base)[1052];\n
                            }\n
                            else\n
                            {\n
                                v5 = 0;\n
                                cgc_printf(v2 - 7918);\n
                            }\n
                        }\n
                    }\n
                }\n
                cgc_printf(v2 - 8033);\n
            }\n
        }\n
        cgc_printf(v2 - 8096);\n
    }\n
}\n
", "4209579:sub_403bab": "int sub_403bab()\n
{\n
    char v0;  // [bp-0x408]\n
\n
    *((*(&v0) + 16)) = 1;\n
}\n
", "4209597:sub_403bbd": "int sub_403bbd()\n
{\n
    char v0;  // [bp-0x408]\n
\n
    *((*(&v0) + 16)) = 2;\n
}\n
", "4209615:sub_403bcf": "int sub_403bcf()\n
{\n
    char v0;  // [bp-0x408]\n
\n
    *((*(&v0) + 16)) = 3;\n
}\n
", "4209633:sub_403be1": "int sub_403be1()\n
{\n
    char v0;  // [bp-0x408]\n
\n
    *((*(&v0) + 16)) = 4;\n
}\n
", "4209651:sub_403bf3": "int sub_403bf3()\n
{\n
    char v0;  // [bp-0x408]\n
\n
    *((*(&v0) + 16)) = 5;\n
}\n
", "4210249:sub_403e49": null, "4210256:cgc_remove_movie": "typedef struct struct_3 {\n
    char padding_0[588];\n
    unsigned int field_24c;\n
    char padding_250[28];\n
    struct struct_2 *field_26c;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_movie()\n
{\n
    struct_3 *v0;  // [bp-0x11c]\n
    unsigned int v1;  // [bp-0x118]\n
    struct_2 *v2;  // [bp-0x114], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x110]\n
    void* v4;  // [bp-0x10c], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x108]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
    struct_3 *v10;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    cgc_printf(\"\\n
Movies (Full)\\n
--------------\\n
\");\n
    for (v2 = v0->field_26c; v2; v2 = v2->field_4)\n
    {\n
        v4 += 1;\n
        v2->field_0->field_18(v4);\n
    }\n
    cgc_printf(&v0[14].padding_0[60]);\n
    if (!v4)\n
    {\n
        v9 = cgc_printf(&v0[12].padding_0[251]);\n
        return v9;\n
    }\n
    while (true)\n
    {\n
        cgc_printf(&v0[13].padding_0[569]);\n
        v9 = cgc_readuntil(0, &v5, 0x100, 10);\n
        if (v9 < 0)\n
            return v9;\n
        v3 = cgc_strtoul(&v5, NULL, 10);\n
        if (v3 >= 1 && v3 <= v4)\n
            break;\n
        cgc_printf(&v0[13].padding_0[552]);\n
    }\n
    v2 = cgc_movie_find_by_id(v0->field_26c);\n
    v1 = v2->field_0;\n
    if (!cgc_movie_delete(&v0->field_26c))\n
    {\n
        v10 = v0;\n
        v10->field_24c = v10->field_24c - 1;\n
        cgc_free_movie();\n
        v9 = cgc_printf(&v0[12].padding_0[194]);\n
        return v9;\n
    }\n
    v9 = cgc_printf(&v0[12].padding_0[221]);\n
    return v9;\n
}\n
", "4210850:sub_4040a2": null, "4210864:cgc_update_movie": "typedef struct struct_3 {\n
    char padding_0[620];\n
    struct struct_2 *field_26c;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_5 {\n
    void* field_0;\n
    void* field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_5;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_update_movie()\n
{\n
    unsigned int v1;  // [bp-0x43c]\n
    struct_3 *v2;  // [bp-0x438]\n
    unsigned int v4;  // [bp-0x430]\n
    void* v5;  // [bp-0x42c], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x428]\n
    unsigned int v7;  // [bp-0x424]\n
    struct_5 *v8;  // [bp-0x420]\n
    struct_2 *v9;  // [bp-0x41c], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x418]\n
    void* v11;  // [bp-0x18]\n
    void* v12;  // [bp-0x14]\n
    void* v13;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v18;  // ebx\n
\n
    v15 = v18;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v13 = 0;\n
    cgc_printf(\"\\n
Movies (Full)\\n
--------------\\n
\");\n
    for (v9 = v2->field_26c; v9; v9 = *((v9 + 4)))\n
    {\n
        v13 += 1;\n
        *((*(v9) + 24))(v13);\n
    }\n
    cgc_printf(&v2[14].padding_0[60]);\n
    if (!v13)\n
    {\n
        cgc_printf(&v2[12].padding_0[161]);\n
        return;\n
    }\n
    while (true)\n
    {\n
        cgc_printf(&v2[13].padding_0[569]);\n
        if (cgc_readuntil(0, &v10, 0x400, 10) < 0)\n
            return;\n
        v14 = cgc_strtoul(&v10, NULL, 10);\n
        if (v14 >= 1 && v14 <= v13)\n
        {\n
            v9 = cgc_movie_find_by_id(v2->field_26c);\n
            v8 = &v9->field_0->field_0;\n
            cgc_printf(&v2[12].padding_0[133]);\n
            cgc_printf(&v2[12].padding_0[58]);\n
            if (cgc_readuntil(0, &v10, 0x400, 10) < 0)\n
                return;\n
            if (cgc_strlen(&v10))\n
            {\n
                v12 = cgc_malloc(cgc_strlen(&v10) + 1);\n
                if (!v12)\n
                    goto LABEL_0x40498f;\n
                cgc_strcpy(v12, &v10);\n
                cgc_free(v8->field_0);\n
                v8->field_0 = v12;\n
            }\n
            cgc_printf(&v2[12].padding_0[24]);\n
            if (cgc_readuntil(0, &v10, 0x400, 10) < 0)\n
            {\n
                return;\n
            }\n
            else if (cgc_strlen(&v10))\n
            {\n
                v11 = cgc_malloc(cgc_strlen(&v10) + 1);\n
                if (!v11)\n
                    goto LABEL_0x40498f;\n
                cgc_strcpy(v11, &v10);\n
                cgc_free(v8->field_4);\n
                v8->field_4 = v11;\n
            }\n
            while (true)\n
            {\n
                cgc_printf(&v2[11].padding_0[608]);\n
                if (cgc_readuntil(0, &v10, 0x400, 10) < 0)\n
                    goto LABEL_0x40498f;\n
                if (!cgc_strlen(&v10))\n
                    goto LABEL_404552;\n
                v7 = cgc_strtoul(&v10, NULL, 10);\n
                if (v7 >= 1800 && v7 <= 2015)\n
                {\n
                    v8->field_8 = v7;\n
LABEL_404552:\n
                    while (true)\n
                    {\n
                        cgc_printf(&v2[11].padding_0[563]);\n
                        if (cgc_readuntil(0, &v10, 0x400, 10) < 0)\n
                            goto LABEL_0x40498f;\n
                        if (!cgc_strlen(&v10))\n
                            goto LABEL_40464e;\n
                        v6 = cgc_strtoul(&v10, NULL, 10);\n
                        if (v6 >= 0 && v6 <= 100)\n
                        {\n
                            v8->field_c = v6;\n
LABEL_40464e:\n
                            v5 = 0;\n
                            while (true)\n
                            {\n
                                if (!((v5 ^ 255) & 1))\n
                                    goto LABEL_4047e2;\n
                                cgc_movie_g2s();\n
                                cgc_printf(&v2[11].padding_0[511]);\n
                                if (cgc_readuntil(0, &v10, 0x400, 10) < 0)\n
                                    goto LABEL_0x40498f;\n
                                if (!cgc_strlen(&v10))\n
                                {\n
LABEL_4047e2:\n
                                    v5 = 0;\n
                                }\n
                                else\n
                                {\n
                                    v4 = cgc_strtoul(&v10, NULL, 10);\n
                                    v5 = 1;\n
                                    v1 = v4 - 1;\n
                                    if (v1 <= 4)\n
                                    {\n
                                        goto *(((stack_base)[1080] + (stack_base)[1084] * 4 - 10672)) + (stack_base)[1080];\n
                                    }\n
                                    else\n
                                    {\n
                                        v5 = 0;\n
                                        cgc_printf(&v2[12].padding_0[430]);\n
                                    }\n
                                }\n
                            }\n
                        }\n
                        cgc_printf(&v2[12].padding_0[545]);\n
                    }\n
                }\n
                cgc_printf(&v2[12].padding_0[608]);\n
            }\n
        }\n
        cgc_printf(&v2[13].padding_0[552]);\n
    }\n
}\n
", "4212571:sub_40475b": "int sub_40475b()\n
{\n
    char v0;  // [bp-0x41c]\n
\n
    *((*(&v0) + 16)) = 1;\n
}\n
", "4212589:sub_40476d": "int sub_40476d()\n
{\n
    char v0;  // [bp-0x41c]\n
\n
    *((*(&v0) + 16)) = 2;\n
}\n
", "4212607:sub_40477f": "int sub_40477f()\n
{\n
    char v0;  // [bp-0x41c]\n
\n
    *((*(&v0) + 16)) = 3;\n
}\n
", "4212625:sub_404791": "int sub_404791()\n
{\n
    char v0;  // [bp-0x41c]\n
\n
    *((*(&v0) + 16)) = 4;\n
}\n
", "4212643:sub_4047a3": "int sub_4047a3()\n
{\n
    char v0;  // [bp-0x41c]\n
\n
    *((*(&v0) + 16)) = 5;\n
}\n
", "4213231:sub_4049ef": null, "4213232:cgc_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_quit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"Bye!\\n
\");\n
    v4 = v1;\n
    return cgc_exit();\n
}\n
", "4213291:sub_404a2b": null, "4213296:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc__terminate(v2, v0);\n
    main(v2, v3);\n
    return;\n
}\n
", "4213328:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x10e4]\n
    unsigned int v1;  // [bp-0x10e0]\n
    unsigned int v2;  // [bp-0x10dc]\n
    char v3;  // [bp-0x10d7]\n
    char v4;  // [bp-0x108c]\n
    char v5;  // [bp-0x103e]\n
    char v6;  // [bp-0x1010]\n
    void* v7;  // [bp-0x10]\n
    void* v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = 0;\n
    memcpy(&v5, \"========= Movie Rental Service v0.1 =========\", 46);\n
    memcpy(&v4, v2 - 7097, 78);\n
    memcpy(&v3, v2 - 7019, 75);\n
    cgc_printf(&v5);\n
    cgc_initialize();\n
    cgc_printf(v2 - 6944);\n
    while (true)\n
    {\n
        if (!v7)\n
        {\n
            cgc_printf(&v4);\n
            if (cgc_readuntil(0, &v6, 0x1000, 10) < 0)\n
                cgc_quit();\n
            v0 = v6 - 49;\n
            if (v0 > 4)\n
                cgc_printf(v2 - 6898);\n
            else\n
                goto *(((stack_base)[4316] + (stack_base)[4324] * 4 - 10652)) + (stack_base)[4316];\n
        }\n
        else\n
        {\n
            cgc_printf(&v3);\n
            if (cgc_readuntil(0, &v6, 0x1000, 10) < 0)\n
                cgc_quit();\n
            v1 = v6 - 49;\n
            if (v1 <= 3)\n
                goto *(((stack_base)[4316] + (stack_base)[4320] * 4 - 10632)) + (stack_base)[4316];\n
            else\n
                cgc_printf(v2 - 6898);\n
        }\n
    }\n
}\n
", "4213679:sub_404baf": "int sub_404baf()\n
{\n
    cgc_add_movie();\n
}\n
", "4213695:sub_404bbf": "int sub_404bbf()\n
{\n
    cgc_remove_movie();\n
}\n
", "4213711:sub_404bcf": "int sub_404bcf()\n
{\n
    cgc_update_movie();\n
}\n
", "4213727:sub_404bdf": "int sub_404bdf()\n
{\n
    void* v0;  // [bp-0xc]\n
\n
    v0 = 0;\n
}\n
", "4213898:sub_404c8a": "int sub_404c8a()\n
{\n
    cgc_list_movies();\n
}\n
", "4213914:sub_404c9a": "int sub_404c9a()\n
{\n
    cgc_rent_movie();\n
}\n
", "4213930:sub_404caa": "int sub_404caa()\n
{\n
    cgc_return_movie();\n
}\n
", "4213946:sub_404cba": "int sub_404cba()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = cgc_login();\n
}\n
", "4213965:sub_404ccd": "int sub_404ccd()\n
{\n
    cgc_quit();\n
}\n
", "4214011:sub_404cfb": null, "4214016:cgc_movie_g2s": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_movie_g2s()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = v3 - 1;\n
    if (v1 > 3)\n
    {\n
        v2 = v0 - 8833;\n
        return;\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[12] * 4 - 6852)) + (stack_base)[16];\n
}\n
", "4214170:sub_404d9a": null, "4214176:cgc_movie_r2s": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_movie_r2s()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = v3 - 1;\n
    if (v1 > 3)\n
    {\n
        v2 = v0 - 8870;\n
        return;\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[12] * 4 - 6836)) + (stack_base)[16];\n
}\n
", "4214330:sub_404e3a": null, "4214336:cgc_movie_add": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_movie_add(struct struct_0 **v5, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3[2];  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3[0] = cgc_malloc(8);\n
    if (!v3)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (*(v5))\n
    {\n
        v0 = *(a0);\n
        v2 = cgc_movie_find(*(v5));\n
        if (v2)\n
        {\n
            if (v3)\n
                cgc_free(v3);\n
            v4 = -1;\n
            return v4;\n
        }\n
        else\n
        {\n
            for (v2 = *(v5); v2->field_4; v2 = v2->field_4);\n
            v3[0] = a0;\n
            v3[1] = 0;\n
            *((v2 + 4)) = v3;\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        v3[0] = a0;\n
        v3[1] = 0;\n
        *(v5) = &v3[0];\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4214633:sub_404f69": null, "4214640:cgc_movie_find": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_3 *field_0;\n
    struct struct_2 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char *field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_movie_find(struct_0 *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_2 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3)\n
    {\n
        for (v1 = &v3->field_0; v1; v1 = *((v1 + 4)))\n
        {\n
            if (!cgc_strcmp(*(*(v1)), a0))\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4214774:sub_404ff6": null, "4214784:cgc_free_movie": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_movie(void* v1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v1)\n
        return v1;\n
    if (v1[0])\n
        cgc_free(v1[0]);\n
    if (!v1[1])\n
        return cgc_free(v1);\n
    cgc_free(v1[1]);\n
}\n
", "4214897:sub_405071": null, "4214912:cgc_movie_delete": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_movie_delete(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = *(v5);\n
    v1 = 1;\n
    if (v2 && a0 == 1)\n
    {\n
        *(v5) = *((v2 + 4));\n
        cgc_free(v2);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = *(v5);\n
    for (v2 = *((v3 + 4)); v2; v2 = *((v2 + 4)))\n
    {\n
        v1 += 1;\n
        if (a0 != v1)\n
        {\n
            v3 = v2;\n
        }\n
        else\n
        {\n
            *((v3 + 4)) = *((v2 + 4));\n
            cgc_free(v2);\n
            break;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4215156:sub_405174": null, "4215168:cgc_movie_update": "int cgc_movie_update(unsigned int v0)\n
{\n
    return 0;\n
}\n
", "4215178:sub_40518a": null, "4215184:cgc_movie_find_by_id": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_movie_find_by_id(struct_0 *v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (v3)\n
    {\n
        v1 = 0;\n
        for (v0 = v3; v0; v0 = *((v0 + 4)))\n
        {\n
            v1 += 1;\n
            if (a0 == v1)\n
            {\n
                v2 = v0;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4215296:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:memcpy": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_random": null, "5242900:cgc_allocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}