{"4198400:_init": "extern struct_0 *g_4045b8;\n
\n
int _init()\n
{\n
    if (g_4045b8)\n
    {\n
        g_4045b8();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4198480:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 13503;\n
    v6 = v5 + 12;\n
    v7 = v5 + 12;\n
    if (v7 == v6)\n
        return v5 + 12;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 13439;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 12;\n
    v9 = (v6 + 12 - (v6 + 12) >> 31) + (12 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4045b4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4045b4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_recv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199103:sub_4012bf": null, "4199104:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -7;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 10)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 10)\n
        {\n
            v4 = -77;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
}\n
", "4199367:sub_4013c7": null, "4199376:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4199464:sub_401428": null, "4199472:cgc_itoaB10": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoaB10(unsigned int v14)\n
{\n
    char v0;  // [bp-0x39]\n
    unsigned int v1;  // [bp-0x38]\n
    char *v2;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    char v8;  // [bp-0x1c]\n
    char v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // eax\n
\n
    v13 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = 16;\n
    v10 = cgc_allocate(v11, 0);\n
    if (v10)\n
        cgc__terminate();\n
    v7 = v14;\n
    if (!v14)\n
    {\n
        cgc_memcpy(*(&v9), v1 - 5564, 2);\n
        v12 = *(&v9);\n
        return v12;\n
    }\n
    v6 = 0;\n
    if (v14 < 0)\n
    {\n
        v6 = 1;\n
        v7 = -(v7);\n
    }\n
    v5 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v5 < v11)\n
            v0 = v7;\n
        if (!(v0 & 1))\n
            break;\n
        v4 = (v7 >> 31 CONCAT v7) /m 10 >> 32;\n
        if (v4 > 9)\n
            *((*(&v9) + v5)) = v4 + 87;\n
        else\n
            *((*(&v9) + v5)) = v4 + 48;\n
        v16 = v7;\n
        v7 = (v16 >> 31 CONCAT v16) /m 10;\n
        v5 += 1;\n
    }\n
    if (v6 == 1)\n
        *((*(&v9) + v5 + 1)) = 45;\n
    v10 = cgc_allocate(v11, 0);\n
    if (v10)\n
        cgc__terminate();\n
    v3 = cgc_strnlen(*(&v9));\n
    for (v2 = 0; v2 < v3; v2 += 1)\n
    {\n
        v2[*(&v8)] = *(-1 + *(&v9) + v3 - v2);\n
    }\n
    v10 = cgc_deallocate(*(&v9));\n
    if (v10)\n
        cgc__terminate();\n
    v12 = *(&v8);\n
    return v12;\n
}\n
", "4200022:sub_401656": null, "4200032:cgc_strnlen": "int cgc_strnlen(unsigned int v2, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a0)\n
        {\n
            v1 = a0;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4200121:sub_4016b9": null, "4200128:cgc_strcat": "int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    for (v1 = 0; v3[v1]; v1 += 1);\n
    v0 = 0;\n
    while (true)\n
    {\n
        tmp_19 = v0[a0];\n
        v3[v1] = v0[a0];\n
        if (!tmp_19)\n
            break;\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4200260:sub_401744": null, "4200272:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4200342:sub_401796": null, "4200352:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4200534:sub_401856": null, "4200544:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4200599:sub_401897": null, "4200608:cgc_nextRecord": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_nextRecord(unsigned short v4[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1 = cgc_recv(0, v4, 4);\n
    if (v1 < 0)\n
        cgc__terminate();\n
    if (!v4[0])\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v4[0] > 0 && v4[1] > 0 && v4[0] < 65535)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4200800:cgc_squareRoot": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_squareRoot(unsigned int v8)\n
{\n
    unsigned long v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v30;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v40;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v11 = v10 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = v11 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v12 = v11 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t5,0] = t6\n
    [D] PutI(136:I8x8)[t5,0] = 0x01\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v13 = v12 + 1;\n
    v6 = 0;\n
    [D] PutI(72:F64x8)[t21,0] = t24\n
    [D] PutI(136:I8x8)[t21,0] = 0x01\n
    v4 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
    v5 = ([D] GetI(136:I8x8)[t50,0] ? [D] GetI(72:F64x8)[t50,0] : nan);\n
    [D] PutI(136:I8x8)[t50,0] = 0x00\n
    v43 = v13 - 1 + 1;\n
    v3 = 0xbf800000;\n
    while (true)\n
    {\n
        v15 = v43 - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v16 = v15 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v16 = v15 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v17 = v16 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v18 = v17 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v18 = v17 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t2,1] = t3\n
        [D] PutI(136:I8x8)[t2,1] = 0x01\n
        [D] PutI(136:I8x8)[t2,0] = 0x00\n
        v19 = v18 + 1;\n
        v0 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
        [D] PutI(136:I8x8)[t26,0] = 0x00\n
        cgc_fabs();\n
        v21 = v19 + 1 - 1;\n
        [D] PutI(72:F64x8)[t15,0] = t18\n
        [D] PutI(136:I8x8)[t15,0] = 0x01\n
        [D] PutI(72:F64x8)[t24,0] = t25\n
        [D] PutI(136:I8x8)[t24,0] = 0x01\n
        [D] PutI(136:I8x8)[t24,0] = 0x00\n
        v22 = v21 - 0;\n
        [D] PutI(72:F64x8)[t38,0] = t41\n
        [D] PutI(136:I8x8)[t38,0] = 0x01\n
        [D] PutI(72:F64x8)[t51,0] = t55\n
        [D] PutI(136:I8x8)[t51,0] = 0x01\n
        [D] PutI(72:F64x8)[t51,1] = t48\n
        [D] PutI(136:I8x8)[t51,1] = 0x01\n
        [D] PutI(136:I8x8)[t71,0] = 0x00\n
        v23 = v22 + 1;\n
        [D] PutI(72:F64x8)[t85,0] = t86\n
        [D] PutI(136:I8x8)[t85,0] = 0x01\n
        [D] PutI(136:I8x8)[t85,0] = 0x00\n
        v24 = v23 + 1;\n
        if ((CmpF(([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan), ([D] GetI(136:I8x8)[t71,1] ? [D] GetI(72:F64x8)[t71,1] : nan)) & 1) == 1)\n
            break;\n
        v25 = v24 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v26 = v25 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v26 = v25 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v3 = [D] GetI(72:F64x8)[t7,0];\n
            [D] PutI(136:I8x8)[t7,0] = 0x00\n
            v27 = v26 + 1;\n
        }\n
        else\n
        {\n
            v3 = nan;\n
            [D] PutI(136:I8x8)[t7,0] = 0x00\n
            v27 = v26 + 1;\n
        }\n
        v28 = v27 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v29 = v28 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v29 = v28 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v30 = v29 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v31 = v30 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v31 = v30 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t8,1] = t9\n
        [D] PutI(136:I8x8)[t8,1] = 0x01\n
        [D] PutI(136:I8x8)[t8,0] = 0x00\n
        v32 = v31 - 0;\n
        [D] PutI(72:F64x8)[t30,0] = t33\n
        [D] PutI(136:I8x8)[t30,0] = 0x01\n
        [D] PutI(72:F64x8)[t41,1] = t42\n
        [D] PutI(136:I8x8)[t41,1] = 0x01\n
        [D] PutI(136:I8x8)[t41,0] = 0x00\n
        v4 = ([D] GetI(136:I8x8)[t67,0] ? [D] GetI(72:F64x8)[t67,0] : nan);\n
        [D] PutI(136:I8x8)[t67,0] = 0x00\n
        v34 = v32 + 1 - 0;\n
        [D] PutI(72:F64x8)[t78,0] = t81\n
        [D] PutI(136:I8x8)[t78,0] = 0x01\n
        [D] PutI(72:F64x8)[t89,0] = t90\n
        [D] PutI(136:I8x8)[t89,0] = 0x01\n
        v2 = ([D] GetI(136:I8x8)[t112,0] ? [D] GetI(72:F64x8)[t112,0] : nan);\n
        [D] PutI(136:I8x8)[t112,0] = 0x00\n
        v35 = v34 - 0;\n
        [D] PutI(72:F64x8)[t123,0] = t126\n
        [D] PutI(136:I8x8)[t123,0] = 0x01\n
        [D] PutI(72:F64x8)[t134,0] = t135\n
        [D] PutI(136:I8x8)[t134,0] = 0x01\n
        v36 = v35 - 1;\n
        [D] PutI(72:F64x8)[t153,0] = t156\n
        [D] PutI(136:I8x8)[t153,0] = 0x01\n
        [D] PutI(72:F64x8)[t167,0] = t171\n
        [D] PutI(136:I8x8)[t167,0] = 0x01\n
        [D] PutI(72:F64x8)[t167,1] = t164\n
        [D] PutI(136:I8x8)[t167,1] = 0x01\n
        [D] PutI(136:I8x8)[t187,0] = 0x00\n
        v37 = v36 + 1;\n
        [D] PutI(72:F64x8)[t201,0] = t202\n
        [D] PutI(136:I8x8)[t201,0] = 0x01\n
        [D] PutI(136:I8x8)[t201,0] = 0x00\n
        v38 = v37 + 1;\n
        if (((CmpF(([D] GetI(136:I8x8)[t187,0] ? [D] GetI(72:F64x8)[t187,0] : nan), ([D] GetI(136:I8x8)[t187,1] ? [D] GetI(72:F64x8)[t187,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t187,0] ? [D] GetI(72:F64x8)[t187,0] : nan), ([D] GetI(136:I8x8)[t187,1] ? [D] GetI(72:F64x8)[t187,1] : nan)) & 69) >> 6)) & 1) != 1)\n
        {\n
            v39 = v38 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v41 = v39 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v41 = v39 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v5 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v43 = v41 + 1;\n
            }\n
            else\n
            {\n
                v5 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v43 = v41 + 1;\n
            }\n
        }\n
        else\n
        {\n
            v40 = v38 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v42 = v40 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v42 = v40 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v6 = [D] GetI(72:F64x8)[t7,0];\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v43 = v42 + 1;\n
            }\n
            else\n
            {\n
                v6 = nan;\n
                [D] PutI(136:I8x8)[t7,0] = 0x00\n
                v43 = v42 + 1;\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v1;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v1;\n
}\n
", "4200992:cgc_addRecordToDataset": "int cgc_addRecordToDataset()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    char v8;  // [bp-0x4]\n
    unsigned int v9[5];  // [bp+0x4]\n
    char v10;  // [bp+0x8]\n
    char v11;  // [bp+0xa]\n
    unsigned int v12;  // ebx\n
    unsigned int v13[5];  // ecx\n
    unsigned int v14[5];  // eax\n
    unsigned int v15[5];  // eax\n
    unsigned int v16[5];  // eax\n
    unsigned int v18;  // ebp\n
\n
    v7 = v12;\n
    v13 = v9;\n
    v13[0] = v13[0] + 1;\n
    v1 = *(&v10);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v2 = *(&v11);\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t27,1] = t28\n
    [D] PutI(136:I8x8)[t27,1] = 0x01\n
    [D] PutI(136:I8x8)[t27,0] = 0x00\n
    v6 = ([D] GetI(136:I8x8)[t53,0] ? [D] GetI(72:F64x8)[t53,0] : nan);\n
    [D] PutI(136:I8x8)[t53,0] = 0x00\n
    [D] PutI(72:F64x8)[t67,0] = t70\n
    [D] PutI(136:I8x8)[t67,0] = 0x01\n
    v5 = ([D] GetI(136:I8x8)[t84,0] ? [D] GetI(72:F64x8)[t84,0] : nan);\n
    [D] PutI(136:I8x8)[t84,0] = 0x00\n
    [D] PutI(72:F64x8)[t95,0] = t98\n
    [D] PutI(136:I8x8)[t95,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,0] = t111\n
    [D] PutI(136:I8x8)[t108,0] = 0x01\n
    [D] PutI(72:F64x8)[t119,0] = t120\n
    [D] PutI(136:I8x8)[t119,0] = 0x01\n
    v14 = v9;\n
    v3 = v14[0];\n
    [D] PutI(72:F64x8)[t145,0] = t148\n
    [D] PutI(136:I8x8)[t145,0] = 0x01\n
    [D] PutI(72:F64x8)[t156,1] = t157\n
    [D] PutI(136:I8x8)[t156,1] = 0x01\n
    [D] PutI(136:I8x8)[t156,0] = 0x00\n
    [D] PutI(72:F64x8)[t176,1] = t177\n
    [D] PutI(136:I8x8)[t176,1] = 0x01\n
    [D] PutI(136:I8x8)[t176,0] = 0x00\n
    v14[1] = ([D] GetI(136:I8x8)[t202,0] ? [D] GetI(72:F64x8)[t202,0] : nan);\n
    [D] PutI(136:I8x8)[t202,0] = 0x00\n
    [D] PutI(72:F64x8)[t216,0] = t219\n
    [D] PutI(136:I8x8)[t216,0] = 0x01\n
    [D] PutI(72:F64x8)[t229,0] = t232\n
    [D] PutI(136:I8x8)[t229,0] = 0x01\n
    [D] PutI(72:F64x8)[t242,0] = t245\n
    [D] PutI(136:I8x8)[t242,0] = 0x01\n
    [D] PutI(72:F64x8)[t253,0] = t254\n
    [D] PutI(136:I8x8)[t253,0] = 0x01\n
    [D] PutI(72:F64x8)[t272,0] = t275\n
    [D] PutI(136:I8x8)[t272,0] = 0x01\n
    [D] PutI(72:F64x8)[t283,2] = t284\n
    [D] PutI(136:I8x8)[t283,2] = 0x01\n
    [D] PutI(136:I8x8)[t283,0] = 0x00\n
    [D] PutI(72:F64x8)[t303,1] = t304\n
    [D] PutI(136:I8x8)[t303,1] = 0x01\n
    [D] PutI(136:I8x8)[t303,0] = 0x00\n
    [D] PutI(72:F64x8)[t323,1] = t324\n
    [D] PutI(136:I8x8)[t323,1] = 0x01\n
    [D] PutI(136:I8x8)[t323,0] = 0x00\n
    v9[2] = ([D] GetI(136:I8x8)[t349,0] ? [D] GetI(72:F64x8)[t349,0] : nan);\n
    [D] PutI(136:I8x8)[t349,0] = 0x00\n
    v15 = v9;\n
    [D] PutI(72:F64x8)[t363,0] = t366\n
    [D] PutI(136:I8x8)[t363,0] = 0x01\n
    v4 = v15[0];\n
    [D] PutI(72:F64x8)[t380,0] = t383\n
    [D] PutI(136:I8x8)[t380,0] = 0x01\n
    [D] PutI(72:F64x8)[t391,1] = t392\n
    [D] PutI(136:I8x8)[t391,1] = 0x01\n
    [D] PutI(136:I8x8)[t391,0] = 0x00\n
    v15[3] = ([D] GetI(136:I8x8)[t417,0] ? [D] GetI(72:F64x8)[t417,0] : nan);\n
    [D] PutI(136:I8x8)[t417,0] = 0x00\n
    [D] PutI(72:F64x8)[t431,0] = t434\n
    [D] PutI(136:I8x8)[t431,0] = 0x01\n
    v0 = ([D] GetI(136:I8x8)[t447,0] ? [D] GetI(72:F64x8)[t447,0] : nan);\n
    [D] PutI(136:I8x8)[t447,0] = 0x00\n
    cgc_squareRoot(v0);\n
    v16 = v9;\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        v16[4] = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v16[4] = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    v18 = *(&v8);\n
    return;\n
}\n
", "4201158:sub_401ac6": null, "4201168:cgc_getNextFreeEntry": "typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getNextFreeEntry(struct_0 *v8)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    char *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14]\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v6 = 0; v6 < v8->field_6; v6 += 1)\n
    {\n
        v5 = &v8->field_8[6 * v6].field_0;\n
        if (!*(v5))\n
        {\n
            v7 = v5;\n
            return v7;\n
        }\n
    }\n
    v2 = &v8->field_8->field_0;\n
    v3 = v8->field_6;\n
    v8->field_6 = v3 * 64 + 1;\n
    v0 = &v8->field_8;\n
    v4 = cgc_allocate(v8->field_6 * 6, 0);\n
    if (v4)\n
        cgc__terminate();\n
    for (v6 = 0; v6 < v3; v6 += 1)\n
    {\n
        v8->field_8[6 * v6].field_0 = v2[6 * v6];\n
        *(&v8->field_8[4 + 6 * v6]) = *(&v2[4 + 6 * v6]);\n
        *(&v8->field_8[2 + 6 * v6]) = *(&v2[2 + 6 * v6]);\n
    }\n
    v4 = cgc_deallocate(v2);\n
    if (v4)\n
        cgc__terminate();\n
    v7 = &v8->field_8[6 * v3];\n
    return v7;\n
}\n
", "4201575:sub_401c67": null, "4201584:cgc_addStockToPortfolio": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned short field_4;\n
} struct_0;\n
\n
int cgc_addStockToPortfolio()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp+0x4]\n
    char v3;  // [bp+0xc]\n
    struct_0 *v4;  // eax\n
\n
    v0 = &v2;\n
    v4 = v0;\n
    v1 = cgc_getNextFreeEntry(*(&v3));\n
    v1->field_0 = v4->field_0;\n
    v1->field_4 = v4->field_4;\n
    v1->field_2 = v4->field_2;\n
    return;\n
}\n
", "4201666:sub_401cc2": null, "4201680:cgc_buyStock": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_buyStock(char v5, unsigned int a0, unsigned short *a1)\n
{\n
    int tmp_41;  // tmp #41\n
    unsigned short *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned short v3;  // [bp-0x12]\n
    unsigned short v4;  // [bp-0x10]\n
    unsigned short *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = *(a1);\n
    if (v6 >= a0)\n
    {\n
        v2 = v5;\n
        v4 = a0;\n
        v3 = a0;\n
        tmp_41 = *(&v2);\n
        v0 = a1;\n
        cgc_addStockToPortfolio(tmp_41, v4);\n
        v6 = a1;\n
        *(v6) = *(v6) - a0;\n
        return a1;\n
    }\n
    return *(a1);\n
}\n
", "4201798:sub_401d46": null, "4201808:cgc_findMostExpensiveStock": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned short field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_findMostExpensiveStock(char v5, struct_0 *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    struct_1 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v4 = 0;\n
    v2 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a0->field_6 > 0)\n
        {\n
            v0 = 0;\n
            if (*((a0->field_8 + v3 * 6 + 4)))\n
                v0 = v3 < a0->field_6;\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 = a0->field_8 + v3 * 6;\n
        if (v1->field_0 == v5 && v1->field_4 > v2)\n
        {\n
            v4 = v1;\n
            v2 = v1->field_4;\n
        }\n
        v3 += 1;\n
    }\n
    return v4;\n
}\n
", "4202023:sub_401e27": null, "4202032:cgc_sellStock": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned short field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sellStock(char v2, unsigned int a0, unsigned short a1[4])\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
    unsigned short v4[4];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a1[3];\n
    if (v3 <= 0)\n
        return a1[3];\n
    v3 = cgc_findMostExpensiveStock(v2, a1);\n
    v1 = v3;\n
    if (!v1)\n
        return v3;\n
    v4 = a1;\n
    v4[0] = v4[0] + a0;\n
    v1->field_0 = 0;\n
    v1->field_4 = 0;\n
    v3 = v1;\n
    v3->field_2 = 0;\n
}\n
", "4202165:sub_401eb5": null, "4202176:cgc_tradeStocks": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tradeStocks()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned short v2[2];  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp+0x4]\n
    char v7;  // [bp+0x8]\n
    char v8;  // [bp+0x1c]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &v7;\n
    *(&v2[0]) = &v6;\n
    v3 = v6;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v4 = *((&v6 + 2));\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t6,1] = t7\n
    [D] PutI(136:I8x8)[t6,1] = 0x01\n
    [D] PutI(136:I8x8)[t6,0] = 0x00\n
    v5 = ([D] GetI(136:I8x8)[t32,0] ? [D] GetI(72:F64x8)[t32,0] : nan);\n
    [D] PutI(136:I8x8)[t32,0] = 0x00\n
    [D] PutI(72:F64x8)[t43,0] = t46\n
    [D] PutI(136:I8x8)[t43,0] = 0x01\n
    [D] PutI(72:F64x8)[t56,0] = t59\n
    [D] PutI(136:I8x8)[t56,0] = 0x01\n
    [D] PutI(72:F64x8)[t69,0] = t72\n
    [D] PutI(136:I8x8)[t69,0] = 0x01\n
    [D] PutI(72:F64x8)[t80,1] = t81\n
    [D] PutI(136:I8x8)[t80,1] = 0x01\n
    [D] PutI(136:I8x8)[t80,0] = 0x00\n
    [D] PutI(72:F64x8)[t103,0] = t107\n
    [D] PutI(136:I8x8)[t103,0] = 0x01\n
    [D] PutI(72:F64x8)[t103,1] = t100\n
    [D] PutI(136:I8x8)[t103,1] = 0x01\n
    [D] PutI(136:I8x8)[t123,0] = 0x00\n
    [D] PutI(72:F64x8)[t137,0] = t138\n
    [D] PutI(136:I8x8)[t137,0] = 0x01\n
    [D] PutI(136:I8x8)[t137,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t123,0] ? [D] GetI(72:F64x8)[t123,0] : nan), ([D] GetI(136:I8x8)[t123,1] ? [D] GetI(72:F64x8)[t123,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t123,0] ? [D] GetI(72:F64x8)[t123,0] : nan), ([D] GetI(136:I8x8)[t123,1] ? [D] GetI(72:F64x8)[t123,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        cgc_sellStock(88, v2[0], *(&v8));\n
        cgc_buyStock(89, v2[1], *(&v8));\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t0,1] = t1\n
    [D] PutI(136:I8x8)[t0,1] = 0x01\n
    [D] PutI(136:I8x8)[t0,0] = 0x00\n
    [D] PutI(136:I8x8)[t25,0] = 0x00\n
    [D] PutI(72:F64x8)[t39,0] = t40\n
    [D] PutI(136:I8x8)[t39,0] = 0x01\n
    [D] PutI(136:I8x8)[t39,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        cgc_sellStock(89, v2[1], *(&v8));\n
        cgc_buyStock(88, v2[0], *(&v8));\n
        return;\n
    }\n
    return;\n
}\n
", "4202430:sub_401fbe": null, "4202432:cgc_sendGoalNotification": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendGoalNotification()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_transmit_all(1, v0 - 5544, cgc_strlen(\"You doubled your money!\\n
\"));\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4202531:sub_402023": null, "4202544:cgc_sellAllStock": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sellAllStock()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v3;  // [bp+0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v1 = 0; *((*((*(&v3) + 8)) + v1 * 6 + 4)); v1 += 1)\n
    {\n
        cgc_sellStock(*((*((*(&v3) + 8)) + v1 * 6)), *((*((*(&v3) + 8)) + v1 * 6 + 2)), *(&v3));\n
    }\n
    return;\n
}\n
", "4202676:sub_4020b4": null, "4202688:cgc_updateStockValues": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
int cgc_updateStockValues()\n
{\n
    unsigned short v0[2];  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp+0x4]\n
    char v4;  // [bp+0x8]\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    *(&v0[0]) = &v3;\n
    for (v2 = 0; *((*((*(&v4) + 8)) + v2 * 6 + 4)); v2 += 1)\n
    {\n
        v1 = *((*(&v4) + 8)) + v2 * 6;\n
        v5 = *(&v4);\n
        v5->field_2 = v5->field_2 - v1->field_2;\n
        if (v1->field_0 == 88)\n
            v1->field_2 = v0[0];\n
        if (v1->field_0 == 89)\n
            v1->field_2 = v0[1];\n
        v6 = *(&v4);\n
        v6->field_2 = v6->field_2 + v1->field_2;\n
    }\n
    return;\n
}\n
", "4202866:sub_402172": null, "4202880:cgc_initPortfolio": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initPortfolio(unsigned short v3[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = a0;\n
    v3[1] = v3[0];\n
    v3[2] = v3[1] * 2;\n
    v3[3] = 16;\n
    v5 = cgc_allocate(v3[3] * 6, 0, v3 + 1);\n
    v1 = v5;\n
    if (v1)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4203034:sub_40221a": null, "4203040:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v14, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned short v3[2];  // [bp-0x3c]\n
    char v4;  // [bp-0x3a]\n
    unsigned short v5[4];  // [bp-0x34], Other Possible Types: char\n
    char v6;  // [bp-0x32]\n
    char v7;  // [bp-0x30]\n
    void* v8;  // [bp-0x24]\n
    char v9;  // [bp-0x20]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x18]\n
    char v12;  // [bp-0x14]\n
    void* v13;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = 0;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v2 = cgc_nextRecord(v3);\n
        if (v2 == -1)\n
            return 0;\n
        if (!v2)\n
        {\n
            cgc_initPortfolio(v5, *(&v4));\n
        }\n
        else\n
        {\n
            if (v8 > 100)\n
            {\n
                cgc_updateStockValues(v3);\n
                if (*(&v6) >= *(&v7))\n
                {\n
                    cgc_sellAllStock(v3);\n
                    cgc_sendGoalNotification();\n
                }\n
                if (!*(&v5))\n
                {\n
                    if (*(&v6))\n
                        cgc_sellAllStock(v3);\n
                    else\n
                        return 0;\n
                }\n
                *(&v0) = v5;\n
                cgc_tradeStocks(v3, v8, *(&v9), *(&v10), *(&v11), *(&v12));\n
            }\n
            cgc_addRecordToDataset(&v8);\n
        }\n
    }\n
}\n
", "4203368:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_fabs": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}