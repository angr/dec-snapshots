{"4202496:_init": "extern struct_0 *g_40b118;\n
\n
int _init()\n
{\n
    if (g_40b118)\n
    {\n
        g_40b118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202678:sub_4020b6": null, "4202688:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202731:sub_4020eb": null, "4202732:sub_4020ec": "int sub_4020ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202736:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202740:sub_4020f4": null, "4202752:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 36895;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202803:sub_402133": "int sub_402133()\n
{\n
}\n
", "4202809:sub_402139": "int sub_402139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202816:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 36831;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202887:sub_402187": "int sub_402187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40b114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40b114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202971:sub_4021db": "int sub_4021db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202976:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 - 48 > 9)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203046:sub_402226": null, "4203056:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = -1;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v1[v5] != 45)\n
        v2 = 1;\n
    else\n
        v1 += 1;\n
    while (true)\n
    {\n
        if (!*((v5 + v1)))\n
        {\n
            v4 = v3 * v2;\n
            return v4;\n
        }\n
        else if (cgc_isdigit(*((v5 + v1))))\n
        {\n
            v3 = v3 * 10 + *((v5 + v1)) - 48;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4203288:sub_402318": null, "4203296:cgc_atox": "int cgc_atox(char v4[4])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x7]\n
    char v2;  // [bp-0x6]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
\n
    v0 = v5;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v4[2] > 47 && v4[2] < 58)\n
    {\n
        v3 = (v4[2] - 48) * 16;\n
        goto LABEL_402394;\n
    }\n
    if (v4[2] > 64 && v4[2] < 71)\n
        v3 = (v4[2] - 55) * 16;\n
LABEL_402394:\n
    if (v4[3] > 47 && v4[3] < 58)\n
    {\n
        v2 = v4[3] - 48;\n
        goto LABEL_4023f8;\n
    }\n
    if (v4[3] > 64 && v4[3] < 71)\n
        v2 = v4[3] - 55;\n
LABEL_4023f8:\n
    v1 = v3 + v2;\n
    return v1;\n
}\n
", "4203539:sub_402413": null, "4203552:cgc_bzero": "int cgc_bzero(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((v1 + v0)) ^ *((v1 + v0));\n
    }\n
    return v0;\n
}\n
", "4203633:sub_402471": null, "4203648:cgc_fill_buffer": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* g_40b160;\n
extern void* g_40b164;\n
extern unsigned int g_40b168;\n
extern unsigned int std_input;\n
\n
int cgc_fill_buffer()\n
{\n
    unsigned int *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    g_40b160 = 0;\n
    g_40b164 = 0;\n
    v0 = &g_40b164;\n
    if (cgc_receive(std_input, &g_40b168, 0x1000))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (v1->field_40)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -2;\n
        return v2;\n
    }\n
}\n
", "4203799:sub_402517": null, "4203808:cgc_get_char": "extern unsigned int _GLOBAL_OFFSET_TABLE_[17];\n
extern unsigned int g_40b164;\n
\n
int cgc_get_char(char *v3)\n
{\n
    unsigned int v0[17];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[17];  // ecx\n
    unsigned int v5[17];  // eax\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (g_40b164)\n
    {\n
        v4 = v0;\n
        if (!(v4[16] <= v4[15]))\n
            goto LABEL_40257f;\n
    }\n
    v1 = cgc_fill_buffer();\n
    if (v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
LABEL_40257f:\n
    v5 = v0;\n
    *(v3) = *(68 + &v5[0] + v5[15]);\n
    v5[15] = v5[15] + 1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4203955:sub_4025b3": null, "4203968:cgc_read_until_delim_or_n": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until_delim_or_n(unsigned int v6, char *a0, char a1, unsigned int a2, unsigned int *a3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x11]\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int *v7;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    *(a3) = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v5 = 3;\n
        return v5;\n
    }\n
    else if (a2)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 < a2)\n
            {\n
                v2 = cgc_get_char(&v3);\n
                if (v2)\n
                {\n
                    v5 = v2;\n
                    return v5;\n
                }\n
                if (a1 && v3 == a1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                a0[v1] = v3;\n
                v7 = a3;\n
                *(v7) = *(v7) + 1;\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v5 = 4;\n
        return v5;\n
    }\n
}\n
", "4204221:sub_4026bd": null, "4204224:cgc_read_n_bytes": "int cgc_read_n_bytes(unsigned int v1, char *a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v2;  // esi\n
\n
    v0 = v2;\n
    return cgc_read_until_delim_or_n(v1, a0, 0, a1, a2);\n
}\n
", "4204307:sub_402713": null, "4204320:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(v5, a0 + v2, a1 - v2))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 = v3 + v2;\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204480:cgc_getMSB": "int cgc_getMSB(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0x80000000;\n
    v0 = 31;\n
    while (true)\n
    {\n
        if (v0 < 0)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        else if (!(v3 & v1))\n
        {\n
            v1 >>= 1;\n
            v0 -= 1;\n
        }\n
        else\n
        {\n
            v2 = v0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4204577:sub_402821": null, "4204592:cgc_clearRun": "int cgc_clearRun(unsigned int v1[67])\n
{\n
    unsigned int v0[67];  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2[67];  // eax\n
\n
    v0[0] = v2;\n
    v1[64] = 0;\n
    for (v0 = 0; v0 < 64; v0 += 1)\n
    {\n
        v1[v0] = 0;\n
    }\n
    v1[65] = 0;\n
    v1[66] = 0;\n
    return v1;\n
}\n
", "4204687:sub_40288f": null, "4204688:cgc_initRun": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initRun(struct struct_0 **v6, unsigned int a0)\n
{\n
    struct struct_0 **v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[67];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8[67];  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v6;\n
    v3 = cgc_allocate(0x1000, 0);\n
    if (v3)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    v2[0] = *(v6);\n
    v0 = &v2[65];\n
    v3 = cgc_allocate(0x1000, 0);\n
    if (v3)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    v8 = v2;\n
    v8[0] = v8[0] | 1;\n
    v2[64] = a0;\n
    v2[66] = 0;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4204887:sub_402957": null, "4204896:cgc_getNextFreeChunk": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[252];\n
    unsigned int field_100;\n
    char padding_104[4];\n
    unsigned int field_108;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getNextFreeChunk(unsigned int v19, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    struct_0 *v1;  // [bp-0x54]\n
    struct_0 *v2;  // [bp-0x50]\n
    unsigned int v3;  // [bp-0x4c]\n
    struct_0 *v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    struct_0 *v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x3c]\n
    char v8;  // [bp-0x35]\n
    unsigned int v9;  // [bp-0x34]\n
    unsigned int v10;  // [bp-0x30]\n
    void* v11;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x24]\n
    struct_0 *v14;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0xc]\n
    unsigned int v20;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v27;  // eax\n
    struct_0 *v29;  // ecx\n
    unsigned int v30;  // eax\n
\n
    v9 = &_GLOBAL_OFFSET_TABLE_;\n
    v17 = 0;\n
    v16 = 0;\n
    v15 = 0;\n
    v16 = 1 << (v19 & 31);\n
    v15 = (0 CONCAT 0x1000) /m (1 << (v19 & 31));\n
    v14 = *((v9 + (v19 - 1) * 4 + 4164));\n
    while (true)\n
    {\n
        v8 = 0;\n
        if (v14)\n
        {\n
            v6 = v14;\n
            v20 = v15 - 1;\n
            v7 = (&v6->field_0)[(v20 >> 31 CONCAT v20) /m 32];\n
            v8 = (v7 & 1 << (((v15 - 1 >> 31 CONCAT v15 - 1) /m 32 >> 32) & 31));\n
        }\n
        if (!(v8 & 1))\n
            break;\n
        v13 = 0;\n
        for (v12 = 0; v12 < v15; v12 += 1)\n
        {\n
            v4 = v14;\n
            v22 = v12;\n
            v5 = (&v4->field_0)[(v22 >> 31 CONCAT v22) /m 32];\n
            if (!(v5 & 1 << (((v12 >> 31 CONCAT v12) /m 32 >> 32) & 31)))\n
            {\n
                v13 = 1;\n
                break;\n
            }\n
        }\n
        if (v13)\n
            break;\n
        v14 = v14->field_108;\n
    }\n
    if (!v14)\n
    {\n
        cgc_initRun(&v14, v16);\n
        v24 = v9;\n
        *((v14 + 264)) = *((v24 + (v19 - 1) * 4 + 4164));\n
        *((v24 + (v19 - 1) * 4 + 4164)) = v14;\n
        *(a0) = *((v14 + 260));\n
        v18 = 0;\n
        return v18;\n
    }\n
    v11 = 0;\n
    while (true)\n
    {\n
        if (v11 < v15)\n
        {\n
            v2 = v14;\n
            v25 = v11;\n
            v3 = (&v2->field_0)[(v25 >> 31 CONCAT v25) /m 32];\n
            if (!(v3 & 1 << (((v11 >> 31 CONCAT v11) /m 32 >> 32) & 31)))\n
            {\n
                v10 = *((v14 + 260));\n
                *(a0) = v10 + v16 * v11;\n
                v0 = 1 << (((v11 >> 31 CONCAT v11) /m 32 >> 32) & 31);\n
                v1 = v14;\n
                v27 = v11;\n
                v29 = (v27 >> 31 CONCAT v27) /m 32;\n
                v30 = v1;\n
                *((v30 + v29 * 4)) = v0 | *((v30 + v29 * 4));\n
                v18 = 0;\n
                return v18;\n
            }\n
            v11 += 1;\n
        }\n
        else\n
        {\n
            v18 = -42;\n
            return v18;\n
        }\n
    }\n
}\n
", "4205572:sub_402c04": null, "4205584:cgc_getRun": "typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
    struct struct_0 *field_108;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getRun(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v2 = 0; v2 < 11; v2 += 1)\n
    {\n
        for (v1 = *((v0 + v2 * 4 + 4164)); v1; v1 = v1->field_108)\n
        {\n
            if (v1->field_104 == v4)\n
            {\n
                v3 = v1;\n
                return v3;\n
            }\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4205736:sub_402ca8": null, "4205744:cgc_isClear": "int cgc_isClear(unsigned int *v2)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= 64)\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (!v2[v0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4205832:sub_402d08": null, "4205840:cgc_malloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v4 = cgc_getMSB(v8);\n
    if (v8 <= 1 << (v4 & 31) && !(!v4))\n
        goto LABEL_402d76;\n
    v4 += 1;\n
LABEL_402d76:\n
    if (v4 <= 11)\n
    {\n
        v3 = cgc_getNextFreeChunk(v4, &v5);\n
        if (v3)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v6 = v5;\n
        return v6;\n
    }\n
    else\n
    {\n
        for (v2 = *((v1 + 4208)); v2; v2 = *((v2 + 8)));\n
        v2 = cgc_malloc(12);\n
        v0 = v2 + 4;\n
        v3 = cgc_allocate(v8, 0);\n
        if (v3)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v10 = v1;\n
        *((v2 + 8)) = *((v10 + 4208));\n
        *((v10 + 4208)) = v2;\n
        *(v2) = v8;\n
        v6 = *((v2 + 4));\n
        return v6;\n
    }\n
}\n
", "4206175:sub_402e5f": null, "4206176:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char v3;  // [bp-0x2d]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v14 = v13 & 4095;\n
    if (!v14)\n
    {\n
        v14 = v4;\n
        if (*((v14 + 4208)))\n
        {\n
            v8 = *((v4 + 4208));\n
            while (true)\n
            {\n
                v14 = 0;\n
                v3 = 0;\n
                if (v8)\n
                {\n
                    v14 = *((v8 + 4));\n
                    v3 = v14 != v13;\n
                }\n
                *(&v14) = v3;\n
                if (!(v3 & 1))\n
                    break;\n
                v7 = v8;\n
                v8 = *((v8 + 8));\n
            }\n
        }\n
    }\n
    if (v8)\n
    {\n
        v0 = *(v8);\n
        v9 = cgc_deallocate(v13);\n
        if (v9)\n
            cgc__terminate();\n
        *((v8 + 4)) = 0;\n
        *(v8) = 0;\n
        if (!v7)\n
            *((v4 + 4208)) = *((v8 + 8));\n
        else\n
            *((v7 + 8)) = *((v8 + 8));\n
        v14 = cgc_free(v8);\n
        return v14;\n
    }\n
    else\n
    {\n
        for (v6 = 0; v6 < 11; v6 = v14)\n
        {\n
            v5 = 0;\n
            v14 = *((v4 + v6 * 4 + 4164));\n
            v12 = v14;\n
            for (v11 = 0; v12; v12 = v14)\n
            {\n
                v14 = *((v12 + 260));\n
                if (v14 != (v13 & -0x1000))\n
                {\n
                    v11 = v12;\n
                    v14 = *((v12 + 264));\n
                }\n
                else\n
                {\n
                    v5 = 1;\n
                    break;\n
                }\n
            }\n
            if (v5)\n
                break;\n
            v14 = v6 + 1;\n
        }\n
        if (!v12)\n
            return v14;\n
        v10 = (0 CONCAT v13 - *((v12 + 260))) /m *((v12 + 0x100));\n
        v1 = 1 << (((v10 >> 31 CONCAT v10) /m 32 >> 32) & 31) ^ -1;\n
        v2 = v12;\n
        v15 = v10;\n
        v17 = (v15 >> 31 CONCAT v15) /m 32;\n
        v18 = v2;\n
        *((v18 + v17 * 4)) = v1 & *((v18 + v17 * 4));\n
        v14 = cgc_isClear(v12);\n
        if (!v14)\n
            return v14;\n
        if (!v11)\n
            *((v4 + v6 * 4 + 4164)) = *((v12 + 264));\n
        else\n
            *((v11 + 264)) = *((v12 + 264));\n
        v0 = 0x1000;\n
        v9 = cgc_deallocate(*((v12 + 260)));\n
        if (v9)\n
            cgc__terminate();\n
        cgc_clearRun(v12);\n
        v0 = 0x1000;\n
        v14 = cgc_deallocate(v12);\n
        v9 = v14;\n
        if (v14)\n
            v14 = cgc__terminate();\n
        v12 = 0;\n
        return v14;\n
    }\n
}\n
", "4206970:sub_40317a": null, "4206976:cgc_exponential": null, "4207123:sub_403213": null, "4207136:cgc_ln": null, "4207452:sub_40335c": null, "4207456:cgc_pow": null, "4207706:sub_40345a": null, "4207712:cgc_cosine": null, "4208073:sub_4035c9": null, "4208080:cgc_sine": null, "4208436:sub_403734": null, "4208448:cgc_atan": null, "4208806:sub_4038a6": null, "4208816:cgc_atanTwo": null, "4209154:sub_403a02": null, "4209168:cgc_sqrt": null, "4209405:sub_403afd": null, "4209408:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    char *v3;  // eax\n
\n
    v1 = a0;\n
    v0 = v2;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 + 1;\n
        if (!v3)\n
            break;\n
        *((v0 + a1)) = v1[a1];\n
    }\n
    return v2;\n
}\n
", "4209486:sub_403b4e": null, "4209488:cgc_memset": "int cgc_memset(char *v2, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v2;\n
}\n
", "4209562:sub_403b9a": null, "4209568:cgc_b16_2w": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_b16_2w(char v4[5], char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xe]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&v1, 0);\n
    if (a0 > 255)\n
    {\n
        v4[0] = 124;\n
        v4[1] = 66;\n
        v4[2] = 65;\n
        v4[3] = 68;\n
        v4[4] = 124;\n
        v2 = 5;\n
        return v2;\n
    }\n
    v4[0] = 48;\n
    v4[1] = 120;\n
    if (!a0)\n
    {\n
        v4[2] = 48;\n
        v4[3] = 48;\n
        v2 = 4;\n
        return v2;\n
    }\n
    v6 = v0;\n
    v4[3] = *((v6->field_30 + (a0 & 15)));\n
    a0 >>= 4;\n
    v4[2] = *((v6->field_30 + (a0 & 15)));\n
    v2 = 4;\n
    return v2;\n
}\n
", "4209795:sub_403c83": null, "4209808:cgc_b10_int": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_b10_int(char *v9, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2d]\n
    struct_0 *v2;  // [bp-0x2c]\n
    struct_1 *v3;  // [bp-0x28]\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x19]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // eax\n
\n
    v8 = v10;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&v6, 13);\n
    if (!a0)\n
    {\n
        *(v9) = 48;\n
        v7 = 1;\n
        return v7;\n
    }\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a0 < 0)\n
    {\n
        *(v9) = 45;\n
        a0 *= -1;\n
        v4 += 1;\n
    }\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v5 < 11)\n
            v1 = a0;\n
        if (!(v1 & 1))\n
            break;\n
        v0 = v2->field_30;\n
        *(&v6 + v5) = *((v0 + ((a0 >> 31 CONCAT a0) /m 10 >> 32)));\n
        v11 = a0;\n
        a0 = (v11 >> 31 CONCAT v11) /m 10;\n
        v5 += 1;\n
    }\n
    v3 = v5;\n
    for (v5 = v3; v5 > 0; v5 -= 1)\n
    {\n
        v9[1 + v5 + v4] = *((&v6 + &v3[-1 * v5]));\n
    }\n
    v7 = &v3[v4];\n
    return v7;\n
}\n
", "4210127:sub_403dcf": null, "4210128:cgc_b10_uint": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_b10_uint(char *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    char v1;  // [bp-0x25]\n
    struct_0 *v2;  // [bp-0x24]\n
    struct_1 *v3;  // [bp-0x20]\n
    struct_1 *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    struct_1 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&v5, 12);\n
    if (!a0)\n
    {\n
        *(v8) = 48;\n
        v6 = 1;\n
        return v6;\n
    }\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4 < 10)\n
            v1 = a0;\n
        if (!(v1 & 1))\n
            break;\n
        v0 = v2->field_30;\n
        *(&v5 + v4) = *((v0 + ((0 CONCAT a0) /m 10 >> 32)));\n
        a0 = (0 CONCAT a0) /m 10;\n
        v4 += 1;\n
    }\n
    v3 = v4;\n
    for (v4 = v3; v4 > 0; v4 -= 1)\n
    {\n
        v8[1 + v4] = *((&v5 + &v3[-1 * v4]));\n
    }\n
    v6 = v3;\n
    return v6;\n
}\n
", "4210390:sub_403ed6": null, "4210400:cgc_db_4p": null, "4211045:sub_404165": null, "4211056:cgc_vsprintf": null, "4211646:sub_4043be": null, "4211648:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v1 = &v5;\n
    v0 = v1;\n
    v2 = cgc_vsprintf(v4, a0);\n
    return v2;\n
}\n
", "4211717:sub_404405": null, "4211728:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((v1 + v0)); v0 += 1);\n
    return v0;\n
}\n
", "4211780:sub_404444": null, "4211792:cgc_strncmp": "int cgc_strncmp(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((v2 + v0)) != *((a0 + v0)))\n
            break;\n
        if (!*((v2 + v0)))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
    if (*((v2 + v0)) < *((a0 + v0)))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4211976:sub_404508": null, "4211984:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
        {\n
            v1 = &v2[v0];\n
            return v1;\n
        }\n
        if (!v2[1 + v0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4212091:sub_40457b": null, "4212096:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(unsigned int v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2[v4])\n
            v0 = cgc_strchr(a0, v2[v4]);\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        v3 += 1;\n
    }\n
    return v3;\n
}\n
", "4212252:sub_40461c": null, "4212256:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(unsigned int v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!*((v4 + v1)))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        else if (!cgc_strchr(a0, *((v4 + v1))))\n
        {\n
            v1 += 1;\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
    }\n
}\n
", "4212408:sub_4046b8": null, "4212416:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[4212];\n
    struct struct_1 *field_1074;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v4)\n
    {\n
        v0->field_1074 = v4;\n
    }\n
    else if (!v0->field_1074)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = cgc_strspn(v0->field_1074, a0);\n
    v4 = &v0->field_1074[v2];\n
    v5 = v0;\n
    v1 = cgc_strcspn(v4, a0);\n
    v5->field_1074 = v4 + v1;\n
    if (v5->field_1074 == v4)\n
    {\n
        v0->field_1074 = 0;\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v0->field_1074->field_0)\n
    {\n
        v0->field_1074 = 0;\n
    }\n
    else\n
    {\n
        v6 = v0;\n
        v6->field_1074->field_0 = 0;\n
        v6->field_1074 = v6->field_1074 + 1;\n
    }\n
    v3 = v4;\n
    return v3;\n
}\n
", "4212705:sub_4047e1": null, "4212720:cgc_newMap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_newMap(unsigned int v16, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9[7];  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // esi\n
    unsigned int v19[7];  // eax\n
    unsigned int v20[7];  // eax\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // esi\n
    unsigned int v23;  // ebx\n
\n
    v15 = v17;\n
    v14 = v18;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = v16;\n
    v13 = a0;\n
    v10 = a1;\n
    v11 = a2;\n
    v8 = v12;\n
    v7 = v10;\n
    v6 = v13;\n
    v5 = v11;\n
    v9[0] = cgc_malloc(28);\n
    if (!v9)\n
        cgc__terminate();\n
    v19 = v9;\n
    v19[0] = v12;\n
    v19[1] = v13;\n
    v20 = v9;\n
    v20[2] = v10;\n
    v20[3] = v11;\n
    v4 = v7 - v8 + 1;\n
    v3 = v5 - v6 + 1;\n
    v21 = cgc_malloc(v3 * v4 * 4);\n
    v9[6] = v21;\n
    if (!v21)\n
        cgc__terminate();\n
    for (v2 = 0; v2 <= v4; v2 = v2 + 1)\n
    {\n
        for (v1 = 0; v1 <= v3; v1 += 1)\n
        {\n
            *((v9[6] + v4 * v1 * 4 + v2 * 4)) = -1;\n
        }\n
    }\n
    v9[4] = v4;\n
    v9[5] = v3;\n
    v22 = v14;\n
    v23 = v15;\n
    return v9;\n
}\n
", "4213061:sub_404945": null, "4213072:cgc_freeMap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_freeMap(struct struct_0 **v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int [7]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = *(v3);\n
    v1[4] = 0;\n
    v1[5] = 0;\n
    cgc_free(v1[6]);\n
    v1[6] = 0;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v5 = cgc_free(v1);\n
    v1 = 0;\n
    v6 = v2;\n
    return v5;\n
}\n
", "4213215:sub_4049df": null, "4213216:cgc_inBounds": "int cgc_inBounds(unsigned int v1[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= v1[0] && a0 <= v1[2] && a1 >= v1[1] && a1 <= v1[3])\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4213315:sub_404a43": null, "4213328:cgc_copyMap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_copyMap(unsigned int v5, unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = a0[0]; v3 <= a0[2]; v3 += 1)\n
    {\n
        for (v2 = a0[1]; v2 <= a0[3]; v2 += 1)\n
        {\n
            v4 = cgc_getCoordinate(a0, v3);\n
            v0 = v4;\n
            cgc_setCoordinate(&v5, v3, v2);\n
        }\n
    }\n
    return v3;\n
}\n
", "4213510:sub_404b06": null, "4213520:cgc_getCoordinate": "int cgc_getCoordinate(unsigned int v3[7], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    if (!cgc_inBounds(v3, a0, a1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = a0 - v3[0] + 1;\n
    v0 = a1 - v3[1] + 1;\n
    v2 = *((v3[6] + v3[4] * v0 * 4 + v1 * 4));\n
    return v2;\n
}\n
", "4213662:sub_404b9e": null, "4213664:cgc_setCoordinate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_setCoordinate(struct struct_0 **v5, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[7];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // eax\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (*(v5) && !(!cgc_inBounds(*(v5), a0, a1)))\n
        goto LABEL_404c12;\n
    cgc_addCoordinate(v5, a0);\n
LABEL_404c12:\n
    v1[0] = *(v5);\n
    v3 = a0 - v1[0] + 1;\n
    v2 = a1 - v1[1] + 1;\n
    v7 = v1[6] + v1[4] * v2 * 4;\n
    *((v7 + v3 * 4)) = a2;\n
    return v7;\n
}\n
", "4213852:sub_404c5c": null, "4213856:cgc_addCoordinate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addCoordinate(struct struct_0 **v7, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1[4];  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    struct struct_0 **v8;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = *(v7);\n
    if (!v1)\n
    {\n
        v5 = a0;\n
        v6 = a1;\n
        v3 = a0;\n
        v4 = a1;\n
        v8 = v7;\n
        *(v8) = cgc_newMap(v5, v6, v3, v4);\n
        return v7;\n
    }\n
    v8 = cgc_inBounds(v1, a0, a1);\n
    if (v8)\n
        return v8;\n
    if (a0 < v1[0])\n
    {\n
        v5 = a0;\n
        v3 = v1[2];\n
    }\n
    else if (a0 > v1[2])\n
    {\n
        v3 = a0;\n
        v5 = v1[0];\n
    }\n
    else\n
    {\n
        v5 = v1[0];\n
        v3 = v1[2];\n
    }\n
    if (a1 < v1[1])\n
    {\n
        v6 = a1;\n
        v4 = v1[3];\n
    }\n
    else if (a1 > v1[3])\n
    {\n
        v4 = a1;\n
        v6 = v1[1];\n
    }\n
    else\n
    {\n
        v6 = v1[1];\n
        v4 = v1[3];\n
    }\n
    v2 = cgc_newMap(v5, v6, v3, v4);\n
    cgc_copyMap(v2, *(v7));\n
    cgc_freeMap(v7);\n
    v8 = v7;\n
    *(v8) = v2;\n
    return v7;\n
}\n
", "4214292:sub_404e14": null, "4214304:cgc_getRandomNumber": "typedef struct struct_0 {\n
    char padding_0[4216];\n
    unsigned int field_1078;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *cgc_flag_idx;\n
\n
int cgc_getRandomNumber(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // edx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 0x4347c000;\n
    v2 = a0 - v5 + 1;\n
    v6 = cgc_flag_idx;\n
    cgc_flag_idx = cgc_flag_idx + 1;\n
    v3 = v1[v6];\n
    if (cgc_flag_idx == 200)\n
        v0->field_1078 = 0;\n
    v4 = (v3 >> 31 CONCAT v3) /m v2 >> 32;\n
    v4 += v5;\n
    return v4;\n
}\n
", "4214436:sub_404ea4": null, "4214448:cgc_initRandomBuffer": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int random_buffer;\n
\n
int cgc_initRandomBuffer()\n
{\n
    void* v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 0;\n
    v5 = cgc_random(&random_buffer, 0x400);\n
    if (v5)\n
    {\n
        v5 = cgc__terminate();\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4214532:sub_404f04": null, "4214544:cgc_initHarborChase": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initHarborChase()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xa]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v4 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = cgc_getRandomNumber(-9, 9);\n
    v1 = v3 + 9;\n
    if (v1 <= 18)\n
        goto *(((stack_base)[20] + (stack_base)[16] * 4 - 4192)) + (stack_base)[20];\n
    else\n
        cgc__terminate();\n
}\n
", "4215409:sub_405271": null, "4215424:cgc_initCarChase": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initCarChase()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xa]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v4 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v3 = cgc_getRandomNumber(-2, 7);\n
    v1 = v3 + 2;\n
    if (v1 <= 9)\n
        goto *(((stack_base)[20] + (stack_base)[16] * 4 - 4116)) + (stack_base)[20];\n
    else\n
        cgc__terminate();\n
}\n
", "4216024:sub_4054d8": null, "4216032:cgc_getsAway": "int cgc_getsAway(unsigned int v3, unsigned int a0, unsigned int a1[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = v3;\n
    v1 = a0;\n
    if (cgc_getCoordinate(a1, v0, v1) == -1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4216128:cgc_isCaught": "int cgc_isCaught(unsigned int v3, unsigned int a0, unsigned int a1[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = v3;\n
    v1 = a0;\n
    if (!cgc_getCoordinate(a1, v0, v1))\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4216224:cgc_moveCriminalInBoat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveCriminalInBoat(unsigned int v6[2], unsigned int a0[7])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v1 = cgc_getCoordinate(a0, v6[0], v6[1]);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0];\n
        v2 = v6[1];\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0] + 1, v6[1]);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0] + 1;\n
        v2 = v6[1];\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0], v6[1] + 1);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0];\n
        v2 = v6[1] + 1;\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0] - 1, v6[1]);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0] - 1;\n
        v2 = v6[1];\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0], v6[1] - 1);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0];\n
        v2 = v6[1] - 1;\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0] + 1, v6[1] + 1);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0] + 1;\n
        v2 = v6[1] + 1;\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0] - 1, v6[1] - 1);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0] - 1;\n
        v2 = v6[1] - 1;\n
    }\n
    v6[0] = v3;\n
    v6[1] = v2;\n
    return v6;\n
}\n
", "4216824:sub_4057f8": null, "4216832:cgc_moveCriminalInCar": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_moveCriminalInCar(unsigned int v6[2], unsigned int a0[7])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v1 = cgc_getCoordinate(a0, v6[0], v6[1]);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0];\n
        v2 = v6[1];\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0] + 1, v6[1]);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0] + 1;\n
        v2 = v6[1];\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0], v6[1] + 1);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0];\n
        v2 = v6[1] + 1;\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0] - 1, v6[1]);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0] - 1;\n
        v2 = v6[1];\n
    }\n
    v1 = cgc_getCoordinate(a0, v6[0], v6[1] - 1);\n
    if (v1 > v4)\n
    {\n
        v4 = v1;\n
        v3 = v6[0];\n
        v2 = v6[1] - 1;\n
    }\n
    v6[0] = v3;\n
    v6[1] = v2;\n
    return v6;\n
}\n
", "4217266:sub_4059b2": null, "4217280:cgc_moveLeftInBoat": "int cgc_moveLeftInBoat(unsigned int v2[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v1 = v2[1];\n
    v0 = v2[1] - v2[0];\n
    v2[0] = v1 - 2;\n
    v2[1] = v0 - 2;\n
    return v2;\n
}\n
", "4217340:sub_4059fc": null, "4217344:cgc_moveForwardInBoat": "int cgc_moveForwardInBoat(unsigned int v0[2])\n
{\n
    v0[0] = v0[0] - 2;\n
    v0[1] = v0[1] - 2;\n
    return v0;\n
}\n
", "4217380:sub_405a24": null, "4217392:cgc_moveRightInBoat": "int cgc_moveRightInBoat(unsigned int v2[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v1 = v2[0] - v2[1];\n
    v0 = v2[0];\n
    v2[0] = v1 - 2;\n
    v2[1] = v0 - 2;\n
    return v2;\n
}\n
", "4217451:sub_405a6b": null, "4217456:cgc_moveForwardInCar": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_moveForwardInCar(struct_0 *v0)\n
{\n
    v0->field_4 = v0->field_4 - 2;\n
    return v0;\n
}\n
", "4217479:sub_405a87": null, "4217488:cgc_moveRightInCar": "int cgc_moveRightInCar(unsigned int v2[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v1 = v2[1] * -1;\n
    v0 = v2[0] - 2;\n
    v2[0] = v1;\n
    v2[1] = v0;\n
    return v2;\n
}\n
", "4217540:sub_405ac4": null, "4217552:cgc_getMoveInBoat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getMoveInBoat(unsigned int v4[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_read_until_delim_or_n(0, &v2, 35, 2, &v1))\n
        cgc__terminate();\n
    if (v2 == 82)\n
    {\n
        v6 = cgc_moveRightInBoat(v4);\n
        return v6;\n
    }\n
    if (v2 == 70)\n
    {\n
        v6 = cgc_moveForwardInBoat(v4);\n
    }\n
    else\n
    {\n
        v6 = v2;\n
        if (v6 == 76)\n
            v6 = cgc_moveLeftInBoat(v4);\n
    }\n
    return v6;\n
}\n
", "4217752:sub_405b98": null, "4217760:cgc_getMoveInCar": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getMoveInCar(unsigned int v4[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_read_until_delim_or_n(0, &v2, 35, 2, &v1))\n
        cgc__terminate();\n
    if (v2 == 82)\n
    {\n
        v6 = cgc_moveRightInCar(v4);\n
        return v6;\n
    }\n
    v6 = v2;\n
    if (v6 != 70)\n
        return v6;\n
    v6 = cgc_moveForwardInCar(v4);\n
}\n
", "4217923:sub_405c43": null, "4217936:cgc_initHarborMap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initHarborMap(struct struct_0 **v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v2 = 0;\n
    cgc_setCoordinate(v4, -1, 0, v2);\n
    cgc_setCoordinate(v4, 0, 0, v2);\n
    cgc_setCoordinate(v4, 1, 0, v2);\n
    cgc_setCoordinate(v4, 0, -1, v2);\n
    cgc_setCoordinate(v4, 0, 1, v2);\n
    cgc_setCoordinate(v4, 1, 1, v2);\n
    cgc_setCoordinate(v4, -1, -1, v2);\n
    v2 = 1;\n
    cgc_setCoordinate(v4, -1, 1, v2);\n
    cgc_setCoordinate(v4, -1, 2, v2);\n
    cgc_setCoordinate(v4, 0, 2, v2);\n
    cgc_setCoordinate(v4, 0, 3, v2);\n
    cgc_setCoordinate(v4, 1, 2, v2);\n
    cgc_setCoordinate(v4, 1, 3, v2);\n
    cgc_setCoordinate(v4, 1, -1, v2);\n
    cgc_setCoordinate(v4, 2, -1, v2);\n
    cgc_setCoordinate(v4, 2, 0, v2);\n
    cgc_setCoordinate(v4, 2, 1, v2);\n
    cgc_setCoordinate(v4, 2, 2, v2);\n
    cgc_setCoordinate(v4, 2, 3, v2);\n
    cgc_setCoordinate(v4, 3, 0, v2);\n
    cgc_setCoordinate(v4, 3, 1, v2);\n
    cgc_setCoordinate(v4, 3, 2, v2);\n
    cgc_setCoordinate(v4, 3, 3, v2);\n
    v2 = 2;\n
    cgc_setCoordinate(v4, 2, 4, v2);\n
    cgc_setCoordinate(v4, 2, -2, v2);\n
    cgc_setCoordinate(v4, 3, 4, v2);\n
    cgc_setCoordinate(v4, 3, -1, v2);\n
    cgc_setCoordinate(v4, 4, 0, v2);\n
    cgc_setCoordinate(v4, 4, 1, v2);\n
    cgc_setCoordinate(v4, 4, 2, v2);\n
    cgc_setCoordinate(v4, 4, 3, v2);\n
    cgc_setCoordinate(v4, 4, 4, v2);\n
    v2 = 3;\n
    cgc_setCoordinate(v4, 4, 5, v2);\n
    cgc_setCoordinate(v4, 2, -3, v2);\n
    cgc_setCoordinate(v4, 3, -2, v2);\n
    cgc_setCoordinate(v4, 4, -1, v2);\n
    cgc_setCoordinate(v4, 5, 0, v2);\n
    cgc_setCoordinate(v4, 5, 1, v2);\n
    cgc_setCoordinate(v4, 5, 2, v2);\n
    cgc_setCoordinate(v4, 5, 3, v2);\n
    cgc_setCoordinate(v4, 5, 4, v2);\n
    cgc_setCoordinate(v4, 5, 5, v2);\n
    v2 = 4;\n
    cgc_setCoordinate(v4, 1, -0x4, v2);\n
    cgc_setCoordinate(v4, 2, -0x4, v2);\n
    cgc_setCoordinate(v4, 3, -3, v2);\n
    cgc_setCoordinate(v4, 4, -2, v2);\n
    cgc_setCoordinate(v4, 5, -1, v2);\n
    cgc_setCoordinate(v4, 6, 0, v2);\n
    cgc_setCoordinate(v4, 6, 1, v2);\n
    cgc_setCoordinate(v4, 6, 2, v2);\n
    cgc_setCoordinate(v4, 6, 3, v2);\n
    cgc_setCoordinate(v4, 6, 4, v2);\n
    cgc_setCoordinate(v4, 6, 5, v2);\n
    cgc_setCoordinate(v4, 6, 6, v2);\n
    cgc_setCoordinate(v4, 5, 6, v2);\n
    v2 = 5;\n
    cgc_setCoordinate(v4, 0, -5, v2);\n
    cgc_setCoordinate(v4, 1, -5, v2);\n
    cgc_setCoordinate(v4, 2, -5, v2);\n
    cgc_setCoordinate(v4, 3, -0x4, v2);\n
    cgc_setCoordinate(v4, 4, -3, v2);\n
    cgc_setCoordinate(v4, 5, -2, v2);\n
    cgc_setCoordinate(v4, 6, -1, v2);\n
    cgc_setCoordinate(v4, 7, 0, v2);\n
    cgc_setCoordinate(v4, 7, 1, v2);\n
    cgc_setCoordinate(v4, 7, 2, v2);\n
    cgc_setCoordinate(v4, 7, 3, v2);\n
    cgc_setCoordinate(v4, 7, 4, v2);\n
    cgc_setCoordinate(v4, 7, 5, v2);\n
    cgc_setCoordinate(v4, 7, 6, v2);\n
    cgc_setCoordinate(v4, 7, 7, v2);\n
    cgc_setCoordinate(v4, 7, 8, v2);\n
    cgc_setCoordinate(v4, 5, 7, v2);\n
    cgc_setCoordinate(v4, 6, 7, v2);\n
    v2 = 6;\n
    cgc_setCoordinate(v4, -2, -6, v2);\n
    cgc_setCoordinate(v4, -1, -6, v2);\n
    cgc_setCoordinate(v4, 0, -6, v2);\n
    cgc_setCoordinate(v4, 1, -6, v2);\n
    cgc_setCoordinate(v4, 2, -6, v2);\n
    cgc_setCoordinate(v4, 3, -5, v2);\n
    cgc_setCoordinate(v4, 4, -0x4, v2);\n
    cgc_setCoordinate(v4, 5, -3, v2);\n
    cgc_setCoordinate(v4, 6, -2, v2);\n
    cgc_setCoordinate(v4, 7, -1, v2);\n
    cgc_setCoordinate(v4, 8, 0, v2);\n
    cgc_setCoordinate(v4, 8, 1, v2);\n
    cgc_setCoordinate(v4, 8, 2, v2);\n
    cgc_setCoordinate(v4, 8, 3, v2);\n
    cgc_setCoordinate(v4, 8, 4, v2);\n
    cgc_setCoordinate(v4, 8, 5, v2);\n
    cgc_setCoordinate(v4, 8, 6, v2);\n
    cgc_setCoordinate(v4, 8, 7, v2);\n
    cgc_setCoordinate(v4, 8, 8, v2);\n
    cgc_setCoordinate(v4, 8, 9, v2);\n
    cgc_setCoordinate(v4, 9, 3, v2);\n
    v2 = 7;\n
    cgc_setCoordinate(v4, -3, -6, v2);\n
    cgc_setCoordinate(v4, -3, -7, v2);\n
    cgc_setCoordinate(v4, -2, -7, v2);\n
    cgc_setCoordinate(v4, -1, -7, v2);\n
    cgc_setCoordinate(v4, 0, -7, v2);\n
    cgc_setCoordinate(v4, 1, -7, v2);\n
    cgc_setCoordinate(v4, 2, -7, v2);\n
    cgc_setCoordinate(v4, 3, -6, v2);\n
    cgc_setCoordinate(v4, 4, -5, v2);\n
    cgc_setCoordinate(v4, 5, -0x4, v2);\n
    cgc_setCoordinate(v4, 6, -3, v2);\n
    cgc_setCoordinate(v4, 7, -2, v2);\n
    cgc_setCoordinate(v4, 9, 0, v2);\n
    cgc_setCoordinate(v4, 8, -1, v2);\n
    cgc_setCoordinate(v4, 10, 3, v2);\n
    cgc_setCoordinate(v4, 9, 2, v2);\n
    cgc_setCoordinate(v4, 6, 8, v2);\n
    cgc_setCoordinate(v4, 7, 9, v2);\n
    cgc_setCoordinate(v4, 9, 5, v2);\n
    cgc_setCoordinate(v4, 9, 6, v2);\n
    cgc_setCoordinate(v4, 9, 7, v2);\n
    cgc_setCoordinate(v4, 9, 8, v2);\n
    cgc_setCoordinate(v4, 9, 9, v2);\n
    v2 = 8;\n
    cgc_setCoordinate(v4, -0x4, -6, v2);\n
    cgc_setCoordinate(v4, -0x4, -7, v2);\n
    cgc_setCoordinate(v4, -0x4, -8, v2);\n
    cgc_setCoordinate(v4, -3, -8, v2);\n
    cgc_setCoordinate(v4, -2, -8, v2);\n
    cgc_setCoordinate(v4, -1, -8, v2);\n
    cgc_setCoordinate(v4, 0, -8, v2);\n
    cgc_setCoordinate(v4, 1, -8, v2);\n
    cgc_setCoordinate(v4, 2, -8, v2);\n
    cgc_setCoordinate(v4, 3, -7, v2);\n
    cgc_setCoordinate(v4, 4, -6, v2);\n
    cgc_setCoordinate(v4, 5, -5, v2);\n
    cgc_setCoordinate(v4, 6, -0x4, v2);\n
    cgc_setCoordinate(v4, 7, -3, v2);\n
    cgc_setCoordinate(v4, 8, -2, v2);\n
    cgc_setCoordinate(v4, 9, 1, v2);\n
    cgc_setCoordinate(v4, 9, -1, v2);\n
    cgc_setCoordinate(v4, 9, 4, v2);\n
    cgc_setCoordinate(v4, 10, -1, v2);\n
    cgc_setCoordinate(v4, 10, 0, v2);\n
    cgc_setCoordinate(v4, 10, 2, v2);\n
    cgc_setCoordinate(v4, 10, 5, v2);\n
    cgc_setCoordinate(v4, 10, 7, v2);\n
    cgc_setCoordinate(v4, 11, 5, v2);\n
    cgc_setCoordinate(v4, 3, -9, v2);\n
    v2 = 9;\n
    cgc_setCoordinate(v4, -5, -0x4, v2);\n
    cgc_setCoordinate(v4, -7, -5, v2);\n
    cgc_setCoordinate(v4, -5, -5, v2);\n
    cgc_setCoordinate(v4, -0x4, -5, v2);\n
    cgc_setCoordinate(v4, -5, -6, v2);\n
    cgc_setCoordinate(v4, -5, -7, v2);\n
    cgc_setCoordinate(v4, -5, -8, v2);\n
    cgc_setCoordinate(v4, -5, -9, v2);\n
    cgc_setCoordinate(v4, -0x4, -9, v2);\n
    cgc_setCoordinate(v4, -3, -9, v2);\n
    cgc_setCoordinate(v4, -2, -9, v2);\n
    cgc_setCoordinate(v4, -1, -9, v2);\n
    cgc_setCoordinate(v4, 0, -9, v2);\n
    cgc_setCoordinate(v4, 1, -9, v2);\n
    cgc_setCoordinate(v4, 2, -9, v2);\n
    cgc_setCoordinate(v4, 3, -8, v2);\n
    cgc_setCoordinate(v4, 4, -7, v2);\n
    cgc_setCoordinate(v4, 7, -0x4, v2);\n
    cgc_setCoordinate(v4, -1, -5, v2);\n
    cgc_setCoordinate(v4, 9, -2, v2);\n
    cgc_setCoordinate(v4, 9, -3, v2);\n
    cgc_setCoordinate(v4, 10, 1, v2);\n
    cgc_setCoordinate(v4, 10, 4, v2);\n
    cgc_setCoordinate(v4, 10, 6, v2);\n
    cgc_setCoordinate(v4, 10, 9, v2);\n
    cgc_setCoordinate(v4, -0x4, -2, v2);\n
    cgc_setCoordinate(v4, 4, -8, v2);\n
    cgc_setCoordinate(v4, 5, -7, v2);\n
    cgc_setCoordinate(v4, -0x4, -11, v2);\n
    cgc_setCoordinate(v4, 11, 1, v2);\n
    cgc_setCoordinate(v4, 11, 2, v2);\n
    cgc_setCoordinate(v4, 11, 4, v2);\n
    cgc_setCoordinate(v4, 11, 6, v2);\n
    cgc_setCoordinate(v4, 11, 7, v2);\n
    cgc_setCoordinate(v4, 12, 2, v2);\n
    cgc_setCoordinate(v4, 6, -6, v2);\n
    v2 = 10;\n
    cgc_setCoordinate(v4, -5, -3, v2);\n
    cgc_setCoordinate(v4, -3, -5, v2);\n
    cgc_setCoordinate(v4, -2, -5, v2);\n
    cgc_setCoordinate(v4, -7, -6, v2);\n
    cgc_setCoordinate(v4, -6, -6, v2);\n
    cgc_setCoordinate(v4, -6, -7, v2);\n
    cgc_setCoordinate(v4, -6, -8, v2);\n
    cgc_setCoordinate(v4, -6, -9, v2);\n
    cgc_setCoordinate(v4, -6, -10, v2);\n
    cgc_setCoordinate(v4, -5, -10, v2);\n
    cgc_setCoordinate(v4, -0x4, -10, v2);\n
    cgc_setCoordinate(v4, -3, -10, v2);\n
    cgc_setCoordinate(v4, -2, -10, v2);\n
    cgc_setCoordinate(v4, 0, -10, v2);\n
    cgc_setCoordinate(v4, 7, -5, v2);\n
    cgc_setCoordinate(v4, 5, -6, v2);\n
    cgc_setCoordinate(v4, 6, -5, v2);\n
    cgc_setCoordinate(v4, 8, -3, v2);\n
    cgc_setCoordinate(v4, -3, -12, v2);\n
    cgc_setCoordinate(v4, 4, -9, v2);\n
    cgc_setCoordinate(v4, -5, -12, v2);\n
    cgc_setCoordinate(v4, 12, 1, v2);\n
    v2 = 11;\n
    cgc_setCoordinate(v4, -0x4, -3, v2);\n
    cgc_setCoordinate(v4, -0x4, -0x4, v2);\n
    cgc_setCoordinate(v4, -3, -0x4, v2);\n
    cgc_setCoordinate(v4, -2, -0x4, v2);\n
    cgc_setCoordinate(v4, -1, -0x4, v2);\n
    cgc_setCoordinate(v4, 0, -0x4, v2);\n
    cgc_setCoordinate(v4, -8, -7, v2);\n
    cgc_setCoordinate(v4, -7, -7, v2);\n
    cgc_setCoordinate(v4, -7, -8, v2);\n
    cgc_setCoordinate(v4, -7, -9, v2);\n
    cgc_setCoordinate(v4, 7, -6, v2);\n
    cgc_setCoordinate(v4, -1, -10, v2);\n
    cgc_setCoordinate(v4, -2, -11, v2);\n
    cgc_setCoordinate(v4, -2, -12, v2);\n
    cgc_setCoordinate(v4, 8, -0x4, v2);\n
    cgc_setCoordinate(v4, -5, -11, v2);\n
    cgc_setCoordinate(v4, -6, -11, v2);\n
    cgc_setCoordinate(v4, -6, -12, v2);\n
    cgc_setCoordinate(v4, -7, -11, v2);\n
    cgc_setCoordinate(v4, 10, 10, v2);\n
    cgc_setCoordinate(v4, 3, -10, v2);\n
    v2 = 12;\n
    cgc_setCoordinate(v4, -3, -2, v2);\n
    cgc_setCoordinate(v4, -3, -3, v2);\n
    cgc_setCoordinate(v4, -2, -3, v2);\n
    cgc_setCoordinate(v4, -1, -3, v2);\n
    cgc_setCoordinate(v4, 0, -3, v2);\n
    cgc_setCoordinate(v4, -9, -8, v2);\n
    cgc_setCoordinate(v4, -8, -8, v2);\n
    cgc_setCoordinate(v4, -8, -9, v2);\n
    cgc_setCoordinate(v4, -8, -10, v2);\n
    cgc_setCoordinate(v4, 7, -7, v2);\n
    cgc_setCoordinate(v4, -1, -11, v2);\n
    cgc_setCoordinate(v4, -3, -11, v2);\n
    cgc_setCoordinate(v4, -0x4, -12, v2);\n
    cgc_setCoordinate(v4, 2, -10, v2);\n
    cgc_setCoordinate(v4, 9, 10, v2);\n
    v2 = 13;\n
    cgc_setCoordinate(v4, -2, -1, v2);\n
    cgc_setCoordinate(v4, -2, -2, v2);\n
    cgc_setCoordinate(v4, -1, -2, v2);\n
    cgc_setCoordinate(v4, 0, -2, v2);\n
    cgc_setCoordinate(v4, 1, -2, v2);\n
    cgc_setCoordinate(v4, 1, -3, v2);\n
    cgc_setCoordinate(v4, -9, -9, v2);\n
    cgc_setCoordinate(v4, 11, 0, v2);\n
    cgc_setCoordinate(v4, -7, -12, v2);\n
    cgc_setCoordinate(v4, 9, 11, v2);\n
    cgc_setCoordinate(v4, 8, 10, v2);\n
    v6 = v3;\n
    return cgc_setCoordinate(v4, 10, 11, v2);\n
}\n
", "4227297:sub_4080e1": null, "4227312:cgc_initCityMap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initCityMap(unsigned int *v9[7])\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v8 = 0;\n
    for (v6 = -1; v6 <= 1; v6 += 1)\n
    {\n
        for (v5 = -1; v5 <= 1; v5 += 1)\n
        {\n
            cgc_setCoordinate(v9, v6, v5, v8);\n
        }\n
    }\n
    v8 = 1;\n
    for (v4 = v8; v4 <= v8 + 2; v4 += 1)\n
    {\n
        for (v3 = -1; v3 <= 1; v3 += 1)\n
        {\n
            if (cgc_getCoordinate(*(v9), v4, v3) == -1)\n
                cgc_setCoordinate(v9, v4, v3, v8);\n
        }\n
    }\n
    for (v2 = -1; v2 <= 1; v2 += 1)\n
    {\n
        for (v1 = v8; v1 <= v8 + 2; v1 += 1)\n
        {\n
            if (cgc_getCoordinate(*(v9), v2, v1) == -1)\n
                cgc_setCoordinate(v9, v2, v1, v8);\n
        }\n
    }\n
    v8 = 2;\n
    cgc_setCoordinate(v9, 0, 4, v8);\n
    cgc_setCoordinate(v9, 2, 2, v8);\n
    cgc_setCoordinate(v9, 4, 0, v8);\n
    cgc_setCoordinate(v9, 2, -2, v8);\n
    v8 = 3;\n
    cgc_setCoordinate(v9, 0, 5, v8);\n
    cgc_setCoordinate(v9, 1, 4, v8);\n
    cgc_setCoordinate(v9, 2, 3, v8);\n
    cgc_setCoordinate(v9, 3, 2, v8);\n
    cgc_setCoordinate(v9, 5, 0, v8);\n
    cgc_setCoordinate(v9, 4, -1, v8);\n
    cgc_setCoordinate(v9, 3, -2, v8);\n
    cgc_setCoordinate(v9, 2, -3, v8);\n
    cgc_setCoordinate(v9, 1, -2, v8);\n
    v8 = 4;\n
    cgc_setCoordinate(v9, 1, 5, v8);\n
    cgc_setCoordinate(v9, 2, 4, v8);\n
    cgc_setCoordinate(v9, 5, -1, v8);\n
    cgc_setCoordinate(v9, 4, -2, v8);\n
    cgc_setCoordinate(v9, 1, -3, v8);\n
    cgc_setCoordinate(v9, 0, -2, v8);\n
    v8 = 5;\n
    cgc_setCoordinate(v9, 1, 6, v8);\n
    cgc_setCoordinate(v9, 4, 1, v8);\n
    cgc_setCoordinate(v9, 6, -1, v8);\n
    cgc_setCoordinate(v9, 1, -0x4, v8);\n
    v8 = 6;\n
    cgc_setCoordinate(v9, 3, 3, v8);\n
    cgc_setCoordinate(v9, 4, 2, v8);\n
    cgc_setCoordinate(v9, 3, -3, v8);\n
    cgc_setCoordinate(v9, 2, -0x4, v8);\n
    v8 = 7;\n
    cgc_setCoordinate(v9, 2, 5, v8);\n
    cgc_setCoordinate(v9, 3, 4, v8);\n
    cgc_setCoordinate(v9, 5, -2, v8);\n
    cgc_setCoordinate(v9, 4, -3, v8);\n
    cgc_setCoordinate(v9, 0, -3, v8);\n
    cgc_setCoordinate(v9, -1, -2, v8);\n
    v8 = 8;\n
    cgc_setCoordinate(v9, 1, 7, v8);\n
    cgc_setCoordinate(v9, 2, 6, v8);\n
    cgc_setCoordinate(v9, 5, 1, v8);\n
    cgc_setCoordinate(v9, 6, -2, v8);\n
    cgc_setCoordinate(v9, 7, -1, v8);\n
    cgc_setCoordinate(v9, 1, -5, v8);\n
    cgc_setCoordinate(v9, 0, -0x4, v8);\n
    v8 = 9;\n
    cgc_setCoordinate(v9, 4, 3, v8);\n
    cgc_setCoordinate(v9, 3, -0x4, v8);\n
    cgc_setCoordinate(v9, -2, -1, v8);\n
    v8 = 10;\n
    cgc_setCoordinate(v9, 3, 5, v8);\n
    cgc_setCoordinate(v9, 5, -3, v8);\n
    cgc_setCoordinate(v9, -1, -3, v8);\n
    v8 = 11;\n
    cgc_setCoordinate(v9, 2, 7, v8);\n
    cgc_setCoordinate(v9, 7, -2, v8);\n
    return cgc_setCoordinate(v9, 0, -5, v8);\n
}\n
", "4229671:sub_408a27": null, "4229680:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v24, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x100]\n
    struct_0 *v1;  // [bp-0xf4]\n
    struct_0 *v2;  // [bp-0xf0]\n
    struct_0 *v3;  // [bp-0xec]\n
    struct_0 *v4;  // [bp-0xe8]\n
    struct_0 *v5;  // [bp-0xe4]\n
    struct_0 *v6;  // [bp-0xe0]\n
    unsigned int v7;  // [bp-0xdc]\n
    void* v8;  // [bp-0xd8], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0xd4], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0xd0], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xcc]\n
    void* v12;  // [bp-0xc8], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0xc4], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0xc0], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0xbc]\n
    char v16;  // [bp-0xb4]\n
    char v17;  // [bp-0x50]\n
    void* v18;  // [bp-0x28]\n
    void* v19;  // [bp-0x24]\n
    void* v20;  // [bp-0x20]\n
    unsigned int v21[2];  // [bp-0x1c]\n
    char v22;  // [bp-0x18]\n
    void* v23;  // [bp-0x10]\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v23 = 0;\n
    v20 = 0;\n
    v19 = 0;\n
    v18 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v11 = 0x4347c000;\n
    for (v10 = 0; v10 < 10; v10 += 1)\n
    {\n
        v11 += 1;\n
        cgc_sprintf(&(&v17)[4 * v10], v7 - 4076);\n
    }\n
    cgc_initCityMap(&v20);\n
    for (v9 = 0; v9 < 100; v9 += 1)\n
    {\n
        cgc_initCarChase();\n
        cgc_bzero(&v16, 100);\n
        v0 = *(&v22);\n
        cgc_sprintf(&v16, v7 - 4073);\n
        v6 = &v16;\n
        if (cgc_transmit_all(1, v6, cgc_strlen(&v16)))\n
            cgc__terminate();\n
        do\n
        {\n
            cgc_getMoveInCar(v21);\n
            v14 += 1;\n
            if (cgc_isCaught(v21[0], *(&v22), v20))\n
            {\n
                cgc_bzero(&v16, 100);\n
                cgc_sprintf(&v16, v7 - 4051);\n
                v5 = &v16;\n
                if (cgc_transmit_all(1, v5, cgc_strlen(&v16)))\n
                    cgc__terminate();\n
                v14 = 0;\n
                break;\n
            }\n
            cgc_moveCriminalInCar(v21, v20);\n
            if (cgc_getsAway(v21[0], *(&v22), v20))\n
            {\n
                if (cgc_transmit_all(1, v7 - 4022, cgc_strlen(v7 - 4022)))\n
                    cgc__terminate();\n
                cgc_initCarChase();\n
                cgc_bzero(&v16, 100);\n
                v0 = *(&v22);\n
                cgc_sprintf(&v16, v7 - 4073);\n
                v4 = &v16;\n
                if (cgc_transmit_all(1, v4, cgc_strlen(&v16)))\n
                    cgc__terminate();\n
            }\n
        } while (true);\n
    }\n
    cgc_freeMap(&v20);\n
    cgc_initHarborMap(&v19);\n
    for (v8 = 0; v8 < 100; v8 += 1)\n
    {\n
        cgc_initHarborChase();\n
        cgc_bzero(&v16, 100);\n
        v0 = *(&v22);\n
        cgc_sprintf(&v16, v7 - 4073);\n
        v3 = &v16;\n
        if (cgc_transmit_all(1, v3, cgc_strlen(&v16)))\n
            cgc__terminate();\n
        do\n
        {\n
            cgc_getMoveInBoat(v21);\n
            v14 += 1;\n
            if (cgc_isCaught(v21[0], *(&v22), v19))\n
            {\n
                v13 += 1;\n
                cgc_bzero(&v16, 100);\n
                cgc_sprintf(&v16, v7 - 4051);\n
                v2 = &v16;\n
                if (cgc_transmit_all(1, v2, cgc_strlen(&v16)))\n
                    cgc__terminate();\n
                v14 = 0;\n
                break;\n
            }\n
            cgc_moveCriminalInBoat(v21, v19);\n
            if (cgc_getsAway(v21[0], *(&v22), v19))\n
            {\n
                v12 += 1;\n
                if (cgc_transmit_all(1, v7 - 4022, cgc_strlen(v7 - 4022)))\n
                    cgc__terminate();\n
                cgc_initHarborChase();\n
                cgc_bzero(&v16, 100);\n
                v0 = *(&v22);\n
                cgc_sprintf(&v16, v7 - 4073);\n
                v1 = &v16;\n
                if (cgc_transmit_all(1, v1, cgc_strlen(&v16)))\n
                    cgc__terminate();\n
            }\n
        } while (true);\n
    }\n
    cgc_freeMap(&v19);\n
    return v23;\n
}\n
", "4231676:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_deallocate": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}