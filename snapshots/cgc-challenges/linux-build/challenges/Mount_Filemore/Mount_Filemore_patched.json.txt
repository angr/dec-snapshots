{"4202496:_init": "extern struct_0 *g_40e140;\n
\n
int _init()\n
{\n
    if (g_40e140)\n
    {\n
        g_40e140();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4202608:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4202656:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4202672:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libstdc++.so::cgc_deallocate();\n
    return;\n
}\n
", "4202688:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4202704:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 49171;\n
    v6 = v5 + 801;\n
    v7 = v5 + 801;\n
    if (v7 == v6)\n
        return v5 + 801;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 49107;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 801;\n
    v9 = (v6 + 801 - (v6 + 801) >> 31) + (801 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40e134;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40e134)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_calloc": "extern unsigned int g_heap;\n
\n
int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v4;  // eax\n
\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, ecx<4>, Load(addr=stack_base+8, size=4, endness=Iend_LE), 0x0<32>))\n
        return 0;\n
    v4 = cgc_malloc_alloc(&g_heap);\n
    if (v4)\n
    {\n
        v0 = v1 * a0;\n
        cgc_memset(v4, 0);\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4203130:sub_40227a": null, "4203136:cgc_isascii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isascii(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 1;\n
}\n
", "4203165:sub_40229d": null, "4203168:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 2;\n
}\n
", "4203197:sub_4022bd": null, "4203200:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 16;\n
}\n
", "4203229:sub_4022dd": null, "4203232:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 14;\n
}\n
", "4203261:sub_4022fd": null, "4203264:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 12;\n
}\n
", "4203293:sub_40231d": null, "4203296:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 4;\n
}\n
", "4203325:sub_40233d": null, "4203328:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 8;\n
}\n
", "4203357:sub_40235d": null, "4203360:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 64;\n
}\n
", "4203389:sub_40237d": null, "4203392:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 32;\n
}\n
", "4203421:sub_40239d": null, "4203424:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[16704 + v0] & 4294967168;\n
}\n
", "4203453:sub_4023bd": null, "4203456:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(char v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16704 + v1] & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[16704 + (v1 ^ 32)] & 2) >> 1);\n
    return v1 - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[16704 + v1] & 2) >> 1);\n
}\n
", "4203515:sub_4023fb": null, "4203520:cgc_toupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_toupper(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16704 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203554:sub_402422": null, "4203568:cgc_digittoint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_digittoint(char v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = v1 ^ 32;\n
    if (!((&_GLOBAL_OFFSET_TABLE_)[16704 + v1] & 8))\n
        v2 = v1;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16704 + v2] & 2))\n
        return v2 - 48;\n
    v3 = v2 - 65;\n
    v4 = v2 - 55;\n
    if (v3 < 6)\n
        return v4;\n
    return 0;\n
}\n
", "4203630:sub_40246e": null, "4203632:cgc_tolower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tolower(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[16704 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4203666:sub_402492": null, "4203680:__cxa_pure_virtual": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxa_pure_virtual()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc__terminate();\n
    cgc_exit();\n
    return;\n
}\n
", "4203712:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v2;\n
    cgc__terminate();\n
    cgc_fflush();\n
    return;\n
}\n
", "4203744:cgc_fflush": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_fflush(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    struct_0 *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    char *v9;  // ecx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    char *v13;  // esi, Other Possible Types: unsigned int\n
    char *v14;  // eax\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // esi\n
    void* v18;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
\n
    v5 = v4;\n
    v6 = v4->field_8;\n
    if (v6 == -1)\n
        return 0;\n
    if (v5->field_4 != 1)\n
    {\n
        v8 = v5->field_c;\n
        v9 = v5->field_10;\n
        v16 = v8 - v6;\n
        if (v9 && v16)\n
        {\n
            v2 = v6;\n
            v10 = v8 + ~(v6);\n
            v1 = v16 & 3;\n
            v13 = 0;\n
            if (v10 >= 3)\n
            {\n
                v11 = v16 & -0x4;\n
                v12 = 27 + v2 + v4;\n
                v13 = 0;\n
                do\n
                {\n
                    *((v12 + v13 - 3)) = v9[*((v12 + v13 - 3))];\n
                    *((v12 + v13 - 2)) = v9[*((v12 + v13 - 2))];\n
                    *((v12 + v13 - 1)) = v9[*((v12 + v13 - 1))];\n
                    *((v12 + v13)) = v9[*((v12 + v13))];\n
                    v13 += 4;\n
                } while (v11 != v13);\n
            }\n
            v5 = v4;\n
            if (v1)\n
            {\n
                v14 = v13 + v2 + v5 + 24;\n
                v15 = 0;\n
                do\n
                {\n
                    v14[v15] = v9[v14[v15]];\n
                    v15 += 1;\n
                } while (v1 != v15);\n
            }\n
            v6 = *((v5 + 8));\n
            v16 = *((v5 + 12)) - v6;\n
        }\n
        v1 = *(v5);\n
        v17 = v6 + v5 + 24;\n
        v18 = 0;\n
        while (v16 > v18)\n
        {\n
            v0 = &v3;\n
            v19 = cgc_transmit(v1, v17 + v18, v16 - v18);\n
            v18 += *(&v3);\n
            if (v19)\n
            {\n
                v7 = -1;\n
                v5 = v4;\n
                goto LABEL_40261d;\n
            }\n
        }\n
        v5 = v4;\n
    }\n
    v7 = 0;\n
LABEL_40261d:\n
    *((v5 + 12)) = 0;\n
    *((v5 + 8)) = 0;\n
    return v7;\n
}\n
", "4204083:sub_402633": null, "4204096:cgc_fbuffered": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_fbuffered(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // esi\n
    char *v10;  // ecx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    char *v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    void* v19;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
\n
    v5 = a0;\n
    v6 = v4;\n
    v7 = v4->field_8;\n
    if (v7 == -1)\n
    {\n
        v21 = -(v5 < 1);\n
        *((v6 + 8)) = v21;\n
        *((v6 + 12)) = 0;\n
        return v21;\n
    }\n
    if (v6->field_4 == 1)\n
    {\n
        v8 = &v6->field_c;\n
    }\n
    else\n
    {\n
        v9 = v6->field_c;\n
        v10 = v6->field_10;\n
        v17 = v9 - v7;\n
        if (v10 && v17)\n
        {\n
            v1 = v7;\n
            v11 = v9 + ~(v7);\n
            v2 = v17 & 3;\n
            v14 = 0;\n
            if (v11 >= 3)\n
            {\n
                v12 = v17 & -0x4;\n
                v13 = v1 + v4 + 27;\n
                v14 = 0;\n
                do\n
                {\n
                    *((v13 + v14 - 3)) = v10[*((v13 + v14 - 3))];\n
                    *((v13 + v14 - 2)) = v10[*((v13 + v14 - 2))];\n
                    *((v13 + v14 - 1)) = v10[*((v13 + v14 - 1))];\n
                    *((v13 + v14)) = v10[*((v13 + v14))];\n
                    v14 += 4;\n
                } while (v12 != v14);\n
            }\n
            v6 = v4;\n
            if (v2)\n
            {\n
                v15 = 24 + v14 + v1 + v6;\n
                v16 = 0;\n
                do\n
                {\n
                    v15[v16] = v10[v15[v16]];\n
                    v16 += 1;\n
                } while (v2 != v16);\n
            }\n
            v7 = *((v6 + 8));\n
            v17 = *((v6 + 12)) - v7;\n
        }\n
        v1 = v6 + 12;\n
        v2 = *(v6);\n
        v18 = v7 + v6 + 24;\n
        v19 = 0;\n
        while (v17 > v19)\n
        {\n
            v0 = &v3;\n
            v20 = cgc_transmit(v2, v18 + v19, v17 - v19);\n
            v19 += *(&v3);\n
            if (v20)\n
                break;\n
        }\n
        v6 = v4;\n
        v5 = a0;\n
        v8 = v1;\n
    }\n
    *(v8) = 0;\n
}\n
", "4204448:cgc_fopen": "int cgc_fopen(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[6];  // eax, Other Possible Types: unsigned int\n
\n
    v0 = 1048;\n
    v2 = cgc_malloc();\n
    if (v2)\n
    {\n
        v2[0] = v1;\n
        v2[1] = 2 - (a0 < 1);\n
        v2[2] = 0;\n
        v2[3] = 0;\n
        v2[5] = 0;\n
        v2[4] = 0;\n
        return v2;\n
    }\n
    return 0;\n
}\n
", "4204541:sub_4027fd": null, "4204544:cgc_fread": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    struct struct_2 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v6, unsigned int a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    struct_1 *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edx\n
    struct_1 *v10;  // eax\n
    char *v11;  // eax\n
    unsigned int v12;  // ecx\n
    struct_1 *v13;  // ebp\n
    void* v15;  // edi, Other Possible Types: unsigned int\n
    char *v16;  // edx\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ecx\n
    void* v20;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v21;  // eax\n
    char *v23;  // eax\n
    unsigned int v24;  // edx\n
    unsigned int v26;  // edx\n
    char *v27;  // edi, Other Possible Types: unsigned int\n
    unsigned int v28;  // esi\n
    char *v29;  // edi\n
    unsigned int v30;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = a1;\n
    v8 = v7->field_8;\n
    if (v8 == v7->field_c)\n
    {\n
        v7->field_c = 0;\n
        v7->field_8 = 0;\n
        v0 = &v5;\n
        if (!cgc_receive(v7->field_0, v7 + 1, 0x400))\n
        {\n
            v9 = *(&v5);\n
            if (v9)\n
            {\n
                v10 = a1;\n
                v10->field_c = v9;\n
                v11 = v10->field_14;\n
                if (v11)\n
                {\n
                    v12 = v9 & 3;\n
                    v15 = 0;\n
                    v13 = a1;\n
                    if (v9 - 1 >= 3)\n
                    {\n
                        v15 = 0;\n
                        do\n
                        {\n
                            *(24 + &v13->field_0 + v15) = v11[*(24 + &v13->field_0 + v15)];\n
                            *(25 + &v13->field_0 + v15) = v11[*(25 + &v13->field_0 + v15)];\n
                            *(26 + &v13->field_0 + v15) = v11[*(26 + &v13->field_0 + v15)];\n
                            *(27 + &v13->field_0 + v15) = v11[*(27 + &v13->field_0 + v15)];\n
                            v15 += 4;\n
                        } while ((v9 & -0x4) != v15);\n
                    }\n
                    if (v12)\n
                    {\n
                        v16 = 24 + a1 + v15;\n
                        v17 = 0;\n
                        do\n
                        {\n
                            v16[v17] = v11[v16[v17]];\n
                            v17 += 1;\n
                        } while (v12 != v17);\n
                    }\n
                }\n
            }\n
        }\n
        v7 = a1;\n
        v8 = *((v7 + 8));\n
    }\n
    v18 = a0;\n
    v19 = v6;\n
    if (v8 != -1)\n
    {\n
        v20 = *((v7 + 12)) - v8;\n
        if (*((v7 + 12)) - v8 > v18)\n
            v20 = v18;\n
        v3 = v20;\n
        cgc_memcpy();\n
        v21 = *((v7 + 8)) + v20;\n
        *((v7 + 8)) = v21;\n
        if (v21 == *((v7 + 12)))\n
        {\n
            *((v7 + 12)) = 0;\n
            *((v7 + 8)) = 0;\n
        }\n
        v19 = v6;\n
        if (!(v20 < v18))\n
            goto LABEL_402a51;\n
    }\n
    else\n
    {\n
        v20 = 0;\n
        if (0 >= v18)\n
        {\n
LABEL_402a51:\n
            return v20;\n
        }\n
    }\n
    v4 = v19 + 3;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(*(v7), v6 + v20, v18 - v20))\n
            return -1;\n
        v2 = v3;\n
        if (!v2)\n
            return -1;\n
        v23 = *((v7 + 20));\n
        if (v23)\n
        {\n
            v24 = v2;\n
            v26 = v24 & 3;\n
            v27 = 0;\n
            if (v24 - 1 >= 3)\n
            {\n
                v28 = v4 + v20;\n
                v27 = 0;\n
                do\n
                {\n
                    *((v28 + v27 - 3)) = v23[*((v28 + v27 - 3))];\n
                    *((v28 + v27 - 2)) = v23[*((v28 + v27 - 2))];\n
                    *((v28 + v27 - 1)) = v23[*((v28 + v27 - 1))];\n
                    *((v28 + v27)) = v23[*((v28 + v27))];\n
                    v27 += 4;\n
                } while ((v2 & -0x4) != v27);\n
            }\n
            if (v26)\n
            {\n
                v29 = v27 + v20 + v6;\n
                v30 = 0;\n
                do\n
                {\n
                    v29[v30] = v23[v29[v30]];\n
                    v30 += 1;\n
                } while (v26 != v30);\n
            }\n
        }\n
        v20 += v2;\n
        v18 = a0;\n
        v7 = a1;\n
        if (v20 >= v18)\n
            return v20;\n
    }\n
}\n
", "4204895:sub_40295f": null, "4205147:sub_402a5b": null, "4205152:cgc_freaduntil": "int cgc_freaduntil(unsigned int v0, unsigned int a0, char a1, unsigned int a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // ebp\n
    char *v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v1 = a0;\n
    v2 = a1;\n
    v3 = 0;\n
    tmp_21 = v1;\n
    v5 = v1 - 1;\n
    if (tmp_21 != 1)\n
    {\n
        while (true)\n
        {\n
            v4 = cgc__getc();\n
            if (v4 == -1)\n
                return -1;\n
            if (v4 == v2)\n
                break;\n
            *((v0 + v3)) = v4;\n
            v3 += 1;\n
            goto LABEL_402ab8;\n
        }\n
    }\n
    tmp_1 = v5;\n
    v5 = v3;\n
    if (!(v3 == tmp_1))\n
        goto LABEL_402ad0;\n
LABEL_402ab8:\n
    while (true)\n
    {\n
        v6 = cgc__getc();\n
        if (v6 == -1)\n
            break;\n
        if (v6 == v2)\n
            goto LABEL_402ad0;\n
    }\n
LABEL_402ad0:\n
    *((v0 + v5)) = 0;\n
    return v5;\n
}\n
", "4205289:sub_402ae9": null, "4205296:cgc__getc": "int cgc__getc()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // ebp\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // eax\n
\n
    v7 = v6;\n
    v8 = *((v6 + 8));\n
    if (v8 == -1)\n
    {\n
        v0 = &v3;\n
        v16 = -1;\n
        if (cgc_receive(*(v6), &v1, 1))\n
            return -1;\n
        if (!*(&v3))\n
            return -1;\n
        v9 = *((v6 + 20));\n
        *(&v16) = v1;\n
        if (!v9)\n
            return v16;\n
        *(&v16) = *((v9 + v16));\n
    }\n
    else if (v8 != *((v6 + 12)))\n
    {\n
LABEL_402be9:\n
        *((v7 + 8)) = v8 + 1;\n
        v16 = *((v7 + v8 + 24));\n
        return v16;\n
    }\n
    else\n
    {\n
        *((v6 + 12)) = 0;\n
        *((v6 + 8)) = 0;\n
        v0 = &v4;\n
        if (cgc_receive(*(v6), v6 + 24, 0x400))\n
            return -1;\n
        v13 = *(&v4);\n
        if (*(&v4))\n
        {\n
            *((v6 + 12)) = v13;\n
            v10 = *((v6 + 20));\n
            if (v10)\n
            {\n
                v2 = v13;\n
                v11 = v13 & 3;\n
                v12 = 0;\n
                if (v13 - 1 >= 3)\n
                {\n
                    v12 = 0;\n
                    do\n
                    {\n
                        *((v7 + v12 + 24)) = *((v10 + *((v7 + v12 + 24))));\n
                        *((v7 + v12 + 25)) = *((v10 + *((v7 + v12 + 25))));\n
                        *((v7 + v12 + 26)) = *((v10 + *((v7 + v12 + 26))));\n
                        *((v7 + v12 + 27)) = *((v10 + *((v7 + v12 + 27))));\n
                        v12 += 4;\n
                    } while ((v2 & -0x4) != v12);\n
                }\n
                v13 = v2;\n
                if (v11)\n
                {\n
                    v14 = v12 + v7 + 24;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        *((v14 + v15)) = *((v10 + *((v14 + v15))));\n
                        v15 += 1;\n
                    } while (v11 != v15);\n
                }\n
            }\n
            if (v13 >= 0)\n
            {\n
                v8 = *((v7 + 8));\n
                goto LABEL_402be9;\n
            }\n
        }\n
    }\n
}\n
", "4205633:sub_402c41": null, "4205648:cgc_free": "extern unsigned int g_heap;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return malloc_free(&g_heap);\n
}\n
", "4205688:sub_402c78": null, "4205696:cgc_fwrite": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v9, unsigned int a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v3;  // [bp-0x418]\n
    char v4;  // [bp-0x414]\n
    char v5;  // [bp-0x410]\n
    unsigned int v6;  // [bp-0x40f]\n
    unsigned int v7;  // [bp-0x40e]\n
    unsigned int v8;  // [bp-0x40d]\n
    struct_1 *v10;  // esi\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // eax\n
    char *v13;  // edi\n
    unsigned int v14;  // eax\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    void* v16;  // edi, Other Possible Types: unsigned int\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // ecx\n
    char *v20;  // ecx\n
    unsigned int v21;  // edx\n
    void* v22;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    void* v24;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = a1;\n
    v11 = a0;\n
    if (v10->field_8 != -1)\n
    {\n
        if (v11 >= 0x400)\n
        {\n
            cgc_fflush(v10);\n
        }\n
        else\n
        {\n
            v12 = v10->field_c;\n
            v16 = 0;\n
            if (v12 + v11 >= 0x400)\n
            {\n
                v16 = 0x400 - v12;\n
                cgc_memcpy(&v10[1].padding_4[v12], v9);\n
                v10->field_c = v10->field_c + v16;\n
                cgc_fflush(v10);\n
            }\n
            if (v16 >= v11)\n
                return v16;\n
            cgc_memcpy(&v10[1].padding_4[v10->field_c], v9 + v16);\n
            v10->field_c = v10->field_c + a0 - v16;\n
            return a0;\n
        }\n
    }\n
    v2 = v10->field_0;\n
    v13 = v10->field_10;\n
    if (!v13)\n
    {\n
        v15 = 0;\n
        do\n
        {\n
            if (v15 >= v11)\n
                return a0;\n
            v0 = &v5;\n
            v14 = cgc_transmit(v2, v9 + v15, v11 - v15);\n
            v15 += *(&v5);\n
        } while (!v14);\n
    }\n
    else\n
    {\n
        if (!v11)\n
            return a0;\n
        v24 = 0;\n
LABEL_402cee:\n
        v17 = v11 - v24;\n
        if (v17 >= 0x400)\n
            v17 = 0x400;\n
        v3 = v24;\n
        cgc_memcpy();\n
        if (v17)\n
        {\n
            v18 = v17 & 3;\n
            v19 = 0;\n
            if (v17 - 1 >= 3)\n
            {\n
                v19 = 0;\n
                do\n
                {\n
                    (&v5)[v19] = v13[(&v5)[v19]];\n
                    *(&v6 + v19) = v13[*(&v6 + v19)];\n
                    *(&v7 + v19) = v13[*(&v7 + v19)];\n
                    *(&v8 + v19) = v13[*(&v8 + v19)];\n
                    v19 += 4;\n
                } while ((v17 & 2044) != v19);\n
            }\n
            if (v18)\n
            {\n
                v20 = &(&v5)[v19];\n
                v21 = 0;\n
                do\n
                {\n
                    v20[v21] = v13[v20[v21]];\n
                    v21 += 1;\n
                } while (v18 != v21);\n
            }\n
        }\n
        v22 = 0;\n
        do\n
        {\n
            if (v17 <= v22)\n
            {\n
                v24 = v3 + v17;\n
                v11 = a0;\n
                if (v24 >= a0)\n
                    return a0;\n
                goto LABEL_402cee;\n
            }\n
            v0 = &v4;\n
            v23 = cgc_transmit(v2, &(&v5)[v22], v17 - v22);\n
            v22 += *(&v4);\n
        } while (!v23);\n
    }\n
    return -1;\n
}\n
", "4206286:sub_402ece": null, "4206288:cgc_fxlat": "int cgc_fxlat(unsigned int v1[6], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v2;  // ebp\n
    unsigned int v3[6];  // edi\n
    char v4[256];  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // esi\n
    unsigned int v7;  // eax\n
    char *v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    char v15;  // al\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v7 = v3[4];\n
    if (!a0)\n
    {\n
        v4 = cgc_free(v7);\n
        v3[4] = 0;\n
        v3[5] = 0;\n
        return v4;\n
    }\n
    v0 = 0x100;\n
    v5 = cgc_realloc(v7);\n
    v3[4] = v5;\n
    v0 = 0x100;\n
    v3[5] = cgc_realloc(v3[5]);\n
    *(&v7) = *(v2);\n
    if (!*(v2))\n
    {\n
        v9 = 826981510;\n
    }\n
    else\n
    {\n
        v8 = v2 + 1;\n
        v9 = 826981510;\n
        do\n
        {\n
            v9 = __ROL__(v9 + v9 * 36 ^ v7, 13);\n
            v7 = *(v8);\n
            v8 += 1;\n
        } while (v7);\n
    }\n
    v10 = 0;\n
    do\n
    {\n
        *((v5 + v10)) = v10;\n
        *((v5 + v10 + 1)) = v10 + 1;\n
        *((v5 + v10 + 2)) = v10 + 2;\n
        *((v5 + v10 + 3)) = v10 + 3;\n
        *((v5 + v10 + 4)) = v10 + 4;\n
        *((v5 + v10 + 5)) = v10 + 5;\n
        *((v5 + v10 + 6)) = v10 + 6;\n
        *((v5 + v10 + 7)) = v10 + 7;\n
        v10 += 8;\n
    } while (v10 != 0x100);\n
    v11 = 255;\n
    while (true)\n
    {\n
        v12 = v9;\n
        v13 = v9 * 3;\n
        v14 = (0 CONCAT v12) /m v11 >> 32;\n
        v9 = v13 / 0x200000 ^ __ROL__(v13, 13);\n
        v15 = *((v5 + v11));\n
        *((v5 + v11)) = *((v5 + v14));\n
        *((v5 + v14)) = v15;\n
        v11 -= 1;\n
    }\n
}\n
", "4206656:cgc_malloc": "extern unsigned int g_heap;\n
\n
int cgc_malloc(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc_malloc_alloc(&g_heap);\n
}\n
", "4206696:sub_403068": null, "4206704:cgc_malloc_alloc": "typedef struct struct_4 {\n
    unsigned int field_0;\n
    struct struct_4 *field_4;\n
    struct struct_3 *field_8;\n
    struct struct_2 *field_c;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[516];\n
    unsigned int field_208;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_2 *field_c;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_3;\n
\n
typedef struct struct_6 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_2 *field_c;\n
} struct_6;\n
\n
int cgc_malloc_alloc(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    int tmp_6;  // tmp #6\n
    struct_5 *v1;  // [bp-0x20]\n
    struct_4 *v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    struct_6 *v5;  // [bp-0x10]\n
    struct_6 *v6;  // [bp-0xc]\n
    struct_6 *v7;  // [bp-0x8]\n
    struct_4 *v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    void* v11;  // edi, Other Possible Types: unsigned int\n
    unsigned int v12;  // ebp\n
    struct_4 *v13;  // esi\n
    struct_4 *v14;  // edx\n
    unsigned int v15;  // ebp\n
    struct_5 *v16;  // eax, Other Possible Types: unsigned int, void*, struct_0 *\n
    unsigned int v17[2];  // edi\n
    struct_1 *v18;  // esi, Other Possible Types: unsigned int\n
    unsigned int v19;  // ebp\n
    struct_5 *v20;  // esi\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // ebp\n
    struct_1 *v23;  // edx\n
    unsigned int v24;  // ecx\n
    struct_5 *v25;  // esi\n
    unsigned int v26;  // ecx\n
    struct_2 *v27;  // ecx\n
    struct_4 *v28;  // ecx\n
    struct_3 *v30;  // edx\n
    struct_6 *v31;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v32;  // ebp\n
    struct_2 *v33;  // edi\n
    unsigned int v34;  // ecx\n
    unsigned int v37;  // ebp\n
    unsigned int v38;  // edx\n
    unsigned int v39;  // esi\n
    struct_1 *v40;  // edx, Other Possible Types: unsigned int\n
    struct_1 *v41;  // esi, Other Possible Types: unsigned int\n
    unsigned int v42;  // edx\n
    unsigned int v43;  // edi\n
    struct_2 *v44;  // edx\n
    unsigned int v45;  // eax\n
\n
    v11 = 0;\n
    if (a0 < 0)\n
    {\n
LABEL_403374:\n
        return v11;\n
    }\n
    v12 = a0 + 3 & -0x4;\n
    if (!(a0 + 3 & -0x4))\n
    {\n
        v45 = cgc_tiny_alloc();\n
        return v45;\n
    }\n
    if (v12 <= 15)\n
    {\n
        v45 = cgc_tiny_alloc();\n
        return v45;\n
    }\n
    if (v12 > 131071)\n
    {\n
        v15 = v12 + 4103 & -0x1000;\n
        v0 = &v4;\n
        v11 = 0;\n
        if (!cgc_allocate(v15, 0))\n
        {\n
            v17 = *(&v4);\n
            v17[0] = v10;\n
            v17[1] = v15;\n
            v11 = v17 + 1;\n
            goto LABEL_403374;\n
        }\n
    }\n
    v13 = v12 + 23;\n
    v14 = v13 & -0x10;\n
    v2 = v14;\n
    if (!(v13 & -0x10))\n
    {\n
        v18 = -1;\n
    }\n
    else if (v14 < 513)\n
    {\n
        v18 = (v13 >> 4) + 2;\n
        v16 = 0;\n
        if (v12 > 2040)\n
        {\n
            if (!(v18 == 131))\n
                goto LABEL_4031e9;\n
            goto LABEL_403107;\n
        }\n
    }\n
    else if (v14 <= 0x1200)\n
    {\n
        v18 = (v14 + 32 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v18 = 130;\n
        if (v14 <= 0x20000)\n
            v18 = (v14 + 288 >> 11) + 66;\n
    }\n
    do\n
    {\n
        v16 = *((v10 + v18 * 4));\n
        if (v16)\n
        {\n
            while (*((v16 + 4)) < v14)\n
            {\n
                v16 = *((v16 + 12));\n
                if (!v16)\n
                    goto LABEL_4032e1;\n
            }\n
        }\n
LABEL_4032e1:\n
        v18 += 1;\n
    } while (v18 != 131);\n
LABEL_403107:\n
    v0 = &v3;\n
    if (!(!cgc_allocate(0x200000, 0)))\n
        goto LABEL_403374;\n
    v19 = *(&v3);\n
    v1 = *(&v3) + 1048575;\n
    v20 = v1 & -0x100000;\n
    if (v20 > *(&v3))\n
        cgc_deallocate(v19);\n
    v21 = v20 + 0x10000;\n
    v22 = v19 + 0x200000;\n
    tmp_6 = v22;\n
    v12 = v22 - v21;\n
    if (tmp_6 > v21)\n
        cgc_deallocate(v21);\n
    v23 = v10;\n
    *(524 + &v23->field_0 + (v1 >> 20)) = 2;\n
    if (!v20)\n
        goto LABEL_403374;\n
    v16 = v20 | 16;\n
    v16->field_0 = 0;\n
    v24 = v20 - v16 + 1048560;\n
    v16->field_4 = v24;\n
    v25 = v20 | 1048560;\n
    v25->field_0 = v24;\n
    v25->field_4 = 0;\n
    v26 = v16->field_4;\n
    if (!(!(v26 & 1)))\n
        goto LABEL_40339e;\n
    v16->field_4 = v26 | 1;\n
    v16->field_8 = 0;\n
    v16->field_c = v23->field_208;\n
    v23->field_208 = v16;\n
    v27 = v16->field_c;\n
    if (v27)\n
    {\n
        v27->field_8 = v16;\n
        v16 = v23->field_208;\n
    }\n
    v18 = 130;\n
LABEL_4031e9:\n
    v28 = *((v16 + 4));\n
    if (!(v28 & 1))\n
    {\n
        v31 = \"BAD SMALL UNLINK: block is not free hdr=%08X\\n
\";\n
        goto LABEL_403387;\n
    }\n
    else\n
    {\n
        *((v16 + 4)) = v12;\n
        v30 = *((v16 + 8));\n
        if (v30)\n
            v30->field_c = *((v16 + 12));\n
        v12 = v28 & -2;\n
        v33 = *((v16 + 12));\n
        if (v33)\n
            v33->field_8 = v30;\n
        v34 = v10;\n
        if (*((v34 + (v18 << 2))) == v16)\n
            *((v34 + v18 * 4)) = v33;\n
        *((v16 + 8)) = 0;\n
        *((v16 + 12)) = 0;\n
        v37 = v2;\n
        v38 = v32 - v2;\n
        if (v38 < 33)\n
        {\n
LABEL_40336f:\n
            v11 = v16 + 8;\n
            goto LABEL_403374;\n
        }\n
        else\n
        {\n
            v39 = v32;\n
            v31 = v16 + v37;\n
            *((v16 + 4)) = v37;\n
            *((v37 + v16)) = v37;\n
            *((v37 + v16 + 4)) = v38;\n
            *((v39 + v16)) = v38;\n
            if (v38 <= 0x200)\n
            {\n
                v40 = (v38 >> 4) + 2;\n
            }\n
            else if (v38 <= 0x1200)\n
            {\n
                v40 = (v38 - 0x200 >> 7) + 34;\n
            }\n
            else\n
            {\n
                v41 = 130;\n
                if (!(v38 <= 0x20000))\n
                    goto LABEL_403343;\n
                v40 = (v38 - 0x1200 >> 11) + 66;\n
            }\n
            v41 = v40;\n
LABEL_403343:\n
            v42 = *((v31 + 4));\n
            if (!(v42 & 1))\n
            {\n
                *((v31 + 4)) = v42 | 1;\n
                *((v31 + 8)) = 0;\n
                v43 = v10;\n
                *((v31 + 12)) = *((v43 + v41 * 4));\n
                *((v43 + v41 * 4)) = v31;\n
                v44 = *((v31 + 12));\n
                if (v44)\n
                {\n
                    v44->field_8 = v31;\n
                    goto LABEL_40336f;\n
                }\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
LABEL_40339e:\n
        v31 = \"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
LABEL_403387:\n
        v8 = v16;\n
        v7 = v31;\n
        cgc_heap_error(*(&v9));\n
        v6 = v31;\n
        v5 = &\"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
        v16 = cgc_heap_error(*(&v9));\n
    }\n
}\n
", "4207529:sub_4033a9": null, "4207536:cgc_tiny_alloc": "int cgc_tiny_alloc()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned short *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned short *v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edi\n
    struct struct_0 *v9[1160];  // ecx\n
    struct struct_0 *v10[1160];  // esi\n
    unsigned int v11;  // ebp\n
    unsigned short *v12;  // eax, Other Possible Types: unsigned int\n
    unsigned short v13[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edi\n
\n
    v8 = v7;\n
    v10 = v9;\n
    if (v7 <= 15)\n
    {\n
        v11 = v7 / 4 - 1;\n
    }\n
    else if (v7 <= 0x200)\n
    {\n
        v11 = (v7 >> 4) + 2;\n
    }\n
    else if (v7 <= 0x1200)\n
    {\n
        v11 = (v7 - 0x200 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v11 = 130;\n
        if (v7 <= 0x20000)\n
            v11 = (v7 - 0x1200 >> 11) + 66;\n
    }\n
    v12 = v9[v11];\n
    if (v12)\n
    {\n
        v9[v11] = *(&v12);\n
        return v9[v11];\n
    }\n
    v13 = v9[1155 + v11];\n
    if (v13)\n
    {\n
        v14 = v13[0];\n
        v15 = v13[1];\n
    }\n
    else\n
    {\n
        v16 = v10[1158];\n
        if (v16)\n
        {\n
            v12 = v10[1159];\n
        }\n
        else\n
        {\n
            v0 = &v5;\n
            if (cgc_allocate(0x200000, 0))\n
            {\n
                v10[1158] = 0;\n
                return 0;\n
            }\n
            v17 = *(&v5);\n
            v4 = v17 + 1048575;\n
            v16 = v4 & -0x100000;\n
            v1 = v17;\n
            v2 = v16;\n
            if (v16 > v1)\n
            {\n
                cgc_deallocate(v1);\n
                v16 = v2;\n
            }\n
            v18 = v1 + 0x200000;\n
            v3 = v16 + 0x100000;\n
            v1 = v18 - v3;\n
            if (v18 > v3)\n
            {\n
                cgc_deallocate(v3);\n
                v16 = v2;\n
            }\n
            *(524 + &v10[0] + (v4 >> 20)) = 1;\n
            v10[1158] = v16;\n
            v12 = 0;\n
            if (!v16)\n
                return 0;\n
        }\n
        v13 = v12 + v16;\n
        v10[1155 + v11] = v13;\n
        *((v12 + v16)) = v8;\n
        *((v12 + v16 + 2)) = v8;\n
        v19 = v12 + 0x1000;\n
        v10[1159] = v19;\n
        if (v19 == 0x100000)\n
            v10[1158] = 0;\n
        v14 = v8;\n
        v15 = v8;\n
    }\n
    v20 = v8 + v15;\n
    *((v13 + 2)) = v20;\n
    if (v14 + v20 < 4097)\n
        return v15 + v13;\n
    v10[1155 + v11] = 0;\n
}\n
", "4207967:sub_40355f": null, "4207968:malloc_free": "int malloc_free(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v15;  // cl\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // edx\n
    unsigned int v38;  // eax\n
\n
    v7 = v11;\n
    v6 = v12;\n
    v5 = v13;\n
    v38 = a0;\n
    if (!v38)\n
    {\n
LABEL_403881:\n
        return v38;\n
    }\n
    v23 = v10;\n
    v15 = *((v23 + (v38 >> 20) + 524));\n
    if (v15 != 2)\n
    {\n
        if (v15 == 1)\n
        {\n
            v24 = *((v38 & -0x1000));\n
            if (v24 <= 15)\n
            {\n
                v17 = v24 / 4 - 1;\n
                goto LABEL_4036e6;\n
            }\n
            if (v24 <= 0x200)\n
            {\n
                v17 = (v24 >> 4) + 2;\n
                goto LABEL_4036e6;\n
            }\n
        }\n
        if (!(!v15))\n
            goto LABEL_403881;\n
        if ((v38 & 4095) != 8)\n
        {\n
            v19 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_4038cd;\n
        }\n
        else\n
        {\n
            v20 = *((v38 - 8));\n
            if (v20 != v23)\n
            {\n
                v22 = \"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\";\n
                v1 = v23;\n
            }\n
            else\n
            {\n
                v20 = *((v38 - 4));\n
                if (v20 - 0x20000 <= 2147356671 && !(v20 & 4095))\n
                {\n
                    v38 = cgc_deallocate(v38 - 8);\n
                    goto LABEL_403881;\n
                }\n
                v22 = \"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\";\n
            }\n
            v0 = v20;\n
            v38 = cgc_heap_error(v22, v38);\n
        }\n
    }\n
    else if (!(v38 & 7))\n
    {\n
        v24 = v38 - 8;\n
        v16 = *((v24 + 4));\n
        if ((v16 & 1))\n
        {\n
            v19 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_4038cd;\n
        }\n
        else if (v16 - 131073 <= -131058)\n
        {\n
            v19 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_4038cd;\n
        }\n
        else\n
        {\n
            v21 = *(v24);\n
            v12 = v24 - *(v24);\n
            if (!*(v24))\n
                v12 = v21;\n
            v23 = v16 + v24;\n
            v2 = v24;\n
            if (v12)\n
            {\n
                v4 = v23;\n
                v3 = *((v12 + 4));\n
                if (!((v3 & -2) == v21))\n
                    goto LABEL_4038e4;\n
                v23 = v4;\n
                v24 = v3;\n
                if (*(v23) == v16)\n
                {\n
                    if ((v24 & 1))\n
                    {\n
                        if (v21 <= 15)\n
                        {\n
                            v25 = v24 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v21 <= 0x200)\n
                            {\n
                                v25 = (v24 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v21 <= 0x1200)\n
                                {\n
                                    v25 = (v21 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v25 = 130;\n
                                    if (v21 <= 0x20000)\n
                                        v25 = (v21 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v12 + 4)) = v21;\n
                        v26 = *((v12 + 8));\n
                        if (v26)\n
                            *((v26 + 12)) = *((v12 + 12));\n
                        v27 = *((v12 + 12));\n
                        if (v27)\n
                            *((v27 + 8)) = v26;\n
                        if (*((v10 + (v25 << 2))) == v12)\n
                            *((v10 + v25 * 4)) = v27;\n
                        *((v12 + 8)) = 0;\n
                        *((v12 + 12)) = 0;\n
                        v28 = v21 + *((v2 + 4));\n
                        *((v12 + 4)) = v28;\n
                        *(v23) = v28;\n
                        v2 = v12;\n
                    }\n
LABEL_40376c:\n
                    v29 = *((v23 + 4));\n
                    v30 = v10;\n
                    v12 = v2;\n
                    if ((v29 & 1))\n
                    {\n
                        v31 = v29 & -2;\n
                        if (v31 <= 15)\n
                        {\n
                            v32 = v29 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v31 <= 0x200)\n
                            {\n
                                v32 = (v29 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v31 <= 0x1200)\n
                                {\n
                                    v32 = (v31 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v32 = 130;\n
                                    if (v31 <= 0x20000)\n
                                        v32 = (v31 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v23 + 4)) = v31;\n
                        v33 = *((v23 + 8));\n
                        if (v33)\n
                            *((v33 + 12)) = *((v23 + 12));\n
                        v34 = *((v23 + 12));\n
                        if (*((v23 + 12)))\n
                            *((v34 + 8)) = v33;\n
                        v30 = v10;\n
                        if (*((v30 + (v32 << 2))) == v23)\n
                            *((v30 + v32 * 4)) = v34;\n
                        *((v23 + 8)) = 0;\n
                        *((v23 + 12)) = 0;\n
                        v12 = v2;\n
                        v35 = v31 + *((v12 + 4));\n
                        *((v12 + 4)) = v35;\n
                        *((v12 + v35)) = v35;\n
                    }\n
                    v36 = *((v12 + 4));\n
                    if (v36 <= 15)\n
                    {\n
                        v37 = v36 / 4 - 1;\n
                    }\n
                    else\n
                    {\n
                        if (v36 <= 0x200)\n
                        {\n
                            v37 = (v36 >> 4) + 2;\n
                        }\n
                        else\n
                        {\n
                            if (v36 <= 0x1200)\n
                            {\n
                                v37 = (v36 - 0x200 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v37 = 130;\n
                                if (v36 <= 0x20000)\n
                                    v37 = (v36 - 0x1200 >> 11) + 66;\n
                            }\n
                        }\n
                    }\n
                    if (!(!(v36 & 1)))\n
                        goto LABEL_4038d4;\n
                    *((v12 + 4)) = v36 | 1;\n
                    *((v12 + 8)) = 0;\n
                    *((v12 + 12)) = *((v30 + v37 * 4));\n
                    *((v30 + v37 * 4)) = v12;\n
                    v38 = *((v12 + 12));\n
                    if (v38)\n
                    {\n
                        *((v38 + 8)) = v12;\n
                        goto LABEL_403881;\n
                    }\n
                }\n
            }\n
            else if (*((v24 + v16)) == v16)\n
            {\n
                goto LABEL_40376c;\n
            }\n
            v0 = v38;\n
            v38 = cgc_heap_error(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v23);\n
            v17 = (v24 <= 0x1200 ? (v24 - 0x1200 >> 11) + 66 : (v24 - 0x200 >> 7) + 34);\n
LABEL_4036e6:\n
            *(v38) = *((v23 + v17 * 4));\n
            *((v23 + v17 * 4)) = v38;\n
            goto LABEL_403881;\n
        }\n
    }\n
    v19 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_4038cd:\n
    v8 = v38;\n
    v7 = v19;\n
    cgc_heap_error(*(&v9));\n
LABEL_4038d4:\n
    v6 = v12;\n
    v5 = \"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
    v38 = cgc_heap_error(*(&v9));\n
LABEL_4038e4:\n
    v7 = v38;\n
    v6 = v12;\n
    v5 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    cgc_heap_error(v10, a0);\n
    return cgc_malloc_size(v10, a0);\n
}\n
", "4208896:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_size(unsigned int v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ecx\n
    char v2;  // dl\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *((v0 + (v1 >> 20) + 524));\n
    if (!(v2 & 253))\n
        return *(&v1->field_0) - 8;\n
    v3 = 0;\n
    if (v2 != 1)\n
        return v3;\n
    v3 = *((v1 & -0x1000));\n
}\n
", "4208945:sub_403931": null, "4208960:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_realloc(unsigned int v1, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // ebp\n
    char v6;  // dl\n
    void* v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    v3 = 0;\n
    if (v2 < 0)\n
    {\n
LABEL_403a15:\n
        return v3;\n
    }\n
    v4 = a0;\n
    v7 = v1;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
    {\n
LABEL_403a0d:\n
        malloc_free(v1, a0);\n
        goto LABEL_403a15;\n
    }\n
    if (!v4)\n
    {\n
        v11 = cgc_malloc_alloc(v7, v2);\n
        return v11;\n
    }\n
    v5 = v4 / 0x100000;\n
    v6 = *(524 + v7 + (v4 >> 20));\n
    if ((*(524 + v7 + (v4 >> 20)) & 253))\n
    {\n
        v7 = 0;\n
        if (v6 == 1)\n
            v7 = *((v4 & -0x1000));\n
        if (!(v7 < v2))\n
            goto LABEL_4039f0;\n
    }\n
    else if (*(&v4->field_0) - 8 >= v2)\n
    {\n
LABEL_4039f0:\n
        v3 = v4;\n
        goto LABEL_403a15;\n
    }\n
    v8 = cgc_malloc_alloc(v1, v2);\n
    if (!v8)\n
        goto LABEL_403a15;\n
    v3 = v8;\n
    v9 = v1;\n
    *(&v7) = *((v9 + v5 + 524));\n
    if (!(*((v9 + v5 + 524)) & 253))\n
    {\n
        v10 = *(&v4->field_0) - 8;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        if (v7 == 1)\n
            v10 = *((v4 & -0x1000));\n
    }\n
    v0 = v10;\n
    cgc_memcpy(v3, v4);\n
    goto LABEL_403a0d;\n
}\n
", "4209183:sub_403a1f": null, "4209184:cgc_heap_error": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stderr;\n
\n
int cgc_heap_error()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v6;\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v5;\n
    v1 = &v5;\n
    v0 = v4;\n
    cgc_vfprintf(cgc_stderr, v0);\n
    cgc__terminate(1, v0);\n
    cgc_memchr();\n
    return;\n
}\n
", "4209248:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // ecx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v3 = v0;\n
    while (true)\n
    {\n
        if (*(v3) == a0)\n
            return v3;\n
        v3 += 1;\n
        tmp_5 = v1;\n
        v1 -= 1;\n
        if (tmp_5 == 1)\n
            return 0;\n
    }\n
}\n
", "4209302:sub_403a96": null, "4209312:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebx\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v3 != v4)\n
                return v3 - v4;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4209373:sub_403add": null, "4209376:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4209506:sub_403b62": null, "4209520:cgc_memmove": "int cgc_memmove(char *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ebp\n
    char *v4;  // ecx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    char *v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    char *v17;  // edx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    char *v21;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v15 = v1;\n
    if (v15 > v4)\n
    {\n
        if (!v3)\n
            return v15;\n
        v5 = v3 - 1;\n
        v16 = v3 & 3;\n
        v14 = 0;\n
        if (v5 >= 3)\n
        {\n
            v0 = v16;\n
            v7 = v3;\n
            v8 = v15 + v5;\n
            v9 = &v4[v5];\n
            v11 = 0;\n
            do\n
            {\n
                v8[v11] = *((v9 + v11));\n
                v8[1 + v11] = *((v9 + v11 - 1));\n
                v8[2 + v11] = *((v9 + v11 - 2));\n
                v8[3 + v11] = *((v9 + v11 - 3));\n
                v11 -= 4;\n
            } while (-(v7 & -0x4) != v11);\n
            v14 = -(v11);\n
            v15 = v1;\n
            v3 = a1;\n
            v16 = v0;\n
        }\n
        if (!v16)\n
            return v15;\n
        v20 = ~(v14) + v3;\n
        v21 = v15 + v20;\n
        v23 = -(v16);\n
        v24 = 0;\n
        do\n
        {\n
            v21[v24] = v4[v24 + v20];\n
            v24 -= 1;\n
        } while (v23 != v24);\n
        return v15;\n
    }\n
    else\n
    {\n
        if (!v3)\n
            return v15;\n
        v6 = v3 & 3;\n
        v13 = 0;\n
        if (v3 - 1 >= 3)\n
        {\n
            v12 = v3 & -0x4;\n
            v13 = 0;\n
            do\n
            {\n
                *((v15 + v13)) = v4[v13];\n
                *((v15 + v13 + 1)) = v4[1 + v13];\n
                *((v15 + v13 + 2)) = v4[2 + v13];\n
                *((v15 + v13 + 3)) = v4[3 + v13];\n
                v13 += 4;\n
            } while (v12 != v13);\n
        }\n
        if (!v6)\n
            return v1;\n
        v17 = v15 + v13;\n
        v18 = &v4[v13];\n
        v19 = 0;\n
        do\n
        {\n
            v17[v19] = *((v18 + v19));\n
            v19 += 1;\n
        } while (v6 != v19);\n
        return v1;\n
    }\n
}\n
", "4209814:sub_403c96": null, "4209824:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edi\n
    char *v2;  // eax\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // esi\n
    char *v7;  // esi\n
    unsigned int v8;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 7;\n
    v5 = 0;\n
    if (v1 - 1 >= 7)\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2[v5] = v3;\n
            v2[1 + v5] = v3;\n
            v2[2 + v5] = v3;\n
            v2[3 + v5] = v3;\n
            v2[4 + v5] = v3;\n
            v2[5 + v5] = v3;\n
            v2[6 + v5] = v3;\n
            v2[7 + v5] = v3;\n
            v5 += 8;\n
        } while ((v1 & -8) != v5);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v5];\n
    v8 = 0;\n
    do\n
    {\n
        v7[v8] = v3;\n
        v8 += 1;\n
    } while (v4 != v8);\n
    return v0;\n
}\n
", "4209934:sub_403d0e": null, "4209936:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_printf(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0x8]\n
    unsigned int v4;  // esi\n
\n
    v1 = &v3;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v0 = 0;\n
        v4 = cgc__vsfprintf(cgc_stdout);\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = cgc__vsfprintf(cgc_stdout);\n
    return v4;\n
}\n
", "4210049:sub_403d81": null, "4210064:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v2;  // eax\n
\n
    if (cgc_stdout->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v2 = cgc__vsfprintf(cgc_stdout);\n
        return v2;\n
    }\n
    cgc_stdout->field_8 = 0;\n
    v0 = 0;\n
    v2 = cgc__vsfprintf(cgc_stdout);\n
    cgc_fflush(cgc_stdout);\n
    cgc_stdout->field_8 = -1;\n
    return v2;\n
}\n
", "4210171:sub_403dfb": null, "4210176:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_fprintf(struct_0 *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0xc]\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v4 = v2;\n
    v1 = &v3;\n
    if (v4->field_8 == -1)\n
    {\n
        v4->field_8 = 0;\n
        v0 = 0;\n
        v5 = cgc__vsfprintf(v4);\n
        cgc_fflush(v4);\n
        v4->field_8 = -1;\n
        return v5;\n
    }\n
    v0 = 0;\n
    v5 = cgc__vsfprintf(v4);\n
    return v5;\n
}\n
", "4210285:sub_403e6d": null, "4210288:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_vfprintf(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x18]\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
\n
    v2 = v1;\n
    if (v2->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v3 = cgc__vsfprintf(v2);\n
        return v3;\n
    }\n
    v2->field_8 = 0;\n
    v0 = 0;\n
    v3 = cgc__vsfprintf(v2);\n
    cgc_fflush(v2);\n
    v2->field_8 = -1;\n
    return v3;\n
}\n
", "4210391:sub_403ed7": null, "4210400:cgc_sprintf": "int cgc_sprintf(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    char v3;  // [bp+0xc]\n
\n
    v1 = &v3;\n
    v0 = v2;\n
    return cgc__vsfprintf(0);\n
}\n
", "4210448:cgc_vsprintf": "int cgc_vsprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc__vsfprintf(0);\n
}\n
", "4210491:sub_403f3b": null, "4210496:cgc__vsfprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__vsfprintf()\n
{\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x58]\n
    char v8;  // [bp-0x50]\n
    unsigned int v11;  // [bp-0x8]\n
    char v13;  // [bp+0x8]\n
    unsigned int v31;  // ebx\n
    unsigned int v32;  // ebx\n
    unsigned int v33;  // ecx\n
    unsigned int v40;  // edx\n
    unsigned int v77;  // esi\n
    char v78;  // eax\n
    unsigned int v79;  // ebp\n
\n
    v11 = v31;\n
    v32 = *(&v13);\n
    v79 = v33 + 1;\n
    v3 = v33 + 1;\n
    v78 = *(v33);\n
    if (!*(v33))\n
    {\n
        v77 = 0;\n
    }\n
    else\n
    {\n
        v4 = v40;\n
        v6 = 20 + -0x1 * &v8;\n
        v77 = 0;\n
        v1 = &_GLOBAL_OFFSET_TABLE_;\n
    }\n
}\n
", "4210598:sub_403fa6": null, "4212096:cgc_realloc": "extern unsigned int g_heap;\n
\n
int cgc_realloc(void* v0, unsigned int a0)\n
{\n
    return cgc_malloc_realloc(&g_heap, v0, a0);\n
}\n
", "4212140:sub_4045ac": null, "4212144:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    char v2;  // al, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v3 = v0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v2 = cgc_tolower(v2);\n
            if (v2 != cgc_tolower(*(v1)))\n
                return *((v3 - 1)) - *(v1);\n
            v1 += 1;\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4212262:sub_404626": null, "4212272:cgc_strcasestr": "int cgc_strcasestr(char v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_7;  // tmp #7\n
    char v2[2];  // esi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (!v2[0])\n
        return 0;\n
    while (true)\n
    {\n
        v0 = cgc_strlen();\n
        if (!cgc_strncasecmp(v2, a0))\n
            return v2;\n
        tmp_7 = *((v2 + 1));\n
        v2 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4212361:sub_404689": null, "4212368:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx\n
    unsigned int v3;  // bl, Other Possible Types: char\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v2);\n
    v4 = 0;\n
    if (*(v2))\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            if (v3 == v1)\n
                return &v2[v4];\n
            v3 = v2[1 + v4];\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v5 = (!v1 ? 0 : &v2[v4]);\n
    return v5;\n
}\n
", "4212436:sub_4046d4": null, "4212448:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4212516:sub_404724": null, "4212528:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char *v3;  // ecx, Other Possible Types: unsigned int\n
    char v4;  // dl\n
    char *v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v1);\n
    v5 = v2;\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        v5 = v2;\n
        do\n
        {\n
            *(v5) = v4;\n
            v5 += 1;\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (v4);\n
    }\n
    *(v5) = 0;\n
    return v0;\n
}\n
", "4212580:sub_404764": null, "4212592:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    char *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4212672:cgc_strlen": "int cgc_strlen(char *v0)\n
{\n
    char *v1;  // ecx\n
    void* v2;  // edx, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!*(v1))\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = v1[1 + v2];\n
        v2 += 1;\n
    } while (v3);\n
    return v2;\n
}\n
", "4212704:cgc_strncasecmp": "int cgc_strncasecmp(char v1[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3[2];  // ebp, Other Possible Types: unsigned int\n
    char v4;  // al\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v0 = &v1[a1];\n
    v4 = v1[0];\n
    if (v1[0])\n
    {\n
        while (*(v2))\n
        {\n
            v5 = cgc_tolower(v4);\n
            if (v5 != cgc_tolower(*(v2)))\n
                break;\n
            if (v3 >= v0)\n
                break;\n
            v2 += 1;\n
            v4 = *((v3 + 1));\n
            v3 += 1;\n
            if (!v4)\n
                break;\n
        }\n
    }\n
    v6 = (v3 == v0 ? *(v3) - *(v2) : 0);\n
    return v6;\n
}\n
", "4212832:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi\n
    char *v3;  // eax\n
    char v4;  // bl\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = *(v2);\n
    v6 = 0;\n
    v5 = v3;\n
    if (*(v2) && v1)\n
    {\n
        v6 = 0;\n
        while (true)\n
        {\n
            v3[v6] = v4;\n
            v4 = v2[1 + v6];\n
            v6 += 1;\n
            if (!v4)\n
                break;\n
            if (v6 >= v1)\n
                break;\n
        }\n
        v5 = &v3[v6];\n
    }\n
    if (v6 >= v1)\n
        return v0;\n
    v7 = v5 - v3;\n
    do\n
    {\n
        *(v5) = 0;\n
        v5 += 1;\n
        v7 += 1;\n
    } while (v7 < v1);\n
    return v0;\n
}\n
", "4212913:sub_4048b1": null, "4212928:cgc_strndup": "int cgc_strndup(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // eax\n
    char *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = a0;\n
    v2 = cgc_strlen(v0);\n
    v3 = (!(v2 <= v1) ? v2 : v1);\n
    v4 = cgc_malloc(v3 + 1);\n
    if (v4)\n
    {\n
        cgc_memcpy(v4, v0, v3);\n
        v3[v4] = 0;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4213017:sub_404919": null, "4213024:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v1, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // edi, Other Possible Types: unsigned int\n
    void* v5;  // ebp, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // ecx, Other Possible Types: unsigned int\n
\n
    v2 = *(v1);\n
    if (!v2)\n
        return v2;\n
    v3 = *(v2);\n
    v0 = v2;\n
    if (!*(v2))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v2 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v6 = v4 - 1;\n
                v2 = v0;\n
                v7 = v1;\n
                if (!(!*((v4 - 1))))\n
                    goto LABEL_404981;\n
                goto LABEL_40497f;\n
            }\n
            v5 += 1;\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        goto LABEL_404981;\n
    }\n
    v2 = v0;\n
    v6 = &v2[v5];\n
    v7 = v1;\n
LABEL_40497f:\n
    v4 = 0;\n
LABEL_404981:\n
    *(v7) = v4;\n
    *(v6) = 0;\n
    return v2;\n
}\n
", "4213154:sub_4049a2": null, "4213168:cgc_strstr": "int cgc_strstr(char v0[2], char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v1[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    while (true)\n
    {\n
        if (cgc_strcmp(v1, a0))\n
        {\n
            tmp_7 = *((v1 + 1));\n
            v1 += 1;\n
            if (!tmp_7)\n
                return 0;\n
        }\n
        else\n
        {\n
            return v1;\n
        }\n
    }\n
}\n
", "4213256:sub_404a08": null, "4213264:cgc_strtol": "int cgc_strtol(char v6[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_2;  // tmp #2\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    char v10[2];  // esi\n
    char v11;  // al\n
    unsigned int v12;  // eax, Other Possible Types: char\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // edx\n
    unsigned int v20;  // esi\n
    unsigned int v21;  // ecx\n
    unsigned int *v22;  // eax, Other Possible Types: unsigned int\n
    unsigned int v23;  // edx\n
    char v24[2];  // ebp, Other Possible Types: unsigned int\n
    void* v25;  // esi, Other Possible Types: unsigned int\n
    void* v26;  // edi, Other Possible Types: unsigned int\n
    char v27[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v10 = v6;\n
    v12 = cgc_isspace(v10[0]);\n
    v24 = v10;\n
    if (v12)\n
    {\n
        v24 = v10;\n
        do\n
        {\n
            if (!*(v24))\n
            {\n
                v26 = 0;\n
                v23 = 1;\n
                v21 = 1;\n
                v25 = 0;\n
                v22 = a0;\n
                if (!v22)\n
                    goto LABEL_404be4;\n
            }\n
            v11 = *((v24 + 1));\n
            v24 += 1;\n
            v12 = cgc_isspace(v11);\n
        } while (v12);\n
    }\n
    v13 = a1;\n
    if (*(v24) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v24) == 43)\n
            v24 += 1;\n
        if (!v13)\n
            goto LABEL_404ad8;\n
    }\n
    else\n
    {\n
        v24 += 1;\n
        v0 = -1;\n
        if (!v13)\n
        {\n
LABEL_404ad8:\n
            *(&v12) = *(v24);\n
            if (*(v24) != 48)\n
            {\n
LABEL_404b13:\n
                v12 = cgc_isdigit(v12);\n
                v13 = 10;\n
                if (!v12)\n
                    goto LABEL_404bc4;\n
LABEL_404b2b:\n
                *(&v12) = *(v24);\n
LABEL_404b2e:\n
                if (!v12)\n
                {\n
LABEL_404bc4:\n
                    v26 = 0;\n
                    v21 = 1;\n
                    v25 = 0;\n
                    v22 = a0;\n
                    v23 = v0;\n
                    if (!v22)\n
                        goto LABEL_404be4;\n
LABEL_404bd9:\n
                    tmp_2 = v21;\n
                    v27 = v6;\n
                    if (!tmp_2)\n
                        v27 = v24;\n
                    *(v22) = v27;\n
                    goto LABEL_404be4;\n
                }\n
LABEL_404b36:\n
                v25 = 0;\n
                v26 = 0;\n
                v21 = 1;\n
                v1 = v13;\n
                do\n
                {\n
                    v2 = v21;\n
                    v14 = cgc_isdigit(v12);\n
                    v15 = *(v24);\n
                    if (v14)\n
                    {\n
                        v16 = v15 - 48;\n
                    }\n
                    else\n
                    {\n
                        v18 = *(v24);\n
                        if (cgc_islower(v15))\n
                        {\n
                            v16 = v18 - 87;\n
                        }\n
                        else\n
                        {\n
                            if (!cgc_isupper(v18))\n
                                goto LABEL_404c07;\n
                            v16 = *(v24) - 55;\n
                        }\n
                    }\n
                    v19 = v1;\n
                    if (v16 >= v19)\n
                    {\n
LABEL_404c07:\n
                        v22 = a0;\n
                        v23 = v0;\n
                        v21 = v2;\n
                        if (!v22)\n
                            goto LABEL_404be4;\n
                        goto LABEL_404bd9;\n
                    }\n
                    v20 = v19 * v25;\n
                    tmp_5 = v20;\n
                    v25 = v20 + v16;\n
                    if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, t5, ecx<4>, 0x0<32>))\n
                        v26 = 1;\n
                    v12 = *((v24 + 1));\n
                    v24 += 1;\n
                    v21 = 0;\n
                } while (v12);\n
                goto LABEL_404bd9;\n
            }\n
            else\n
            {\n
                *(&v12) = *((v24 + 1));\n
                if ((v12 & 248) == 48)\n
                {\n
                    v24 += 1;\n
                    v13 = 8;\n
                    goto LABEL_404b36;\n
                }\n
                v12 = cgc_tolower(v12);\n
                if (v12 != 120)\n
                {\n
                    *(&v12) = *(v24);\n
                    goto LABEL_404b13;\n
                }\n
                else\n
                {\n
                    v24 += 2;\n
                }\n
            }\n
LABEL_404b09:\n
            v13 = 16;\n
            goto LABEL_404b2b;\n
        }\n
    }\n
    if (!(v13 == 16))\n
        goto LABEL_404b2b;\n
    *(&v12) = *(v24);\n
    v13 = 16;\n
    if (!(*(v24) == 48))\n
        goto LABEL_404b2e;\n
    v24 += (cgc_tolower(*((v24 + 1))) == 120) * 2;\n
    goto LABEL_404b09;\n
LABEL_404be4:\n
    v28 = (!v26 ? 0x80000000 : -(v25));\n
    v29 = ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>) ? 2147483647 : v25);\n
    if (v23 < 0)\n
        v29 = v28;\n
    return v29;\n
}\n
", "4213612:sub_404b6c": null, "4213785:sub_404c19": null, "4213792:cgc_strtoul": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoul(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_2;  // tmp #2\n
    int tmp_67;  // tmp #67\n
    int tmp_41;  // tmp #41\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3[2];  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    char v12[2];  // esi\n
    char v13;  // al\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax, Other Possible Types: char\n
    void* v16;  // edi\n
    void* v17;  // edi\n
    void* v18;  // edi, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ecx\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // edx\n
    unsigned int v25;  // eax\n
    unsigned int v27;  // ebx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // edx\n
    char v32[2];  // ebp\n
    unsigned int v33;  // edi\n
    char v34[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v35;  // eax, Other Possible Types: unsigned int\n
    unsigned int v36;  // edx\n
    char v37[2];  // ecx, Other Possible Types: unsigned int\n
    char v38[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v39;  // ebx\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // cc_dep2\n
    unsigned int v43;  // eax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v12 = v8;\n
    v34 = v12;\n
    if (cgc_isspace(v12[0]))\n
    {\n
        v34 = v12;\n
        do\n
        {\n
            if (!*(v34))\n
            {\n
                v14 = 0;\n
                v36 = 1;\n
                goto LABEL_404d15;\n
            }\n
            v13 = *((v34 + 1));\n
            v34 += 1;\n
        } while (cgc_isspace(v13));\n
    }\n
    v0 = a1;\n
    if (*(v34) == 45)\n
    {\n
        v34 += 1;\n
        v36 = -1;\n
    }\n
    else\n
    {\n
        v36 = 1;\n
        if (*(v34) == 43)\n
            v34 += 1;\n
    }\n
    v15 = a1;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v15 && v15 == 16)\n
    {\n
        *(&v15) = *(v34);\n
        if (*(v34) == 48)\n
        {\n
            v34 += (cgc_tolower(*((v34 + 1))) == 120) * 2;\n
            v0 = 16;\n
            goto LABEL_404d7e;\n
        }\n
        else\n
        {\n
            v0 = 16;\n
            if (!(!v15))\n
                goto LABEL_404d85;\n
            goto LABEL_404d13;\n
        }\n
    }\n
    *(&v15) = *(v34);\n
    if (*(v34) == 48)\n
    {\n
        *(&v15) = *((v34 + 1));\n
        if ((v15 & 248) == 48)\n
        {\n
            v1 = v36;\n
            v34 += 1;\n
            v0 = 8;\n
            goto LABEL_404d89;\n
        }\n
        v15 = cgc_tolower(v15);\n
        if (v15 != 120)\n
        {\n
            *(&v15) = *(v34);\n
        }\n
        else\n
        {\n
            v34 += 2;\n
            v0 = 16;\n
            goto LABEL_404d7e;\n
        }\n
    }\n
    v1 = v36;\n
    v15 = cgc_isdigit(v15);\n
    v0 = 10;\n
    if (!v15)\n
    {\n
        v14 = 0;\n
        v37 = 1;\n
        v2 = 0;\n
        v16 = 0;\n
        v35 = a0;\n
        v36 = v1;\n
        if (!v35)\n
            goto LABEL_404e7f;\n
LABEL_404e74:\n
        tmp_2 = v37;\n
        v38 = v8;\n
        if (!tmp_2)\n
            v38 = v34;\n
        *(v35) = v38;\n
    }\n
    else\n
    {\n
        v36 = v1;\n
LABEL_404d7e:\n
        *(&v15) = *(v34);\n
        if (*(v34))\n
        {\n
LABEL_404d85:\n
            v1 = v36;\n
LABEL_404d89:\n
            v2 = 0;\n
            v18 = 0;\n
            v14 = 0;\n
            v37 = 1;\n
            do\n
            {\n
                *(&v3) = v37;\n
                v19 = cgc_isdigit(v15);\n
                v20 = *(v34);\n
                if (v19)\n
                {\n
                    v21 = v20 - 48;\n
                }\n
                else\n
                {\n
                    v23 = *(v34);\n
                    if (cgc_islower(v20))\n
                    {\n
                        v21 = v23 - 87;\n
                    }\n
                    else\n
                    {\n
                        if (!cgc_isupper(v23))\n
                            goto LABEL_404e45;\n
                        v21 = *(v34) - 55;\n
                    }\n
                }\n
                v24 = v0;\n
                if (v21 >= v24)\n
                {\n
LABEL_404e45:\n
                    v35 = a0;\n
                    v36 = v1;\n
                    v37 = v3;\n
                    if (!v35)\n
                        goto LABEL_404e7f;\n
                    goto LABEL_404e74;\n
                }\n
                *(&v3) = v34;\n
                v25 = v2;\n
                v27 = v14;\n
                tmp_67 = v25 * v24;\n
                v30 = tmp_67;\n
                v31 = v24 * v18 + v25 * (v24 >> 31) + (v25 * v24 >> 32);\n
                v32 = v3;\n
                v33 = v21 >> 31;\n
                v2 = v30 + v21;\n
                tmp_41 = v33;\n
                v18 = v33 + v31 + (v30 + v21 < v30);\n
                v14 = ([D] x86g_calculate_condition(0x5<32>, 0x9<32>, t41, Xor(edx<4>, Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))), Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))) ? v27 : 1);\n
                v15 = v32[1];\n
                v34 = &v32[1];\n
                v37 = 0;\n
            } while (v15);\n
            goto LABEL_404e7f;\n
        }\n
LABEL_404d13:\n
        v14 = 0;\n
LABEL_404d15:\n
        v37 = 1;\n
        v2 = 0;\n
        v17 = 0;\n
        v35 = a0;\n
        if (!v35)\n
            goto LABEL_404e7f;\n
        goto LABEL_404e74;\n
    }\n
LABEL_404e7f:\n
    v39 = v2;\n
    v40 = -(v39);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v40 = v39;\n
    v41 = -(0 < v14) | v40;\n
    v42 = v39 < 2147483649;\n
    v43 = ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, cc_dep2<4>, cc_dep2<4>) ? -1 : v41);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v43 = v41;\n
    return v43;\n
}\n
", "4214448:_ZN7CgFsImgC2Ev": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned int field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
    char padding_411[4];\n
    unsigned int field_415;\n
} struct_0;\n
\n
int CgFsImg::__base_ctor__(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x8]\n
    struct_0 *v2;  // esi\n
\n
    v2 = v1;\n
    v2->field_0 = 0;\n
    *(&(&v2->padding_1)[1]) = 0;\n
    *((&v2->field_401 + 1)) = 0;\n
    *((&v2->field_405 + 1)) = 0;\n
    *(&v2->padding_411[1]) = 0;\n
    *((&v2->field_409 + 1)) = 0;\n
    return DirectoryTree::__ctor__(&v1->field_415 + 1, *(&v0));\n
}\n
", "4214540:sub_404f0c": null, "4214544:_ZN7CgFsImgD2Ev": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned int field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
    unsigned int field_411;\n
    unsigned int field_415;\n
} struct_0;\n
\n
int CgFsImg::__base_dtor__(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    cgc_memset(&v3->padding_1, 0, 0x200);\n
    cgc_memset(&v3->padding_1[0x200], 0, 0x200);\n
    v4 = *((&v3->field_40d + 1));\n
    if (v4)\n
        operator delete[](v4);\n
    *((&v3->field_40d + 1)) = 0;\n
    *((&v3->field_411 + 1)) = 0;\n
    *((&v3->field_405 + 1)) = 0;\n
    *((&v3->field_409 + 1)) = 0;\n
    *(&(&v3->padding_1)[1]) = 0;\n
    *((&v3->field_401 + 1)) = 0;\n
    v5 = DirectoryTree::ClearTree(&v3->field_415 + 1);\n
    if (v3->field_0)\n
    {\n
        v3->field_0 = 0;\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4214726:sub_404fc6": null, "4214736:_ZN7CgFsImg7UnmountEv": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned int field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
    unsigned int field_411;\n
    unsigned int field_415;\n
} struct_0;\n
\n
int CgFsImg::Unmount(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    cgc_memset(&v3->padding_1, 0, 0x200);\n
    cgc_memset(&v3->padding_1[0x200], 0, 0x200);\n
    v4 = *((&v3->field_40d + 1));\n
    if (v4)\n
        operator delete[](v4);\n
    *((&v3->field_40d + 1)) = 0;\n
    *((&v3->field_411 + 1)) = 0;\n
    *((&v3->field_405 + 1)) = 0;\n
    *((&v3->field_409 + 1)) = 0;\n
    *(&(&v3->padding_1)[1]) = 0;\n
    *((&v3->field_401 + 1)) = 0;\n
    v5 = DirectoryTree::ClearTree(&v3->field_415 + 1);\n
    *(&v5) = v3->field_0;\n
    if (v3->field_0)\n
    {\n
        v3->field_0 = 0;\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4214919:sub_405087": null, "4214928:_ZN7CgFsImg9IsMountedEv": "int CgFsImg::IsMounted(struct struct_0 **v0)\n
{\n
    struct struct_0 **v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = *(v1);\n
    return v1;\n
}\n
", "4214935:sub_405097": null, "4214944:_ZN7CgFsImg5MountEP4FILE": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[11];\n
    char field_c;\n
    unsigned short field_d;\n
    unsigned short field_f;\n
    char field_11;\n
    char padding_12[2];\n
    unsigned short field_14;\n
    char padding_16[11];\n
    unsigned int field_21;\n
    unsigned int field_25;\n
    char padding_29[4];\n
    unsigned int field_2d;\n
    char padding_31[976];\n
    unsigned int field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
    unsigned int field_411;\n
    unsigned int field_415;\n
    unsigned int field_419;\n
    unsigned int field_41d;\n
    unsigned int field_421;\n
    unsigned int field_425;\n
    unsigned int field_429;\n
    unsigned int field_42d;\n
    unsigned int field_431;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
    char padding_c[12];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_0;\n
\n
int CgFsImg::Mount(struct_1 *v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    char v1;  // [bp-0x38]\n
    char v2;  // [bp-0x34]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x28]\n
    char v6;  // [bp-0x24]\n
    char v7;  // [bp-0x20]\n
    char v8;  // [bp-0x1c]\n
    char v9;  // [bp-0x18]\n
    char v10;  // [bp-0x14]\n
    void* v12;  // esi\n
    struct_1 *v13;  // edi\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // ecx\n
    unsigned int v18;  // edx\n
    struct_0 *v19;  // eax\n
    unsigned int v20;  // eax\n
\n
    v12 = a0;\n
    if (!v12)\n
        return 0;\n
    v13 = v11;\n
    if (!v13->field_0 && cgc_fread(&v13->padding_1, 0x200, v12) == 0x200 && cgc_fread(&v13->padding_31[461], 0x200, v12) == 0x200 && *((&v13->field_d + 1)) == 0x200 && v13->field_c == 1)\n
    {\n
        v14 = *(&v13->padding_12[1]);\n
        if (!v14)\n
            v14 = *(&v13->padding_16[9]);\n
        v15 = v14 * 0x200 - 0x400;\n
        *((&v13->field_411 + 1)) = v15;\n
        if (v15 <= 0x8000000)\n
        {\n
            *((&v13->field_401 + 1)) = *(&v13->padding_29[1]) * 128 & 1073741696;\n
            v16 = operator new[](v15);\n
            *((&v13->field_40d + 1)) = v16;\n
            v17 = *((&v13->field_d + 1));\n
            v18 = v17 * *(&(&v13->field_c)[1]);\n
            v0 = v16 + v18;\n
            *(&v13->padding_31[973]) = v18 + v16 - 0x400;\n
            *((&v13->field_405 + 1)) = v0 + *(&v13->field_f + 1) * v17 * *(&v13->padding_29[1]) - 0x400;\n
            *((&v13->field_409 + 1)) = v17 * v13->field_c;\n
            if (cgc_fread(v16, *((&v13->field_411 + 1)), v12) == *((&v13->field_411 + 1)))\n
            {\n
                v13->field_0 = 1;\n
                strncpy(&v3, \"    \", 4);\n
                strncpy(&v2, \"    \", 4);\n
                strncpy(&v1, \"/   \", 4);\n
                v19 = operator new(32);\n
                cgc_memset(v19, 0, 11);\n
                cgc_memcpy(v19, &v1, 11);\n
                v19->field_b = 16;\n
                v19->field_18 = *((&v13->field_21 + 1));\n
                v19->field_1c = 0;\n
                DirectoryTree::__base_ctor__(&v4);\n
                *((&v13->field_42d + 1)) = *(&v10);\n
                *((&v13->field_429 + 1)) = *(&v9);\n
                *((&v13->field_425 + 1)) = *(&v8);\n
                *((&v13->field_421 + 1)) = *(&v7);\n
                *((&v13->field_41d + 1)) = *(&v6);\n
                *((&v13->field_419 + 1)) = *(&v5);\n
                *((&v13->field_415 + 1)) = *(&v4);\n
                v20 = CgFsImg::ParseDirectoryTree(v13, &v13->field_415 + 1);\n
                *(&v20) = 1;\n
                return v20;\n
            }\n
        }\n
    }\n
}\n
", "4215471:sub_4052af": null, "4215472:_ZN7CgFsImg18ParseDirectoryTreeEP13DirectoryTreej": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned int field_401;\n
    char padding_405[4];\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
int CgFsImg::ParseDirectoryTree(struct_0 *v11, unsigned int a0, unsigned int *a1)\n
{\n
    unsigned int *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    int tmp_6;  // tmp #6\n
    unsigned int *v1;  // [bp-0x30]\n
    unsigned int *v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    char v10;  // [bp+0x0]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // esi\n
    unsigned int *v15;  // ebp\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // esi\n
    unsigned int *v18;  // ecx\n
    unsigned int *v19;  // edx, Other Possible Types: unsigned int\n
    unsigned int *v20;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int *v24;  // edi\n
    unsigned int v25;  // ecx\n
    struct_0 *v26;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v27;  // esi\n
    void* v28;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v29;  // eax\n
    unsigned int v30;  // eax\n
    void* v31;  // edi, Other Possible Types: unsigned int\n
    unsigned int v32;  // eax\n
    void* v33;  // edi, Other Possible Types: unsigned int\n
    unsigned int v34;  // esi\n
    void* v35;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v36;  // esi\n
\n
    v9 = v12;\n
    v8 = v13;\n
    v7 = v14;\n
    if (v11->field_0)\n
    {\n
        v15 = a1;\n
        v27 = a1 + 2;\n
        if (v27 <= 268435445)\n
        {\n
            v0 = 0;\n
            v19 = 0;\n
            v26 = v11;\n
            v20 = 0;\n
            do\n
            {\n
                v16 = *((v26 + 1037));\n
                v17 = v16 * v27 + *((v26 + 1033));\n
                v3 = v16;\n
                if (!v19)\n
                {\n
                    v19 = operator new[](24);\n
                    v0 = 2;\n
                    v20 = 0;\n
                }\n
                else\n
                {\n
                    v18 = v0;\n
                    if (v20 == v18)\n
                    {\n
                        v21 = v18 * 2;\n
                        v2 = v21;\n
                        v1 = v19;\n
                        v0 = v18;\n
                        tmp_6 = v21;\n
                        v22 = v21 * 12;\n
                        if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t6, 0xc<32>, 0x0<32>))\n
                            v22 = -1;\n
                        v6 = operator new[](v22);\n
                        v24 = v1;\n
                        cgc_memcpy(v6, v24, v18 * 4 * 3);\n
                        operator delete[](v24);\n
                        v20 = v0;\n
                        v0 = v2;\n
                        v19 = v6;\n
                    }\n
                }\n
                v25 = v20 * 3;\n
                v20 += 1;\n
                *((v19 + v25 * 4)) = v17;\n
                *((v19 + v25 * 4 + 4)) = v3;\n
                *((v19 + v25 * 4 + 8)) = v15;\n
                v26 = v11;\n
                v27 = *((*((v26 + 1025)) + v15 * 4)) - 2;\n
            } while (v27 < 268435446);\n
            if (v20)\n
            {\n
                v28 = 0;\n
                v1 = v19;\n
                v2 = v20;\n
                do\n
                {\n
                    v3 = v28;\n
                    v29 = (!(v20 <= v28) ? 0 : v28);\n
                    v30 = v29 * 3;\n
                    if (*((v19 + (v30 << 2) + 4)) >= 32)\n
                    {\n
                        v31 = 0;\n
                        do\n
                        {\n
                            if (!CgFsFile::SkipEntry() && !CgFsFile::IsDotEntry())\n
                                DirectoryTree::AddEntry(a0);\n
                            tmp_6 = v31 + 64;\n
                            v31 += 32;\n
                        } while (tmp_6 <= v1[1 + v30]);\n
                    }\n
                    v28 = v3 + 1;\n
                    v20 = v2;\n
                    v19 = v1;\n
                } while (v28 < v20);\n
            }\n
        }\n
    }\n
    DirectoryTree::subdirectories(&v4);\n
    v32 = v4;\n
    if (!v32)\n
        return v32;\n
    v33 = 0;\n
    do\n
    {\n
        v34 = v3;\n
        if (!v34)\n
        {\n
            v4 = 0;\n
            v5 = 2;\n
            v34 = operator new[](56);\n
            DirectoryTree::__ctor__();\n
            DirectoryTree::__ctor__();\n
            v3 = v32;\n
            v32 = v4;\n
        }\n
        v35 = v33;\n
        if (v32 <= v33)\n
            v35 = 0;\n
        v36 = v34 + v35 * 9 * 3 + v35;\n
        CgFsImg::ParseDirectoryTree(*(&v10), v36, *((DirectoryTree::directory_entry() + 24)));\n
        v33 += 1;\n
        v32 = v4;\n
    } while (v33 < v32);\n
}\n
", "4215541:sub_4052f5": null, "4215781:sub_4053e5": null, "4215849:sub_405429": null, "4215955:sub_405493": null, "4216103:sub_405527": null, "4216112:_ZN7CgFsImg15GetFileClustersEPKc": "typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned int field_401;\n
    char padding_405[4];\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_1 *field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
} struct_1;\n
\n
int CgFsImg::GetFileClusters(unsigned int v4[3], struct_3 *a0, struct_0 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct struct_1 **v3;  // [bp-0x14]\n
    unsigned int v5[3];  // esi\n
    struct_3 *v6;  // edi\n
    struct_2 *v7;  // eax\n
    struct struct_1 **v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
\n
    v5 = v4;\n
    v6 = a0;\n
    v0 = a1;\n
    v7 = DirectoryTree::FindFile(&v6[1].padding_1[4]);\n
    if (!v7)\n
    {\n
        v5[0] = 0;\n
        v5[1] = 0;\n
        v5[2] = 0;\n
        return v4;\n
    }\n
    v8 = v7->field_18;\n
    v5[0] = 0;\n
    v5[1] = 0;\n
    v5[2] = 0;\n
    if (!v6->field_0)\n
        return v4;\n
    v9 = v8 + 2;\n
    if (v9 > 268435445)\n
        return v4;\n
    do\n
    {\n
        v10 = *((&v6->field_409 + 1));\n
        v1 = v10 * v9 + *(&v6->padding_405[1]);\n
        v2 = v10;\n
        v3 = v8;\n
        v0 = &v1;\n
        Array::Append(v5);\n
        v8 = *((*(&(&v6->padding_1)[1]) + v8 * 4));\n
        v9 = v8 - 2;\n
    } while (v9 < 268435446);\n
    return v4;\n
}\n
", "4216304:_ZN7CgFsImg15GetFileClustersEj": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    unsigned int field_401;\n
    char padding_405[4];\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int CgFsImg::GetFileClusters(unsigned int v4[3], struct_0 *a0, struct struct_1 **a1)\n
{\n
    struct_2 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct struct_1 **v3;  // [bp-0x14]\n
    unsigned int v5[3];  // esi\n
    struct_0 *v6;  // edi\n
    struct struct_1 **v7;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
\n
    v5 = v4;\n
    v6 = a0;\n
    v5[0] = 0;\n
    v5[1] = 0;\n
    v5[2] = 0;\n
    if (!v6->field_0)\n
        return v4;\n
    v7 = a1;\n
    v8 = a1 + 2;\n
    if (v8 > 268435445)\n
        return v4;\n
    do\n
    {\n
        v9 = *((&v6->field_409 + 1));\n
        v1 = v9 * v8 + *(&v6->padding_405[1]);\n
        v2 = v9;\n
        v3 = v7;\n
        v0 = &v1;\n
        Array::Append(v5);\n
        v7 = *((*(&(&v6->padding_1)[1]) + v7 * 4));\n
        v8 = v7 - 2;\n
    } while (v8 < 268435446);\n
    return v4;\n
}\n
", "4216458:sub_40568a": null, "4216464:_ZN7CgFsImg9ListFilesEPKcb": "int CgFsImg::ListFiles(unsigned int v1, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return DirectoryTree::ListFiles(1049 + v1, a0);\n
}\n
", "4216513:sub_4056c1": null, "4216528:_ZN7CgFsImg8FindFileEPKc": "int CgFsImg::FindFile(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return DirectoryTree::FindFile(1049 + v1);\n
}\n
", "4216571:sub_4056fb": null, "4216576:_ZN7CgFsImg7AddFileEPKcS1_Pcj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
int CgFsImg::AddFile(struct_0 *v8, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x34]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x28]\n
    unsigned int v6[4];  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // eax\n
    char *v11;  // ebp\n
    struct_0 *v13;  // edi\n
    unsigned int v14;  // edi\n
    struct_0 *v15;  // eax\n
    unsigned int v16;  // ecx\n
    unsigned int v17[4];  // edx\n
    unsigned int v18[4];  // edi, Other Possible Types: unsigned int\n
    unsigned int v19;  // ebp\n
    struct_0 *v20;  // esi, Other Possible Types: unsigned int\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // ecx\n
    unsigned int v23;  // ebp\n
    char *v24;  // eax\n
    char *v25;  // edx\n
    unsigned int v26;  // eax\n
    unsigned int v27[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebp\n
    unsigned int v32;  // ecx\n
    char *v33;  // eax\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // edi\n
\n
    v9 = a0;\n
    if (!v9)\n
        return 0;\n
    v11 = a1;\n
    if (!a1)\n
    {\n
        return 0;\n
    }\n
    else if (a3 - 1048577 < -0x100000)\n
    {\n
        return 0;\n
    }\n
    else if (cgc_strlen(v11) > 11)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v13 = v8;\n
        if (CgFsImg::FileExists(v13, v9))\n
            return 0;\n
        v14 = &v13[1].padding_0[5];\n
        if (DirectoryTree::FindFile(v14) && CgFsFile::IsDirectory())\n
        {\n
            v15 = v8;\n
            v16 = *((&v15->field_401 + 1));\n
            if (v16 >= 4)\n
            {\n
                v1 = v14;\n
                v17 = *(&(&v15->padding_0)[1]);\n
                v18 = 3;\n
                while (v17[v18])\n
                {\n
                    v18 += 1;\n
                    if (v16 == v18)\n
                        return 0;\n
                }\n
                v6[0] = v18;\n
                cgc_memset(&v3, 32, 11);\n
                cgc_memcpy(&v3, v11, cgc_strlen(v11));\n
                v4 = 0;\n
                cgc_memset(&v5, 0, 12);\n
                v19 = a3;\n
                v7 = a3;\n
                v20 = v8;\n
                CgFsImg::AddMetadataEntry(v20, &v3);\n
                *((*(&(&v20->padding_0)[1]) + v18 * 4)) = 268435448;\n
                v21 = *((&v20->field_409 + 1));\n
                v22 = (v21 < v19 ? v19 : v21);\n
                v23 = v21;\n
                v24 = v21 * (v18 - 2) + *((&v20->field_405 + 1));\n
                v25 = a2;\n
                if (!v25)\n
                    cgc_memset(v24, 0, v22);\n
                else\n
                    cgc_memcpy(v24, v25, v22);\n
                if (v23 < a3)\n
                {\n
                    v26 = v23;\n
                    v2 = v18 - 268435448;\n
                    do\n
                    {\n
                        v0 = v26;\n
                        v27 = 0;\n
                        if (*((v20 + 1029)) >= 4)\n
                        {\n
                            v28 = *((v20 + 1025));\n
                            v29 = 3;\n
                            do\n
                            {\n
                                if (!*((v28 + (v29 << 2))) && v2 >= -268435446)\n
                                {\n
                                    while (*((v28 + (v18 << 2))) - 2 < 268435446)\n
                                    ;\n
                                    *((v28 + v18 * 4)) = v29;\n
                                    *((v28 + v29 * 4)) = 268435448;\n
                                    v27 = v29;\n
                                    v20 = v8;\n
                                    break;\n
                                }\n
                                v29 += 1;\n
                            } while (*((v20 + 1029)) != v29);\n
                        }\n
                        v30 = v0;\n
                        v31 = a3 - v30;\n
                        v32 = *((v20 + 1037));\n
                        if (a3 - v30 > v32)\n
                            v31 = v32;\n
                        v33 = v32 * (v27 - 2) + *((v20 + 1033));\n
                        v34 = a2;\n
                        if (v34)\n
                            cgc_memcpy(v33, v34 + v30, v31);\n
                        else\n
                            cgc_memset(v33, 0, v31);\n
                        v26 = v0 + v31;\n
                    } while (v26 < a3);\n
                }\n
                v35 = v1;\n
                DirectoryTree::ClearTree(v35);\n
                v10 = CgFsImg::ParseDirectoryTree(v20, v35, *((DirectoryTree::directory_entry(v35) + 24)));\n
                *(&v10) = 1;\n
                return v10;\n
            }\n
        }\n
    }\n
}\n
", "4217230:sub_40598e": null, "4217232:_ZN7CgFsImg10FileExistsEPKcS1_": "int CgFsImg::FileExists(unsigned int v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // edi\n
    char *v3;  // edi\n
    char *v4;  // ebp\n
    char *v5;  // esi\n
    unsigned int v6;  // edi\n
    char *v7;  // ebp\n
    char *v8;  // edi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    if (cgc_strlen(v3) > 11)\n
        return 0;\n
    v4 = a0;\n
    v5 = operator new[](cgc_strlen(v3) + cgc_strlen(a0) + 2);\n
    cgc_memset(v5, 0, cgc_strlen(v3) + cgc_strlen(v4) + 2);\n
    v6 = cgc_strlen(v4);\n
    cgc_memcpy(v5, v4, cgc_strlen(v4));\n
    if (v5[1 + cgc_strlen(v4)] != 47)\n
    {\n
        v5[v6] = 47;\n
        v6 += 1;\n
    }\n
    v7 = &v5[v6];\n
    v8 = a1;\n
    cgc_memcpy(v7, v8, cgc_strlen(v8));\n
    operator delete[](v5);\n
    return DirectoryTree::FindFile(v1 + 1049);\n
}\n
", "4217489:sub_405a91": null, "4217504:_ZN7CgFsImg17FindUnusedClusterEv": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_405;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
int CgFsImg::FindUnusedCluster(struct_0 *v0)\n
{\n
    struct_0 *v1;  // edx\n
    unsigned int v2;  // ecx\n
    unsigned int v4;  // edx\n
\n
    v1 = v0;\n
    v2 = *((&v1->field_401 + 1));\n
    if (v2 < 4)\n
        return 0;\n
    v4 = 3;\n
    while (true)\n
    {\n
        if (!*((*(&(&v1->padding_0)[1]) + (v4 << 2))))\n
            return v4;\n
        v4 += 1;\n
        if (v2 == v4)\n
            return 0;\n
    }\n
}\n
", "4217555:sub_405ad3": null, "4217568:_ZN7CgFsImg16AddMetadataEntryEP7fs_filej": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[1024];\n
    struct struct_0 *field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    struct struct_1 *field_40d;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CgFsImg::AddMetadataEntry(struct_2 *v5, unsigned int a0, struct_0 *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_1 *v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    struct_0 *v6;  // esi, Other Possible Types: unsigned int\n
    struct_2 *v7;  // ebx, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    struct_1 *v9;  // eax\n
    unsigned int v10;  // edi\n
    void* v11;  // edx, Other Possible Types: unsigned int\n
    void* v12;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int *v15;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v16;  // eax\n
    void* v17;  // edx, Other Possible Types: unsigned int\n
    unsigned int v18;  // eax\n
    struct_1 *v19;  // edx, Other Possible Types: unsigned int\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // esi\n
    unsigned int v22;  // ecx\n
    struct_0 *v23;  // edx, Other Possible Types: unsigned int\n
    unsigned int v24;  // esi\n
    struct_0 *v25;  // eax\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // esi\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // ebp\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = a1;\n
    v7 = v5;\n
    if (v7->field_0)\n
    {\n
        v8 = &v6->field_0 + 2;\n
        if (v8 <= 268435445)\n
        {\n
            v11 = 0;\n
            v12 = 0;\n
            v15 = 0;\n
            do\n
            {\n
                v9 = *((v7 + 1037));\n
                v10 = v9 * v8 + *((v7 + 1033));\n
                v3 = v9;\n
                if (!v15)\n
                {\n
                    v7 = v5;\n
                    v15 = operator new[](24);\n
                    v11 = 2;\n
                    v12 = 0;\n
                }\n
                else if (v12 == v11)\n
                {\n
                    v13 = v11 * 2;\n
                    v2 = v13;\n
                    v1 = v11;\n
                    tmp_5 = v13;\n
                    v14 = v13 * 12;\n
                    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t5, 0xc<32>, 0x0<32>))\n
                        v14 = -1;\n
                    v4 = operator new[](v14);\n
                    cgc_memcpy(v4, v15, v1 * 4 * 3);\n
                    operator delete[](v15);\n
                    v7 = v5;\n
                    v12 = v1;\n
                    v11 = v2;\n
                    v15 = v4;\n
                }\n
                v16 = 3 * v12;\n
                v12 += 1;\n
                *((v15 + v16 * 4)) = v10;\n
                *((v15 + v16 * 4 + 4)) = v3;\n
                *((v15 + v16 * 4 + 8)) = v6;\n
                v6 = *((*((v7 + 1025)) + v6 * 4));\n
                v8 = &v6->field_0 + 2;\n
            } while (v8 < 268435446);\n
            if (v12)\n
            {\n
                v17 = 0;\n
                v1 = v12;\n
                do\n
                {\n
                    v2 = v17;\n
                    v18 = (!(v12 <= v17) ? 0 : v17);\n
                    v19 = v15 + v18 * 12 + 4;\n
                    v20 = -32;\n
                    v3 = v19;\n
                    while (v20 + 64 <= *(v19))\n
                    {\n
                        v21 = *((v19 - 4));\n
                        v12 = v1;\n
                        v7 = v5;\n
                        v19 = v3;\n
                        v20 += 32;\n
                        if (CgFsFile::FreeEntry())\n
                        {\n
                            v24 = v21 + v20;\n
                            return cgc_memcpy(v24, a0, 32);\n
                        }\n
                    }\n
                    v17 = v2 + 1;\n
                } while (v17 < v12);\n
            }\n
        }\n
    }\n
    v22 = *((v7 + 1029));\n
    v23 = 0;\n
    if (v22 >= 4)\n
    {\n
        v25 = *((v7 + 1025));\n
        v26 = 3;\n
        do\n
        {\n
            if (!(&v25->field_0)[v26])\n
            {\n
                v27 = a1;\n
                v31 = a0;\n
                if (v27 - 268435448 >= -268435446)\n
                {\n
                    do\n
                    {\n
                        v28 = v27;\n
                        v27 = (&v25->field_0)[v27];\n
                    } while (v27 - 2 < 268435446);\n
                    (&v25->field_0)[v28] = v26;\n
                    (&v25->field_0)[v26] = 268435448;\n
                    v7 = v5;\n
                    if (*((&v7->field_401 + 1)) > v26)\n
                    {\n
                        v29 = *((&v7->field_409 + 1));\n
                        cgc_memset(v29 * (v26 - 2) + *((&v7->field_405 + 1)), 0, v29);\n
                        v7 = v5;\n
                    }\n
                    v23 = v26;\n
                    goto LABEL_405c91;\n
                }\n
            }\n
            v26 += 1;\n
        } while (v22 != v26);\n
        goto LABEL_405c91;\n
    }\n
    v31 = a0;\n
LABEL_405c91:\n
    v30 = *((v7 + 1037)) * (v23 - 2) + *((v7 + 1033));\n
    return cgc_memcpy(v30, v31, 32);\n
}\n
", "4217631:sub_405b1f": null, "4218184:sub_405d48": null, "4218192:_ZN7CgFsImg10AddClusterEj": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_0 *field_401;\n
    unsigned int field_405;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int CgFsImg::AddCluster(struct_1 *v0, struct_0 *a0)\n
{\n
    struct_1 *v1;  // ecx\n
    unsigned int v2;  // edi\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *((&v1->field_401 + 1));\n
    if (v2 < 4)\n
        return 0;\n
    v6 = a0;\n
    v3 = *(&(&v1->padding_0)[1]);\n
    v4 = 3;\n
    while (*((v3 + (v4 << 2))))\n
    {\n
        v4 += 1;\n
        if (v2 == v4)\n
            return 0;\n
    }\n
    if (&v6[16777215].padding_4[4] < -268435446)\n
        return 0;\n
    do\n
    {\n
        v5 = v6;\n
        v6 = *((v3 + v6 * 4));\n
    } while (v6 - 2 < 268435446);\n
    *((v3 + v5 * 4)) = v4;\n
    *((v3 + v4 * 4)) = 268435448;\n
    return v4;\n
}\n
", "4218303:sub_405dbf": null, "4218304:_ZN7CgFsImg11RebuildTreeEv": "int CgFsImg::RebuildTree(void* v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // edi\n
\n
    v0 = v2;\n
    DirectoryTree::ClearTree(v1 + 1049);\n
    return CgFsImg::ParseDirectoryTree(v1, v1 + 1049, *((DirectoryTree::directory_entry(v1 + 1049) + 24)));\n
}\n
", "4218369:sub_405e01": null, "4218384:_ZN7CgFsImg12AddDirectoryEPKcS1_": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_1;\n
\n
int CgFsImg::AddDirectory(struct_0 *v7, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x38]\n
    char v2;  // [bp-0x34]\n
    char v3;  // [bp-0x29]\n
    char v4;  // [bp-0x28]\n
    unsigned int *v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18]\n
    char *v8;  // esi\n
    unsigned int v9;  // eax\n
    char *v10;  // ebp\n
    struct_0 *v11;  // edi\n
    struct_2 *v12;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15[4];  // edx\n
    unsigned int *v16;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v17;  // edx\n
    unsigned int v18;  // ecx\n
    struct_0 *v19;  // esi\n
    unsigned int v20;  // edi\n
\n
    v8 = a0;\n
    if (!v8)\n
        return 0;\n
    v10 = a1;\n
    if (!a1)\n
        return 0;\n
    if (cgc_strlen(v10) > 11)\n
        return 0;\n
    v11 = v7;\n
    if (!CgFsImg::FileExists(v11, v8, v10))\n
    {\n
        v1 = &v11[1].padding_0[5];\n
        v12 = DirectoryTree::FindFile(v1);\n
        if (v12 && CgFsFile::IsDirectory())\n
        {\n
            v14 = *((&v11->field_401 + 1));\n
            if (v14 >= 4)\n
            {\n
                v15 = *(&(&v11->padding_0)[1]);\n
                v16 = 3;\n
                while (v15[v16])\n
                {\n
                    v16 += 1;\n
                    if (v14 == v16)\n
                        return 0;\n
                }\n
                if (v14 > v16)\n
                {\n
                    v17 = v7;\n
                    v18 = *((&v17->field_409 + 1));\n
                    cgc_memset(v18 * (v16 - 2) + *((&v17->field_405 + 1)), 0, v18);\n
                }\n
                v5 = v16;\n
                cgc_memset(&v2, 32, 11);\n
                cgc_memcpy(&v2, v10, cgc_strlen(v10));\n
                v3 = 16;\n
                cgc_memset(&v4, 0, 12);\n
                v6 = 0;\n
                v0 = v12->field_18;\n
                v19 = v7;\n
                CgFsImg::AddMetadataEntry(v19, &v2, v0);\n
                *((*(&(&v19->padding_0)[1]) + v16 * 4)) = 268435448;\n
                v20 = v1;\n
                DirectoryTree::ClearTree(v20);\n
                v9 = CgFsImg::ParseDirectoryTree(v19, v20, *((DirectoryTree::directory_entry(v20) + 24)));\n
                *(&v9) = 1;\n
                return v9;\n
            }\n
        }\n
    }\n
}\n
", "4218771:sub_405f93": null, "4218784:_ZN7CgFsImg12ClearClusterEj": "typedef struct struct_0 {\n
    char padding_0[1029];\n
    unsigned int field_405;\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
int CgFsImg::ClearCluster(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    struct_0 *v2;  // ecx\n
\n
    v1 = a0;\n
    if (v1 < 2)\n
        return a0;\n
    v2 = v0;\n
    if (*(&(&v2->padding_0)[1]) > v1)\n
        return cgc_memset(*((&v2->field_409 + 1)) * (v1 - 2) + *((&v2->field_405 + 1)), 0, *((&v0->field_409 + 1)));\n
    return a0;\n
}\n
", "4218861:sub_405fed": null, "4218864:_ZN7CgFsImg10DeleteFileEPKc": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_0 *field_401;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int CgFsImg::DeleteFile(struct_1 *v0, unsigned int a0)\n
{\n
    struct_1 *v1;  // ecx\n
    unsigned int v2;  // ebp\n
    struct_2 *v3;  // eax\n
    struct struct_0 **v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    struct struct_0 **v6;  // edx\n
    unsigned int v7;  // eax\n
\n
    v1 = v0;\n
    v2 = &v1[1].padding_0[17];\n
    v3 = DirectoryTree::FindFile(&v1[1].padding_0[17]);\n
    if (!(v3 && CgFsFile::IsFile()))\n
        return 0;\n
    v4 = v3->field_18;\n
    if (v4 + 67108862 >= -268435446)\n
    {\n
        v5 = *(&(&v0->padding_0)[1]);\n
        do\n
        {\n
            v6 = *((v5 + v4 * 4));\n
            *((v5 + v4 * 4)) = 0;\n
            v4 = v6;\n
        } while (v6 + 2 < 268435446);\n
    }\n
    CgFsFile::DeleteMetadataEntry();\n
    DirectoryTree::ClearTree(v2);\n
    v7 = CgFsImg::ParseDirectoryTree(v0, v2, *((DirectoryTree::directory_entry(v2) + 24)));\n
    *(&v7) = 1;\n
    return v7;\n
}\n
", "4219052:sub_4060ac": null, "4219056:_ZN7CgFsImg16ClearAllClustersEj": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_0 *field_401;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int CgFsImg::ClearAllClusters(struct_1 *v0, struct struct_0 **a0)\n
{\n
    struct struct_0 **v1;  // eax\n
    struct struct_0 **v2;  // ecx\n
    unsigned int v3;  // edx\n
    struct struct_0 **v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    if (v1 + 67108862 >= -268435446)\n
    {\n
        v2 = *(&(&v0->padding_0)[1]);\n
        v3 = v1;\n
        do\n
        {\n
            v4 = v2[v3];\n
            v2[v3] = 0;\n
            v3 = v4;\n
        } while (v4 + 2 < 268435446);\n
    }\n
    v5 = v1 + 2;\n
    *(&v5) = v5 < 268435446;\n
    return v5;\n
}\n
", "4219125:sub_4060f5": null, "4219136:_ZN7CgFsImg15DeleteDirectoryEPKc": "int CgFsImg::DeleteDirectory(unsigned int v0, unsigned int a0)\n
{\n
    void* v1;  // edi\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = v1 + 1049;\n
    v3 = DirectoryTree::FindDirectory(v1 + 1049);\n
    v4 = v3;\n
    if (v3)\n
    {\n
        CgFsImg::DeleteDirectoryHelper(v1, v3);\n
        DirectoryTree::ClearTree(v2);\n
        v3 = CgFsImg::ParseDirectoryTree(v1, v2, *((DirectoryTree::directory_entry(v2) + 24)));\n
    }\n
    *(&v3) = v4;\n
    return v3;\n
}\n
", "4219254:sub_406176": null, "4219264:_ZN7CgFsImg21DeleteDirectoryHelperEP13DirectoryTreeb": "typedef struct struct_1 {\n
    struct struct_1 *field_0;\n
    char padding_4[20];\n
    struct struct_0 *field_18;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int CgFsImg::DeleteDirectoryHelper(struct_1 *v6)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    char v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    struct_1 *v5;  // [bp+0x0], Other Possible Types: unsigned int, struct_2 *\n
    void* v7;  // [bp+0x8], Other Possible Types: char\n
    char v8;  // [bp+0xc]\n
    struct_1 *v9;  // [bp+0x10], Other Possible Types: unsigned int\n
    void* v10;  // [bp+0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x18]\n
    char v15;  // [bp+0x30]\n
    char v16;  // [bp+0x34]\n
    char v17;  // [bp+0x38]\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // esi\n
    struct_1 *v21;  // esi, Other Possible Types: unsigned int\n
    void* v22;  // eax, Other Possible Types: unsigned int\n
    struct_1 *v23;  // esi\n
    void* v24;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v25;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v26;  // esi, Other Possible Types: unsigned int\n
    unsigned int v27;  // eax\n
    struct_1 *v28;  // ebp, Other Possible Types: unsigned int\n
    void* v29;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v30;  // eax, Other Possible Types: unsigned int\n
    unsigned int v31;  // ecx\n
    struct_1 *v32;  // eax\n
    struct struct_0 **v33;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v34;  // edx\n
    struct struct_0 **v35;  // ebp\n
    struct_2 *v36;  // eax\n
    struct struct_0 **v37;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v38;  // edx\n
    struct struct_0 **v39;  // esi\n
\n
    v4 = v18;\n
    v3 = v19;\n
    v2 = v20;\n
    v25 = *(&v7);\n
    if (!v25)\n
        return v27;\n
    v0 = v25;\n
    v26 = &v1;\n
    DirectoryTree::subdirectories(&v1);\n
    if (*(&v1))\n
    {\n
        v24 = 0;\n
        do\n
        {\n
            v6 = v25;\n
            v5 = v26;\n
            DirectoryTree::subdirectories(v26);\n
            v21 = *(&v8);\n
            if (!v21)\n
            {\n
                v10 = 0;\n
                v11 = 2;\n
                v5 = 56;\n
                v21 = operator new[](56);\n
                v5 = v21;\n
                DirectoryTree::__ctor__();\n
                v5 += 1;\n
                DirectoryTree::__ctor__();\n
                v9 = v5;\n
            }\n
            v22 = v24;\n
            if (v10 <= v24)\n
                v22 = 0;\n
            v23 = v21 + v22 * 9 * 3 + v22;\n
            v5 = *(&v15);\n
            v6 = v23;\n
            v7 = 0;\n
            CgFsImg::DeleteDirectoryHelper(*(&v15));\n
            v24 += 1;\n
            v25 = *(&v16);\n
            v6 = v25;\n
            v26 = &v9;\n
            v5 = &v9;\n
            DirectoryTree::subdirectories(&v9);\n
        } while (v24 < v9);\n
    }\n
    v6 = v25;\n
    v5 = v26;\n
    v27 = DirectoryTree::file_list(v26);\n
    if (v9)\n
    {\n
        v28 = v26;\n
        v29 = 0;\n
        do\n
        {\n
            v6 = v25;\n
            v5 = v28;\n
            DirectoryTree::file_list(v28);\n
            v30 = *(&v8);\n
            if (!v30)\n
            {\n
                v10 = 0;\n
                v11 = 2;\n
                v5 = 8;\n
                v30 = operator new[](8);\n
                v9 = v30;\n
            }\n
            v31 = (!(v10 <= v29) ? 0 : v29);\n
            v32 = *((v30 + v31 * 4));\n
            v33 = *((v5 + 24));\n
            if (v33 + 67108862 >= -268435446)\n
            {\n
                v34 = *((*(&v15) + 1025));\n
                do\n
                {\n
                    v35 = *((v34 + v33 * 4));\n
                    *((v34 + v33 * 4)) = 0;\n
                    v33 = v35;\n
                } while (v35 + 2 < 268435446);\n
            }\n
            v5 = v32;\n
            CgFsFile::DeleteMetadataEntry();\n
            v29 += 1;\n
            v25 = *(&v16);\n
            v6 = v25;\n
            v28 = &v9;\n
            v5 = &v9;\n
            v27 = DirectoryTree::file_list(&v9);\n
        } while (v29 < v9);\n
    }\n
    if (!v17)\n
    {\n
        v5 = v25;\n
        v36 = DirectoryTree::directory_entry();\n
        v37 = v36->field_18;\n
        if (v37 + 67108862 >= -268435446)\n
        {\n
            v38 = *((*(&v15) + 1025));\n
            do\n
            {\n
                v39 = *((v38 + v37 * 4));\n
                *((v38 + v37 * 4)) = 0;\n
                v37 = v39;\n
            } while (v39 + 2 < 268435446);\n
        }\n
        v5 = v36;\n
        v27 = CgFsFile::DeleteMetadataEntry();\n
    }\n
}\n
", "4219329:sub_4061c1": null, "4219537:sub_406291": null, "4219831:sub_4063b7": null, "4219840:_ZN7CgFsImg11PreviewFileEPKcPPcPj": "typedef struct struct_0 {\n
    char padding_0[1033];\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
int CgFsImg::PreviewFile(struct_0 *v2, unsigned int a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int *v0;  // [bp-0x18]\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // ebp\n
    unsigned int v5[8];  // eax\n
    unsigned int v6[8];  // esi\n
    unsigned int v7;  // edi\n
    char *v9;  // edi\n
    unsigned int *v11;  // eax, Other Possible Types: unsigned int\n
    unsigned int v12;  // eax\n
    unsigned int *v13;  // esi\n
    char *v14;  // eax\n
\n
    *(a2) = 0;\n
    if (!a0)\n
    {\n
        return 0;\n
    }\n
    else if (!a1)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v4 = v2;\n
        v5 = DirectoryTree::FindFile(&v2[1].padding_0[5]);\n
        if (!v5)\n
            return 0;\n
        v6 = v5;\n
        if (CgFsFile::IsFile())\n
        {\n
            v7 = v5[6];\n
            v3 = v7 - 268435449;\n
            if (v3 >= -268435447)\n
            {\n
                v1 = v3;\n
                v12 = *((&v4->field_409 + 1));\n
                v9 = v12 * (v7 - 2) + *(&(&v4->padding_0)[1]);\n
                if (v12 >= v6[7])\n
                {\n
                    v0 = &v6[7];\n
                    tmp_6 = CgFsFile::IsDirectory();\n
                    v11 = v0;\n
                    if (tmp_6)\n
                        v11 = &v4->field_409 + 1;\n
                    v12 = *(v11);\n
                }\n
                v13 = a2;\n
                *(v13) = v12;\n
                v14 = operator new[](v12);\n
                *(a1) = v14;\n
                cgc_memcpy(v14, v9, *(v13));\n
                v3 = v1;\n
            }\n
            *(&v3) = !(v3 < -268435447);\n
            return v3;\n
        }\n
    }\n
}\n
", "4220081:sub_4064b1": null, "4220096:_ZN7CgFsImg12ReadFromFileEPKcjjPPcPj": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    struct struct_1 *field_401;\n
    char padding_405[4];\n
    unsigned int field_409;\n
    unsigned int field_40d;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_1 *field_18;\n
    unsigned int field_1c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CgFsImg::ReadFromFile(struct_0 *v9, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int *a3, unsigned int *a4)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    int tmp_4;  // tmp #4\n
    int tmp_3;  // tmp #3\n
    unsigned int *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int *v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int *v8;  // [bp-0x14]\n
    unsigned int v10;  // eax\n
    unsigned int *v11;  // esi\n
    struct_2 *v12;  // eax\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ebp\n
    struct_0 *v17;  // edx, Other Possible Types: unsigned int\n
    unsigned int *v18;  // esi, Other Possible Types: unsigned int\n
    unsigned int v19;  // ebp\n
    unsigned int *v20;  // ebx, Other Possible Types: unsigned int\n
    unsigned int *v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v22;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v23;  // ebp\n
    unsigned int *v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int *v26;  // edi\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // ecx\n
    unsigned int v30;  // ebx\n
    unsigned int *v31;  // edx\n
    unsigned int v32;  // eax\n
    void* v33;  // eax, Other Possible Types: unsigned int\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int *v36;  // eax\n
    unsigned int v37;  // ebp\n
    unsigned int *v38;  // esi, Other Possible Types: unsigned int\n
\n
    *(a4) = 0;\n
    if (!a0)\n
        return 0;\n
    v11 = a3;\n
    if (!v11)\n
        return 0;\n
    v12 = DirectoryTree::FindFile(&v9[1].padding_1[4]);\n
    if (!(v12 && CgFsFile::IsFile()))\n
        return 0;\n
    v14 = a1;\n
    v15 = v12->field_1c;\n
    if (v15 >= v14)\n
    {\n
        v2 = &_GLOBAL_OFFSET_TABLE_;\n
        v16 = a2;\n
        if (!a2)\n
            v16 = v15;\n
        if (v14 + v16 > v15)\n
            v16 = v15 - v14;\n
        v7 = v16;\n
        v10 = operator new[](v16);\n
        v6 = v10;\n
        *(v11) = v10;\n
        v17 = v9;\n
        if (v17->field_0)\n
        {\n
            v10 = a1;\n
            v4 = v10;\n
            v18 = v12->field_18;\n
            v19 = v18 + 2;\n
            if (v18 + 2 <= 268435445)\n
            {\n
                v20 = 0;\n
                v21 = 0;\n
                v22 = 0;\n
                do\n
                {\n
                    v0 = *((v17 + 1037));\n
                    v23 = v0 * v19 + *((v17 + 1033));\n
                    if (!v22)\n
                    {\n
                        v17 = v9;\n
                        v22 = operator new[](24);\n
                        v20 = 2;\n
                        v21 = 0;\n
                    }\n
                    else if (v21 == v20)\n
                    {\n
                        v24 = v20 * 2;\n
                        v1 = v24;\n
                        tmp_4 = v24;\n
                        v25 = v24 * 12;\n
                        if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t4, 0xc<32>, 0x0<32>))\n
                            v25 = -1;\n
                        v5 = v20;\n
                        v3 = v22;\n
                        v8 = operator new[](v25);\n
                        v26 = v3;\n
                        cgc_memcpy(v8, v26, v20 * 4 * 3);\n
                        operator delete[](v26);\n
                        v17 = v9;\n
                        v21 = v5;\n
                        v20 = v1;\n
                        v22 = v8;\n
                    }\n
                    v27 = v21 * 3;\n
                    v21 += 1;\n
                    *((v22 + v27 * 4)) = v23;\n
                    *((v22 + v27 * 4 + 4)) = v0;\n
                    *((v22 + v27 * 4 + 8)) = v18;\n
                    v10 = *((v17 + 1025));\n
                    v18 = *((v10 + v18 * 4));\n
                    v19 = v18 - 2;\n
                } while (v18 - 2 < 268435446);\n
                if (v21)\n
                {\n
                    v10 = *(a4);\n
                    v38 = 0;\n
                    while (true)\n
                    {\n
                        v28 = v7 - v10;\n
                        if (v7 <= v10)\n
                            break;\n
                        v0 = v10;\n
                        v3 = v22;\n
                        v29 = *((v17 + 1037));\n
                        v1 = v38 + 1;\n
                        v30 = v4;\n
                        if (v30 < v38 * v29)\n
                        {\n
LABEL_406672:\n
                            v22 = v3;\n
                            v10 = v0;\n
                            goto LABEL_40667a;\n
                        }\n
                        else\n
                        {\n
                            if (!(v30 < v1 * v29))\n
                                goto LABEL_406672;\n
                            v31 = (0 CONCAT v30) /m v29 >> 32;\n
                            if (v28 > v29)\n
                                v28 = v29;\n
                            v32 = v31 + v28;\n
                            tmp_3 = v32;\n
                            v33 = v32 - v29;\n
                            if (tmp_3 < v29)\n
                                v33 = 0;\n
                            v34 = v28 - v33;\n
                            v0 += v6;\n
                            v35 = v3;\n
                            v4 = v30;\n
                            if (!v35)\n
                            {\n
                                v35 = operator new[](24);\n
                                v21 = 0;\n
                            }\n
                            v5 = v31;\n
                            if (v21 <= v38)\n
                                v38 = 0;\n
                            cgc_memcpy(v0, *((v35 + v38 * 12)) + v31, v34);\n
                            v22 = v35;\n
                            v17 = v9;\n
                            v4 = v4 - v5 + *((&v17->field_409 + 1));\n
                            v36 = a4;\n
                            v37 = v34 + *(v36);\n
                            *(v36) = v37;\n
                            v10 = v37;\n
LABEL_40667a:\n
                            v38 = v1;\n
                            if (v38 >= v21)\n
                                break;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
        *(&v10) = 1;\n
        return v10;\n
    }\n
}\n
", "4220295:sub_406587": null, "4220770:sub_406762": null, "4220784:_ZN7CgFsImg11WriteToFileEPKcjjPcPj": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[1024];\n
    struct struct_0 *field_401;\n
    char padding_405[4];\n
    unsigned int field_409;\n
    struct struct_0 *field_40d;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CgFsImg::WriteToFile(struct_1 *v7, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int *a4)\n
{\n
    unsigned int *v0;  // [bp-0x2c]\n
    int tmp_5;  // tmp #5\n
    int tmp_3;  // tmp #3\n
    int tmp_4;  // tmp #4\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int *v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int *v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // esi\n
    struct struct_0 *v10[8];  // eax\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edx\n
    struct_1 *v14;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // edi\n
    void* v17;  // ebx, Other Possible Types: unsigned int\n
    void* v18;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v19;  // edx, Other Possible Types: unsigned int\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // eax\n
    unsigned int v22;  // eax\n
    unsigned int *v23;  // ecx\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // edx\n
    unsigned int v26;  // edi\n
    unsigned int *v27;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v28;  // ecx\n
    unsigned int v29;  // ebx\n
    unsigned int *v30;  // edx\n
    unsigned int v31;  // eax\n
    void* v32;  // eax, Other Possible Types: unsigned int\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ecx\n
    unsigned int v35;  // ebx\n
    unsigned int v36;  // eax\n
    unsigned int *v37;  // esi\n
    unsigned int v38;  // edi\n
    unsigned int *v39;  // esi, Other Possible Types: unsigned int\n
\n
    *(a4) = 0;\n
    if (!a0)\n
        return 0;\n
    v9 = a2;\n
    if (!v9)\n
    {\n
        return 0;\n
    }\n
    else if (!a3)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v10 = DirectoryTree::FindFile(&v7[1].padding_1[4]);\n
        if (!(v10 && CgFsFile::IsFile()))\n
            return 0;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        v12 = a1;\n
        v8 = v10[7];\n
        v13 = v8 - a1;\n
        if (v8 >= a1)\n
        {\n
            if (v9 + v12 <= v8)\n
                v13 = v9;\n
            v6 = v13;\n
            *(&v8) = 1;\n
            v14 = v7;\n
            if (!v14->field_0)\n
                return v8;\n
            v15 = v10[6];\n
            v16 = v15 - 2;\n
            if (v16 > 268435445)\n
                return v8;\n
            v3 = v12;\n
            v17 = 0;\n
            v18 = 0;\n
            v19 = 0;\n
            do\n
            {\n
                v0 = *((v14 + 1037));\n
                v20 = v0 * v16 + *((v14 + 1033));\n
                if (!v19)\n
                {\n
                    v14 = v7;\n
                    v19 = operator new[](24);\n
                    v17 = 2;\n
                    v18 = 0;\n
                }\n
                else if (v18 == v17)\n
                {\n
                    v21 = v17 * 2;\n
                    v1 = v21;\n
                    v2 = v19;\n
                    tmp_5 = v21;\n
                    v22 = v21 * 12;\n
                    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t5, 0xc<32>, 0x0<32>))\n
                        v22 = -1;\n
                    v18 = v17;\n
                    v23 = operator new[](v22);\n
                    v5 = v23;\n
                    cgc_memcpy(v5, v2, v17 * 4 * 3);\n
                    operator delete[](v2);\n
                    v14 = v7;\n
                    v17 = v1;\n
                    v19 = v5;\n
                }\n
                v24 = 3 * v18;\n
                v18 += 1;\n
                *((v19 + v24 * 4)) = v20;\n
                *((v19 + v24 * 4 + 4)) = v0;\n
                *((v19 + v24 * 4 + 8)) = v15;\n
                v8 = *((v14 + 1025));\n
                v15 = *((v8 + v15 * 4));\n
                v16 = v15 - 2;\n
            } while (v16 < 268435446);\n
            if (!v18)\n
            {\n
                *(&v8) = 1;\n
                return v8;\n
            }\n
            v2 = v19;\n
            v8 = a4;\n
            v25 = *(v8);\n
            v39 = 0;\n
            *(&v8) = 1;\n
            while (true)\n
            {\n
                v26 = v6;\n
                tmp_3 = v26;\n
                v27 = v26 - v25;\n
                if (tmp_3 <= v25)\n
                    return v8;\n
                v1 = v25;\n
                v28 = *((v14 + 1037));\n
                v0 = v39 + 1;\n
                v29 = v3;\n
                if (v29 < v39 * v28)\n
                {\n
LABEL_40690c:\n
                    v14 = v7;\n
                    v39 = v0;\n
                    v25 = v1;\n
                    if (v39 >= v18)\n
                        return v8;\n
                }\n
                else\n
                {\n
                    if (!(v29 < v0 * v28))\n
                        goto LABEL_40690c;\n
                    v30 = (0 CONCAT v29) /m v28 >> 32;\n
                    if (v27 > v28)\n
                        v27 = v28;\n
                    v5 = v30;\n
                    v31 = v30 + v27;\n
                    tmp_4 = v31;\n
                    v32 = v31 - v28;\n
                    if (tmp_4 < v28)\n
                        v32 = 0;\n
                    v33 = v27 - v32;\n
                    v34 = v2;\n
                    v3 = v29;\n
                    v35 = v1;\n
                    if (!v34)\n
                    {\n
                        v34 = operator new[](24);\n
                        v35 = *(a4);\n
                        v18 = 0;\n
                    }\n
                    if (v18 <= v39)\n
                        v39 = 0;\n
                    v2 = v34;\n
                    v36 = *((v34 + v39 * 12));\n
                    v37 = v5;\n
                    cgc_memcpy(v36 + v37, v35 + a3, v33);\n
                    v14 = v7;\n
                    v3 = v3 - v37 + *((v14 + 1037));\n
                    v8 = a4;\n
                    v38 = v33 + *(v8);\n
                    *(v8) = v38;\n
                    v25 = v38;\n
                    *(&v8) = 1;\n
                    v39 = v0;\n
                    if (v39 >= v18)\n
                        return v8;\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4220954:sub_40681a": null, "4221444:sub_406a04": null, "4221456:_ZN7CgFsImg14UpdateFileSizeEPKcj": "typedef struct struct_1 {\n
    char padding_0[1025];\n
    struct struct_0 *field_401;\n
    unsigned int field_405;\n
    char padding_409[4];\n
    unsigned int field_40d;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    struct struct_0 *field_18;\n
    unsigned int field_1c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int CgFsImg::UpdateFileSize(struct_1 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    struct_2 *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    struct_1 *v8;  // esi\n
    struct_2 *v9;  // eax\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // edx\n
    struct_1 *v15;  // esi\n
    struct_0 *v16;  // ebx\n
    unsigned int v22;  // ecx\n
    unsigned int v26;  // ebx\n
\n
    v6 = a0;\n
    if (!v6)\n
        return 0;\n
    if (!a1)\n
        return 0;\n
    v8 = v5;\n
    v0 = v6;\n
    v9 = DirectoryTree::FindFile(&v8[1].padding_0[5]);\n
    if (!v9)\n
    {\n
LABEL_406b62:\n
        return 0;\n
    }\n
    if (!CgFsFile::IsFile())\n
        goto LABEL_406b62;\n
    v11 = v9->field_1c;\n
    v12 = *(&v8->padding_409[1]);\n
    v26 = (0 CONCAT v11 - 1) /m v12 + 1;\n
    v13 = (0 CONCAT a1 - 1) /m v12;\n
    v22 = a1;\n
    v14 = v13;\n
    v7 = v13 + 1;\n
    v3 = v7;\n
    *(&v7) = 1;\n
    if (v11 == v22)\n
        return v7;\n
    *(&v7) = 1;\n
    if ([D] x86g_calculate_condition(0x2<32>, 0x6<32>, edi<4>, ecx<4>, 0x0<32>))\n
    {\n
        v15 = v5;\n
        if (v26 <= v14)\n
        {\n
            v1 = v26;\n
            v2 = v9;\n
            v16 = *(&(&v15->padding_0)[1]);\n
            v4 = v14;\n
        }\n
    }\n
    if (v26 <= v3)\n
        goto LABEL_0x406c0d;\n
    else\n
        goto LABEL_0x406b7a;\n
}\n
", "4221973:sub_406c15": null, "4221984:_ZN7CgFsImg10PopClusterEjPj": "typedef struct struct_0 {\n
    char padding_0[1025];\n
    struct struct_1 *field_401;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int CgFsImg::PopCluster(struct_0 *v0, unsigned int *a0, unsigned int *a1)\n
{\n
    unsigned int *v1;  // edx, Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // esi\n
    unsigned int *v4;  // ebp\n
    unsigned int v5;  // ebx\n
\n
    v1 = a0;\n
    v2 = v1 + 67108862;\n
    if (v2 >= -268435446)\n
    {\n
        v3 = *(&(&v0->padding_0)[1]);\n
        v4 = v1;\n
        do\n
        {\n
            v5 = v1;\n
            v1 = v4;\n
        } while (*((v3 + (v4 << 2))) - 2 < 268435446);\n
        *((v3 + v5 * 4)) = 268435448;\n
        *((v3 + v4 * 4)) = 0;\n
        *(a1) = v4;\n
    }\n
    *(&v2) = !(v2 < -268435446);\n
    return v2;\n
}\n
", "4222085:sub_406c85": null, "4222096:_ZN7CgFsImg13DebugMetadataEv": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1024];\n
    struct struct_1 *field_401;\n
    unsigned int field_405;\n
    struct struct_1 *field_409;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern void* cgc_stdout;\n
extern unsigned int g_40a395;\n
extern unsigned int g_40a3b2;\n
extern unsigned int g_40a3c5;\n
extern unsigned int g_40a3e9;\n
extern unsigned int g_40a3f0;\n
extern unsigned int g_40a417;\n
extern unsigned int g_40a88a;\n
extern unsigned int g_40a88b;\n
\n
int CgFsImg::DebugMetadata(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v3;  // edi\n
    char *v4;  // esi, Other Possible Types: unsigned int\n
    char *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
\n
    v3 = v2;\n
    if (!v3->field_0)\n
        return v6;\n
    debug_bhdr();\n
    cgc_printf(&g_40a88a);\n
    debug_fs_info();\n
    cgc_printf(&g_40a88a);\n
    cgc_printf(&g_40a395);\n
    v0 = *((&v3->field_401 + 1));\n
    cgc_printf(&g_40a3b2);\n
    cgc_printf(&g_40a3c5);\n
    v4 = 0;\n
    do\n
    {\n
        v0 = *((*(&(&v3->padding_1)[1]) + v4));\n
        cgc_printf(&g_40a3e9);\n
        v4 += 1;\n
    } while (v4 != 128);\n
    v1 = &g_40a88b;\n
    cgc_printf(&g_40a88b);\n
    cgc_printf(&g_40a3f0);\n
    v5 = 0;\n
    do\n
    {\n
        v0 = *((*((&v2->field_405 + 1)) + v5));\n
        cgc_printf(&g_40a3e9);\n
        v5 += 1;\n
    } while (v5 != 64);\n
    cgc_printf(v1);\n
    cgc_printf(&g_40a417);\n
    v6 = cgc_fflush(cgc_stdout);\n
    return v6;\n
}\n
", "4222410:sub_406dca": null, "4222416:_ZN7CgFsImg18ParseDirectoryTreeEP13DirectoryTree": "int CgFsImg::ParseDirectoryTree(void* v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // edi\n
\n
    v0 = v2;\n
    return CgFsImg::ParseDirectoryTree(v1, a0, *((DirectoryTree::directory_entry() + 24)));\n
}\n
", "4222468:sub_406e04": null, "4222480:_ZN5ArrayI12cluster_dataE6AppendERKS0_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Array::Append(struct_0 *v0, unsigned int a0[3])\n
{\n
    struct_2 *v1;  // edi\n
    unsigned int v2;  // esi\n
    unsigned int v3[3];  // ebp\n
    unsigned int *v4;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int *v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
\n
    v1 = v0;\n
    v2 = v1->field_0;\n
    if (!v2)\n
    {\n
        v1->field_4 = 0;\n
        v1->field_8 = 2;\n
        v2 = operator new[](24);\n
        v1->field_0 = v2;\n
    }\n
    v3 = a0;\n
    v7 = v1->field_4;\n
    if (v7 == v1->field_8)\n
    {\n
        v4 = v7 * 2;\n
        v1->field_8 = v4;\n
        v2 = operator new[](([D] x86g_calculate_condition(0x1<32>, 0x24<32>, ecx<4>, 0xc<32>, 0x0<32>) ? -1 : v4 * 12));\n
        cgc_memcpy(v2, v1->field_0, v1->field_4 * 4 * 3);\n
        v6 = v1->field_0;\n
        if (v6)\n
            operator delete[](v6);\n
        v1->field_0 = v2;\n
        v7 = v1->field_4;\n
    }\n
    v1->field_4 = v7 + 1;\n
    v8 = v7 * 3;\n
    *((v2 + v8 * 4 + 8)) = v3[2];\n
    v9 = v3[0];\n
    *((v2 + v8 * 4 + 4)) = v3[1];\n
    *((v2 + v8 * 4)) = v9;\n
    return v8;\n
}\n
", "4222666:sub_406eca": null, "4222672:_Z10debug_bhdrRK4bhdr": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
    unsigned short field_c;\n
    unsigned short field_e;\n
    char field_10;\n
    unsigned short field_11;\n
    unsigned short field_13;\n
    char field_15;\n
    unsigned short field_16;\n
    unsigned short field_18;\n
    char padding_1a[2];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
    unsigned short field_28;\n
    unsigned short field_2a;\n
    unsigned int field_2c;\n
    unsigned short field_30;\n
    unsigned short field_32;\n
    char padding_34[30];\n
    char field_52;\n
    char field_53;\n
    char field_54;\n
    char field_55;\n
    char field_56;\n
    char field_57;\n
    char field_58;\n
    char field_59;\n
    char padding_5a[420];\n
    char field_1fe;\n
    char field_1ff;\n
} struct_0;\n
\n
extern void* cgc_stdout;\n
extern unsigned int g_40a45b;\n
extern unsigned int g_40a471;\n
extern unsigned int g_40a48a;\n
extern unsigned int g_40a4a4;\n
extern unsigned int g_40a4b9;\n
extern unsigned int g_40a4d3;\n
extern unsigned int g_40a4ef;\n
extern unsigned int g_40a4ff;\n
extern unsigned int g_40a50b;\n
extern unsigned int g_40a522;\n
extern unsigned int g_40a53d;\n
extern unsigned int g_40a572;\n
extern unsigned int g_40a58e;\n
extern unsigned int g_40a5a5;\n
extern unsigned int g_40a5b2;\n
extern unsigned int g_40a5c8;\n
extern unsigned int g_40a5e0;\n
extern unsigned int g_40a635;\n
extern unsigned int g_40a674;\n
extern unsigned int g_40a69c;\n
extern unsigned int g_40a88b;\n
\n
int debug_bhdr(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v3;  // esi\n
\n
    v3 = v2;\n
    cgc_printf(\"****Bios Header Information****\\n
\");\n
    v0 = v3->field_e;\n
    cgc_printf(&g_40a45b);\n
    v0 = v3->field_b;\n
    cgc_printf(&g_40a471);\n
    v0 = v3->field_c;\n
    cgc_printf(&g_40a48a);\n
    v0 = v3->field_10;\n
    cgc_printf(&g_40a4a4);\n
    v0 = *(&(&v3->field_10)[1]);\n
    cgc_printf(&g_40a4b9);\n
    v0 = *((&v3->field_11 + 1));\n
    cgc_printf(&g_40a4d3);\n
    v0 = *(&v3->field_13 + 1);\n
    cgc_printf(&g_40a4ef);\n
    v0 = *(&v3->field_15);\n
    cgc_printf(&g_40a4ff);\n
    v0 = v3->field_16;\n
    cgc_printf(&g_40a50b);\n
    v0 = *(&v3->padding_1a);\n
    cgc_printf(&g_40a522);\n
    v0 = v3->field_1c;\n
    cgc_printf(&g_40a53d);\n
    cgc_printf(\"\\n
**Extended CgFs Info**\\n
\");\n
    v0 = *(&v3->field_28);\n
    cgc_printf(&g_40a572);\n
    v0 = v3->field_24;\n
    cgc_printf(&g_40a58e);\n
    v0 = *((&v3->field_24 + 2));\n
    cgc_printf(&g_40a5a5);\n
    v0 = v3->field_20;\n
    cgc_printf(&g_40a5b2);\n
    v0 = v3->field_2c;\n
    cgc_printf(&g_40a5c8);\n
    v0 = *((&v3->field_2c + 2));\n
    cgc_printf(&g_40a5e0);\n
    cgc_printf(\"--12 Bytes Reserved--\\n
\");\n
    cgc_printf(\"--16 Bytes Reserved--\\n
\");\n
    cgc_printf(\"--FS TYPE--\\n
\");\n
    v0 = v3->padding_34[26];\n
    cgc_printf(&g_40a635);\n
    v0 = v3->padding_34[27];\n
    cgc_printf(&g_40a635);\n
    v0 = v3->padding_34[28];\n
    cgc_printf(&g_40a635);\n
    v0 = v3->padding_34[29];\n
    cgc_printf(&g_40a635);\n
    v0 = v3->field_52;\n
    cgc_printf(&g_40a635);\n
    v0 = v3->field_53;\n
    cgc_printf(&g_40a635);\n
    v0 = v3->field_54;\n
    cgc_printf(&g_40a635);\n
    v0 = v3->field_55;\n
    cgc_printf(&g_40a635);\n
    cgc_printf(&g_40a88b);\n
    cgc_printf(\"\\n
**Boot code and end sequence**\\n
\");\n
    cgc_printf(\"--Boot Code (419 bytes)--\\n
\");\n
    v1 = v3->padding_5a[417];\n
    v0 = v3->padding_5a[416];\n
    cgc_printf(&g_40a674);\n
    v0 = 0x200;\n
    cgc_printf(&g_40a69c);\n
    cgc_printf(\"****End Bios Header****\\n
\");\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4223405:sub_4071ad": null, "4223408:_Z13debug_fs_infoRK14fs_info_sector": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char padding_4[480];\n
    char field_1e4;\n
    char field_1e5;\n
    char field_1e6;\n
    char field_1e7;\n
    unsigned int field_1e8;\n
    unsigned int field_1ec;\n
    char padding_1f0[12];\n
    char field_1fc;\n
    char field_1fd;\n
    char field_1fe;\n
    char field_1ff;\n
} struct_0;\n
\n
extern void* cgc_stdout;\n
extern unsigned int g_40a635;\n
extern unsigned int g_40a72c;\n
extern unsigned int g_40a743;\n
extern unsigned int g_40a767;\n
extern unsigned int g_40a88b;\n
\n
int debug_fs_info(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    struct_0 *v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // edx\n
\n
    v5 = v4;\n
    cgc_printf(\"****FS Info Sector****\\n
\");\n
    cgc_printf(\"--FS Signature 1--\\n
\");\n
    v0 = v5->field_0;\n
    cgc_printf(&g_40a635);\n
    v0 = v5->field_1;\n
    cgc_printf(&g_40a635);\n
    v0 = v5->field_2;\n
    cgc_printf(&g_40a635);\n
    v0 = v5->field_3;\n
    cgc_printf(&g_40a635);\n
    cgc_printf(&g_40a88b);\n
    cgc_printf(\"--Reserved Space (480 Bytes)--\\n
\");\n
    cgc_printf(\"--FS Signature 2--\\n
\");\n
    v0 = v5->field_1e4;\n
    cgc_printf(&g_40a635);\n
    v0 = v5->field_1e5;\n
    cgc_printf(&g_40a635);\n
    v0 = v5->field_1e6;\n
    cgc_printf(&g_40a635);\n
    v0 = v5->field_1e7;\n
    cgc_printf(&g_40a635);\n
    cgc_printf(&g_40a88b);\n
    v0 = v5->field_1e8;\n
    cgc_printf(&g_40a72c);\n
    v0 = v5->field_1ec;\n
    cgc_printf(&g_40a743);\n
    cgc_printf(\"--12 Bytes Reserved--\\n
\");\n
    v6 = v5->field_1fc;\n
    v7 = v5->field_1fd;\n
    v8 = v5->field_1fe;\n
    v3 = v5->field_1ff;\n
    v2 = v8;\n
    v1 = v7;\n
    v0 = v6;\n
    cgc_printf(&g_40a767);\n
    cgc_printf(\"****End FS Info****\\n
\");\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4223812:sub_407344": null, "4223824:_Z19debug_file_metadataPK7fs_file": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    char field_a;\n
    char field_b;\n
    char padding_c[12];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_0;\n
\n
extern void* cgc_stdout;\n
extern unsigned int g_40a3e9;\n
extern unsigned int g_40a635;\n
extern unsigned int g_40a7e7;\n
extern unsigned int g_40a803;\n
extern unsigned int g_40a88b;\n
\n
int debug_file_metadata(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v2;  // esi\n
\n
    v2 = v1;\n
    cgc_printf(\"****File Metadata****\\n
\");\n
    cgc_printf(\"--File Name--\\n
\");\n
    v0 = v2->field_0;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_1;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_2;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_3;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_4;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_5;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_6;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_7;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_8;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_9;\n
    cgc_printf(&g_40a635);\n
    v0 = v2->field_a;\n
    cgc_printf(&g_40a635);\n
    cgc_printf(&g_40a88b);\n
    cgc_printf(\"--Attributes--\\n
\");\n
    v0 = v2->field_b;\n
    cgc_printf(&g_40a3e9);\n
    cgc_printf(&g_40a88b);\n
    v0 = v2->field_18;\n
    cgc_printf(&g_40a7e7);\n
    v0 = v2->field_1c;\n
    cgc_printf(&g_40a803);\n
    cgc_printf(\"****End File Metadata****\\n
\");\n
    return cgc_fflush(cgc_stdout);\n
}\n
", "4224192:_Z10debug_file5ArrayI12cluster_dataE": "extern void* cgc_stdout;\n
extern unsigned int g_40a3e9;\n
extern struct_0 *g_40a635;\n
extern unsigned int g_40a88b;\n
\n
int debug_file(char a0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    void* v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // [bp+0x4]\n
    struct struct_0 **v8;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // eax, Other Possible Types: unsigned int\n
    struct struct_0 **v10;  // edi, Other Possible Types: unsigned int\n
    struct struct_0 **v11;  // ecx\n
    unsigned int v12;  // ecx\n
    struct struct_0 **v13;  // esi, Other Possible Types: unsigned int\n
    struct struct_0 **v14;  // edx, Other Possible Types: unsigned int\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // ebp\n
    struct struct_0 **v17;  // esi, Other Possible Types: unsigned int\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // eax\n
    struct struct_0 **v21;  // ecx\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // esi\n
\n
    cgc_printf(\"****File Hex View****\\n
\");\n
    v1 = a0;\n
    if (!v1)\n
    {\n
        cgc_printf(\"****End File Hex View****\\n
\");\n
        return cgc_fflush(cgc_stdout);\n
    }\n
    v8 = v7;\n
    v4 = a1;\n
    v2 = 0;\n
    v9 = v7;\n
    v17 = v7;\n
    v10 = v7;\n
    do\n
    {\n
        if (!v10)\n
        {\n
            v9 = operator new[](24);\n
            v1 = 0;\n
            v4 = 2;\n
            v17 = v9;\n
            v10 = v9;\n
        }\n
        ecx<4> = (!(v1 <= ecx<4>) ? 0 : v2);\n
        v12 = v11 * 3;\n
        if (!*((v10 + (v12 << 2) + 4)))\n
        {\n
            v3 = v17;\n
            v13 = v9;\n
        }\n
        else\n
        {\n
            v6 = *((v10 + v12 * 4));\n
            v5 = 0;\n
            do\n
            {\n
                v3 = v8;\n
                v14 = v9;\n
                v15 = 0;\n
                while (true)\n
                {\n
                    v16 = v5 + v15;\n
                    if (!v17)\n
                    {\n
                        v9 = operator new[](24);\n
                        v17 = v9;\n
                        v1 = 0;\n
                        v4 = 2;\n
                        v14 = v9;\n
                        v3 = v9;\n
                    }\n
                    v9 = (!(v1 <= v9) ? 0 : v2);\n
                    if (v16 >= *((v17 + (v9 + (v9 << 1) << 2) + 4)))\n
                        break;\n
                    v0 = v6[v15];\n
                    cgc_printf(&g_40a3e9);\n
                    v15 += 1;\n
                    if (v15 == 16)\n
                        break;\n
                }\n
                cgc_printf(\"   |   \");\n
                v18 = 0;\n
                v8 = v3;\n
                while (true)\n
                {\n
                    v19 = v5 + v18;\n
                    if (!v14)\n
                    {\n
                        v9 = operator new[](24);\n
                        v8 = v9;\n
                        v1 = 0;\n
                        v4 = 2;\n
                        v14 = v9;\n
                    }\n
                    v9 = (!(v1 <= v9) ? 0 : v2);\n
                    if (v19 >= *((v14 + (v9 + (v9 << 1) << 2) + 4)))\n
                        break;\n
                    v20 = v6[v18];\n
                    if (v20 == 9)\n
                    {\n
                        v9 = \"\\\\t\";\n
                    }\n
                    else if (v20 == 13)\n
                    {\n
                        v9 = \"\\\\r\";\n
                    }\n
                    else if (v20 == 10)\n
                    {\n
                        v9 = \"\\\\n
\";\n
                    }\n
                    else\n
                    {\n
                        v0 = v20;\n
                        v9 = &g_40a635;\n
                    }\n
                    cgc_printf(v9);\n
                    v18 += 1;\n
                    if (v18 == 16)\n
                        break;\n
                }\n
                v13 = v14;\n
                cgc_printf(&g_40a88b);\n
                v9 = (!(v1 <= v9) ? 0 : v2);\n
                v21 = v9 * 3;\n
                v6 += 16;\n
                v9 = v14;\n
                v3 = v14;\n
                v10 = v14;\n
                v5 += 16;\n
            } while (v5 < *((v14 + (v21 << 2) + 4)));\n
        }\n
        cgc_printf(&g_40a88b);\n
        v23 = v13;\n
        v2 += 1;\n
        v24 = v3;\n
    } while (v2 < v1);\n
    v7 = v8;\n
    a1 = v4;\n
}\n
", "4224270:sub_40750e": null, "4224398:sub_40758e": null, "4224616:sub_407668": null, "4224759:sub_4076f7": null, "4224779:sub_40770b": null, "4224846:sub_40774e": null, "4224848:_ZN13DirectoryTreeC1Ev": "int DirectoryTree::__ctor__(unsigned int v0[7])\n
{\n
    unsigned int v1[7];  // eax\n
\n
    v1 = v0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = 0;\n
    v1[5] = 0;\n
    v1[6] = 0;\n
    v1[0] = 0;\n
    return v0;\n
}\n
", "4224901:sub_407785": null, "4224912:_ZN13DirectoryTreeC2EP7fs_file": "int DirectoryTree::__base_ctor__(unsigned int v0[7], unsigned int a0)\n
{\n
    unsigned int v1[7];  // ecx\n
\n
    v1 = v0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[4] = 0;\n
    v1[5] = 0;\n
    v1[6] = 0;\n
    v1[0] = a0;\n
    return a0;\n
}\n
", "4224965:sub_4077c5": null, "4224976:_ZN13DirectoryTree8AddEntryEP7fs_file": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int DirectoryTree::AddEntry(unsigned int v8, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20]\n
    void* v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // esi\n
    unsigned int v12;  // eax\n
\n
    v9 = a0;\n
    if (!v9)\n
        return v12;\n
    v10 = v8;\n
    if (!CgFsFile::IsDirectory())\n
    {\n
        v0 = &a0;\n
        v12 = Array::Append(v10 + 16);\n
        return v12;\n
    }\n
    v2 = 0;\n
    v3 = 0;\n
    v4 = 0;\n
    v5 = 0;\n
    v6 = 0;\n
    v7 = 0;\n
    v1 = v9;\n
    v0 = &v1;\n
    v12 = Array::Append(v10 + 4);\n
    return v12;\n
}\n
", "4225117:sub_40785d": null, "4225120:_ZN13DirectoryTree8FindFileEPKc": "int DirectoryTree::FindFile(unsigned int *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x14]\n
    char v1;  // [bp-0x10]\n
    char *v3;  // edi\n
    unsigned int *v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int *v6;  // eax\n
\n
    v3 = a0;\n
    if (v3)\n
    {\n
        v4 = v2;\n
        if (!cgc_strcmp(\"/\", v3))\n
        {\n
            return *(v4);\n
        }\n
        else if (DirectoryTree::FindFileHelper(v4, v4, v3, &v1))\n
        {\n
            v6 = *(&v1);\n
            if (v6)\n
            {\n
                v5 = *(v6);\n
                return v5;\n
            }\n
            v5 = *(&v0);\n
            if (v5)\n
                return v5;\n
        }\n
    }\n
    return 0;\n
}\n
", "4225234:sub_4078d2": null, "4225248:_ZN13DirectoryTree14FindFileHelperEPS_PKcPS0_PP7fs_file": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
    unsigned int field_30;\n
    unsigned int field_34;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int DirectoryTree::FindFileHelper()\n
{\n
    char *v0;  // [bp-0x24]\n
    char v1;  // [bp-0x15]\n
    char *v2;  // [bp-0x14]\n
    char v4;  // [bp+0x8]\n
    char v5;  // [bp+0xc]\n
    unsigned int *v6;  // [bp+0x10]\n
    unsigned int *v7;  // [bp+0x14]\n
    unsigned int *v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int *v9;  // edx, Other Possible Types: unsigned int\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // esi\n
    char *v12;  // ecx\n
    char v13;  // dl\n
    unsigned int v14;  // eax\n
    char *v15;  // edi\n
    unsigned int v16;  // ecx\n
    void* v17;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v18[14];  // eax, Other Possible Types: unsigned int\n
    void* v19;  // edx, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v22;  // edx\n
    unsigned int v23[14];  // eax, Other Possible Types: unsigned int\n
    char *v24;  // edx\n
    unsigned int v25;  // esi\n
    unsigned int v26[14];  // eax, Other Possible Types: unsigned int\n
    unsigned int v27;  // ecx\n
    void* v28;  // edx, Other Possible Types: unsigned int\n
    unsigned int v29;  // ecx\n
    unsigned int *v30;  // eax, Other Possible Types: unsigned int\n
    unsigned int v31;  // ecx\n
    unsigned int v32;  // ecx\n
\n
    v8 = v7;\n
    v9 = v6;\n
    v10 = *(&v5);\n
    v11 = *(&v4);\n
    while (true)\n
    {\n
LABEL_407903:\n
        *(v9) = 0;\n
        *(v8) = 0;\n
        v12 = (*(v10) == 47) + v10;\n
        v14 = 0;\n
        while (true)\n
        {\n
            v13 = v12[v14];\n
            if (!v13)\n
                break;\n
            if (v13 == 47)\n
                break;\n
            v14 += 1;\n
        }\n
        if (!([D] x86g_calculate_condition(0x6<32>, 0x5<32>, Conv(16->32, ax<2>), 0xb<32>, 0x0<32>)))\n
            break;\n
        v1 = v13;\n
        v2 = v12;\n
        v15 = v14;\n
        v16 = v11->field_8;\n
        if (!v16)\n
        {\n
LABEL_407b26:\n
            if (!v1)\n
            {\n
                v27 = v11->field_14;\n
                v28 = 0;\n
                if (!v27)\n
                    return;\n
                do\n
                {\n
                    if (!v11->field_10)\n
                    {\n
                        v11->field_14 = 0;\n
                        v11->field_18 = 2;\n
                        v11->field_10 = operator new[](8);\n
                        v27 = v11->field_14;\n
                    }\n
                    v0 = v15;\n
                    if (CgFsFile::NameEquals())\n
                    {\n
                        v30 = v11->field_10;\n
                        if (!v30)\n
                        {\n
                            v11->field_14 = 0;\n
                            v11->field_18 = 2;\n
                            v30 = operator new[](8);\n
                            v11->field_10 = v30;\n
                        }\n
                        v32 = (!(v11->field_14 <= v28) ? 0 : v28);\n
                        *(v7) = *((v30 + v32 * 4));\n
                        return;\n
                    }\n
                    v29 = v11->field_14;\n
                    v28 += 1;\n
                } while (v28 < v29);\n
            }\n
        }\n
        else\n
        {\n
            v17 = 0;\n
            do\n
            {\n
                v18 = v11->field_4;\n
                if (!v18)\n
                {\n
                    v11->field_8 = 0;\n
                    v11->field_c = 2;\n
                    v18 = operator new[](56);\n
                    *((v18 + 4)) = 0;\n
                    *((v18 + 8)) = 0;\n
                    *((v18 + 12)) = 0;\n
                    *((v18 + 16)) = 0;\n
                    *((v18 + 20)) = 0;\n
                    *((v18 + 24)) = 0;\n
                    *(v18) = 0;\n
                    *((v18 + 32)) = 0;\n
                    *((v18 + 36)) = 0;\n
                    *((v18 + 40)) = 0;\n
                    *((v18 + 44)) = 0;\n
                    *((v18 + 48)) = 0;\n
                    *((v18 + 52)) = 0;\n
                    *((v18 + 28)) = 0;\n
                    v11->field_4 = v18;\n
                    v16 = v11->field_8;\n
                }\n
                v19 = v17;\n
                if (v16 <= v17)\n
                    v19 = 0;\n
                v20 = *((v18 + v19 * 9 * 3 + v19));\n
                v0 = v15;\n
                if (CgFsFile::NameEquals(v20, v2))\n
                {\n
                    v22 = v2;\n
                    if (v15[v22] != 47)\n
                    {\n
                        if (!v15[v22])\n
                            goto LABEL_407bf1;\n
                    }\n
                    else\n
                    {\n
                        if (!v15[1 + v22])\n
                        {\n
LABEL_407bf1:\n
                            v26 = v11->field_4;\n
                            if (!v26)\n
                            {\n
                                v11->field_8 = 0;\n
                                v11->field_c = 2;\n
                                v26 = operator new[](56);\n
                                *((v26 + 4)) = 0;\n
                                *((v26 + 8)) = 0;\n
                                *((v26 + 12)) = 0;\n
                                *((v26 + 16)) = 0;\n
                                *((v26 + 20)) = 0;\n
                                *((v26 + 24)) = 0;\n
                                *(v26) = 0;\n
                                *((v26 + 32)) = 0;\n
                                *((v26 + 36)) = 0;\n
                                *((v26 + 40)) = 0;\n
                                *((v26 + 44)) = 0;\n
                                *((v26 + 48)) = 0;\n
                                *((v26 + 52)) = 0;\n
                                *((v26 + 28)) = 0;\n
                                v11->field_4 = v26;\n
                            }\n
                            v31 = (!(v11->field_8 <= v17) ? 0 : v17);\n
                            *(v6) = v31 * 9 * 3 + v31 + v26;\n
                            return;\n
                        }\n
                    }\n
                    v23 = v11->field_4;\n
                    if (!v23)\n
                    {\n
                        v11->field_8 = 0;\n
                        v11->field_c = 2;\n
                        v23 = operator new[](56);\n
                        v22 = v2;\n
                        *((v23 + 4)) = 0;\n
                        *((v23 + 8)) = 0;\n
                        *((v23 + 12)) = 0;\n
                        *((v23 + 16)) = 0;\n
                        *((v23 + 20)) = 0;\n
                        *((v23 + 24)) = 0;\n
                        *(v23) = 0;\n
                        *((v23 + 32)) = 0;\n
                        *((v23 + 36)) = 0;\n
                        *((v23 + 40)) = 0;\n
                        *((v23 + 44)) = 0;\n
                        *((v23 + 48)) = 0;\n
                        *((v23 + 52)) = 0;\n
                        *((v23 + 28)) = 0;\n
                        v11->field_4 = v23;\n
                    }\n
                    v24 = &v15[v22];\n
                    if (v11->field_8 <= v17)\n
                        v17 = 0;\n
                    v25 = 9 * v17 * 3 + v17 + v23;\n
                    v10 = v24;\n
                    v8 = v7;\n
                    v9 = v6;\n
                    goto LABEL_407903;\n
                }\n
                v17 += 1;\n
            } while (v17 < v11->field_8);\n
            goto LABEL_407b26;\n
        }\n
    }\n
    return;\n
}\n
", "4225330:sub_407932": null, "4225594:sub_407a3a": null, "4225620:sub_407a54": null, "4226197:sub_407c95": null, "4226208:_ZN13DirectoryTree15directory_entryEv": "int DirectoryTree::directory_entry(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4226215:sub_407ca7": null, "4226224:_ZN13DirectoryTree13FindDirectoryEPKc": "int DirectoryTree::FindDirectory(unsigned int v1, unsigned int a0)\n
{\n
    char v0;  // [bp-0x14]\n
    char *v2;  // edi\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = a0;\n
    if (!v2)\n
        return 0;\n
    v3 = v1;\n
    if (!cgc_strcmp(\"/\", v2))\n
        return v1;\n
    v4 = DirectoryTree::FindFileHelper(v3, v3, v2, &v0);\n
    if (v4)\n
    {\n
        v3 = *(&v0);\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4226324:sub_407d14": null, "4226336:_ZN13DirectoryTree9ListFilesEPKcb": "int DirectoryTree::ListFiles(unsigned int v5, unsigned int a0, char a1)\n
{\n
    void* v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    char *v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ebp\n
\n
    v6 = a0;\n
    v7 = v5;\n
    if (v6 && cgc_strcmp(\"/\", v6))\n
    {\n
        v8 = DirectoryTree::FindFileHelper(v7, v7, v6, &v4);\n
        if (v8)\n
        {\n
            v2 = *(&v4);\n
            v9 = *(&v3);\n
            v0 = 1;\n
            v8 = DirectoryTree::ListFileHelper(v7, v2, v9, a1, v6, cgc_strlen(v6));\n
            return v8;\n
        }\n
        goto LABEL_407dcf;\n
    }\n
    v1 = 0;\n
    v0 = 0;\n
    v8 = DirectoryTree::ListFileHelper(v7, v7, 0, a1, &v1, cgc_strlen(&v1));\n
LABEL_407dcf:\n
    return v8;\n
}\n
", "4226519:sub_407dd7": null, "4226528:_ZN13DirectoryTree14ListFileHelperEPS_PK7fs_filebPKcib": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char field_3;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
    struct struct_0 *field_a;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
    unsigned int field_30;\n
    unsigned int field_34;\n
} struct_2;\n
\n
extern unsigned int g_40a635;\n
extern unsigned int g_40a873;\n
extern unsigned int g_40a88b;\n
\n
int DirectoryTree::ListFileHelper(unsigned int v6, struct_1 *a0, unsigned int a1, char a2, char *a3, unsigned int a4, char a5)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct_1 *v7;  // edi, Other Possible Types: unsigned int\n
    char *v8;  // eax\n
    char *v9;  // ebp\n
    struct_0 *v10;  // ecx\n
    char v11;  // dh\n
    char *v12;  // eax, Other Possible Types: unsigned int\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ebp\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    unsigned int v16;  // ecx\n
    void* v17;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v18[14];  // eax\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    void* v21;  // esi, Other Possible Types: unsigned int\n
    unsigned int v22;  // ecx\n
    unsigned int v23;  // esi\n
    struct_1 *v24;  // eax, Other Possible Types: unsigned int\n
    unsigned int v25;  // ecx\n
    void* v26;  // edi, Other Possible Types: unsigned int\n
    unsigned int v27[14];  // eax, Other Possible Types: unsigned int\n
    char *v28;  // esi\n
    struct_1 *v29;  // ebp\n
    char *v30;  // ebp, Other Possible Types: unsigned int\n
    void* v31;  // edx, Other Possible Types: unsigned int\n
    unsigned int v32;  // ecx\n
    unsigned int v33;  // eax\n
\n
    v7 = a0;\n
    if (v7)\n
    {\n
        v8 = operator new[](a4 + 12);\n
        v0 = a4;\n
        v13 = v0;\n
        v9 = v8;\n
        cgc_memcpy(v8, a3, v0);\n
        v10 = v7->field_0;\n
        v12 = &v8[v13];\n
        v11 = a5;\n
        if (v10->field_0 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_0;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_1 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_1;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_2 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_2;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_3 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_3;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_4 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_4;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_5 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_5;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_6 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_6;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_7 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_7;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_8 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_8;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        if (v10->field_9 != 32 && !v11)\n
        {\n
            *(v12) = v10->field_9;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        *(&v10) = (&v10->field_9)[1];\n
        if (*(&v10) != 32 && !v11)\n
        {\n
            *(v12) = v10;\n
            v12 += 1;\n
            v13 += 1;\n
        }\n
        v3 = v9;\n
        if (v9[1 + v13] != 47)\n
        {\n
            if (v13 == 1 && *(v9) == 47)\n
            {\n
                cgc_printf(\"Directory Name: \");\n
                v13 = 1;\n
                goto LABEL_407f65;\n
            }\n
            *(v12) = 47;\n
            v13 += 1;\n
        }\n
        cgc_printf(\"Directory Name: \");\n
        if (v13 <= 0)\n
            goto LABEL_407f91;\n
LABEL_407f65:\n
        v14 = v13;\n
        v15 = 0;\n
        do\n
        {\n
            cgc_printf(&g_40a635);\n
            v15 += 1;\n
        } while (v14 != v15);\n
        v7 = a0;\n
        v13 = v14;\n
LABEL_407f91:\n
        v2 = &g_40a88b;\n
        cgc_printf(&g_40a88b);\n
        v16 = *((v7 + 8));\n
        v1 = v13;\n
        if (v16)\n
        {\n
            v17 = 0;\n
            v5 = \"    \";\n
            v4 = \"Subdirectory Name: \";\n
            do\n
            {\n
                if (!*((v7 + 4)))\n
                {\n
                    *((v7 + 8)) = 0;\n
                    *((v7 + 12)) = 2;\n
                    v18 = operator new[](56);\n
                    v18[1] = 0;\n
                    v18[2] = 0;\n
                    v18[3] = 0;\n
                    v18[4] = 0;\n
                    v18[5] = 0;\n
                    v18[6] = 0;\n
                    v18[0] = 0;\n
                    v18[8] = 0;\n
                    v18[9] = 0;\n
                    v18[10] = 0;\n
                    v18[11] = 0;\n
                    v18[12] = 0;\n
                    v18[13] = 0;\n
                    v18[7] = 0;\n
                    *((v7 + 4)) = v18;\n
                    v16 = *((v7 + 8));\n
                }\n
                cgc_printf(v5);\n
                cgc_printf(v4);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                cgc_printf(&g_40a635);\n
                v7 = a0;\n
                cgc_printf(&g_40a635);\n
                cgc_printf(v2);\n
                v17 += 1;\n
                v19 = *((v7 + 8));\n
            } while (v17 < v19);\n
        }\n
        else\n
        {\n
            if (!*((v7 + 20)))\n
            {\n
                v33 = cgc_printf(&g_40a873);\n
                return v33;\n
            }\n
        }\n
        v20 = *((v7 + 20));\n
        v30 = v3;\n
        if (v20)\n
        {\n
            v21 = 0;\n
            do\n
            {\n
                if (!*((v7 + 16)))\n
                {\n
                    *((v7 + 20)) = 0;\n
                    *((v7 + 24)) = 2;\n
                    *((v7 + 16)) = operator new[](8);\n
                    v20 = *((v7 + 20));\n
                }\n
                _GLOBAL__N_1::PrintFile();\n
                v21 += 1;\n
                v22 = *((v7 + 20));\n
            } while (v21 < v22);\n
        }\n
        cgc_printf(v2);\n
        v23 = v1;\n
        if (a2)\n
        {\n
            v24 = v7;\n
            v25 = *((v7 + 8));\n
            if (v25)\n
            {\n
                v26 = 0;\n
                do\n
                {\n
                    v27 = *((v24 + 4));\n
                    if (!v27)\n
                    {\n
                        v28 = v30;\n
                        v29 = a0;\n
                        a0->field_8 = 0;\n
                        a0->field_c = 2;\n
                        v27 = operator new[](56);\n
                        *((v27 + 4)) = 0;\n
                        *((v27 + 8)) = 0;\n
                        *((v27 + 12)) = 0;\n
                        *((v27 + 16)) = 0;\n
                        *((v27 + 20)) = 0;\n
                        *((v27 + 24)) = 0;\n
                        *(v27) = 0;\n
                        *((v27 + 32)) = 0;\n
                        *((v27 + 36)) = 0;\n
                        *((v27 + 40)) = 0;\n
                        *((v27 + 44)) = 0;\n
                        *((v27 + 48)) = 0;\n
                        *((v27 + 52)) = 0;\n
                        *((v27 + 28)) = 0;\n
                        v29->field_4 = v27;\n
                        v25 = v29->field_8;\n
                        v30 = v28;\n
                        v23 = v1;\n
                    }\n
                    v31 = v26;\n
                    if (v25 <= v26)\n
                        v31 = 0;\n
                    DirectoryTree::ListFileHelper(v6, v27 + v31 * 9 * 3 + v31, 0, 1, v30, v23, 0);\n
                    v26 += 1;\n
                    v24 = a0;\n
                    v32 = *((v24 + 8));\n
                } while (v26 < v32);\n
            }\n
        }\n
        v33 = operator delete[](v30);\n
        return v33;\n
    }\n
    else if (!a1)\n
    {\n
        return v33;\n
    }\n
    else\n
    {\n
        v33 = _GLOBAL__N_1::PrintFile();\n
        return v33;\n
    }\n
}\n
", "4227027:sub_407fd3": null, "4227460:sub_408184": null, "4227590:sub_408206": null, "4227877:sub_408325": null, "4227888:_ZN13DirectoryTree9ClearTreeEb": "int DirectoryTree::ClearTree(unsigned int *v1, char a0)\n
{\n
    unsigned int *v0;  // [bp-0x18]\n
    unsigned int *v2;  // esi\n
    void* v3;  // edi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (!a0)\n
        v3 = *(v2);\n
    else\n
        v3 = 0;\n
    v0 = v2;\n
    *(v2) = v3;\n
    return DirectoryTree::ClearTreeHelper(v1);\n
}\n
", "4227958:sub_408376": null, "4227968:_ZN13DirectoryTree15ClearTreeHelperEPS_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
    unsigned int field_28;\n
    unsigned int field_2c;\n
    unsigned int field_30;\n
    unsigned int field_34;\n
} struct_1;\n
\n
int DirectoryTree::ClearTreeHelper(unsigned int *v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int *v2;  // edi\n
    unsigned int v3;  // ecx\n
    unsigned int v4[14];  // eax, Other Possible Types: unsigned int\n
    void* v5;  // edx, Other Possible Types: unsigned int\n
    void* v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
    unsigned int v8[14];  // eax\n
    unsigned int v9;  // eax\n
\n
    v1 = a0;\n
    if (!v1)\n
        return v9;\n
    v2 = v0;\n
    v3 = v1->field_8;\n
    if (v3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v4 = v1->field_4;\n
            if (!v4)\n
            {\n
                v1->field_8 = 0;\n
                v1->field_c = 2;\n
                v4 = operator new[](56);\n
                *((v4 + 4)) = 0;\n
                *((v4 + 8)) = 0;\n
                *((v4 + 12)) = 0;\n
                *((v4 + 16)) = 0;\n
                *((v4 + 20)) = 0;\n
                *((v4 + 24)) = 0;\n
                *(v4) = 0;\n
                *((v4 + 32)) = 0;\n
                *((v4 + 36)) = 0;\n
                *((v4 + 40)) = 0;\n
                *((v4 + 44)) = 0;\n
                *((v4 + 48)) = 0;\n
                *((v4 + 52)) = 0;\n
                *((v4 + 28)) = 0;\n
                v1->field_4 = v4;\n
                v3 = v1->field_8;\n
            }\n
            v5 = v6;\n
            if (v3 <= v6)\n
                v5 = 0;\n
            DirectoryTree::ClearTreeHelper(v2, v4 + v5 * 9 * 3 + v5);\n
            v6 += 1;\n
            v7 = v1->field_8;\n
        } while (v6 < v7);\n
    }\n
    *(v2) = 0;\n
    v8 = v1->field_4;\n
    if (v8)\n
        operator delete[](v8);\n
    v1->field_4 = 0;\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v9 = v1->field_10;\n
    if (v9)\n
        v9 = operator delete[](v9);\n
    v1->field_10 = 0;\n
    v1->field_14 = 0;\n
    v1->field_18 = 0;\n
    return v9;\n
}\n
", "4228018:sub_4083b2": null, "4228311:sub_4084d7": null, "4228320:_ZN13DirectoryTree14subdirectoriesEv": "int DirectoryTree::subdirectories(unsigned int v0[3], unsigned int a0[4])\n
{\n
    unsigned int v1[3];  // eax\n
    unsigned int v2[4];  // ecx\n
    unsigned int v3;  // edx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    v1[2] = v2[3];\n
    v3 = v2[1];\n
    v1[1] = v2[2];\n
    v1[0] = v3;\n
    return v0;\n
}\n
", "4228348:sub_4084fc": null, "4228352:_ZN13DirectoryTree9file_listEv": "int DirectoryTree::file_list(unsigned int v0[3], unsigned int a0[7])\n
{\n
    unsigned int v1[3];  // eax\n
    unsigned int v2[7];  // ecx\n
    unsigned int v3;  // edx\n
\n
    v1 = v0;\n
    v2 = a0;\n
    v1[2] = v2[6];\n
    v3 = v2[4];\n
    v1[1] = v2[5];\n
    v1[0] = v3;\n
    return v0;\n
}\n
", "4228380:sub_40851c": null, "4228384:_ZN12_GLOBAL__N_19PrintFileEPK7fs_fileh": "extern unsigned int g_40a635;\n
extern unsigned int g_40a88b;\n
\n
int _GLOBAL__N_1::PrintFile()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2;  // edx\n
    char v3[11];  // ecx\n
\n
    if (v2)\n
    {\n
        do\n
        {\n
            cgc_printf(\"    \");\n
        } while (ebp<1> != 1);\n
    }\n
    cgc_printf(\"File Name: \");\n
    v0 = v3[0];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[1];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[2];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[3];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[4];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[5];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[6];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[7];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[8];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[9];\n
    cgc_printf(&g_40a635);\n
    v0 = v3[10];\n
    cgc_printf(&g_40a635);\n
    return cgc_printf(&g_40a88b);\n
}\n
", "4228650:sub_40862a": null, "4228656:_ZN5ArrayI13DirectoryTreeE6AppendERKS0_": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Array::Append(unsigned int v1[3], unsigned int a0[7])\n
{\n
    char v0;  // [bp+0x0]\n
    struct_0 *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3[14];  // esi, Other Possible Types: unsigned int\n
    unsigned int v4[3];  // esi\n
    unsigned int v5;  // edi\n
    unsigned int v7;  // ecx\n
    unsigned int v8[14];  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebp\n
    unsigned int v12[7];  // edx, Other Possible Types: unsigned int\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // ecx\n
\n
    v2 = v1;\n
    v3 = v2->field_0;\n
    if (!v3)\n
    {\n
        v2->field_4 = 0;\n
        v2->field_8 = 2;\n
        v3 = operator new[](56);\n
        v3[1] = 0;\n
        v3[2] = 0;\n
        v3[3] = 0;\n
        v3[4] = 0;\n
        v3[5] = 0;\n
        v3[6] = 0;\n
        v3[0] = 0;\n
        v3[8] = 0;\n
        v3[9] = 0;\n
        v3[10] = 0;\n
        v3[11] = 0;\n
        v3[12] = 0;\n
        v3[13] = 0;\n
        v3[7] = 0;\n
        v2->field_0 = &v3[0];\n
    }\n
    v12 = a0;\n
    v11 = v2->field_4;\n
    if (v2->field_4 != v2->field_8)\n
    {\n
        *((v2 + 4)) = v11 + 1;\n
        v13 = 9 * v11 * 3 + v11;\n
        *((v3 + v13 + 24)) = *((v12 + 24));\n
        *((v3 + v13 + 20)) = *((v12 + 20));\n
        *((v3 + v13 + 16)) = *((v12 + 16));\n
        *((v3 + v13 + 12)) = *((v12 + 12));\n
        *((v3 + v13 + 8)) = *((v12 + 8));\n
        v14 = *(v12);\n
        *((v3 + v13 + 4)) = *((v12 + 4));\n
        *((v3 + v13)) = v14;\n
        return 0x1b * &v0 + &v0;\n
    }\n
    v4 = v2;\n
    v5 = v11 + v11;\n
    v4[2] = v5;\n
    v8 = operator new[](([D] x86g_calculate_condition(0x1<32>, 0x24<32>, edi<4>, 0x1c<32>, 0x0<32>) ? -1 : v5 * 28));\n
    v3 = v8;\n
    if (v5)\n
    {\n
        v7 = v11 * 56 - 28;\n
        if (!(((v7 >> 2) * 613566757 >> 32) & 1))\n
        {\n
            v8[1] = 0;\n
            v8[2] = 0;\n
            v8[3] = 0;\n
            v8[4] = 0;\n
            v8[5] = 0;\n
            v8[6] = 0;\n
            v8[0] = 0;\n
            v8 = &v8[7];\n
        }\n
        if (v7 >= 28)\n
        {\n
            do\n
            {\n
                *((v8 + 4)) = 0;\n
                *((v8 + 8)) = 0;\n
                *((v8 + 12)) = 0;\n
                *((v8 + 16)) = 0;\n
                *((v8 + 20)) = 0;\n
                *((v8 + 24)) = 0;\n
                *(v8) = 0;\n
                *((v8 + 32)) = 0;\n
                *((v8 + 36)) = 0;\n
                *((v8 + 40)) = 0;\n
                *((v8 + 44)) = 0;\n
                *((v8 + 48)) = 0;\n
                *((v8 + 52)) = 0;\n
                *((v8 + 28)) = 0;\n
                v8 += 56;\n
            } while (v8 != v3 + v5 * 27 + v5);\n
        }\n
    }\n
    v2 = v1;\n
    v9 = *((v2 + 4));\n
    cgc_memcpy(v3, *(v2), v9 * 9 * 3 + v9);\n
    v10 = *(v2);\n
    if (v10)\n
        operator delete[](v10);\n
    *(v2) = v3;\n
    v11 = *((v2 + 4));\n
    v12 = a0;\n
}\n
", "4229211:sub_40885b": null, "4229216:_ZN5ArrayIP7fs_fileE6AppendERKS1_": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Array::Append(struct_2 *v0, unsigned int *a0)\n
{\n
    struct_0 *v1;  // edi\n
    unsigned int v2;  // esi\n
    unsigned int *v3;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_0;\n
    if (!v2)\n
    {\n
        v1->field_4 = 0;\n
        v1->field_8 = 2;\n
        v2 = operator new[](8);\n
        v1->field_0 = v2;\n
    }\n
    v6 = v1->field_4;\n
    if (v6 == v1->field_8)\n
    {\n
        v3 = v6 * 2;\n
        v1->field_8 = v3;\n
        v2 = operator new[](([D] x86g_calculate_condition(0x1<32>, 0x24<32>, ecx<4>, 0x4<32>, 0x0<32>) ? -1 : v3 * 4));\n
        cgc_memcpy(v2, v1->field_0, v1->field_4 * 4);\n
        v5 = v1->field_0;\n
        if (v5)\n
            operator delete[](v5);\n
        v1->field_0 = v2;\n
        v6 = v1->field_4;\n
    }\n
    v7 = *(a0);\n
    v1->field_4 = v6 + 1;\n
    *((v2 + v6 * 4)) = v7;\n
    return v7;\n
}\n
", "4229382:sub_408906": null, "4229392:_ZN8CgFsFile9FreeEntryEPK7fs_file": "int CgFsFile::FreeEntry(char *v0)\n
{\n
    char *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = *(v1) == 229 | !*(v1);\n
    return v1;\n
}\n
", "4229411:sub_408923": null, "4229424:_ZN8CgFsFile9SkipEntryEPK7fs_file": "char CgFsFile::SkipEntry(char v0[12])\n
{\n
    char v1[12];  // ecx\n
    char v2;  // al\n
\n
    v1 = v0;\n
    v2 = 1;\n
    if (v1[11] != 15)\n
        v2 = v1[0] == 229 | !v1[0];\n
    return v2;\n
}\n
", "4229451:sub_40894b": null, "4229456:_ZN8CgFsFile10IsDotEntryEPK7fs_file": "int CgFsFile::IsDotEntry(char *v0)\n
{\n
    char *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = *(v1) == 46;\n
    return v1;\n
}\n
", "4229467:sub_40895b": null, "4229472:_ZN8CgFsFile11IsDirectoryEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
int CgFsFile::IsDirectory(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = (v1->field_b & 31);\n
    return v1;\n
}\n
", "4229484:sub_40896c": null, "4229488:_ZN8CgFsFile6IsFileEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
int CgFsFile::IsFile(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = !(v1->field_b & 31);\n
    return v1;\n
}\n
", "4229500:sub_40897c": null, "4229504:_ZN8CgFsFile12IsSystemFileEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
int CgFsFile::IsSystemFile(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = (v1->field_b & 7);\n
    return v1;\n
}\n
", "4229516:sub_40898c": null, "4229520:_ZN8CgFsFile12IsHiddenFileEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
int CgFsFile::IsHiddenFile(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = (v1->field_b & 3);\n
    return v1;\n
}\n
", "4229532:sub_40899c": null, "4229536:_ZN8CgFsFile9IsArchiveEPK7fs_file": "typedef struct struct_0 {\n
    char padding_0[11];\n
    char field_b;\n
} struct_0;\n
\n
int CgFsFile::IsArchive(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = (v1->field_b & 63);\n
    return v1;\n
}\n
", "4229548:sub_4089ac": null, "4229552:_ZN8CgFsFile19DeleteMetadataEntryEP7fs_file": "int CgFsFile::DeleteMetadataEntry(char *v0)\n
{\n
    *(v0) = 229;\n
    return v0;\n
}\n
", "4229560:sub_4089b8": null, "4229568:_ZN8CgFsFile10NameEqualsEPK7fs_filePKcj": "int CgFsFile::NameEquals(char *v0, unsigned int a0, char *a1)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // esi\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1 <= 11)\n
    {\n
        v2 = v0;\n
        v3 = cgc_memcmp(v2, a0, v1);\n
        if (!v3)\n
        {\n
            *(&v3) = 1;\n
            if (v1 > 10)\n
            {\n
                return v3;\n
            }\n
            else if (v1[v2] == 32)\n
            {\n
                while (true)\n
                {\n
                    v3 = v1;\n
                    if (v1 == 10)\n
                        break;\n
                    v1 += 1;\n
                    if (*((v2 + v3 + 1)) != 32)\n
                        break;\n
                }\n
                *(&v3) = !(v1 < 10);\n
                return v3;\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4229673:sub_408a29": null, "4229680:_Z10FillBufferPKcj": "typedef struct struct_0 {\n
    char padding_0[3208];\n
    unsigned int field_c88;\n
    struct struct_1 *field_c8c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int FillBuffer(unsigned int v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    char *v7;  // ebx\n
    struct_0 *v8;  // ecx\n
    struct_0 *v9;  // ecx\n
    char *v10;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // edx\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v6 = a0;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = operator new[](v6);\n
    if (!v6)\n
        return v7;\n
    v8 = v0;\n
    v12 = v8->field_c88;\n
    v11 = 0;\n
    v10 = v8->field_c8c;\n
    do\n
    {\n
        v12 = (v12 >> 16) + v12 * 47070;\n
        v9 = v0;\n
        v9->field_c88 = v12;\n
        v10 = (v10 >> 16) + v10 * 84818;\n
        v9->field_c8c = v10;\n
        v7[v11] = *((v3 + (v10 & 4095)));\n
        v11 += 1;\n
    } while (v6 != v11);\n
    return v7;\n
}\n
", "4229828:sub_408ac4": null, "4229840:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int cgc_p1;\n
extern unsigned int cgc_p2;\n
extern unsigned int cgc_stdin[6];\n
extern unsigned int cgc_stdout[6];\n
extern unsigned int g_40a3e9;\n
extern unsigned int g_40a635;\n
extern unsigned int g_40a88a;\n
extern unsigned int g_40a88b;\n
extern unsigned int g_40a900;\n
extern char g_40a916;\n
extern char g_40a920;\n
extern char g_40a92f;\n
extern char g_40a93c;\n
extern char g_40a95e;\n
extern unsigned int g_40a97b;\n
extern unsigned int g_40a993;\n
extern unsigned int g_40a9ba;\n
extern unsigned int g_40a9cb;\n
extern unsigned int g_40a9de;\n
extern unsigned int g_40a9f0;\n
extern unsigned int g_40aa05;\n
extern unsigned int g_40aa12;\n
extern unsigned int g_40aa24;\n
extern unsigned int g_40aa34;\n
extern unsigned int g_40aa4a;\n
extern unsigned int g_40aa70;\n
extern unsigned int g_40aa88;\n
extern unsigned int g_40aa92;\n
extern unsigned int g_40aa9e;\n
extern unsigned int g_40aab5;\n
extern unsigned int g_40aad4;\n
extern unsigned int g_40aaf5;\n
extern unsigned int g_40ab03;\n
extern unsigned int g_40ab22;\n
extern unsigned int g_40ab42;\n
extern unsigned int g_40ab62;\n
extern unsigned int g_40ab8d;\n
extern unsigned int g_40aba3;\n
extern unsigned int g_40abc1;\n
extern char g_40abd1;\n
extern char g_40abf5;\n
extern unsigned int g_40ac11;\n
extern unsigned int g_40ac35;\n
extern unsigned int g_40ac4d;\n
extern unsigned int g_40ac65;\n
extern unsigned int g_40ac77;\n
extern unsigned int g_40ac7f;\n
extern unsigned int g_40ac86;\n
extern unsigned int g_40aca0;\n
extern unsigned int g_40acb9;\n
extern unsigned int g_40acd9;\n
extern unsigned int g_40acf1;\n
extern unsigned int g_40ad1a;\n
extern unsigned int g_40ad37;\n
extern unsigned int g_40ad6a;\n
extern unsigned int g_40ad88;\n
extern unsigned int g_40adb5;\n
extern unsigned int g_40add8;\n
extern unsigned int g_40ae52;\n
\n
int main()\n
{\n
    struct_0 *v0;  // [bp-0x8cc]\n
    void* v1;  // [bp-0x8c4]\n
    void* v2;  // [bp-0x8ac]\n
    unsigned int v3;  // [bp-0x8a8]\n
    unsigned int v4;  // [bp-0x8a4]\n
    unsigned int v5;  // [bp-0x8a0]\n
    void* v6;  // [bp-0x89c]\n
    void* v7;  // [bp-0x898], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x894]\n
    unsigned int v9;  // [bp-0x888]\n
    void* v10;  // [bp-0x884]\n
    void* v11;  // [bp-0x880]\n
    void* v12;  // [bp-0x870]\n
    unsigned int v13;  // [bp-0x860]\n
    unsigned int v14;  // [bp-0x85c]\n
    unsigned int v15;  // [bp-0x858]\n
    unsigned int v16;  // [bp-0x854]\n
    unsigned int v17;  // [bp-0x850]\n
    char v18;  // [bp-0x84c]\n
    char v19;  // [bp-0x44c]\n
    unsigned int v20;  // [bp-0x10]\n
    unsigned int v21;  // [bp+0x4]\n
    unsigned int v22;  // esi\n
    void* v23;  // edi, Other Possible Types: unsigned int\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    struct_0 *v26;  // ebp\n
    unsigned int v27;  // esi\n
    struct_0 *v28;  // ebp\n
    unsigned int v29;  // esi\n
    void* v30;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v31;  // esi\n
    unsigned int v32;  // ebp\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // edi\n
    void* v35;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v37;  // eax\n
    unsigned int v38;  // eax\n
    void* v39;  // esi, Other Possible Types: unsigned int\n
    void* v40;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v41;  // ebp\n
    unsigned int v42;  // eax\n
    void* v43;  // ecx, Other Possible Types: unsigned int\n
    void* v44;  // esi, Other Possible Types: unsigned int\n
    unsigned int v45;  // eax\n
    unsigned int v46;  // eax\n
    unsigned int v47;  // ecx\n
    void* v48;  // esi, Other Possible Types: unsigned int\n
    unsigned int v49;  // edi\n
    void* v50;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v51;  // esi, Other Possible Types: unsigned int\n
\n
    v20 = v22;\n
    v2 = cgc_stdin;\n
    cgc_fxlat(cgc_stdin, \"2281771\");\n
    v23 = cgc_stdout;\n
    cgc_fxlat(cgc_stdout, \"2281771\");\n
    cgc_p1 = *(1128776080);\n
    cgc_p2 = *(1128776084);\n
    cgc_fbuffered(cgc_stdout, 1);\n
    cgc_printf(&g_40a900);\n
    cgc_printf(&g_40a88a);\n
    CgFsImg::__base_ctor__(&v19);\n
    v17 = &g_40a916;\n
    v16 = &g_40a920;\n
    v15 = &g_40a92f;\n
    v3 = \":> \";\n
    v51 = &v18;\n
    v14 = &g_40a93c;\n
    v13 = &g_40a95e;\n
    v7 = 0;\n
    v6 = cgc_stdout;\n
LABEL_408bd0:\n
    cgc_printf(v17);\n
    while (true)\n
    {\n
        if (!(v7 & 1))\n
        {\n
            cgc_printf(v16);\n
            cgc_printf(v15);\n
            cgc_printf(v3);\n
            cgc_fflush(v23);\n
            if (cgc_freaduntil(v51, 0x400, 14, v2) >= 0)\n
            {\n
                if (!v18)\n
                    goto LABEL_408bd0;\n
                v24 = cgc_strtol(v51, NULL, 10);\n
                if (v24 == 1)\n
                {\n
                    v7 = CgFsImg::Mount(&v19, v2);\n
                    if (v7)\n
                        goto LABEL_408c85;\n
                    else\n
                        goto LABEL_408c85;\n
                }\n
                else\n
                {\n
                    if (!(v24 == 2))\n
                        goto LABEL_408bd0;\n
                    goto LABEL_409aee;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            cgc_printf(&g_40a97b);\n
            cgc_printf(&g_40a993);\n
            cgc_printf(&g_40a9ba);\n
            cgc_printf(&g_40a9cb);\n
            cgc_printf(&g_40a9de);\n
            cgc_printf(&g_40a9f0);\n
            cgc_printf(&g_40aa05);\n
            cgc_printf(&g_40aa12);\n
            cgc_printf(&g_40aa24);\n
            cgc_printf(&g_40aa34);\n
            cgc_printf(&g_40aa4a);\n
            cgc_printf(&g_40aa70);\n
            cgc_printf(&g_40aa88);\n
            cgc_printf(v3);\n
            cgc_fflush(v23);\n
            if (cgc_freaduntil(v51, 0x400, 14, v2) < 0)\n
                goto LABEL_409aee;\n
            if (!v18)\n
                goto LABEL_408bd0;\n
            v25 = cgc_strtol(v51, NULL, 10) - 1;\n
            switch (v25)\n
            {\n
            case 0:\n
                cgc_printf(&g_40aa92);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                if (cgc_freaduntil(v51, 0x400, 14, v2) > 0)\n
                {\n
                    CgFsImg::ListFiles(&v19, v51, 0);\n
                    goto LABEL_408bd0;\n
                }\n
            case 1:\n
                cgc_printf(&g_40aa9e);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                if (cgc_freaduntil(v51, 0x400, 14, v2) > 0)\n
                {\n
                    CgFsImg::ListFiles(&v19, v51, 1);\n
                    goto LABEL_408bd0;\n
                }\n
            case 2:\n
                v11 = 0;\n
                v12 = 0;\n
                cgc_printf(&g_40aab5);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                if (cgc_freaduntil(v51, 0x400, 14, v2) <= 0)\n
                    goto LABEL_408bd0;\n
                if (!CgFsImg::PreviewFile(&v19, v51, &v11, &v12))\n
                    break;\n
                if (!v11)\n
                    break;\n
                if (!v12)\n
                    break;\n
                v35 = 0;\n
                do\n
                {\n
                    cgc_printf(&g_40a3e9);\n
                    v35 += 1;\n
                } while (v35 < v12);\n
                cgc_printf(&g_40a88b);\n
                cgc_fflush(v23);\n
                v37 = v11;\n
                if (!v37)\n
                    break;\n
                goto LABEL_40911d;\n
            case 3:\n
                v8 = 0;\n
                v10 = 0;\n
                cgc_printf(&g_40aad4);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                v0 = v51;\n
                v31 = v2;\n
                if (cgc_freaduntil(v0, 0x400, 14, v31) > 0)\n
                {\n
                    cgc_printf(&g_40aaf5);\n
                    cgc_printf(v3);\n
                    cgc_fflush(v23);\n
                    if (cgc_freaduntil(&v11, 16, 14, v31) > 0)\n
                    {\n
                        cgc_printf(&g_40ab03);\n
                        cgc_printf(v3);\n
                        cgc_fflush(v23);\n
                        if (cgc_freaduntil(&v12, 16, 14, v31) > 0)\n
                        {\n
                            if (!CgFsImg::ReadFromFile(&v19, &v18, cgc_strtol(&v11, NULL, 10), cgc_strtol(&v12, NULL, 10), &v8, &v10))\n
                                break;\n
                            if (!v8)\n
                                break;\n
                            if (!v10)\n
                                break;\n
                            v40 = 0;\n
                            do\n
                            {\n
                                cgc_printf(&g_40a3e9);\n
                                v40 += 1;\n
                            } while (v40 < v10);\n
                            cgc_printf(&g_40a88b);\n
                            cgc_fflush(v23);\n
                            v37 = v8;\n
                            if (!v37)\n
                                break;\n
LABEL_40911d:\n
                            operator delete[](v37);\n
                            v51 = &v18;\n
                            goto LABEL_408bd0;\n
                        }\n
                    }\n
                }\n
                v51 = &v18;\n
                goto LABEL_408bd0;\n
            case 4:\n
                v8 = 0;\n
                cgc_printf(&g_40ab22);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                v32 = v2;\n
                if (cgc_freaduntil(v51, 0x400, 14, v2) > 0)\n
                {\n
                    cgc_printf(&g_40aaf5);\n
                    cgc_printf(v3);\n
                    cgc_fflush(v23);\n
                    if (cgc_freaduntil(&v11, 16, 14, v32) > 0)\n
                    {\n
                        cgc_printf(&g_40ab42);\n
                        cgc_printf(v3);\n
                        cgc_fflush(v23);\n
                        if (cgc_freaduntil(&v12, 16, 14, v32) > 0)\n
                        {\n
                            v9 = cgc_strtol(&v11, NULL, 10);\n
                            v38 = cgc_strtol(&v12, NULL, 10);\n
                            if (v38)\n
                            {\n
                                v4 = v38;\n
                                v5 = operator new[](v38);\n
                                cgc_printf(&g_40ab62);\n
                                cgc_fflush(v23);\n
                                v1 = v32;\n
                                v41 = v5;\n
                                if (cgc_fread(v5, v4, v1) <= 0)\n
                                {\n
                                    operator delete[](v41);\n
                                }\n
                                else\n
                                {\n
                                    if (CgFsImg::WriteToFile(&v19, v51, v9, v4, v41, &v8) && v8)\n
                                    {\n
                                        cgc_printf(&g_40ab8d);\n
                                        if (v8)\n
                                        {\n
                                            v44 = 0;\n
                                            do\n
                                            {\n
                                                cgc_printf(&g_40a3e9);\n
                                                v44 += 1;\n
                                            } while (v44 < v8);\n
                                        }\n
                                        cgc_printf(&g_40a88b);\n
                                        cgc_fflush(v23);\n
                                        v51 = &v18;\n
                                    }\n
                                    v45 = v5;\n
                                    goto LABEL_409ac2;\n
                                }\n
                            }\n
                        }\n
                    }\n
                }\n
                goto LABEL_408bd0;\n
            case 5:\n
                cgc_printf(&g_40aba3);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                v33 = v2;\n
                if (cgc_freaduntil(v51, 0x400, 14, v33) > 0)\n
                {\n
                    cgc_printf(&g_40abc1);\n
                    cgc_printf(v3);\n
                    cgc_fflush(v6);\n
                    if (cgc_freaduntil(&v11, 16, 14, v33) > 0)\n
                    {\n
                        v23 = v6;\n
                        v51 = &v18;\n
                        cgc_printf((!CgFsImg::UpdateFileSize(&v19, &v18, cgc_strtol(&v11, NULL, 10)) ? &g_40abd1 : &g_40abf5));\n
LABEL_408c8d:\n
                        cgc_fflush(v23);\n
                        goto LABEL_408bd0;\n
                    }\n
                }\n
            case 6:\n
                cgc_memset(&v8, 0, 12);\n
                cgc_printf(&g_40ac11);\n
                v26 = v51;\n
                v27 = v3;\n
                cgc_printf(v27);\n
                cgc_fflush(v23);\n
                if (cgc_freaduntil(v26, 0x400, 14, v2) <= 0)\n
                {\n
LABEL_409adb:\n
                    v51 = &v18;\n
                    goto LABEL_408bd0;\n
                }\n
                else\n
                {\n
                    cgc_printf(&g_40ac35);\n
                    cgc_printf(v27);\n
                    cgc_fflush(v23);\n
                    if (cgc_freaduntil(&v8, 12, 14, v2) <= 0)\n
                        goto LABEL_409adb;\n
                    cgc_printf(&g_40ac4d);\n
                    cgc_printf(v27);\n
                    cgc_fflush(v23);\n
                    if (cgc_freaduntil(&v11, 16, 14, v2) <= 0)\n
                        goto LABEL_409adb;\n
                    cgc_printf(&g_40ac65);\n
                    cgc_printf(&g_40ac77);\n
                    cgc_printf(&g_40ac7f);\n
                    cgc_printf(&g_40ac86);\n
                    cgc_printf(v27);\n
                    cgc_fflush(v23);\n
                    if (cgc_freaduntil(&v12, 16, 14, v2) <= 0)\n
                        goto LABEL_409adb;\n
                    v42 = cgc_strtol(&v12, NULL, 10);\n
                    v5 = cgc_strtol(&v11, NULL, 10);\n
                    if (v42 == 3)\n
                    {\n
                        v43 = FillBuffer(0x4347c000, v5);\n
                        v51 = &v18;\n
                    }\n
                    else\n
                    {\n
                        v43 = 0;\n
                        v51 = &v18;\n
                        if (v42 == 1)\n
                        {\n
                            v4 = operator new[](v5);\n
                            cgc_printf(&g_40ab62);\n
                            cgc_fflush(v23);\n
                            if (cgc_fread(v4, v5, v2) > 0)\n
                            {\n
                                v43 = v4;\n
                            }\n
                            else\n
                            {\n
                                operator delete[](v4);\n
                                goto LABEL_409adb;\n
                            }\n
                        }\n
                    }\n
                    v4 = v43;\n
                    v46 = CgFsImg::AddFile(&v19, v51, &v8, v43, v5);\n
                    v47 = v4;\n
                    if (v46)\n
                    {\n
                        cgc_printf(&g_40aca0);\n
                        cgc_printf(&g_40acb9);\n
                        cgc_printf(\"New file name: \");\n
                        if (cgc_strlen(&v8))\n
                        {\n
                            v48 = 0;\n
                            do\n
                            {\n
                                cgc_printf(&g_40a635);\n
                                v48 += 1;\n
                            } while (v48 < cgc_strlen(&v8));\n
                        }\n
                        cgc_printf(&g_40a88b);\n
                        if (v4)\n
                        {\n
                            v9 = &g_40a88b;\n
                            cgc_printf(&g_40acd9);\n
                            v49 = v5;\n
                            if (v49)\n
                            {\n
                                v50 = 0;\n
                                do\n
                                {\n
                                    cgc_printf(&g_40a3e9);\n
                                    v50 += 1;\n
                                } while (v49 != v50);\n
                            }\n
                            cgc_printf(v9);\n
                            v23 = v6;\n
                        }\n
                        cgc_fflush(v23);\n
                        v51 = &v18;\n
                        v47 = v4;\n
                    }\n
                    if (!v47)\n
                        goto LABEL_408bd0;\n
                    v45 = v47;\n
LABEL_409ac2:\n
                    operator delete[](v45);\n
                    goto LABEL_408bd0;\n
                }\n
            case 7:\n
                cgc_memset(&v11, 0, 12);\n
                cgc_printf(&g_40acf1);\n
                v28 = v51;\n
                v29 = v3;\n
                cgc_printf(v29);\n
                cgc_fflush(v23);\n
                v34 = v2;\n
                if (cgc_freaduntil(v28, 0x400, 14, v34) > 0)\n
                {\n
                    cgc_printf(&g_40ad1a);\n
                    cgc_printf(v29);\n
                    cgc_fflush(v6);\n
                    if (cgc_freaduntil(&v11, 12, 14, v34) > 0)\n
                    {\n
                        v51 = &v18;\n
                        v23 = v6;\n
                        if (CgFsImg::AddDirectory(&v19, &v18, &v11))\n
                        {\n
                            cgc_printf(&g_40ad37);\n
                            cgc_printf(&g_40acb9);\n
                            cgc_printf(\"New directory name: \");\n
                            if (cgc_strlen(&v11))\n
                            {\n
                                v39 = 0;\n
                                do\n
                                {\n
                                    cgc_printf(&g_40a635);\n
                                    v39 += 1;\n
                                } while (v39 < cgc_strlen(&v11));\n
                            }\n
                            cgc_printf(&g_40a88b);\n
                            cgc_fflush(v23);\n
                            v51 = &v18;\n
                        }\n
                        goto LABEL_408bd0;\n
                    }\n
                }\n
            case 8:\n
                cgc_printf(&g_40ad6a);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                if (cgc_freaduntil(v51, 0x400, 14, v2) <= 0)\n
                    goto LABEL_408bd0;\n
                if (!CgFsImg::DeleteFile(&v19, v51))\n
                    goto LABEL_408bd0;\n
                cgc_printf(&g_40ad88);\n
                goto LABEL_408c85;\n
            case 9:\n
                cgc_printf(&g_40adb5);\n
                cgc_printf(v3);\n
                cgc_fflush(v23);\n
                if (cgc_freaduntil(v51, 0x400, 14, v2) <= 0)\n
                    goto LABEL_408bd0;\n
                if (!CgFsImg::DeleteDirectory(&v19, v51))\n
                    goto LABEL_408bd0;\n
                cgc_printf(&g_40add8);\n
LABEL_408c85:\n
                goto LABEL_40993a;\n
            case 10:\n
                CgFsImg::DebugMetadata(&v19);\n
                goto LABEL_408bd0;\n
            case 11:\n
                v30 = v7;\n
                if (CgFsImg::Unmount(&v19))\n
                    v30 = 0;\n
                v7 = v30;\n
LABEL_40993a:\n
                cgc_printf(v21);\n
                goto LABEL_408c8d;\n
            case 12:\n
LABEL_409aee:\n
                cgc_printf(&g_40ae52);\n
                cgc_fflush(v23);\n
                CgFsImg::__base_dtor__(&v19);\n
                return 0;\n
            default:\n
LABEL_408bd0:\n
                cgc_printf(v17);\n
            }\n
        }\n
    }\n
}\n
", "4230298:sub_408c9a": null, "4234012:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_receive": null, "5242892:_Znaj": null, "5242896:cgc_allocate": null, "5242900:cgc__terminate": null, "5242904:_ZdlPv": null, "5242908:cgc_deallocate": null, "5242912:_ZdaPv": null, "5242916:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}