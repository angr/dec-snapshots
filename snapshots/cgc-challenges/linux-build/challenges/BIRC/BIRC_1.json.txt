{"4210688:_init": "extern struct_0 *g_411f24;\n
\n
int _init()\n
{\n
    if (g_411f24)\n
    {\n
        g_411f24();\n
        return;\n
    }\n
    return;\n
}\n
", "4210736:sub_404030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4210752:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4210768:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4210784:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libstdc++.so::cgc_receive();\n
    return;\n
}\n
", "4210800:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4210816:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libstdc++.so::cgc_allocate();\n
    return;\n
}\n
", "4210832:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libstdc++.so::cgc__terminate();\n
    return;\n
}\n
", "4210848:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4210864:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libstdc++.so::cgc_deallocate();\n
    return;\n
}\n
", "4210880:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4210896:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libstdc++.so::cgc_transmit();\n
    return;\n
}\n
", "4210912:sub_4040e0": "int sub_4040e0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4210918:sub_4040e6": null, "4210928:_GLOBAL__sub_I_brc_default_codes.cc": "extern unsigned int _ZN12_GLOBAL__N_112exit_server_E;\n
extern unsigned int _ZN12_GLOBAL__N_113failure_resp_E;\n
extern unsigned int _ZN12_GLOBAL__N_113success_resp_E;\n
extern unsigned int _ZN12_GLOBAL__N_115malformed_resp_E;\n
extern unsigned int _ZN12_GLOBAL__N_117exit_server_resp_E;\n
extern unsigned int _ZN12_GLOBAL__N_117user_exists_resp_E;\n
extern unsigned int _ZN12_GLOBAL__N_13ok_E;\n
\n
int _GLOBAL__sub_I_brc_default_codes.cc()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v1 = v3;\n
    v4 = operator new(20);\n
    v0 = 2;\n
    BrcResponse::__ctor__(v4, 8, &_ZN12_GLOBAL__N_13ok_E);\n
    _ZN12_GLOBAL__N_113success_resp_E = v4;\n
    v5 = operator new(20);\n
    v0 = 2;\n
    BrcResponse::__ctor__(v5, 9, \"\\tc@cAc\");\n
    _ZN12_GLOBAL__N_117user_exists_resp_E = v5;\n
    v6 = operator new(20);\n
    v0 = 2;\n
    BrcResponse::__ctor__(v6, 64, \"@cAc\");\n
    _ZN12_GLOBAL__N_113failure_resp_E = v6;\n
    v7 = operator new(20);\n
    v0 = 2;\n
    BrcResponse::__ctor__(v7, 65, \"Ac\");\n
    _ZN12_GLOBAL__N_115malformed_resp_E = v7;\n
    v0 = 2;\n
    _ZN12_GLOBAL__N_117exit_server_resp_E = operator new(20);\n
    return BrcResponse::__ctor__(_ZN12_GLOBAL__N_117exit_server_resp_E, 1, &_ZN12_GLOBAL__N_112exit_server_E);\n
}\n
", "4211154:sub_4041d2": null, "4211168:_GLOBAL__sub_I_server_backend.cc": "extern unsigned int _ZN12_GLOBAL__N_115RegisteredUsersE;\n
extern unsigned int _ZN12_GLOBAL__N_118RegisteredChannelsE;\n
extern void* g_412bd0;\n
extern unsigned int g_412bd4;\n
extern void* g_412bdc;\n
extern unsigned int g_412be0;\n
\n
int _GLOBAL__sub_I_server_backend.cc()\n
{\n
    _ZN12_GLOBAL__N_115RegisteredUsersE = 0x100;\n
    g_412bd0 = 0;\n
    g_412bd4 = operator new[](0x400);\n
    _ZN12_GLOBAL__N_118RegisteredChannelsE = 0x100;\n
    g_412bdc = 0;\n
    g_412be0 = operator new[](0x400);\n
    return g_412be0;\n
}\n
", "4211265:sub_404241": null, "4211280:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4211323:sub_40427b": null, "4211324:sub_40427c": "int sub_40427c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4211328:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4211332:sub_404284": null, "4211344:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 56471;\n
    v6 = v5 + 802;\n
    v7 = v5 + 802;\n
    if (v7 == v6)\n
        return v5 + 802;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4211395:sub_4042c3": "int sub_4042c3()\n
{\n
}\n
", "4211401:sub_4042c9": "int sub_4042c9()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4211408:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 56407;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 802;\n
    v9 = (v6 + 802 - (v6 + 802) >> 31) + (802 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4211479:sub_404317": "int sub_404317()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4211488:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_411f18;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_411f18)\n
    {\n
        v0 = __dso_handle;\n
        sub_4040e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4211563:sub_40436b": "int sub_40436b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4211568:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211577:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4211581:sub_40437d": null, "4211584:cgc_calloc": "extern unsigned int g_heap;\n
\n
int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v4;  // eax\n
\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, ecx<4>, Load(addr=stack_base+8, size=4, endness=Iend_LE), 0x0<32>))\n
        return 0;\n
    v4 = cgc_malloc_alloc(&g_heap);\n
    if (v4)\n
    {\n
        v0 = v1 * a0;\n
        cgc_memset(v4, 0);\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4211674:sub_4043da": null, "4211680:cgc_isascii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isascii(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 1;\n
}\n
", "4211709:sub_4043fd": null, "4211712:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 2;\n
}\n
", "4211741:sub_40441d": null, "4211744:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 16;\n
}\n
", "4211773:sub_40443d": null, "4211776:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 14;\n
}\n
", "4211805:sub_40445d": null, "4211808:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 12;\n
}\n
", "4211837:sub_40447d": null, "4211840:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 4;\n
}\n
", "4211869:sub_40449d": null, "4211872:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 8;\n
}\n
", "4211901:sub_4044bd": null, "4211904:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 64;\n
}\n
", "4211933:sub_4044dd": null, "4211936:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 32;\n
}\n
", "4211965:sub_4044fd": null, "4211968:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(char v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[20260 + v0] & 4294967168;\n
}\n
", "4211997:sub_40451d": null, "4212000:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(char v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[20260 + v1] & 8))\n
        return (v1 ^ 32) - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[20260 + (v1 ^ 32)] & 2) >> 1);\n
    return v1 - 65 < 6 | (((&_GLOBAL_OFFSET_TABLE_)[20260 + v1] & 2) >> 1);\n
}\n
", "4212059:sub_40455b": null, "4212064:cgc_toupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_toupper(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[20260 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4212098:sub_404582": null, "4212112:cgc_digittoint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_digittoint(char v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = v1 ^ 32;\n
    if (!((&_GLOBAL_OFFSET_TABLE_)[20260 + v1] & 8))\n
        v2 = v1;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[20260 + v2] & 2))\n
        return v2 - 48;\n
    v3 = v2 - 65;\n
    v4 = v2 - 55;\n
    if (v3 < 6)\n
        return v4;\n
    return 0;\n
}\n
", "4212174:sub_4045ce": null, "4212176:cgc_tolower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tolower(char v0)\n
{\n
    unsigned int v1;  // edx\n
\n
    v1 = v0;\n
    if (((&_GLOBAL_OFFSET_TABLE_)[20260 + v1] & 8))\n
        return v1 ^ 32;\n
    return v1;\n
}\n
", "4212210:sub_4045f2": null, "4212224:__cxa_pure_virtual": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxa_pure_virtual()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = 1;\n
    cgc__terminate();\n
    cgc_exit();\n
    return;\n
}\n
", "4212256:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v2;\n
    cgc__terminate();\n
    cgc_fflush();\n
    return;\n
}\n
", "4212288:cgc_fflush": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int cgc_fflush(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    struct_0 *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // edi\n
    char *v9;  // ecx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    char *v13;  // esi, Other Possible Types: unsigned int\n
    char *v14;  // eax\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // esi\n
    void* v18;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
\n
    v5 = v4;\n
    v6 = v4->field_8;\n
    if (v6 == -1)\n
        return 0;\n
    if (v5->field_4 != 1)\n
    {\n
        v8 = v5->field_c;\n
        v9 = v5->field_10;\n
        v16 = v8 - v6;\n
        if (v9 && v16)\n
        {\n
            v2 = v6;\n
            v10 = v8 + ~(v6);\n
            v1 = v16 & 3;\n
            v13 = 0;\n
            if (v10 >= 3)\n
            {\n
                v11 = v16 & -0x4;\n
                v12 = 27 + v2 + v4;\n
                v13 = 0;\n
                do\n
                {\n
                    *((v12 + v13 - 3)) = v9[*((v12 + v13 - 3))];\n
                    *((v12 + v13 - 2)) = v9[*((v12 + v13 - 2))];\n
                    *((v12 + v13 - 1)) = v9[*((v12 + v13 - 1))];\n
                    *((v12 + v13)) = v9[*((v12 + v13))];\n
                    v13 += 4;\n
                } while (v11 != v13);\n
            }\n
            v5 = v4;\n
            if (v1)\n
            {\n
                v14 = v13 + v2 + v5 + 24;\n
                v15 = 0;\n
                do\n
                {\n
                    v14[v15] = v9[v14[v15]];\n
                    v15 += 1;\n
                } while (v1 != v15);\n
            }\n
            v6 = *((v5 + 8));\n
            v16 = *((v5 + 12)) - v6;\n
        }\n
        v1 = *(v5);\n
        v17 = v6 + v5 + 24;\n
        v18 = 0;\n
        while (v16 > v18)\n
        {\n
            v0 = &v3;\n
            v19 = cgc_transmit(v1, v17 + v18, v16 - v18);\n
            v18 += *(&v3);\n
            if (v19)\n
            {\n
                v7 = -1;\n
                v5 = v4;\n
                goto LABEL_40477d;\n
            }\n
        }\n
        v5 = v4;\n
    }\n
    v7 = 0;\n
LABEL_40477d:\n
    *((v5 + 12)) = 0;\n
    *((v5 + 8)) = 0;\n
    return v7;\n
}\n
", "4212627:sub_404793": null, "4212640:cgc_fbuffered": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
int cgc_fbuffered(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v8;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v9;  // esi\n
    char *v10;  // ecx\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    char *v15;  // eax\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    void* v19;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
\n
    v5 = a0;\n
    v6 = v4;\n
    v7 = v4->field_8;\n
    if (v7 == -1)\n
    {\n
        v21 = -(v5 < 1);\n
        *((v6 + 8)) = v21;\n
        *((v6 + 12)) = 0;\n
        return v21;\n
    }\n
    if (v6->field_4 == 1)\n
    {\n
        v8 = &v6->field_c;\n
    }\n
    else\n
    {\n
        v9 = v6->field_c;\n
        v10 = v6->field_10;\n
        v17 = v9 - v7;\n
        if (v10 && v17)\n
        {\n
            v1 = v7;\n
            v11 = v9 + ~(v7);\n
            v2 = v17 & 3;\n
            v14 = 0;\n
            if (v11 >= 3)\n
            {\n
                v12 = v17 & -0x4;\n
                v13 = v1 + v4 + 27;\n
                v14 = 0;\n
                do\n
                {\n
                    *((v13 + v14 - 3)) = v10[*((v13 + v14 - 3))];\n
                    *((v13 + v14 - 2)) = v10[*((v13 + v14 - 2))];\n
                    *((v13 + v14 - 1)) = v10[*((v13 + v14 - 1))];\n
                    *((v13 + v14)) = v10[*((v13 + v14))];\n
                    v14 += 4;\n
                } while (v12 != v14);\n
            }\n
            v6 = v4;\n
            if (v2)\n
            {\n
                v15 = 24 + v14 + v1 + v6;\n
                v16 = 0;\n
                do\n
                {\n
                    v15[v16] = v10[v15[v16]];\n
                    v16 += 1;\n
                } while (v2 != v16);\n
            }\n
            v7 = *((v6 + 8));\n
            v17 = *((v6 + 12)) - v7;\n
        }\n
        v1 = v6 + 12;\n
        v2 = *(v6);\n
        v18 = v7 + v6 + 24;\n
        v19 = 0;\n
        while (v17 > v19)\n
        {\n
            v0 = &v3;\n
            v20 = cgc_transmit(v2, v18 + v19, v17 - v19);\n
            v19 += *(&v3);\n
            if (v20)\n
                break;\n
        }\n
        v6 = v4;\n
        v5 = a0;\n
        v8 = v1;\n
    }\n
    *(v8) = 0;\n
}\n
", "4212992:cgc_fopen": "int cgc_fopen(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[6];  // eax\n
\n
    v0 = 1048;\n
    v2 = cgc_malloc();\n
    if (v2)\n
    {\n
        v2[0] = v1;\n
        v2[1] = 2 - (a0 < 1);\n
        v2[2] = 0;\n
        v2[3] = 0;\n
        v2[5] = 0;\n
        v2[4] = 0;\n
        return v2;\n
    }\n
    return 0;\n
}\n
", "4213088:cgc_fread": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v6, unsigned int a0, struct_0 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    struct_0 *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // edx\n
    struct_0 *v10;  // eax\n
    char *v11;  // eax\n
    unsigned int v12;  // ecx\n
    struct_0 *v13;  // ebp\n
    void* v15;  // edi, Other Possible Types: unsigned int\n
    char *v16;  // edx\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // ecx\n
    void* v20;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v21;  // eax\n
    char *v23;  // eax\n
    unsigned int v24;  // edx\n
    unsigned int v26;  // edx\n
    char *v27;  // edi, Other Possible Types: unsigned int\n
    unsigned int v28;  // esi\n
    char *v29;  // edi\n
    unsigned int v30;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = a1;\n
    v8 = v7->field_8;\n
    if (v8 == v7->field_c)\n
    {\n
        v7->field_c = 0;\n
        v7->field_8 = 0;\n
        v0 = &v5;\n
        if (!cgc_receive(v7->field_0, v7 + 1, 0x400))\n
        {\n
            v9 = *(&v5);\n
            if (v9)\n
            {\n
                v10 = a1;\n
                v10->field_c = v9;\n
                v11 = v10->field_14;\n
                if (v11)\n
                {\n
                    v12 = v9 & 3;\n
                    v15 = 0;\n
                    v13 = a1;\n
                    if (v9 - 1 >= 3)\n
                    {\n
                        v15 = 0;\n
                        do\n
                        {\n
                            *(24 + &v13->field_0 + v15) = v11[*(24 + &v13->field_0 + v15)];\n
                            *(25 + &v13->field_0 + v15) = v11[*(25 + &v13->field_0 + v15)];\n
                            *(26 + &v13->field_0 + v15) = v11[*(26 + &v13->field_0 + v15)];\n
                            *(27 + &v13->field_0 + v15) = v11[*(27 + &v13->field_0 + v15)];\n
                            v15 += 4;\n
                        } while ((v9 & -0x4) != v15);\n
                    }\n
                    if (v12)\n
                    {\n
                        v16 = 24 + a1 + v15;\n
                        v17 = 0;\n
                        do\n
                        {\n
                            v16[v17] = v11[v16[v17]];\n
                            v17 += 1;\n
                        } while (v12 != v17);\n
                    }\n
                }\n
            }\n
        }\n
        v7 = a1;\n
        v8 = *((v7 + 8));\n
    }\n
    v18 = a0;\n
    v19 = v6;\n
    if (v8 != -1)\n
    {\n
        v20 = *((v7 + 12)) - v8;\n
        if (*((v7 + 12)) - v8 > v18)\n
            v20 = v18;\n
        v3 = v20;\n
        cgc_memcpy();\n
        v21 = *((v7 + 8)) + v20;\n
        *((v7 + 8)) = v21;\n
        if (v21 == *((v7 + 12)))\n
        {\n
            *((v7 + 12)) = 0;\n
            *((v7 + 8)) = 0;\n
        }\n
        v19 = v6;\n
        if (!(v20 < v18))\n
            goto LABEL_404bb1;\n
    }\n
    else\n
    {\n
        v20 = 0;\n
        if (0 >= v18)\n
        {\n
LABEL_404bb1:\n
            return v20;\n
        }\n
    }\n
    v4 = v19 + 3;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(*(v7), v6 + v20, v18 - v20))\n
            return -1;\n
        v2 = v3;\n
        if (!v2)\n
            return -1;\n
        v23 = *((v7 + 20));\n
        if (v23)\n
        {\n
            v24 = v2;\n
            v26 = v24 & 3;\n
            v27 = 0;\n
            if (v24 - 1 >= 3)\n
            {\n
                v28 = v4 + v20;\n
                v27 = 0;\n
                do\n
                {\n
                    *((v28 + v27 - 3)) = v23[*((v28 + v27 - 3))];\n
                    *((v28 + v27 - 2)) = v23[*((v28 + v27 - 2))];\n
                    *((v28 + v27 - 1)) = v23[*((v28 + v27 - 1))];\n
                    *((v28 + v27)) = v23[*((v28 + v27))];\n
                    v27 += 4;\n
                } while ((v2 & -0x4) != v27);\n
            }\n
            if (v26)\n
            {\n
                v29 = v27 + v20 + v6;\n
                v30 = 0;\n
                do\n
                {\n
                    v29[v30] = v23[v29[v30]];\n
                    v30 += 1;\n
                } while (v26 != v30);\n
            }\n
        }\n
        v20 += v2;\n
        v18 = a0;\n
        v7 = a1;\n
        if (v20 >= v18)\n
            return v20;\n
    }\n
}\n
", "4213439:sub_404abf": null, "4213691:sub_404bbb": null, "4213696:cgc_freaduntil": "int cgc_freaduntil(unsigned int v0, unsigned int a0, char a1, unsigned int a2)\n
{\n
    int tmp_21;  // tmp #21\n
    int tmp_1;  // tmp #1\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // ebp\n
    char *v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v1 = a0;\n
    v2 = a1;\n
    v3 = 0;\n
    tmp_21 = v1;\n
    v5 = v1 - 1;\n
    if (tmp_21 != 1)\n
    {\n
        while (true)\n
        {\n
            v4 = cgc__getc();\n
            if (v4 == -1)\n
                return -1;\n
            if (v4 == v2)\n
                break;\n
            *((v0 + v3)) = v4;\n
            v3 += 1;\n
            goto LABEL_404c18;\n
        }\n
    }\n
    tmp_1 = v5;\n
    v5 = v3;\n
    if (!(v3 == tmp_1))\n
        goto LABEL_404c30;\n
LABEL_404c18:\n
    while (true)\n
    {\n
        v6 = cgc__getc();\n
        if (v6 == -1)\n
            break;\n
        if (v6 == v2)\n
            goto LABEL_404c30;\n
    }\n
LABEL_404c30:\n
    *((v0 + v5)) = 0;\n
    return v5;\n
}\n
", "4213833:sub_404c49": null, "4213840:cgc__getc": "int cgc__getc()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // ebp\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // eax\n
\n
    v7 = v6;\n
    v8 = *((v6 + 8));\n
    if (v8 == -1)\n
    {\n
        v0 = &v3;\n
        v16 = -1;\n
        if (cgc_receive(*(v6), &v1, 1))\n
            return -1;\n
        if (!*(&v3))\n
            return -1;\n
        v9 = *((v6 + 20));\n
        *(&v16) = v1;\n
        if (!v9)\n
            return v16;\n
        *(&v16) = *((v9 + v16));\n
    }\n
    else if (v8 != *((v6 + 12)))\n
    {\n
LABEL_404d49:\n
        *((v7 + 8)) = v8 + 1;\n
        v16 = *((v7 + v8 + 24));\n
        return v16;\n
    }\n
    else\n
    {\n
        *((v6 + 12)) = 0;\n
        *((v6 + 8)) = 0;\n
        v0 = &v4;\n
        if (cgc_receive(*(v6), v6 + 24, 0x400))\n
            return -1;\n
        v13 = *(&v4);\n
        if (*(&v4))\n
        {\n
            *((v6 + 12)) = v13;\n
            v10 = *((v6 + 20));\n
            if (v10)\n
            {\n
                v2 = v13;\n
                v11 = v13 & 3;\n
                v12 = 0;\n
                if (v13 - 1 >= 3)\n
                {\n
                    v12 = 0;\n
                    do\n
                    {\n
                        *((v7 + v12 + 24)) = *((v10 + *((v7 + v12 + 24))));\n
                        *((v7 + v12 + 25)) = *((v10 + *((v7 + v12 + 25))));\n
                        *((v7 + v12 + 26)) = *((v10 + *((v7 + v12 + 26))));\n
                        *((v7 + v12 + 27)) = *((v10 + *((v7 + v12 + 27))));\n
                        v12 += 4;\n
                    } while ((v2 & -0x4) != v12);\n
                }\n
                v13 = v2;\n
                if (v11)\n
                {\n
                    v14 = v12 + v7 + 24;\n
                    v15 = 0;\n
                    do\n
                    {\n
                        *((v14 + v15)) = *((v10 + *((v14 + v15))));\n
                        v15 += 1;\n
                    } while (v11 != v15);\n
                }\n
            }\n
            if (v13 >= 0)\n
            {\n
                v8 = *((v7 + 8));\n
                goto LABEL_404d49;\n
            }\n
        }\n
    }\n
}\n
", "4214177:sub_404da1": null, "4214192:cgc_free": "extern unsigned int g_heap;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return malloc_free(&g_heap);\n
}\n
", "4214232:sub_404dd8": null, "4214240:cgc_fwrite": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v9, unsigned int a0, struct_1 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v3;  // [bp-0x418]\n
    char v4;  // [bp-0x414]\n
    char v5;  // [bp-0x410]\n
    unsigned int v6;  // [bp-0x40f]\n
    unsigned int v7;  // [bp-0x40e]\n
    unsigned int v8;  // [bp-0x40d]\n
    struct_1 *v10;  // esi\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // eax\n
    char *v13;  // edi\n
    unsigned int v14;  // eax\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    void* v16;  // edi, Other Possible Types: unsigned int\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // ecx\n
    char *v20;  // ecx\n
    unsigned int v21;  // edx\n
    void* v22;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v23;  // eax\n
    void* v24;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = a1;\n
    v11 = a0;\n
    if (v10->field_8 != -1)\n
    {\n
        if (v11 >= 0x400)\n
        {\n
            cgc_fflush(v10);\n
        }\n
        else\n
        {\n
            v12 = v10->field_c;\n
            v16 = 0;\n
            if (v12 + v11 >= 0x400)\n
            {\n
                v16 = 0x400 - v12;\n
                cgc_memcpy(&v10[1].padding_4[v12], v9);\n
                v10->field_c = v10->field_c + v16;\n
                cgc_fflush(v10);\n
            }\n
            if (v16 >= v11)\n
                return v16;\n
            cgc_memcpy(&v10[1].padding_4[v10->field_c], v9 + v16);\n
            v10->field_c = v10->field_c + a0 - v16;\n
            return a0;\n
        }\n
    }\n
    v2 = v10->field_0;\n
    v13 = v10->field_10;\n
    if (!v13)\n
    {\n
        v15 = 0;\n
        do\n
        {\n
            if (v15 >= v11)\n
                return a0;\n
            v0 = &v5;\n
            v14 = cgc_transmit(v2, v9 + v15, v11 - v15);\n
            v15 += *(&v5);\n
        } while (!v14);\n
    }\n
    else\n
    {\n
        if (!v11)\n
            return a0;\n
        v24 = 0;\n
LABEL_404e4e:\n
        v17 = v11 - v24;\n
        if (v17 >= 0x400)\n
            v17 = 0x400;\n
        v3 = v24;\n
        cgc_memcpy();\n
        if (v17)\n
        {\n
            v18 = v17 & 3;\n
            v19 = 0;\n
            if (v17 - 1 >= 3)\n
            {\n
                v19 = 0;\n
                do\n
                {\n
                    (&v5)[v19] = v13[(&v5)[v19]];\n
                    *(&v6 + v19) = v13[*(&v6 + v19)];\n
                    *(&v7 + v19) = v13[*(&v7 + v19)];\n
                    *(&v8 + v19) = v13[*(&v8 + v19)];\n
                    v19 += 4;\n
                } while ((v17 & 2044) != v19);\n
            }\n
            if (v18)\n
            {\n
                v20 = &(&v5)[v19];\n
                v21 = 0;\n
                do\n
                {\n
                    v20[v21] = v13[v20[v21]];\n
                    v21 += 1;\n
                } while (v18 != v21);\n
            }\n
        }\n
        v22 = 0;\n
        do\n
        {\n
            if (v17 <= v22)\n
            {\n
                v24 = v3 + v17;\n
                v11 = a0;\n
                if (v24 >= a0)\n
                    return a0;\n
                goto LABEL_404e4e;\n
            }\n
            v0 = &v4;\n
            v23 = cgc_transmit(v2, &(&v5)[v22], v17 - v22);\n
            v22 += *(&v4);\n
        } while (!v23);\n
    }\n
    return -1;\n
}\n
", "4214830:sub_40502e": null, "4214832:cgc_fxlat": "int cgc_fxlat(unsigned int v1[6], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v2;  // ebp\n
    unsigned int v3[6];  // edi\n
    char v4[256];  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // esi\n
    unsigned int v7;  // eax\n
    char *v8;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // edx\n
    char v15;  // al\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v7 = v3[4];\n
    if (!a0)\n
    {\n
        v4 = cgc_free(v7);\n
        v3[4] = 0;\n
        v3[5] = 0;\n
        return v4;\n
    }\n
    v0 = 0x100;\n
    v5 = cgc_realloc(v7);\n
    v3[4] = v5;\n
    v0 = 0x100;\n
    v3[5] = cgc_realloc(v3[5]);\n
    *(&v7) = *(v2);\n
    if (!*(v2))\n
    {\n
        v9 = 826981510;\n
    }\n
    else\n
    {\n
        v8 = v2 + 1;\n
        v9 = 826981510;\n
        do\n
        {\n
            v9 = __ROL__(v9 + v9 * 36 ^ v7, 13);\n
            v7 = *(v8);\n
            v8 += 1;\n
        } while (v7);\n
    }\n
    v10 = 0;\n
    do\n
    {\n
        *((v5 + v10)) = v10;\n
        *((v5 + v10 + 1)) = v10 + 1;\n
        *((v5 + v10 + 2)) = v10 + 2;\n
        *((v5 + v10 + 3)) = v10 + 3;\n
        *((v5 + v10 + 4)) = v10 + 4;\n
        *((v5 + v10 + 5)) = v10 + 5;\n
        *((v5 + v10 + 6)) = v10 + 6;\n
        *((v5 + v10 + 7)) = v10 + 7;\n
        v10 += 8;\n
    } while (v10 != 0x100);\n
    v11 = 255;\n
    while (true)\n
    {\n
        v12 = v9;\n
        v13 = v9 * 3;\n
        v14 = (0 CONCAT v12) /m v11 >> 32;\n
        v9 = v13 / 0x200000 ^ __ROL__(v13, 13);\n
        v15 = *((v5 + v11));\n
        *((v5 + v11)) = *((v5 + v14));\n
        *((v5 + v14)) = v15;\n
        v11 -= 1;\n
    }\n
}\n
", "4215200:cgc_malloc": "extern unsigned int g_heap;\n
\n
int cgc_malloc(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc_malloc_alloc(&g_heap);\n
}\n
", "4215240:sub_4051c8": null, "4215248:cgc_malloc_alloc": "extern char g_40d108;\n
extern char g_40d13a;\n
\n
int cgc_malloc_alloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x1c]\n
    char v4;  // [bp-0x14]\n
    unsigned int v9;  // edi\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ebp\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // ebp\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edi\n
    unsigned int v43;  // eax\n
\n
    v9 = 0;\n
    if (a0 < 0)\n
    {\n
LABEL_4054e4:\n
        return v9;\n
    }\n
    v10 = v8;\n
    v11 = a0 + 3 & -0x4;\n
    if (!(a0 + 3 & -0x4))\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 <= 15)\n
    {\n
        v43 = tiny_alloc();\n
        return v43;\n
    }\n
    if (v11 > 131071)\n
    {\n
        v14 = v11 + 4103 & -0x1000;\n
        v0 = &v4;\n
        v9 = 0;\n
        if (!cgc_allocate(v14, 0))\n
        {\n
            v17 = *(&v4);\n
            *(v17) = v8;\n
            *((v17 + 4)) = v14;\n
            v9 = v17 + 8;\n
            goto LABEL_4054e4;\n
        }\n
    }\n
    v12 = v11 + 23;\n
    v13 = v12 & -0x10;\n
    v2 = v13;\n
    if (!(v12 & -0x10))\n
    {\n
        v15 = -1;\n
        v16 = *((v10 + -0x4));\n
        if (!v16)\n
            goto LABEL_0x405454;\n
        else\n
            goto LABEL_0x405470;\n
    }\n
    else if (v13 < 513)\n
    {\n
        v15 = (v12 >> 4) + 2;\n
        v16 = 0;\n
    }\n
    else if (v13 <= 0x1200)\n
    {\n
        v15 = (v13 - 0x200 >> 7) + 34;\n
        v16 = *((v10 + v15 * 4));\n
        if (!v16)\n
            goto LABEL_0x405454;\n
        else\n
            goto LABEL_0x405470;\n
    }\n
    else\n
    {\n
        v15 = 130;\n
        if (v13 <= 0x20000)\n
        {\n
            v15 = (v13 - 0x1200 >> 11) + 66;\n
            v16 = *((v10 + v15 * 4));\n
            if (!v16)\n
                goto LABEL_0x405454;\n
            else\n
                goto LABEL_0x405470;\n
        }\n
    }\n
}\n
", "4216096:tiny_alloc": "int tiny_alloc()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned short *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned short *v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // edi\n
    struct struct_0 *v9[1160];  // ecx\n
    struct struct_0 *v10[1160];  // esi\n
    unsigned int v11;  // ebp\n
    unsigned short *v12;  // eax, Other Possible Types: unsigned int\n
    unsigned short v13[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // edi\n
\n
    v8 = v7;\n
    v10 = v9;\n
    if (v7 <= 15)\n
    {\n
        v11 = v7 / 4 - 1;\n
    }\n
    else if (v7 <= 0x200)\n
    {\n
        v11 = (v7 >> 4) + 2;\n
    }\n
    else if (v7 <= 0x1200)\n
    {\n
        v11 = (v7 - 0x200 >> 7) + 34;\n
    }\n
    else\n
    {\n
        v11 = 130;\n
        if (v7 <= 0x20000)\n
            v11 = (v7 - 0x1200 >> 11) + 66;\n
    }\n
    v12 = v9[v11];\n
    if (v12)\n
    {\n
        v9[v11] = *(&v12);\n
        return v9[v11];\n
    }\n
    v13 = v9[1155 + v11];\n
    if (v13)\n
    {\n
        v14 = v13[0];\n
        v15 = v13[1];\n
    }\n
    else\n
    {\n
        v16 = v10[1158];\n
        if (v16)\n
        {\n
            v12 = v10[1159];\n
        }\n
        else\n
        {\n
            v0 = &v5;\n
            if (cgc_allocate(0x200000, 0))\n
            {\n
                v10[1158] = 0;\n
                return 0;\n
            }\n
            v17 = *(&v5);\n
            v4 = v17 + 1048575;\n
            v16 = v4 & -0x100000;\n
            v1 = v17;\n
            v2 = v16;\n
            if (v16 > v1)\n
            {\n
                cgc_deallocate(v1);\n
                v16 = v2;\n
            }\n
            v18 = v1 + 0x200000;\n
            v3 = v16 + 0x100000;\n
            v1 = v18 - v3;\n
            if (v18 > v3)\n
            {\n
                cgc_deallocate(v3);\n
                v16 = v2;\n
            }\n
            *(524 + &v10[0] + (v4 >> 20)) = 1;\n
            v10[1158] = v16;\n
            v12 = 0;\n
            if (!v16)\n
                return 0;\n
        }\n
        v13 = v12 + v16;\n
        v10[1155 + v11] = v13;\n
        *((v12 + v16)) = v8;\n
        *((v12 + v16 + 2)) = v8;\n
        v19 = v12 + 0x1000;\n
        v10[1159] = v19;\n
        if (v19 == 0x100000)\n
            v10[1158] = 0;\n
        v14 = v8;\n
        v15 = v8;\n
    }\n
    v20 = v8 + v15;\n
    *((v13 + 2)) = v20;\n
    if (v14 + v20 < 4097)\n
        return v15 + v13;\n
    v10[1155 + v11] = 0;\n
}\n
", "4216527:sub_4056cf": null, "4216528:malloc_free": "int malloc_free(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v8;  // [bp-0x4]\n
    char v9;  // [bp+0x0]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v15;  // cl\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ebp\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // ecx\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // ebp\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // ecx\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // edx\n
    unsigned int v33;  // edi\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v37;  // edx\n
    unsigned int v38;  // eax\n
\n
    v7 = v11;\n
    v6 = v12;\n
    v5 = v13;\n
    v38 = a0;\n
    if (!v38)\n
    {\n
LABEL_4059f1:\n
        return v38;\n
    }\n
    v23 = v10;\n
    v15 = *((v23 + (v38 >> 20) + 524));\n
    if (v15 != 2)\n
    {\n
        if (v15 == 1)\n
        {\n
            v24 = *((v38 & -0x1000));\n
            if (v24 <= 15)\n
            {\n
                v17 = v24 / 4 - 1;\n
                goto LABEL_405856;\n
            }\n
            if (v24 <= 0x200)\n
            {\n
                v17 = (v24 >> 4) + 2;\n
                goto LABEL_405856;\n
            }\n
        }\n
        if (!(!v15))\n
            goto LABEL_4059f1;\n
        if ((v38 & 4095) != 8)\n
        {\n
            v19 = \"BAD FREE: large address is not aligned ptr=%08X\\n
\";\n
            goto LABEL_405a3d;\n
        }\n
        else\n
        {\n
            v20 = *((v38 - 8));\n
            if (v20 != v23)\n
            {\n
                v22 = \"BAD FREE: wrong heap address ptr=%08X (%08X != %08X)\\n
\";\n
                v1 = v23;\n
            }\n
            else\n
            {\n
                v20 = *((v38 - 4));\n
                if (v20 - 0x20000 <= 2147356671 && !(v20 & 4095))\n
                {\n
                    v38 = cgc_deallocate(v38 - 8);\n
                    goto LABEL_4059f1;\n
                }\n
                v22 = \"BAD FREE: wrong block size ptr=%08X (%08X)\\n
\";\n
            }\n
            v0 = v20;\n
            v38 = cgc_heap_error(v22, v38);\n
        }\n
    }\n
    else if (!(v38 & 7))\n
    {\n
        v24 = v38 - 8;\n
        v16 = *((v24 + 4));\n
        if ((v16 & 1))\n
        {\n
            v19 = \"BAD SMALL FREE: double free ptr=%08x\\n
\";\n
            goto LABEL_405a3d;\n
        }\n
        else if (v16 - 131073 <= -131058)\n
        {\n
            v19 = \"BAD SMALL FREE: corrupted size ptr=%08x\\n
\";\n
            goto LABEL_405a3d;\n
        }\n
        else\n
        {\n
            v21 = *(v24);\n
            v12 = v24 - *(v24);\n
            if (!*(v24))\n
                v12 = v21;\n
            v23 = v16 + v24;\n
            v2 = v24;\n
            if (v12)\n
            {\n
                v4 = v23;\n
                v3 = *((v12 + 4));\n
                if (!((v3 & -2) == v21))\n
                    goto LABEL_405a54;\n
                v23 = v4;\n
                v24 = v3;\n
                if (*(v23) == v16)\n
                {\n
                    if ((v24 & 1))\n
                    {\n
                        if (v21 <= 15)\n
                        {\n
                            v25 = v24 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v21 <= 0x200)\n
                            {\n
                                v25 = (v24 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v21 <= 0x1200)\n
                                {\n
                                    v25 = (v21 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v25 = 130;\n
                                    if (v21 <= 0x20000)\n
                                        v25 = (v21 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v12 + 4)) = v21;\n
                        v26 = *((v12 + 8));\n
                        if (v26)\n
                            *((v26 + 12)) = *((v12 + 12));\n
                        v27 = *((v12 + 12));\n
                        if (v27)\n
                            *((v27 + 8)) = v26;\n
                        if (*((v10 + (v25 << 2))) == v12)\n
                            *((v10 + v25 * 4)) = v27;\n
                        *((v12 + 8)) = 0;\n
                        *((v12 + 12)) = 0;\n
                        v28 = v21 + *((v2 + 4));\n
                        *((v12 + 4)) = v28;\n
                        *(v23) = v28;\n
                        v2 = v12;\n
                    }\n
LABEL_4058dc:\n
                    v29 = *((v23 + 4));\n
                    v30 = v10;\n
                    v12 = v2;\n
                    if ((v29 & 1))\n
                    {\n
                        v31 = v29 & -2;\n
                        if (v31 <= 15)\n
                        {\n
                            v32 = v29 / 4 - 1;\n
                        }\n
                        else\n
                        {\n
                            if (v31 <= 0x200)\n
                            {\n
                                v32 = (v29 >> 4) + 2;\n
                            }\n
                            else\n
                            {\n
                                if (v31 <= 0x1200)\n
                                {\n
                                    v32 = (v31 - 0x200 >> 7) + 34;\n
                                }\n
                                else\n
                                {\n
                                    v32 = 130;\n
                                    if (v31 <= 0x20000)\n
                                        v32 = (v31 - 0x1200 >> 11) + 66;\n
                                }\n
                            }\n
                        }\n
                        *((v23 + 4)) = v31;\n
                        v33 = *((v23 + 8));\n
                        if (v33)\n
                            *((v33 + 12)) = *((v23 + 12));\n
                        v34 = *((v23 + 12));\n
                        if (*((v23 + 12)))\n
                            *((v34 + 8)) = v33;\n
                        v30 = v10;\n
                        if (*((v30 + (v32 << 2))) == v23)\n
                            *((v30 + v32 * 4)) = v34;\n
                        *((v23 + 8)) = 0;\n
                        *((v23 + 12)) = 0;\n
                        v12 = v2;\n
                        v35 = v31 + *((v12 + 4));\n
                        *((v12 + 4)) = v35;\n
                        *((v12 + v35)) = v35;\n
                    }\n
                    v36 = *((v12 + 4));\n
                    if (v36 <= 15)\n
                    {\n
                        v37 = v36 / 4 - 1;\n
                    }\n
                    else\n
                    {\n
                        if (v36 <= 0x200)\n
                        {\n
                            v37 = (v36 >> 4) + 2;\n
                        }\n
                        else\n
                        {\n
                            if (v36 <= 0x1200)\n
                            {\n
                                v37 = (v36 - 0x200 >> 7) + 34;\n
                            }\n
                            else\n
                            {\n
                                v37 = 130;\n
                                if (v36 <= 0x20000)\n
                                    v37 = (v36 - 0x1200 >> 11) + 66;\n
                            }\n
                        }\n
                    }\n
                    if (!(!(v36 & 1)))\n
                        goto LABEL_405a44;\n
                    *((v12 + 4)) = v36 | 1;\n
                    *((v12 + 8)) = 0;\n
                    *((v12 + 12)) = *((v30 + v37 * 4));\n
                    *((v30 + v37 * 4)) = v12;\n
                    v38 = *((v12 + 12));\n
                    if (v38)\n
                    {\n
                        *((v38 + 8)) = v12;\n
                        goto LABEL_4059f1;\n
                    }\n
                }\n
            }\n
            else if (*((v24 + v16)) == v16)\n
            {\n
                goto LABEL_4058dc;\n
            }\n
            v0 = v38;\n
            v38 = cgc_heap_error(\"BAD SMALL FREE: heap corruption next=%08X ptr=%08X\\n
\", v23);\n
            v17 = (v24 <= 0x1200 ? (v24 - 0x1200 >> 11) + 66 : (v24 - 0x200 >> 7) + 34);\n
LABEL_405856:\n
            *(v38) = *((v23 + v17 * 4));\n
            *((v23 + v17 * 4)) = v38;\n
            goto LABEL_4059f1;\n
        }\n
    }\n
    v19 = \"BAD SMALL FREE: address is not aligned ptr=%08X\\n
\";\n
LABEL_405a3d:\n
    v8 = v38;\n
    v7 = v19;\n
    cgc_heap_error(*(&v9));\n
LABEL_405a44:\n
    v6 = v12;\n
    v5 = \"BAD SMALL UNLINK: block is already free hdr=%08X\\n
\";\n
    v38 = cgc_heap_error(*(&v9));\n
LABEL_405a54:\n
    v7 = v38;\n
    v6 = v12;\n
    v5 = \"BAD SMALL FREE: heap corruption prev=%08X ptr=%08X\\n
\";\n
    cgc_heap_error(v10, a0);\n
    return cgc_malloc_size(v10, a0);\n
}\n
", "4217456:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_size(unsigned int v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ecx\n
    char v2;  // dl\n
    void* v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *((v0 + (v1 >> 20) + 524));\n
    if (!(v2 & 253))\n
        return *(&v1->field_0) - 8;\n
    v3 = 0;\n
    if (v2 != 1)\n
        return v3;\n
    v3 = *((v1 & -0x1000));\n
}\n
", "4217505:sub_405aa1": null, "4217520:cgc_malloc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-4;\n
    unsigned short field_0;\n
} struct_0;\n
\n
int cgc_malloc_realloc(unsigned int v1, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // ebp\n
    char v6;  // dl\n
    void* v7;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    void* v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = a1;\n
    v3 = 0;\n
    if (v2 < 0)\n
    {\n
LABEL_405b85:\n
        return v3;\n
    }\n
    v4 = a0;\n
    v7 = v1;\n
    if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, eax<4>, 0x0<32>, 0x0<32>))\n
    {\n
LABEL_405b7d:\n
        malloc_free(v1, a0);\n
        goto LABEL_405b85;\n
    }\n
    if (!v4)\n
    {\n
        v11 = cgc_malloc_alloc(v7, v2);\n
        return v11;\n
    }\n
    v5 = v4 / 0x100000;\n
    v6 = *(524 + v7 + (v4 >> 20));\n
    if ((*(524 + v7 + (v4 >> 20)) & 253))\n
    {\n
        v7 = 0;\n
        if (v6 == 1)\n
            v7 = *((v4 & -0x1000));\n
        if (!(v7 < v2))\n
            goto LABEL_405b60;\n
    }\n
    else if (*(&v4->field_0) - 8 >= v2)\n
    {\n
LABEL_405b60:\n
        v3 = v4;\n
        goto LABEL_405b85;\n
    }\n
    v8 = cgc_malloc_alloc(v1, v2);\n
    if (!v8)\n
        goto LABEL_405b85;\n
    v3 = v8;\n
    v9 = v1;\n
    *(&v7) = *((v9 + v5 + 524));\n
    if (!(*((v9 + v5 + 524)) & 253))\n
    {\n
        v10 = *(&v4->field_0) - 8;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        if (v7 == 1)\n
            v10 = *((v4 & -0x1000));\n
    }\n
    v0 = v10;\n
    cgc_memcpy(v3, v4);\n
    goto LABEL_405b7d;\n
}\n
", "4217743:sub_405b8f": null, "4217744:cgc_heap_error": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stderr;\n
\n
int cgc_heap_error()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v6;\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v5;\n
    v1 = &v5;\n
    v0 = v4;\n
    cgc_vfprintf(cgc_stderr, v0);\n
    cgc__terminate(1, v0);\n
    cgc_memchr();\n
    return;\n
}\n
", "4217808:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // ecx\n
    char *v2;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = v0;\n
    while (true)\n
    {\n
        if (*(v2) == a0)\n
            return v2;\n
        v2 += 1;\n
        tmp_5 = v1;\n
        v1 -= 1;\n
        if (tmp_5 == 1)\n
            return 0;\n
    }\n
}\n
", "4217863:sub_405c07": null, "4217872:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (*((v0 + v2)) != *((a0 + v2)))\n
            return *((v0 + v2)) - *((a0 + v2));\n
        v2 += 1;\n
        if (v1 == v2)\n
            return 0;\n
    }\n
}\n
", "4217935:sub_405c4f": null, "4217936:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // esi\n
    char *v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // edx\n
    unsigned int v6;  // edi\n
    char *v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 3;\n
    v6 = 0;\n
    if (v1 - 1 >= 3)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v2[v6] = *((v3 + v6));\n
            v2[1 + v6] = *((v3 + v6 + 1));\n
            v2[2 + v6] = *((v3 + v6 + 2));\n
            v2[3 + v6] = *((v3 + v6 + 3));\n
            v6 += 4;\n
        } while ((v1 & -0x4) != v6);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v6];\n
    v8 = v3 + v6;\n
    v9 = 0;\n
    do\n
    {\n
        v7[v9] = *((v8 + v9));\n
        v9 += 1;\n
    } while (v4 != v9);\n
    return v0;\n
}\n
", "4218066:sub_405cd2": null, "4218080:cgc_memmove": "int cgc_memmove(char *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ebp\n
    char *v4;  // ecx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    char *v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edi\n
    char *v14;  // edi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // esi\n
    char *v17;  // edx\n
    unsigned int v18;  // ecx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    char *v21;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v4 = a0;\n
    v15 = v1;\n
    if (v15 > v4)\n
    {\n
        if (!v3)\n
            return v15;\n
        v5 = v3 - 1;\n
        v16 = v3 & 3;\n
        v14 = 0;\n
        if (v5 >= 3)\n
        {\n
            v0 = v16;\n
            v7 = v3;\n
            v8 = v15 + v5;\n
            v9 = &v4[v5];\n
            v11 = 0;\n
            do\n
            {\n
                v8[v11] = *((v9 + v11));\n
                v8[1 + v11] = *((v9 + v11 - 1));\n
                v8[2 + v11] = *((v9 + v11 - 2));\n
                v8[3 + v11] = *((v9 + v11 - 3));\n
                v11 -= 4;\n
            } while (-(v7 & -0x4) != v11);\n
            v14 = -(v11);\n
            v15 = v1;\n
            v3 = a1;\n
            v16 = v0;\n
        }\n
        if (!v16)\n
            return v15;\n
        v20 = ~(v14) + v3;\n
        v21 = v15 + v20;\n
        v23 = -(v16);\n
        v24 = 0;\n
        do\n
        {\n
            v21[v24] = v4[v24 + v20];\n
            v24 -= 1;\n
        } while (v23 != v24);\n
        return v15;\n
    }\n
    else\n
    {\n
        if (!v3)\n
            return v15;\n
        v6 = v3 & 3;\n
        v13 = 0;\n
        if (v3 - 1 >= 3)\n
        {\n
            v12 = v3 & -0x4;\n
            v13 = 0;\n
            do\n
            {\n
                *((v15 + v13)) = v4[v13];\n
                *((v15 + v13 + 1)) = v4[1 + v13];\n
                *((v15 + v13 + 2)) = v4[2 + v13];\n
                *((v15 + v13 + 3)) = v4[3 + v13];\n
                v13 += 4;\n
            } while (v12 != v13);\n
        }\n
        if (!v6)\n
            return v1;\n
        v17 = v15 + v13;\n
        v18 = &v4[v13];\n
        v19 = 0;\n
        do\n
        {\n
            v17[v19] = *((v18 + v19));\n
            v19 += 1;\n
        } while (v6 != v19);\n
        return v1;\n
    }\n
}\n
", "4218374:sub_405e06": null, "4218384:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edi\n
    char *v2;  // eax\n
    char v3;  // cl\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // esi\n
    char *v7;  // esi\n
    unsigned int v8;  // edi\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
        return v0;\n
    v3 = a0;\n
    v4 = v1 & 7;\n
    v5 = 0;\n
    if (v1 - 1 >= 7)\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v2[v5] = v3;\n
            v2[1 + v5] = v3;\n
            v2[2 + v5] = v3;\n
            v2[3 + v5] = v3;\n
            v2[4 + v5] = v3;\n
            v2[5 + v5] = v3;\n
            v2[6 + v5] = v3;\n
            v2[7 + v5] = v3;\n
            v5 += 8;\n
        } while ((v1 & -8) != v5);\n
    }\n
    if (!v4)\n
        return v0;\n
    v7 = &v2[v5];\n
    v8 = 0;\n
    do\n
    {\n
        v7[v8] = v3;\n
        v8 += 1;\n
    } while (v4 != v8);\n
    return v0;\n
}\n
", "4218494:sub_405e7e": null, "4218496:cgc_printf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_printf(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0x8]\n
    unsigned int v4;  // esi\n
\n
    v1 = &v3;\n
    if (cgc_stdout->field_8 == -1)\n
    {\n
        cgc_stdout->field_8 = 0;\n
        v0 = 0;\n
        v4 = cgc__vsfprintf(cgc_stdout);\n
        cgc_fflush(cgc_stdout);\n
        cgc_stdout->field_8 = -1;\n
        return v4;\n
    }\n
    v0 = 0;\n
    v4 = cgc__vsfprintf(cgc_stdout);\n
    return v4;\n
}\n
", "4218609:sub_405ef1": null, "4218624:cgc_vprintf": "extern struct_0 *cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v2;  // eax\n
\n
    if (cgc_stdout->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v2 = cgc__vsfprintf(cgc_stdout);\n
        return v2;\n
    }\n
    cgc_stdout->field_8 = 0;\n
    v0 = 0;\n
    v2 = cgc__vsfprintf(cgc_stdout);\n
    cgc_fflush(cgc_stdout);\n
    cgc_stdout->field_8 = -1;\n
    return v2;\n
}\n
", "4218731:sub_405f6b": null, "4218736:cgc_fprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_fprintf(struct_0 *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    char v3;  // [bp+0xc]\n
    struct_0 *v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v4 = v2;\n
    v1 = &v3;\n
    if (v4->field_8 == -1)\n
    {\n
        v4->field_8 = 0;\n
        v0 = 0;\n
        v5 = cgc__vsfprintf(v4);\n
        cgc_fflush(v4);\n
        v4->field_8 = -1;\n
        return v5;\n
    }\n
    v0 = 0;\n
    v5 = cgc__vsfprintf(v4);\n
    return v5;\n
}\n
", "4218845:sub_405fdd": null, "4218848:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_vfprintf(struct_0 *v1, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x18]\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
\n
    v2 = v1;\n
    if (v2->field_8 != -1)\n
    {\n
        v0 = 0;\n
        v3 = cgc__vsfprintf(v2);\n
        return v3;\n
    }\n
    v2->field_8 = 0;\n
    v0 = 0;\n
    v3 = cgc__vsfprintf(v2);\n
    cgc_fflush(v2);\n
    v2->field_8 = -1;\n
    return v3;\n
}\n
", "4218951:sub_406047": null, "4218960:cgc_sprintf": "int cgc_sprintf(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    char v3;  // [bp+0xc]\n
\n
    v1 = &v3;\n
    v0 = v2;\n
    return cgc__vsfprintf(0);\n
}\n
", "4219008:cgc_vsprintf": "int cgc_vsprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc__vsfprintf(0);\n
}\n
", "4219051:sub_4060ab": null, "4219056:cgc__vsfprintf": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char field_1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_-1;\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__vsfprintf()\n
{\n
    unsigned int v1;  // [bp-0x6c]\n
    struct_0 *v3;  // [bp-0x64]\n
    unsigned int v4;  // [bp-0x60]\n
    unsigned int v6;  // [bp-0x58]\n
    char v8;  // [bp-0x50]\n
    unsigned int v11;  // [bp-0x8]\n
    char v13;  // [bp+0x8]\n
    unsigned int v31;  // ebx\n
    char *v32;  // ebx\n
    struct struct_0 **v33;  // ecx\n
    unsigned int v40;  // edx\n
    unsigned int v77;  // esi\n
    struct_0 *v78;  // eax\n
    struct_0 *v79;  // ebp\n
\n
    v11 = v31;\n
    v32 = *(&v13);\n
    v79 = v33 + 1;\n
    v3 = v33 + 1;\n
    v78 = *(v33);\n
    if (!*(v33))\n
    {\n
        v77 = 0;\n
    }\n
    else\n
    {\n
        v4 = v40;\n
        v6 = 20 + -0x1 * &v8;\n
        v77 = 0;\n
        v1 = &_GLOBAL_OFFSET_TABLE_;\n
    }\n
}\n
", "4219126:sub_4060f6": null, "4220640:cgc_realloc": "extern unsigned int g_heap;\n
\n
int cgc_realloc(void* v0, unsigned int a0)\n
{\n
    return cgc_malloc_realloc(&g_heap, v0, a0);\n
}\n
", "4220684:sub_40670c": null, "4220688:cgc_strcasecmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strcasecmp(char *v0, char *a0)\n
{\n
    char *v1;  // edi, Other Possible Types: unsigned int\n
    char v2;  // al, Other Possible Types: unsigned int\n
    struct_0 *v3;  // ebp, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = *(v0);\n
    if (*(v0))\n
    {\n
        v3 = v0 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return v2 - *(v1);\n
            v2 = cgc_tolower(v2);\n
            if (v2 != cgc_tolower(*(v1)))\n
                return *((v3 - 1)) - *(v1);\n
            v1 += 1;\n
            v2 = *(v3);\n
            v3 += 1;\n
        } while (v2);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4220806:sub_406786": null, "4220816:cgc_strcasestr": "int cgc_strcasestr(char v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_7;  // tmp #7\n
    char v2[2];  // esi, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    if (!v2[0])\n
        return 0;\n
    while (true)\n
    {\n
        v0 = cgc_strlen();\n
        if (!cgc_strncasecmp(v2, a0))\n
            return v2;\n
        tmp_7 = *((v2 + 1));\n
        v2 += 1;\n
        if (!tmp_7)\n
            return 0;\n
    }\n
}\n
", "4220905:sub_4067e9": null, "4220912:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edx\n
    char *v2;  // ecx\n
    unsigned int v3;  // bl, Other Possible Types: char\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v2);\n
    v4 = 0;\n
    if (*(v2))\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            if (v3 == v1)\n
                return &v0[v4];\n
            v3 = v2[1 + v4];\n
            v4 += 1;\n
        } while (v3);\n
    }\n
    v5 = (!v1 ? 0 : &v2[v4]);\n
    return v5;\n
}\n
", "4220982:sub_406836": null, "4220992:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char v3;  // bl\n
    char *v4;  // edx, Other Possible Types: unsigned int\n
    char v5;  // al\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v5 = *(v2);\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = *(v1);\n
            if (!v3)\n
                return v5 - *(v1);\n
            if (v5 != v3)\n
                return v5 - *(v1);\n
            v1 += 1;\n
            v5 = *(v4);\n
            v4 += 1;\n
        } while (v5);\n
    }\n
    return 0 - *(v1);\n
}\n
", "4221060:sub_406884": null, "4221072:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char *v3;  // ecx, Other Possible Types: unsigned int\n
    char v4;  // dl\n
    char *v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v1);\n
    v5 = v2;\n
    if (*(v1))\n
    {\n
        v3 = v1 + 1;\n
        v5 = v2;\n
        do\n
        {\n
            *(v5) = v4;\n
            v5 += 1;\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (v4);\n
    }\n
    *(v5) = 0;\n
    return v0;\n
}\n
", "4221124:sub_4068c4": null, "4221136:cgc_strdup": "int cgc_strdup(char *v0)\n
{\n
    char *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = cgc_strlen();\n
    v2 = cgc_malloc(v1 + 1);\n
    if (v2)\n
    {\n
        cgc_memcpy(v2, v0, v1);\n
        v1[v2] = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4221216:cgc_strlen": "int cgc_strlen(char *v0)\n
{\n
    char *v1;  // ecx\n
    void* v2;  // edx, Other Possible Types: unsigned int\n
    char v3;  // cc_dep1\n
\n
    v1 = v0;\n
    if (!*(v1))\n
        return 0;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = v1[1 + v2];\n
        v2 += 1;\n
    } while (v3);\n
    return v2;\n
}\n
", "4221248:cgc_strncasecmp": "int cgc_strncasecmp(char v1[2], char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    char v3[2];  // ebp, Other Possible Types: unsigned int\n
    char v4;  // al\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v2 = a0;\n
    v3 = v1;\n
    v0 = &v1[a1];\n
    v4 = v1[0];\n
    if (v1[0])\n
    {\n
        while (*(v2))\n
        {\n
            v5 = cgc_tolower(v4);\n
            if (v5 != cgc_tolower(*(v2)))\n
                break;\n
            if (v3 >= v0)\n
                break;\n
            v2 += 1;\n
            v4 = *((v3 + 1));\n
            v3 += 1;\n
            if (!v4)\n
                break;\n
        }\n
    }\n
    v6 = (v3 == v0 ? *(v3) - *(v2) : 0);\n
    return v6;\n
}\n
", "4221376:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi\n
    char *v3;  // eax\n
    char v4;  // bl\n
    char *v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // edx\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    v4 = *(v2);\n
    v6 = 0;\n
    v5 = v3;\n
    if (*(v2) && v1)\n
    {\n
        v6 = 0;\n
        while (true)\n
        {\n
            v3[v6] = v4;\n
            v4 = v2[1 + v6];\n
            v6 += 1;\n
            if (!v4)\n
                break;\n
            if (v6 >= v1)\n
                break;\n
        }\n
        v5 = &v3[v6];\n
    }\n
    if (v6 >= v1)\n
        return v0;\n
    v7 = v5 - v3;\n
    do\n
    {\n
        *(v5) = 0;\n
        v5 += 1;\n
        v7 += 1;\n
    } while (v7 < v1);\n
    return v0;\n
}\n
", "4221457:sub_406a11": null, "4221472:cgc_strndup": "int cgc_strndup(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // edi\n
    unsigned int v2;  // eax\n
    char *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v1 = a0;\n
    v2 = cgc_strlen(v0);\n
    v3 = (!(v2 <= v1) ? v2 : v1);\n
    v4 = cgc_malloc(v3 + 1);\n
    if (v4)\n
    {\n
        cgc_memcpy(v4, v0, v3);\n
        v3[v4] = 0;\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4221561:sub_406a79": null, "4221568:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v1, char *a0)\n
{\n
    char *v0;  // [bp-0x14]\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3;  // cl, Other Possible Types: char\n
    struct_1 *v4;  // edi, Other Possible Types: unsigned int\n
    void* v5;  // ebp, Other Possible Types: unsigned int\n
    char *v6;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v7;  // ecx, Other Possible Types: unsigned int\n
\n
    v2 = *(v1);\n
    if (!v2)\n
        return v2;\n
    v3 = *(v2);\n
    v0 = v2;\n
    if (!*(v2))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = v2 + 1;\n
        v5 = 0;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v6 = v4 - 1;\n
                v2 = v0;\n
                v7 = v1;\n
                if (!(!*((v4 - 1))))\n
                    goto LABEL_406ae1;\n
                goto LABEL_406adf;\n
            }\n
            v5 += 1;\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (v3);\n
        goto LABEL_406ae1;\n
    }\n
    v2 = v0;\n
    v6 = &v2[v5];\n
    v7 = v1;\n
LABEL_406adf:\n
    v4 = 0;\n
LABEL_406ae1:\n
    *(v7) = v4;\n
    *(v6) = 0;\n
    return v2;\n
}\n
", "4221698:sub_406b02": null, "4221712:cgc_strstr": "int cgc_strstr(char v0[2], char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    char v1[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    if (!v1[0])\n
        return 0;\n
    while (true)\n
    {\n
        if (cgc_strcmp(v1, a0))\n
        {\n
            tmp_7 = *((v1 + 1));\n
            v1 += 1;\n
            if (!tmp_7)\n
                return 0;\n
        }\n
        else\n
        {\n
            return v1;\n
        }\n
    }\n
}\n
", "4221800:sub_406b68": null, "4221808:cgc_strtol": "int cgc_strtol(char v6[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_2;  // tmp #2\n
    int tmp_5;  // tmp #5\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    char v10[2];  // esi\n
    char v11;  // al\n
    unsigned int v12;  // eax, Other Possible Types: char\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    unsigned int v17;  // edx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // esi\n
    void* v21;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v22;  // eax, Other Possible Types: unsigned int\n
    unsigned int v23;  // edx\n
    unsigned int v24;  // ecx\n
    char v25[2];  // ebp, Other Possible Types: unsigned int\n
    void* v26;  // esi, Other Possible Types: unsigned int\n
    char v27[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v28;  // ecx\n
    unsigned int v29;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = v9;\n
    v10 = v6;\n
    v12 = cgc_isspace(v10[0]);\n
    v25 = v10;\n
    if (v12)\n
    {\n
        v25 = v10;\n
        do\n
        {\n
            if (!*(v25))\n
            {\n
                v21 = 0;\n
                v23 = 1;\n
                v24 = 1;\n
                v26 = 0;\n
                v22 = a0;\n
                if (!v22)\n
                    goto LABEL_406d60;\n
            }\n
            v11 = *((v25 + 1));\n
            v25 += 1;\n
            v12 = cgc_isspace(v11);\n
        } while (v12);\n
    }\n
    v13 = a1;\n
    if (*(v25) != 45)\n
    {\n
        v0 = 1;\n
        if (*(v25) == 43)\n
            v25 += 1;\n
        if (!v13)\n
            goto LABEL_406c38;\n
    }\n
    else\n
    {\n
        v25 += 1;\n
        v0 = -1;\n
        if (!v13)\n
        {\n
LABEL_406c38:\n
            *(&v12) = *(v25);\n
            if (*(v25) != 48)\n
            {\n
LABEL_406c73:\n
                v12 = cgc_isdigit(v12);\n
                v13 = 10;\n
                if (!v12)\n
                    goto LABEL_406d40;\n
LABEL_406c8b:\n
                *(&v12) = *(v25);\n
LABEL_406c8e:\n
                if (!v12)\n
                {\n
LABEL_406d40:\n
                    v21 = 0;\n
                    v24 = 1;\n
                    v26 = 0;\n
                    v22 = a0;\n
                    v23 = v0;\n
                    if (!v22)\n
                        goto LABEL_406d60;\n
LABEL_406d55:\n
                    tmp_2 = v24;\n
                    v27 = v6;\n
                    if (!tmp_2)\n
                        v27 = v25;\n
                    *(v22) = v27;\n
                    goto LABEL_406d60;\n
                }\n
LABEL_406c96:\n
                v26 = 0;\n
                v21 = 0;\n
                v24 = 1;\n
                v1 = v13;\n
                do\n
                {\n
                    v2 = v24;\n
                    v14 = cgc_isdigit(v12);\n
                    v15 = *(v25);\n
                    if (v14)\n
                    {\n
                        v16 = v15 - 48;\n
                        v17 = v1;\n
                        if (!(v16 < v17))\n
                            goto LABEL_406d83;\n
                    }\n
                    else\n
                    {\n
                        v19 = *(v25);\n
                        if (cgc_islower(v15))\n
                        {\n
                            v16 = v19 - 87;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_406d83;\n
                        }\n
                        else if (!cgc_isupper(v19))\n
                        {\n
LABEL_406d83:\n
                            v22 = a0;\n
                            v23 = v0;\n
                            v24 = v2;\n
                            if (!v22)\n
                                goto LABEL_406d60;\n
                            goto LABEL_406d55;\n
                        }\n
                        else\n
                        {\n
                            v16 = *(v25) - 55;\n
                            v17 = v1;\n
                            if (!(v16 < v17))\n
                                goto LABEL_406d83;\n
                        }\n
                    }\n
                    v20 = v17 * v26;\n
                    tmp_5 = v20;\n
                    v26 = v20 + v16;\n
                    if ([D] x86g_calculate_condition(0x8<32>, 0x3<32>, t5, ecx<4>, 0x0<32>))\n
                        v21 = 1;\n
                    v12 = *((v25 + 1));\n
                    v25 += 1;\n
                    v24 = 0;\n
                } while (v12);\n
                goto LABEL_406d55;\n
            }\n
            else\n
            {\n
                *(&v12) = *((v25 + 1));\n
                if ((v12 & 248) == 48)\n
                {\n
                    v25 += 1;\n
                    v13 = 8;\n
                    goto LABEL_406c96;\n
                }\n
                v12 = cgc_tolower(v12);\n
                if (v12 != 120)\n
                {\n
                    *(&v12) = *(v25);\n
                    goto LABEL_406c73;\n
                }\n
                else\n
                {\n
                    v25 += 2;\n
                }\n
            }\n
LABEL_406c69:\n
            v13 = 16;\n
            goto LABEL_406c8b;\n
        }\n
    }\n
    if (!(v13 == 16))\n
        goto LABEL_406c8b;\n
    *(&v12) = *(v25);\n
    v13 = 16;\n
    if (!(*(v25) == 48))\n
        goto LABEL_406c8e;\n
    v25 += (cgc_tolower(*((v25 + 1))) == 120) * 2;\n
    goto LABEL_406c69;\n
LABEL_406d60:\n
    v28 = (!v21 ? 0x80000000 : -(v26));\n
    v29 = ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, edi<4>, 0x0<32>, 0x0<32>) ? 2147483647 : v26);\n
    if (v23 < 0)\n
        v29 = v28;\n
    return v29;\n
}\n
", "4222167:sub_406cd7": null, "4222357:sub_406d95": null, "4222368:cgc_strtoul": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoul(char v8[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_2;  // tmp #2\n
    int tmp_67;  // tmp #67\n
    int tmp_41;  // tmp #41\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v3[2];  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    char v12[2];  // esi\n
    char v13;  // al\n
    void* v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax, Other Possible Types: char\n
    void* v16;  // edi\n
    void* v17;  // edi\n
    void* v18;  // edi, Other Possible Types: unsigned int\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // ecx\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // ebp\n
    unsigned int v27;  // ebx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edx\n
    unsigned int v30;  // eax\n
    unsigned int v31;  // edx\n
    char v32[2];  // ebp\n
    unsigned int v33;  // edi\n
    char v34[2];  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v35;  // eax, Other Possible Types: unsigned int\n
    unsigned int v36;  // edx\n
    char v37[2];  // ecx, Other Possible Types: unsigned int\n
    char v38[2];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v39;  // ebx\n
    unsigned int v40;  // eax\n
    unsigned int v41;  // ecx\n
    unsigned int v42;  // cc_dep2\n
    unsigned int v43;  // eax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v12 = v8;\n
    v34 = v12;\n
    if (cgc_isspace(v12[0]))\n
    {\n
        v34 = v12;\n
        do\n
        {\n
            if (!*(v34))\n
            {\n
                v14 = 0;\n
                v36 = 1;\n
                goto LABEL_406e9c;\n
            }\n
            v13 = *((v34 + 1));\n
            v34 += 1;\n
        } while (cgc_isspace(v13));\n
    }\n
    v0 = a1;\n
    if (*(v34) != 45)\n
    {\n
        v36 = 1;\n
        if (*(v34) == 43)\n
            v34 += 1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (!v15)\n
            goto LABEL_406e66;\n
        goto LABEL_406e10;\n
    }\n
    else\n
    {\n
        v34 += 1;\n
        v36 = -1;\n
        v15 = a1;\n
        v4 = &_GLOBAL_OFFSET_TABLE_;\n
        if (v15)\n
        {\n
LABEL_406e10:\n
            if (v15 == 16)\n
            {\n
                *(&v15) = *(v34);\n
                if (*(v34) == 48)\n
                {\n
                    v34 += (cgc_tolower(*((v34 + 1))) == 120) * 2;\n
                    v0 = 16;\n
                    goto LABEL_406f05;\n
                }\n
                else\n
                {\n
                    v0 = 16;\n
                    if (!(!v15))\n
                        goto LABEL_406f0c;\n
                    goto LABEL_406e9a;\n
                }\n
            }\n
        }\n
        else\n
        {\n
LABEL_406e66:\n
            *(&v15) = *(v34);\n
            if (*(v34) == 48)\n
            {\n
                *(&v15) = *((v34 + 1));\n
                if ((v15 & 248) == 48)\n
                {\n
                    v1 = v36;\n
                    v34 += 1;\n
                    v0 = 8;\n
                    goto LABEL_406f10;\n
                }\n
                v15 = cgc_tolower(v15);\n
                if (v15 != 120)\n
                {\n
                    *(&v15) = *(v34);\n
                }\n
                else\n
                {\n
                    v34 += 2;\n
                    v0 = 16;\n
                    goto LABEL_406f05;\n
                }\n
            }\n
            v1 = v36;\n
            v15 = cgc_isdigit(v15);\n
            v0 = 10;\n
            if (!v15)\n
            {\n
                v14 = 0;\n
                v37 = 1;\n
                v2 = 0;\n
                v16 = 0;\n
                v35 = a0;\n
                v36 = v1;\n
                if (!v35)\n
                    goto LABEL_407027;\n
LABEL_40701c:\n
                tmp_2 = v37;\n
                v38 = v8;\n
                if (!tmp_2)\n
                    v38 = v34;\n
                *(v35) = v38;\n
            }\n
            else\n
            {\n
                v36 = v1;\n
LABEL_406f05:\n
                *(&v15) = *(v34);\n
                if (*(v34))\n
                {\n
LABEL_406f0c:\n
                    v1 = v36;\n
LABEL_406f10:\n
                    v2 = 0;\n
                    v18 = 0;\n
                    v14 = 0;\n
                    v37 = 1;\n
                    do\n
                    {\n
                        *(&v3) = v37;\n
                        v19 = cgc_isdigit(v15);\n
                        v20 = *(v34);\n
                        if (v19)\n
                        {\n
                            v21 = v20 - 48;\n
                            v22 = v0;\n
                            if (!(v21 < v22))\n
                                goto LABEL_406fed;\n
                        }\n
                        else\n
                        {\n
                            v24 = *(v34);\n
                            if (cgc_islower(v20))\n
                            {\n
                                v21 = v24 - 87;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_406fed;\n
                            }\n
                            else if (!cgc_isupper(v24))\n
                            {\n
LABEL_406fed:\n
                                v35 = a0;\n
                                v36 = v1;\n
                                v37 = v3;\n
                                if (!v35)\n
                                    goto LABEL_407027;\n
                                goto LABEL_40701c;\n
                            }\n
                            else\n
                            {\n
                                v21 = *(v34) - 55;\n
                                v22 = v0;\n
                                if (!(v21 < v22))\n
                                    goto LABEL_406fed;\n
                            }\n
                        }\n
                        *(&v3) = v34;\n
                        v25 = v2;\n
                        v26 = v25 * (v22 >> 31);\n
                        v27 = v14;\n
                        v28 = v22;\n
                        tmp_67 = v25 * v22;\n
                        v29 = v25 * v22 >> 32;\n
                        v30 = tmp_67;\n
                        v31 = v28 * v18 + v26 + v29;\n
                        v32 = v3;\n
                        v33 = v21 >> 31;\n
                        v2 = v30 + v21;\n
                        tmp_41 = v33;\n
                        v18 = v33 + v31 + (v30 + v21 < v30);\n
                        v14 = ([D] x86g_calculate_condition(0x5<32>, 0x9<32>, t41, Xor(edx<4>, Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))), Conv(1->32, ((eax<4> + ecx<4>) < eax<4>))) ? v27 : 1);\n
                        v15 = v32[1];\n
                        v34 = &v32[1];\n
                        v37 = 0;\n
                    } while (v15);\n
                    goto LABEL_407027;\n
                }\n
LABEL_406e9a:\n
                v14 = 0;\n
LABEL_406e9c:\n
                v37 = 1;\n
                v2 = 0;\n
                v17 = 0;\n
                v35 = a0;\n
                if (!v35)\n
                    goto LABEL_407027;\n
                goto LABEL_40701c;\n
            }\n
        }\n
    }\n
LABEL_407027:\n
    v39 = v2;\n
    v40 = -(v39);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v40 = v39;\n
    v41 = -(0 < v14) | v40;\n
    v42 = v39 < 2147483649;\n
    v43 = ([D] x86g_calculate_condition(0x2<32>, 0xc<32>, edi<4>, cc_dep2<4>, cc_dep2<4>) ? -1 : v41);\n
    if ((v36 >> 31 & 1 ^ 1))\n
        v43 = v41;\n
    return v43;\n
}\n
", "4222811:sub_406f5b": null, "4223064:sub_407058": null, "4223072:_ZN7BrcChatC2Et": "extern char g_411d90;\n
\n
int BrcChat::__base_ctor__(unsigned int v3[5], unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6[5];  // esi\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v6 = v3;\n
    v0 = a0;\n
    BrcProtocol::__base_ctor__(v6);\n
    v6[0] = &g_411d90;\n
    v6[3] = 65535;\n
    v6[4] = 0;\n
    return &g_411d90;\n
}\n
", "4223137:sub_4070a1": null, "4223152:_ZN7BrcChatC2EPcS0_S0_sttt": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
    unsigned short field_c;\n
    unsigned short field_e;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
} struct_0;\n
\n
extern char g_411d90;\n
\n
int BrcChat::__base_ctor__(struct_0 *v6, char *a0, char *a1, char *a2, char a3, char a4, char a5, char a6)\n
{\n
    unsigned short v0;  // [bp-0x1e]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ebp\n
    struct_0 *v10;  // esi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = *(&a6);\n
    v1 = *(&a5);\n
    v9 = *(&a4);\n
    v0 = *(&a3);\n
    v10 = v6;\n
    v2 = &g_411d90;\n
    v10->field_0 = &g_411d90;\n
    v11 = BrcProtocol::token_length const() + v9 + v1;\n
    BrcProtocol::__base_ctor__(v10);\n
    v10->field_0 = v2;\n
    v10->field_c = v0;\n
    v10->field_e = v9;\n
    v10->field_10 = v1;\n
    v10->field_12 = v3;\n
    v10->field_8 = operator new[](v10->field_4);\n
    BrcProtocol::set_token();\n
    v12 = v10->field_8;\n
    v13 = BrcProtocol::token_length const();\n
    cgc_memcpy(v12 + v13, &a3, 2);\n
    cgc_memcpy(v12 + v13 + 2, &a4, 2);\n
    cgc_memcpy(v12 + v13 + 4, &a5, 2);\n
    cgc_memcpy(v12 + v13 + 6, &a6, 2);\n
    cgc_memcpy(v12 + v13 + 8, a0, *(&a4));\n
    cgc_memcpy(*(&a4) + v12 + v13 + 8, a1, *(&a5));\n
    return cgc_memcpy(*(&a5) + *(&a4) + v6->field_8 + v13 + 8, a2, *(&a6));\n
}\n
", "4223529:sub_407229": null, "4223536:_ZN7BrcChatD1Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[10];\n
    unsigned int field_e;\n
    unsigned short field_12;\n
} struct_0;\n
\n
extern char g_411d90;\n
\n
int BrcChat::__dtor__(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax\n
\n
    v2 = v1;\n
    v2->field_0 = &g_411d90;\n
    *(&(&v2->padding_4)[1]) = 0;\n
    *((&v2->field_e + 2)) = 0;\n
    v0 = v2;\n
    return BrcProtocol::__dtor__();\n
}\n
", "4223590:sub_407266": null, "4223600:_ZN7BrcChatD0Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[10];\n
    unsigned int field_e;\n
    unsigned short field_12;\n
} struct_0;\n
\n
extern char g_411d90;\n
\n
int BrcChat::__deleting_dtor__(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    struct_0 *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v3->field_0 = &g_411d90;\n
    *(&(&v3->padding_4)[1]) = 0;\n
    *((&v3->field_e + 2)) = 0;\n
    BrcProtocol::__dtor__(v3, v0);\n
    return operator delete(v1);\n
}\n
", "4223662:sub_4072ae": null, "4223664:_ZN7BrcChat4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned short field_c;\n
    unsigned short field_e;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
int BrcChat::Recv(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
    struct_0 *v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned short *v7;  // edi\n
    unsigned int v8;  // eax\n
\n
    v2 = v4;\n
    v5 = v3;\n
    v0 = a0;\n
    v6 = BrcProtocol::Recv(v5);\n
    if (v6)\n
    {\n
        v7 = v5->field_8;\n
        v1 = v6;\n
        v8 = BrcProtocol::token_length const();\n
        v5->field_c = *((v7 + v8));\n
        v5->field_e = *((2 + v7 + v8));\n
        v5->field_10 = *((4 + v7 + v8));\n
        v6 = *((6 + v7 + v8));\n
        v5->field_12 = v6;\n
        *(&v6) = v1;\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4223767:sub_407317": null, "4223776:_ZNK7BrcChat11protocol_idEv": "int BrcChat::protocol_id const()\n
{\n
    return 4;\n
}\n
", "4223782:sub_407326": null, "4223792:_ZNK7BrcChat9chat_typeEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned short field_c;\n
} struct_0;\n
\n
int BrcChat::chat_type const(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4223801:sub_407339": null, "4223808:_ZNK7BrcChat18sender_name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[14];\n
    unsigned short field_e;\n
} struct_0;\n
\n
int BrcChat::sender_name_length const(struct_0 *v0)\n
{\n
    return v0->field_e;\n
}\n
", "4223817:sub_407349": null, "4223824:_ZNK7BrcChat21recipient_name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
} struct_0;\n
\n
int BrcChat::recipient_name_length const(struct_0 *v0)\n
{\n
    return v0->field_10;\n
}\n
", "4223833:sub_407359": null, "4223840:_ZNK7BrcChat15chat_msg_lengthEv": "typedef struct struct_0 {\n
    char padding_0[18];\n
    unsigned short field_12;\n
} struct_0;\n
\n
int BrcChat::chat_msg_length const(struct_0 *v0)\n
{\n
    return v0->field_12;\n
}\n
", "4223849:sub_407369": null, "4223856:_ZNK7BrcChat11sender_nameEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcChat::sender_name const(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return BrcProtocol::token_length const(v1, *(&v0)) + v1->field_8 + 8;\n
}\n
", "4223897:sub_407399": null, "4223904:_ZNK7BrcChat9recp_nameEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[2];\n
    unsigned short field_e;\n
} struct_0;\n
\n
int BrcChat::recp_name const(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0 = v2;\n
    return BrcProtocol::token_length const() + v0->field_8 + v2->field_e + 8;\n
}\n
", "4223955:sub_4073d3": null, "4223968:_ZNK7BrcChat8chat_msgEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[2];\n
    unsigned short field_e;\n
    unsigned short field_10;\n
} struct_0;\n
\n
int BrcChat::chat_msg const(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0 = v2;\n
    return BrcProtocol::token_length const() + v0->field_8 + v2->field_10 + v0->field_e + 8;\n
}\n
", "4224025:sub_407419": null, "4224032:_ZN10BrcCommandC2Et": "extern char g_411dac;\n
\n
int BrcCommand::__base_ctor__(unsigned int v3[4], unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int v6[4];  // esi\n
\n
    v2 = v4;\n
    v1 = v5;\n
    v6 = v3;\n
    v0 = a0;\n
    BrcProtocol::__base_ctor__(v6);\n
    v6[0] = &g_411dac;\n
    v6[3] = 0;\n
    return &g_411dac;\n
}\n
", "4224090:sub_40745a": null, "4224096:_ZN10BrcCommandC1EPKcS1_tt": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
    unsigned short field_c;\n
    unsigned short field_e;\n
} struct_0;\n
\n
extern char g_411dac;\n
\n
int BrcCommand::__ctor__(struct_0 *v2, char *a0, char *a1, char a2, char a3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3;  // esi\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v0 = &g_411dac;\n
    v4->field_0 = &g_411dac;\n
    BrcProtocol::token_length const();\n
    BrcProtocol::__base_ctor__(v4);\n
    v4->field_0 = v0;\n
    v4->field_c = *(&a2);\n
    v4->field_e = *(&a3);\n
    v4->field_8 = operator new[](v4->field_4);\n
    BrcProtocol::set_token();\n
    v5 = v4->field_8;\n
    v6 = BrcProtocol::token_length const();\n
    cgc_memcpy(v6 + v5, &a2, 2);\n
    cgc_memcpy(v6 + v5 + 2, &a3, 2);\n
    cgc_memcpy(v6 + v5 + 4, a0, *(&a2));\n
    return cgc_memcpy(*(&a2) + v6 + v2->field_8 + 4, a1, *(&a3));\n
}\n
", "4224348:sub_40755c": null, "4224352:_ZN10BrcCommandD2Ev": "extern char g_411dac;\n
\n
int BrcCommand::__base_dtor__(unsigned int v1[4])\n
{\n
    unsigned int v0[4];  // [bp-0xc]\n
    unsigned int v2[4];  // eax\n
\n
    v2 = v1;\n
    v2[0] = &g_411dac;\n
    v2[3] = 0;\n
    v0[0] = v2;\n
    return BrcProtocol::__dtor__();\n
}\n
", "4224400:_ZN10BrcCommandD0Ev": "extern char g_411dac;\n
\n
int BrcCommand::__deleting_dtor__(unsigned int v1[4])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    unsigned int v3[4];  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v3[0] = &g_411dac;\n
    v3[3] = 0;\n
    BrcProtocol::__dtor__(v3, v0);\n
    return operator delete(v1);\n
}\n
", "4224456:sub_4075c8": null, "4224464:_ZN10BrcCommand4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned short field_c;\n
    unsigned short field_e;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
} struct_1;\n
\n
int BrcCommand::Recv(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // esi\n
    struct_0 *v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned short *v7;  // edi\n
    unsigned int v8;  // eax\n
\n
    v2 = v4;\n
    v5 = v3;\n
    v0 = a0;\n
    v6 = BrcProtocol::Recv(v5);\n
    if (v6)\n
    {\n
        v7 = v5->field_8;\n
        v1 = v6;\n
        v8 = BrcProtocol::token_length const();\n
        v5->field_c = *((v7 + v8));\n
        v6 = *((2 + v7 + v8));\n
        v5->field_e = v6;\n
        *(&v6) = v1;\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4224549:sub_407625": null, "4224560:_ZNK10BrcCommand11protocol_idEv": "int BrcCommand::protocol_id const()\n
{\n
    return 2;\n
}\n
", "4224566:sub_407636": null, "4224576:_ZNK10BrcCommand15username_lengthEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned short field_c;\n
} struct_0;\n
\n
int BrcCommand::username_length const(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4224585:sub_407649": null, "4224592:_ZNK10BrcCommand10cmd_lengthEv": "typedef struct struct_0 {\n
    char padding_0[14];\n
    unsigned short field_e;\n
} struct_0;\n
\n
int BrcCommand::cmd_length const(struct_0 *v0)\n
{\n
    return v0->field_e;\n
}\n
", "4224601:sub_407659": null, "4224608:_ZNK10BrcCommand8usernameEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcCommand::username const(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return BrcProtocol::token_length const(v1, *(&v0)) + v1->field_8 + 4;\n
}\n
", "4224649:sub_407689": null, "4224656:_ZNK10BrcCommand3cmdEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned short field_c;\n
} struct_0;\n
\n
int BrcCommand::cmd const(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0 = v2;\n
    return BrcProtocol::token_length const() + v0->field_8 + v2->field_c + 4;\n
}\n
", "4224707:sub_4076c3": null, "4224720:_ZN10BrcGlobals15check_user_codeEv": "extern char _ZN12_GLOBAL__N_116check_user_code_E;\n
\n
int BrcGlobals::check_user_code()\n
{\n
    return &_ZN12_GLOBAL__N_116check_user_code_E;\n
}\n
", "4224739:sub_4076e3": null, "4224752:_ZN10BrcGlobals18check_channel_codeEv": "extern char _ZN12_GLOBAL__N_119check_channel_code_E;\n
\n
int BrcGlobals::check_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_119check_channel_code_E;\n
}\n
", "4224771:sub_407703": null, "4224784:_ZN10BrcGlobals20verify_password_codeEv": "extern char _ZN12_GLOBAL__N_121verify_password_code_E;\n
\n
int BrcGlobals::verify_password_code()\n
{\n
    return &_ZN12_GLOBAL__N_121verify_password_code_E;\n
}\n
", "4224803:sub_407723": null, "4224816:_ZN10BrcGlobals13register_codeEv": "extern char _ZN12_GLOBAL__N_114register_code_E;\n
\n
int BrcGlobals::register_code()\n
{\n
    return &_ZN12_GLOBAL__N_114register_code_E;\n
}\n
", "4224835:sub_407743": null, "4224848:_ZN10BrcGlobals16delete_user_codeEv": "extern char _ZN12_GLOBAL__N_117delete_user_code_E;\n
\n
int BrcGlobals::delete_user_code()\n
{\n
    return &_ZN12_GLOBAL__N_117delete_user_code_E;\n
}\n
", "4224867:sub_407763": null, "4224880:_ZN10BrcGlobals17join_channel_codeEv": "extern char _ZN12_GLOBAL__N_118join_channel_code_E;\n
\n
int BrcGlobals::join_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_118join_channel_code_E;\n
}\n
", "4224899:sub_407783": null, "4224912:_ZN10BrcGlobals17part_channel_codeEv": "extern char _ZN12_GLOBAL__N_118part_channel_code_E;\n
\n
int BrcGlobals::part_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_118part_channel_code_E;\n
}\n
", "4224931:sub_4077a3": null, "4224944:_ZN10BrcGlobals19delete_channel_codeEv": "extern char _ZN12_GLOBAL__N_120delete_channel_code_E;\n
\n
int BrcGlobals::delete_channel_code()\n
{\n
    return &_ZN12_GLOBAL__N_120delete_channel_code_E;\n
}\n
", "4224963:sub_4077c3": null, "4224976:_ZN10BrcGlobals22add_channel_admin_codeEv": "extern char _ZN12_GLOBAL__N_123add_channel_admin_code_E;\n
\n
int BrcGlobals::add_channel_admin_code()\n
{\n
    return &_ZN12_GLOBAL__N_123add_channel_admin_code_E;\n
}\n
", "4224995:sub_4077e3": null, "4225008:_ZN10BrcGlobals21request_password_codeEv": "extern char _ZN12_GLOBAL__N_122request_password_code_E;\n
\n
int BrcGlobals::request_password_code()\n
{\n
    return &_ZN12_GLOBAL__N_122request_password_code_E;\n
}\n
", "4225027:sub_407803": null, "4225040:_ZN10BrcGlobals17channel_chat_codeEv": "extern char _ZN12_GLOBAL__N_118channel_chat_code_E;\n
\n
int BrcGlobals::channel_chat_code()\n
{\n
    return &_ZN12_GLOBAL__N_118channel_chat_code_E;\n
}\n
", "4225059:sub_407823": null, "4225072:_ZN10BrcGlobals14user_chat_codeEv": "extern char _ZN12_GLOBAL__N_115user_chat_code_E;\n
\n
int BrcGlobals::user_chat_code()\n
{\n
    return &_ZN12_GLOBAL__N_115user_chat_code_E;\n
}\n
", "4225091:sub_407843": null, "4225104:_ZN10BrcGlobals9ping_codeEv": "extern char _ZN12_GLOBAL__N_110ping_code_E;\n
\n
int BrcGlobals::ping_code()\n
{\n
    return &_ZN12_GLOBAL__N_110ping_code_E;\n
}\n
", "4225123:sub_407863": null, "4225136:_ZN10BrcGlobals9pong_codeEv": "int BrcGlobals::pong_code()\n
{\n
    return \"\\t\\t\\t\\t\\t\\t\\t\\t\";\n
}\n
", "4225155:sub_407883": null, "4225168:_ZN10BrcGlobals16server_exit_codeEv": "extern char _ZN12_GLOBAL__N_117server_exit_code_E;\n
\n
int BrcGlobals::server_exit_code()\n
{\n
    return &_ZN12_GLOBAL__N_117server_exit_code_E;\n
}\n
", "4225187:sub_4078a3": null, "4225200:_ZN10BrcGlobals31remote_admin_token_request_codeEv": "extern char _ZN12_GLOBAL__N_132remote_admin_token_request_code_E;\n
\n
int BrcGlobals::remote_admin_token_request_code()\n
{\n
    return &_ZN12_GLOBAL__N_132remote_admin_token_request_code_E;\n
}\n
", "4225219:sub_4078c3": null, "4225232:_ZN10BrcGlobals3eomEv": "extern char _ZN12_GLOBAL__N_14eom_E;\n
\n
int BrcGlobals::eom()\n
{\n
    return &_ZN12_GLOBAL__N_14eom_E;\n
}\n
", "4225251:sub_4078e3": null, "4225264:_ZN10BrcGlobals10eom_lengthEv": "short BrcGlobals::eom_length()\n
{\n
    return 2;\n
}\n
", "4225269:sub_4078f5": null, "4225280:_ZN10BrcGlobals2okEv": "extern char _ZN12_GLOBAL__N_13ok_E;\n
\n
int BrcGlobals::ok()\n
{\n
    return &_ZN12_GLOBAL__N_13ok_E;\n
}\n
", "4225299:sub_407913": null, "4225312:_ZN10BrcGlobals11user_existsEv": "int BrcGlobals::user_exists()\n
{\n
    return \"\\tc@cAc\";\n
}\n
", "4225331:sub_407933": null, "4225344:_ZN10BrcGlobals7failureEv": "int BrcGlobals::failure()\n
{\n
    return \"@cAc\";\n
}\n
", "4225363:sub_407953": null, "4225376:_ZN10BrcGlobals9malformedEv": "int BrcGlobals::malformed()\n
{\n
    return \"Ac\";\n
}\n
", "4225395:sub_407973": null, "4225408:_ZN10BrcGlobals11exit_serverEv": "extern char _ZN12_GLOBAL__N_112exit_server_E;\n
\n
int BrcGlobals::exit_server()\n
{\n
    return &_ZN12_GLOBAL__N_112exit_server_E;\n
}\n
", "4225427:sub_407993": null, "4225440:_ZN10BrcGlobals12success_respEv": "extern unsigned int _ZN12_GLOBAL__N_113success_resp_E;\n
\n
int BrcGlobals::success_resp()\n
{\n
    return _ZN12_GLOBAL__N_113success_resp_E;\n
}\n
", "4225459:sub_4079b3": null, "4225472:_ZN10BrcGlobals16user_exists_respEv": "extern unsigned int _ZN12_GLOBAL__N_117user_exists_resp_E;\n
\n
int BrcGlobals::user_exists_resp()\n
{\n
    return _ZN12_GLOBAL__N_117user_exists_resp_E;\n
}\n
", "4225491:sub_4079d3": null, "4225504:_ZN10BrcGlobals12failure_respEv": "extern unsigned int _ZN12_GLOBAL__N_113failure_resp_E;\n
\n
int BrcGlobals::failure_resp()\n
{\n
    return _ZN12_GLOBAL__N_113failure_resp_E;\n
}\n
", "4225523:sub_4079f3": null, "4225536:_ZN10BrcGlobals14malformed_respEv": "extern unsigned int _ZN12_GLOBAL__N_115malformed_resp_E;\n
\n
int BrcGlobals::malformed_resp()\n
{\n
    return _ZN12_GLOBAL__N_115malformed_resp_E;\n
}\n
", "4225555:sub_407a13": null, "4225568:_ZN10BrcGlobals16exit_server_respEv": "extern unsigned int _ZN12_GLOBAL__N_117exit_server_resp_E;\n
\n
int BrcGlobals::exit_server_resp()\n
{\n
    return _ZN12_GLOBAL__N_117exit_server_resp_E;\n
}\n
", "4225587:sub_407a33": null, "4225600:_ZN9BrcPacketC2EP4FILES1_": "int BrcPacket::__base_ctor__(unsigned int v0[5], unsigned int a0, unsigned int a1)\n
{\n
    void* v1;  // edi\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
    unsigned int v3[5];  // esi\n
\n
    v1 = a1;\n
    v2 = a0;\n
    v3 = v0;\n
    if (v2)\n
    {\n
        v3[0] = v2;\n
        v2 = cgc_fbuffered(v2, 0);\n
    }\n
    if (v1)\n
    {\n
        v3[1] = v1;\n
        v2 = cgc_fbuffered(v1, 0);\n
    }\n
    v3[2] = 65535;\n
    v3[3] = 0;\n
    v3[4] = 0;\n
    return v2;\n
}\n
", "4225693:sub_407a9d": null, "4225696:_ZN9BrcPacketD2Ev": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_3 *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int BrcPacket::__base_dtor__(struct_2 *v1)\n
{\n
    char v0;  // [bp-0x8]\n
    struct_2 *v2;  // esi\n
    struct struct_1 **v3;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    v2->field_0 = 0;\n
    v2->field_4 = 0;\n
    v2->field_8 = 65535;\n
    v3 = v2->field_c;\n
    if (v3)\n
    {\n
        v3 = *(v3)->field_4(v3, *(&v0));\n
        v2->field_c = 0;\n
    }\n
    v2->field_10 = 0;\n
    return v3;\n
}\n
", "4225770:sub_407aea": null, "4225776:_ZN9BrcPacket11ClearPacketEv": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_3 *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int BrcPacket::ClearPacket(struct_2 *v1)\n
{\n
    char v0;  // [bp-0x8]\n
    struct_2 *v2;  // esi\n
    struct struct_1 **v3;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v1;\n
    v2->field_8 = 65535;\n
    v3 = v2->field_c;\n
    if (v3)\n
    {\n
        v3 = *(v3)->field_4(v3, *(&v0));\n
        v2->field_c = 0;\n
    }\n
    v2->field_10 = 0;\n
    return v3;\n
}\n
", "4225837:sub_407b2d": null, "4225840:_ZN9BrcPacket4RecvEv": "typedef struct struct_5 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    struct struct_3 *field_c;\n
    unsigned int field_10;\n
} struct_5;\n
\n
typedef struct struct_2 {\n
    void* field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    struct struct_3 *field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int BrcPacket::Recv(struct_5 *v1)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_2 *v2;  // edi\n
    void* v3;  // eax\n
    unsigned short *v4;  // esi\n
    unsigned short *v5;  // ebp\n
    unsigned short v6;  // ax\n
    unsigned int v7[4];  // esi, Other Possible Types: unsigned int, unsigned int [5], struct struct_4 **\n
    struct struct_1 **v9;  // eax\n
\n
    v2 = v1;\n
    v3 = v2->field_0;\n
    if (!v3)\n
    {\n
LABEL_407d20:\n
        v2->field_8 = 65535;\n
        if (v2->field_c)\n
        {\n
            *(v9)->field_4();\n
            v2->field_c = 0;\n
        }\n
        v2->field_10 = 0;\n
        return -1;\n
    }\n
    else\n
    {\n
        if (cgc_fread(&v0, 1, v3) != 1)\n
            return -2;\n
        if (!(v0 == 86))\n
            goto LABEL_407d20;\n
        if (cgc_fread(&v0, 1, v2->field_0) == 1)\n
        {\n
            if (!(v0 == 41))\n
                goto LABEL_407d20;\n
            if (cgc_fread(&v0, 1, v2->field_0) == 1)\n
            {\n
                if (!(v0 == 137))\n
                    goto LABEL_407d20;\n
                if (cgc_fread(&v0, 1, v2->field_0) == 1)\n
                {\n
                    if (!(v0 == 206))\n
                        goto LABEL_407d20;\n
                    if (cgc_fread(&v0, 1, v2->field_0) == 1)\n
                    {\n
                        if (!(v0 == 115))\n
                            goto LABEL_407d20;\n
                        if (cgc_fread(&v0, 1, v2->field_0) == 1)\n
                        {\n
                            if (v0 == 196)\n
                            {\n
                                v4 = &v2->field_8;\n
                                cgc_fread(v4, 2, v2->field_0);\n
                                v5 = &v2->field_8 + 2;\n
                                cgc_fread(&v2->field_8 + 2, 2, v2->field_0);\n
                                if (*((&v2->field_8 + 2)) <= 0x8000)\n
                                {\n
                                    v6 = *(v4);\n
                                    if (v6 == 8)\n
                                    {\n
                                        v7 = operator new(20);\n
                                        BrcResponse::__ctor__(v7);\n
                                    }\n
                                    else if (v6 == 4)\n
                                    {\n
                                        v7 = operator new(20);\n
                                        BrcChat::__base_ctor__(v7, *(v5));\n
                                    }\n
                                    else\n
                                    {\n
                                        v7 = 0;\n
                                        if (!(v6 == 2))\n
                                            goto LABEL_407cd9;\n
                                        v7 = operator new(16);\n
                                        BrcCommand::__base_ctor__(v7, *(v5));\n
                                    }\n
LABEL_407cd9:\n
                                    v2->field_c = v7;\n
                                    if (*((*(v7) + 8))(v7))\n
                                    {\n
                                        cgc_fread(&v2->field_10, 4, v2->field_0);\n
                                        if (v2->field_10 == BrcPacket::CalcChecksum const(v2, 4))\n
                                            return *(v5) + 14;\n
                                    }\n
                                }\n
                            }\n
                            goto LABEL_407d20;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4226389:sub_407d55": null, "4226400:_ZNK9BrcPacket17IsValidProtocolIdEv": "char BrcPacket::IsValidProtocolId const()\n
{\n
    return 1;\n
}\n
", "4226403:sub_407d63": null, "4226416:_ZNK9BrcPacket18MatchRecvdProtocolEv": "int BrcPacket::MatchRecvdProtocol const(unsigned short v0[6])\n
{\n
    unsigned short v1[6];  // edi\n
    unsigned short v2;  // ax\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    v2 = v1[4];\n
    if (v2 == 8)\n
    {\n
        v3 = operator new(20);\n
        BrcResponse::__ctor__(v3);\n
        return v3;\n
    }\n
    else if (v2 == 4)\n
    {\n
        v3 = operator new(20);\n
        BrcChat::__base_ctor__(v3, v1[5]);\n
        return v3;\n
    }\n
    else if (v2 != 2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v3 = operator new(16);\n
        BrcCommand::__base_ctor__(v3, v1[5]);\n
        return v3;\n
    }\n
}\n
", "4226565:sub_407e05": null, "4226576:_ZNK9BrcPacket12CalcChecksumEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char field_8;\n
    char field_9;\n
    char field_a;\n
    char field_b;\n
    unsigned int field_c;\n
} struct_0;\n
\n
int BrcPacket::CalcChecksum const(struct_0 *v2)\n
{\n
    char *v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    struct_0 *v3;  // edi\n
    unsigned int v4;  // esi\n
    char *v5;  // ebp\n
    char *v6;  // eax\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edi\n
\n
    v3 = v2;\n
    if (!v3->field_c)\n
        return 0;\n
    v5 = BrcProtocol::token const();\n
    v6 = BrcProtocol::data const();\n
    if (!v6)\n
        return 0;\n
    v0 = v5;\n
    v1 = v6;\n
    v8 = v3->field_b + v3->field_a + v3->field_9 + v3->field_8 + 13;\n
    if (BrcProtocol::token_length const(v3->field_c, v5))\n
    {\n
        v7 = 0;\n
        do\n
        {\n
            v8 += v0[v7];\n
            v7 += 1;\n
        } while (v7 < BrcProtocol::token_length const());\n
    }\n
    if (BrcProtocol::data_length const())\n
    {\n
        v9 = 0;\n
        do\n
        {\n
            v8 += v1[v9];\n
            v9 += 1;\n
        } while (v9 < BrcProtocol::data_length const());\n
    }\n
    v4 = ~(v8);\n
    return v4;\n
}\n
", "4226808:sub_407ef8": null, "4226816:_ZNK9BrcPacket4SendEv": "typedef struct struct_4 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_3 *field_c;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    void* field_4;\n
    char padding_8[4];\n
    struct struct_3 *field_c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_1 *field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int BrcPacket::Send const(struct_4 *v3)\n
{\n
    void* v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned short v2;  // [bp-0x14]\n
    struct_2 *v4;  // edi\n
    struct struct_1 **v7;  // eax\n
\n
    v4 = v3;\n
    v2 = 50291;\n
    v1 = 3465095510;\n
    if ([D] x86g_calculate_condition(0x8<32>, 0x5<32>, Conv(16->32, Load(addr=(edi<4> + 0xa<32>), size=2, endness=Iend_LE)), 0x0<32>, 0x0<32>))\n
    {\n
        return -1;\n
    }\n
    else if (!v4->field_c)\n
    {\n
        return -1;\n
    }\n
    else if (cgc_fwrite(&v1, 6, v4->field_4) != 6)\n
    {\n
        return -1;\n
    }\n
    else if (cgc_fwrite(&v4->padding_8, 2, v4->field_4) != 2)\n
    {\n
        return -1;\n
    }\n
    else if (cgc_fwrite(&v4->padding_8[2], 2, v4->field_4) != 2)\n
    {\n
        return -1;\n
    }\n
    else if (!*(v7)->field_c(v4->field_c))\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        v0 = v4->field_4;\n
        if (cgc_fwrite(v4 + 1, 4, v0) == 4)\n
            return *(&v4->padding_8[2]) + 14;\n
        return -1;\n
    }\n
}\n
", "4227020:sub_407fcc": null, "4227024:_ZNK9BrcPacket13IsValidPacketEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int BrcPacket::IsValidPacket const(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = v1->field_c & [D] x86g_calculate_condition(0x9<32>, 0x5<32>, Conv(16->32, Load(addr=(eax<4> + 0xa<32>), size=2, endness=Iend_LE)), 0x0<32>, 0x0<32>);\n
    return v1;\n
}\n
", "4227046:sub_407fe6": null, "4227056:_ZN9BrcPacket9SetPacketEP11BrcProtocol": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
int BrcPacket::SetPacket(struct_2 *v0, struct struct_1 **a0)\n
{\n
    struct struct_1 **v1;  // edi\n
    struct_2 *v2;  // ebp\n
    unsigned int v3;  // eax\n
\n
    v1 = a0;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v2->field_8 = *(v1)->field_10();\n
        v2->field_a = BrcProtocol::data_length const() + BrcProtocol::token_length const();\n
        v2->field_c = v1;\n
        v3 = BrcPacket::CalcChecksum const(v2);\n
        v2->field_10 = v3;\n
    }\n
    *(&v3) = v1;\n
    return v3;\n
}\n
", "4227150:sub_40804e": null, "4227152:_ZNK9BrcPacket11GetProtocolEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int BrcPacket::GetProtocol const(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4227160:sub_408058": null, "4227168:_ZNK9BrcPacket11protocol_idEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
int BrcPacket::protocol_id const(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4227177:sub_408069": null, "4227184:_ZNK9BrcPacket16DebugPrintPacketEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int BrcPacket::DebugPrintPacket const(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = v1->field_c;\n
    return BrcProtocol::DebugPrintProtocol const();\n
}\n
", "4227220:sub_408094": null, "4227232:_ZN11BrcProtocolC2Et": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_411dc8;\n
\n
int BrcProtocol::__base_ctor__(struct_0 *v0, unsigned short a0)\n
{\n
    struct_0 *v1;  // edx\n
\n
    v1 = v0;\n
    v1->field_0 = &g_411dc8;\n
    v1->field_4 = a0;\n
    v1->field_8 = 0;\n
    return &g_411dc8;\n
}\n
", "4227273:sub_4080c9": null, "4227280:_ZN11BrcProtocolC2EPct": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
} struct_0;\n
\n
extern char g_411dc8;\n
\n
int BrcProtocol::__base_ctor__(struct_1 *v1, char *a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
\n
    v0 = a1;\n
    v2 = v1;\n
    v1->field_0 = &g_411dc8;\n
    cgc_memcpy(v2->field_8, TokenGenerator::GetToken(), TokenGenerator::GetTokenLength());\n
    v3 = TokenGenerator::GetTokenLength() + v0;\n
    v2->field_4 = v3;\n
    v4 = operator new[](v3);\n
    v2->field_8 = v4;\n
    return cgc_memcpy(TokenGenerator::GetTokenLength() + v4, a0, v0);\n
}\n
", "4227420:sub_40815c": null, "4227424:_ZN11BrcProtocol9set_tokenEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_0;\n
\n
int BrcProtocol::set_token(struct_0 *v2)\n
{\n
    char v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v3;  // [bp+0x8]\n
\n
    return cgc_memcpy(v2->field_8, TokenGenerator::GetToken(v2, v3), TokenGenerator::GetTokenLength(*(&v0), *(&v1)));\n
}\n
", "4227479:sub_408197": null, "4227488:_ZN11BrcProtocolD1Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char g_411dc8;\n
\n
int BrcProtocol::__dtor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v1->field_0 = &g_411dc8;\n
    v1->field_4 = 0;\n
    v2 = v1->field_8;\n
    if (v2)\n
        v2 = operator delete[](v2);\n
    v1->field_8 = 0;\n
    return v2;\n
}\n
", "4227549:sub_4081dd": null, "4227553:sub_4081e1": "int sub_4081e1()\n
{\n
    return BrcProtocol::Recv();\n
}\n
", "4227568:_ZN11BrcProtocol4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcProtocol::Recv(struct_0 *v0, unsigned int a0)\n
{\n
    void* v1;  // edi\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
\n
    v1 = a0;\n
    if (!v1)\n
        return 0;\n
    v2 = v0;\n
    v3 = v2->field_8;\n
    if (v3)\n
        operator delete[](v3);\n
    v5 = operator new[](v2->field_4);\n
    v2->field_8 = v5;\n
    v4 = cgc_fread(v5, v2->field_4, v1);\n
    *(&v4) = v4 == v2->field_4;\n
    return v4;\n
}\n
", "4227668:sub_408254": null, "4227680:_ZNK11BrcProtocol4SendEP4FILE": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcProtocol::Send const(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    void* v3;  // eax\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // eax\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (!v3)\n
        return 0;\n
    v4 = v1;\n
    v5 = v4->field_8;\n
    if (!v5)\n
        return 0;\n
    v6 = v4->field_4;\n
    if (v6)\n
    {\n
        v7 = cgc_fwrite(v5, v6, v3);\n
        *(&v7) = v7 == v4->field_4;\n
        return v7;\n
    }\n
    return 0;\n
}\n
", "4227759:sub_4082af": null, "4227760:_ZNK11BrcProtocol12token_lengthEv": "int BrcProtocol::token_length const()\n
{\n
    return TokenGenerator::GetTokenLength();\n
}\n
", "4227789:sub_4082cd": null, "4227792:_ZNK11BrcProtocol11data_lengthEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int BrcProtocol::data_length const(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return v1->field_4 - TokenGenerator::GetTokenLength(v2, *(&v0));\n
}\n
", "4227833:sub_4082f9": null, "4227840:_ZNK11BrcProtocol5tokenEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcProtocol::token const(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4227848:sub_408308": null, "4227856:_ZNK11BrcProtocol4dataEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcProtocol::data const(struct_0 *v2)\n
{\n
    char v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
\n
    v3 = v2->field_8;\n
    return (!v3 ? v3 + TokenGenerator::GetTokenLength(*(&v0), *(&v1)) : 0);\n
}\n
", "4227904:_ZNK11BrcProtocol18DebugPrintProtocolEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcProtocol::DebugPrintProtocol const(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1->field_4;\n
    return print_byte_array(v1->field_8);\n
}\n
", "4227945:sub_408369": null, "4227952:_ZN11BrcResponseC1Et": "extern char g_411de4;\n
\n
int BrcResponse::__ctor__(unsigned int v2[5], unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5[5];  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    BrcProtocol::__base_ctor__(v5, a0);\n
    v5[0] = &g_411de4;\n
    v5[4] = 65535;\n
    v5[3] = 99999999;\n
    return &g_411de4;\n
}\n
", "4228017:sub_4083b1": null, "4228032:_ZN11BrcResponse15set_server_addrEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int BrcResponse::set_server_addr(struct_0 *v0)\n
{\n
    v0->field_c = 99999999;\n
    return v0;\n
}\n
", "4228044:sub_4083cc": null, "4228048:_ZN11BrcResponseC1EsPct": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
} struct_0;\n
\n
extern char g_411de4;\n
\n
int BrcResponse::__ctor__(struct_0 *v2, char a0, char *a1, char a2)\n
{\n
    unsigned short v0;  // [bp-0x12]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // ebp\n
    struct_0 *v5;  // esi\n
    unsigned int v7;  // ebp\n
    unsigned int v8;  // esi\n
\n
    v1 = v3;\n
    v4 = *(&a2);\n
    v0 = *(&a0);\n
    v5 = v2;\n
    v5->field_0 = &g_411de4;\n
    BrcProtocol::__base_ctor__(v5, BrcProtocol::token_length const() + v4 + 8);\n
    v5->field_0 = &g_411de4;\n
    v5->field_10 = v0;\n
    v5->field_12 = v4;\n
    v5->field_8 = operator new[](v5->field_4);\n
    BrcProtocol::set_token(v5);\n
    v5->field_c = 99999999;\n
    v7 = v5->field_8;\n
    v8 = BrcProtocol::token_length const();\n
    cgc_memcpy(v8 + v7, &v5->field_c, 4);\n
    cgc_memcpy(v8 + v7 + 4, &a0, 2);\n
    cgc_memcpy(v8 + v7 + 6, &a2, 2);\n
    return cgc_memcpy(v8 + v7 + 8, a1, *(&a2));\n
}\n
", "4228299:sub_4084cb": null, "4228304:_ZN11BrcResponseD2Ev": "extern char g_411de4;\n
\n
int BrcResponse::__base_dtor__(unsigned int v0[5])\n
{\n
    unsigned int v1[5];  // eax\n
\n
    v1 = v0;\n
    v1[0] = &g_411de4;\n
    v1[3] = 0;\n
    v1[4] = 0;\n
    return BrcProtocol::__dtor__(v0);\n
}\n
", "4228359:sub_408507": null, "4228368:_ZN11BrcResponseD0Ev": "extern char g_411de4;\n
\n
int BrcResponse::__deleting_dtor__(unsigned int v1[5])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    unsigned int v3[5];  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v3[0] = &g_411de4;\n
    v3[3] = 0;\n
    v3[4] = 0;\n
    BrcProtocol::__dtor__(v3);\n
    return operator delete(v1);\n
}\n
", "4228431:sub_40854f": null, "4228432:_ZN11BrcResponse4RecvEP4FILE": "typedef struct struct_0 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
    unsigned int field_c;\n
    unsigned short field_10;\n
    unsigned short field_12;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int BrcResponse::Recv(struct_0 *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
    struct_0 *v4;  // esi\n
    unsigned int v5;  // eax\n
    unsigned int *v6;  // edi\n
    unsigned int v7;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    v5 = BrcProtocol::Recv(v4, a0);\n
    if (v5)\n
    {\n
        v6 = v4->field_8;\n
        v0 = v5;\n
        v7 = BrcProtocol::token_length const();\n
        v4->field_c = *((v6 + v7));\n
        v4->field_10 = *((4 + v6 + v7));\n
        v5 = *((6 + v6 + v7));\n
        v4->field_12 = v5;\n
        *(&v5) = v0;\n
        return v5;\n
    }\n
    return v5;\n
}\n
", "4228524:sub_4085ac": null, "4228528:_ZNK11BrcResponse11protocol_idEv": "int BrcResponse::protocol_id const()\n
{\n
    return 8;\n
}\n
", "4228534:sub_4085b6": null, "4228544:_ZNK11BrcResponse11server_addrEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int BrcResponse::server_addr const(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4228552:sub_4085c8": null, "4228560:_ZNK11BrcResponse13response_codeEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned short field_10;\n
} struct_0;\n
\n
int BrcResponse::response_code const(struct_0 *v0)\n
{\n
    return v0->field_10;\n
}\n
", "4228569:sub_4085d9": null, "4228576:_ZNK11BrcResponse10msg_lengthEv": "typedef struct struct_0 {\n
    char padding_0[18];\n
    unsigned short field_12;\n
} struct_0;\n
\n
int BrcResponse::msg_length const(struct_0 *v0)\n
{\n
    return v0->field_12;\n
}\n
", "4228585:sub_4085e9": null, "4228592:_ZNK11BrcResponse3msgEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int BrcResponse::msg const(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    return BrcProtocol::token_length const() + v0->field_8 + 8;\n
}\n
", "4228633:sub_408619": null, "4228640:_ZN14TokenGenerator8GetTokenEv": "extern char _ZN12_GLOBAL__N_115g_network_tokenE;\n
\n
int TokenGenerator::GetToken()\n
{\n
    return &_ZN12_GLOBAL__N_115g_network_tokenE;\n
}\n
", "4228659:sub_408633": null, "4228672:_ZN14TokenGenerator14GetTokenLengthEv": "short TokenGenerator::GetTokenLength()\n
{\n
    return 16;\n
}\n
", "4228677:sub_408645": null, "4228688:_ZN7ChannelC2EPKciP4User": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
    char padding_42[2];\n
    unsigned int field_44;\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
    unsigned int field_50;\n
    unsigned int field_54;\n
    struct struct_1 *field_58;\n
    struct struct_1 *field_5c;\n
    unsigned int field_60;\n
    unsigned int field_64;\n
    unsigned int field_68;\n
    unsigned int field_6c;\n
    unsigned int field_70;\n
    unsigned int field_74;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Channel::__base_ctor__(struct_0 *v0, char *a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v1;  // edi\n
    struct_0 *v2;  // ebp\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    void* v6;  // esi, Other Possible Types: unsigned int\n
    void* v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // ecx\n
\n
    v1 = a2;\n
    v2 = v0;\n
    v0->field_48 = 128;\n
    v0->field_4c = 0;\n
    v2->field_50 = operator new[](0x200);\n
    v2->field_54 = 128;\n
    v2->field_58 = 0;\n
    v2->field_5c = operator new[](0x200);\n
    v2->field_60 = 128;\n
    v2->field_64 = 0;\n
    v2->field_68 = operator new[](0x200);\n
    v2->field_6c = 128;\n
    v2->field_70 = 0;\n
    operator new[](0x600);\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    Chat::__ctor__();\n
    v2->field_74 = v3;\n
    v4 = a1;\n
    *(&v2->field_40) = (v4 < 64 ? 64 : v4);\n
    cgc_memcpy(v2, a0, v4);\n
    v2->field_40 = v4;\n
    v2->field_44 = v1;\n
    if (v2->field_64)\n
    {\n
        v6 = 0;\n
        do\n
        {\n
            v8 = User::Equals const(v1);\n
            if (v8)\n
                return v8;\n
            v6 += 1;\n
        } while (v6 < v2->field_64);\n
    }\n
    if (!v2->field_58)\n
    {\n
        v8 = 0;\n
        if (0 >= v2->field_54)\n
            return 0;\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        do\n
        {\n
            v8 = User::Equals const(v1);\n
            if (v8)\n
                return v8;\n
            v7 += 1;\n
            v8 = v2->field_58;\n
        } while (v7 < v8);\n
        if (v8 >= v2->field_54)\n
            return v2->field_58;\n
    }\n
    v9 = v2->field_5c;\n
    v2->field_58 = v8 + 1;\n
    *((v9 + v8 * 4)) = v1;\n
    return v8;\n
}\n
", "4230770:sub_408e72": null, "4230784:_ZN7Channel16AddUserToChannelEP4User": "typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
    struct struct_1 *field_58;\n
    struct struct_1 *field_5c;\n
    char padding_60[4];\n
    unsigned int field_64;\n
    struct struct_1 *field_68;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Channel::AddUserToChannel(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v2;  // esi\n
    struct_0 *v3;  // edi\n
    unsigned int *v4;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
\n
    v2 = a0;\n
    v3 = v1;\n
    if (v3->field_64)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v0 = v3->field_68[v4].field_0;\n
            if (User::Equals const(v2))\n
                break;\n
            v4 += 1;\n
            if (v4 >= v3->field_64)\n
                goto LABEL_408ece;\n
        }\n
    }\n
    else\n
    {\n
LABEL_408ece:\n
        if (!v3->field_58)\n
        {\n
            v6 = 0;\n
            if (0 < v3->field_54)\n
                goto LABEL_408f00;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            while (true)\n
            {\n
                v0 = v3->field_5c[v5].field_0;\n
                if (User::Equals const(v2))\n
                    break;\n
                v5 += 1;\n
                v6 = v3->field_58;\n
                if (v5 >= v6)\n
                {\n
LABEL_408f00:\n
                    v7 = v3->field_5c;\n
                    v3->field_58 = v6 + 1;\n
                    *((v7 + v6 * 4)) = v2;\n
                    *(&v6) = 1;\n
                    return v6;\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4230950:sub_408f26": null, "4230960:_ZN7Channel4nameEv": "int Channel::name(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4230965:sub_408f35": null, "4230976:_ZN7Channel11name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int Channel::name_length(struct_0 *v0)\n
{\n
    return v0->field_40;\n
}\n
", "4230985:sub_408f49": null, "4230992:_ZN7Channel7creatorEv": "typedef struct struct_0 {\n
    char padding_0[68];\n
    unsigned int field_44;\n
} struct_0;\n
\n
int Channel::creator(struct_0 *v0)\n
{\n
    return v0->field_44;\n
}\n
", "4231000:sub_408f58": null, "4231008:_ZN7Channel7IsAdminEP4User": "int Channel::IsAdmin(unsigned int v1[21], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v2[21];  // esi\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2[19])\n
        return 0;\n
    v3 = 1;\n
    while (true)\n
    {\n
        v0 = *((v2[20] + v3 * 4 - 4));\n
        v4 = User::Equals const(a0);\n
        if (v4)\n
            return v4;\n
        v3 += 1;\n
        if (1 >= v2[19])\n
            return v4;\n
    }\n
}\n
", "4231101:sub_408fbd": null, "4231104:_ZN7Channel8IsBannedEP4User": "int Channel::IsBanned(unsigned int v1[27], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v2[27];  // esi\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2[25])\n
        return 0;\n
    v3 = 1;\n
    while (true)\n
    {\n
        v0 = *((v2[26] + v3 * 4 - 4));\n
        v4 = User::Equals const(a0);\n
        if (v4)\n
            return v4;\n
        v3 += 1;\n
        if (1 >= v2[25])\n
            return v4;\n
    }\n
}\n
", "4231197:sub_40901d": null, "4231200:_ZN7Channel11CompareNameEPKct": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int Channel::CompareName(struct_0 *v1, unsigned int a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
    struct_0 *v6;  // edx\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (!v3)\n
        return 0;\n
    v5 = a1;\n
    v6 = v1;\n
    if (v6->field_40 == v5)\n
    {\n
        v4 = cgc_memcmp(v6, v3, v5);\n
        *(&v4) = !v4;\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4231268:sub_409064": null, "4231280:_ZN7Channel15AddUserToAdminsEP4User": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned int field_48;\n
    struct struct_1 *field_4c;\n
    struct struct_1 *field_50;\n
    char padding_54[16];\n
    unsigned int field_64;\n
    struct struct_1 *field_68;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Channel::AddUserToAdmins(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v2;  // esi\n
    struct_0 *v3;  // edi\n
    unsigned int *v4;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v5;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
\n
    v2 = a0;\n
    v3 = v1;\n
    if (v3->field_64)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v0 = v3->field_68[v4].field_0;\n
            if (User::Equals const(v2))\n
                break;\n
            v4 += 1;\n
            if (v4 >= v3->field_64)\n
                goto LABEL_4090be;\n
        }\n
    }\n
    else\n
    {\n
LABEL_4090be:\n
        if (!v3->field_4c)\n
        {\n
            v6 = 0;\n
            if (0 < v3->field_48)\n
                goto LABEL_4090f0;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            while (true)\n
            {\n
                v0 = v3->field_50[v5].field_0;\n
                if (User::Equals const(v2))\n
                    break;\n
                v5 += 1;\n
                v6 = v3->field_4c;\n
                if (v5 >= v6)\n
                {\n
LABEL_4090f0:\n
                    v7 = v3->field_50;\n
                    v3->field_4c = v6 + 1;\n
                    *((v7 + v6 * 4)) = v2;\n
                    *(&v6) = 1;\n
                    return v6;\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4231446:sub_409116": null, "4231456:_ZN7Channel16AddChatToChannelERK4Chat": "typedef struct struct_0 {\n
    char padding_0[108];\n
    unsigned int field_6c;\n
    struct struct_1 *field_70;\n
    struct struct_1 *field_74;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Channel::AddChatToChannel(struct_0 *v0, unsigned int a0[3])\n
{\n
    unsigned int v1[3];  // esi\n
    struct_0 *v2;  // edi\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
    unsigned int *v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // edx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    Chat::__ctor__();\n
    v3 = v2->field_70;\n
    if (v3 >= 2 && v3 >= v2->field_6c)\n
    {\n
        Chat::Delete();\n
        v4 = v2->field_70;\n
        v5 = v2->field_74;\n
        v2->field_70 = v4 + 1;\n
        cgc_memmove(v5, v5 + 3, (v4 * 4 - 4) * 3);\n
        v3 = v2->field_70;\n
    }\n
    v6 = v2->field_74;\n
    v2->field_70 = v3 + 1;\n
    v7 = v3 * 3;\n
    v6[2 + v7] = v1[2];\n
    v8 = v1[0];\n
    v6[1 + v7] = v1[1];\n
    v6[v7] = v8;\n
    return v7;\n
}\n
", "4231602:sub_4091b2": null, "4231616:_ZN7Channel21RemoveUserFromChannelEP4User": "int Channel::RemoveUserFromChannel(unsigned int v0[24], unsigned int a0)\n
{\n
    unsigned int v1[24];  // esi\n
    void* v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
    char *v7;  // ecx\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (!v1[22])\n
        return 0;\n
    v3 = 1;\n
    do\n
    {\n
        v6 = User::Equals const(a0);\n
        if (v6)\n
        {\n
            v4 = v1[22];\n
            v5 = v3 - 1;\n
            *(&v6) = 1;\n
            if (v4 < v5)\n
            {\n
                return v6;\n
            }\n
            else if (!v4)\n
            {\n
                return v6;\n
            }\n
            else\n
            {\n
                v6 = v4 - 1;\n
                if (v4 >= 2 && v6 > v5)\n
                {\n
                    v7 = v1[23] - v2;\n
                    v1[22] = v6;\n
                    v6 = cgc_memmove(v7, v7 + 4, (v4 - v3) * 4);\n
                    *(&v6) = 1;\n
                    return v6;\n
                }\n
                v1[22] = v6;\n
                *(&v6) = 1;\n
                return v6;\n
            }\n
        }\n
        v2 -= 4;\n
        v3 += 1;\n
    } while (1 < v1[22]);\n
}\n
", "4231782:sub_409266": null, "4231792:_ZN7Channel17RemoveUserAsAdminEP4User": "int Channel::RemoveUserAsAdmin(unsigned int v0[21], unsigned int a0)\n
{\n
    unsigned int v1[21];  // esi\n
    void* v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
    char *v7;  // ecx\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (!v1[19])\n
        return 0;\n
    v3 = 1;\n
    do\n
    {\n
        v6 = User::Equals const(a0);\n
        if (v6)\n
        {\n
            v4 = v1[19];\n
            v5 = v3 - 1;\n
            *(&v6) = 1;\n
            if (v4 < v5)\n
            {\n
                return v6;\n
            }\n
            else if (!v4)\n
            {\n
                return v6;\n
            }\n
            else\n
            {\n
                v6 = v4 - 1;\n
                if (v4 >= 2 && v6 > v5)\n
                {\n
                    v7 = v1[20] - v2;\n
                    v1[19] = v6;\n
                    v6 = cgc_memmove(v7, v7 + 4, (v4 - v3) * 4);\n
                    *(&v6) = 1;\n
                    return v6;\n
                }\n
                v1[19] = v6;\n
                *(&v6) = 1;\n
                return v6;\n
            }\n
        }\n
        v2 -= 4;\n
        v3 += 1;\n
    } while (1 < v1[19]);\n
}\n
", "4231958:sub_409316": null, "4231968:_ZN7Channel8FindUserEP4User": "int Channel::FindUser(unsigned int v1[24], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v2[24];  // esi\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2[22])\n
        return 0;\n
    v3 = 1;\n
    while (true)\n
    {\n
        v0 = *((v2[23] + v3 * 4 - 4));\n
        v4 = User::Equals const(a0);\n
        if (v4)\n
            return v4;\n
        v3 += 1;\n
        if (1 >= v2[22])\n
            return v4;\n
    }\n
}\n
", "4232061:sub_40937d": null, "4232064:_ZN7Channel7BanUserEP4User": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
    unsigned int field_50;\n
    char padding_54[4];\n
    unsigned int field_58;\n
    unsigned int field_5c;\n
    unsigned int field_60;\n
    struct struct_1 *field_64;\n
    struct struct_1 *field_68;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Channel::BanUser(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // edi\n
    void* v2;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
    unsigned int v4;  // ebp\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // edx\n
    char *v9;  // ecx\n
    unsigned int v10;  // ebp\n
    void* v11;  // esi, Other Possible Types: unsigned int\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // edx\n
    char *v15;  // ecx\n
    unsigned int v16;  // ecx\n
\n
    v1 = v0;\n
    if (v1->field_64)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v3 = User::Equals const(a0);\n
            if (v3)\n
                break;\n
            v2 += 1;\n
            if (v2 >= v1->field_64)\n
                goto LABEL_4093c5;\n
        }\n
    }\n
LABEL_4093c5:\n
    if (v1->field_58)\n
    {\n
        v4 = 1;\n
        v5 = 0;\n
        while (!User::Equals const(a0))\n
        {\n
            v5 -= 4;\n
            v4 += 1;\n
            if (!(1 < v1->field_58))\n
                goto LABEL_409449;\n
        }\n
        v6 = v1->field_58;\n
        v7 = v4 - 1;\n
        if (v6 >= v7)\n
        {\n
            if (!v6)\n
                goto LABEL_409449;\n
            v8 = v6 - 1;\n
            if (v6 >= 2 && v8 > v7)\n
            {\n
                v9 = v1->field_5c - v5;\n
                v1->field_58 = v8;\n
                cgc_memmove(v9, v9 + 4, (v6 - v4) * 4);\n
                goto LABEL_409449;\n
            }\n
            v1->field_58 = v8;\n
            if (!v1->field_4c)\n
                goto LABEL_4094d8;\n
            goto LABEL_409453;\n
        }\n
    }\n
LABEL_409449:\n
    if (!v1->field_4c)\n
        goto LABEL_4094d8;\n
LABEL_409453:\n
    v10 = 1;\n
    v11 = 0;\n
    while (!User::Equals const(a0))\n
    {\n
        v11 -= 4;\n
        v10 += 1;\n
        if (!(1 < v1->field_4c))\n
            goto LABEL_4094d8;\n
    }\n
    v12 = v1->field_4c;\n
    v13 = v10 - 1;\n
    if (v12 >= v13)\n
    {\n
        if (!v12)\n
            goto LABEL_4094d8;\n
        v14 = v12 - 1;\n
        if (v12 >= 2 && v14 > v13)\n
        {\n
            v15 = v1->field_50 - v11;\n
            v1->field_4c = v14;\n
            cgc_memmove(v15, v15 + 4, (v12 - v10) * 4);\n
            v3 = v1->field_64;\n
            if (!(v3 < v1->field_60))\n
                goto LABEL_4094ff;\n
            goto LABEL_4094e0;\n
        }\n
        v1->field_4c = v14;\n
        v3 = v1->field_64;\n
        if (!(v3 < v1->field_60))\n
            goto LABEL_4094ff;\n
        goto LABEL_4094e0;\n
    }\n
LABEL_4094d8:\n
    v3 = v1->field_64;\n
    if (v3 >= v1->field_60)\n
    {\n
LABEL_4094ff:\n
        return 0;\n
    }\n
LABEL_4094e0:\n
    v16 = v1->field_68;\n
    v1->field_64 = v3 + 1;\n
    *((v16 + v3 * 4)) = a0;\n
    *(&v3) = 1;\n
    return v3;\n
}\n
", "4232457:sub_409509": null, "4232464:_ZN7Channel9RemoveBanEP4User": "int Channel::RemoveBan(unsigned int v0[27], unsigned int a0)\n
{\n
    unsigned int v1[27];  // esi\n
    void* v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // edx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
    char *v7;  // ecx\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (!v1[25])\n
        return 0;\n
    v3 = 1;\n
    do\n
    {\n
        v6 = User::Equals const(a0);\n
        if (v6)\n
        {\n
            v4 = v1[25];\n
            v5 = v3 - 1;\n
            *(&v6) = 1;\n
            if (v4 < v5)\n
            {\n
                return v6;\n
            }\n
            else if (!v4)\n
            {\n
                return v6;\n
            }\n
            else\n
            {\n
                v6 = v4 - 1;\n
                if (v4 >= 2 && v6 > v5)\n
                {\n
                    v7 = v1[26] - v2;\n
                    v1[25] = v6;\n
                    v6 = cgc_memmove(v7, v7 + 4, (v4 - v3) * 4);\n
                    *(&v6) = 1;\n
                    return v6;\n
                }\n
                v1[25] = v6;\n
                *(&v6) = 1;\n
                return v6;\n
            }\n
        }\n
        v2 -= 4;\n
        v3 += 1;\n
    } while (1 < v1[25]);\n
}\n
", "4232630:sub_4095b6": null, "4232640:_ZN7Channel13DeleteChannelEv": "int Channel::DeleteChannel(unsigned int v0[30])\n
{\n
    unsigned int v1[30];  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    v1 = v0;\n
    v1[18] = 0;\n
    v1[19] = 0;\n
    v2 = v1[20];\n
    if (v2)\n
        operator delete[](v2);\n
    v1[21] = 0;\n
    v1[22] = 0;\n
    v3 = v1[23];\n
    if (v3)\n
        operator delete[](v3);\n
    Chat::__ctor__();\n
    v1[27] = 0;\n
    v1[28] = 0;\n
    v4 = v1[29];\n
    if (v4)\n
    {\n
        v4 = operator delete[](v4);\n
        return v4;\n
    }\n
    return v1[29];\n
}\n
", "4232766:sub_40963e": null, "4232768:_ZN7Channel11GetUserListEPt": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned short field_58;\n
    char padding_5a[2];\n
    unsigned int field_5c;\n
} struct_0;\n
\n
int Channel::GetUserList(struct_0 *v0, unsigned short *a0)\n
{\n
    *(a0) = v0->field_58;\n
    return v0->field_5c;\n
}\n
", "4232787:sub_409653": null, "4232800:_ZN4ChatC1Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Chat::__ctor__(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_4 = 0;\n
    v1->field_0 = 0;\n
    v1->field_8 = 0;\n
    return v0;\n
}\n
", "4232824:sub_409678": null, "4232832:_ZN4ChatC1EPctP4User": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Chat::__ctor__(struct_0 *v0, char *a0, unsigned short a1, unsigned int a2)\n
{\n
    struct_0 *v1;  // edi\n
    unsigned int v2;  // ecx\n
    char *v3;  // eax\n
\n
    v1 = v0;\n
    v2 = (v2 < 0x200 ? 0x200 : a1);\n
    v1->field_4 = v2;\n
    v3 = operator new[](v2);\n
    v1->field_0 = v3;\n
    v1->field_8 = a2;\n
    return cgc_memcpy(v3, a0, v0->field_4);\n
}\n
", "4232928:_ZN4Chat6DeleteEPS_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Chat::Delete(struct_0 *v0)\n
{\n
    struct_0 *v1;  // esi\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = v1->field_0;\n
    if (v2)\n
    {\n
        v2 = operator delete[](v2);\n
        v1->field_0 = 0;\n
    }\n
    v1->field_4 = 0;\n
    v1->field_8 = 0;\n
    return v2;\n
}\n
", "4232986:sub_40971a": null, "4232992:_ZN4Chat3msgEv": "int Chat::msg(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4232999:sub_409727": null, "4233008:_ZN4Chat10msg_lengthEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int Chat::msg_length(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4233017:sub_409739": null, "4233024:_ZN4Chat4fromEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Chat::from(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4233032:sub_409748": null, "4233040:_ZN16CommandProcessor14ServiceCommandEP10BrcCommand": "int CommandProcessor::ServiceCommand(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned short v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x22]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v8;  // esi\n
    unsigned int v9;  // eax\n
    void* v10;  // edi, Other Possible Types: unsigned int\n
    unsigned short *v11;  // eax\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // ebp\n
    unsigned short *v14;  // esi\n
    unsigned int v15;  // ebp\n
    unsigned int v16;  // edi\n
    unsigned int v18;  // ebp\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // eax\n
    unsigned int v22;  // ebp\n
    unsigned int v23;  // ecx\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ebp\n
    unsigned int v30;  // ecx\n
    unsigned int v34;  // esi\n
    unsigned int v35;  // ebp\n
    unsigned int v36;  // edx\n
    unsigned int v37;  // eax\n
    unsigned int v38;  // edi\n
    unsigned int v39;  // ebp\n
    unsigned int v40;  // edi\n
    unsigned int v41;  // ecx\n
    unsigned int v43;  // ecx\n
    unsigned int v45;  // edi\n
    unsigned int v46;  // eax\n
    unsigned int v47;  // eax\n
\n
    v8 = v7;\n
    v9 = BrcGlobals::failure_resp();\n
    v10 = v9;\n
    if (v8)\n
    {\n
        v1 = v9;\n
        v11 = BrcCommand::cmd const(v8);\n
        v12 = *(v11);\n
        v13 = v11 + 1;\n
        if (!v12)\n
            v13 = v12;\n
        v14 = 2 + v11 + v12;\n
        if (!cgc_memcmp(v13, BrcGlobals::register_code(), v12))\n
        {\n
            v2 = 0;\n
            v15 = *(v14);\n
            v16 = v14 + 1;\n
            if (!*(v14))\n
                v16 = v15;\n
            print_byte_array();\n
            if (*((2 + v14 + v15)))\n
            {\n
                v20 = BrcGlobals::malformed_resp();\n
            }\n
            else if (Backend::CheckIfUserExists(v16))\n
            {\n
                v20 = BrcGlobals::user_exists_resp();\n
            }\n
            else\n
            {\n
                v24 = Backend::AddUser(v16, v15);\n
                if (v24 && v2)\n
                {\n
                    v10 = operator new(20);\n
                    BrcResponse::__ctor__(v10, 100, v24, v2);\n
                    goto LABEL_409b57;\n
                }\n
                v20 = BrcGlobals::failure_resp();\n
            }\n
            v10 = v20;\n
        }\n
        else\n
        {\n
            if (!cgc_memcmp(v13, BrcGlobals::check_user_code(), v12))\n
            {\n
                v18 = *(v14);\n
                v19 = v14 + 1;\n
                if (!*(v14))\n
                    v19 = v18;\n
                print_byte_array();\n
                if (!*((2 + v14 + v18)))\n
                {\n
                    v25 = Backend::CheckIfUserExists(v19);\n
                    goto LABEL_409b3b;\n
                }\n
            }\n
            if (!cgc_memcmp(v13, BrcGlobals::verify_password_code(), v12))\n
            {\n
                v22 = *(v14);\n
                v23 = v14 + 1;\n
                if (!*(v14))\n
                    v23 = v22;\n
                v28 = 4 + v14 + v22;\n
                if (!v28)\n
                    v28 = *((2 + v14 + v22));\n
                v1 = *((4 + v28 + v14 + v22));\n
                v3 = v23;\n
                print_byte_array();\n
                print_byte_array(v28);\n
                if (!v1)\n
                {\n
                    v25 = Backend::VerifyPassword(v3, v22, v28);\n
                    goto LABEL_409b3b;\n
                }\n
            }\n
            if (!cgc_memcmp(v13, BrcGlobals::delete_user_code(), v12))\n
            {\n
                v29 = *(v14);\n
                v30 = v14 + 1;\n
                if (!*(v14))\n
                    v30 = v29;\n
                v34 = 4 + v14 + v29;\n
                if (!v34)\n
                    v34 = *((2 + v14 + v29));\n
                v1 = *((4 + v34 + v14 + v29));\n
                v3 = v30;\n
                print_byte_array();\n
                print_byte_array(v34);\n
                if (!v1)\n
                {\n
                    v25 = Backend::DeleteUser(v3, v29, v34);\n
                    goto LABEL_409b3b;\n
                }\n
            }\n
            if (!cgc_memcmp(v13, BrcGlobals::join_channel_code(), v12))\n
            {\n
                v35 = *(v14);\n
                v36 = v14 + 1;\n
                if (!*(v14))\n
                    v36 = v35;\n
                v37 = *((2 + v14 + v35));\n
                v38 = 4 + v14 + v35;\n
                if (!v37)\n
                    v38 = v37;\n
                v41 = 2 + v14 + v35;\n
                v1 = v37 + v41 + 2;\n
                v43 = v37 + v41 + 4;\n
                if (!v43)\n
                    v43 = *((v37 + v41 + 2));\n
                v3 = v43;\n
                v1 = *((v43 + v1 + 2));\n
                v4 = v35;\n
                v6 = v36;\n
                print_byte_array();\n
                v5 = v38;\n
                v0 = v38;\n
                v45 = v3;\n
                print_byte_array(v0);\n
                print_byte_array(v45);\n
                if (!v1)\n
                {\n
                    v25 = Backend::JoinChannel(v6, v4, v5, eax<4>, v45);\n
                    goto LABEL_409b3b;\n
                }\n
            }\n
            if (!cgc_memcmp(v13, BrcGlobals::check_channel_code(), v12))\n
            {\n
                v39 = *(v14);\n
                v40 = v14 + 1;\n
                if (!*(v14))\n
                    v40 = v39;\n
                print_byte_array();\n
                if (!*((2 + v14 + v39)))\n
                {\n
                    v25 = Backend::CheckIfChannelExists(v40);\n
LABEL_409b3b:\n
                    if (!v25)\n
                    {\n
                        v47 = BrcGlobals::failure_resp();\n
                        return v47;\n
                    }\n
                    v47 = BrcGlobals::success_resp();\n
                    return v47;\n
                }\n
                goto LABEL_409b7a;\n
            }\n
            else\n
            {\n
                if (!cgc_memcmp(v13, BrcGlobals::part_channel_code(), v12))\n
                    return _GLOBAL__N_1::PartChannel();\n
                if (!cgc_memcmp(v13, BrcGlobals::delete_channel_code(), v12))\n
                    return _GLOBAL__N_1::DeleteChannel();\n
                if (cgc_memcmp(v13, BrcGlobals::server_exit_code(), v12))\n
                {\n
                    v46 = cgc_memcmp(v13, BrcGlobals::remote_admin_token_request_code(), v12);\n
                    v10 = v1;\n
                    if (!v46)\n
                        return _GLOBAL__N_1::RemoteAdminTokenRequest();\n
                }\n
                else\n
                {\n
                    if (!*(v14))\n
                    {\n
                        v47 = BrcGlobals::exit_server_resp();\n
                        return v47;\n
                    }\n
LABEL_409b7a:\n
                    v47 = BrcGlobals::malformed_resp();\n
                    return v47;\n
                }\n
            }\n
        }\n
    }\n
LABEL_409b57:\n
    return v10;\n
}\n
", "4234126:sub_409b8e": null, "4234128:_ZN12_GLOBAL__N_111PartChannelEPc": "int _GLOBAL__N_1::PartChannel()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x24], Other Possible Types: unsigned short\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned short *v7;  // ecx\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // eax\n
\n
    v8 = *(v7);\n
    v9 = v7 + 1;\n
    if (!*(v7))\n
        v9 = v8;\n
    v10 = *((2 + v7 + v8));\n
    v11 = 4 + v7 + v8;\n
    if (!v10)\n
        v11 = v10;\n
    v2 = v11;\n
    v12 = 2 + v7 + v8;\n
    v13 = *((v10 + v12 + 2));\n
    v1 = v10 + v12 + 2;\n
    v14 = v10 + v12 + 4;\n
    if (!v14)\n
        v14 = v13;\n
    v5 = v14;\n
    v1 = *((v14 + v1 + 2));\n
    v3 = v8;\n
    v0 = v8;\n
    v4 = v9;\n
    print_byte_array();\n
    v0 = v10;\n
    v15 = v5;\n
    print_byte_array(v2);\n
    v0 = v14;\n
    print_byte_array(v15);\n
    if (v1)\n
    {\n
        v16 = BrcGlobals::malformed_resp();\n
        return v16;\n
    }\n
    v0 = v14;\n
    if (!Backend::PartChannel(v4, v3, v2, v10, v15))\n
    {\n
        v16 = BrcGlobals::failure_resp();\n
        return v16;\n
    }\n
    v16 = BrcGlobals::success_resp();\n
    return v16;\n
}\n
", "4234344:sub_409c68": null, "4234352:_ZN12_GLOBAL__N_113DeleteChannelEPc": "int _GLOBAL__N_1::DeleteChannel()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x24], Other Possible Types: unsigned short\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned short *v7;  // ecx\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // eax\n
\n
    v8 = *(v7);\n
    v9 = v7 + 1;\n
    if (!*(v7))\n
        v9 = v8;\n
    v10 = *((2 + v7 + v8));\n
    v11 = 4 + v7 + v8;\n
    if (!v10)\n
        v11 = v10;\n
    v2 = v11;\n
    v12 = 2 + v7 + v8;\n
    v13 = *((v10 + v12 + 2));\n
    v1 = v10 + v12 + 2;\n
    v14 = v10 + v12 + 4;\n
    if (!v14)\n
        v14 = v13;\n
    v5 = v14;\n
    v1 = *((v14 + v1 + 2));\n
    v3 = v8;\n
    v0 = v8;\n
    v4 = v9;\n
    print_byte_array();\n
    v0 = v10;\n
    v15 = v5;\n
    print_byte_array(v2);\n
    v0 = v14;\n
    print_byte_array(v15);\n
    if (v1)\n
    {\n
        v16 = BrcGlobals::malformed_resp();\n
        return v16;\n
    }\n
    v0 = v14;\n
    if (!Backend::DeleteChannel(v4, v3, v2, v10, v15))\n
    {\n
        v16 = BrcGlobals::failure_resp();\n
        return v16;\n
    }\n
    v16 = BrcGlobals::success_resp();\n
    return v16;\n
}\n
", "4234568:sub_409d48": null, "4234576:_ZN12_GLOBAL__N_123RemoteAdminTokenRequestEPc": "int _GLOBAL__N_1::RemoteAdminTokenRequest()\n
{\n
    unsigned short v0;  // [bp-0x16]\n
    char v1;  // [bp-0x14]\n
    unsigned short *v3;  // ecx\n
    unsigned int v4;  // esi\n
    void* v6;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = v3 + 1;\n
    if (!*(v3))\n
        v4 = *(v3);\n
    v0 = *((2 + v3 + v4));\n
    print_byte_array();\n
    if (*((4 + v3 + v4)))\n
        return BrcGlobals::malformed_resp();\n
    if (!AdminTasks::RemoteAdminTokenRequest(v4, v4, v0))\n
    {\n
        v6 = BrcGlobals::failure_resp();\n
    }\n
    else\n
    {\n
        v6 = operator new(20);\n
        BrcResponse::__ctor__(v6, 97, &v1, 4);\n
    }\n
    return v6;\n
}\n
", "4234722:sub_409de2": null, "4234736:_ZN16CommandProcessor11ServiceChatEP7BrcChat": "int CommandProcessor::ServiceChat(unsigned int v0)\n
{\n
    void* v1;  // ebp\n
    unsigned int v2;  // esi\n
\n
    v1 = v0;\n
    v2 = BrcGlobals::failure_resp();\n
    if (!v1)\n
    {\n
        return v2;\n
    }\n
    else if (!BrcChat::chat_msg const(v1))\n
    {\n
        return v2;\n
    }\n
    else if (BrcChat::chat_msg_length const(v1))\n
    {\n
        return v2;\n
    }\n
    else if (BrcChat::chat_type const(v1) == 29)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        BrcChat::chat_type const(v1);\n
        return v2;\n
    }\n
}\n
", "4234829:sub_409e4d": null, "4234832:_ZN12ConversationC1EP7Channel": "int Conversation::__ctor__(unsigned int v0[5], unsigned int a0)\n
{\n
    unsigned int v1[5];  // ebp\n
    void* v2;  // esi\n
\n
    v1 = v0;\n
    v0[0] = 100;\n
    v0[1] = 0;\n
    v2 = operator new[](1200);\n
    Chat::__ctor__(v2);\n
    Chat::__ctor__(v2 + 12);\n
    Chat::__ctor__(v2 + 24);\n
    Chat::__ctor__(v2 + 36);\n
    Chat::__ctor__(v2 + 48);\n
    Chat::__ctor__(v2 + 60);\n
    Chat::__ctor__(v2 + 72);\n
    Chat::__ctor__(v2 + 84);\n
    Chat::__ctor__(v2 + 96);\n
    Chat::__ctor__(v2 + 108);\n
    Chat::__ctor__(v2 + 120);\n
    Chat::__ctor__(v2 + 132);\n
    Chat::__ctor__(v2 + 144);\n
    Chat::__ctor__(v2 + 156);\n
    Chat::__ctor__(v2 + 168);\n
    Chat::__ctor__(v2 + 180);\n
    Chat::__ctor__(v2 + 192);\n
    Chat::__ctor__(v2 + 204);\n
    Chat::__ctor__(v2 + 216);\n
    Chat::__ctor__(v2 + 228);\n
    Chat::__ctor__(v2 + 240);\n
    Chat::__ctor__(v2 + 252);\n
    Chat::__ctor__(v2 + 264);\n
    Chat::__ctor__(v2 + 276);\n
    Chat::__ctor__(v2 + 288);\n
    Chat::__ctor__(v2 + 300);\n
    Chat::__ctor__(v2 + 312);\n
    Chat::__ctor__(v2 + 324);\n
    Chat::__ctor__(v2 + 336);\n
    Chat::__ctor__(v2 + 348);\n
    Chat::__ctor__(v2 + 360);\n
    Chat::__ctor__(v2 + 372);\n
    Chat::__ctor__(v2 + 384);\n
    Chat::__ctor__(v2 + 396);\n
    Chat::__ctor__(v2 + 408);\n
    Chat::__ctor__(v2 + 420);\n
    Chat::__ctor__(v2 + 432);\n
    Chat::__ctor__(v2 + 444);\n
    Chat::__ctor__(v2 + 456);\n
    Chat::__ctor__(v2 + 468);\n
    Chat::__ctor__(v2 + 480);\n
    Chat::__ctor__(v2 + 492);\n
    Chat::__ctor__(v2 + 504);\n
    Chat::__ctor__(v2 + 516);\n
    Chat::__ctor__(v2 + 528);\n
    Chat::__ctor__(v2 + 540);\n
    Chat::__ctor__(v2 + 552);\n
    Chat::__ctor__(v2 + 564);\n
    Chat::__ctor__(v2 + 576);\n
    Chat::__ctor__(v2 + 588);\n
    Chat::__ctor__(v2 + 600);\n
    Chat::__ctor__(v2 + 612);\n
    Chat::__ctor__(v2 + 624);\n
    Chat::__ctor__(v2 + 636);\n
    Chat::__ctor__(v2 + 648);\n
    Chat::__ctor__(v2 + 660);\n
    Chat::__ctor__(v2 + 672);\n
    Chat::__ctor__(v2 + 684);\n
    Chat::__ctor__(v2 + 696);\n
    Chat::__ctor__(v2 + 708);\n
    Chat::__ctor__(v2 + 720);\n
    Chat::__ctor__(v2 + 732);\n
    Chat::__ctor__(v2 + 744);\n
    Chat::__ctor__(v2 + 756);\n
    Chat::__ctor__(v2 + 0x300);\n
    Chat::__ctor__(v2 + 780);\n
    Chat::__ctor__(v2 + 792);\n
    Chat::__ctor__(v2 + 804);\n
    Chat::__ctor__(v2 + 816);\n
    Chat::__ctor__(v2 + 828);\n
    Chat::__ctor__(v2 + 840);\n
    Chat::__ctor__(v2 + 852);\n
    Chat::__ctor__(v2 + 864);\n
    Chat::__ctor__(v2 + 876);\n
    Chat::__ctor__(v2 + 888);\n
    Chat::__ctor__(v2 + 900);\n
    Chat::__ctor__(v2 + 912);\n
    Chat::__ctor__(v2 + 924);\n
    Chat::__ctor__(v2 + 936);\n
    Chat::__ctor__(v2 + 948);\n
    Chat::__ctor__(v2 + 960);\n
    Chat::__ctor__(v2 + 972);\n
    Chat::__ctor__(v2 + 984);\n
    Chat::__ctor__(v2 + 996);\n
    Chat::__ctor__(v2 + 1008);\n
    Chat::__ctor__(v2 + 1020);\n
    Chat::__ctor__(v2 + 1032);\n
    Chat::__ctor__(v2 + 1044);\n
    Chat::__ctor__(v2 + 1056);\n
    Chat::__ctor__(v2 + 1068);\n
    Chat::__ctor__(v2 + 1080);\n
    Chat::__ctor__(v2 + 1092);\n
    Chat::__ctor__(v2 + 1104);\n
    Chat::__ctor__(v2 + 1116);\n
    Chat::__ctor__(v2 + 1128);\n
    Chat::__ctor__(v2 + 1140);\n
    Chat::__ctor__(v2 + 1152);\n
    Chat::__ctor__(v2 + 1164);\n
    Chat::__ctor__(v2 + 1176);\n
    v1[2] = v2;\n
    v1[3] = a0;\n
    v1[4] = 0;\n
    return Chat::__ctor__(v2 + 1188);\n
}\n
", "4236272:_ZN12ConversationC2EP4User": "int Conversation::__base_ctor__(unsigned int v0[5], unsigned int a0)\n
{\n
    unsigned int v1[5];  // ebp\n
    void* v2;  // esi\n
\n
    v1 = v0;\n
    v0[0] = 100;\n
    v0[1] = 0;\n
    v2 = operator new[](1200);\n
    Chat::__ctor__(v2);\n
    Chat::__ctor__(v2 + 12);\n
    Chat::__ctor__(v2 + 24);\n
    Chat::__ctor__(v2 + 36);\n
    Chat::__ctor__(v2 + 48);\n
    Chat::__ctor__(v2 + 60);\n
    Chat::__ctor__(v2 + 72);\n
    Chat::__ctor__(v2 + 84);\n
    Chat::__ctor__(v2 + 96);\n
    Chat::__ctor__(v2 + 108);\n
    Chat::__ctor__(v2 + 120);\n
    Chat::__ctor__(v2 + 132);\n
    Chat::__ctor__(v2 + 144);\n
    Chat::__ctor__(v2 + 156);\n
    Chat::__ctor__(v2 + 168);\n
    Chat::__ctor__(v2 + 180);\n
    Chat::__ctor__(v2 + 192);\n
    Chat::__ctor__(v2 + 204);\n
    Chat::__ctor__(v2 + 216);\n
    Chat::__ctor__(v2 + 228);\n
    Chat::__ctor__(v2 + 240);\n
    Chat::__ctor__(v2 + 252);\n
    Chat::__ctor__(v2 + 264);\n
    Chat::__ctor__(v2 + 276);\n
    Chat::__ctor__(v2 + 288);\n
    Chat::__ctor__(v2 + 300);\n
    Chat::__ctor__(v2 + 312);\n
    Chat::__ctor__(v2 + 324);\n
    Chat::__ctor__(v2 + 336);\n
    Chat::__ctor__(v2 + 348);\n
    Chat::__ctor__(v2 + 360);\n
    Chat::__ctor__(v2 + 372);\n
    Chat::__ctor__(v2 + 384);\n
    Chat::__ctor__(v2 + 396);\n
    Chat::__ctor__(v2 + 408);\n
    Chat::__ctor__(v2 + 420);\n
    Chat::__ctor__(v2 + 432);\n
    Chat::__ctor__(v2 + 444);\n
    Chat::__ctor__(v2 + 456);\n
    Chat::__ctor__(v2 + 468);\n
    Chat::__ctor__(v2 + 480);\n
    Chat::__ctor__(v2 + 492);\n
    Chat::__ctor__(v2 + 504);\n
    Chat::__ctor__(v2 + 516);\n
    Chat::__ctor__(v2 + 528);\n
    Chat::__ctor__(v2 + 540);\n
    Chat::__ctor__(v2 + 552);\n
    Chat::__ctor__(v2 + 564);\n
    Chat::__ctor__(v2 + 576);\n
    Chat::__ctor__(v2 + 588);\n
    Chat::__ctor__(v2 + 600);\n
    Chat::__ctor__(v2 + 612);\n
    Chat::__ctor__(v2 + 624);\n
    Chat::__ctor__(v2 + 636);\n
    Chat::__ctor__(v2 + 648);\n
    Chat::__ctor__(v2 + 660);\n
    Chat::__ctor__(v2 + 672);\n
    Chat::__ctor__(v2 + 684);\n
    Chat::__ctor__(v2 + 696);\n
    Chat::__ctor__(v2 + 708);\n
    Chat::__ctor__(v2 + 720);\n
    Chat::__ctor__(v2 + 732);\n
    Chat::__ctor__(v2 + 744);\n
    Chat::__ctor__(v2 + 756);\n
    Chat::__ctor__(v2 + 0x300);\n
    Chat::__ctor__(v2 + 780);\n
    Chat::__ctor__(v2 + 792);\n
    Chat::__ctor__(v2 + 804);\n
    Chat::__ctor__(v2 + 816);\n
    Chat::__ctor__(v2 + 828);\n
    Chat::__ctor__(v2 + 840);\n
    Chat::__ctor__(v2 + 852);\n
    Chat::__ctor__(v2 + 864);\n
    Chat::__ctor__(v2 + 876);\n
    Chat::__ctor__(v2 + 888);\n
    Chat::__ctor__(v2 + 900);\n
    Chat::__ctor__(v2 + 912);\n
    Chat::__ctor__(v2 + 924);\n
    Chat::__ctor__(v2 + 936);\n
    Chat::__ctor__(v2 + 948);\n
    Chat::__ctor__(v2 + 960);\n
    Chat::__ctor__(v2 + 972);\n
    Chat::__ctor__(v2 + 984);\n
    Chat::__ctor__(v2 + 996);\n
    Chat::__ctor__(v2 + 1008);\n
    Chat::__ctor__(v2 + 1020);\n
    Chat::__ctor__(v2 + 1032);\n
    Chat::__ctor__(v2 + 1044);\n
    Chat::__ctor__(v2 + 1056);\n
    Chat::__ctor__(v2 + 1068);\n
    Chat::__ctor__(v2 + 1080);\n
    Chat::__ctor__(v2 + 1092);\n
    Chat::__ctor__(v2 + 1104);\n
    Chat::__ctor__(v2 + 1116);\n
    Chat::__ctor__(v2 + 1128);\n
    Chat::__ctor__(v2 + 1140);\n
    Chat::__ctor__(v2 + 1152);\n
    Chat::__ctor__(v2 + 1164);\n
    Chat::__ctor__(v2 + 1176);\n
    v1[2] = v2;\n
    v1[3] = 0;\n
    v1[4] = a0;\n
    return Chat::__ctor__(v2 + 1188);\n
}\n
", "4237712:_ZN12Conversation7AddChatE4Chat": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int Conversation::AddChat(struct_0 *v1, char a0, unsigned int a1, unsigned int a2)\n
{\n
    char v0;  // [bp-0x1c]\n
    struct_0 *v2;  // edi\n
    unsigned int *v3;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // ecx\n
    unsigned int *v6;  // ecx\n
    unsigned int v7;  // eax\n
\n
    v2 = v1;\n
    Chat::__ctor__(&v0);\n
    v3 = v2->field_4;\n
    if (v3 >= 2 && v3 >= v2->field_0)\n
    {\n
        Chat::Delete(v2->field_8);\n
        v4 = v2->field_4;\n
        v5 = v2->field_8;\n
        v2->field_4 = v4 + 1;\n
        cgc_memmove(v5, v5 + 3, (v4 * 4 - 4) * 3);\n
        v3 = v2->field_4;\n
    }\n
    v6 = v2->field_8;\n
    v2->field_4 = v3 + 1;\n
    v7 = v3 * 3;\n
    v6[2 + v7] = a2;\n
    v6[1 + v7] = a1;\n
    v6[v7] = *(&a0);\n
    return v7;\n
}\n
", "4237857:sub_40aa21": null, "4237872:_ZN12Conversation12ReadMessagesEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    void* field_8;\n
} struct_0;\n
\n
int Conversation::ReadMessages(unsigned int v1[3])\n
{\n
    char v0;  // [bp-0x1c]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    char *v5;  // ecx\n
\n
    v2 = v1;\n
    if (!v2->field_4)\n
        return v3;\n
    while (true)\n
    {\n
        v3 = Chat::__ctor__(&v0);\n
        if (!v2->field_4)\n
            return v3;\n
        Chat::Delete(v2->field_8);\n
        v4 = v2->field_4;\n
        v3 = v4 - 1;\n
        if (v4 >= 2)\n
        {\n
            v5 = v2->field_8;\n
            v2->field_4 = v3;\n
            cgc_memmove(v5, v5 + 12, v3 * 4 * 3);\n
            v3 = v2->field_4;\n
            if (!v3)\n
                return v2->field_4;\n
        }\n
        else\n
        {\n
            v2->field_4 = v3;\n
            if (!v3)\n
                return v4 - 1;\n
        }\n
    }\n
}\n
", "4237906:sub_40aa52": null, "4238008:sub_40aab8": null, "4238016:_ZN12Conversation17ClearChatMessagesEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    void* field_8;\n
} struct_0;\n
\n
int Conversation::ClearChatMessages(unsigned int v1[3])\n
{\n
    char v0;  // [bp-0x1c]\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    char *v5;  // ecx\n
\n
    v2 = v1;\n
    if (!v2->field_4)\n
        return v3;\n
    while (true)\n
    {\n
        v3 = Chat::__ctor__(&v0);\n
        if (!v2->field_4)\n
            return v3;\n
        Chat::Delete(v2->field_8);\n
        v4 = v2->field_4;\n
        v3 = v4 - 1;\n
        if (v4 < 2)\n
        {\n
            v2->field_4 = v3;\n
            if (!v3)\n
                return v4 - 1;\n
        }\n
        else\n
        {\n
            v5 = v2->field_8;\n
            v2->field_4 = v3;\n
            cgc_memmove(v5, v5 + 12, v3 * 4 * 3);\n
            v3 = v2->field_4;\n
            if (!v3)\n
                return v2->field_4;\n
        }\n
    }\n
}\n
", "4238050:sub_40aae2": null, "4238152:sub_40ab48": null, "4238160:_Z16print_byte_arrayPKct": "int print_byte_array()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4238161:sub_40ab51": null, "4238176:main": "int main()\n
{\n
    void* v1;  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
    void* v4;  // eax\n
\n
    Backend::InitDataStores();\n
    v1 = operator new(20);\n
    BrcPacket::__base_ctor__(v1, cgc_fopen(6, 0), cgc_fopen(3, 1));\n
    while (true)\n
    {\n
        do\n
        {\n
            v2 = BrcPacket::Recv(v1);\n
        } while (v2 == -1);\n
        if (v2 == -2)\n
            break;\n
        BrcPacket::DebugPrintPacket const(v1);\n
        v3 = BrcPacket::protocol_id const(v1);\n
        if (v3 == 2)\n
        {\n
            v4 = CommandProcessor::ServiceCommand(BrcPacket::GetProtocol const(v1));\n
            if (!v4)\n
                continue;\n
            BrcPacket::ClearPacket(v1);\n
            BrcPacket::SetPacket(v1, v4);\n
            if (BrcPacket::Send const(v1) == -1)\n
                continue;\n
            BrcPacket::DebugPrintPacket const(v1);\n
            if (BrcResponse::response_code const(v4) == 1)\n
                break;\n
        }\n
        else if (v3 == 4)\n
        {\n
            CommandProcessor::ServiceChat(BrcPacket::GetProtocol const(v1));\n
        }\n
    }\n
    BrcPacket::__base_dtor__(v1);\n
    operator delete(v1);\n
    return 0;\n
}\n
", "4238459:sub_40ac7b": null, "4238464:_ZN10AdminTasks23RemoteAdminTokenRequestEPcjtPi": "extern unsigned int _ZN12_GLOBAL__N_18g_secretE;\n
extern struct_0 *g_412bd4;\n
\n
int AdminTasks::RemoteAdminTokenRequest(unsigned int v1, unsigned int a0, unsigned short a1, unsigned int *a2)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int *v2;  // esi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // edi\n
\n
    v2 = a1;\n
    if (v2 > 0x1000)\n
        return 0;\n
    v4 = v1;\n
    if (!v4)\n
        return 0;\n
    v5 = a0;\n
    if (!v5)\n
    {\n
        return 0;\n
    }\n
    else if (!a2)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v0 = User::CompareName const(g_412bd4->field_0, v4);\n
        if (TokenGenerator::GetTokenLength() == v5)\n
            cgc_memcmp(TokenGenerator::GetToken(), v1, v5);\n
        if (v0)\n
        {\n
            v3 = *((_ZN12_GLOBAL__N_18g_secretE + v2 * 4));\n
            *(a2) = v3;\n
            *(&v3) = 1;\n
            return v3;\n
        }\n
        return 0;\n
    }\n
}\n
", "4238620:sub_40ad1c": null, "4238624:_ZN7Backend13GetRandomByteEv": "extern unsigned int _ZN12_GLOBAL__N_15prng1E;\n
extern unsigned int _ZN12_GLOBAL__N_15prng2E;\n
extern unsigned int _ZN12_GLOBAL__N_18g_secretE;\n
\n
int Backend::GetRandomByte()\n
{\n
    _ZN12_GLOBAL__N_15prng1E = (_ZN12_GLOBAL__N_15prng1E >> 16) + _ZN12_GLOBAL__N_15prng1E * 36969;\n
    _ZN12_GLOBAL__N_15prng2E = (_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000;\n
    return 16671 CONCAT *((_ZN12_GLOBAL__N_18g_secretE + (_ZN12_GLOBAL__N_15prng2E & 4095)));\n
}\n
", "4238706:sub_40ad72": null, "4238720:_ZN7Backend14InitDataStoresEi": "extern unsigned int _ZN12_GLOBAL__N_112g_admin_nameE;\n
extern unsigned int _ZN12_GLOBAL__N_115RegisteredUsersE;\n
extern unsigned int _ZN12_GLOBAL__N_15prng1E;\n
extern unsigned int _ZN12_GLOBAL__N_15prng2E;\n
extern struct_1 *_ZN12_GLOBAL__N_18g_secretE;\n
extern struct_0 *g_412bd0;\n
extern unsigned int g_412bd4;\n
\n
int Backend::InitDataStores(unsigned int v2[2])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // esi\n
    unsigned int *v5;  // eax\n
\n
    v1 = v3;\n
    _ZN12_GLOBAL__N_18g_secretE = &v2[0];\n
    v4 = operator new(172);\n
    v0 = 1;\n
    User::__base_ctor__(v4, &_ZN12_GLOBAL__N_112g_admin_nameE, 4, &_ZN12_GLOBAL__N_112g_admin_nameE, 4);\n
    v5 = g_412bd0;\n
    if (g_412bd0 < _ZN12_GLOBAL__N_115RegisteredUsersE)\n
    {\n
        g_412bd0 = &g_412bd0->field_0 + 1;\n
        *((g_412bd4 + v5 * 4)) = v4;\n
    }\n
    _ZN12_GLOBAL__N_15prng1E = _ZN12_GLOBAL__N_18g_secretE->field_0;\n
    _ZN12_GLOBAL__N_15prng2E = _ZN12_GLOBAL__N_18g_secretE->field_4;\n
    return _ZN12_GLOBAL__N_15prng2E;\n
}\n
", "4238850:sub_40ae02": null, "4238864:_ZN7Backend7AddUserEPKctPt": "extern unsigned int _ZN12_GLOBAL__N_115RegisteredUsersE;\n
extern struct_1 *g_412bd0;\n
extern struct_0 *g_412bd4;\n
\n
int Backend::AddUser(unsigned int v2, unsigned short a0, unsigned short *a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
    unsigned int *v8;  // eax\n
\n
    v3 = v2;\n
    v4 = a0;\n
    if (g_412bd0 >= 2)\n
    {\n
        v5 = 1;\n
        do\n
        {\n
            v1 = v4;\n
            if (User::CompareName const(*(&(&g_412bd4->padding_0)[v5]), v3))\n
                return 0;\n
            v5 += 1;\n
        } while (v5 < g_412bd0);\n
    }\n
    v6 = Backend::GeneratePassword();\n
    v0 = v4;\n
    v7 = operator new(172);\n
    User::__base_ctor__(v7, v3, v0, v6, *(a1));\n
    v8 = g_412bd0;\n
    if (g_412bd0 < _ZN12_GLOBAL__N_115RegisteredUsersE)\n
    {\n
        g_412bd0 = &g_412bd0->field_0 + 1;\n
        *((&g_412bd4->padding_0[0] + 0x4 * v8)) = v7;\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4239055:sub_40aecf": null, "4239056:_ZN7Backend17CheckIfUserExistsEPKct": "extern unsigned int g_412bd0;\n
extern struct_0 *g_412bd4;\n
\n
int Backend::CheckIfUserExists(unsigned int v1, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int *v2;  // edi, Other Possible Types: unsigned int\n
    void* v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    if (g_412bd0 < 2)\n
    {\n
LABEL_40af29:\n
        v3 = 0;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        while (true)\n
        {\n
            v3 = *(&(&g_412bd4->padding_0)[v2]);\n
            v0 = a0;\n
            v4 = User::CompareName const(v3, v1);\n
            if (v4)\n
                break;\n
            v2 += 1;\n
            if (v2 >= g_412bd0)\n
                goto LABEL_40af29;\n
        }\n
    }\n
    *(&v4) = v3;\n
    return v4;\n
}\n
", "4239160:sub_40af38": null, "4239168:_ZN7Backend16GeneratePasswordEPt": "extern unsigned int _ZN12_GLOBAL__N_15prng1E;\n
extern struct_0 *_ZN12_GLOBAL__N_15prng2E;\n
extern unsigned int _ZN12_GLOBAL__N_18g_secretE;\n
\n
int Backend::GeneratePassword(unsigned short *v0)\n
{\n
    char v1[10];  // eax\n
    char *v2;  // edx\n
\n
    v1 = operator new[](10);\n
    *(v0) = 10;\n
    v1[0] = *((_ZN12_GLOBAL__N_18g_secretE + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 & 4095)));\n
    v1[1] = *((_ZN12_GLOBAL__N_18g_secretE + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 & 4095)));\n
    v1[2] = *((_ZN12_GLOBAL__N_18g_secretE + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 & 4095)));\n
    v1[3] = *((_ZN12_GLOBAL__N_18g_secretE + (((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000 & 4095)));\n
    v1[4] = *((_ZN12_GLOBAL__N_18g_secretE + ((((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000 >> 16) + (((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000) * 18000 & 4095)));\n
    v1[5] = *((_ZN12_GLOBAL__N_18g_secretE + (((((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000 >> 16) + (((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000) * 18000 >> 16) + ((((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000 >> 16) + (((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000 >> 16) + ((((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000 >> 16) + (((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000 >> 16) + ((_ZN12_GLOBAL__N_15prng2E >> 16) + _ZN12_GLOBAL__N_15prng2E * 18000) * 18000) * 18000) * 18000) * 18000) * 18000 & 4095)));\n
    v1[6] = *((...));\n
    v1[7] = *((...));\n
    v1[8] = *((...));\n
    v2 = ...;\n
    v1[9] = *((_ZN12_GLOBAL__N_18g_secretE + (v2 & 4095)));\n
    _ZN12_GLOBAL__N_15prng1E = ...;\n
    _ZN12_GLOBAL__N_15prng2E = v2;\n
    return v1;\n
}\n
", "4239665:sub_40b131": null, "4239680:_ZN7Backend10DeleteUserEPKctS1_t": "extern unsigned int g_412bd0;\n
extern unsigned int g_412bd4;\n
extern unsigned int g_412bdc;\n
extern unsigned int g_412be0;\n
\n
int Backend::DeleteUser(unsigned int v11, unsigned short a0, unsigned int a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned short v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    void* v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v12;  // ebp\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // ecx\n
    unsigned int *v19;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v20[24];  // esi\n
    unsigned int v21;  // ecx\n
    void* v22;  // esi\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // eax\n
\n
    if (g_412bd0 < 2)\n
        return 0;\n
    v12 = 2;\n
    v13 = -0x4;\n
    v14 = -8;\n
    v2 = a0;\n
    do\n
    {\n
        v6 = v14;\n
        v15 = *((g_412bd4 + v12 * 4 - 4));\n
        if (User::CompareName const(v15, v11))\n
        {\n
            v1 = v15;\n
            if (!User::VerifyPass const(v15, a1))\n
                break;\n
            v7 = v12 - 1;\n
            v16 = g_412bdc;\n
            if (!([D] x86g_calculate_condition(0x8<32>, 0x3<32>, Load(addr=0x412bdc<32>, size=4, endness=Iend_LE), 0xffffffff<32>, 0x0<32>)))\n
            {\n
                v18 = g_412bdc - 2;\n
                while (true)\n
                {\n
                    v2 = v18;\n
                    v19 = v18 + 1;\n
                    if (v16 <= v19)\n
                        v19 = 0;\n
                    v5 = *((g_412be0 + v19 * 4));\n
                    if (User::Equals const(Channel::creator(v5)))\n
                    {\n
                        v10 = User::name();\n
                        v4 = User::name_length();\n
                        v9 = User::pass();\n
                        v3 = User::pass_length();\n
                        v22 = v5;\n
                        v8 = Channel::name(v22);\n
                        v0 = Channel::name_length(v22);\n
                        Backend::DeleteChannel(v10, v4, v9, v3, v8);\n
                        v21 = v2;\n
                        if (v21 < 0)\n
                            break;\n
                    }\n
                    else\n
                    {\n
                        v20 = v5;\n
                        Channel::RemoveUserFromChannel(v20, v20);\n
                        Channel::RemoveUserAsAdmin(v20, v1);\n
                        Channel::RemoveBan(v20, v1);\n
                        v21 = v2;\n
                        if (v21 < 0)\n
                            break;\n
                    }\n
                    v16 = g_412bdc;\n
                    v18 = v21 - 1;\n
                }\n
            }\n
            v23 = v7;\n
            if (g_412bd0 >= v23)\n
            {\n
                User::Delete();\n
                v24 = g_412bd0;\n
                if (g_412bd0 >= 2 && g_412bd0 > v23)\n
                {\n
                    g_412bd0 = g_412bd0;\n
                    cgc_memmove(g_412bd4 - v13, g_412bd4 - v6, (v24 - v12) * 4);\n
                    goto LABEL_40b389;\n
                }\n
                g_412bd0 = g_412bd0 - 1;\n
            }\n
LABEL_40b389:\n
            v17 = operator delete(v1);\n
            *(&v17) = 1;\n
            return v17;\n
        }\n
        v13 -= 4;\n
        v14 = v6 - 4;\n
        v12 += 1;\n
    } while (2 < g_412bd0);\n
}\n
", "4239880:sub_40b208": null, "4240281:sub_40b399": null, "4240288:_ZN7Backend13DeleteChannelEPKctS1_tS1_t": "extern unsigned int g_412bd0;\n
extern struct_1 *g_412bd4;\n
extern unsigned int g_412bdc;\n
extern struct_0 *g_412be0;\n
\n
int Backend::DeleteChannel(unsigned int v3, unsigned short a0, unsigned int a1, unsigned short a2, unsigned int a3, unsigned short a4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v5;  // edi, Other Possible Types: unsigned int\n
    void* v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // esi, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ebp\n
\n
    v4 = 0;\n
    v5 = -1;\n
    v6 = 0;\n
    if (g_412bd0 >= 2)\n
    {\n
        v5 = 1;\n
        do\n
        {\n
            v6 = *(&(&g_412bd4->padding_0)[v5]);\n
            if (User::CompareName const(*(&(&g_412bd4->padding_0)[v5]), v3))\n
            {\n
LABEL_40b410:\n
                v4 = 0;\n
                goto LABEL_40b412;\n
            }\n
            v5 += 1;\n
        } while (v5 < g_412bd0);\n
        v5 = -1;\n
        v6 = 0;\n
        goto LABEL_40b410;\n
    }\n
LABEL_40b412:\n
    v1 = -1;\n
    if (g_412bdc)\n
    {\n
        v0 = v6;\n
        v7 = 0;\n
        v2 = a4;\n
        do\n
        {\n
            if (Channel::CompareName(g_412be0[v7].field_0, a3, v2))\n
            {\n
                v1 = v7;\n
                v4 = g_412be0[v7].field_0;\n
                goto LABEL_40b476;\n
            }\n
            v7 += 1;\n
        } while (v7 < g_412bdc);\n
        v4 = 0;\n
LABEL_40b476:\n
        v6 = v0;\n
    }\n
    if (!v6)\n
    {\n
        return 0;\n
    }\n
    else if (!v4)\n
    {\n
        return 0;\n
    }\n
    else\n
    {\n
        v9 = v6;\n
        v10 = v1;\n
        if (v1 == -1)\n
        {\n
            return 0;\n
        }\n
        else if (v5 == -1)\n
        {\n
            return 0;\n
        }\n
        else\n
        {\n
            if (!(User::VerifyPass const(v9, a1) && User::Equals const(Channel::creator(v4))))\n
                return 0;\n
            Channel::DeleteChannel(v4);\n
            if (g_412bdc >= v10 && g_412bdc)\n
            {\n
                if (g_412bdc >= 2 && g_412bdc > v10)\n
                {\n
                    g_412bdc = g_412bdc;\n
                    cgc_memmove(&g_412be0[v10], &g_412be0[v10 + 1], (g_412bdc - v10) * 4);\n
                    goto LABEL_40b537;\n
                }\n
                g_412bdc = g_412bdc - 1;\n
            }\n
LABEL_40b537:\n
            v8 = operator delete(v4);\n
            *(&v8) = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4240717:sub_40b54d": null, "4240720:_ZN7Backend11JoinChannelEPKctS1_tS1_t": "extern unsigned int _ZN12_GLOBAL__N_118RegisteredChannelsE;\n
extern unsigned int g_412bd0;\n
extern struct_1 *g_412bd4;\n
extern struct_0 *g_412bdc;\n
extern struct_2 *g_412be0;\n
\n
int Backend::JoinChannel(unsigned int v2, unsigned short a0, unsigned int a1, unsigned short a2, char *a3, unsigned short a4)\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v4;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v5;  // edi\n
    unsigned int *v6;  // ebp, Other Possible Types: unsigned int\n
    void* v7;  // eax, Other Possible Types: unsigned int, char\n
    unsigned int v8;  // ebp\n
    void* v9;  // esi, Other Possible Types: unsigned int\n
    void* v10;  // edi\n
    unsigned int *v11;  // ecx\n
\n
    v3 = 0;\n
    if (g_412bd0 < 2)\n
    {\n
        v1 = -1;\n
        v0 = 0;\n
        if (!g_412bdc)\n
            goto LABEL_40b63b;\n
    }\n
    else\n
    {\n
        v1 = -1;\n
        v4 = 1;\n
        v0 = a0;\n
        while (true)\n
        {\n
            v5 = *(&(&g_412bd4->padding_0)[v4]);\n
            if (User::CompareName const(v5, v2))\n
                break;\n
            v4 += 1;\n
            if (v4 >= g_412bd0)\n
            {\n
                v0 = 0;\n
                goto LABEL_40b5fb;\n
            }\n
        }\n
        v0 = v5;\n
        v1 = v4;\n
        if (!g_412bdc)\n
            goto LABEL_40b63b;\n
    }\n
LABEL_40b5fb:\n
    v6 = 0;\n
    while (true)\n
    {\n
        v3 = g_412be0[v6].field_0;\n
        if (Channel::CompareName(v3, a3, a4))\n
            break;\n
        v6 += 1;\n
        if (v6 >= g_412bdc)\n
        {\n
            v3 = 0;\n
            break;\n
        }\n
    }\n
LABEL_40b63b:\n
    v7 = 0;\n
    v8 = v0;\n
    if (!v0)\n
    {\n
LABEL_40b731:\n
        return v7;\n
    }\n
    if (v1 == -1)\n
        goto LABEL_40b731;\n
    if (!User::VerifyPass const(v8, a1))\n
    {\n
        v7 = 0;\n
        goto LABEL_40b731;\n
    }\n
    else\n
    {\n
        if (v3)\n
        {\n
            v7 = Channel::AddUserToChannel(v3, v8);\n
            return v7;\n
        }\n
        v7 = 0;\n
        if (!a3)\n
            goto LABEL_40b731;\n
        if (!a4)\n
            goto LABEL_40b731;\n
        if (g_412bdc)\n
        {\n
            v9 = 0;\n
            while (!Channel::CompareName(g_412be0[v9].field_0, a3, a4))\n
            {\n
                v9 += 1;\n
                if (v9 >= g_412bdc)\n
                    goto LABEL_40b6e8;\n
            }\n
        }\n
LABEL_40b6e8:\n
        v10 = operator new(120);\n
        v7 = Channel::__base_ctor__(v10, a3, a4, v8);\n
        v11 = g_412bdc;\n
        v7 = 1;\n
        if (g_412bdc < _ZN12_GLOBAL__N_118RegisteredChannelsE)\n
        {\n
            g_412bdc = &g_412bdc->field_0 + 1;\n
            *((&g_412be0->field_0 + 0x4 * v11)) = v10;\n
            goto LABEL_40b731;\n
        }\n
    }\n
}\n
", "4241209:sub_40b739": null, "4241216:_ZN7Backend20CheckIfChannelExistsEPKct": "extern unsigned int g_412bdc;\n
extern struct_0 *g_412be0;\n
\n
int Backend::CheckIfChannelExists(unsigned int v0, unsigned short a0)\n
{\n
    unsigned int *v1;  // edi, Other Possible Types: unsigned int\n
    void* v2;  // esi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    if (!g_412bdc)\n
    {\n
LABEL_40b799:\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v2 = g_412be0[v1].field_0;\n
            v3 = Channel::CompareName(v2, v0, a0);\n
            if (v3)\n
                break;\n
            v1 += 1;\n
            if (v1 >= g_412bdc)\n
                goto LABEL_40b799;\n
        }\n
    }\n
    *(&v3) = v2;\n
    return v3;\n
}\n
", "4241320:sub_40b7a8": null, "4241328:_ZN7Backend24CheckIfUserJoinedChannelEPKctS1_tS1_t": "extern unsigned int g_412bd0;\n
extern struct_1 *g_412bd4;\n
extern unsigned int g_412bdc;\n
extern struct_0 *g_412be0;\n
\n
int Backend::CheckIfUserJoinedChannel(unsigned int v2, unsigned short a0, unsigned int a1, unsigned short a2, unsigned int a3, unsigned short a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
    void* v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
    void* v8;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    v4 = -1;\n
    v6 = -1;\n
    v5 = 0;\n
    if (g_412bd0 >= 2)\n
    {\n
        v6 = 1;\n
        v0 = a0;\n
        do\n
        {\n
            v5 = *(&(&g_412bd4->padding_0)[v6]);\n
            if (User::CompareName const(v5, v2))\n
            {\n
LABEL_40b823:\n
                v4 = -1;\n
                goto LABEL_40b828;\n
            }\n
            v6 += 1;\n
        } while (v6 < g_412bd0);\n
        v6 = -1;\n
        v5 = 0;\n
        goto LABEL_40b823;\n
    }\n
LABEL_40b828:\n
    if (g_412bdc)\n
    {\n
        v1 = v5;\n
        v7 = 0;\n
        v0 = a4;\n
        do\n
        {\n
            v3 = g_412be0[v7].field_0;\n
            if (Channel::CompareName(v3, a3, v0))\n
            {\n
                v4 = v7;\n
                v5 = v1;\n
                if (!v5)\n
                    goto LABEL_40b8be;\n
                goto LABEL_40b887;\n
            }\n
            v7 += 1;\n
        } while (v7 < g_412bdc);\n
        v3 = 0;\n
        v5 = v1;\n
        v4 = -1;\n
    }\n
    if (!v5)\n
        goto LABEL_40b8be;\n
LABEL_40b887:\n
    if (v3 && v4 != -1 && v6 != -1 && User::VerifyPass const(v5, a1))\n
    {\n
        v8 = Channel::FindUser(v3, v5);\n
        return v8;\n
    }\n
LABEL_40b8be:\n
    return 0;\n
}\n
", "4241608:sub_40b8c8": null, "4241616:_ZN7Backend15GetChannelUsersEPKctPt": "int Backend::GetChannelUsers()\n
{\n
    return 0;\n
}\n
", "4241619:sub_40b8d3": null, "4241632:_ZN7Backend11PartChannelEPKctS1_tS1_t": "extern unsigned int g_412bd0;\n
extern struct_1 *g_412bd4;\n
extern unsigned int g_412bdc;\n
extern struct_0 *g_412be0;\n
\n
int Backend::PartChannel(unsigned int v2, unsigned short a0, unsigned int a1, unsigned short a2, unsigned int a3, unsigned short a4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v3;  // esi, Other Possible Types: unsigned int\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
    void* v5;  // edi, Other Possible Types: unsigned int\n
    unsigned int *v6;  // ebp, Other Possible Types: unsigned int\n
    unsigned int *v7;  // edi, Other Possible Types: unsigned int\n
    void* v8;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    v4 = -1;\n
    v6 = -1;\n
    v5 = 0;\n
    if (g_412bd0 >= 2)\n
    {\n
        v6 = 1;\n
        v0 = a0;\n
        do\n
        {\n
            v5 = *(&(&g_412bd4->padding_0)[v6]);\n
            if (User::CompareName const(v5, v2))\n
            {\n
LABEL_40b953:\n
                v4 = -1;\n
                goto LABEL_40b958;\n
            }\n
            v6 += 1;\n
        } while (v6 < g_412bd0);\n
        v6 = -1;\n
        v5 = 0;\n
        goto LABEL_40b953;\n
    }\n
LABEL_40b958:\n
    if (g_412bdc)\n
    {\n
        v1 = v5;\n
        v7 = 0;\n
        v0 = a4;\n
        do\n
        {\n
            v3 = g_412be0[v7].field_0;\n
            if (Channel::CompareName(v3, a3, v0))\n
            {\n
                v4 = v7;\n
                v5 = v1;\n
                if (!v5)\n
                    goto LABEL_40b9ee;\n
                goto LABEL_40b9b7;\n
            }\n
            v7 += 1;\n
        } while (v7 < g_412bdc);\n
        v3 = 0;\n
        v5 = v1;\n
        v4 = -1;\n
    }\n
    if (!v5)\n
        goto LABEL_40b9ee;\n
LABEL_40b9b7:\n
    if (v3 && v4 != -1 && v6 != -1 && User::VerifyPass const(v5, a1))\n
    {\n
        v8 = Channel::RemoveUserFromChannel(v3, v5);\n
        return v8;\n
    }\n
LABEL_40b9ee:\n
    return 0;\n
}\n
", "4241912:sub_40b9f8": null, "4241920:_ZN7Backend14VerifyPasswordEPKctS1_t": "extern unsigned int g_412bd0;\n
extern struct_0 *g_412bd4;\n
\n
int Backend::VerifyPassword(unsigned int v1, unsigned short a0, unsigned int a1, unsigned short a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    if (v1)\n
    {\n
        v2 = a0;\n
        if (v2 && a1 && a2 && g_412bd0 >= 2)\n
        {\n
            v3 = 1;\n
            do\n
            {\n
                v4 = *(&(&g_412bd4->padding_0)[v3]);\n
                v0 = v2;\n
                if (User::CompareName const(v4, v1))\n
                {\n
                    v0 = a2;\n
                    return User::VerifyPass const(v4, a1);\n
                }\n
                v3 += 1;\n
            } while (v3 < g_412bd0);\n
        }\n
    }\n
    return 0;\n
}\n
", "4242075:sub_40ba9b": null, "4242080:_ZN7Backend15DebugPrintUsersEv": "extern unsigned int g_412bd0;\n
extern struct_0 *g_412bd4;\n
\n
int Backend::DebugPrintUsers()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // esi\n
    unsigned int v5;  // eax\n
\n
    if (!g_412bd0)\n
        return v5;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = User::name();\n
        v0 = User::name_length();\n
        print_byte_array();\n
        v4 = User::pass(g_412bd4[v2].field_0);\n
        v0 = User::pass_length();\n
        v5 = print_byte_array();\n
        v2 += 1;\n
    } while (v2 < g_412bd0);\n
    return v5;\n
}\n
", "4242206:sub_40bb1e": null, "4242208:_ZN7Backend18DebugPrintChannelsEv": "extern unsigned int g_412bdc;\n
extern struct_0 *g_412be0;\n
\n
int Backend::DebugPrintChannels()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    if (!g_412bdc)\n
        return v4;\n
    v2 = 0;\n
    do\n
    {\n
        v3 = Channel::name(g_412be0[v2].field_0);\n
        v0 = Channel::name_length(g_412be0[v2].field_0);\n
        v4 = print_byte_array();\n
        v2 += 1;\n
    } while (v2 < g_412bdc);\n
    return v4;\n
}\n
", "4242301:sub_40bb7d": null, "4242304:_ZN4UserC2EPKctS1_tb": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
    char padding_42[64];\n
    unsigned short field_82;\n
    char field_84;\n
    char padding_85[3];\n
    unsigned int field_88;\n
    unsigned int field_8c;\n
    unsigned int field_90;\n
    unsigned int field_94;\n
    unsigned int field_98;\n
    unsigned int field_9c;\n
    unsigned int field_a0;\n
    unsigned int field_a4;\n
    unsigned int field_a8;\n
} struct_0;\n
\n
int User::__base_ctor__(struct_0 *v0, char *a0, unsigned int a1, char *a2, unsigned int a3, char a4)\n
{\n
    unsigned int v1;  // edi\n
    struct_0 *v2;  // esi\n
    unsigned int v3;  // ebp\n
    unsigned int v4;  // eax\n
\n
    v1 = a1;\n
    v2 = v0;\n
    v2->field_88 = 128;\n
    v2->field_8c = 0;\n
    v2->field_90 = operator new[](0x200);\n
    v2->field_94 = 100;\n
    v2->field_98 = 0;\n
    v2->field_9c = operator new[](400);\n
    v2->field_a0 = 100;\n
    v2->field_a4 = 0;\n
    v2->field_a8 = operator new[](400);\n
    if ([D] x86g_calculate_condition(0x3<32>, 0x5<32>, Conv(16->32, di<2>), 0x40<32>, 0x0<32>))\n
        v1 = 64;\n
    v2->field_40 = v1;\n
    cgc_memcpy(v2, a0, v1);\n
    v3 = ([D] x86g_calculate_condition(0x2<32>, 0x5<32>, ebp<4>, 0x40<32>, 0x0<32>) ? 64 : a3);\n
    v2->field_82 = v3;\n
    v4 = cgc_memcpy(&v2->padding_42, a2, v3);\n
    *(&v4) = a4;\n
    v2->field_84 = a4;\n
    return v4;\n
}\n
", "4242546:sub_40bc72": null, "4242560:_ZN4User7IsAdminEv": "typedef struct struct_0 {\n
    char padding_0[132];\n
    struct struct_0 *field_84;\n
} struct_0;\n
\n
int User::IsAdmin(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    *(&v1) = v1->field_84;\n
    return v1;\n
}\n
", "4242571:sub_40bc8b": null, "4242576:_ZNK4User6EqualsEPS_": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int User::Equals const(struct_0 *v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // ecx\n
    struct_0 *v2;  // eax\n
    unsigned int v3;  // edx\n
    unsigned int v4;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v2->field_40;\n
    if (v3 == v1->field_40)\n
    {\n
        v4 = cgc_memcmp(v2, v1, v3);\n
        *(&v4) = !v4;\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4242641:sub_40bcd1": null, "4242656:_ZN4User11name_lengthEv": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int User::name_length(struct_0 *v0)\n
{\n
    return v0->field_40;\n
}\n
", "4242665:sub_40bce9": null, "4242672:_ZN4User4nameEv": "int User::name(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4242677:sub_40bcf5": null, "4242688:_ZNK4User11CompareNameEPKct": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int User::CompareName const(struct_0 *v1, unsigned int a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
    struct_0 *v6;  // edx\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (!v3)\n
        return 0;\n
    v5 = a1;\n
    v6 = v1;\n
    if (v6->field_40 == v5)\n
    {\n
        v4 = cgc_memcmp(v6, v3, v5);\n
        *(&v4) = !v4;\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4242756:sub_40bd44": null, "4242768:_ZNK4User10VerifyPassEPKct": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
} struct_0;\n
\n
int User::VerifyPass const(struct_0 *v1, unsigned int a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // esi\n
    struct_0 *v6;  // edx\n
\n
    v0 = v2;\n
    v3 = a0;\n
    if (!v3)\n
        return 0;\n
    v5 = a1;\n
    v6 = v1;\n
    if (v6->field_82 == v5)\n
    {\n
        v4 = cgc_memcmp(&v6->padding_0[66], v3, v5);\n
        *(&v4) = !v4;\n
        return v4;\n
    }\n
    return 0;\n
}\n
", "4242842:sub_40bd9a": null, "4242848:_ZN4User9BlockUserEPS_": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[160];\n
    unsigned int field_a0;\n
    struct struct_2 *field_a4;\n
    struct struct_2 *field_a8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
int User::BlockUser(struct_1 *v0, struct_0 *a0)\n
{\n
    struct_0 *v1;  // esi\n
    struct_1 *v2;  // edi\n
    struct_0 *v3;  // ecx\n
    unsigned int v4;  // edx\n
    struct struct_0 **v5;  // ebp, Other Possible Types: unsigned int\n
    struct struct_0 **v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v6 = v2->field_a4;\n
    if (!v6)\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        v5 = 0;\n
        do\n
        {\n
            v3 = v2->field_a8[v5].field_0;\n
            v4 = v1->field_40;\n
            if (v4 == v3->field_40)\n
            {\n
                v6 = cgc_memcmp(v1, v3, v4);\n
                if (!v6)\n
                    goto LABEL_40be20;\n
                v6 = v2->field_a4;\n
            }\n
            v5 += 1;\n
        } while (v5 < v6);\n
        goto LABEL_40be20;\n
    }\n
    if (v6 >= v2->field_a0)\n
        return 0;\n
    v7 = v2->field_a8;\n
    v2->field_a4 = v6 + 1;\n
    *((v7 + v6 * 4)) = v1;\n
LABEL_40be20:\n
    *(&v6) = 1;\n
    return v6;\n
}\n
", "4242889:sub_40bdc9": null, "4242990:sub_40be2e": null, "4242992:_ZN4User11UnblockUserEPS_": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int User::UnblockUser(unsigned int v0[43], struct_0 *a0)\n
{\n
    unsigned int v1;  // ecx\n
    void* v2;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v3;  // esi\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // esi\n
    unsigned int v8[43];  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // edx\n
    char *v10;  // eax\n
\n
    v1 = v0[41];\n
    v2 = 0;\n
    if (!v1)\n
        return 0;\n
    v3 = a0;\n
    v6 = 1;\n
    do\n
    {\n
        v4 = *((v0[42] + v6 * 4 - 4));\n
        v5 = v3->field_40;\n
        if (v5 == v4->field_40)\n
        {\n
            v8 = cgc_memcmp(v3, v4, v5);\n
            v1 = v0[41];\n
            if (!v8)\n
            {\n
                v7 = v6 - 1;\n
                *(&v8[0]) = 1;\n
                if (v1 < v7)\n
                {\n
                    return v8;\n
                }\n
                else if (!v1)\n
                {\n
                    return v8;\n
                }\n
                else\n
                {\n
                    v9 = v1 - 1;\n
                    if (v1 >= 2 && v9 > v7)\n
                    {\n
                        v10 = v0[42] - v2;\n
                        v0[41] = v9;\n
                        v8 = cgc_memmove(v10, v10 + 4, (v1 - v6) * 4);\n
                        *(&v8) = 1;\n
                        return v8;\n
                    }\n
                    v8 = v0;\n
                    *((v8 + 164)) = v9;\n
                    *(&v8) = 1;\n
                    return v8;\n
                }\n
            }\n
        }\n
        v2 -= 4;\n
        v6 += 1;\n
    } while (1 < v1);\n
}\n
", "4243042:sub_40be62": null, "4243217:sub_40bf11": null, "4243232:_ZN4User6DeleteEPPS_": "typedef struct struct_2 {\n
    char padding_0[136];\n
    unsigned int field_88;\n
    unsigned int field_8c;\n
    struct struct_3 *field_90;\n
    unsigned int field_94;\n
    unsigned int field_98;\n
    struct struct_3 *field_9c;\n
    unsigned int field_a0;\n
    unsigned int field_a4;\n
    unsigned int field_a8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0[3];\n
} struct_3;\n
\n
int User::Delete(struct struct_0 **v0)\n
{\n
    struct_2 *v1;  // esi\n
    unsigned int *v2[3];  // edi, Other Possible Types: unsigned int\n
    unsigned int *v3[3];  // edi, Other Possible Types: unsigned int\n
    unsigned int *v4;  // eax\n
    unsigned int *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = *(v0);\n
    if (v1->field_8c)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            Conversation::ClearChatMessages(v1->field_90[v2].field_0);\n
            v2 += 1;\n
        } while (v2 < v1->field_8c);\n
    }\n
    if (v1->field_98)\n
    {\n
        v3 = 0;\n
        do\n
        {\n
            Conversation::ClearChatMessages(v1->field_9c[v3].field_0);\n
            v3 += 1;\n
        } while (v3 < v1->field_98);\n
    }\n
    v1->field_88 = 0;\n
    v1->field_8c = 0;\n
    v4 = v1->field_90;\n
    if (v4)\n
        operator delete[](v4);\n
    v1->field_94 = 0;\n
    v1->field_98 = 0;\n
    v5 = v1->field_9c;\n
    if (v5)\n
        operator delete[](v5);\n
    v1->field_a0 = 0;\n
    v1->field_a4 = 0;\n
    v6 = v1->field_a8;\n
    if (v6)\n
        v6 = operator delete[](v6);\n
    return v6;\n
}\n
", "4243477:sub_40c015": null, "4243488:_ZN4User22AddChannelConversationEP12Conversation": "typedef struct struct_0 {\n
    char padding_0[136];\n
    unsigned int field_88;\n
    struct struct_1 *field_8c;\n
    struct struct_1 *field_90;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int User::AddChannelConversation(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int *v3;  // ecx\n
    unsigned int v4;  // edi\n
\n
    v1 = v0;\n
    v2 = v1->field_88;\n
    v3 = v1->field_8c;\n
    if (v3 < v2)\n
    {\n
        v4 = v1->field_90;\n
        v1->field_8c = v3 + 1;\n
        *((v4 + v3 * 4)) = a0;\n
    }\n
    *(&v2) = v3 < v2;\n
    return v2;\n
}\n
", "4243542:sub_40c056": null, "4243552:_ZN4User19AddUserConversationEP12Conversation": "typedef struct struct_0 {\n
    char padding_0[148];\n
    unsigned int field_94;\n
    struct struct_1 *field_98;\n
    struct struct_1 *field_9c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int User::AddUserConversation(struct_0 *v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // edx\n
    unsigned int v2;  // eax\n
    unsigned int *v3;  // ecx\n
    unsigned int v4;  // edi\n
\n
    v1 = v0;\n
    v2 = v1->field_94;\n
    v3 = v1->field_98;\n
    if (v3 < v2)\n
    {\n
        v4 = v1->field_9c;\n
        v1->field_98 = v3 + 1;\n
        *((v4 + v3 * 4)) = a0;\n
    }\n
    *(&v2) = v3 < v2;\n
    return v2;\n
}\n
", "4243606:sub_40c096": null, "4243616:_ZN4User8set_nameEPKct": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned short field_40;\n
} struct_0;\n
\n
int User::set_name(struct_0 *v1, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // esi\n
\n
    v0 = v2;\n
    v3 = ([D] x86g_calculate_condition(0x2<32>, 0x5<32>, esi<4>, 0x40<32>, 0x0<32>) ? 64 : a1);\n
    v1->field_40 = v3;\n
    return cgc_memcpy(v1, a0, v3);\n
}\n
", "4243679:sub_40c0df": null, "4243680:_ZN4User4passEv": "int User::pass(unsigned int v0)\n
{\n
    return v0 + 66;\n
}\n
", "4243688:sub_40c0e8": null, "4243696:_ZN4User8set_passEPKct": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
} struct_0;\n
\n
int User::set_pass(struct_0 *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // edx\n
    struct_0 *v2;  // ecx\n
\n
    v1 = ([D] x86g_calculate_condition(0x2<32>, 0x5<32>, edx<4>, 0x40<32>, 0x0<32>) ? 64 : a1);\n
    v2 = v0;\n
    v2->field_82 = v1;\n
    return cgc_memcpy(&v2->padding_0[66], a0, v1);\n
}\n
", "4243765:sub_40c135": null, "4243776:_ZN4User11pass_lengthEv": "typedef struct struct_0 {\n
    char padding_0[130];\n
    unsigned short field_82;\n
} struct_0;\n
\n
int User::pass_length(struct_0 *v0)\n
{\n
    return v0->field_82;\n
}\n
", "4243788:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_receive": null, "5242892:_Znaj": null, "5242896:cgc_allocate": null, "5242900:cgc__terminate": null, "5242904:_ZdlPv": null, "5242908:cgc_deallocate": null, "5242912:_ZdaPv": null, "5242916:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}