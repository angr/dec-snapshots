{"4202496:_init": "extern struct_0 *g_40d63c;\n
\n
int _init()\n
{\n
    if (g_40d63c)\n
    {\n
        g_40d63c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202704:sub_4020d0": "int sub_4020d0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202710:sub_4020d6": null, "4202720:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202763:sub_40210b": null, "4202764:sub_40210c": "int sub_40210c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202768:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202772:sub_402114": null, "4202784:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 46371;\n
    v6 = v5 + 15;\n
    v7 = v5 + 15;\n
    if (v7 == v6)\n
        return v5 + 15;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202835:sub_402153": "int sub_402153()\n
{\n
}\n
", "4202841:sub_402159": "int sub_402159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202848:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 46307;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 15;\n
    v9 = (v6 + 15 - (v6 + 15) >> 31) + (15 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202919:sub_4021a7": "int sub_4021a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202928:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40d638;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40d638)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203003:sub_4021fb": "int sub_4021fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203008:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203017:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203021:sub_40220d": null, "4203024:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203078:sub_402246": null, "4203088:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203142:sub_402286": null, "4203152:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203206:sub_4022c6": null, "4203216:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203312:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203408:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203462:sub_4023c6": null, "4203472:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203546:sub_40241a": null, "4203552:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203626:sub_40246a": null, "4203632:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203726:sub_4024ce": null, "4203728:cgc_initFileSystem": "typedef struct struct_1 {\n
    char padding_0[1144];\n
    unsigned int field_478;\n
    unsigned int field_47c;\n
    struct struct_2 *field_480;\n
    char padding_484[220];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    unsigned int field_14;\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initFileSystem(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_1 *v7;  // ebx\n
    struct_1 *v8;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if ((0 CONCAT a0) /m v6 >> 32)\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
    v3 = (0 CONCAT a1) /m a0;\n
    v4 = (0 CONCAT a1) /m v6;\n
    if (v3 > a0 << 3)\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
    v0 = &v1->field_47c;\n
    v2 = cgc_allocate(a1, 0);\n
    if (v2 == 3)\n
    {\n
        v5 = -0x4;\n
        return v5;\n
    }\n
    else if (!v2)\n
    {\n
        cgc_bzero(v1->field_47c);\n
        v7 = v1;\n
        v7->field_480 = v7->field_47c;\n
        v7->field_480->field_0 = 1;\n
        v7->field_480->field_4 = a1;\n
        v7->field_480->field_8 = a0;\n
        v7->field_480->field_c = v3;\n
        v7->field_480->field_10 = 2;\n
        v7->field_480->field_14 = 1;\n
        v7->field_480->field_18 = a0 - 8 >> 6;\n
        v7->field_480->field_1c = a0 - 8 >> 2;\n
        v7->field_480->field_20 = 0;\n
        v7->field_478 = v7->field_47c + a0;\n
        v7->field_560 = v7->field_47c + a0 * 2;\n
        cgc_setBlockInUse(0);\n
        cgc_setBlockInUse();\n
        cgc_setBlockInUse();\n
        v8 = v1;\n
        v8->field_560->field_0 = a0 - 8 >> 6;\n
        v8->field_560->field_2 = 0;\n
        v8->field_560->field_4 = 0;\n
        cgc_bzero(&v8->padding_484);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
}\n
", "4204248:sub_4026d8": null, "4204256:cgc_setBlockInUse": "extern struct_0 *freeList;\n
\n
int cgc_setBlockInUse(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = v2 >> 3;\n
    v0 = v2 & 7;\n
    v3 = freeList;\n
    v4 = v1;\n
    v3[v4] = v3[v4] | (1 << (v0 & 31));\n
    return freeList;\n
}\n
", "4204330:sub_40272a": null, "4204336:cgc_statusFile": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_2 *field_480;\n
    char padding_484[220];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_statusFile(unsigned int v5, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
    struct_1 *v6;  // eax\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // eax\n
    struct_1 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        v4 = -6;\n
        return v4;\n
    }\n
    else if (v1->field_560)\n
    {\n
        v2 = v1->field_480->field_8;\n
        while (true)\n
        {\n
            for (v3 = 0; v3 < v1->field_480->field_18; v3 += 1)\n
            {\n
                v0 = v5;\n
                if (!cgc_strcmp(25 + v1->field_560 + 0x40 * v3))\n
                {\n
                    if (a0)\n
                    {\n
                        v8 = v1;\n
                        a0[1] = v8->field_560[2 + 8 * v3].field_4;\n
                        *(&a0[0]) = v8->field_560[3 + 8 * v3].padding_0;\n
                    }\n
                    v9 = v1;\n
                    v9->field_560 = v9->field_47c + v2 * 2;\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            if (!v1->field_560->field_4)\n
            {\n
                v7 = v1;\n
                v7->field_560 = v7->field_47c + v2 * 2;\n
                v4 = -1;\n
                return v4;\n
            }\n
            v6 = v1;\n
            v6->field_560 = v6->field_47c + v6->field_560->field_4 * v2;\n
        }\n
    }\n
    else\n
    {\n
        v4 = -9;\n
        return v4;\n
    }\n
}\n
", "4204727:sub_4028b7": null, "4204736:cgc_openFile": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_2 *field_480;\n
    char padding_484[220];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_openFile(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v6;  // [bp-0xd]\n
    struct_1 *v8;  // eax\n
    struct_1 *v9;  // eax\n
    struct_1 *v10;  // eax\n
    struct_1 *v11;  // eax\n
    struct_1 *v12;  // eax\n
    struct_1 *v13;  // eax\n
    struct_1 *v14;  // eax\n
    struct_1 *v15;  // ecx\n
    struct_1 *v16;  // eax\n
    struct_1 *v17;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    if (!v7)\n
    {\n
        v6 = 250;\n
        return v6;\n
    }\n
    else if (v1->field_560)\n
    {\n
        v8 = v1;\n
        v2 = v8->field_480->field_8;\n
        v8->field_560 = v8->field_47c + v2 * 2;\n
        while (true)\n
        {\n
            for (v5 = 0; v5 < v1->field_480->field_18; v5 += 1)\n
            {\n
                v0 = v7;\n
                if (cgc_strcmp(25 + v1->field_560 + 0x40 * v5))\n
                {\n
                    v3 += 1;\n
                }\n
                else\n
                {\n
                    if (a0 != 1 && v1->field_560[1 + 8 * v5].field_4 != a0 && !v1->field_560[2 + 8 * v5].padding_0[0])\n
                    {\n
                        v11 = v1;\n
                        v11->field_560 = v11->field_47c + v2 * 2;\n
                        v6 = 242;\n
                        return v6;\n
                    }\n
                    for (v4 = 0; v4 < 5; v4 += 1)\n
                    {\n
                        if (*(&v1->padding_484[44 * v4]) == 1 && *(&v1->padding_484[4 + 44 * v4]) == v3)\n
                        {\n
                            v12 = v1;\n
                            v12->field_560 = v12->field_47c + v2 * 2;\n
                            v6 = 243;\n
                            return v6;\n
                        }\n
                    }\n
                    for (v4 = 0; v4 < 5; v4 += 1)\n
                    {\n
                        if (!*((1156 + &v1->padding_0[0] + 0x2c * v4)))\n
                            break;\n
                    }\n
                    if (v4 == 5)\n
                    {\n
                        v13 = v1;\n
                        v13->field_560 = v13->field_47c + v2 * 2;\n
                        v6 = 246;\n
                        return v6;\n
                    }\n
                    v14 = v1;\n
                    *(&v14->padding_484[44 * v4]) = 1;\n
                    *(&v14->padding_484[4 + 44 * v4]) = v3;\n
                    *(&v14->padding_484[8 + 44 * v4]) = 0;\n
                    *(&v14->padding_484[16 + 44 * v4]) = 0;\n
                    *(&v14->padding_484[12 + 44 * v4]) = 0;\n
                    *(&v14->padding_484[20 + 44 * v4]) = 0;\n
                    *(&v14->padding_484[24 + 44 * v4]) = v14->field_560[2 + 8 * v5].field_4;\n
                    *(&v14->padding_484[32 + 44 * v4]) = v14->field_560[1 + 8 * v5].field_4;\n
                    v14->padding_484[36 + 44 * v4] = v14->field_560[2 + 8 * v5].padding_0[0];\n
                    *(&v14->padding_484[40 + 44 * v4]) = v14->field_560[3 + 8 * v5].padding_0;\n
                    *(&v14->padding_484[28 + 44 * v4]) = v14->field_560[3 + 8 * v5].field_4;\n
                    if (v14->field_560[2 + 8 * v5].field_4 > 0)\n
                    {\n
                        v15 = v1;\n
                        v16 = v1;\n
                        *(&v16->padding_484[16 + 44 * v4]) = (0 CONCAT v15->field_560[2 + 8 * v5].field_4) /m v15->field_480->field_8;\n
                        *(&v16->padding_484[20 + 44 * v4]) = v16->field_560[2 + 8 * v5].field_4;\n
                    }\n
                    v17 = v1;\n
                    v17->field_560 = v17->field_47c + v2 * 2;\n
                    v6 = v4;\n
                    return v6;\n
                }\n
            }\n
            if (!v1->field_560->field_4)\n
            {\n
                v10 = v1;\n
                v10->field_560 = v10->field_47c + v2 * 2;\n
                v6 = 255;\n
                return v6;\n
            }\n
            v9 = v1;\n
            v9->field_560 = v9->field_47c + v9->field_560->field_4 * v2;\n
        }\n
    }\n
    else\n
    {\n
        v6 = 247;\n
        return v6;\n
    }\n
}\n
", "4205829:sub_402d05": null, "4205840:cgc_setPerms": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_setPerms(char v2, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 <= 5 && v2 >= 0)\n
    {\n
        if (*((v0 + 1156 + v2 * 44)))\n
        {\n
            if (a1 != *((v0 + 1156 + v2 * 44 + 32)) && a1 != 1)\n
            {\n
                v1 = -14;\n
                return v1;\n
            }\n
            if (a0 > 3)\n
            {\n
                v1 = -6;\n
                return v1;\n
            }\n
            *((v0 + 1156 + v2 * 44 + 36)) = a0;\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -11;\n
            return v1;\n
        }\n
    }\n
    v1 = -11;\n
    return v1;\n
}\n
", "4206063:sub_402def": null, "4206064:cgc_closeFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_closeFile(char v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 <= 5 && v3 >= 0)\n
    {\n
        if (*((v1 + 1156 + v3 * 44)))\n
        {\n
            v0 = v3;\n
            cgc_flushFile();\n
            v4 = v1;\n
            *((v4 + 1156 + v3 * 44)) = 0;\n
            *((v4 + 1156 + v3 * 44 + 4)) = 0;\n
            *((v4 + 1156 + v3 * 44 + 20)) = 0;\n
            *((v4 + 1156 + v3 * 44 + 12)) = 0;\n
            *((v4 + 1156 + v3 * 44 + 24)) = 0;\n
            *((v4 + 1156 + v3 * 44 + 36)) = 0;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = -11;\n
        return v2;\n
    }\n
    v2 = -11;\n
    return v2;\n
}\n
", "4206328:sub_402ef8": null, "4206336:cgc_flushFile": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_2 *field_480;\n
    char padding_484[220];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flushFile(char v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    struct_1 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_1 *v6;  // ecx\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // edx\n
    unsigned int v9;  // ecx\n
    struct_1 *v11;  // edx\n
    struct_1 *v14;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v5 <= 5 && v5 >= 0)\n
    {\n
        if (!*(&v2->padding_484[44 * v5]))\n
        {\n
            v4 = -11;\n
            return v4;\n
        }\n
        else if (v2->field_560)\n
        {\n
            v6 = v2;\n
            for (v3 = (0 CONCAT *(&v6->padding_484[4 + 44 * v5])) /m v6->field_480->field_18; v3 > 0; v3 -= 1)\n
            {\n
                v7 = v2;\n
                v7->field_560 = v7->field_47c + v7->field_560->field_4 * v7->field_480->field_8;\n
            }\n
            v8 = v2;\n
            v9 = *(&v8->padding_484[24 + 44 * v5]);\n
            v0 = v8->field_560 + 1;\n
            v11 = v2;\n
            *((v0 + ((0 CONCAT *(&v8->padding_484[4 + 44 * v5])) /m v8->field_480->field_18 >> 32) * 64 + 12)) = v9;\n
            v1 = v11->padding_484[36 + 44 * v5];\n
            v14 = v2;\n
            v11->field_560[2 + 8 * ((0 CONCAT *(&v11->padding_484[4 + 44 * v5])) /m v11->field_480->field_18 >> 32)].padding_0[0] = v1;\n
            v14->field_560 = v14->field_47c + v14->field_480->field_8 * 2;\n
            v4 = 0;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = -9;\n
            return v4;\n
        }\n
    }\n
    v4 = -11;\n
    return v4;\n
}\n
", "4206756:sub_4030a4": null, "4206768:cgc_createFile": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_2 *field_480;\n
    char padding_484[220];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_createFile(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    struct_1 *v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    struct_0 *v4;  // [bp-0x20], Other Possible Types: void*\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x10]\n
    struct_1 *v10;  // eax\n
    struct_1 *v11;  // eax\n
    struct_1 *v12;  // eax\n
    struct_1 *v13;  // eax\n
    struct_1 *v14;  // ebx\n
    struct_1 *v15;  // eax\n
    struct_1 *v16;  // eax\n
    struct_0 *v17;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v9)\n
    {\n
        v8 = -6;\n
        return v8;\n
    }\n
    else if (!v2->field_560)\n
    {\n
        v8 = -9;\n
        return v8;\n
    }\n
    else if (cgc_statusFile(v9, NULL))\n
    {\n
        v4 = 0;\n
        v3 = v2->field_480->field_8;\n
        while (true)\n
        {\n
            for (v7 = 0; v7 < v2->field_480->field_18; v7 += 1)\n
            {\n
                if (!*(32 + &v2->field_560->padding_0[0] + 0x40 * v7))\n
                {\n
                    v0 = v9;\n
                    v1 = 40;\n
                    cgc_strncpy(&v2->field_560[8 * v7].padding_0[1 + 24], v0);\n
                    v14 = v2;\n
                    v14->field_560[2 + 8 * v7].field_4 = 0;\n
                    *(&v14->field_560[3 + 8 * v7].padding_0) = a0;\n
                    v14->field_560[1 + 8 * v7].field_4 = a1;\n
                    v14->field_560[2 + 8 * v7].padding_0[0] = 0;\n
                    if (!cgc_findFreeBlock(&v6, v0))\n
                    {\n
                        cgc_eraseBlock();\n
                        cgc_setBlockInUse(*(&v6));\n
                        v2->field_560[3 + 8 * v7].field_4 = *(&v6);\n
                        v16 = v2;\n
                        v16->field_560 = v16->field_47c + v3 * 2;\n
                        v17 = v16->field_560;\n
                        v17->field_2 = v17->field_2 + 1;\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                    v15 = v2;\n
                    v15->field_560 = v15->field_47c + v3 * 2;\n
                    v8 = -5;\n
                    return v8;\n
                }\n
            }\n
            v10 = v2;\n
            v4 = v10->field_560;\n
            if (v10->field_560->field_4)\n
            {\n
                v11 = v2;\n
                v11->field_560 = v11->field_47c + v11->field_560->field_4 * v3;\n
            }\n
            else if (!cgc_findFreeBlock())\n
            {\n
                v2->field_560->field_4 = *(&v5);\n
                cgc_eraseBlock();\n
                cgc_setBlockInUse(*(&v5));\n
                v12 = v2;\n
                v12->field_560 = v12->field_47c + *(&v5) * v3;\n
            }\n
            else\n
            {\n
                v13 = v2;\n
                v13->field_560 = v13->field_47c + v3 * 2;\n
                v8 = -5;\n
                return v8;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v8 = -12;\n
        return v8;\n
    }\n
}\n
", "4207504:cgc_findFreeBlock": "typedef struct struct_0 {\n
    char padding_0[1144];\n
    unsigned int field_478;\n
    char padding_47c[4];\n
    struct struct_1 *field_480;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_findFreeBlock(unsigned int *v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        v4 = -6;\n
        return v4;\n
    }\n
    for (v3 = 0; v3 < v0->field_480->field_8; v3 += 1)\n
    {\n
        if (*((v0->field_478 + v3)) != 255)\n
            break;\n
    }\n
    if (v3 >= v0->field_480->field_c)\n
    {\n
        v4 = -5;\n
        return v4;\n
    }\n
    v1 = *((v0->field_478 + v3));\n
    for (v2 = 0; v2 < 8; v2 += 1)\n
    {\n
        if (!(v1 & 1))\n
            break;\n
        v1 >>= 1;\n
    }\n
    *(v5) = v3 * 8 + v2;\n
    if (*(v5) >= v0->field_480->field_c)\n
    {\n
        v4 = -5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207811:sub_4034c3": null, "4207824:cgc_eraseBlock": "extern unsigned int fileSystem;\n
extern struct_0 *masterBlocks;\n
\n
int cgc_eraseBlock(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = masterBlocks->field_8;\n
    v0 = v1;\n
    return cgc_bzero(fileSystem + v2 * v1);\n
}\n
", "4207894:sub_403516": null, "4207904:cgc_writeFile": "typedef struct struct_1 {\n
    char padding_0[1152];\n
    struct struct_0 *field_480;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_writeFile(char v15, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x74]\n
    struct_1 *v2;  // [bp-0x70]\n
    unsigned int v3;  // [bp-0x6c]\n
    unsigned int v4;  // [bp-0x48]\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x38]\n
    unsigned int v7;  // [bp-0x34]\n
    unsigned int v8;  // [bp-0x2c]\n
    char v9;  // [bp-0x28]\n
    unsigned int v10;  // [bp-0x24]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    struct_1 *v16;  // eax\n
    struct_1 *v17;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v15 <= 5 && v15 >= 0)\n
    {\n
        if (!*(&v2[1].padding_0[44 * v15]))\n
        {\n
            v14 = -11;\n
            return v14;\n
        }\n
        else if (!a0)\n
        {\n
            v14 = -6;\n
            return v14;\n
        }\n
        else if (a1)\n
        {\n
            if (a2 != *(&v2[1].padding_0[32 + 44 * v15]) && a2 != 1 && !(v2[1].padding_0[36 + 44 * v15] & 1))\n
            {\n
                v14 = -14;\n
                return v14;\n
            }\n
            if (*(&v2[1].padding_0[40 + 44 * v15]) > 2)\n
            {\n
                v0 = a1;\n
                v3 = cgc_writeMemoryFile(v15, a0);\n
                v14 = v3;\n
                return v14;\n
            }\n
            v16 = v2;\n
            v13 = a1;\n
            v5 = 0;\n
            v11 = *(&v16[1].padding_0[20 + 44 * v15]);\n
            v10 = v16->field_480->field_8;\n
            while (true)\n
            {\n
                if (v13 <= 0)\n
                {\n
                    *(&v2[1].padding_0[20 + 44 * v15]) = v11;\n
                    v14 = 0;\n
                    return v14;\n
                }\n
                v12 = (0 CONCAT v11) /m v10 >> 32;\n
                if (!v12 && v11 == *(&v2[1].padding_0[24 + 44 * v15]) && cgc_addNewBlock() == -1)\n
                {\n
                    v14 = -5;\n
                    return v14;\n
                }\n
                v17 = v2;\n
                v7 = *(&v17[1].padding_0[4 + 44 * v15]);\n
                if (cgc_readBlock(*(&v17[1].padding_0[28 + 44 * v15])))\n
                {\n
                    v14 = -8;\n
                    return v14;\n
                }\n
                v1 = *(&v6);\n
                v8 = *((v1 + (0 CONCAT v11) /m v10 * 4));\n
                cgc_deallocate(*(&v6));\n
                v4 = cgc_minimum(v10 - v12);\n
                if (cgc_readBlock(v8))\n
                {\n
                    v14 = -8;\n
                    return v14;\n
                }\n
                v0 = v4;\n
                cgc_memcpy(*(&v9) + v12, a0 + v5);\n
                cgc_writeBlock(*(&v9));\n
                cgc_deallocate(*(&v9));\n
                v5 = v4 + v5;\n
                v13 -= v4;\n
                if (v11 + v4 > *(&v2[1].padding_0[24 + 44 * v15]))\n
                    *(&v2[1].padding_0[24 + 44 * v15]) = v11 + v4;\n
                v11 = v4 + v11;\n
            }\n
        }\n
        else\n
        {\n
            v14 = -6;\n
            return v14;\n
        }\n
    }\n
    v14 = -11;\n
    return v14;\n
}\n
", "4208778:sub_40388a": null, "4208784:cgc_writeMemoryFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char fileCursors;\n
\n
int cgc_writeMemoryFile(char v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_readBlock(*(&(&fileCursors)[28 + 44 * v6])))\n
    {\n
        v4 = -8;\n
        return v4;\n
    }\n
    v2 = *(&v3);\n
    if (a1 > *((v1 + 1156 + v6 * 44 + 24)))\n
    {\n
        v4 = -0x4;\n
        return v4;\n
    }\n
    v0 = a1;\n
    cgc_memcpy(*(v2), a0);\n
    *((v1 + 1156 + v6 * 44 + 24)) = a1;\n
    cgc_deallocate(*(&v3));\n
    v4 = 0;\n
    return v4;\n
}\n
", "4209011:sub_403973": null, "4209024:cgc_addNewBlock": "typedef struct struct_0 {\n
    char padding_0[1152];\n
    struct struct_1 *field_480;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[16];\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_addNewBlock(char v8)\n
{\n
    struct_2 *v0;  // [bp-0x28], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int *v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    struct_0 *v9;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v8 <= 5 && v8 >= 0)\n
    {\n
        if (*(&v1[1].padding_0[44 * v8]))\n
        {\n
            v9 = v1;\n
            v4 = *(&v9[1].padding_0[4 + 44 * v8]);\n
            v0 = &v5;\n
            v2 = cgc_readBlock(*(&v9[1].padding_0[28 + 44 * v8]));\n
            if (v2)\n
            {\n
                v7 = -8;\n
                return v7;\n
            }\n
            for (v3 = 0; v3 < v1->field_480->field_1c; v3 += 1)\n
            {\n
                if (!*((*(&v5) + (v3 << 2))))\n
                    break;\n
            }\n
            if (v3 == v1->field_480->field_1c)\n
            {\n
                v7 = -1;\n
                return v7;\n
            }\n
            else if (!cgc_findFreeBlock(&v6))\n
            {\n
                cgc_setBlockInUse(v6);\n
                *((*(&v5) + v3 * 4)) = v6;\n
                v0 = *(&v1[1].padding_0[28 + 44 * v8]);\n
                cgc_writeBlock(*(&v5));\n
                v0 = v1->field_480->field_8;\n
                cgc_deallocate(*(&v5));\n
                v7 = v6;\n
                return v7;\n
            }\n
            else\n
            {\n
                v7 = -5;\n
                return v7;\n
            }\n
        }\n
        else\n
        {\n
            v7 = -11;\n
            return v7;\n
        }\n
    }\n
    v7 = -11;\n
    return v7;\n
}\n
", "4209448:sub_403b28": null, "4209456:cgc_readBlock": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_0 *field_480;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int fileSystem;\n
\n
int cgc_readBlock(unsigned int v6, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!fileSystem)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    v3 = v1->field_480->field_8;\n
    v0 = &v4;\n
    v2 = cgc_allocate(v3, 0);\n
    if (v2 == 3)\n
    {\n
        v5 = -0x4;\n
        return v5;\n
    }\n
    else if (!v2)\n
    {\n
        v0 = v3;\n
        cgc_memcpy(*(&v4), v1->field_47c + v6 * v3);\n
        *(a0) = *(&v4);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -3;\n
        return v5;\n
    }\n
}\n
", "4209663:sub_403bff": null, "4209664:cgc_writeBlock": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_0 *field_480;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int fileSystem;\n
\n
int cgc_writeBlock(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    struct_1 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!fileSystem)\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
    v5 = v1;\n
    v2 = v5->field_480->field_8;\n
    v0 = v2;\n
    cgc_memcpy(v5->field_47c + a0 * v2, v4);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4209785:sub_403c79": null, "4209792:cgc_readFile": "typedef struct struct_1 {\n
    char padding_0[1152];\n
    struct struct_0 *field_480;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readFile(char v18, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int *a3, unsigned int a4)\n
{\n
    unsigned int *v0;  // [bp-0x60]\n
    struct_1 *v1;  // [bp-0x58]\n
    unsigned int v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    unsigned int v5;  // [bp-0x48]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    unsigned int v8;  // [bp-0x3c]\n
    unsigned int v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x2c]\n
    unsigned int v13;  // [bp-0x28]\n
    unsigned int v14;  // [bp-0x24]\n
    void* v15;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x10]\n
    struct_1 *v19;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (a3)\n
        *(a3) = 0;\n
    if (v18 <= 5 && v18 >= 0)\n
    {\n
        if (!*(&v1[1].padding_0[44 * v18]))\n
        {\n
            v17 = -11;\n
            return v17;\n
        }\n
        else if (!a0)\n
        {\n
            v17 = -6;\n
            return v17;\n
        }\n
        else if (a1)\n
        {\n
            if (a4 != *(&v1[1].padding_0[32 + 44 * v18]) && a4 != 1 && !(v1[1].padding_0[36 + 44 * v18] & 2))\n
            {\n
                v17 = -14;\n
                return v17;\n
            }\n
            if (*(&v1[1].padding_0[40 + 44 * v18]) > 2)\n
            {\n
                v0 = a3;\n
                v2 = cgc_readMemoryFile(v18, a0, a1);\n
                v17 = v2;\n
                return v17;\n
            }\n
            v16 = a1;\n
            v15 = 0;\n
            if (a2)\n
            {\n
                v3 = a2;\n
                if (cgc_fileReadPosRelative(v18))\n
                {\n
                    v17 = -6;\n
                    return v17;\n
                }\n
            }\n
            v19 = v1;\n
            v9 = *(&v19[1].padding_0[4 + 44 * v18]);\n
            v14 = *(&v19[1].padding_0[12 + 44 * v18]);\n
            for (v6 = v19->field_480->field_8; v16; v14 = v7 + v14)\n
            {\n
                if (v14 == *(&v1[1].padding_0[24 + 44 * v18]))\n
                    break;\n
                v13 = (0 CONCAT v14) /m v6;\n
                if (cgc_readBlock(*(&v1[1].padding_0[28 + 44 * v18]), &v10))\n
                {\n
                    v17 = -8;\n
                    return v17;\n
                }\n
                v12 = *((v10 + v13 * 4));\n
                cgc_deallocate(v10);\n
                if (cgc_readBlock(v12, &v11))\n
                {\n
                    v17 = -8;\n
                    return v17;\n
                }\n
                v8 = (0 CONCAT v14) /m v6 >> 32;\n
                v4 = v6 - v8;\n
                v5 = *(&v1[1].padding_0[24 + 44 * v18]) - v14;\n
                v7 = cgc_minimum(cgc_minimum(v5));\n
                cgc_memcpy(a0 + v15, v11 + v8);\n
                cgc_deallocate(v11);\n
                v15 = v7 + v15;\n
                v16 -= v7;\n
            }\n
            *(&v1[1].padding_0[12 + 44 * v18]) = v14;\n
            if (a3)\n
                *(a3) = v15;\n
            if (v14 == *(&v1[1].padding_0[24 + 44 * v18]))\n
            {\n
                v17 = -7;\n
                return v17;\n
            }\n
            v17 = 0;\n
            return v17;\n
        }\n
        else\n
        {\n
            v17 = -6;\n
            return v17;\n
        }\n
    }\n
    v17 = -11;\n
    return v17;\n
}\n
", "4210741:sub_404035": null, "4210752:cgc_readMemoryFile": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char fileCursors;\n
\n
int cgc_readMemoryFile(char v7, unsigned int a0, unsigned int a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ecx\n
    struct_0 *v10;  // eax\n
    unsigned int v11;  // ecx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_readBlock(*(&(&fileCursors)[28 + 44 * v7]), &v4))\n
    {\n
        v5 = -8;\n
        return v5;\n
    }\n
    v9 = v1;\n
    v2 = v4;\n
    if (*((v9 + 1156 + v7 * 44 + 12)) >= *((v9 + 1156 + v7 * 44 + 24)))\n
    {\n
        v5 = -7;\n
        return v5;\n
    }\n
    v3 = cgc_minimum(a1);\n
    v0 = v3;\n
    cgc_memcpy(a0, *(v2) + *((v1 + 1156 + v7 * 44 + 12)));\n
    if (a2)\n
        *(a2) = v3;\n
    v10 = v1 + 1156 + v7 * 44;\n
    v10->field_c = v3 + v10->field_c;\n
    cgc_deallocate(v4);\n
    v11 = v1;\n
    if (*((v11 + 1156 + v7 * 44 + 12)) >= *((v11 + 1156 + v7 * 44 + 24)))\n
    {\n
        v5 = -7;\n
        return v5;\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211152:cgc_fileReadPosRelative": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileReadPosRelative(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ecx\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 <= 5 && v2 >= 0)\n
    {\n
        if (*((v0 + 1156 + v2 * 44)))\n
        {\n
            v3 = v0;\n
            if (*((v3 + 1156 + v2 * 44 + 12)) + a0 > *((v3 + 1156 + v2 * 44 + 24)))\n
            {\n
                v1 = -6;\n
                return v1;\n
            }\n
            if (*((v0 + 1156 + v2 * 44 + 12)) + a0 < 0)\n
            {\n
                *((v0 + 1156 + v2 * 44 + 12)) = 0;\n
            }\n
            else\n
            {\n
                v4 = v0 + 1156 + v2 * 44;\n
                v4->field_c = a0 + v4->field_c;\n
            }\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -11;\n
            return v1;\n
        }\n
    }\n
    v1 = -11;\n
    return v1;\n
}\n
", "4211421:sub_4042dd": null, "4211424:cgc_readFileUntil": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_readFileUntil(char v5, char *a0, unsigned int a1, char a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x12]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v3 < 0)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_readFile(v5, &v2, 1, 0, NULL, 1);\n
        if (v2 == a2)\n
            break;\n
        if (v3 == -7)\n
            break;\n
        if (v3 < 0)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        else if (v1 < a1)\n
        {\n
            *(a0) = v2;\n
            v1 += 1;\n
            a0 += 1;\n
            *(a0) = 0;\n
        }\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4211672:sub_4043d8": null, "4211680:cgc_fileReadPosition": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileReadPosition(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 <= 5 && v2 >= 0)\n
    {\n
        if (!*((v0 + 1156 + v2 * 44)))\n
        {\n
            v1 = -11;\n
            return v1;\n
        }\n
        else if (a0 <= *((v0 + 1156 + v2 * 44 + 24)))\n
        {\n
            *((v0 + 1156 + v2 * 44 + 12)) = a0;\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -6;\n
            return v1;\n
        }\n
    }\n
    v1 = -11;\n
    return v1;\n
}\n
", "4211865:sub_404499": null, "4211872:cgc_fileWritePosition": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileWritePosition(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 <= 5 && v2 >= 0)\n
    {\n
        if (!*((v0 + 1156 + v2 * 44)))\n
        {\n
            v1 = -11;\n
            return v1;\n
        }\n
        else if (a0 <= *((v0 + 1156 + v2 * 44 + 24)))\n
        {\n
            *((v0 + 1156 + v2 * 44 + 20)) = a0;\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -6;\n
            return v1;\n
        }\n
    }\n
    v1 = -11;\n
    return v1;\n
}\n
", "4212057:sub_404559": null, "4212064:cgc_fileWritePosRelative": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fileWritePosRelative(char v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ecx\n
    struct_0 *v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 <= 5 && v2 >= 0)\n
    {\n
        if (*((v0 + 1156 + v2 * 44)))\n
        {\n
            v3 = v0;\n
            if (*((v3 + 1156 + v2 * 44 + 20)) + a0 > *((v3 + 1156 + v2 * 44 + 24)))\n
            {\n
                v1 = -6;\n
                return v1;\n
            }\n
            if (*((v0 + 1156 + v2 * 44 + 20)) + a0 < 0)\n
            {\n
                *((v0 + 1156 + v2 * 44 + 20)) = 0;\n
            }\n
            else\n
            {\n
                v4 = v0 + 1156 + v2 * 44;\n
                v4->field_14 = a0 + v4->field_14;\n
            }\n
            v1 = 0;\n
            return v1;\n
        }\n
        else\n
        {\n
            v1 = -11;\n
            return v1;\n
        }\n
    }\n
    v1 = -11;\n
    return v1;\n
}\n
", "4212333:sub_40466d": null, "4212336:cgc_deleteFile": "typedef struct struct_1 {\n
    char padding_0[1376];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_deleteFile(char v7, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x24]\n
    struct_2 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_1 *v8;  // ebx\n
    struct_1 *v9;  // eax\n
    struct_0 *v10;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v7 <= 5 && v7 >= 0)\n
    {\n
        if (*(&v0->padding_0[1156 + 44 * v7]))\n
        {\n
            if (a0 != *(&v0->padding_0[1188 + 44 * v7]) && a0 != 1 && !(v0->padding_0[1192 + 44 * v7] & 1))\n
            {\n
                v6 = -14;\n
                return v6;\n
            }\n
            v8 = v0;\n
            v5 = *(&v8->padding_0[1160 + 44 * v7]);\n
            v2 = cgc_readBlock(*(&v8->padding_0[1184 + 44 * v7]), &v4);\n
            if (v2)\n
            {\n
                v6 = -8;\n
                return v6;\n
            }\n
            if (*(&v0->padding_0[1196 + 44 * v7]) > 2)\n
            {\n
                v1 = v4;\n
                if (v1->field_0 > 0 && !v1->field_8)\n
                    cgc_free();\n
            }\n
            else\n
            {\n
                for (v3 = v4; *(v3); v3 += 1)\n
                {\n
                    cgc_eraseBlock(*(v3));\n
                    cgc_setBlockAsFree();\n
                }\n
            }\n
            cgc_deallocate(v4);\n
            cgc_eraseBlock(*(&v0->padding_0[1184 + 44 * v7]));\n
            cgc_setBlockAsFree();\n
            v9 = v0;\n
            v9->field_560[8 + 16 * v5].padding_0[0] = 0;\n
            *(&v9->field_560[5 + 16 * v5].padding_0) = 0;\n
            *(&v9->field_560[7 + 16 * v5].padding_0) = 0;\n
            v10 = v9->field_560;\n
            v10->field_2 = v10->field_2 - 1;\n
            *(&v9->padding_0[1160 + 44 * v7]) = 0;\n
            *(&v9->padding_0[1156 + 44 * v7]) = 0;\n
            *(&v9->padding_0[1176 + 44 * v7]) = 0;\n
            *(&v9->padding_0[1168 + 44 * v7]) = 0;\n
            *(&v9->padding_0[1180 + 44 * v7]) = 0;\n
            v9->padding_0[1192 + 44 * v7] = 0;\n
            v6 = 0;\n
            return v6;\n
        }\n
        else\n
        {\n
            v6 = -11;\n
            return v6;\n
        }\n
    }\n
    v6 = -11;\n
    return v6;\n
}\n
", "4213080:sub_404958": null, "4213088:cgc_setBlockAsFree": "extern struct_0 *freeList;\n
\n
int cgc_setBlockAsFree(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = v2 >> 3;\n
    v0 = v2 & 7;\n
    v3 = freeList;\n
    v4 = v1;\n
    v3[v4] = v3[v4] & ((1 << (v0 & 31)) ^ 255);\n
    return freeList;\n
}\n
", "4213165:sub_4049ad": null, "4213168:cgc_truncateFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_truncateFile(char v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 <= 5 && v6 >= 0)\n
    {\n
        if (!*((v0 + 1156 + v6 * 44)))\n
        {\n
            v5 = -11;\n
            return v5;\n
        }\n
        else if (*((v0 + 1156 + v6 * 44 + 40)) <= 2)\n
        {\n
            if (a0 != *((v0 + 1156 + v6 * 44 + 32)) && a0 != 1 && !(*((v0 + 1156 + v6 * 44 + 36)) & 1))\n
            {\n
                v5 = -14;\n
                return v5;\n
            }\n
            v7 = v0;\n
            v4 = *((v7 + 1156 + v6 * 44 + 4));\n
            v1 = cgc_readBlock(*((v7 + 1156 + v6 * 44 + 28)), &v3);\n
            if (v1)\n
            {\n
                v5 = -8;\n
                return v5;\n
            }\n
            for (v2 = v3; *(v2); v2 += 1)\n
            {\n
                cgc_eraseBlock(*(v2));\n
                cgc_setBlockAsFree(*(v2));\n
            }\n
            cgc_deallocate(v3);\n
            cgc_eraseBlock(*((v0 + 1156 + v6 * 44 + 28)));\n
            v8 = v0;\n
            *((v8 + 1156 + v6 * 44 + 20)) = 0;\n
            *((v8 + 1156 + v6 * 44 + 12)) = 0;\n
            *((v8 + 1156 + v6 * 44 + 8)) = 0;\n
            *((v8 + 1156 + v6 * 44 + 16)) = 0;\n
            *((v8 + 1156 + v6 * 44 + 24)) = 0;\n
            cgc_flushFile(v6);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    v5 = -11;\n
    return v5;\n
}\n
", "4213742:sub_404bee": null, "4213744:cgc_findFiles": "typedef struct struct_2 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
    unsigned int field_44;\n
    char padding_48[1076];\n
    unsigned int field_47c;\n
    struct struct_3 *field_480;\n
    char padding_484[220];\n
    struct struct_1 *field_560;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int rootDir;\n
\n
int cgc_findFiles(char *v9, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x74]\n
    struct_2 *v1;  // [bp-0x68]\n
    void* v2;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x60]\n
    char v4;  // [bp-0x41]\n
    char v5;  // [bp-0x19]\n
    struct_0 *v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x10]\n
    struct_2 *v10;  // eax\n
    struct_2 *v11;  // ebx\n
    struct_2 *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!rootDir)\n
    {\n
        v8 = -9;\n
        return v8;\n
    }\n
    v2 = 0;\n
    v3 = v1->field_480->field_8;\n
    while (true)\n
    {\n
        v6 = &v1->field_560[1];\n
        v7 = 0;\n
        while (true)\n
        {\n
            if (v7 >= v1->field_480->field_18)\n
            {\n
                if (!v1->field_560->field_4)\n
                {\n
                    v12 = v1;\n
                    v12->field_560 = v12->field_47c + v3 * 2;\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                v10 = v1;\n
                v10->field_560 = v10->field_47c + v10->field_560->field_4 * v3;\n
                break;\n
            }\n
            if (!*((v6 + 24)))\n
            {\n
                v6 += 64;\n
                v2 += 1;\n
LABEL_404d37:\n
                v7 += 1;\n
            }\n
            else\n
            {\n
                v0 = 40;\n
                cgc_strncpy(&v4, v6 + 24);\n
                v5 = 0;\n
                if (*(v9) && cgc_wildcard_search(v9) != 1)\n
                {\n
                    v6 += 64;\n
                    goto LABEL_404d37;\n
                }\n
                v11 = v1;\n
                v11->field_40 = v6;\n
                v11->field_44 = v2;\n
                v0 = 40;\n
                cgc_strncpy(&v11->padding_48, v9);\n
                *(a0) = &v1->field_40;\n
                v8 = 0;\n
                return v8;\n
            }\n
        }\n
    }\n
}\n
", "4214189:sub_404dad": null, "4214192:cgc_findNextFile": "typedef struct struct_1 {\n
    char padding_0[1148];\n
    unsigned int field_47c;\n
    struct struct_2 *field_480;\n
    char padding_484[220];\n
    struct struct_0 *field_560;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    unsigned int field_4;\n
    char field_8;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[12];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[24];\n
    char field_18;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_findNextFile(struct_4 *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    struct_1 *v7;  // ecx\n
    struct_1 *v8;  // eax\n
    struct_1 *v9;  // edx\n
    struct_4 *v10;  // eax\n
    struct_4 *v11;  // eax\n
    struct_1 *v12;  // eax\n
    struct_1 *v13;  // eax\n
    struct_1 *v14;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v7 = v1;\n
    v2 = v7->field_480->field_8;\n
    v4 = (0 CONCAT v6->field_4) /m v7->field_480->field_18;\n
    for (v3 = (0 CONCAT v6->field_4) /m v7->field_480->field_18 >> 32; v4 > 0; v4 -= 1)\n
    {\n
        v8 = v1;\n
        v8->field_560 = v8->field_47c + v8->field_560->field_4 * v8->field_480->field_8;\n
    }\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            v9 = v1;\n
            if (v6->field_0 >= &v9->field_560[8 * v9->field_480->field_18].padding_0[1])\n
            {\n
                if (v1->field_560->field_4)\n
                {\n
                    v12 = v1;\n
                    v12->field_560 = v12->field_47c + v12->field_560->field_4 * v2;\n
                    break;\n
                }\n
                else\n
                {\n
                    v14 = v1;\n
                    v14->field_560 = v14->field_47c + v2 * 2;\n
                    v5 = -1;\n
                    return v5;\n
                }\n
            }\n
            if (v6->field_0 >= v1->field_560 + 1)\n
            {\n
                v10 = v6;\n
                v10->field_0 = &v10->field_0[2].padding_0[14];\n
            }\n
            else\n
            {\n
                v6->field_0 = &v1->field_560[1];\n
            }\n
            v11 = v6;\n
            v11->field_4 = v11->field_4 + 1;\n
            if (!v6->field_0->field_18)\n
                continue;\n
            if (!v6->field_8)\n
            {\n
LABEL_404f16:\n
                v13 = v1;\n
                v13->field_560 = v13->field_47c + v2 * 2;\n
                v5 = 0;\n
                return v5;\n
            }\n
            v0 = &v6->field_0->field_18;\n
            if (cgc_wildcard_search(&v6->field_8) == 1)\n
                goto LABEL_404f16;\n
        }\n
    }\n
}\n
", "4214694:sub_404fa6": null, "4214704:cgc_getFileSystemInfo": "typedef struct struct_0 {\n
    char padding_0[1152];\n
    struct struct_1 *field_480;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[8];\n
    unsigned int field_18;\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getFileSystemInfo(unsigned int v2[6])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v2)\n
    {\n
        v1 = -6;\n
        return v1;\n
    }\n
    else if (v0->field_480)\n
    {\n
        v3 = v0;\n
        v2[0] = v3->field_480->field_4;\n
        v2[1] = v3->field_480->field_8;\n
        v2[2] = v3->field_480->field_c;\n
        v2[3] = 0;\n
        v2[4] = v3->field_480->field_18;\n
        v2[5] = v3->field_480->field_1c;\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -9;\n
        return v1;\n
    }\n
}\n
", "4214880:cgc_makeMemoryFile": "typedef struct struct_2 {\n
    char padding_0[1152];\n
    struct struct_0 *field_480;\n
    char padding_484[220];\n
    struct struct_1 *field_560;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_makeMemoryFile(unsigned int v6, unsigned int a0, unsigned int a1, char a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_2 *v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    struct_2 *v7;  // ebx\n
    struct_1 *v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v6)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    else if (!v1->field_560)\n
    {\n
        v5 = -9;\n
        return v5;\n
    }\n
    else if (cgc_statusFile(v6, NULL))\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (v4 >= v1->field_480->field_18)\n
            {\n
                v5 = -10;\n
                return v5;\n
            }\n
            if (!v1->field_560[8 + 16 * v4].padding_0[0])\n
                break;\n
            v4 += 1;\n
        }\n
        v0 = 40;\n
        cgc_strncpy(&(&v1->field_560[16 * v4].field_2)[12], v6);\n
        v7 = v1;\n
        *(&v7->field_560[5 + 16 * v4].padding_0) = a1;\n
        *(&v7->field_560[6 + 16 * v4].padding_0) = a2 + 3;\n
        *(&v7->field_560[3 + 16 * v4].padding_0) = a3;\n
        v7->field_560[4 + 16 * v4].padding_0[0] = 0;\n
        if (cgc_findFreeBlock(&v3))\n
        {\n
            v5 = -5;\n
            return v5;\n
        }\n
        cgc_eraseBlock(v3);\n
        cgc_setBlockInUse(v3);\n
        *(&v1->field_560[7 + 16 * v4].padding_0) = v3;\n
        v8 = v1->field_560;\n
        v8->field_2 = v8->field_2 + 1;\n
        cgc_readBlock(v3, &v2);\n
        *(v2) = a0;\n
        v2[1] = a1;\n
        *(&v2[2]) = a2;\n
        cgc_writeBlock(v2, v3);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -12;\n
        return v5;\n
    }\n
}\n
", "4215440:cgc_receive_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a0)\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            if (cgc_receive(0, v5 + v3, a0 - v3))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v3 = v2 + v3;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4215616:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[158];\n
\n
int cgc_receive_until(char *v7, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1[158];  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8[158];  // ecx\n
    unsigned int v9[158];  // eax\n
    unsigned int v10[158];  // eax\n
    unsigned int v11[158];  // eax\n
    unsigned int v12[158];  // eax\n
    unsigned int v13[158];  // ecx\n
    unsigned int v14[158];  // ecx\n
    unsigned int v15[158];  // ebx\n
    unsigned int v16[158];  // eax\n
    unsigned int v17[158];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v5 = 0x200;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            v8 = v1;\n
            if (v8[156] >= v8[157] && v1[156] == 0x200)\n
            {\n
                v12 = v1;\n
                v12[156] = 0;\n
                v12[157] = 0;\n
                break;\n
            }\n
            v9 = v1;\n
            if (*(112 + &v9[0] + v9[156]) == a0)\n
            {\n
                v17 = v1;\n
                *(v7) = 0;\n
                v17[156] = v17[156] + 1;\n
                goto LABEL_4054f3;\n
            }\n
            else\n
            {\n
                v10 = v1;\n
                *(v7) = *(112 + &v10[0] + v10[156]);\n
                v3 += 1;\n
                v7 += 1;\n
                if (v3 == a1)\n
                {\n
                    *(v7) = 0;\n
LABEL_4054f3:\n
                    v6 = v3;\n
                    return v6;\n
                }\n
                v11 = v1;\n
                v11[156] = v11[156] + 1;\n
            }\n
        }\n
        v13 = v1;\n
        if (v13[157] < v13[156])\n
        {\n
            v14 = v1;\n
            v4 = v14[156] - v14[157];\n
        }\n
        else\n
        {\n
            v4 = 0x200 - v1[157];\n
        }\n
        v15 = v1;\n
        v0 = &v2;\n
        if (cgc_receive(0, (&v15[28] + v15[157]), v4))\n
            cgc__terminate();\n
        v16 = v1;\n
        v16[157] = v2 + v16[157];\n
    }\n
}\n
", "4216060:sub_4054fc": null, "4216064:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 632));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 632)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4216401:sub_405651": null, "4216416:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[632];\n
    unsigned int field_278;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_278)\n
    {\n
        v7 = v1;\n
        v7->field_278 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4216617:sub_405729": null, "4216624:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4216695:sub_405777": null, "4216704:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[632];\n
    struct struct_1 *field_278;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
        cgc__terminate();\n
    cgc_bzero(v1->field_278);\n
    v3[0] = v1->field_278;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4216904:sub_405848": null, "4216912:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4216996:sub_4058a4": null, "4217008:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[632];\n
    struct struct_0 *field_278;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_278; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4217289:sub_4059c9": null, "4217296:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4217404:sub_405a3c": null, "4217408:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 632)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 632));\n
        *((v6 + v3 * 4 + 632)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4217693:sub_405b5d": null, "4217696:cgc_round": null, "4217842:sub_405bf2": null, "4217856:cgc_floor": null, "4218012:sub_405c9c": null, "4218016:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[1508];\n
    unsigned int field_5e4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_5e4 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[1380 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[1380 + 4 * (v2 + 1 & 31)]);\n
        *((1380 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4218239:sub_405d7f": null, "4218240:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4218287:sub_405daf": null, "4218288:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1380 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4218571:sub_405ecb": null, "4218576:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4218764:sub_405f8c": null, "4218768:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4218869:sub_405ff5": null, "4218880:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4218914:sub_406022": null, "4218928:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // esi\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (true)\n
    {\n
        if (v3->field_100 < 0x100)\n
        {\n
            v7 = v3;\n
            v7->field_100 = v7->field_100 + 1;\n
            (&v3->field_0)[v9] = a0;\n
            v4 = a1 + 1;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(1, v3, v3->field_100))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        else if (*(&v2))\n
        {\n
            v6 = v3;\n
            v6->field_100 = v6->field_100 - *(&v2);\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4219159:sub_406117": null, "4219168:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4219260:sub_40617c": null, "4219264:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            if (!*(&v4))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4219452:sub_40623c": null, "4219456:cgc_vprintf_buffered": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x130]\n
    unsigned int v2;  // [bp-0x128]\n
    void* v3;  // [bp-0x124]\n
    struct_0 *v4;  // [bp-0x120]\n
    char v5;  // [bp-0x11c]\n
    unsigned short v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // esi\n
\n
    v11 = v13;\n
    v10 = v14;\n
    v9 = v15;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = cgc_WRAPPER_BUFFER_PUTC;\n
    v6 = 0;\n
    v4 = &v5;\n
    v3 = 0;\n
    v0 = a0;\n
    v2 = cgc_wrapper_output(v4, v7, v3, v12);\n
    if (v6 > 0)\n
    {\n
        if (cgc_transmit(1, &v5, v6))\n
        {\n
            v8 = -1;\n
            goto LABEL_40631b;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
        }\n
    }\n
    v8 = v2;\n
LABEL_40631b:\n
    return v8;\n
}\n
", "4219689:sub_406329": null, "4219696:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    unsigned int *v45;  // [bp+0x10001c], Other Possible Types: struct struct_1 **\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_406869:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_406869;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 9784)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4221052:sub_40687c": null, "4221056:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4221114:sub_4068ba": null, "4221120:cgc_vprintf": "int cgc_vprintf(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = cgc_WRAPPER_PUTC;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = a0;\n
    return cgc_wrapper_output(v2, v3, v1, v6);\n
}\n
", "4221217:sub_406921": null, "4221232:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4221301:sub_406975": null, "4221312:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4221451:sub_406a0b": null, "4221456:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4221728:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4222384:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4224800:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4225466:sub_4079ba": null, "4225472:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if ((a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4226012:sub_407bdc": null, "4226016:cgc_write": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            v0 = &v4;\n
            v2 = cgc_transmit(v6, a0 + v3, a1 - v3);\n
            if (v2)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v3 = v4 + v3;\n
        }\n
        else\n
        {\n
            v5 = a1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4226170:sub_407c7a": null, "4226176:cgc_minimum": "int cgc_minimum(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4226223:sub_407caf": null, "4226224:cgc_max": "int cgc_max(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 > a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4226271:sub_407cdf": null, "4226272:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4226319:sub_407d0f": null, "4226320:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4226357:sub_407d35": null, "4226368:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4226605:sub_407e2d": null, "4226608:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned long v8;  // [bp-0xc]\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 1;\n
    for (v5 = 0; *(v9) == 32; v9 += 1);\n
    if (*(v9) != 45)\n
    {\n
        v6 = 1;\n
    }\n
    else\n
    {\n
        v6 = -1;\n
        v9 += 1;\n
    }\n
    while (v9)\n
    {\n
        if (*(v9) == 46)\n
        {\n
            v5 = 1;\n
            v9 += 1;\n
            continue;\n
        }\n
        if (*(v9) < 48)\n
        {\n
LABEL_407f33:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(*(v9) <= 57))\n
                goto LABEL_407f33;\n
            v4 = *(v9) - 48;\n
            v11 = ftop<4> - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v12 = v11 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v12 = v11 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            v13 = v12 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t10,1] = t11\n
            [D] PutI(136:I8x8)[t10,1] = 0x01\n
            [D] PutI(136:I8x8)[t10,0] = 0x00\n
            v15 = v14 + 1;\n
            v8 = ([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan);\n
            [D] PutI(136:I8x8)[t35,0] = 0x00\n
            v1 = v4;\n
            v17 = v15 + 1 - 1;\n
            [D] PutI(72:F64x8)[t50,0] = t53\n
            [D] PutI(136:I8x8)[t50,0] = 0x01\n
            v18 = v17 - 1;\n
            [D] PutI(72:F64x8)[t63,0] = t66\n
            [D] PutI(136:I8x8)[t63,0] = 0x01\n
            [D] PutI(72:F64x8)[t73,1] = t74\n
            [D] PutI(136:I8x8)[t73,1] = 0x01\n
            [D] PutI(136:I8x8)[t73,0] = 0x00\n
            v19 = v18 + 1;\n
            v8 = ([D] GetI(136:I8x8)[t98,0] ? [D] GetI(72:F64x8)[t98,0] : nan);\n
            [D] PutI(136:I8x8)[t98,0] = 0x00\n
            v20 = v19 + 1;\n
            if (v5)\n
                v7 *= 10;\n
            v9 += 1;\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v21 = v6;\n
    v3 = v21;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t5,1] = t6\n
    [D] PutI(136:I8x8)[t5,1] = 0x01\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v8 = ([D] GetI(136:I8x8)[t30,0] ? [D] GetI(72:F64x8)[t30,0] : nan);\n
    [D] PutI(136:I8x8)[t30,0] = 0x00\n
    if (v5)\n
    {\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v21 = v7;\n
        v2 = v21;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t1,1] = t2\n
        [D] PutI(136:I8x8)[t1,1] = 0x01\n
        [D] PutI(136:I8x8)[t1,0] = 0x00\n
        v8 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
        [D] PutI(136:I8x8)[t26,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v21;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v21;\n
}\n
", "4226938:sub_407f7a": null, "4226944:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4227003:sub_407fbb": null, "4227008:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(a0);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        v1 = *(v2) - *(a0);\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4227161:sub_408059": null, "4227168:cgc_strncmp": "int cgc_strncmp(char *v3, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v3))\n
            {\n
                v0 = 0;\n
                if (*(v3) == *(a0))\n
                    v0 = v1 < a1;\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v3 += 1;\n
            a0 += 1;\n
            v1 += 1;\n
        }\n
        v2 = *(v3) - *(a0);\n
        return v2;\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4227357:sub_40811d": null, "4227360:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4227415:sub_408157": null, "4227424:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(&v4) = v0;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = v1;\n
    }\n
    return v2;\n
}\n
", "4227578:sub_4081fa": null, "4227584:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4227660:sub_40824c": null, "4227664:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4227801:sub_4082d9": null, "4227808:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4227944:sub_408368": null, "4227952:cgc_wildcard_search": "int cgc_wildcard_search(char v4[2], char *a0)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char v2[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(a0))\n
            v1 = *(v4);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v4) == 42)\n
        {\n
            if (!*((v4 + 1)))\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            *(&v4) = v4 + 1;\n
            *(&v2) = v4;\n
            while (true)\n
            {\n
                v0 = 0;\n
                if (v4[0] != *(a0))\n
                    v0 = *(a0);\n
                if (!(v0 & 1))\n
                    break;\n
                a0 += 1;\n
            }\n
            if (!*(a0))\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v4 += 1;\n
            a0 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(a0) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else if (*(v4) == 63)\n
        {\n
            v4 += 1;\n
            a0 += 1;\n
        }\n
        else if (*(v4) == *(a0))\n
        {\n
            v4 += 1;\n
            a0 += 1;\n
            if (!*(v4))\n
            {\n
                if (*(a0) && v2)\n
                {\n
                    v4 = v2;\n
                    continue;\n
                }\n
                break;\n
            }\n
        }\n
        else\n
        {\n
            if (!v2)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            if (v4 == v2)\n
            {\n
                a0 += 1;\n
            }\n
            else\n
            {\n
                v4 = v2;\n
                continue;\n
            }\n
        }\n
    }\n
    if (*(a0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4))\n
    {\n
        if (*(v4) != 42)\n
        {\n
LABEL_4085c1:\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (!(!*((v4 + 1))))\n
        {\n
            goto LABEL_4085c1;\n
        }\n
    }\n
    v3 = 1;\n
    return v3;\n
}\n
", "4228572:sub_4085dc": null, "4228576:cgc_contains_wildcards": "int cgc_contains_wildcards(char *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        if (*(v1) == 42)\n
            break;\n
        if (*(v1) == 63)\n
            break;\n
        v1 += 1;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4228669:sub_40863d": null, "4228672:cgc_authenticate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_authenticate(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x180]\n
    char v1;  // [bp-0x17c]\n
    unsigned int v2;  // [bp-0x178]\n
    char v3;  // [bp-0x171]\n
    char v4;  // [bp-0x16a]\n
    char v5;  // [bp-0x106]\n
    char v6;  // [bp-0x3e]\n
    char v7;  // [bp-0x25]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_openFile(\"Users.db\", 1);\n
    if (v3 < 0)\n
    {\n
        cgc_printf(v0 - 9619);\n
        cgc__terminate();\n
    }\n
    while (true)\n
    {\n
        v2 = cgc_readFileUntil(v3, &v7, 25, 58, &v1, 1);\n
        if (!v2)\n
        {\n
            cgc_closeFile(v3);\n
            v8 = -1;\n
            return v8;\n
        }\n
        if (!cgc_strcmp(&v7, v10))\n
            break;\n
        v2 = cgc_readFileUntil(v3, &v5, 200, 10, &v1, 1);\n
    }\n
    v2 = cgc_readFileUntil(v3, &v6, 25, 58, &v1, 1);\n
    if (cgc_strcmp(&v6, a0))\n
    {\n
        cgc_closeFile(v3);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v2 = cgc_readFileUntil(v3, &v4, 100, 10, &v1, 1);\n
    cgc_closeFile(v3);\n
    v8 = cgc_atoi(&v4);\n
    return v8;\n
}\n
", "4229290:sub_4088aa": null, "4229296:cgc_create_user": "typedef struct struct_1 {\n
    char padding_0[1770];\n
    char field_6ea;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_user(char *v16, unsigned int a0, char *a1)\n
{\n
    int tmp_6;  // tmp #6\n
    char v0;  // [bp-0x47d]\n
    struct_0 *v1;  // [bp-0x47c]\n
    struct_1 *v2;  // [bp-0x478]\n
    char v3;  // [bp-0x474]\n
    void* v4;  // [bp-0x74], Other Possible Types: char, unsigned int\n
    unsigned int v5;  // [bp-0x70]\n
    char v6;  // [bp-0x6a]\n
    char v7;  // [bp-0x69]\n
    char v8;  // [bp-0x68]\n
    char v9;  // [bp-0x64]\n
    unsigned int v10;  // [bp-0x60]\n
    char v11;  // [bp-0x5a]\n
    char v12;  // [bp-0x41]\n
    char v13;  // [bp-0x2d]\n
    unsigned int v14;  // [bp-0x14]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
    struct_1 *v18;  // eax\n
\n
    v15 = v17;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = cgc_openFile(\"Users.db\", 1);\n
    if (v7 < 0)\n
    {\n
        cgc_printf(&v2[5].padding_0[764]);\n
        cgc__terminate();\n
    }\n
    if (v2->field_6ea == 255)\n
    {\n
        tmp_6 = cgc_openFile(&v2[5].padding_0[740], 1);\n
        v18 = v2;\n
        v18->field_6ea = tmp_6;\n
        if (v18->field_6ea < 0)\n
        {\n
            cgc_printf(&v2[5].padding_0[728]);\n
            cgc__terminate();\n
        }\n
    }\n
    v5 = cgc_readFile(v2->field_6ea, &v9, 4, 0, NULL, 1);\n
    if (v5 == -7)\n
        cgc_fileReadPosition(v2->field_6ea, 1);\n
    v5 = cgc_readFile(v2->field_6ea, &v8, 4, 0, NULL, 1);\n
    if (v5 == -7)\n
        cgc_fileReadPosition(v2->field_6ea, 1);\n
    v10 = *(&v8) * *(&v9);\n
    v10 &= 2147483647;\n
    while (true)\n
    {\n
        v5 = cgc_readFileUntil(v7, &v13, 25, 58, &v4, 1);\n
        if (!v5)\n
            break;\n
        if (!cgc_strcmp(&v13, v16))\n
        {\n
            cgc_fileReadPosRelative(v2->field_6ea, -0x4);\n
            cgc_closeFile(v7);\n
            v14 = -1;\n
            return v14;\n
        }\n
        v5 = cgc_readFileUntil(v7, &v3, 0x400, 58, &v4, 1);\n
        v5 = cgc_readFileUntil(v7, &v3, 0x400, 10, &v4, 1);\n
        if (cgc_atoi(&v11) == v10)\n
            v10 += 1;\n
    }\n
    cgc_sprintf(&v3, &v2[5].padding_0[696]);\n
    v0 = v7;\n
    v1 = &v3;\n
    v5 = cgc_writeFile(v0, v1, cgc_strlen(&v3), 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(&v2[5].padding_0[686]);\n
        cgc__terminate();\n
    }\n
    cgc_closeFile(v7);\n
    cgc_sprintf(&v12, &v2[5].padding_0[661]);\n
    v5 = cgc_createFile(&v12, 2, 1);\n
    if (v5 < 0)\n
    {\n
        cgc_printf(&v2[5].padding_0[471]);\n
        cgc__terminate(-1);\n
    }\n
    v6 = cgc_openFile(&v12, 1);\n
    if (v6 < 0)\n
    {\n
        cgc_printf(&v2[5].padding_0[653]);\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    cgc_writeFile(v6, &v4, 4, 1);\n
    cgc_writeFile(v6, &v4, 4, 1);\n
    v4 = cgc_strlen(a1);\n
    cgc_writeFile(v6, &v4, 4, 1);\n
    cgc_writeFile(v6, a1, v4, 1);\n
    cgc_closeFile(v6);\n
    v14 = v10;\n
    return v14;\n
}\n
", "4230754:sub_408e62": null, "4230768:cgc_receiveMessage": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receiveMessage(char *v12)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    char *v2;  // [bp-0x30]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char *v5;  // [bp-0x24]\n
    char *v6;  // [bp-0x20]\n
    char *v7;  // [bp-0x1c]\n
    char v8;  // [bp-0x11]\n
    char v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_receive_bytes(&v9, 4) == -1)\n
    {\n
        v10 = -1;\n
        return v10;\n
    }\n
    v0 = *(&v9);\n
    if (v0 == 160)\n
    {\n
        v7 = v12;\n
        if (!v7)\n
            cgc__terminate();\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v7, v8);\n
        v7[v8] = 0;\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v7 + 21, v8);\n
        v7[21 + v8] = 0;\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v7 + 42, v8);\n
        v7[42 + v8] = 0;\n
        v10 = *(&v9);\n
        return v10;\n
    }\n
    else if (v0 == 176)\n
    {\n
        v6 = v12;\n
        if (!v6)\n
            cgc__terminate();\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v6, v8);\n
        v6[v8] = 0;\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v6 + 21, v8);\n
        v6[21 + v8] = 0;\n
        v10 = *(&v9);\n
        return v10;\n
    }\n
    else if (v0 == 192)\n
    {\n
        v5 = v12;\n
        if (!v5)\n
            cgc__terminate();\n
        cgc_receive_bytes(v5, 4);\n
        v10 = *(&v9);\n
        return v10;\n
    }\n
    else if (v0 == 208)\n
    {\n
        v4 = v12;\n
        if (!v4)\n
            cgc__terminate();\n
        cgc_receive_bytes(v4, 4);\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v4 + 4, v8);\n
        v4[4 + v8] = 0;\n
        v10 = *(&v9);\n
        return v10;\n
    }\n
    else if (v0 == 224)\n
    {\n
        v2 = v12;\n
        if (!v2)\n
            cgc__terminate();\n
        cgc_receive_bytes(v2, 4);\n
        cgc_receive_bytes(v2 + 4, 4);\n
        cgc_receive_bytes(&v8, 1);\n
        cgc_receive_bytes(v2 + 8, v8);\n
        v2[8 + v8] = 0;\n
        v10 = *(&v9);\n
        return v10;\n
    }\n
    else if (v0 == 240)\n
    {\n
        v3 = v12;\n
        if (!v3)\n
            cgc__terminate();\n
        cgc_receive_bytes(v3, 4);\n
        v10 = *(&v9);\n
        return v10;\n
    }\n
    else\n
    {\n
        v10 = 0;\n
        return v10;\n
    }\n
}\n
", "4231736:sub_409238": null, "4231744:cgc_sendResponse": "int cgc_sendResponse(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (cgc_write(1, v1, a0))\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4231832:sub_409298": null, "4231840:cgc_savePost": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_savePost(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    unsigned int v2;  // [bp-0xa8]\n
    char v3;  // [bp-0xa2]\n
    char v4;  // [bp-0xa1]\n
    char v5;  // [bp-0x22]\n
    char v6;  // [bp-0x21]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_sprintf(&v6, \"$x.post\");\n
    v2 = cgc_createFile(&v6, 2, 1);\n
    if (v2)\n
    {\n
        cgc_printf(v0 - 9474);\n
        cgc__terminate();\n
    }\n
    v3 = cgc_openFile(&v6, 1);\n
    if (v3 < 0)\n
    {\n
        cgc_printf(v0 - 9448);\n
        cgc__terminate();\n
    }\n
    v2 = cgc_writeFile(v3, &a0, 4, 1);\n
    if (v2)\n
    {\n
        cgc_printf(v0 - 9422);\n
        cgc__terminate();\n
    }\n
    cgc_strncpy(&v4, a1, 128);\n
    v5 = 0;\n
    v1 = cgc_strlen(&v4);\n
    v2 = cgc_writeFile(v3, &v1, 4, 1);\n
    v2 = cgc_writeFile(v3, &v4, v1, 1);\n
    if (v2)\n
    {\n
        cgc_printf(v0 - 9396);\n
        cgc__terminate();\n
    }\n
    cgc_closeFile(v3);\n
    v3 = cgc_openFile(v0 - 9368, 1);\n
    if (v3 < 0)\n
    {\n
        cgc_printf(v0 - 9358);\n
        cgc__terminate();\n
    }\n
    v2 = cgc_writeFile(v3, &v8, 4, 1);\n
    cgc_closeFile(v3);\n
    return 0;\n
}\n
", "4232604:sub_40959c": null, "4232608:cgc_saveComment": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_saveComment(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x9c]\n
    unsigned int v1;  // [bp-0x98]\n
    unsigned int v2;  // [bp-0x90]\n
    char v3;  // [bp-0x8a]\n
    char v4;  // [bp-0x89]\n
    char v5;  // [bp-0x26]\n
    char v6;  // [bp-0x25]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_sprintf(&v6, \"$x.post\");\n
    v3 = cgc_openFile(&v6, 1);\n
    if (v3 < 0)\n
    {\n
        cgc_printf(v0 - 9447);\n
        cgc_printf(v0 - 9331);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v2 = cgc_writeFile(v3, &a0, 4, 1);\n
    if (v2)\n
    {\n
        cgc_printf(v0 - 9322);\n
        v7 = -1;\n
        return v7;\n
    }\n
    cgc_strncpy(&v4, a1, 100);\n
    v5 = 0;\n
    v1 = cgc_strlen(&v4);\n
    v2 = cgc_writeFile(v3, &v1, 4, 1);\n
    if (v2)\n
    {\n
        cgc_printf(v0 - 9292);\n
        cgc__terminate();\n
    }\n
    v2 = cgc_writeFile(v3, &v4, v1, 1);\n
    if (v2)\n
    {\n
        cgc_printf(v0 - 9262);\n
        cgc__terminate();\n
    }\n
    cgc_closeFile(v3);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4233199:sub_4097ef": null, "4233200:cgc_newFeedPost": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_newFeedPost(unsigned int v10, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    void* v2;  // [bp-0x38]\n
    char v3;  // [bp-0x34]\n
    unsigned int v4;  // [bp-0x30]\n
    char v5;  // [bp-0x2b]\n
    char v6;  // [bp-0x2a]\n
    char v7;  // [bp-0x29]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_sprintf(&v7, \"$x.user\");\n
    v6 = cgc_openFile(&v7, 1);\n
    if (v6 < 0)\n
    {\n
        cgc_printf(v0 - 9508);\n
        cgc_printf(v0 - 9331);\n
        v8 = -1;\n
        return v8;\n
    }\n
    v4 = cgc_readFile(v6, &v3, 4, 0, &v1, 1);\n
    if (v4)\n
    {\n
        cgc_printf(v0 - 9232);\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_closeFile(v6);\n
    v5 = cgc_openFile(v0 - 9368, 1);\n
    v2 = 0;\n
    while (v2 <= *(&v3))\n
    {\n
        v4 = cgc_readFile(v5, &v2, 4, 0, &v1, 1);\n
        if (v4 == -7)\n
            break;\n
    }\n
    cgc_closeFile(v5);\n
    if (v2 <= *(&v3))\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v4 = cgc_retrievePost(v2, 0, a0);\n
    if (v4)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v6 = cgc_openFile(&v7, 1);\n
    if (v6 < 0)\n
    {\n
        cgc_printf(v0 - 9508);\n
        cgc_printf(v0 - 9331);\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_fileWritePosition(v6, 0);\n
    cgc_writeFile(v6, &v2, 4, 1);\n
    cgc_closeFile(v6);\n
    v8 = 0;\n
    return v8;\n
}\n
", "4233894:sub_409aa6": null, "4233904:cgc_retrievePost": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_retrievePost(unsigned int v19, unsigned int a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x560]\n
    void* v1;  // [bp-0x55c], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x558]\n
    char v3;  // [bp-0x552]\n
    char v4;  // [bp-0x534]\n
    unsigned int v5;  // [bp-0x4d0]\n
    char v6;  // [bp-0x4ca]\n
    char v7;  // [bp-0x4c9]\n
    char v8;  // [bp-0x4c8]\n
    char v9;  // [bp-0x448]\n
    char v10;  // [bp-0x444], Other Possible Types: unsigned int\n
    char v11;  // [bp-0x440], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x43c], Other Possible Types: unsigned int, char\n
    char v13;  // [bp-0x438]\n
    char v14;  // [bp-0x434]\n
    char v15;  // [bp-0x42f]\n
    char v16;  // [bp-0x29]\n
    unsigned int v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v20;  // ebx\n
\n
    v18 = v20;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_sprintf(&v16, \"$x.post\");\n
    v7 = cgc_openFile(&v16, 1);\n
    if (v7 < 0)\n
    {\n
        v17 = -1;\n
        return v17;\n
    }\n
    v5 = cgc_readFile(v7, &v13, 4, 0, NULL, 1);\n
    if (v5)\n
    {\n
        cgc_printf(v0 - 9206);\n
        cgc__terminate();\n
    }\n
    v5 = cgc_readFile(v7, &v9, 4, 0, &v14, 1);\n
    if (v5)\n
    {\n
        cgc_printf(v0 - 9181);\n
        cgc__terminate();\n
    }\n
    v5 = cgc_readFile(v7, &v8, *(&v9), 0, &v14, 1);\n
    if (v5 && v5 != -7)\n
    {\n
        cgc_printf(v0 - 9154);\n
        cgc__terminate();\n
    }\n
    cgc_sprintf(&v16, v0 - 9516);\n
    v6 = cgc_openFile(&v16, 1);\n
    if (v6 < 0)\n
    {\n
        cgc_printf(v0 - 9127);\n
        cgc__terminate();\n
    }\n
    v5 = cgc_readFile(v6, &v15, 30, 12, &v14, 1);\n
    if (v5 < 0 && v5 != -7)\n
    {\n
        cgc_printf(v0 - 9101);\n
        cgc__terminate();\n
    }\n
    cgc_closeFile(v6);\n
    (&v15)[*(&v14)] = 0;\n
    v5 = cgc_allocate(0x1000, 0);\n
    if (v5)\n
    {\n
        cgc_printf(v0 - 9081);\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    cgc_memcpy(*(a1) + v1, &v14, 4);\n
    v1 += 4;\n
    cgc_memcpy(*(a1) + v1, &v15, *(&v14));\n
    v1 = *(&v14) + v1;\n
    cgc_memcpy(*(a1) + v1, &v9, 4);\n
    v1 += 4;\n
    cgc_memcpy(*(a1) + v1, &v8, *(&v9));\n
    v1 = *(&v9) + v1;\n
    for (v12 = 0; a0; v1 = v10 + v1)\n
    {\n
        v5 = cgc_readFile(v7, &v2, 4, 0, NULL, 1);\n
        if (v5)\n
            break;\n
        v5 = cgc_readFile(v7, &v10, 4, 0, &v14, 1);\n
        if (v5)\n
        {\n
            cgc_printf(v0 - 9052);\n
            cgc__terminate();\n
        }\n
        v5 = cgc_readFile(v7, &v4, *(&v10), 0, &v14, 1);\n
        if (v5 && v5 != -7)\n
        {\n
            cgc_printf(v0 - 9154);\n
            cgc__terminate();\n
        }\n
        v10 = *(&v14);\n
        cgc_sprintf(&v16, v0 - 9516);\n
        v6 = cgc_openFile(&v16, 1);\n
        if (v6 < 0)\n
        {\n
            cgc_strcpy(&v3, v0 - 8955);\n
            v11 = cgc_strlen(&v3);\n
        }\n
        else\n
        {\n
            v5 = cgc_readFile(v6, &v11, 4, 8, &v14, 1);\n
            if (v5 < 0)\n
            {\n
                cgc_printf(v0 - 9022);\n
                cgc__terminate();\n
            }\n
            v5 = cgc_readFile(v6, &v3, v11, 0, &v14, 1);\n
            if (v5 < 0 && v5 != -7)\n
            {\n
                cgc_printf(v0 - 8985);\n
                cgc__terminate();\n
            }\n
            cgc_closeFile(v6);\n
        }\n
        *(&v12) = v12 + 1;\n
        cgc_memcpy(*(a1) + v1, &v12, 4);\n
        v1 += 4;\n
        cgc_memcpy(*(a1) + v1, &v11, 4);\n
        v1 += 4;\n
        cgc_memcpy(*(a1) + v1, &v3, v11);\n
        v1 = v11 + v1;\n
        cgc_memcpy(*(a1) + v1, &v10, 4);\n
        v1 += 4;\n
        cgc_memcpy(*(a1) + v1, &v4, v10);\n
    }\n
    *(a2) = v1;\n
    cgc_closeFile(v7);\n
    v17 = 0;\n
    return v17;\n
}\n
", "4236259:sub_40a3e3": null, "4236272:main": "typedef struct struct_0 {\n
    char padding_0[1770];\n
    char field_6ea;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v20, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    struct_0 *v1;  // [bp-0x54]\n
    void* v2;  // [bp-0x50], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    void* v7;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x38]\n
    unsigned int v9[2];  // [bp-0x34]\n
    unsigned int *v10;  // [bp-0x30]\n
    unsigned int v11;  // [bp-0x2c]\n
    unsigned int v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    char v14;  // [bp-0x20]\n
    unsigned int v15;  // [bp-0x1c]\n
    char v16;  // [bp-0x15]\n
    unsigned int v17;  // [bp-0x10]\n
    void* v18;  // [bp-0xc]\n
    unsigned int v19;  // [bp-0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // ebx\n
\n
    v19 = v21;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v18 = 0;\n
    v6 = 100;\n
    v17 = cgc_initFileSystem(0x200, 0x200, 0xfa000);\n
    v1->field_6ea = 255;\n
    if (v17)\n
    {\n
        cgc_printf(&v1[5].padding_0[90]);\n
        cgc__terminate();\n
    }\n
    v17 = cgc_makeMemoryFile(&v1[5].padding_0[64], 0x4347c600, 0xa00, 1, 1);\n
    if (v17)\n
    {\n
        cgc_printf(&v1[5].padding_0[51]);\n
        cgc__terminate();\n
    }\n
    v17 = cgc_makeMemoryFile(&v1[5].padding_0[27], 0x4347c000, 4, 1, 1);\n
    if (v17)\n
    {\n
        cgc_printf(&v1[5].padding_0[51]);\n
        cgc__terminate();\n
    }\n
    v17 = cgc_createFile(&v1[5].padding_0[773], 2, 1);\n
    if (v17)\n
    {\n
        cgc_printf(&v1[5].padding_0[9]);\n
        cgc__terminate();\n
    }\n
    v17 = cgc_createFile(&v1[5].padding_0[513], 2, 1);\n
    if (v17)\n
    {\n
        cgc_printf(&v1[5].padding_0[51]);\n
        cgc__terminate();\n
    }\n
    v16 = cgc_openFile(&v1[5].padding_0[27], 1);\n
    if (v16 < 0)\n
    {\n
        cgc_printf(&v1[4].padding_0[1757]);\n
        cgc__terminate();\n
    }\n
    cgc_readFile(v16, &v6, 4, 0, NULL, 1);\n
    v6 &= 268435455;\n
    cgc_deleteFile(v16, 1);\n
    v17 = cgc_makeMemoryFile(&v1[5].padding_0[740], 1128775684, 1532, 1, 1);\n
    if (v17)\n
    {\n
        cgc_printf(&v1[4].padding_0[1724]);\n
        cgc__terminate();\n
    }\n
    v17 = cgc_allocate(0x400, 0);\n
    if (v17)\n
        cgc__terminate();\n
    v2 = 0;\n
    while (((v2 ^ 255) & 1))\n
    {\n
        v13 = cgc_receiveMessage(*(&v14));\n
        v0 = v13;\n
        if (v0 == 100)\n
        {\n
            v2 = 1;\n
        }\n
        else if (v0 == 160)\n
        {\n
            v12 = *(&v14);\n
            if (cgc_create_user(v12, v12 + 21, v12 + 42) < 0)\n
                v7 = -1;\n
            else\n
                v7 = 0;\n
            cgc_sendResponse(&v7, 4);\n
        }\n
        else if (v0 == 176)\n
        {\n
            v11 = *(&v14);\n
            v15 = cgc_authenticate(v11, v11 + 21);\n
            cgc_sendResponse(&v15, 4);\n
        }\n
        else if (v0 == 192)\n
        {\n
            v5 = *(*(&v14));\n
            v17 = cgc_newFeedPost(v5, &v4, &v3);\n
            if (!v17)\n
            {\n
                cgc_sendResponse(v4, v3);\n
                cgc_deallocate(v4);\n
            }\n
            else\n
            {\n
                v17 = -1;\n
                cgc_sendResponse(&v17, 4);\n
            }\n
        }\n
        else if (v0 == 208)\n
        {\n
            v10 = *(&v14);\n
            v17 = cgc_savePost(v6, *(v10), v10 + 1);\n
            if (v17)\n
            {\n
                v17 = -1;\n
            }\n
            else\n
            {\n
                v17 = v6;\n
                v6 += 1;\n
            }\n
            cgc_sendResponse(&v17, 4);\n
        }\n
        else if (v0 == 224)\n
        {\n
            v9[0] = *(&v14);\n
            v17 = cgc_saveComment(v9[0], v9[1], v9 + 1);\n
            cgc_sendResponse(&v17, 4);\n
        }\n
        else if (v0 != 240)\n
        {\n
            v2 = 1;\n
        }\n
        else\n
        {\n
            v8 = *(*(&v14));\n
            if (v8 < 16)\n
            {\n
                v17 = cgc_sendStickPost();\n
            }\n
            else\n
            {\n
                v17 = cgc_retrievePost(v8, 1, &v4, &v3);\n
                if (!v17)\n
                {\n
                    cgc_sendResponse(v4, v3);\n
                    cgc_deallocate(v4);\n
                }\n
            }\n
            if (v17 == -1)\n
                cgc_sendResponse(&v17, 4);\n
        }\n
    }\n
    cgc_printf(&v1[4].padding_0[1698]);\n
    v22 = v19;\n
    return v18;\n
}\n
", "4237931:sub_40aa6b": null, "4237936:cgc_sendStickPost": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendStickPost(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0xc0]\n
    unsigned int v1;  // [bp-0xbc]\n
    unsigned int v2;  // [bp-0xb8]\n
    unsigned int v3;  // [bp-0xb4]\n
    char v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x33]\n
    char v6;  // [bp-0x15]\n
    char v7;  // [bp-0xd]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v9 > 15)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v7 = cgc_openFile(v0 - 8919, 1);\n
    if (v7 < 0)\n
    {\n
        cgc_printf(v0 - 8776);\n
        v8 = -1;\n
        return v8;\n
    }\n
    cgc_fileReadPosition(v7, v9 * 160);\n
    if (cgc_readFile(v7, &v5, 30, 0, &v2, 1))\n
    {\n
        cgc_printf(v0 - 8747);\n
        v8 = -1;\n
        return v8;\n
    }\n
    else if (v2 == 30)\n
    {\n
        v6 = 0;\n
        if (cgc_readFile(v7, &v3, 128, 0, &v2, 1))\n
        {\n
            cgc_printf(v0 - 8747);\n
            v8 = -1;\n
            return v8;\n
        }\n
        else if (v2 != 128)\n
        {\n
            cgc_printf(v0 - 8720);\n
            v8 = -1;\n
            return v8;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            for (v1 = 0; v1 < 30; v1 += 1)\n
            {\n
                *(&v5 + v1) = ((*(&v5 + v1) >> 31 CONCAT *(&v5 + v1)) /m 26 >> 32) + 65;\n
            }\n
            for (v1 = 0; v1 < 128; v1 += 1)\n
            {\n
                *(&v3 + v1) = ((*(&v3 + v1) >> 31 CONCAT *(&v3 + v1)) /m 26 >> 32) + 65;\n
            }\n
            v2 = 30;\n
            cgc_sendResponse(&v2, 4);\n
            cgc_sendResponse(&v5, v2);\n
            v2 = 128;\n
            cgc_sendResponse(&v2, 4);\n
            cgc_sendResponse(&v3, v2);\n
            cgc_closeFile(v7);\n
            v8 = 0;\n
            return v8;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(v0 - 8720);\n
        v8 = -1;\n
        return v8;\n
    }\n
}\n
", "4238744:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_deallocate": null, "5242908:cgc_log10": null, "5242912:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}