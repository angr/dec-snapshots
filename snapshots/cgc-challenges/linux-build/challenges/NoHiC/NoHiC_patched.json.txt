{"4198400:_init": "extern struct_0 *g_405adc;\n
\n
int _init()\n
{\n
    if (g_405adc)\n
    {\n
        g_405adc();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 18931;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 18867;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_405ad8;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_405ad8)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_list_create_dup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_create_dup()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[3];  // [bp-0x18]\n
    unsigned int v3[3];  // [bp-0x14]\n
    unsigned int v4[3];  // [bp-0x10]\n
    unsigned int v5[3];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = 0;\n
    v0 = &v4[0];\n
    if (cgc_allocate(12, 0))\n
    {\n
        v5[0] = 0;\n
        return v5;\n
    }\n
    v3[0] = cgc_node_create();\n
    v2[0] = cgc_node_create();\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[1] = 0;\n
    v2[2] = v3;\n
    v4[0] = v3;\n
    v4[1] = v2;\n
    v4[2] = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4199082:sub_4012aa": null, "4199088:cgc_node_create": "int cgc_node_create(unsigned int v2)\n
{\n
    unsigned int v0[3];  // [bp-0x10]\n
    unsigned int v1[3];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0[0] = 0;\n
    if (cgc_allocate(12, 0, v0))\n
    {\n
        v1[0] = 0;\n
        return v1;\n
    }\n
    v0[0] = v2;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4199213:sub_40132d": null, "4199216:cgc_list_append": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_append(struct_2 *v1, unsigned int a0[3])\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    struct_2 *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    a0[1] = v1->field_4;\n
    a0[2] = v1->field_4->field_8;\n
    v1->field_4->field_8->field_4 = a0;\n
    v1->field_4->field_8 = &a0[0];\n
    v3 = v1;\n
    v3->field_8 = v3->field_8 + 1;\n
    return v0;\n
}\n
", "4199307:sub_40138b": null, "4199312:cgc_list_insert_sort": "typedef struct struct_3 {\n
    struct struct_2 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_5 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_sort(struct_3 *v4, struct_5 *a0, struct struct_4 **a1)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    struct_3 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (v4->field_0->field_4 == v4->field_4)\n
    {\n
        v4->field_0->field_4 = &a0->padding_0;\n
        v4->field_4->field_8 = a0;\n
        a0->field_4 = v4->field_4;\n
        a0->field_8 = v4->field_0;\n
    }\n
    else\n
    {\n
        v0 = v4->field_0->field_4;\n
        if (a1(a0) < 0)\n
        {\n
            v4->field_0->field_4->field_8 = a0;\n
            a0->field_4 = &v4->field_0->field_4->padding_0;\n
            a0->field_8 = v4->field_0;\n
            v4->field_0->field_4 = &a0->padding_0;\n
        }\n
        else\n
        {\n
            for (v2 = v4->field_0->field_4; v2 != v4->field_4; v2 = v2->field_4)\n
            {\n
                if (v2->field_4 == v4->field_4)\n
                {\n
LABEL_4014a4:\n
                    a0->field_4 = *((v2 + 4));\n
                    a0->field_8 = v2;\n
                    a0->field_4->field_8 = a0;\n
                    *((v2 + 4)) = a0;\n
                    break;\n
                }\n
                else\n
                {\n
                    v0 = v2->field_4;\n
                    if (a1(a0) < 0)\n
                        goto LABEL_4014a4;\n
                }\n
            }\n
        }\n
    }\n
    v5 = v4;\n
    v5->field_8 = v5->field_8 + 1;\n
    return v3;\n
}\n
", "4199680:cgc_get_list_head": "int cgc_get_list_head(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4199693:sub_40150d": null, "4199696:cgc_get_list_tail": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_get_list_tail(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4199710:sub_40151e": null, "4199712:cgc_get_first_node": "int cgc_get_first_node(struct struct_0 **v0)\n
{\n
    return *(v0)->field_4;\n
}\n
", "4199728:cgc_get_last_node": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int cgc_get_last_node(struct_1 *v0)\n
{\n
    return v0->field_4->field_8;\n
}\n
", "4199745:sub_401541": null, "4199760:cgc_rand": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_rand(unsigned int v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = &v1;\n
    return cgc_random(v2, a0);\n
}\n
", "4199823:sub_40158f": null, "4199824:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    if (cgc_transmit_all(1, v3))\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4199910:sub_4015e6": null, "4199920:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4200124:sub_4016bc": null, "4200128:cgc_recv_all": "int cgc_recv_all(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_read_all(0, v1);\n
}\n
", "4200187:sub_4016fb": null, "4200192:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
    char *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v5, &v4, 1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        v6[a0] = v4;\n
        a1 -= 1;\n
    }\n
    return v3;\n
}\n
", "4200345:sub_401799": null, "4200352:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v1;\n
}\n
", "4200422:sub_4017e6": null, "4200432:cgc_do_int_mean": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_mean(struct_2 *v7)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_first_node(v7);\n
    v4 = 0;\n
    while (true)\n
    {\n
        v0 = v5;\n
        if (v0 == cgc_get_list_tail(v7))\n
            break;\n
        v3 = *(v5);\n
        v4 = *(v3) + v4;\n
        v5 = *((v5 + 4));\n
    }\n
    v2 = 0;\n
    if (v7->field_8 > 0)\n
    {\n
        v9 = v4;\n
        v2 = (v9 >> 31 CONCAT v9) /m v7->field_8;\n
    }\n
    v10 = v6;\n
    return cgc_send(&v2, 4);\n
}\n
", "4200605:sub_40189d": null, "4200608:cgc_do_int_median": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_1 *field_4;\n
    struct struct_2 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_median(struct_3 *v12)\n
{\n
    struct_1 *v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2d]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int *v3;  // [bp-0x28]\n
    unsigned int *v4;  // [bp-0x24]\n
    unsigned int *v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x10]\n
    struct_1 *v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // eax\n
\n
    v11 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = cgc_get_first_node(v12);\n
    v9 = v12->field_8 >> 1;\n
    while (true)\n
    {\n
        v0 = v10;\n
        v1 = 0;\n
        if (v0 != cgc_get_list_tail(v12))\n
            v1 = v9;\n
        if (!(v1 & 1))\n
            break;\n
        v10 = v10->field_4;\n
        v9 -= 1;\n
    }\n
    v8 = 0;\n
    if ((v12->field_8 & 1))\n
    {\n
        v3 = *(v10);\n
        v8 = *(v3);\n
        return cgc_send(&v8, 4);\n
    }\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = *(v10);\n
    v7 = *(v5);\n
    v4 = *(*((v10 + 8)));\n
    v6 = *(v4);\n
    v14 = v7 + v6;\n
    v8 = (v14 >> 31 CONCAT v14) /m 2;\n
    return cgc_send(&v8, 4);\n
}\n
", "4200886:sub_4019b6": null, "4200896:cgc_do_int_mode": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_mode(struct struct_0 **v11)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    struct_0 *v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    struct_0 *v13;  // eax, Other Possible Types: unsigned int\n
\n
    v10 = v12;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = cgc_get_first_node(v11);\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 == cgc_get_list_tail(v11))\n
            break;\n
        v4 = &v5->field_0->field_0;\n
        if (v6 != *(v4))\n
        {\n
            v6 = *(v4);\n
            v7 = 1;\n
        }\n
        else\n
        {\n
            v7 += 1;\n
        }\n
        if (v7 > v9)\n
        {\n
            v9 = v7;\n
            v8 = 1;\n
        }\n
        else if (v7 == v9)\n
        {\n
            v8 += 1;\n
        }\n
        v5 = *((v5 + 4));\n
    }\n
    if (v9 <= 1)\n
    {\n
        v9 = 0;\n
        v13 = cgc_send(&v9, 4);\n
        return v13;\n
    }\n
    cgc_send(&v8, 4);\n
    v5 = cgc_get_first_node(v11);\n
    while (true)\n
    {\n
        v0 = v5;\n
        v13 = v0;\n
        if (v13 == cgc_get_list_tail(v11))\n
            break;\n
        v3 = *(v5);\n
        if (v6 == *(v3))\n
        {\n
            v7 += 1;\n
        }\n
        else\n
        {\n
            v6 = *(v3);\n
            v7 = 1;\n
        }\n
        if (v7 == v9)\n
            cgc_send(&v6, 4);\n
        v5 = *((v5 + 4));\n
    }\n
    return v0;\n
}\n
", "4201343:sub_401b7f": null, "4201344:cgc_do_int_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_range(struct struct_0 **v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v4;  // [bp-0x10]\n
    struct struct_0 **v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_first_node(v7);\n
    v4 = cgc_get_last_node(v7);\n
    v3 = 0;\n
    v2 = &*(v4)->field_0;\n
    v3 = *(v2);\n
    v1 = &*(v5)->field_0;\n
    v3 -= *(v1);\n
    v9 = v6;\n
    return cgc_send(&v3, 4);\n
}\n
", "4201472:cgc_do_int_sum": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_sum(struct struct_0 **v6)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_get_first_node(v6);\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 == cgc_get_list_tail(v6))\n
            break;\n
        v2 = *(v4);\n
        v3 = *(v2) + v3;\n
        v4 = *((v4 + 4));\n
    }\n
    v8 = v5;\n
    return cgc_send(&v3, 4);\n
}\n
", "4201612:sub_401c8c": null, "4201616:cgc_do_int_product": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_product(void* v6)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_get_first_node(v6);\n
    v3 = 1;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 == cgc_get_list_tail(v6))\n
            break;\n
        v2 = *(v4);\n
        v3 *= *(v2);\n
        v4 = *((v4 + 4));\n
    }\n
    v8 = v5;\n
    return cgc_send(&v3, 4);\n
}\n
", "4201757:sub_401d1d": null, "4201760:cgc_do_int_min": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_min(struct struct_0 **v6)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_get_first_node(v6);\n
    v3 = 2147483647;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 == cgc_get_list_tail(v6))\n
            break;\n
        v2 = *(v4);\n
        if (*(v2) < v3)\n
            v3 = *(v2);\n
        v4 = *((v4 + 4));\n
    }\n
    v8 = v5;\n
    return cgc_send(&v3, 4);\n
}\n
", "4201911:sub_401db7": null, "4201920:cgc_do_int_max": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_max(struct struct_0 **v6)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_get_first_node(v6);\n
    v3 = 2147483650;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 == cgc_get_list_tail(v6))\n
            break;\n
        v2 = *(v4);\n
        if (v3 < *(v2))\n
            v3 = *(v2);\n
        v4 = *((v4 + 4));\n
    }\n
    v8 = v5;\n
    return cgc_send(&v3, 4);\n
}\n
", "4202071:sub_401e57": null, "4202080:cgc_do_int_sort": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_sort(struct struct_0 **v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_get_first_node(v5);\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(v5))\n
            break;\n
        v2 = *(v3);\n
        cgc_send(v2, 4);\n
        v3 = *((v3 + 4));\n
    }\n
    v7 = v4;\n
    return v0;\n
}\n
", "4202202:sub_401eda": null, "4202208:cgc_do_int_rsort": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_rsort(unsigned int *v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_get_last_node(v5);\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_head(v5))\n
            break;\n
        v2 = *(v3);\n
        cgc_send(v2, 4);\n
        v3 = *((v3 + 8));\n
    }\n
    v7 = v4;\n
    return v0;\n
}\n
", "4202330:sub_401f5a": null, "4202336:cgc_do_int_odds": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_odds(struct struct_0 **v8)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    struct_0 *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_get_first_node(v8);\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 == cgc_get_list_tail(v8))\n
            break;\n
        v4 = *(v6);\n
        if ((*(v4) >> 31 CONCAT *(v4)) /m 2 >> 32)\n
            v5 += 1;\n
        v6 = *((v6 + 4));\n
    }\n
    v10 = cgc_send(&v5, 4);\n
    if (v5 <= 0)\n
        return v10;\n
    v6 = cgc_get_first_node(v8);\n
    while (true)\n
    {\n
        v0 = v6;\n
        v10 = v0;\n
        if (v10 == cgc_get_list_tail(v8))\n
            break;\n
        v3 = &v6->field_0->field_0;\n
        if ((*(v3) >> 31 CONCAT *(v3)) /m 2 >> 32)\n
            cgc_send(v3, 4);\n
        v6 = v6->field_4;\n
    }\n
    return v0;\n
}\n
", "4202627:sub_402083": null, "4202640:cgc_do_int_evens": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_int_evens(struct struct_0 **v8)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    struct_0 *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_get_first_node(v8);\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 == cgc_get_list_tail(v8))\n
            break;\n
        v4 = *(v6);\n
        if (!(*(v4) >> 31 CONCAT *(v4)) /m 2 >> 32)\n
            v5 += 1;\n
        v6 = *((v6 + 4));\n
    }\n
    v10 = cgc_send(&v5, 4);\n
    if (v5 <= 0)\n
        return v10;\n
    v6 = cgc_get_first_node(v8);\n
    while (true)\n
    {\n
        v0 = v6;\n
        v10 = v0;\n
        if (v10 == cgc_get_list_tail(v8))\n
            break;\n
        v3 = &v6->field_0->field_0;\n
        if (!(*(v3) >> 31 CONCAT *(v3)) /m 2 >> 32)\n
            cgc_send(v3, 4);\n
        v6 = v6->field_4;\n
    }\n
    return v0;\n
}\n
", "4202931:sub_4021b3": null, "4202944:cgc_do_dbl_mean": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_mean(struct_0 *v11)\n
{\n
    struct_1 *v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    void* v3;  // [bp-0x28]\n
    void* v4;  // [bp-0x24], Other Possible Types: unsigned long\n
    void* v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v8;  // [bp-0x10]\n
    struct_1 *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_get_first_node(v11);\n
    v8 = 0;\n
    v7 = 0;\n
    while (true)\n
    {\n
        v0 = v9;\n
        if (v0 == cgc_get_list_tail(v11))\n
            break;\n
        v6 = *(v9);\n
        [D] PutI(72:F64x8)[t20,0] = t23\n
        [D] PutI(136:I8x8)[t20,0] = 0x01\n
        v15 = ftop<4> - 1 - 1;\n
        [D] PutI(72:F64x8)[t32,0] = t35\n
        [D] PutI(136:I8x8)[t32,0] = 0x01\n
        [D] PutI(72:F64x8)[t42,1] = t43\n
        [D] PutI(136:I8x8)[t42,1] = 0x01\n
        [D] PutI(136:I8x8)[t42,0] = 0x00\n
        v16 = v15 + 1;\n
        v7 = ([D] GetI(136:I8x8)[t67,0] ? [D] GetI(72:F64x8)[t67,0] : nan);\n
        [D] PutI(136:I8x8)[t67,0] = 0x00\n
        v17 = v16 + 1;\n
        v9 = *((v9 + 4));\n
    }\n
    v5 = 0;\n
    v4 = 0;\n
    if (v11->field_8 <= 0)\n
        return cgc_send(&v4, 8);\n
    if ([D] GetI(136:I8x8)[t18,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v2 = v11->field_8;\n
    v3 = 0;\n
    if ([D] GetI(136:I8x8)[t18,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t1,1] = t2\n
    [D] PutI(136:I8x8)[t1,1] = 0x01\n
    [D] PutI(136:I8x8)[t1,0] = 0x00\n
    v4 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
    [D] PutI(136:I8x8)[t26,0] = 0x00\n
    return cgc_send(&v4, 8);\n
}\n
", "4203148:sub_40228c": null, "4203152:cgc_do_dbl_median": "typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_median(struct_2 *v15)\n
{\n
    struct_0 *v0;  // [bp-0x44]\n
    char v1;  // [bp-0x3d]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    void* v6;  // [bp-0x2c], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x28]\n
    void* v8;  // [bp-0x24], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x20]\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x10]\n
    struct_0 *v13;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
\n
    v14 = v16;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = cgc_get_first_node(v15);\n
    v12 = v15->field_8 >> 1;\n
    while (true)\n
    {\n
        v0 = v13;\n
        v1 = 0;\n
        if (v0 != cgc_get_list_tail(v15))\n
            v1 = v12;\n
        if (!(v1 & 1))\n
            break;\n
        v13 = v13->field_4;\n
        v12 -= 1;\n
    }\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v15->field_8 & 1))\n
    {\n
        v3 = *(v13);\n
        [D] PutI(72:F64x8)[t16,0] = t19\n
        [D] PutI(136:I8x8)[t16,0] = 0x01\n
        v10 = ([D] GetI(136:I8x8)[t31,0] ? [D] GetI(72:F64x8)[t31,0] : nan);\n
        [D] PutI(136:I8x8)[t31,0] = 0x00\n
        return cgc_send(&v10, 8);\n
    }\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = *(v13);\n
    [D] PutI(72:F64x8)[t43,0] = t46\n
    [D] PutI(136:I8x8)[t43,0] = 0x01\n
    v8 = ([D] GetI(136:I8x8)[t58,0] ? [D] GetI(72:F64x8)[t58,0] : nan);\n
    [D] PutI(136:I8x8)[t58,0] = 0x00\n
    v4 = *(*((v13 + 8)));\n
    [D] PutI(72:F64x8)[t78,0] = t81\n
    [D] PutI(136:I8x8)[t78,0] = 0x01\n
    v6 = ([D] GetI(136:I8x8)[t93,0] ? [D] GetI(72:F64x8)[t93,0] : nan);\n
    [D] PutI(136:I8x8)[t93,0] = 0x00\n
    [D] PutI(72:F64x8)[t102,0] = t105\n
    [D] PutI(136:I8x8)[t102,0] = 0x01\n
    [D] PutI(72:F64x8)[t114,0] = t117\n
    [D] PutI(136:I8x8)[t114,0] = 0x01\n
    [D] PutI(72:F64x8)[t124,1] = t125\n
    [D] PutI(136:I8x8)[t124,1] = 0x01\n
    [D] PutI(136:I8x8)[t124,0] = 0x00\n
    [D] PutI(72:F64x8)[t146,0] = t149\n
    [D] PutI(136:I8x8)[t146,0] = 0x01\n
    [D] PutI(72:F64x8)[t157,1] = t158\n
    [D] PutI(136:I8x8)[t157,1] = 0x01\n
    [D] PutI(136:I8x8)[t157,0] = 0x00\n
    v10 = ([D] GetI(136:I8x8)[t182,0] ? [D] GetI(72:F64x8)[t182,0] : nan);\n
    [D] PutI(136:I8x8)[t182,0] = 0x00\n
    return cgc_send(&v10, 8);\n
}\n
", "4203456:cgc_do_dbl_mode": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_mode(struct struct_0 **v12)\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    struct_0 *v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // cc_dep1\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct_0 *v22;  // eax, Other Possible Types: unsigned int\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // cc_dep1\n
    unsigned int v28;  // ftop\n
\n
    v11 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v9 = 0;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = cgc_get_first_node(v12);\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 == cgc_get_list_tail(v12))\n
            break;\n
        v4 = *(v5);\n
        v15 = v21 - 1;\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            v16 = v15 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v16 = v15 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v17 = v16 - 1;\n
        [D] PutI(72:F64x8)[t7,0] = t10\n
        [D] PutI(136:I8x8)[t7,0] = 0x01\n
        [D] PutI(72:F64x8)[t20,0] = t24\n
        [D] PutI(136:I8x8)[t20,0] = 0x01\n
        [D] PutI(72:F64x8)[t20,1] = t17\n
        [D] PutI(136:I8x8)[t20,1] = 0x01\n
        v18 = CmpF(([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan), ([D] GetI(136:I8x8)[t40,1] ? [D] GetI(72:F64x8)[t40,1] : nan)) & 69;\n
        [D] PutI(136:I8x8)[t40,0] = 0x00\n
        [D] PutI(72:F64x8)[t54,0] = t55\n
        [D] PutI(136:I8x8)[t54,0] = 0x01\n
        [D] PutI(136:I8x8)[t54,0] = 0x00\n
        v21 = v17 + 1 + 1;\n
        if ((((CmpF(([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan), ([D] GetI(136:I8x8)[t40,1] ? [D] GetI(72:F64x8)[t40,1] : nan)) & 69) >> 6) & 1) == 1 && !([D] x86g_calculate_condition(0xa<32>, 0x0<32>, cc_dep1<4>, 0x0<32>, 0x0<32>)))\n
        {\n
            v8 += 1;\n
            goto LABEL_40246f;\n
        }\n
        v20 = v21 - 1;\n
        [D] PutI(72:F64x8)[t7,0] = t10\n
        [D] PutI(136:I8x8)[t7,0] = 0x01\n
        v6 = ([D] GetI(136:I8x8)[t22,0] ? [D] GetI(72:F64x8)[t22,0] : nan);\n
        [D] PutI(136:I8x8)[t22,0] = 0x00\n
        v21 = v20 + 1;\n
        v8 = 1;\n
LABEL_40246f:\n
        if (v8 > v10)\n
        {\n
            v10 = v8;\n
            v9 = 1;\n
        }\n
        else if (v8 == v10)\n
        {\n
            v9 += 1;\n
        }\n
        v5 = *((v5 + 4));\n
    }\n
    if (v10 <= 1)\n
    {\n
        v10 = 0;\n
        v22 = cgc_send(&v10, 4);\n
        return v22;\n
    }\n
    cgc_send(&v9, 4);\n
    v5 = cgc_get_first_node(v12);\n
    while (true)\n
    {\n
        v0 = v5;\n
        v22 = v0;\n
        if (v22 == cgc_get_list_tail(v12))\n
            break;\n
        v3 = v5->field_0;\n
        v23 = v21 - 1;\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            v24 = v23 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v24 = v23 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v25 = v24 - 1;\n
        [D] PutI(72:F64x8)[t7,0] = t10\n
        [D] PutI(136:I8x8)[t7,0] = 0x01\n
        [D] PutI(72:F64x8)[t20,0] = t24\n
        [D] PutI(136:I8x8)[t20,0] = 0x01\n
        [D] PutI(72:F64x8)[t20,1] = t17\n
        [D] PutI(136:I8x8)[t20,1] = 0x01\n
        v26 = CmpF(([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan), ([D] GetI(136:I8x8)[t40,1] ? [D] GetI(72:F64x8)[t40,1] : nan)) & 69;\n
        [D] PutI(136:I8x8)[t40,0] = 0x00\n
        [D] PutI(72:F64x8)[t54,0] = t55\n
        [D] PutI(136:I8x8)[t54,0] = 0x01\n
        [D] PutI(136:I8x8)[t54,0] = 0x00\n
        v21 = v25 + 1 + 1;\n
        if ((((CmpF(([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan), ([D] GetI(136:I8x8)[t40,1] ? [D] GetI(72:F64x8)[t40,1] : nan)) & 69) >> 6) & 1) == 1 && !([D] x86g_calculate_condition(0xa<32>, 0x0<32>, cc_dep1<4>, 0x0<32>, 0x0<32>)))\n
        {\n
            v8 += 1;\n
            goto LABEL_40256d;\n
        }\n
        v28 = v21 - 1;\n
        [D] PutI(72:F64x8)[t7,0] = t10\n
        [D] PutI(136:I8x8)[t7,0] = 0x01\n
        v6 = ([D] GetI(136:I8x8)[t22,0] ? [D] GetI(72:F64x8)[t22,0] : nan);\n
        [D] PutI(136:I8x8)[t22,0] = 0x00\n
        v21 = v28 + 1;\n
        v8 = 1;\n
LABEL_40256d:\n
        if (v8 == v10)\n
            cgc_send(&v6, 8);\n
        v5 = *((v5 + 4));\n
    }\n
    return v0;\n
}\n
", "4203944:sub_4025a8": null, "4203952:cgc_do_dbl_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_range(void* v8)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v4;  // [bp-0x18]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int *v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = cgc_get_first_node(v8);\n
    v5 = cgc_get_last_node(v8);\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = *(v5);\n
    [D] PutI(72:F64x8)[t41,0] = t44\n
    [D] PutI(136:I8x8)[t41,0] = 0x01\n
    v3 = ([D] GetI(136:I8x8)[t56,0] ? [D] GetI(72:F64x8)[t56,0] : nan);\n
    [D] PutI(136:I8x8)[t56,0] = 0x00\n
    v1 = *(v6);\n
    [D] PutI(72:F64x8)[t73,0] = t76\n
    [D] PutI(136:I8x8)[t73,0] = 0x01\n
    [D] PutI(72:F64x8)[t85,0] = t88\n
    [D] PutI(136:I8x8)[t85,0] = 0x01\n
    [D] PutI(72:F64x8)[t95,1] = t96\n
    [D] PutI(136:I8x8)[t95,1] = 0x01\n
    [D] PutI(136:I8x8)[t95,0] = 0x00\n
    v3 = ([D] GetI(136:I8x8)[t120,0] ? [D] GetI(72:F64x8)[t120,0] : nan);\n
    [D] PutI(136:I8x8)[t120,0] = 0x00\n
    v10 = v7;\n
    return cgc_send(&v3, 8);\n
}\n
", "4204089:sub_402639": null, "4204096:cgc_do_dbl_sum": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_sum(struct struct_0 **v7)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v4;  // [bp-0x10]\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_first_node(v7);\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v5;\n
        if (v0 == cgc_get_list_tail(v7))\n
            break;\n
        v2 = *(v5);\n
        [D] PutI(72:F64x8)[t20,0] = t23\n
        [D] PutI(136:I8x8)[t20,0] = 0x01\n
        v11 = ftop<4> - 1 - 1;\n
        [D] PutI(72:F64x8)[t32,0] = t35\n
        [D] PutI(136:I8x8)[t32,0] = 0x01\n
        [D] PutI(72:F64x8)[t42,1] = t43\n
        [D] PutI(136:I8x8)[t42,1] = 0x01\n
        [D] PutI(136:I8x8)[t42,0] = 0x00\n
        v12 = v11 + 1;\n
        v3 = ([D] GetI(136:I8x8)[t67,0] ? [D] GetI(72:F64x8)[t67,0] : nan);\n
        [D] PutI(136:I8x8)[t67,0] = 0x00\n
        v13 = v12 + 1;\n
        v5 = *((v5 + 4));\n
    }\n
    v14 = v6;\n
    return cgc_send(&v3, 8);\n
}\n
", "4204246:sub_4026d6": null, "4204256:cgc_do_dbl_product": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_product(struct struct_0 **v7)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x10]\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_first_node(v7);\n
    v4 = 0x3ff00000;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v5;\n
        if (v0 == cgc_get_list_tail(v7))\n
            break;\n
        v2 = *(v5);\n
        [D] PutI(72:F64x8)[t20,0] = t23\n
        [D] PutI(136:I8x8)[t20,0] = 0x01\n
        v11 = ftop<4> - 1 - 1;\n
        [D] PutI(72:F64x8)[t32,0] = t35\n
        [D] PutI(136:I8x8)[t32,0] = 0x01\n
        [D] PutI(72:F64x8)[t42,1] = t43\n
        [D] PutI(136:I8x8)[t42,1] = 0x01\n
        [D] PutI(136:I8x8)[t42,0] = 0x00\n
        v12 = v11 + 1;\n
        v3 = ([D] GetI(136:I8x8)[t67,0] ? [D] GetI(72:F64x8)[t67,0] : nan);\n
        [D] PutI(136:I8x8)[t67,0] = 0x00\n
        v13 = v12 + 1;\n
        v5 = *((v5 + 4));\n
    }\n
    v14 = v6;\n
    return cgc_send(&v3, 8);\n
}\n
", "4204406:sub_402776": null, "4204416:cgc_do_dbl_min": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_min(struct struct_0 **v7)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x14], Other Possible Types: char\n
    unsigned int v4;  // [bp-0x10]\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v10;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_first_node(v7);\n
    v4 = 2146321105;\n
    strncpy(&v3, \"v;w0\", 4);\n
    while (true)\n
    {\n
        v0 = v5;\n
        if (v0 == cgc_get_list_tail(v7))\n
            break;\n
        v2 = *(v5);\n
        v10 = v13 - 1;\n
        [D] PutI(72:F64x8)[t16,0] = t19\n
        [D] PutI(136:I8x8)[t16,0] = 0x01\n
        [D] PutI(72:F64x8)[t28,0] = t31\n
        [D] PutI(136:I8x8)[t28,0] = 0x01\n
        [D] PutI(136:I8x8)[t43,0] = 0x00\n
        v12 = v10 - 1 + 1;\n
        [D] PutI(72:F64x8)[t57,0] = t58\n
        [D] PutI(136:I8x8)[t57,0] = 0x01\n
        [D] PutI(136:I8x8)[t57,0] = 0x00\n
        v13 = v12 + 1;\n
        if (((CmpF(([D] GetI(136:I8x8)[t43,0] ? [D] GetI(72:F64x8)[t43,0] : nan), ([D] GetI(136:I8x8)[t43,1] ? [D] GetI(72:F64x8)[t43,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t43,0] ? [D] GetI(72:F64x8)[t43,0] : nan), ([D] GetI(136:I8x8)[t43,1] ? [D] GetI(72:F64x8)[t43,1] : nan)) & 69) >> 6)) & 1) != 1)\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t6,0] = t9\n
            [D] PutI(136:I8x8)[t6,0] = 0x01\n
            v3 = ([D] GetI(136:I8x8)[t21,0] ? [D] GetI(72:F64x8)[t21,0] : nan);\n
            [D] PutI(136:I8x8)[t21,0] = 0x00\n
            v13 = v14 + 1;\n
        }\n
        v5 = *((v5 + 4));\n
    }\n
    v15 = v6;\n
    return cgc_send(&v3, 8);\n
}\n
", "4204584:sub_402828": null, "4204592:cgc_do_dbl_max": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_max(struct struct_0 **v7)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14], Other Possible Types: unsigned long\n
    unsigned int v4;  // [bp-0x10]\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = cgc_get_first_node(v7);\n
    v4 = -1162543;\n
    strncpy(&v3, \"v;w0\", 4);\n
    while (true)\n
    {\n
        v0 = v5;\n
        if (v0 == cgc_get_list_tail(v7))\n
            break;\n
        v2 = *(v5);\n
        v10 = v15 - 1;\n
        if ([D] GetI(136:I8x8)[t13,0])\n
        {\n
            v11 = v10 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v11 = v10 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v12 = v11 - 1;\n
        [D] PutI(72:F64x8)[t5,0] = t8\n
        [D] PutI(136:I8x8)[t5,0] = 0x01\n
        [D] PutI(136:I8x8)[t20,0] = 0x00\n
        [D] PutI(72:F64x8)[t34,0] = t35\n
        [D] PutI(136:I8x8)[t34,0] = 0x01\n
        [D] PutI(136:I8x8)[t34,0] = 0x00\n
        v15 = v12 + 1 + 1;\n
        if (((CmpF(([D] GetI(136:I8x8)[t20,0] ? [D] GetI(72:F64x8)[t20,0] : nan), ([D] GetI(136:I8x8)[t20,1] ? [D] GetI(72:F64x8)[t20,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t20,0] ? [D] GetI(72:F64x8)[t20,0] : nan), ([D] GetI(136:I8x8)[t20,1] ? [D] GetI(72:F64x8)[t20,1] : nan)) & 69) >> 6)) & 1) != 1)\n
        {\n
            v14 = v15 - 1;\n
            [D] PutI(72:F64x8)[t6,0] = t9\n
            [D] PutI(136:I8x8)[t6,0] = 0x01\n
            v3 = ([D] GetI(136:I8x8)[t21,0] ? [D] GetI(72:F64x8)[t21,0] : nan);\n
            [D] PutI(136:I8x8)[t21,0] = 0x00\n
            v15 = v14 + 1;\n
        }\n
        v5 = v5->field_4;\n
    }\n
    v16 = v6;\n
    return cgc_send(&v3, 8);\n
}\n
", "4204760:sub_4028d8": null, "4204768:cgc_do_dbl_sort": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_sort(struct struct_0 **v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_get_first_node(v5);\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_tail(v5))\n
            break;\n
        v2 = *(v3);\n
        cgc_send(v2, 8);\n
        v3 = *((v3 + 4));\n
    }\n
    v7 = v4;\n
    return v0;\n
}\n
", "4204890:sub_40295a": null, "4204896:cgc_do_dbl_rsort": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_rsort(void* v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_get_last_node(v5);\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 == cgc_get_list_head(v5))\n
            break;\n
        v2 = *(v3);\n
        cgc_send(v2, 8);\n
        v3 = *((v3 + 8));\n
    }\n
    v7 = v4;\n
    return v0;\n
}\n
", "4205018:sub_4029da": null, "4205024:cgc_do_dbl_odds": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_odds(void* v15)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned short v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    unsigned short v5;  // [bp-0x28]\n
    unsigned short v6;  // [bp-0x26]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x18]\n
    void* v11;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v13;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned int v19;  // fpround\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // fpround\n
    unsigned int v22;  // ftop\n
    struct_0 *v23;  // eax, Other Possible Types: unsigned int\n
\n
    v14 = v16;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = cgc_get_first_node(v15);\n
    v12 = 0;\n
    v11 = 0;\n
    while (true)\n
    {\n
        v1 = v13;\n
        if (v1 == cgc_get_list_tail(v15))\n
            break;\n
        v10 = *(v13);\n
        [D] PutI(72:F64x8)[t37,0] = t40\n
        [D] PutI(136:I8x8)[t37,0] = 0x01\n
        v6 = [D] x86g_create_fpucw(fpround<4>);\n
        v5 = v6 | 0xc00;\n
        v7 = ([D] GetI(136:I8x8)[t73,0] ? [D] GetI(72:F64x8)[t73,0] : nan);\n
        [D] PutI(136:I8x8)[t73,0] = 0x00\n
        v22 = ftop<4> - 1 + 1;\n
        v19 = [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-38, size=2, endness=Iend_LE)));\n
        v11 = v7;\n
        if ((v11 >> 31 CONCAT v11) /m 2 >> 32)\n
            v12 += 1;\n
        v13 = *((v13 + 4));\n
    }\n
    v23 = cgc_send(&v12, 4);\n
    if (v12 <= 0)\n
        return v23;\n
    v13 = cgc_get_first_node(v15);\n
    while (true)\n
    {\n
        v0 = v13;\n
        v23 = v0;\n
        if (v23 == cgc_get_list_tail(v15))\n
            break;\n
        v9 = *(v13);\n
        v20 = v22 - 1;\n
        [D] PutI(72:F64x8)[t37,0] = t40\n
        [D] PutI(136:I8x8)[t37,0] = 0x01\n
        v4 = [D] x86g_create_fpucw(fpround<4>);\n
        v3 = v4 | 0xc00;\n
        v8 = ([D] GetI(136:I8x8)[t73,0] ? [D] GetI(72:F64x8)[t73,0] : nan);\n
        [D] PutI(136:I8x8)[t73,0] = 0x00\n
        v22 = v20 + 1;\n
        v21 = [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-42, size=2, endness=Iend_LE)));\n
        v11 = v8;\n
        if ((v11 >> 31 CONCAT v11) /m 2 >> 32)\n
            cgc_send(v9, 8);\n
        v13 = v13->field_4;\n
    }\n
    return v0;\n
}\n
", "4205390:sub_402b4e": null, "4205392:cgc_do_dbl_evens": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_dbl_evens(struct struct_0 **v15)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned short v3;  // [bp-0x2c]\n
    unsigned short v4;  // [bp-0x2a]\n
    unsigned short v5;  // [bp-0x28]\n
    unsigned short v6;  // [bp-0x26]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x18]\n
    void* v11;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v13;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned int v19;  // fpround\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // fpround\n
    unsigned int v22;  // ftop\n
    struct_0 *v23;  // eax, Other Possible Types: unsigned int\n
\n
    v14 = v16;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v13 = cgc_get_first_node(v15);\n
    v12 = 0;\n
    v11 = 0;\n
    while (true)\n
    {\n
        v1 = v13;\n
        if (v1 == cgc_get_list_tail(v15))\n
            break;\n
        v10 = *(v13);\n
        [D] PutI(72:F64x8)[t37,0] = t40\n
        [D] PutI(136:I8x8)[t37,0] = 0x01\n
        v6 = [D] x86g_create_fpucw(fpround<4>);\n
        v5 = v6 | 0xc00;\n
        v7 = ([D] GetI(136:I8x8)[t73,0] ? [D] GetI(72:F64x8)[t73,0] : nan);\n
        [D] PutI(136:I8x8)[t73,0] = 0x00\n
        v22 = ftop<4> - 1 + 1;\n
        v19 = [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-38, size=2, endness=Iend_LE)));\n
        v11 = v7;\n
        if (!(v11 >> 31 CONCAT v11) /m 2 >> 32)\n
            v12 += 1;\n
        v13 = *((v13 + 4));\n
    }\n
    v23 = cgc_send(&v12, 4);\n
    if (v12 <= 0)\n
        return v23;\n
    v13 = cgc_get_first_node(v15);\n
    while (true)\n
    {\n
        v0 = v13;\n
        v23 = v0;\n
        if (v23 == cgc_get_list_tail(v15))\n
            break;\n
        v9 = *(v13);\n
        v20 = v22 - 1;\n
        [D] PutI(72:F64x8)[t37,0] = t40\n
        [D] PutI(136:I8x8)[t37,0] = 0x01\n
        v4 = [D] x86g_create_fpucw(fpround<4>);\n
        v3 = v4 | 0xc00;\n
        v8 = ([D] GetI(136:I8x8)[t73,0] ? [D] GetI(72:F64x8)[t73,0] : nan);\n
        [D] PutI(136:I8x8)[t73,0] = 0x00\n
        v22 = v20 + 1;\n
        v21 = [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-42, size=2, endness=Iend_LE)));\n
        v11 = v8;\n
        if (!(v11 >> 31 CONCAT v11) /m 2 >> 32)\n
            cgc_send(v9, 8);\n
        v13 = v13->field_4;\n
    }\n
    return v0;\n
}\n
", "4205758:sub_402cbe": null, "4205760:cgc_get_list_type": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_list_type()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 0;\n
    if (cgc_recv_all(&v1, 1) != 1)\n
        cgc__terminate();\n
    if (v1 >= 2)\n
    {\n
        v2 = -30;\n
        return v2;\n
    }\n
    v0->field_38 = v1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4205889:sub_402d41": null, "4205904:cgc_get_num_count": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_num_count(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_recv_all(v2, 4) != 4)\n
        return cgc__terminate();\n
    return 4;\n
}\n
", "4205984:cgc_get_op_code": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_op_code(unsigned int *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (cgc_recv_all(&v1, 1) != 1)\n
        cgc__terminate();\n
    if (v1 >= 12)\n
    {\n
        v2 = -80;\n
        return v2;\n
    }\n
    *(v4) = v1;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4206112:cgc_read_double_into_node": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_double_into_node()\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = 0;\n
    if (cgc_allocate(8, 0, &v0, &_GLOBAL_OFFSET_TABLE_, 0, v3))\n
        cgc__terminate();\n
    if (cgc_recv_all(v0, 8) != 8)\n
    {\n
        cgc__terminate();\n
        return cgc_node_create(v0);\n
    }\n
    return cgc_node_create(v0);\n
}\n
", "4206269:sub_402ebd": null, "4206272:cgc_read_int_into_node": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_int_into_node()\n
{\n
    void* v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
\n
    v1 = v3;\n
    v0 = 0;\n
    if (cgc_allocate(4, 0, &v0, &_GLOBAL_OFFSET_TABLE_, 0, v3))\n
        cgc__terminate();\n
    if (cgc_recv_all(v0, 4) != 4)\n
    {\n
        cgc__terminate();\n
        return cgc_node_create(v0);\n
    }\n
    return cgc_node_create(v0);\n
}\n
", "4206429:sub_402f5d": null, "4206432:cgc_dup_double_node": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dup_double_node(unsigned int *v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned long long *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v0 = &v3;\n
    if (cgc_allocate(8, 0))\n
        cgc__terminate();\n
    v2 = *(v5);\n
    [D] PutI(72:F64x8)[t24,0] = t27\n
    [D] PutI(136:I8x8)[t24,0] = 0x01\n
    *(v3) = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
    [D] PutI(136:I8x8)[t40,0] = 0x00\n
    return cgc_node_create(v3);\n
}\n
", "4206558:sub_402fde": null, "4206560:cgc_dup_int_node": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dup_int_node(struct struct_0 **v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v0 = &v3;\n
    if (cgc_allocate(4, 0))\n
        cgc__terminate();\n
    v0 = &v3;\n
    if (cgc_allocate(4, 0))\n
        cgc__terminate();\n
    v2 = &*(v5)->field_0;\n
    *(v3) = *(v2);\n
    return cgc_node_create(v3);\n
}\n
", "4206745:sub_403099": null, "4206752:cgc_int32_node_compare": "int cgc_int32_node_compare(struct struct_0 **v3, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = *(v3)->field_0;\n
    v0 = *(a0)->field_0;\n
    if (v1 < v0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (v1 <= v0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4206847:sub_4030ff": null, "4206848:cgc_dbl64_node_compare": "int cgc_dbl64_node_compare(unsigned int v3, unsigned int a0)\n
{\n
    unsigned long v0;  // [bp-0x1c]\n
    unsigned long v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    v1 = ([D] GetI(136:I8x8)[t45,0] ? [D] GetI(72:F64x8)[t45,0] : nan);\n
    [D] PutI(136:I8x8)[t45,0] = 0x00\n
    [D] PutI(72:F64x8)[t56,0] = t59\n
    [D] PutI(136:I8x8)[t56,0] = 0x01\n
    v0 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    [D] PutI(72:F64x8)[t80,0] = t83\n
    [D] PutI(136:I8x8)[t80,0] = 0x01\n
    [D] PutI(72:F64x8)[t92,0] = t95\n
    [D] PutI(136:I8x8)[t92,0] = 0x01\n
    [D] PutI(136:I8x8)[t107,0] = 0x00\n
    [D] PutI(72:F64x8)[t121,0] = t122\n
    [D] PutI(136:I8x8)[t121,0] = 0x01\n
    [D] PutI(136:I8x8)[t121,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t107,0] ? [D] GetI(72:F64x8)[t107,0] : nan), ([D] GetI(136:I8x8)[t107,1] ? [D] GetI(72:F64x8)[t107,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t107,0] ? [D] GetI(72:F64x8)[t107,0] : nan), ([D] GetI(136:I8x8)[t107,1] ? [D] GetI(72:F64x8)[t107,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t5,0] = t9\n
    [D] PutI(136:I8x8)[t5,0] = 0x01\n
    [D] PutI(72:F64x8)[t5,1] = t2\n
    [D] PutI(136:I8x8)[t5,1] = 0x01\n
    [D] PutI(136:I8x8)[t25,0] = 0x00\n
    [D] PutI(72:F64x8)[t39,0] = t40\n
    [D] PutI(136:I8x8)[t39,0] = 0x01\n
    [D] PutI(136:I8x8)[t39,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) == 1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4206963:sub_403173": null, "4206976:cgc_load_list": "typedef struct struct_1 {\n
    char padding_0[48];\n
    void* field_30;\n
    unsigned int field_34;\n
    unsigned int field_38;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
    void* field_34;\n
    unsigned int field_38;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
\n
int cgc_load_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_1 *v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int, unsigned int [3]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int *\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    struct_0 *v10;  // ebx\n
    struct_0 *v11;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_[0];\n
    v8 = cgc_list_create_dup();\n
    v1->field_30 = v8;\n
    if (!v8)\n
    {\n
        v4 = 5;\n
        return v4;\n
    }\n
    v9 = cgc_list_create_dup();\n
    v1->field_34 = v9;\n
    if (!v9)\n
    {\n
        v4 = 5;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v6 > 0)\n
        {\n
            v3 = 0;\n
            v2 = 0;\n
            v0 = v1->field_38;\n
            if (!v0)\n
            {\n
                v3 = cgc_read_int_into_node();\n
                if (!v3)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                v2[0] = cgc_dup_int_node(v3);\n
                if (!v2)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                v10 = v1;\n
                cgc_list_insert_sort(v10->field_34, v3, &v10[180].padding_0[24]);\n
            }\n
            else\n
            {\n
                if (v0 != 1)\n
                {\n
                    v4 = -1;\n
                    return v4;\n
                }\n
                v3 = cgc_read_double_into_node();\n
                if (!v3)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                v2 = cgc_dup_double_node(v3);\n
                if (!v2)\n
                {\n
                    v4 = 5;\n
                    return v4;\n
                }\n
                v11 = v1;\n
                cgc_list_insert_sort(v11->field_34, v3, &v11[178].field_30);\n
            }\n
            cgc_list_append(v1->field_30, v2);\n
            v6 -= 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4207467:sub_40336b": null, "4207472:cgc_do_create": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int num_list;\n
\n
int cgc_do_create()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (num_list)\n
    {\n
        v3 = -9;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v2 = cgc_get_list_type();\n
    if (v2 < 0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v1 = 0;\n
    cgc_get_num_count(&v1);\n
    if (!v1)\n
    {\n
        v3 = -70;\n
        return v3;\n
    }\n
    else if (v1 <= 1000)\n
    {\n
        v3 = cgc_load_list(v1);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -70;\n
        return v3;\n
    }\n
}\n
", "4207651:sub_403423": null, "4207664:cgc_do_eval": "typedef struct struct_0 {\n
    char padding_0[48];\n
    void* field_30;\n
    char padding_34[4];\n
    unsigned int field_38;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[15];\n
extern unsigned int num_list;\n
\n
int cgc_do_eval()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!num_list)\n
    {\n
        v6 = -10;\n
        return v6;\n
    }\n
    v5 = 0;\n
    v4 = 0;\n
    v5 = cgc_get_op_code(&v4);\n
    if (v5 < 0)\n
    {\n
        v6 = v5;\n
        return v6;\n
    }\n
    v2 = v3->field_38;\n
    if (!v2)\n
    {\n
        v1 = v4;\n
        if (v1 > 11)\n
        {\n
            v6 = -101;\n
            return v6;\n
        }\n
        cgc_do_int_mean(v3->field_30);\n
    }\n
    else\n
    {\n
        if (v2 != 1)\n
        {\n
            v6 = -122;\n
            return v6;\n
        }\n
        v0 = v4;\n
        if (v0 > 11)\n
        {\n
            v6 = -101;\n
            return v6;\n
        }\n
        cgc_do_dbl_mean(v3->field_30);\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4207858:sub_4034f2": "int sub_4034f2()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_median(*((*(&v0) + 52)));\n
}\n
", "4207880:sub_403508": "int sub_403508()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_mode(*((*(&v0) + 52)));\n
}\n
", "4207902:sub_40351e": "int sub_40351e()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_range(*((*(&v0) + 52)));\n
}\n
", "4207924:sub_403534": "int sub_403534()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_sum(*((*(&v0) + 48)));\n
}\n
", "4207946:sub_40354a": "int sub_40354a()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_product(*((*(&v0) + 48)));\n
}\n
", "4207968:sub_403560": "int sub_403560()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_min(*((*(&v0) + 48)));\n
}\n
", "4207990:sub_403576": "int sub_403576()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_max(*((*(&v0) + 48)));\n
}\n
", "4208012:sub_40358c": "int sub_40358c()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_sort(*((*(&v0) + 52)));\n
}\n
", "4208034:sub_4035a2": "int sub_4035a2()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_rsort(*((*(&v0) + 52)));\n
}\n
", "4208056:sub_4035b8": "int sub_4035b8()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_odds(*((*(&v0) + 48)));\n
}\n
", "4208078:sub_4035ce": "int sub_4035ce()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_int_evens(*((*(&v0) + 48)));\n
}\n
", "4208171:sub_40362b": "int sub_40362b()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_median(*((*(&v0) + 52)));\n
}\n
", "4208193:sub_403641": "int sub_403641()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_mode(*((*(&v0) + 52)));\n
}\n
", "4208215:sub_403657": "int sub_403657()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_range(*((*(&v0) + 52)));\n
}\n
", "4208237:sub_40366d": "int sub_40366d()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_sum(*((*(&v0) + 48)));\n
}\n
", "4208259:sub_403683": "int sub_403683()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_product(*((*(&v0) + 48)));\n
}\n
", "4208281:sub_403699": "int sub_403699()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_min(*((*(&v0) + 48)));\n
}\n
", "4208303:sub_4036af": "int sub_4036af()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_max(*((*(&v0) + 48)));\n
}\n
", "4208325:sub_4036c5": "int sub_4036c5()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_sort(*((*(&v0) + 52)));\n
}\n
", "4208347:sub_4036db": "int sub_4036db()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_rsort(*((*(&v0) + 52)));\n
}\n
", "4208369:sub_4036f1": "int sub_4036f1()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_odds(*((*(&v0) + 48)));\n
}\n
", "4208391:sub_403707": "int sub_403707()\n
{\n
    char v0;  // [bp-0x14]\n
\n
    cgc_do_dbl_evens(*((*(&v0) + 48)));\n
}\n
", "4208458:sub_40374a": null, "4208464:cgc_do_nonce": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_nonce()\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    void* v1;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x28]\n
    char v3;  // [bp-0x24]\n
    char v4;  // [bp-0x20]\n
    char v5;  // [bp-0x1c]\n
    char v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    v1 = cgc_rand(&v5, 8);\n
    if (v1)\n
    {\n
        v7 = -45;\n
        return v7;\n
    }\n
    cgc_send(&v5, 8);\n
    if (cgc_recv_all(&v3, 8) != 8)\n
        cgc__terminate();\n
    if (!(!(*(&v5) ^ *(&v3)) && !(*(&v6) ^ *(&v4))))\n
    {\n
        v7 = -44;\n
        return v7;\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4208676:sub_403824": null, "4208688:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0xd]\n
    void* v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v2 = 0;\n
    do\n
    {\n
        v2 = cgc_do_nonce();\n
        if (!v2)\n
        {\n
            if (cgc_recv_all(&v3, 1) != 1)\n
                cgc__terminate();\n
            v0 = v3;\n
            if (!v0)\n
            {\n
                v2 = cgc_do_create();\n
            }\n
            else if (v0 == 1)\n
            {\n
                v2 = cgc_do_eval();\n
            }\n
            else\n
            {\n
                v2 = -150;\n
            }\n
        }\n
    } while (v2 >= 0);\n
    cgc_send(&v2, 4);\n
    return v2;\n
}\n
", "4208932:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:cgc_allocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}