{"4206592:_init": "extern struct_0 *g_40fb44;\n
\n
int _init()\n
{\n
    if (g_40fb44)\n
    {\n
        g_40fb44();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206704:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206720:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206736:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206752:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206768:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206784:sub_4030c0": "int sub_4030c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4206790:sub_4030c6": null, "4206800:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206843:sub_4030fb": null, "4206844:sub_4030fc": "int sub_4030fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206848:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206852:sub_403104": null, "4206864:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 51771;\n
    v6 = v5 + 269;\n
    v7 = v5 + 269;\n
    if (v7 == v6)\n
        return v5 + 269;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4206915:sub_403143": "int sub_403143()\n
{\n
}\n
", "4206921:sub_403149": "int sub_403149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4206928:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 51707;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 269;\n
    v9 = (v6 + 269 - (v6 + 269) >> 31) + (269 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4206999:sub_403197": "int sub_403197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207008:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40fb40;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40fb40)\n
    {\n
        v0 = __dso_handle;\n
        sub_4030c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207083:sub_4031eb": "int sub_4031eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207088:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207097:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207101:sub_4031fd": null, "4207104:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207158:sub_403236": null, "4207168:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207222:sub_403276": null, "4207232:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207286:sub_4032b6": null, "4207296:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207392:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207488:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207542:sub_4033b6": null, "4207552:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4207626:sub_40340a": null, "4207632:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4207706:sub_40345a": null, "4207712:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207806:sub_4034be": null, "4207808:cgc_SetFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetFsError(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = FS_ERROR;\n
    if (!FS_ERROR)\n
    {\n
        v0 = 63;\n
        v3 = cgc_strncpy(v1 + 1604, v2);\n
    }\n
    return v3;\n
}\n
", "4207887:sub_40350f": null, "4207888:cgc_ClearFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClearFsError()\n
{\n
    FS_ERROR = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4207912:sub_403528": null, "4207920:cgc_FsError": "extern char FS_ERROR;\n
\n
int cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4207943:sub_403547": null, "4207952:cgc_DestroyFilesystem": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    struct struct_1 *field_438;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DestroyFilesystem()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct struct_2 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[10].padding_0[240]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < v0->field_438->field_4; v1 = v1 + 1)\n
    {\n
        if (*((v0->field_438->field_8 + (v1 << 2))))\n
        {\n
            if (*(*((v0->field_438->field_8 + (v1 << 2)))))\n
            {\n
                cgc_free();\n
                *(*((v0->field_438->field_8 + v1 * 4))) = 0;\n
            }\n
            if (*((*((v0->field_438->field_8 + (v1 << 2))) + 4)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_438->field_8 + v1 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((v0->field_438->field_8 + (v1 << 2))) + 16)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_438->field_8 + v1 * 4)) + 16)) = 0;\n
            }\n
            cgc_free();\n
            *((v0->field_438->field_8 + v1 * 4)) = 0;\n
        }\n
    }\n
    cgc_free();\n
    v0->field_438 = 0;\n
    cgc_ClearFsError();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4208425:sub_403729": null, "4208432:cgc_InitFilesystem": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    struct struct_1 *field_438;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int FS_ERROR;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitFilesystem(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = 64;\n
    cgc_bzero(&FS_ERROR);\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[214]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_438)\n
        cgc_DestroyFilesystem();\n
    v6 = cgc_calloc();\n
    v1->field_438 = v6;\n
    if (!v6)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[191]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v7 = cgc_calloc();\n
    v1->field_438->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[191]);\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1->field_438->field_4 = v4;\n
    if (!cgc_Login())\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[177]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_InitPasswd())\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(&v1[10].padding_0[164]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        cgc_bzero(&v1[1].padding_0[584]);\n
        cgc_ClearFsError();\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4208920:sub_403918": null, "4208928:cgc_Login": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Login(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[9].padding_0[684]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strlen();\n
    v2 = cgc_calloc();\n
    if (!v2)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[151]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v4;\n
    cgc_strcpy(v2);\n
    if (v1->field_43c)\n
    {\n
        cgc_free();\n
        v1->field_43c = 0;\n
    }\n
    v1->field_43c = v2;\n
    cgc_ClearFsError();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4209153:sub_403a01": null, "4209168:cgc_InitPasswd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPasswd(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v2 - 10459);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fopen(v2 - 10338);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v2 - 10437);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_fwrite(v2 - 10410, 5, 1);\n
    v1 = v5;\n
    v6 = cgc_strlen(v5, 5, 1);\n
    v0 = v3;\n
    cgc_fwrite(v1, v6, 1);\n
    cgc_fclose(v3, v6, 1);\n
    cgc_ClearFsError();\n
    v4 = 1;\n
    return v4;\n
}\n
", "4209425:sub_403b11": null, "4209440:cgc_Logout": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Logout()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_43c;\n
        cgc_free();\n
    }\n
    v1->field_43c = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4209521:sub_403b71": null, "4209536:cgc_FindFile": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    struct struct_1 *field_438;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_438->field_4)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_438->field_8 + (v2 << 2))) && *(*((v1->field_438->field_8 + (v2 << 2)))))\n
        {\n
            v0 = v4;\n
            if (!cgc_strcmp(*(*((v1->field_438->field_8 + (v2 << 2))))))\n
            {\n
                v3 = *((v1->field_438->field_8 + v2 * 4));\n
                return v3;\n
            }\n
        }\n
        v2 = v2 + 1;\n
    }\n
}\n
", "4209751:sub_403c57": null, "4209760:cgc_CreateEmptyFile": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    struct struct_1 *field_438;\n
    unsigned int field_43c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateEmptyFile(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct struct_2 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[93]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v1->field_43c)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[76]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((a0 & 153))\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[59]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (cgc_FindFile(v4))\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[46]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_438->field_4)\n
        {\n
LABEL_403f87:\n
            if (v2 != v1->field_438->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v3 = *((v1->field_438->field_8 + v2 * 4));\n
                return v3;\n
            }\n
            cgc_SetFsError(&v1[10].padding_0[26]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_438->field_8 + (v2 << 2))))\n
        {\n
            v2 = v2 + 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_calloc();\n
            *((v1->field_438->field_8 + v2 * 4)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(&v1[10].padding_0[151]);\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_strlen();\n
            v6 = cgc_calloc();\n
            *(*((v1->field_438->field_8 + v2 * 4))) = v6;\n
            if (!v6)\n
            {\n
                cgc_SetFsError(&v1[10].padding_0[151]);\n
                cgc_free();\n
                *((v1->field_438->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v4;\n
            cgc_strcpy(*(*((v1->field_438->field_8 + v2 * 4))));\n
            v7 = cgc_calloc(5);\n
            *((*((v1->field_438->field_8 + v2 * 4)) + 4)) = v7;\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v1[10].padding_0[151]);\n
                cgc_free();\n
                *(*((v1->field_438->field_8 + v2 * 4))) = 0;\n
                cgc_free();\n
                *((v1->field_438->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v8 = v1;\n
            v0 = v8->field_43c;\n
            cgc_strcpy(*((*((v8->field_438->field_8 + v2 * 4)) + 4)));\n
            v9 = v1;\n
            *((*((v9->field_438->field_8 + v2 * 4)) + 8)) = a0;\n
            *((*((v9->field_438->field_8 + v2 * 4)) + 12)) = 0;\n
            *((*((v9->field_438->field_8 + v2 * 4)) + 16)) = 0;\n
            goto LABEL_403f87;\n
            goto LABEL_403f87;\n
        }\n
    }\n
}\n
", "4210656:cgc_fopen": "typedef struct struct_2 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_fopen(unsigned int v5, char *a0)\n
{\n
    struct_2 *v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct_3 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[10].padding_0[200]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v5 && a0)\n
    {\n
        if (cgc_strlen() > 1)\n
        {\n
            cgc_SetFsError(&v0[10].padding_0[59]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            cgc_SetFsError(&v0[10].padding_0[59]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v0->field_43c)\n
        {\n
            cgc_SetFsError(&v0[10].padding_0[76]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_FindFile(v5);\n
        if (!v2 && *(a0) == 114)\n
        {\n
            cgc_SetFsError(&v0[9].padding_0[1074]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2)\n
        {\n
            for (v3 = 0; v3 < 8; v3 += 1)\n
            {\n
                if (*(&v0[1].padding_0[580 + 4 * v3]) && *(*(&v0[1].padding_0[580 + 4 * v3])) == v2)\n
                {\n
                    cgc_SetFsError(&v0[9].padding_0[1052]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (v2 && cgc_strcmp(v0->field_43c))\n
        {\n
            if (cgc_strcmp(v2->field_4))\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 64))\n
                {\n
                    cgc_SetFsError(&v0[9].padding_0[1031]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 96))\n
                {\n
                    cgc_SetFsError(&v0[9].padding_0[1031]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 4))\n
                {\n
                    cgc_SetFsError(&v0[9].padding_0[1031]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 6))\n
                {\n
                    cgc_SetFsError(&v0[9].padding_0[1031]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v1 = cgc_calloc();\n
        if (!v1)\n
        {\n
            cgc_SetFsError(&v0[10].padding_0[151]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 += 1)\n
        {\n
            if (!*(&v0[1].padding_0[580 + 4 * v3]))\n
            {\n
                *(&v0[1].padding_0[580 + 4 * v3]) = v1;\n
                break;\n
            }\n
        }\n
        if (v3 == 8)\n
        {\n
            cgc_SetFsError(&v0[9].padding_0[1013]);\n
            cgc_free();\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 4;\n
            v1->field_8 = 0;\n
        }\n
        else if (v2)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
            v1->field_0->field_c = 0;\n
            if (v1->field_0->field_10)\n
            {\n
                cgc_free();\n
                v1->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v2 = cgc_CreateEmptyFile(v5, 6);\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[9].padding_0[988]);\n
                *(&v0[1].padding_0[580 + 4 * v3]) = 0;\n
                cgc_free();\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
        }\n
        cgc_ClearFsError();\n
        v4 = v1;\n
        return v4;\n
    }\n
    cgc_SetFsError(&v0[10].padding_0[11]);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4211960:sub_4044f8": null, "4211968:cgc_fclose": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 10758);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 1668)) == v3)\n
            *((v0 + v1 * 4 + 1668)) = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4212141:sub_4045ad": null, "4212144:cgc_fread": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            cgc_SetFsError(v1 - 10706);\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v4 = a2;\n
            v4->field_8 = a2->field_0->field_c - a2->field_8 + v4->field_8;\n
            cgc_ClearFsError();\n
            v2 = a2->field_0->field_c - a2->field_8;\n
            return v2;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a1 * a0 + v5->field_8;\n
            cgc_ClearFsError();\n
            v2 = a1 * a0;\n
            return v2;\n
        }\n
    }\n
    cgc_SetFsError(v1 - 10737);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4212491:sub_40470b": null, "4212496:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v4, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[5];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a2)\n
    {\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(v1 - 11031);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            cgc_memcpy(v2, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        cgc_memcpy(v2 + *(a2)->field_c, v4);\n
        v5 = *(a2);\n
        v5[3] = a1 * a0 + v5[3];\n
        if (*(a2)->field_10)\n
            cgc_free();\n
        *(a2)->field_10 = v2;\n
        cgc_ClearFsError();\n
        v3 = a1 * a0;\n
        return v3;\n
    }\n
    cgc_SetFsError(v1 - 10737);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4212831:sub_40485f": null, "4212832:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    struct_2 *v6;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        cgc_SetFsError(v1 - 10694);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(v1 - 10679);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        cgc_SetFsError(v1 - 10706);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v2 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = a1->field_0->field_10;\n
            v6 = a1;\n
            v7 = v6->field_8;\n
            v6->field_8 = v7 + 1;\n
            tmp_50 = v5[v7];\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            *((v4 + v8)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v4 + v2)) = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(v1 - 10706);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4213213:sub_4049dd": null, "4213216:cgc_ListFiles": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    struct struct_1 *field_438;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_ListFiles(unsigned int *v16)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1d]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x1b]\n
    char v12;  // [bp-0x1a]\n
    char v13;  // [bp-0x19]\n
    struct struct_2 **v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x11]\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // eax\n
    struct_0 *v25;  // eax\n
    struct_0 *v26;  // ebx\n
    struct_0 *v27;  // eax\n
    struct_0 *v28;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[240]);\n
        v15 = 0;\n
        return v15;\n
    }\n
    if (v16)\n
    {\n
        v8 = 79;\n
        for (v14 = 0; v14 < v1->field_438->field_4; v14 = v14 + 1)\n
        {\n
            if (*((v1->field_438->field_8 + (v14 << 2))))\n
            {\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v7 = cgc_strlen();\n
                if (v7 >= 32)\n
                    v8 = v7 + v8;\n
                else\n
                    v8 += 32;\n
                v8 += 1;\n
                v4 = *((*((v1->field_438->field_8 + v14 * 4)) + 12));\n
                v5 = 0;\n
                v18 = ftop<4> - 1;\n
                if ([D] GetI(136:I8x8)[t47,0])\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(136:I8x8)[t6,0] = 0x00\n
                v20 = v19 + 1;\n
                cgc_log10();\n
                [D] PutI(72:F64x8)[t18,0] = t21\n
                [D] PutI(136:I8x8)[t18,0] = 0x01\n
                [D] PutI(72:F64x8)[t28,1] = t29\n
                [D] PutI(136:I8x8)[t28,1] = 0x01\n
                [D] PutI(136:I8x8)[t28,0] = 0x00\n
                v22 = v20 - 1 + 1;\n
                v3 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-62, size=2, endness=Iend_LE)))));\n
                v2 = v3 | 0xc00;\n
                v6 = ([D] GetI(136:I8x8)[t74,0] ? [D] GetI(72:F64x8)[t74,0] : nan);\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v23 = v22 + 1;\n
                v7 = v6;\n
                if (v7 < 8)\n
                    v8 += 8;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 6;\n
            }\n
        }\n
        v24 = cgc_calloc();\n
        *(v16) = v24;\n
        if (!v24)\n
        {\n
            cgc_SetFsError(&v1[10].padding_0[191]);\n
            v15 = 0;\n
            return v15;\n
        }\n
    }\n
    if (!v16)\n
    {\n
        v26 = v1;\n
        cgc_printf(&v26[9].padding_0[910], &v26[9].padding_0[887], &v26[9].padding_0[878], &v26[9].padding_0[872]);\n
    }\n
    else\n
    {\n
        v25 = v1;\n
        v0 = &v25[9].padding_0[867];\n
        cgc_sprintf(*(v16), &v25[9].padding_0[910], &v25[9].padding_0[887], &v25[9].padding_0[878], &v25[9].padding_0[872]);\n
    }\n
    for (v14 = 0; v14 < v1->field_438->field_4; v14 = v14 + 1)\n
    {\n
        if (*((v1->field_438->field_8 + (v14 << 2))))\n
        {\n
            if (!v16)\n
            {\n
                v28 = v1;\n
                cgc_printf(&v28[9].padding_0[860], *(*((v28->field_438->field_8 + v14 * 4))), *((*((v28->field_438->field_8 + v14 * 4)) + 4)));\n
            }\n
            else\n
            {\n
                v27 = v1;\n
                v0 = *((*((v27->field_438->field_8 + v14 * 4)) + 12));\n
                cgc_sprintf(*(v16), &v1[9].padding_0[862], *(v16), *(*((v27->field_438->field_8 + v14 * 4))), *((*((v27->field_438->field_8 + v14 * 4)) + 4)));\n
            }\n
            cgc_memset(&v9, 45);\n
            v13 = 0;\n
            if ((*((*((v1->field_438->field_8 + (v14 << 2))) + 8)) & 4))\n
                v9 = 114;\n
            if ((*((*((v1->field_438->field_8 + (v14 << 2))) + 8)) & 6))\n
                v10 = 119;\n
            if ((*((*((v1->field_438->field_8 + (v14 << 2))) + 8)) & 64))\n
                v11 = 114;\n
            if ((*((*((v1->field_438->field_8 + (v14 << 2))) + 8)) & 96))\n
                v12 = 119;\n
            if (v16)\n
                cgc_sprintf(*(v16), &v1[9].padding_0[842], *(v16));\n
            else\n
                cgc_printf(&v1[9].padding_0[893]);\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v15 = 1;\n
    return v15;\n
}\n
", "4214406:sub_404e86": null, "4214416:cgc_DeleteFile": "typedef struct struct_1 {\n
    char padding_0[1080];\n
    struct struct_2 *field_438;\n
    unsigned int field_43c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DeleteFile(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct struct_0 **v3;  // [bp-0x14]\n
    struct struct_0 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_1 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[200]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[93]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v1->field_43c)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[76]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v4 = 0; v4 < v1->field_438->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_438->field_8 + (v4 << 2))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_438->field_8 + (v4 << 2))))))\n
                {\n
                    v2[0] = *((v1->field_438->field_8 + v4 * 4));\n
                    v3 = v4;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v4 == v1->field_438->field_4)\n
        {\n
            cgc_SetFsError(&v1[9].padding_0[1074]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v4 = 0; v4 < 8; v4 = v4 + 1)\n
        {\n
            if (*(&v1[1].padding_0[580 + 4 * v4]) && *(*(&v1[1].padding_0[580 + 4 * v4])) == v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        v7 = v1;\n
        v0 = &v7[9].padding_0[689];\n
        if (cgc_strcmp(v7->field_43c))\n
        {\n
            v0 = v2[1];\n
            if (cgc_strcmp(v1->field_43c))\n
            {\n
                cgc_SetFsError(&v1[9].padding_0[1031]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_free();\n
        if (v2[1])\n
            cgc_free();\n
        if (v2[4])\n
            cgc_free();\n
        cgc_free();\n
        *((v1->field_438->field_8 + v3 * 4)) = 0;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4215081:sub_405129": null, "4215088:cgc_RenameFile": "typedef struct struct_0 {\n
    char padding_0[1080];\n
    struct struct_1 *field_438;\n
    unsigned int field_43c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RenameFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    if (v6 && a0)\n
    {\n
        for (v4 = 0; v4 < v1->field_438->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_438->field_8 + (v4 << 2))) && *(*((v1->field_438->field_8 + (v4 << 2)))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_438->field_8 + (v4 << 2))))))\n
                    v3[0] = *((v1->field_438->field_8 + v4 * 4));\n
                v0 = a0;\n
                if (!cgc_strcmp(*(*((v1->field_438->field_8 + (v4 << 2))))))\n
                {\n
                    cgc_SetFsError(&v1[9].padding_0[798]);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[9].padding_0[766]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v1;\n
        v0 = &v7[9].padding_0[689];\n
        if (cgc_strcmp(v7->field_43c))\n
        {\n
            v0 = *((v3 + 4));\n
            if (cgc_strcmp(v1->field_43c))\n
            {\n
                cgc_SetFsError(&v1[9].padding_0[1031]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_strlen();\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[10].padding_0[151]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a0;\n
        cgc_strcpy(v2);\n
        cgc_free(*(v3));\n
        *(v3) = v2;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_SetFsError(&v1[10].padding_0[93]);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4215675:sub_40537b": null, "4215680:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeMode(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[9].padding_0[744]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v2 = cgc_FindFile(v4);\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[9].padding_0[731]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v1;\n
        v0 = &v5[9].padding_0[689];\n
        if (cgc_strcmp(v5->field_43c))\n
        {\n
            v0 = v2->field_4;\n
            if (cgc_strcmp(v1->field_43c))\n
            {\n
                cgc_SetFsError(&v1[9].padding_0[1031]);\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        v2->field_8 = a0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[59]);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4215969:sub_4054a1": null, "4215984:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeOwner(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_0 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        cgc_SetFsError(&v1[10].padding_0[93]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v6 = v1;\n
        v0 = &v6[9].padding_0[689];\n
        if (cgc_strcmp(v6->field_43c))\n
        {\n
            cgc_SetFsError(&v1[9].padding_0[697]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_FindFile(v5);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[9].padding_0[731]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_UserExists())\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v1[10].padding_0[151]);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = a0;\n
            cgc_strcpy(v2);\n
            if (v3->field_4)\n
                cgc_free();\n
            v3->field_4 = v2;\n
            cgc_ClearFsError();\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(&v1[9].padding_0[744]);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[9].padding_0[711]);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4216394:sub_40564a": null, "4216400:cgc_UserExists": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UserExists(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    char v2;  // [bp-0x90]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v0 - 10476);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v3 = cgc_fopen(v6 - 10338, v6 - 9872);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 10437);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (cgc_fgets(&v2, 127, v3))\n
        {\n
            v1 = cgc_strtok(&v2);\n
            if (!v1)\n
            {\n
                cgc_SetFsError(v0 - 10404);\n
                v4 = 0;\n
                return v4;\n
            }\n
            else if (!cgc_strcmp(v1))\n
            {\n
                cgc_fclose(v3);\n
                v4 = 1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            cgc_fclose(v3);\n
            cgc_ClearFsError();\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4216776:sub_4057c8": null, "4216784:cgc_Uid": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Uid()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_43c;\n
        v3 = cgc_puts();\n
    }\n
    return v3;\n
}\n
", "4216842:sub_40580a": null, "4216848:cgc_AddUser": "typedef struct struct_1 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddUser(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct_0 *v2;  // [bp-0xa8]\n
    struct_0 *v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    struct_1 *v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x98]\n
    struct struct_0 **v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_1 *v11;  // ebx\n
    struct_1 *v12;  // ebx\n
    struct_1 *v13;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v5[9].padding_0[684]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v5[9].padding_0[584]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v5->field_43c))\n
    {\n
        cgc_SetFsError(&v5[9].padding_0[697]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[9].padding_0[684]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[9].padding_0[584]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!cgc_UserExists(v10))\n
    {\n
        v11 = v5;\n
        v8 = cgc_fopen(&v11[9].padding_0[546], &v11[9].padding_0[80]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v5[9].padding_0[645]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v5;\n
        v7 = cgc_fopen(&v12[9].padding_0[547], &v12[9].padding_0[65]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v5[9].padding_0[539]);\n
            cgc_fclose(v8);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (cgc_fgets(&v6, 127, v8))\n
            {\n
                v3 = &v6;\n
                v0 = cgc_strlen();\n
                v4 = cgc_fwrite(v3, v0, 1, v7);\n
                if (v4 != cgc_strlen(&v6, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[9].padding_0[508]);\n
                    cgc_DeleteFile(&v5[9].padding_0[547]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                else if (*(&v5 + cgc_strlen()) != 10 && cgc_fwrite(&v5[9].padding_0[339], 1, 1, v7) != 1)\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[9].padding_0[508]);\n
                    cgc_DeleteFile(&v5[9].padding_0[547]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v5[9].padding_0[476];\n
                v1 = v10;\n
                cgc_sprintf(&v6, v0, v1);\n
                v2 = &v6;\n
                cgc_fwrite(v2, cgc_strlen(&v6, v0, v1), 1, v7);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v5[9].padding_0[546]);\n
                v13 = v5;\n
                cgc_RenameFile(&v13[9].padding_0[547], &v13[9].padding_0[546]);\n
                cgc_ClearFsError();\n
                v9 = 1;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v5[9].padding_0[567]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4218014:sub_405c9e": null, "4218016:cgc_DeleteUser": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteUser(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    struct_1 *v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    struct_0 *v3;  // [bp-0xa0]\n
    struct struct_0 **v4;  // [bp-0x9c]\n
    void* v5;  // [bp-0x98]\n
    char v6;  // [bp-0x91]\n
    unsigned int v7;  // [bp-0x90]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v3[9].padding_0[684]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v3->field_43c))\n
    {\n
        cgc_SetFsError(&v3[9].padding_0[697]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v10))\n
    {\n
        v11 = v3;\n
        v5 = cgc_fopen(&v11[9].padding_0[546], &v11[9].padding_0[80]);\n
        if (!v5)\n
        {\n
            cgc_SetFsError(&v3[9].padding_0[645]);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v3;\n
        v4 = cgc_fopen(&v12[9].padding_0[547], &v12[9].padding_0[65]);\n
        if (!v4)\n
        {\n
            cgc_SetFsError(&v3[9].padding_0[539]);\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (v6)\n
                    {\n
                        cgc_DeleteFile(&v3[9].padding_0[546]);\n
                        v13 = v3;\n
                        cgc_RenameFile(&v13[9].padding_0[547], &v13[9].padding_0[546]);\n
                        cgc_ClearFsError();\n
                        v9 = 1;\n
                        return v9;\n
                    }\n
                    cgc_SetFsError(&v3[9].padding_0[447]);\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    cgc_DeleteFile(&v3[9].padding_0[547]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen());\n
            v7 = cgc_strtok(&v8);\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v3[9].padding_0[612]);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(&v3[9].padding_0[547]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (cgc_strcmp(v7))\n
            {\n
                (&v8)[cgc_strlen()] = 58;\n
                v1 = &v8;\n
                v0 = cgc_strlen();\n
                v2 = cgc_fwrite(v1, v0, 1, v4);\n
                if (v2 != cgc_strlen(&v8, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v6 = 1;\n
            }\n
        }\n
        cgc_fclose(v5);\n
        cgc_fclose(v4);\n
        cgc_SetFsError(&v3[9].padding_0[508]);\n
        cgc_DeleteFile(&v3[9].padding_0[547]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v3[9].padding_0[470]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4219122:sub_4060f2": null, "4219136:cgc_ChangePasswd": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangePasswd(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    struct_1 *v2;  // [bp-0xb4]\n
    unsigned int v3;  // [bp-0xb0]\n
    struct_1 *v4;  // [bp-0xac]\n
    unsigned int v5;  // [bp-0xa8]\n
    struct_0 *v6;  // [bp-0xa4]\n
    struct struct_0 **v7;  // [bp-0xa0]\n
    void* v8;  // [bp-0x9c]\n
    char v9;  // [bp-0x95]\n
    unsigned int v10;  // [bp-0x94]\n
    char v11;  // [bp-0x8d]\n
    char v12;  // [bp-0xd]\n
    struct_0 *v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        cgc_SetFsError(&v6[9].padding_0[684]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v6[9].padding_0[584]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (cgc_strlen() <= 32)\n
    {\n
        if (cgc_strcmp(v6->field_43c) && cgc_strcmp(v6->field_43c))\n
        {\n
            cgc_SetFsError(&v6[9].padding_0[432]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v14 = v6;\n
        v8 = cgc_fopen(&v14[9].padding_0[546], &v14[9].padding_0[80]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v6[9].padding_0[645]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v15 = v6;\n
        v7 = cgc_fopen(&v15[9].padding_0[547], &v15[9].padding_0[65]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v6[9].padding_0[539]);\n
            cgc_fclose(v8);\n
            v12 = 0;\n
            return v12;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v11, 127, v8))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    if (v9)\n
                    {\n
                        cgc_DeleteFile(&v6[9].padding_0[546]);\n
                        v16 = v6;\n
                        cgc_RenameFile(&v16[9].padding_0[547], &v16[9].padding_0[546]);\n
                        cgc_ClearFsError();\n
                        v12 = 1;\n
                        return v12;\n
                    }\n
                    cgc_SetFsError(&v6[9].padding_0[447]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[9].padding_0[547]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            } while (!cgc_strlen());\n
            v10 = cgc_strtok(&v11);\n
            if (!v10)\n
            {\n
                cgc_SetFsError(&v6[9].padding_0[612]);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v6[9].padding_0[547]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (!cgc_strcmp(v10))\n
            {\n
                v0 = &v6[9].padding_0[393];\n
                v1 = v13;\n
                cgc_sprintf(&v11, v0, v1);\n
                v4 = &v11;\n
                v0 = cgc_strlen(&v11, v0, v1);\n
                v5 = cgc_fwrite(v4, v0, 1, v7);\n
                if (v5 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v6[9].padding_0[508]);\n
                    cgc_DeleteFile(&v6[9].padding_0[547]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                (&v11)[cgc_strlen()] = 58;\n
                v2 = &v11;\n
                v0 = cgc_strlen();\n
                v3 = cgc_fwrite(v2, v0, 1, v7);\n
                if (v3 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_SetFsError(&v6[9].padding_0[508]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[9].padding_0[547]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v6[9].padding_0[584]);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4220556:sub_40668c": null, "4220560:cgc_CheckPasswd": "typedef struct struct_0 {\n
    char padding_0[1084];\n
    unsigned int field_43c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckPasswd(unsigned int v9, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xa8]\n
    char v1;  // [bp-0xa1]\n
    void* v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x9c]\n
    char v4;  // [bp-0x95]\n
    unsigned int v5;  // [bp-0x94]\n
    unsigned int v6;  // [bp-0x90]\n
    char v7;  // [bp-0x89]\n
    char v8;  // [bp-0x9]\n
    struct_0 *v10;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v9)\n
    {\n
        cgc_SetFsError(&v0[9].padding_0[684]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v0[9].padding_0[584]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v0[9].padding_0[584]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (!v0->field_43c)\n
        {\n
            cgc_Login(&v0[9].padding_0[689]);\n
            v1 = 1;\n
        }\n
        else if (cgc_strcmp(v0->field_43c))\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[10].padding_0[151]);\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_strcpy(v2);\n
            cgc_Logout();\n
            cgc_Login(&v0[9].padding_0[689]);\n
        }\n
        v10 = v0;\n
        v3 = cgc_fopen(&v10[9].padding_0[546], &v10[9].padding_0[80]);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v0[9].padding_0[645]);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v7, 127, v3))\n
                        {\n
                            cgc_fclose(v3);\n
                            if (!v4)\n
                            {\n
                                cgc_SetFsError(&v0[9].padding_0[447]);\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                        }\n
                    } while (!cgc_strlen());\n
                    v6 = cgc_strtok(&v7);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v0[9].padding_0[612]);\n
                        cgc_fclose(v3);\n
                        if (v2)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v2);\n
                            cgc_free();\n
                        }\n
                        if (v1)\n
                            cgc_Logout();\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                } while (cgc_strcmp(v6));\n
                v5 = cgc_strtok(0);\n
                if (!v5)\n
                {\n
                    cgc_SetFsError(&v0[9].padding_0[612]);\n
                    cgc_fclose(v3);\n
                    if (v2)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v2);\n
                        cgc_free();\n
                    }\n
                    if (v1)\n
                        cgc_Logout();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (cgc_strcmp(v5));\n
            cgc_ClearFsError();\n
            cgc_fclose(v3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4222071:sub_406c77": null, "4222080:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 1088));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 1088)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4222417:sub_406dd1": null, "4222432:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[1088];\n
    unsigned int field_440;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[9].padding_0[350]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_440)\n
    {\n
        v7 = v1;\n
        v7->field_440 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4222657:sub_406ec1": null, "4222672:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4222743:sub_406f17": null, "4222752:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[1088];\n
    struct struct_1 *field_440;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_440);\n
    v3[0] = v1->field_440;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4222969:sub_406ff9": null, "4222976:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4223060:sub_407054": null, "4223072:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[1088];\n
    struct struct_0 *field_440;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_440; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4223353:sub_407179": null, "4223360:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4223468:sub_4071ec": null, "4223472:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 1088)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 1088));\n
        *((v6 + v3 * 4 + 1088)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4223757:sub_40730d": null, "4223760:cgc_round": null, "4223906:sub_4073a2": null, "4223920:cgc_floor": null, "4224076:sub_40744c": null, "4224080:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[1828];\n
    unsigned int field_724;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_724 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 = v2 + 1)\n
    {\n
        *((1700 + &v0->padding_0[0] + 0x4 * v2)) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[1700 + 4 * (v2 + 1 & 31)]);\n
        *((1700 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4224303:sub_40752f": null, "4224304:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4224351:sub_40755f": null, "4224352:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1700 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4224635:sub_40767b": null, "4224640:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4224828:sub_40773c": null, "4224832:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4224933:sub_4077a5": null, "4224944:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4224978:sub_4077d2": null, "4224992:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            if (!*(&v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v7 = v4;\n
            v8 = *((v7 + 0x100)) - *(&v2);\n
            *((v7 + 0x100)) = v8;\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4225262:sub_4078ee": null, "4225264:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4225356:sub_40794c": null, "4225360:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            if (!*(&v4))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4225548:sub_407a0c": null, "4225552:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4225855:sub_407b3f": null, "4225856:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_408079:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_408079;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 10088)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4227212:sub_40808c": null, "4227216:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4227274:sub_4080ca": null, "4227280:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4227349:sub_408115": null, "4227360:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4227499:sub_4081ab": null, "4227504:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if (!(a2 & 8))\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
        else\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4227776:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4228432:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4230848:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4231514:sub_40915a": null, "4231520:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4232060:sub_40937c": null, "4232064:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4232111:sub_4093af": null, "4232112:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4232149:sub_4093d5": null, "4232160:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4232397:sub_4094cd": null, "4232400:cgc_atof": null, "4232685:sub_4095ed": null, "4232688:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4232764:sub_40963c": null, "4232768:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4232905:sub_4096c9": null, "4232912:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4233048:sub_409758": null, "4233056:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_40987a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_40987a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4098cd;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_4098cd;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4098cd:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_40987a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (!cgc_isupper(v1))\n
                v1 -= 87;\n
            else\n
                v1 -= 55;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_409a05:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_409a0a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = v7 + 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_409a0a;\n
            goto LABEL_409a05;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4233827:sub_409a63": null, "4233840:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4233899:sub_409aab": null, "4233904:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4233959:sub_409ae7": null, "4233968:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4234123:sub_409b8b": null, "4234128:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4234286:sub_409c2e": null, "4234288:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[1600];\n
    struct struct_1 *field_640;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_640)\n
        {\n
            v6 = v1->field_640;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_640 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_640 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_640 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_640 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4234807:sub_409e37": null, "4234816:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4235166:sub_409f9e": null, "4235168:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4235351:sub_40a057": null, "4235360:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v4];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (v1 > v0)\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4235513:sub_40a0f9": null, "4235520:cgc_L2_InitCAM": "extern unsigned int CAM;\n
\n
int cgc_L2_InitCAM()\n
{\n
    return cgc_bzero(&CAM, 0x3fc);\n
}\n
", "4235567:sub_40a12f": null, "4235568:cgc_L2_PopulateCAM": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L2_PopulateCAM(unsigned short v4, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 255;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < 255; v2 += 1)\n
    {\n
        if (v4 == *((v0 + (v2 << 2) + 2090)) && *((v0 + (v2 << 2) + 2092)) == a1)\n
        {\n
            v5 = v0;\n
            *((v5 + v2 * 4 + 2093)) = a0;\n
            *((v5 + v2 * 4 + 2092)) = a1;\n
            v3 = 1;\n
            return v3;\n
        }\n
        if (v1 == 255 && !*((v0 + (v2 << 2) + 2090)))\n
            v1 = v2;\n
    }\n
    if (v1 == 255)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v6 = v0;\n
    *((v6 + v1 * 4 + 2090)) = v4;\n
    *((v6 + v1 * 4 + 2093)) = a0;\n
    *((v6 + v1 * 4 + 2092)) = a1;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4235885:sub_40a26d": null, "4235888:cgc_L2_LookupCAM": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L2_LookupCAM(unsigned short v3, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < 255)\n
        {\n
            if (v3 == *((v0 + (v1 << 2) + 2090)) && *((v0 + (v1 << 2) + 2092)) == a0)\n
            {\n
                v2 = v0 + 2090 + v1 * 4;\n
                return v2;\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
    }\n
}\n
", "4236047:sub_40a30f": null, "4236048:cgc_L2_CalculateChecksum": "int cgc_L2_CalculateChecksum(char v4[5])\n
{\n
    char v0;  // [bp-0x11]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2[5];  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    *(&v2[0]) = v4;\n
    v1 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < v2[4] - -3; v0 += 1)\n
    {\n
        v1 = v4[v0] + v1;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4236165:sub_40a385": null, "4236176:cgc_L2_VerifyChecksum": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L2_VerifyChecksum(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v2 = cgc_L2_CalculateChecksum(v5);\n
    cgc_memcpy(&v1, &v5[1].padding_0[2 + 4 + v3->field_4], 4);\n
    if (v2 == *(&v1))\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4236329:sub_40a429": null, "4236336:cgc_L2_RxFrame": "typedef struct struct_1 {\n
    char padding_0[6060];\n
    char field_17ac;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[1];\n
    char field_6;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L2_RxFrame(unsigned int v5, struct_0 *a0)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned short v6;  // dx\n
    unsigned int v7;  // edx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_ReceiveBytes(v5, 7) == 7)\n
    {\n
        if (!cgc_strcmp(a0, &v0[1].padding_0[3871]))\n
            cgc__terminate();\n
        v1 = a0;\n
        v0->field_17ac = (v1->field_2 & 3) + 4;\n
        if (cgc_ReceiveBytes(v5, v1->field_4) != v1->field_4)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_L2_VerifyChecksum(a0))\n
        {\n
            if (v5 == 1)\n
            {\n
                if (!v1->field_6)\n
                    v1->field_6 = 1;\n
            }\n
            else\n
            {\n
                if (v5 == 4)\n
                {\n
                    if (v1->field_6 != 1 && v1->field_6 != 2)\n
                    {\n
                        cgc_KillAll();\n
                        cgc__terminate();\n
                    }\n
                }\n
                else\n
                {\n
                    if (v5 == 6 && v1->field_6)\n
                    {\n
                        cgc_KillAll();\n
                        cgc__terminate();\n
                    }\n
                }\n
            }\n
            *(&v2) = cgc_L2_CalculateChecksum(a0);\n
            cgc_memcpy(&a0->padding_0[1 + v1->field_4 + 4], &v2, 4);\n
            v6 = v1->field_2;\n
            cgc_L2_PopulateCAM(v7, v5, v1->field_6);\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4236902:sub_40a666": null, "4236912:cgc_L2_ForwardFrame": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char field_4;\n
    char padding_5[1];\n
    char field_6;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[3];\n
    char field_3;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L2_ForwardFrame(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    struct_0 *v3;  // [bp-0x18]\n
    char v4[4];  // [bp-0x14]\n
    struct_1 *v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v2 = v3->field_4 + 7;\n
    v5 = cgc_L2_LookupCAM(v3->field_0, v3->field_6);\n
    if (v5)\n
    {\n
        if (v5->field_3 != 1)\n
        {\n
            if (v5->field_3 == 6)\n
            {\n
                v3->field_6 = 0;\n
                *(&v1) = cgc_L2_CalculateChecksum(v7);\n
                cgc_memcpy(-3 + v7 + v3->field_4, &v1, 4);\n
            }\n
            if (cgc_SendBytes(v5->field_3, v2) != v2)\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
            v6 = 1;\n
            return v6;\n
        }\n
        else\n
        {\n
            v3->field_6 = 0;\n
            *(&v1) = cgc_L2_CalculateChecksum(v7);\n
            cgc_memcpy(-3 + v7 + v3->field_4, &v1, 4);\n
            if (cgc_SendBytes(v5->field_3 + 1, v2) == v2)\n
            {\n
                v6 = 1;\n
                return v6;\n
            }\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
    else\n
    {\n
        if (v3->field_0 == 65535)\n
        {\n
            *(&v4[0]) = cgc_L2_LookupCAM(v3->field_2, v3->field_6);\n
            if (!v4)\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
            if (v4[3] != 1 && !(v4[3] == 6))\n
                goto LABEL_40a784;\n
            if (cgc_SendBytes(4, v2) != v2)\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
LABEL_40a784:\n
            if (v4[3] == 4 && v4[2] == 1)\n
            {\n
                v3->field_6 = 0;\n
                *(&v1) = cgc_L2_CalculateChecksum(v7);\n
                cgc_memcpy(-3 + v7 + v3->field_4, &v1, 4);\n
                if (cgc_SendBytes(2, v2) != v2)\n
                {\n
                    v6 = 0;\n
                    return v6;\n
                }\n
            }\n
            if (v4[3] == 4 && v4[2] == 2)\n
            {\n
                v3->field_6 = 0;\n
                *(&v1) = cgc_L2_CalculateChecksum(v7);\n
                cgc_memcpy(-3 + v7 + v3->field_4, &v1, 4);\n
                if (cgc_SendBytes(6, v2) != v2)\n
                {\n
                    v6 = 0;\n
                    return v6;\n
                }\n
            }\n
            v6 = 1;\n
            return v6;\n
        }\n
        else\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
}\n
", "4237828:sub_40aa04": null, "4237840:cgc_InitSendQueue": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitSendQueue()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v1 = 0; v1 < 10; v1 += 1)\n
    {\n
        *((v0 + 3292 + v1 * 264 + 4)) = 0;\n
    }\n
    return v1;\n
}\n
", "4237926:sub_40aa66": null, "4237936:cgc_L3_InitInterfaces": "extern unsigned int Config;\n
extern char MaxInterfaces;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_L3Interfaces;\n
extern unsigned int g_41077c;\n
extern unsigned int g_410780;\n
extern unsigned int g_410784;\n
extern unsigned int g_410788;\n
extern char g_41078c;\n
extern unsigned short g_4107b0;\n
extern char g_4107b2;\n
extern char g_4107b3;\n
\n
int cgc_L3_InitInterfaces()\n
{\n
    MaxInterfaces = 1;\n
    cgc_L3Interfaces = 167838210;\n
    g_41077c = -0x100;\n
    g_410780 = 167838209;\n
    g_410784 = 6;\n
    g_410788 = 6;\n
    g_41078c = 0;\n
    Config = cgc_L3Interfaces;\n
    g_4107b0 = 43690;\n
    g_4107b2 = 0;\n
    g_4107b3 = 1;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4238052:sub_40aae4": null, "4238064:cgc_LearnL2Adjacency": "extern char MaxInterfaces;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_LearnL2Adjacency(unsigned int v5, unsigned short a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    char v2;  // [bp-0x7]\n
    char v3;  // [bp-0x6]\n
    char v4;  // [bp-0x5]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 16;\n
    v2 = 0;\n
    v1 = MaxInterfaces;\n
    for (v4 = MaxInterfaces; v4 < 16; v4 += 1)\n
    {\n
        if (!*((v0 + (v4 << 3) + 3164)) && v3 == 16)\n
        {\n
            v3 = v4;\n
            goto LABEL_40abaa;\n
        }\n
        if (*((v0 + (v4 << 3) + 3164)) && *((v0 + (v4 << 3) + 3170)) > v2)\n
        {\n
            v2 = *((v0 + v4 * 8 + 3170));\n
            v1 = v4;\n
        }\n
LABEL_40abaa:\n
        if (*((v0 + (v4 << 3) + 3164)) == v5)\n
        {\n
            v6 = v0;\n
            *((v6 + v4 * 8 + 3168)) = a0;\n
            *((v6 + v4 * 8 + 3170)) = 0;\n
            *((v6 + v4 * 8 + 3171)) = a1;\n
            break;\n
        }\n
    }\n
    if (v4 < 16)\n
        return 1;\n
    if (v3 <= 16)\n
    {\n
        v7 = v0;\n
        *((v7 + v3 * 8 + 3164)) = v5;\n
        *((v7 + v3 * 8 + 3168)) = a0;\n
        *((v7 + v3 * 8 + 3170)) = 0;\n
        *((v7 + v3 * 8 + 3171)) = a1;\n
    }\n
    else\n
    {\n
        v8 = v0;\n
        *((v8 + v1 * 8 + 3164)) = v5;\n
        *((v8 + v1 * 8 + 3168)) = a0;\n
        *((v8 + v1 * 8 + 3170)) = 0;\n
        *((v8 + v1 * 8 + 3171)) = a1;\n
    }\n
    return 1;\n
}\n
", "4238510:sub_40acae": null, "4238512:cgc_LookupL2Adjacency": "typedef struct struct_0 {\n
    char padding_0[3160];\n
    char field_c58;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_LookupL2Adjacency(unsigned int v4)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x8]\n
    char v2;  // [bp-0x7]\n
    unsigned short v3;  // [bp-0x6]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 16;\n
    for (v2 = 0; v2 < 16; v2 += 1)\n
    {\n
        if (*(&v0[1].padding_0[3 + 8 * v2]) == v4)\n
        {\n
            if (v2 > v0->field_c58)\n
            {\n
                v5 = v0;\n
                v6 = v2;\n
                v5[1].padding_0[9 + 8 * v6] = v5[1].padding_0[9 + 8 * v6] + 1;\n
            }\n
            if (v0[1].padding_0[9 + 8 * v2] >= 8)\n
            {\n
                *(&v0[1].padding_0[3 + 8 * v2]) = 0;\n
            }\n
            else\n
            {\n
                v1 = v2;\n
                break;\n
            }\n
        }\n
    }\n
    if (v1 == 16)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(&v0[1].padding_0[7 + 8 * v1]);\n
    return v3;\n
}\n
", "4238754:sub_40ada2": null, "4238768:cgc_ResolveL2Adjacency": "typedef struct struct_0 {\n
    char padding_0[3160];\n
    char field_c58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ResolveL2Adjacency(unsigned int v11, char a0)\n
{\n
    struct_1 *v0;  // [bp-0x134]\n
    struct_0 *v1;  // [bp-0x124]\n
    char v2;  // [bp-0x11d]\n
    unsigned int *v3;  // [bp-0x11c]\n
    struct_2 *v4;  // [bp-0x118]\n
    struct_1 *v5;  // [bp-0x114]\n
    char v6[5];  // [bp-0x10e]\n
    char v7;  // [bp-0x107]\n
    char v8;  // [bp-0xff]\n
    unsigned short v9;  // [bp-0xa]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    *(&v5) = v6;\n
    v4 = &v7;\n
    v3 = &v8;\n
    cgc_bzero(v6, 0x100);\n
    if (a0 > v1->field_c58)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    *(&v5->field_0) = 65535;\n
    v5->field_2 = cgc_LookupL2Adjacency(*(&v1->padding_0[3112 + 24 * a0]));\n
    v5->field_4 = 12;\n
    v5->field_5 = 2;\n
    v5->field_6 = v1->padding_0[3132 + 24 * a0];\n
    v4->field_0 = v11;\n
    v4->field_4 = 0;\n
    *(v3) = cgc_L2_CalculateChecksum(v6);\n
    v2 = v5->field_4 + 7;\n
    *(&v0) = v6;\n
    if (cgc_SendBytes(*(&v1->padding_0[3128 + 24 * a0]), v2) != v2)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v9 = 1;\n
    return v9;\n
}\n
", "4239180:sub_40af4c": null, "4239184:cgc_HandleL2AdjacencyDiscoveryPacket": "typedef struct struct_1 {\n
    char padding_0[3160];\n
    char field_c58;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    char padding_4[2];\n
    char field_6;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleL2AdjacencyDiscoveryPacket(struct_0 *v12)\n
{\n
    struct_2 *v0;  // [bp-0x134]\n
    struct_1 *v1;  // [bp-0x128]\n
    char v2;  // [bp-0x121]\n
    unsigned int *v3;  // [bp-0x120]\n
    struct_0 *v4;  // [bp-0x11c]\n
    char v5;  // [bp-0x115]\n
    struct_3 *v6;  // [bp-0x114]\n
    struct_2 *v7;  // [bp-0x110]\n
    char v8[5];  // [bp-0x109]\n
    char v9;  // [bp-0x102]\n
    unsigned int v10;  // [bp-0xfa]\n
    char v11;  // [bp-0x9]\n
    unsigned int v13;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    *(&v7) = v8;\n
    v6 = &v9;\n
    v4 = v12;\n
    v3 = &v12[1].padding_0;\n
    if (!v12)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    for (v5 = 0; v5 < v1->field_c58; v5 += 1)\n
    {\n
        if (*(&v1->padding_0[3112 + 24 * v5]) == *(v3) && v1->padding_0[3132 + 24 * v5] == v4->field_6)\n
            break;\n
    }\n
    if (v5 == v1->field_c58)\n
    {\n
        v11 = 1;\n
        return v11;\n
    }\n
    *(&v7->field_0) = v4->field_2;\n
    v13 = cgc_LookupL2Adjacency(*(&v1->padding_0[3112 + 24 * v5]));\n
    v7->field_2 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v7->field_4 = 12;\n
    v7->field_6 = 0;\n
    v7->field_5 = 3;\n
    v6->field_0 = *(&v1->padding_0[3112 + 24 * v5]);\n
    v6->field_4 = v7->field_2;\n
    v6->field_6 = 0;\n
    v6->field_7 = 0;\n
    v10 = cgc_L2_CalculateChecksum(v8);\n
    v2 = v7->field_4 + 7;\n
    *(&v0) = v8;\n
    if (cgc_SendBytes(*(&v1->padding_0[3128 + 24 * v5]), v2) != v2)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v11 = 1;\n
    return v11;\n
}\n
", "4239796:sub_40b1b4": null, "4239808:cgc_HandleL2AdjacencyResponsePacket": "typedef struct struct_1 {\n
    char padding_0[3160];\n
    char field_c58;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[6];\n
    char field_6;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HandleL2AdjacencyResponsePacket(struct_2 *v7)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x18]\n
    struct_2 *v4;  // [bp-0x14]\n
    char v5;  // [bp-0xe]\n
    char v6;  // [bp-0xd]\n
    struct_1 *v8;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = v7;\n
    v3 = &v7[1].padding_0[0];\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    for (v5 = 0; v5 < v0->field_c58; v5 += 1)\n
    {\n
        v8 = v0;\n
        v1 = *(&v8->padding_0[3112 + 24 * v5]) & *(&v8->padding_0[3116 + 24 * v5]);\n
        v2 = v3->field_0 & *(&v8->padding_0[3116 + 24 * v5]);\n
        if (v1 == v2 && v0->padding_0[3132 + 24 * v5] == v4->field_6)\n
            break;\n
    }\n
    if (v5 == v0->field_c58)\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    cgc_LearnL2Adjacency(v3->field_0, v3->field_4, v4->field_6);\n
    v6 = 1;\n
    return v6;\n
}\n
", "4240120:sub_40b2f8": null, "4240128:cgc_L3_RxPacket": "typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    char field_4;\n
    char field_5;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[7];\n
    char field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L3_RxPacket(unsigned int v7, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x12c]\n
    char v1;  // [bp-0x11c]\n
    char v2;  // [bp-0x115]\n
    struct_0 *v3;  // [bp-0x1c]\n
    struct_1 *v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    if (!a0)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    cgc_bzero(&v1, 0x100);\n
    if (!cgc_L2_RxFrame(v7, &v1))\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v4 = &v1;\n
    if (v4->field_5 == 1)\n
    {\n
        if (v4->field_4 < 14)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v3 = &v2;\n
        if (v4->field_4 != v3->field_8 + 14)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        goto LABEL_40b42a;\n
    }\n
    if (v4->field_5 != 2 && !(v4->field_5 == 3))\n
        goto LABEL_40b42a;\n
    if (v4->field_4 < 12)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
LABEL_40b42a:\n
    if (v4->field_5 == 2)\n
    {\n
        cgc_HandleL2AdjacencyDiscoveryPacket(&v1);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v4->field_5 == 3)\n
    {\n
        cgc_HandleL2AdjacencyResponsePacket(&v1);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v4->field_5 == 1)\n
    {\n
        cgc_memcpy(a0, &v2, v4->field_4 - 4);\n
        v6 = 1;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4240607:sub_40b4df": null, "4240608:cgc_Enqueue": "typedef struct struct_0 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Enqueue(char *v4, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xf]\n
    char v2;  // [bp-0xe]\n
    char v3;  // [bp-0xd]\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < 10; v2 += 1)\n
    {\n
        if (!*((v0 + 3292 + v2 * 264 + 4)) && !v1)\n
        {\n
            cgc_memcpy(v0 + 3292 + v2 * 264 + 7, v4, 0x100);\n
            v5 = v0;\n
            *((v5 + 3292 + v2 * 264 + 5)) = 0;\n
            *((v5 + 3292 + v2 * 264 + 6)) = a1;\n
            *((v5 + 3292 + v2 * 264 + 4)) = 1;\n
            *((v5 + 3292 + v2 * 264)) = a0;\n
            v1 = 1;\n
            goto LABEL_40b656;\n
        }\n
        if (*((v0 + 3292 + v2 * 264 + 5)) < 10)\n
        {\n
            v6 = v0 + 3292 + v2 * 264;\n
            v6->field_5 = v6->field_5 + 1;\n
        }\n
LABEL_40b656:\n
    }\n
    v3 = 1;\n
    return v3;\n
}\n
", "4241015:sub_40b677": null, "4241024:cgc_L3_ServiceSendQueue": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    char field_4;\n
    char padding_5[1];\n
    char field_6;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L3_ServiceSendQueue()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_1 *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    char v4;  // [bp-0xe]\n
    char v5;  // [bp-0xd]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ebx\n
    struct_2 *v11;  // eax\n
    unsigned int v12;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v5 = 0; v5 < 10; v5 += 1)\n
    {\n
        if (*((v1 + 3292 + v5 * 264 + 4)))\n
        {\n
            v7 = v1;\n
            v3 = v7 + 3292 + v5 * 264 + 7;\n
            v2 = v7 + 3292 + v5 * 264 + 14;\n
            v4 = *((v7 + 3292 + v5 * 264 + 6));\n
            v8 = cgc_LookupL2Adjacency(*((v7 + 3292 + v5 * 264)));\n
            v3->field_0 = v8;\n
            if (v8)\n
            {\n
                v9 = v1;\n
                v3->field_6 = *((v9 + 3112 + *((v9 + 3292 + v5 * 264 + 6)) * 24 + 20));\n
                v12 = v1;\n
                *((v12 + 3292 + v5 * 264 + v2->field_8 + 24)) = cgc_L2_CalculateChecksum(v9 + 3292 + v5 * 264 + 7);\n
                v0 = v12 + 3292 + v5 * 264 + 7;\n
                cgc_SendBytes(*((v12 + 3112 + v4 * 24 + 16)), v3->field_4 + 7);\n
                *((v1 + 3292 + v5 * 264 + 4)) = 0;\n
            }\n
            else if (*((v1 + 3292 + v5 * 264 + 5)) < 10)\n
            {\n
                v11 = v1 + 3292 + v5 * 264;\n
                v11->field_5 = v11->field_5 + 1;\n
            }\n
            else\n
            {\n
                *((v1 + 3292 + v5 * 264 + 4)) = 0;\n
            }\n
        }\n
    }\n
    return 1;\n
}\n
", "4241614:sub_40b8ce": null, "4241616:cgc_L3_ForwardPacket": "typedef struct struct_0 {\n
    char padding_0[3160];\n
    char field_c58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L3_ForwardPacket(struct_1 *v12)\n
{\n
    struct_0 *v0;  // [bp-0x12c]\n
    unsigned int v1;  // [bp-0x128]\n
    char v2;  // [bp-0x121]\n
    struct_2 *v3;  // [bp-0x120]\n
    char v4;  // [bp-0x11c]\n
    char v5;  // [bp-0x115]\n
    char v6;  // [bp-0x10b]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    struct_1 *v9;  // [bp-0x14]\n
    char v10;  // [bp-0xe]\n
    char v11;  // [bp-0xd]\n
    struct_0 *v13;  // ecx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = v12;\n
    v3 = &v4;\n
    if (!v12)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    cgc_memcpy(&v5, v12, v9->field_8 + 10);\n
    for (v10 = 0; v10 < v0->field_c58; v10 += 1)\n
    {\n
        if (*(&v0->padding_0[3112 + 24 * v10]) == v9->field_0)\n
        {\n
            v11 = 0;\n
            return v11;\n
        }\n
        v13 = v0;\n
        v7 = *(&v13->padding_0[3112 + 24 * v10]) & *(&v13->padding_0[3116 + 24 * v10]);\n
        v8 = v9->field_0 & *(&v13->padding_0[3116 + 24 * v10]);\n
        if (v7 == v8)\n
        {\n
            v1 = v9->field_0;\n
            break;\n
        }\n
    }\n
    if (v10 == v0->field_c58)\n
    {\n
        v10 = 0;\n
        v1 = *(&v0->padding_0[3120 + 24 * v10]);\n
    }\n
    v14 = cgc_LookupL2Adjacency(*(&v0->padding_0[3112 + 24 * v10]));\n
    v3->field_2 = v14;\n
    if (!v14)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v3->field_4 = v9->field_8 + 14;\n
    v3->field_5 = 1;\n
    v3->field_6 = v0->padding_0[3132 + 24 * v10];\n
    v15 = cgc_LookupL2Adjacency(v1);\n
    *(&v3->field_0) = v15;\n
    if (v15)\n
    {\n
        *(&(&v6)[v9->field_8]) = cgc_L2_CalculateChecksum(&v4);\n
        v2 = v3->field_4 + 7;\n
        if (cgc_SendBytes(*(&v0->padding_0[3128 + 24 * v10]), v2) != v2)\n
        {\n
            v11 = 0;\n
            return v11;\n
        }\n
        v11 = 1;\n
        return v11;\n
    }\n
    else if (!cgc_ResolveL2Adjacency(v1, v10))\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (cgc_Enqueue(&v4, v1, v10))\n
    {\n
        v11 = 1;\n
        return v11;\n
    }\n
    else\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
}\n
", "4242404:sub_40bbe4": null, "4242416:cgc_L4_RegisterHandler": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_L4_RegisterHandler(char v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char v1;  // [bp-0x7]\n
    char v2;  // [bp-0x6]\n
    char v3;  // [bp-0x5]\n
    unsigned int v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 17;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v2 = 0; v2 < 16; v2 += 1)\n
    {\n
        if (!*((v0 + (v2 << 3) + 5936)))\n
            v1 = v2;\n
        if (*((v0 + (v2 << 3) + 5932)) == v4)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
    if (v1 == 17)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5 = v0;\n
    *((v5 + v1 * 8 + 5932)) = v4;\n
    *((v5 + v1 * 8 + 5936)) = a0;\n
    v3 = 1;\n
    return v3;\n
}\n
", "4242630:sub_40bcc6": null, "4242640:cgc_KillAll": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_KillAll()\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    strncpy(&v2, \"diedie!\", 7);\n
    v0 = 0;\n
    cgc_transmit(4, &v2, 7);\n
    v0 = 0;\n
    v6 = v3;\n
    return cgc_transmit(6, &v2, 7);\n
}\n
", "4242763:sub_40bd4b": null, "4242768:cgc_ReceiveBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveBytes(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v3 = 0; v3 < a0; v3 = *(&v2) + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(v5, a1 + v3, a0 - v3))\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4242968:sub_40be18": null, "4242976:cgc_SendBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SendBytes(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v3 >= a0)\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(v5, a1, a0 - v3))\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        if (!*(&v2))\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
        v3 = *(&v2) + v3;\n
    }\n
}\n
", "4243161:sub_40bed9": null, "4243168:cgc_Echo": "int cgc_Echo(char *v0, char a0, char *a1, char *a2)\n
{\n
    cgc_memcpy(a1, v0, a0);\n
    *(a2) = a0;\n
    return 1;\n
}\n
", "4243244:sub_40bf2c": null, "4243248:cgc_Chargen": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Chargen(unsigned int v4, char a0, char *a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = (0 CONCAT cgc_prng()) /m 127 >> 32;\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        a1[v1] = cgc_prng();\n
    }\n
    *(a2) = v2;\n
    v6 = v3;\n
    return 1;\n
}\n
", "4243378:sub_40bfb2": null, "4243392:cgc_Pwdgen": "typedef struct struct_0 {\n
    char padding_0[6060];\n
    char field_17ac;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Pwdgen(unsigned int v7, char a0, char *a1, char *a2)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: struct_1 *\n
    struct_1 *v1;  // [bp-0x30], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x2c]\n
    char *v3;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x24]\n
    char v5;  // [bp-0xe]\n
    char v6;  // [bp-0xd]\n
    struct_0 *v8;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0x4347c000;\n
    *(a1) = 0;\n
    for (v6 = 0; v6 < 6; v6 += 1)\n
    {\n
        v4 = 0;\n
        for (v5 = 0; v5 < 10; v5 += 1)\n
        {\n
            v8 = v2;\n
            v0 = &v4;\n
            v1 = *(&v8->padding_0[52 + 4 * *(v3)]);\n
            cgc_sprintf(&v4, &v8[1].padding_0[3110]);\n
            v3 = v2->field_17ac + v3;\n
        }\n
        v0 = a1;\n
        v1 = &v4;\n
        cgc_sprintf(a1, &v2[1].padding_0[3105]);\n
    }\n
    *(a2) = cgc_strlen(a1);\n
    return 1;\n
}\n
", "4243640:sub_40c0b8": null, "4243648:cgc_RegisterHandlers": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RegisterHandlers()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_L4_RegisterHandler(7, cgc_Echo);\n
    cgc_L4_RegisterHandler(19, v0 - 15392);\n
    cgc_L4_RegisterHandler(129, v0 - 15248);\n
    v4 = v1;\n
    return 1;\n
}\n
", "4243753:sub_40c129": null, "4243760:cgc_CB3_ProcessPacket": "typedef struct struct_0 {\n
    char padding_0[3112];\n
    unsigned int field_c28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char field_9;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
    char field_8;\n
    char field_9;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CB3_ProcessPacket(struct_1 *v12)\n
{\n
    struct_3 *v0;  // [bp-0x140]\n
    struct_0 *v1;  // [bp-0x130]\n
    char v2[3];  // [bp-0x12c]\n
    struct_2 *v3;  // [bp-0x128]\n
    char v4[3];  // [bp-0x124]\n
    struct_1 *v5;  // [bp-0x120]\n
    char v6;  // [bp-0x11a]\n
    char v7;  // [bp-0x119]\n
    char v8;  // [bp-0x118]\n
    char v9;  // [bp-0x10e]\n
    char v10;  // [bp-0x10b]\n
    char v11;  // [bp-0xd]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v12;\n
    *(&v4) = v12 + 1;\n
    if (!v12)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (v1->field_c28 != v5->field_0)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (v5->field_9 != 1)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (v5->field_8 < 3)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    else if (v5->field_8 == v4[2] + 3)\n
    {\n
        for (v6 = 0; v6 < 16; v6 += 1)\n
        {\n
            if (v1[1].padding_0[0xb00 + 8 * v6] == v4[0])\n
                break;\n
        }\n
        if (v6 == 16)\n
        {\n
            v11 = 0;\n
            return v11;\n
        }\n
        v0 = &v7;\n
        if (!*(&v1[1].padding_0[2820 + 8 * v6])(&v12[1].field_0 + 3, v4[2], &v10))\n
        {\n
            v11 = 0;\n
            return v11;\n
        }\n
        v3 = &v8;\n
        *(&v2) = &v9;\n
        *(&v3->field_0) = v5->field_4;\n
        v3->field_4 = v5->field_0;\n
        v3->field_9 = 1;\n
        v3->field_8 = v7 + 3;\n
        v2[0] = v4[1];\n
        v2[1] = v4[0];\n
        v2[2] = v7;\n
        v11 = cgc_L3_ForwardPacket(&v8);\n
        return v11;\n
    }\n
    else\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
}\n
", "4244366:sub_40c38e": null, "4244368:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x210]\n
    char v1;  // [bp-0x20c]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    cgc_seed_prng_array(0x4347c000, 0x20);\n
    cgc_L2_InitCAM();\n
    cgc_L3_InitInterfaces();\n
    cgc_RegisterHandlers();\n
    while (true)\n
    {\n
        if (cgc_L3_RxPacket(6, &v1))\n
            cgc_CB3_ProcessPacket(&v1);\n
        cgc_L3_ServiceSendQueue();\n
    }\n
}\n
", "4244536:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}