{"4202496:_init": "extern struct_0 *g_409118;\n
\n
int _init()\n
{\n
    if (g_409118)\n
    {\n
        g_409118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 28687;\n
    v6 = v5 + 62;\n
    v7 = v5 + 62;\n
    if (v7 == v6)\n
        return v5 + 62;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 28623;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 62;\n
    v9 = (v6 + 62 - (v6 + 62) >> 31) + (62 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __TMC_END__;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_409114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__TMC_END__)\n
        return;\n
    if (g_409114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __TMC_END__ = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_receive_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a0)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, v5 + v3, a0 - v3))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v3 = v2 + v3;\n
    }\n
}\n
", "4203866:sub_40255a": null, "4203872:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v3)\n
        {\n
            if (v2 == a0)\n
                return v4;\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204086:sub_402636": null, "4204096:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 252));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 252)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204433:sub_402791": null, "4204448:cgc_add_freelist_block": "typedef struct struct_1 {\n
    char padding_0[252];\n
    unsigned int field_fc;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_fc)\n
    {\n
        v7 = v1;\n
        v7->field_fc = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204649:sub_402869": null, "4204656:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204727:sub_4028b7": null, "4204736:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[252];\n
    struct struct_1 *field_fc;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
        cgc__terminate();\n
    cgc_bzero(v1->field_fc);\n
    v3[0] = v1->field_fc;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4204936:sub_402988": null, "4204944:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4205028:sub_4029e4": null, "4205040:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[252];\n
    struct struct_0 *field_fc;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_fc; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4205321:sub_402b09": null, "4205328:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205436:sub_402b7c": null, "4205440:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 252)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 252));\n
        *((v6 + v3 * 4 + 252)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205725:sub_402c9d": null, "4205728:cgc_round": null, "4205874:sub_402d32": null, "4205888:cgc_floor": null, "4206044:sub_402ddc": null, "4206048:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[1916];\n
    unsigned int field_77c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_77c = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[1788 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[1788 + 4 * (v2 + 1 & 31)]);\n
        *((1788 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4206271:sub_402ebf": null, "4206272:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4206319:sub_402eef": null, "4206320:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1788 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4206603:sub_40300b": null, "4206608:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4206796:sub_4030cc": null, "4206800:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4206901:sub_403135": null, "4206912:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4206946:sub_403162": null, "4206960:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4207230:sub_40327e": null, "4207232:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4207324:sub_4032dc": null, "4207328:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4207516:sub_40339c": null, "4207520:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v3 = a0; v2 < a0; v2 = *(&v4) + v2)\n
    {\n
        v0 = &v4;\n
        if (cgc_transmit(1, v5 + v2, a0 - v2))\n
            cgc__terminate();\n
        if (!*(&v4))\n
            cgc__terminate();\n
    }\n
    return v2;\n
}\n
", "4207684:sub_403444": null, "4207696:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4207999:sub_40357f": null, "4208000:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_403ab9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_403ab9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 4372)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4209356:sub_403acc": null, "4209360:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4209418:sub_403b0a": null, "4209424:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4209493:sub_403b55": null, "4209504:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4209643:sub_403beb": null, "4209648:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if (!(a2 & 8))\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
        else\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209920:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4210576:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4212992:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if ((a6 & 4))\n
                a1 = a0(v7, 48);\n
            else\n
                a1 = a0(v7, 32);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213658:sub_404b9a": null, "4213664:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4214204:sub_404dbc": null, "4214208:cgc_write": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            v0 = &v4;\n
            v2 = cgc_transmit(v6, a0 + v3, a1 - v3);\n
            if (v2)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v3 = v4 + v3;\n
        }\n
        else\n
        {\n
            v5 = a1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4214362:sub_404e5a": null, "4214368:cgc_minimum": "int cgc_minimum(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4214415:sub_404e8f": null, "4214416:cgc_max": "int cgc_max(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 > a0)\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = a0;\n
    return v0;\n
}\n
", "4214463:sub_404ebf": null, "4214464:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4214511:sub_404eef": null, "4214512:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4214549:sub_404f15": null, "4214560:cgc_isnan": null, "4214583:sub_404f37": null, "4214592:cgc_isinf": null, "4214639:sub_404f6f": null, "4214640:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4214877:sub_40505d": null, "4214880:cgc_atof": null, "4215165:sub_40517d": null, "4215168:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4215244:sub_4051cc": null, "4215248:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4215385:sub_405259": null, "4215392:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215528:sub_4052e8": null, "4215536:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215595:sub_40532b": null, "4215600:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4215655:sub_405367": null, "4215664:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(&v4) = v0;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = v1;\n
    }\n
    return v2;\n
}\n
", "4215818:sub_40540a": null, "4215824:cgc_create_pbi": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_pbi(struct_1 *v5, unsigned short a0[3])\n
{\n
    char v0;  // [bp-0x19]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v5)\n
            v0 = v5->field_0 != a0[0];\n
        if (!(v0 & 1))\n
            break;\n
        v5 = v5->field_10;\n
    }\n
    if (!v5)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = cgc_calloc(16);\n
    if (!v3)\n
        cgc__terminate();\n
    v3->field_0 = a0[1];\n
    v3->field_4 = 0;\n
    v3->field_2 = a0[2];\n
    v3->field_c = 0;\n
    v3->field_8 = cgc_calloc(cgc_strlen(a0 + 1) + 1);\n
    if (!v3->field_8)\n
        cgc__terminate();\n
    cgc_strcpy(v3->field_8, a0 + 1);\n
    if (!*((v5 + 8)))\n
    {\n
        *((v5 + 8)) = v3;\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v2 = *((v5 + 8)); *((v2 + 12)); v2 = *((v2 + 12)));\n
    *((v2 + 12)) = v3;\n
    v4 = 0;\n
    return v4;\n
}\n
", "4216217:sub_405599": null, "4216224:cgc_delete_pbi": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    struct struct_0 *field_8;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_pbi(struct_1 *v6, unsigned short a0[2])\n
{\n
    char v0;  // [bp-0x1a]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = v6->field_0 != a0[0];\n
        if (!(v1 & 1))\n
            break;\n
        v6 = v6->field_10;\n
    }\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v3 = *((v6 + 8));\n
    if (v3->field_0 == a0[1])\n
    {\n
        *((v6 + 8)) = v3->field_c;\n
    }\n
    else\n
    {\n
        v4 = v3;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v3)\n
                v0 = v3->field_0 != a0[1];\n
            if (!(v0 & 1))\n
                break;\n
            v4 = v3;\n
            v3 = v3->field_c;\n
        }\n
        if (!v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        *((v4 + 12)) = v3->field_c;\n
    }\n
    if (*((v3 + 8)))\n
        cgc_free(*((v3 + 8)));\n
    cgc_free(v3);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4216558:sub_4056ee": null, "4216560:cgc_move_pbi_to_sprint": "typedef struct struct_3 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    struct struct_0 *field_8;\n
    struct struct_2 *field_c;\n
    struct struct_3 *field_10;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[8];\n
    unsigned short field_a;\n
    char padding_c[4];\n
    struct struct_1 *field_10;\n
    struct struct_2 *field_14;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
int cgc_move_pbi_to_sprint(struct_3 *v8, unsigned short a0[3])\n
{\n
    char v0;  // [bp-0x1b]\n
    char v1;  // [bp-0x1a]\n
    char v2;  // [bp-0x19]\n
    struct_1 *v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_2 *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    struct_2 *v9;  // eax\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v8)\n
            v2 = v8->field_0 != a0[0];\n
        if (!(v2 & 1))\n
            break;\n
        v8 = v8->field_10;\n
    }\n
    if (!v8)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = *((v8 + 12));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = *(v6) != a0[2];\n
        if (!(v1 & 1))\n
            break;\n
        v6 = *((v6 + 20));\n
    }\n
    if (!v6)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = *((v8 + 8));\n
    if (v5->field_0 == a0[1])\n
    {\n
        *((v8 + 8)) = v5->field_c;\n
    }\n
    else\n
    {\n
        v4 = v5;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v5)\n
                v0 = v5->field_0 != a0[1];\n
            if (!(v0 & 1))\n
                break;\n
            v4 = v5;\n
            v5 = v5->field_c;\n
        }\n
        if (!v5)\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
        *((v4 + 12)) = v5->field_c;\n
    }\n
    if (!*((v6 + 16)))\n
    {\n
        *((v6 + 16)) = v5;\n
        v5->field_c = 0;\n
        v7 = 0;\n
        return v7;\n
    }\n
    for (v3 = *((v6 + 16)); *((v3 + 12)); v3 = *((v3 + 12)));\n
    *((v3 + 12)) = v5;\n
    v5->field_c = 0;\n
    v9 = v6;\n
    v9->field_a = v9->field_a + *((v5 + 2));\n
    v7 = 0;\n
    return v7;\n
}\n
", "4217049:sub_4058d9": null, "4217056:cgc_update_sbi_status": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[10];\n
    struct struct_1 *field_c;\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[14];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned short field_4;\n
    char padding_6[6];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int cgc_update_sbi_status(struct_2 *v6, unsigned short a0[4])\n
{\n
    char v0;  // [bp-0x17]\n
    char v1;  // [bp-0x16]\n
    char v2;  // [bp-0x15]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v6)\n
            v2 = v6->field_0 != a0[0];\n
        if (!(v2 & 1))\n
            break;\n
        v6 = v6->field_10;\n
    }\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v4 = *((v6 + 12));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = *(v4) != a0[2];\n
        if (!(v1 & 1))\n
            break;\n
        v4 = *((v4 + 20));\n
    }\n
    if (!v4)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v3 = *((v4 + 16));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = v3->field_0 != a0[1];\n
        if (!(v0 & 1))\n
            break;\n
        v3 = *((v3 + 12));\n
    }\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    *((v3 + 4)) = a0[3];\n
    v5 = 0;\n
    return v5;\n
}\n
", "4217378:sub_405a22": null, "4217392:cgc_update_sbi_points": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[10];\n
    struct struct_1 *field_c;\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[8];\n
    unsigned short field_a;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
int cgc_update_sbi_points(struct_2 *v6, unsigned short a0[4])\n
{\n
    char v0;  // [bp-0x17]\n
    char v1;  // [bp-0x16]\n
    char v2;  // [bp-0x15]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // eax\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v6)\n
            v2 = v6->field_0 != a0[0];\n
        if (!(v2 & 1))\n
            break;\n
        v6 = v6->field_10;\n
    }\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v4 = *((v6 + 12));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v4)\n
            v1 = *(v4) != a0[2];\n
        if (!(v1 & 1))\n
            break;\n
        v4 = *((v4 + 20));\n
    }\n
    if (!v4)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v3 = *((v4 + 16));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = v3->field_0 != a0[1];\n
        if (!(v0 & 1))\n
            break;\n
        v3 = *((v3 + 12));\n
    }\n
    if (!v3)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v7 = v4;\n
    v7->field_a = v7->field_a - *((v3 + 2));\n
    v8 = v4;\n
    v8->field_a = v8->field_a + a0[3];\n
    *((v3 + 2)) = a0[3];\n
    v5 = 0;\n
    return v5;\n
}\n
", "4217754:sub_405b9a": null, "4217760:cgc_update_sbi_description": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[10];\n
    struct struct_1 *field_c;\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[14];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    char *field_8;\n
    struct struct_3 *field_c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[6];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_update_sbi_description(struct_2 *v7, unsigned short a0[3])\n
{\n
    char v0;  // [bp-0x1f]\n
    char v1;  // [bp-0x1e]\n
    char v2;  // [bp-0x1d]\n
    unsigned int v3;  // [bp-0x1c]\n
    struct_3 *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v7)\n
            v2 = v7->field_0 != a0[0];\n
        if (!(v2 & 1))\n
            break;\n
        v7 = v7->field_10;\n
    }\n
    if (!v7)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v5 = *((v7 + 12));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v5)\n
            v1 = *(v5) != a0[2];\n
        if (!(v1 & 1))\n
            break;\n
        v5 = *((v5 + 20));\n
    }\n
    if (!v5)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v4 = *((v5 + 16));\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v4)\n
            v0 = *(v4) != a0[1];\n
        if (!(v0 & 1))\n
            break;\n
        v4 = *((v4 + 12));\n
    }\n
    if (!v4)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    cgc_strcpy(*((v4 + 8)), a0 + 1);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4218112:cgc_move_sbi_to_pbl": "int cgc_move_sbi_to_pbl(unsigned int v8, unsigned int a0)\n
{\n
    char v0;  // [bp-0x1b]\n
    char v1;  // [bp-0x1a]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // eax\n
\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v8)\n
            v2 = *(v8) != *(a0);\n
        if (!(v2 & 1))\n
            break;\n
        v8 = *((v8 + 16));\n
    }\n
    if (!v8)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = *((v8 + 12));\n
    v5 = *((v8 + 8));\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = *(v6) != *((a0 + 4));\n
        if (!(v1 & 1))\n
            break;\n
        v6 = *((v6 + 20));\n
    }\n
    if (!v6)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v3 = *((v6 + 16));\n
    v4 = v3;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3)\n
            v0 = *(v3) != *((a0 + 2));\n
        if (!(v0 & 1))\n
            break;\n
        v4 = v3;\n
        v3 = *((v3 + 12));\n
    }\n
    if (!v3)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    if (v3 == *((v6 + 16)))\n
        *((v6 + 16)) = *((*((v6 + 16)) + 12));\n
    else\n
        *((v4 + 12)) = *((v3 + 12));\n
    if (!v5)\n
    {\n
        *((v8 + 8)) = v3;\n
    }\n
    else\n
    {\n
        for (*((v3 + 12)) = 0; *((v5 + 12)); v5 = *((v5 + 12)));\n
        *((v5 + 12)) = v3;\n
    }\n
    v9 = v6;\n
    *((v9 + 10)) = *((v9 + 10)) - *((v3 + 2));\n
    v7 = 0;\n
    return v7;\n
}\n
", "4218583:sub_405ed7": null, "4218592:cgc_receive_commands": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_commands(void* *v8)\n
{\n
    unsigned int v0;  // [bp-0x424]\n
    unsigned int v1;  // [bp-0x420]\n
    unsigned int v2;  // [bp-0x41c]\n
    unsigned int v3;  // [bp-0x418]\n
    char v4;  // [bp-0x414]\n
    char v5;  // [bp-0x410]\n
    char v6;  // [bp-0x40e]\n
    unsigned short v7[4];  // [bp-0x40c]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v3 = 8;\n
        if (cgc_receive_bytes(&v4, v3) == -1)\n
            cgc__terminate();\n
        if (*(&v4) != 305419896)\n
            cgc__terminate();\n
        if (*(&v5) > 0x400)\n
            cgc__terminate();\n
        if (cgc_receive_bytes(v7, *(&v5)) == -1)\n
            cgc__terminate();\n
        v0 = *(&v6);\n
        if (v0 == 257)\n
        {\n
            v2 = cgc_create_product(v8);\n
        }\n
        else if (v0 == 258)\n
        {\n
            v2 = cgc_create_pbi(*(v8), v7);\n
        }\n
        else if (v0 == 259)\n
        {\n
            v2 = cgc_create_sprint(*(v8));\n
        }\n
        else if (v0 == 513)\n
        {\n
            v2 = cgc_move_pbi_to_sprint(*(v8), v7);\n
        }\n
        else if (v0 == 514)\n
        {\n
            v2 = cgc_move_sbi_to_pbl(*(v8), v7);\n
        }\n
        else if (v0 == 769)\n
        {\n
            v2 = cgc_list_product(*(v8));\n
        }\n
        else if (v0 == 772)\n
        {\n
            v2 = cgc_list_all_products();\n
        }\n
        else if (v0 == 1025)\n
        {\n
            v2 = cgc_delete_pbi(*(v8), v7);\n
        }\n
        else if (v0 == 1026)\n
        {\n
            v2 = cgc_delete_sprint(*(v8));\n
        }\n
        else if (v0 == 1027)\n
        {\n
            v2 = cgc_delete_product(v8);\n
        }\n
        else if (v0 == 1281)\n
        {\n
            v2 = cgc_update_sbi_status(*(v8), v7);\n
        }\n
        else if (v0 == 1282)\n
        {\n
            v2 = cgc_update_sbi_points(*(v8), v7);\n
        }\n
        else if (v0 == 1283)\n
        {\n
            v2 = cgc_update_sbi_description(*(v8), v7);\n
        }\n
        else if (v0 == 57005)\n
        {\n
            break;\n
        }\n
    }\n
    return 0;\n
}\n
", "4219689:sub_406329": null, "4219696:cgc_send_response": "int cgc_send_response(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
\n
    v0 = 2271560481;\n
    v1 = v2;\n
    cgc_write(1, &v0, 8);\n
    return 0;\n
}\n
", "4219766:sub_406376": null, "4219776:cgc_init_database": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_database(unsigned int *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = *(v2);\n
    if (v1)\n
        return 0;\n
    v1 = cgc_malloc(20);\n
    if (v1)\n
        return 0;\n
    cgc__terminate();\n
}\n
", "4219875:sub_4063e3": null, "4219888:cgc_destroy_database": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destroy_database(struct struct_2 **v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x20]\n
    struct_0 *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_1 *v5;  // [bp-0x18]\n
    struct_1 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v7;  // [bp-0x10]\n
    struct_2 *v8;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = *(v9);\n
    while (v8)\n
    {\n
        v4 = v8->field_8;\n
        while (v4)\n
        {\n
            if (*((v4 + 8)))\n
                cgc_free(*((v4 + 8)));\n
            v3 = v4;\n
            v4 = *((v4 + 12));\n
            cgc_free(v3);\n
        }\n
        v6 = v8->field_c;\n
        while (v6)\n
        {\n
            v2 = v6->field_10;\n
            while (v2)\n
            {\n
                if (*((v2 + 8)))\n
                    cgc_free(*((v2 + 8)));\n
                v1 = v2;\n
                v2 = *((v2 + 12));\n
                cgc_free(v1);\n
            }\n
            if (v6->field_4)\n
                cgc_free(v6->field_4);\n
            v5 = v6;\n
            v6 = v6->field_14;\n
            cgc_free(v5);\n
        }\n
        if (v8->field_4)\n
            cgc_free(v8->field_4);\n
        v7 = v8;\n
        v8 = v8->field_10;\n
        cgc_free(v7);\n
    }\n
    *(v9) = 0;\n
    return 0;\n
}\n
", "4220261:sub_406565": null, "4220272:cgc_obf_strings": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_obf_strings(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v3))\n
            break;\n
        v2[764 + v1] = v2[v3] ^ 169;\n
        v2 += 1;\n
    }\n
    v2[764 + v1] = 0;\n
    return v1 + 764;\n
}\n
", "4220408:sub_4065f8": null, "4220416:cgc_create_product": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_product(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = a0;\n
    if (!*(v7))\n
    {\n
        *(v7) = cgc_calloc(20);\n
        if (!*(v7))\n
            cgc__terminate();\n
        v4 = *(v7);\n
    }\n
    else\n
    {\n
        v4 = *(v7);\n
        while (true)\n
        {\n
            v2 = 0;\n
            if (*(v4) != *(v5))\n
                v2 = *((v4 + 16));\n
            if (!(v2 & 1))\n
                break;\n
            v4 = *((v4 + 16));\n
        }\n
        if (*(v4) == *(v5))\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
        *((v4 + 16)) = cgc_calloc(20);\n
        if (!*((v4 + 16)))\n
            cgc__terminate();\n
        v4 = *((v4 + 16));\n
    }\n
    *((v4 + 16)) = 0;\n
    *(v4) = *(v5);\n
    *((v4 + 8)) = 0;\n
    *((v4 + 12)) = 0;\n
    *((v4 + 4)) = cgc_calloc(cgc_strlen(v5 + 2) + 1);\n
    if (!*((v4 + 4)))\n
        cgc__terminate();\n
    v0 = *((v4 + 4));\n
    v1 = v5 + 2;\n
    cgc_strncpy(v0, v1, cgc_strlen(v5 + 2));\n
    v6 = 0;\n
    return v6;\n
}\n
", "4220877:sub_4067cd": null, "4220880:cgc_delete_product": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_product(struct struct_2 **v9, unsigned short *a0)\n
{\n
    char v0;  // [bp-0x29]\n
    unsigned int v1;  // [bp-0x28]\n
    struct_0 *v2;  // [bp-0x24]\n
    struct_0 *v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x1c]\n
    struct_1 *v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_2 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v9))\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    else if (*(v9)->field_0 == *(a0))\n
    {\n
        v6 = *(v9);\n
        *(v9) = *(v9)->field_10;\n
        if (v6->field_4)\n
            cgc_free(v6->field_4);\n
        v5 = v6->field_c;\n
        while (v5)\n
        {\n
            v3 = *((v5 + 16));\n
            while (v3)\n
            {\n
                if (*((v3 + 8)))\n
                    cgc_free(*((v3 + 8)));\n
                v2 = v3;\n
                v3 = v3->field_c;\n
                cgc_free(v2);\n
            }\n
            if (v5->field_4)\n
                cgc_free(v5->field_4);\n
            v4 = v5;\n
            v5 = v5->field_14;\n
            cgc_free(v4);\n
        }\n
        v3 = v6->field_8;\n
        while (v3)\n
        {\n
            if (*((v3 + 8)))\n
                cgc_free(*((v3 + 8)));\n
            v2 = v3;\n
            v3 = *((v3 + 12));\n
            cgc_free(v2);\n
        }\n
        cgc_free(v6);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        v7 = *(v9);\n
        v6 = *(v9)->field_10;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v6)\n
                v0 = v6->field_0 != *(a0);\n
            if (!(v0 & 1))\n
                break;\n
            v7 = v6;\n
            v6 = *((v6 + 16));\n
        }\n
        if (!v6)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        *((v7 + 16)) = *((v6 + 16));\n
        if (v6->field_4)\n
            cgc_free(*((v6 + 4)));\n
        v3 = *((v6 + 8));\n
        while (v3)\n
        {\n
            v2 = v3;\n
            if (*((v3 + 8)))\n
                cgc_free(*((v3 + 8)));\n
            v3 = *((v3 + 12));\n
            cgc_free(v2);\n
        }\n
        v5 = *((v6 + 12));\n
        while (v5)\n
        {\n
            v3 = v5->field_10;\n
            while (v3)\n
            {\n
                if (*((v3 + 8)))\n
                    cgc_free(v3->field_8);\n
                v2 = v3;\n
                v3 = v3->field_c;\n
                cgc_free(v2);\n
            }\n
            if (v5->field_4)\n
                cgc_free(v5->field_4);\n
            v4 = v5;\n
            v5 = v5->field_14;\n
            cgc_free(v4);\n
        }\n
        cgc_free(v6);\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4221713:sub_406b11": null, "4221728:cgc_list_all_products": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_all_products(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        v0 = v3->field_4;\n
        cgc_printf(cgc_obf_strings(v1 + 234));\n
        v3 = v3->field_10;\n
    }\n
}\n
", "4221877:sub_406bb5": null, "4221888:cgc_list_product": "typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
    struct struct_2 *field_10;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char padding_6[6];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    struct struct_0 *field_10;\n
    struct struct_1 *field_14;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_product(struct_2 *v8, unsigned short *a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x1d]\n
    unsigned int v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_1 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(a0))\n
    {\n
        cgc_list_all_products(v8);\n
        v7 = 0;\n
        return v7;\n
    }\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (v8)\n
            v3 = v8->field_0 != *(a0);\n
        if (!(v3 & 1))\n
            break;\n
        v8 = v8->field_10;\n
    }\n
    if (!v8)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    cgc_printf(v4 - 4216);\n
    v0 = *((v8 + 4));\n
    cgc_printf(cgc_obf_strings(v4 + 86));\n
    v0 = v8->field_0;\n
    cgc_printf(cgc_obf_strings(v4 + 105));\n
    cgc_printf(v4 - 4216);\n
    v5 = *((v8 + 8));\n
    cgc_printf(cgc_obf_strings(v4 + 124));\n
    cgc_printf(cgc_obf_strings(v4 + 142));\n
    for (; v5; v5 = *((v5 + 12)))\n
    {\n
        v0 = *(v5);\n
        v1 = *((v5 + 2));\n
        cgc_printf(cgc_obf_strings(v4 + 166));\n
    }\n
    cgc_printf(v4 - 4216);\n
    v6 = *((v8 + 12));\n
    cgc_printf(cgc_obf_strings(v4 + 180));\n
    for (; v6; v6 = v6->field_14)\n
    {\n
        v0 = *(v6);\n
        v1 = *((v6 + 4));\n
        cgc_printf(cgc_obf_strings(v4 + 190));\n
        for (v5 = *((v6 + 16)); v5; v5 = v5->field_c)\n
        {\n
            v0 = *(v5);\n
            v1 = *((v5 + 2));\n
            v2 = v5->field_4;\n
            cgc_printf(cgc_obf_strings(v4 + 207));\n
        }\n
        cgc_printf(v4 - 4216);\n
    }\n
    cgc_printf(v4 - 4216);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4222578:sub_406e72": null, "4222592:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    char v6;  // [bp-0x4]\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
\n
    v8 = &v6;\n
    v5 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v2 = 0;\n
    v3 = cgc_calc_version();\n
    v0 = v3;\n
    cgc_printf(cgc_obf_strings(v1 + 52));\n
    cgc_receive_commands(&v2);\n
    cgc_destroy_database(&v2);\n
    v10 = v1;\n
    cgc__terminate();\n
    cgc_create_sprint();\n
    return;\n
}\n
", "4222736:cgc_create_sprint": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[10];\n
    struct struct_0 *field_c;\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned short field_c;\n
    char padding_e[2];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_sprint(struct_1 *v7, unsigned short a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    struct_0 *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (v7)\n
            v2 = v7->field_0 != a0[0];\n
        if (!(v2 & 1))\n
            break;\n
        v7 = v7->field_10;\n
    }\n
    if (!v7)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v5 = cgc_calloc(24);\n
    if (!v5)\n
        cgc__terminate();\n
    v5->field_0 = a0[1];\n
    v5->field_4 = cgc_calloc(cgc_strlen(a0 + 1) + 1);\n
    if (!v5->field_4)\n
        cgc__terminate();\n
    v0 = v5->field_4;\n
    v1 = a0 + 1;\n
    cgc_strncpy(v0, v1, cgc_strlen(a0 + 1));\n
    v5->field_8 = 0;\n
    v5->field_a = 0;\n
    v5->field_c = 0;\n
    v5->field_10 = 0;\n
    v5->field_14 = 0;\n
    if (!*((v7 + 12)))\n
    {\n
        *((v7 + 12)) = v5;\n
        v6 = 0;\n
        return v6;\n
    }\n
    for (v4 = *((v7 + 12)); *((v4 + 20)); v4 = *((v4 + 20)));\n
    *((v4 + 20)) = v5;\n
    v6 = 0;\n
    return v6;\n
}\n
", "4223176:sub_4070c8": null, "4223184:cgc_delete_sprint": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    char padding_2[10];\n
    struct struct_0 *field_c;\n
    struct struct_1 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_delete_sprint(struct_1 *v6, unsigned short a0[2])\n
{\n
    char v0;  // [bp-0x1a]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v6)\n
            v1 = v6->field_0 != a0[0];\n
        if (!(v1 & 1))\n
            break;\n
        v6 = v6->field_10;\n
    }\n
    if (!v6)\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (!*((v6 + 12)))\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    else if (*(*((v6 + 12))) != a0[1])\n
    {\n
        v3 = *((v6 + 12));\n
        v4 = v3->field_14;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v4)\n
                v0 = *(v4) != a0[1];\n
            if (!(v0 & 1))\n
                break;\n
            v3 = v4;\n
            v4 = v4->field_14;\n
        }\n
        if (!v4)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*((v4 + 16)))\n
        {\n
            *((v3 + 20)) = *((v4 + 20));\n
            if (*((v4 + 4)))\n
                cgc_free(*((v4 + 4)));\n
            cgc_free(v4);\n
            v5 = 0;\n
            return v5;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    else if (!*((*((v6 + 12)) + 16)))\n
    {\n
        v4 = *((v6 + 12));\n
        *((v6 + 12)) = *((v4 + 20));\n
        if (*((v4 + 4)))\n
            cgc_free(v4->field_4);\n
        cgc_free(v4);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
}\n
", "4223667:sub_4072b3": null, "4223680:cgc_calc_version": "typedef struct struct_0 {\n
    char padding_0[1128775680];\n
    unsigned int field_4347c000;\n
} struct_0;\n
\n
int cgc_calc_version()\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    for (v1 = 0; v1 < 0x400; v1 += 1)\n
    {\n
        v0 = *((v1 * 4 + 0x4347c000)) + v0;\n
    }\n
    return v0;\n
}\n
", "4223756:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}