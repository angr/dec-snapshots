{"4202496:_init": "extern struct_0 *g_40833c;\n
\n
int _init()\n
{\n
    if (g_40833c)\n
    {\n
        g_40833c();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202640:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202656:sub_4020a0": "int sub_4020a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202662:sub_4020a6": null, "4202672:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202715:sub_4020db": null, "4202716:sub_4020dc": "int sub_4020dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202720:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202724:sub_4020e4": null, "4202736:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 25171;\n
    v6 = v5 + 25;\n
    v7 = v5 + 25;\n
    if (v7 == v6)\n
        return v5 + 25;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202787:sub_402123": "int sub_402123()\n
{\n
}\n
", "4202793:sub_402129": "int sub_402129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202800:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 25107;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 25;\n
    v9 = (v6 + 25 - (v6 + 25) >> 31) + (25 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202871:sub_402177": "int sub_402177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202880:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408338;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408338)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202955:sub_4021cb": "int sub_4021cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202960:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202969:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202973:sub_4021dd": null, "4202976:cgc_is_non_printable": "int cgc_is_non_printable(char v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return 0 == cgc_is_printable(v1, *(&v0));\n
}\n
", "4203028:sub_402214": null, "4203040:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (cgc_is_digit())\n
        return v2 & 1;\n
    v0 = v4;\n
    v2 = 1;\n
    if (cgc_is_letter())\n
        return v2 & 1;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_is_symbol())\n
    {\n
        v0 = v4;\n
        v2 = cgc_is_white_space();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203193:sub_4022b9": null, "4203200:cgc_is_digit": "int cgc_is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (48 <= v2)\n
        v1 = v2 <= 57;\n
    return v1 & 1;\n
}\n
", "4203255:sub_4022f7": null, "4203264:cgc_is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_is_upper())\n
    {\n
        v0 = v4;\n
        v2 = cgc_is_lower();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203355:sub_40235b": null, "4203360:cgc_is_symbol": "int cgc_is_symbol(char v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x6]\n
    char v2;  // [bp-0x5]\n
    unsigned int v4;  // eax\n
\n
    v0 = v4;\n
    if (33 <= v3)\n
    {\n
        v2 = 1;\n
        if (v3 <= 64)\n
            return v2 & 1;\n
    }\n
    if (91 <= v3)\n
    {\n
        v2 = 1;\n
        if (v3 <= 96)\n
            return v2 & 1;\n
    }\n
    v1 = 0;\n
    if (123 <= v3)\n
        v1 = v3 <= 126;\n
    v2 = v1;\n
    return v2 & 1;\n
}\n
", "4203491:sub_4023e3": null, "4203504:cgc_is_white_space": "int cgc_is_white_space(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 32)\n
    {\n
        v1 = 1;\n
        if (v2 != 10)\n
        {\n
            v1 = 1;\n
            if (v2 != 9)\n
                v1 = 13 == v2;\n
        }\n
    }\n
    return v1 & 1;\n
}\n
", "4203607:sub_402457": null, "4203616:cgc_is_upper": "int cgc_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (65 <= v2)\n
        v1 = v2 <= 90;\n
    return v1 & 1;\n
}\n
", "4203671:sub_402497": null, "4203680:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (97 <= v2)\n
        v1 = v2 <= 122;\n
    return v1 & 1;\n
}\n
", "4203735:sub_4024d7": null, "4203744:cgc_is_hex_digit": "int cgc_is_hex_digit(char v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (65 <= v1 && 70 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (97 <= v1 && 102 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (48 <= v1 && 57 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203904:cgc_ascii_hex_to_bin": "int cgc_ascii_hex_to_bin(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 70 >= v2)\n
    {\n
        v1 = v2 + -55;\n
        return v1;\n
    }\n
    if (97 <= v2 && 102 >= v2)\n
    {\n
        v1 = v2 + -87;\n
        return v1;\n
    }\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = v2 - 48;\n
        return v1;\n
    }\n
    v1 = 255;\n
    return v1;\n
}\n
", "4204077:sub_40262d": null, "4204080:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4204353:sub_402741": null, "4204368:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x29]\n
    unsigned int v5;  // [bp-0x28]\n
    struct_0 *v6;  // [bp-0x24]\n
    unsigned int *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int *v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < v6->field_2c)\n
        v13 = v6->field_2c;\n
    if (v13 > 4095)\n
    {\n
        v12 = cgc_allocate_large_chunk();\n
        return v12;\n
    }\n
    v5 = cgc_log_base_two();\n
    v10 = v5 - cgc_log_base_two();\n
    if (v10 >= 8)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (!v11)\n
            v4 = v10 < 8;\n
        if (!(v4 & 1))\n
            break;\n
        v14 = v6;\n
        v15 = v10;\n
        v10 = v15 + 1;\n
        v0 = v13;\n
        v9 = cgc_list_find(&v14[2].padding_0[8 + 8 * v15], &v14[472].padding_0[8]);\n
        if (!v9)\n
            v3 = 0;\n
        else\n
            v3 = -5 + v9;\n
        v8 = v3;\n
        v11 = v8;\n
    }\n
    if (!v11)\n
    {\n
        v11 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v7 = v11;\n
        v2 = &v6[2].padding_0[8 + 8 + 8 * v10];\n
        if (!v7)\n
            v1 = 0;\n
        else\n
            v1 = v7 + 1;\n
        cgc_list_remove(v2);\n
    }\n
    cgc_mark_allocated();\n
    if ((*(v11) & -2) > v13)\n
        v11 = cgc_split_chunk(v11);\n
    v12 = cgc_chunk_to_ptr();\n
    return v12;\n
}\n
", "4204926:sub_40297e": null, "4204928:cgc_allocate_large_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_large_chunk(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = v5;\n
    cgc_mark_allocated();\n
    v3 = cgc_chunk_to_ptr();\n
    return v3;\n
}\n
", "4205050:sub_4029fa": null, "4205056:cgc_log_base_two": "int cgc_log_base_two(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4205110:sub_402a36": null, "4205120:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = a1;\n
        if (a0(v2))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = *(v2);\n
    }\n
}\n
", "4205244:sub_402abc": null, "4205248:cgc_find_fit": "int cgc_find_fit(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v4 = a0;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4205348:sub_402b24": null, "4205360:cgc_grow_heap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_grow_heap()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0x1000;\n
    cgc_mark_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205470:sub_402b9e": null, "4205472:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4205582:sub_402c0e": null, "4205584:cgc_mark_allocated": "int cgc_mark_allocated(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) | 1;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4205622:sub_402c36": null, "4205632:cgc_split_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_sizes;\n
\n
int cgc_split_chunk(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4 + a0;\n
    v1 = *(v4) & -2;\n
    if ((*(v4) & -2) <= a0 + size_class_sizes)\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
    *(v4) = a0;\n
    cgc_mark_allocated(v4);\n
    *(v2) = v1 - a0;\n
    cgc_mark_allocated(v2);\n
    cgc_chunk_to_ptr();\n
    cgc_free();\n
    v3 = v4;\n
    return v3;\n
}\n
", "4205803:sub_402ceb": null, "4205808:cgc_chunk_to_ptr": "int cgc_chunk_to_ptr(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4205826:sub_402d02": null, "4205840:cgc_free": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc_ptr_to_chunk();\n
    v4 = v8;\n
    if (!v6)\n
        return v8;\n
    cgc_mark_free();\n
    v4 = cgc_coalesce();\n
    v1 = cgc_log_base_two(*(v4) & -2);\n
    v3 = v1 - cgc_log_base_two(v2->field_2c);\n
    if (v3 >= 8)\n
        v3 = 7;\n
    v9 = v2;\n
    v0 = &v9[437].padding_0[40];\n
    v8 = cgc_list_insert_in_order(&v9[2].padding_0[8 + 8 * v3], v4 + 1);\n
    return v8;\n
}\n
", "4206042:sub_402dda": null, "4206048:cgc_ptr_to_chunk": "int cgc_ptr_to_chunk(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4206117:sub_402e25": null, "4206128:cgc_mark_free": "int cgc_mark_free(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) & -2;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4206166:sub_402e56": null, "4206176:cgc_coalesce": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_1 *v12)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v12 & 4095))\n
        v10 = v12 + -(v12->field_0 & -2);\n
    if (((v12 + (v12->field_-4 & -2)) & 4095))\n
        v11 = v12 + (v12->field_-4 & -2);\n
    if (v10 && !(*(v10) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v10) & -2);\n
        v9 = v5 - cgc_log_base_two(v6->field_2c);\n
        if (v9 < 8)\n
        {\n
            v8 = v10;\n
            v4[0] = &v6[2].padding_0[8 + 8 * v9];\n
            if (!v8)\n
                v3 = 0;\n
            else\n
                v3 = v8 + 1;\n
            cgc_list_remove(v4, v3);\n
            *(v10) = (v12->field_-4 & -2) + (*(v10) & -2);\n
            cgc_mark_free(v10);\n
            v12 = v10;\n
        }\n
    }\n
    if (!v11)\n
    {\n
        return v12;\n
    }\n
    else if ((*(v11) & 1))\n
    {\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v11) & -2);\n
        v9 = v2 - cgc_log_base_two(v6->field_2c);\n
        if (v9 >= 8)\n
            return v12;\n
        v7 = v11;\n
        v1[0] = &v6[2].padding_0[8 + 8 * v9];\n
        if (!v7)\n
            v0 = 0;\n
        else\n
            v0 = v7 + 1;\n
        cgc_list_remove(v1, v0);\n
        *(v12) = (*(v12) & -2) + (*(v11) & -2);\n
        cgc_mark_free(v12);\n
    }\n
}\n
", "4206729:sub_403089": null, "4206736:cgc_list_insert_in_order": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_in_order(struct struct_0 **v3, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = cgc_list_push_back(v3);\n
            return v4;\n
        }\n
        else if (a1(a0) < 0)\n
        {\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v0 = a0;\n
            v4 = cgc_list_insert_before(v3, v2);\n
            return v4;\n
        }\n
    }\n
}\n
", "4206893:sub_40312d": null, "4206896:cgc_size_cmp": "int cgc_size_cmp(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
\n
    v6 = v8;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4207047:sub_4031c7": null, "4207056:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(v4);\n
    if (v2)\n
    {\n
        v0 = v4;\n
        cgc_memset(v2, 0);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207145:sub_403229": null, "4207152:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v8)\n
    {\n
        v7 = cgc_malloc(a0);\n
        return v7;\n
    }\n
    v6 = (*(cgc_ptr_to_chunk(v8)) & -2) - 8;\n
    if (a0 == v6)\n
    {\n
        v7 = v8;\n
        return v7;\n
    }\n
    v5 = cgc_malloc(a0);\n
    v2 = v5;\n
    v3 = v8;\n
    if (a0 < v6)\n
        v1 = a0;\n
    else\n
        v1 = v6;\n
    v0 = v1;\n
    cgc_memcpy(v2, v3);\n
    cgc_free(v8);\n
    v7 = v5;\n
    return v7;\n
}\n
", "4207375:sub_40330f": null, "4207376:cgc_list_insert_before": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_insert_before(struct_1 *v0, struct_3 *a0, unsigned int a1[2])\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4207632:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push_back(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_list_insert_after(v1, v1->field_4);\n
}\n
", "4207691:sub_40344b": null, "4207696:cgc_list_insert_after": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_after(void* *v1, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0)\n
    {\n
        v2 = cgc_list_insert_before(v1, *(a0), a1);\n
        return v2;\n
    }\n
    v2 = cgc_list_insert_before(v1, *(v1), a1);\n
    return v2;\n
}\n
", "4207808:cgc_memcmp": "int cgc_memcmp(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a1 > v1)\n
            v0 = *((v3 + v1)) == *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (a1 == v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*((v3 + v1)) <= *((a0 + v1)))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4208012:sub_40358c": null, "4208016:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4208104:sub_4035e8": null, "4208112:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4208182:sub_403636": null, "4208192:cgc_read_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = a0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v5, v4 + v3, a1))\n
            break;\n
        if (!v2)\n
            break;\n
        v3 = v2 + v3;\n
        a1 -= v2;\n
    }\n
    return v3;\n
}\n
", "4208351:sub_4036df": null, "4208352:cgc_recv_all": "int cgc_recv_all(unsigned int v0, unsigned int a0)\n
{\n
    return cgc_read_all(0, v0, a0);\n
}\n
", "4208411:sub_40371b": null, "4208416:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    if (cgc_sendall(1, v3))\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4208502:sub_403776": null, "4208512:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v3;\n
        v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
        if (v2)\n
        {\n
            v5 = -6;\n
            return v5;\n
        }\n
        v4 = v3 + v4;\n
    }\n
}\n
", "4208716:sub_40384c": null, "4208720:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *(v1); v1 += 1)\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4208780:sub_40388c": null, "4208784:cgc_strncmp": "int cgc_strncmp(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a1 > v1)\n
        {\n
            v0 = 0;\n
            if (*((v3 + v1)))\n
            {\n
                v0 = 0;\n
                if (*((a0 + v1)))\n
                    v0 = *((v3 + v1)) == *((a0 + v1));\n
            }\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (a1 == v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*((v3 + v1)) <= *((a0 + v1)))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4209038:sub_40398e": null, "4209040:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4209195:sub_403a2b": null, "4209200:cgc_vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsnprintf(unsigned int v11, unsigned int a0, char *a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    void* v2;  // [bp-0x4c], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x48]\n
    char v4;  // [bp-0x44]\n
    struct_0 *v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x1d]\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x15]\n
    char *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v12;  // eax\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // eax\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v9 = a1;\n
    if (!v9)\n
        v9 = v1 - 8898;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!*(v9))\n
                {\n
                    if (a0 <= 0)\n
                        return v10;\n
                    if (v10 < a0)\n
                        *((v11 + v10)) = 0;\n
                    else\n
                        *((v11 + a0 - 1)) = 0;\n
                    return v10;\n
                }\n
                if (*(v9) != 126)\n
                {\n
                    if (v10 < a0)\n
                    {\n
                        v12 = v9;\n
                        v9 = v12 + 1;\n
                        v13 = v10;\n
                        v10 = v13 + 1;\n
                        *((v11 + v13)) = *(v12);\n
                    }\n
                    else\n
                    {\n
                        v10 += 1;\n
                        v9 += 1;\n
                    }\n
LABEL_403ada:\n
                    continue;\n
                }\n
                v8 = 0;\n
                v7 = 0;\n
                v6 = 0;\n
                v5 = 0;\n
                v3 = 0;\n
                v2 = 0;\n
                v9 += 1;\n
            } while (!*(v9));\n
            v8 = *(v9);\n
            v0 = v8;\n
            if (v0 == 99)\n
            {\n
                v14 = a2;\n
                a2 = v14 + 1;\n
                v5 = *(v14);\n
                if (!v5)\n
                    v7 = 0;\n
                else\n
                    v7 = cgc_strlen(v5);\n
            }\n
            else if (v0 == 110)\n
            {\n
                v15 = a2;\n
                a2 = v15 + 1;\n
                v3 = *(v15);\n
                cgc_int2str(&v4, 32, v3);\n
                v5 = &v4;\n
                v7 = cgc_strlen(v5);\n
            }\n
            else if (v0 == 111)\n
            {\n
                v16 = a2;\n
                a2 = v16 + 1;\n
                v6 = *(v16);\n
                if (!v5)\n
                    v7 = 0;\n
                else\n
                    v7 = 1;\n
            }\n
            v9 += 1;\n
            v2 = a0 - v10;\n
            if (0 <= v2)\n
                break;\n
            v10 = v7 + v10;\n
        }\n
        if (v8 != 110 && !(v8 == 99))\n
            goto LABEL_403cc1;\n
        if (v7 <= v2)\n
        {\n
            cgc_memcpy(v11 + v10, v5, v7);\n
            v10 = v7 + v10;\n
        }\n
        else\n
        {\n
            cgc_memcpy(v11 + v10, v5, v2);\n
            v10 = v2 + v10;\n
        }\n
LABEL_403cc1:\n
        if (v8 == 111 && v7 <= v2)\n
        {\n
            *((v11 + v10)) = v6;\n
            v10 = v7 + v10;\n
        }\n
        goto LABEL_403ada;\n
    }\n
}\n
", "4209988:sub_403d44": null, "4210000:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, char *a1)\n
{\n
    char **v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vsnprintf(v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4210080:cgc_init_dispenser": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_bowl_set;\n
extern char cgc_ready;\n
extern char cgc_units;\n
\n
int cgc_init_dispenser()\n
{\n
    cgc_bowl_set = 0;\n
    cgc_units = 0;\n
    cgc_ready = 1;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4210118:sub_403dc6": null, "4210128:cgc_dispense_bowl": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_bowl_set;\n
\n
int cgc_dispense_bowl()\n
{\n
    cgc_bowl_set = 1;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4210152:sub_403de8": null, "4210160:cgc_completion_buzzer": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_ready;\n
\n
int cgc_completion_buzzer()\n
{\n
    cgc_ready = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4210184:sub_403e08": null, "4210192:cgc_dispense_dairy_milk": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_dairy_milk()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210224:cgc_dispense_dairy_cream": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_dairy_cream()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210256:cgc_dispense_water": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_water()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210288:cgc_dispense_soy_milk": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_soy_milk()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210320:cgc_dispense_almond_milk": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_almond_milk()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210352:cgc_dispense_sugar_loops": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_sugar_loops()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210384:cgc_dispense_maize_flakes": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_maize_flakes()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210416:cgc_dispense_marshmallow_figuringes": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_marshmallow_figuringes()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210448:cgc_dispense_chocolate_rice_pellets": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_chocolate_rice_pellets()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210480:cgc_dispense_oohs_of_oats": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_oohs_of_oats()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210512:cgc_dispense_crunchy_puffs": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_crunchy_puffs()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210544:cgc_dispense_frutiz_n_nuts": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_frutiz_n_nuts()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210576:cgc_dispense_chocolate_drops": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_chocolate_drops()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210608:cgc_dispense_blueberries": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_blueberries()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210640:cgc_dispense_berry_medley": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_berry_medley()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210672:cgc_dispense_sugar_cube": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_sugar_cube()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210704:cgc_dispense_strawberries": "typedef struct struct_0 {\n
    char padding_0[169];\n
    char field_a9;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_strawberries()\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1->field_a9 = v1->field_a9 + 1;\n
    return &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
}\n
", "4210736:cgc_reset_buffers": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_reset_buffers()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < 5; v4 = v6)\n
    {\n
        if (*((v1 + (v4 << 2) + 172)))\n
        {\n
            v0 = *((v1 + v4 * 4 + 172));\n
            *((*((v7 + v4 * 4 + 172)) + 20))();\n
            *((v1 + v4 * 4 + 172)) = 0;\n
        }\n
        v6 = v4 + 1;\n
    }\n
    for (v3 = 0; v3 < 7; v3 = v6)\n
    {\n
        if (*((v1 + (v3 << 2) + 192)))\n
        {\n
            v0 = *((v1 + v3 * 4 + 192));\n
            *((*((v8 + v3 * 4 + 192)) + 20))();\n
            *((v1 + v3 * 4 + 192)) = 0;\n
        }\n
        v6 = v3 + 1;\n
    }\n
    for (v2 = 0; v2 < 5; v2 = v6)\n
    {\n
        if (*((v1 + (v2 << 2) + 220)))\n
        {\n
            v0 = *((v1 + v2 * 4 + 220));\n
            *((*((v9 + v2 * 4 + 220)) + 24))();\n
            *((v1 + v2 * 4 + 220)) = 0;\n
        }\n
        v6 = v2 + 1;\n
    }\n
    return v6;\n
}\n
", "4211076:sub_404184": null, "4211088:cgc_units_of_liquids": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_units_of_liquids()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; v1 < 5; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 172)))\n
            v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4211190:sub_4041f6": null, "4211200:cgc_units_of_cereals": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_units_of_cereals()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; v1 < 7; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 192)))\n
            v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4211302:sub_404266": null, "4211312:cgc_units_of_toppings": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_units_of_toppings()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; v1 < 5; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 220)))\n
            v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4211414:sub_4042d6": null, "4211424:cgc_dispense_liquid": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_liquid()\n
{\n
    cgc_dispense_almond_milk();\n
    return;\n
}\n
", "4211557:sub_404365": null, "4211568:cgc_dispense_cereal": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_cereal()\n
{\n
    cgc_dispense_frutiz_n_nuts();\n
    return;\n
}\n
", "4211727:sub_40440f": null, "4211728:cgc_dispense_toppings": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_toppings()\n
{\n
    cgc_dispense_strawberries();\n
    return;\n
}\n
", "4211861:sub_404495": null, "4211872:cgc_dispense_breakfast": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dispense_breakfast()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_init_dispenser();\n
    cgc_send(v0 - 8956, 4);\n
    cgc_dispense_bowl();\n
    if (cgc_units_of_cereals())\n
    {\n
        cgc_send(v0 - 8952, 4);\n
        for (v3 = 0; v3 < 7; v3 += 1)\n
        {\n
            if (*((v0 + (v3 << 2) + 192)))\n
                cgc_dispense_cereal();\n
        }\n
    }\n
    if (cgc_units_of_liquids())\n
    {\n
        cgc_send(v0 - 8948, 4);\n
        for (v2 = 0; v2 < 5; v2 += 1)\n
        {\n
            if (*((v0 + (v2 << 2) + 172)))\n
                cgc_dispense_liquid();\n
        }\n
    }\n
    if (cgc_units_of_toppings())\n
    {\n
        cgc_send(v0 - 8944, 4);\n
        for (v1 = 0; v1 < 5; v1 += 1)\n
        {\n
            if (*((v0 + (v1 << 2) + 220)))\n
                cgc_dispense_toppings();\n
        }\n
    }\n
    cgc_send(v0 - 8940, 4);\n
    return cgc_completion_buzzer();\n
}\n
", "4212334:sub_40466e": null, "4212336:cgc_process_plain_input": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_plain_input(struct_1 *v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    void* v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    struct struct_0 *v4[7];  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct struct_0 *v5[6];  // [bp-0x28], Other Possible Types: unsigned int\n
    struct struct_0 *v6[6];  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    char v8;  // [bp-0x19]\n
    unsigned int v9;  // [bp-0x18]\n
    char *v10;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
\n
    v12 = v14;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = &v13[1].padding_0[0];\n
    v9 = &v10[v13->field_4];\n
    v8 = 0;\n
    v3 = 0;\n
    cgc_reset_buffers();\n
    while (true)\n
    {\n
        if (v10 >= v9)\n
        {\n
            cgc_dispense_breakfast();\n
            v11 = 0;\n
            return v11;\n
        }\n
        v7 = *(v10);\n
        v10 += 4;\n
        v1 = v7;\n
        if (!v1)\n
        {\n
            v8 = *(v10);\n
            v10 += 1;\n
            if (v8 >= 5)\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            if (*((v2 + (v8 << 2) + 172)))\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            v6[0] = cgc_constructor_liquids();\n
            v0 = v8;\n
            v3 = v6[4](v6, v7);\n
            if (0 > v3)\n
            {\n
                v6[5]();\n
                v6 = 0;\n
            }\n
            *((v2 + v8 * 4 + 172)) = v6;\n
        }\n
        else if (v1 == 1)\n
        {\n
            v8 = *(v10);\n
            v10 += 1;\n
            if (v8 >= 7)\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            if (*((v2 + (v8 << 2) + 192)))\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            v5[0] = cgc_constructor_cereals();\n
            v0 = v8;\n
            v3 = v5[4](v5, v7);\n
            if (0 > v3)\n
            {\n
                v5[5]();\n
                v5 = 0;\n
            }\n
            *((v2 + v8 * 4 + 192)) = v5;\n
        }\n
        else\n
        {\n
            if (v1 != 2)\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            v8 = *(v10);\n
            v10 += 1;\n
            if (v8 >= 5)\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            if (*((v2 + (v8 << 2) + 220)))\n
            {\n
                v11 = -1;\n
                return v11;\n
            }\n
            v4[0] = cgc_constructor_toppings();\n
            v0 = v8;\n
            v3 = v4[5](v4, v7);\n
            if (0 > v3)\n
            {\n
                v4[6]();\n
                v4 = 0;\n
            }\n
            *((v2 + v8 * 4 + 220)) = v4;\n
        }\n
    }\n
}\n
", "4213063:sub_404947": null, "4213072:cgc_process_serialized_input": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    char padding_10[4];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_0 *field_18;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_serialized_input(struct_2 *v12)\n
{\n
    struct struct_4 **v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    struct_3 *v3;  // [bp-0x28]\n
    struct_1 *v4;  // [bp-0x24]\n
    struct_1 *v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int *v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = &v12[1].padding_0[0];\n
    v7 = v8 + v12->field_4;\n
    cgc_reset_buffers();\n
    while (true)\n
    {\n
        if (v8 < v7)\n
        {\n
            v6 = *(v8);\n
            v1 = v6;\n
            if (!v1)\n
            {\n
                v5 = cgc_deserialize_liquids();\n
                if (!v5)\n
                {\n
                    v10 = -1;\n
                    return v10;\n
                }\n
                if (*((v2 + (v5->field_c << 2) + 172)))\n
                {\n
                    v5->field_14();\n
                    v10 = -1;\n
                    return v10;\n
                }\n
                *((v2 + v5->field_c * 4 + 172)) = v5;\n
            }\n
            else if (v1 == 1)\n
            {\n
                v4 = cgc_deserialize_cereals();\n
                if (!v4)\n
                {\n
                    v10 = -1;\n
                    return v10;\n
                }\n
                if (*((v2 + (v4->field_c << 2) + 192)))\n
                {\n
                    v4->field_14();\n
                    v10 = -1;\n
                    return v10;\n
                }\n
                *((v2 + v4->field_c * 4 + 192)) = v4;\n
            }\n
            else if (v1 != 2)\n
            {\n
                v0 = &v8;\n
                v9 = cgc_check_inherited_types(v6);\n
                if (v9 == -1)\n
                {\n
                    v10 = -1;\n
                    return v10;\n
                }\n
            }\n
            else\n
            {\n
                v3 = cgc_deserialize_toppings();\n
                if (!v3)\n
                {\n
                    v10 = -1;\n
                    return v10;\n
                }\n
                if (*((v2 + (v3->field_10 << 2) + 220)))\n
                {\n
                    v3->field_18();\n
                    v10 = -1;\n
                    return v10;\n
                }\n
                *((v2 + v3->field_10 * 4 + 220)) = v3;\n
            }\n
        }\n
        else\n
        {\n
            cgc_dispense_breakfast();\n
            v10 = 0;\n
            return v10;\n
        }\n
    }\n
}\n
", "4213634:sub_404b82": null, "4213648:cgc_set_data_liquids": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *typeName;\n
\n
int cgc_set_data_liquids(unsigned int v4[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = a0;\n
    v1 = &v4[1];\n
    v2 = typeName;\n
    cgc_memcpy(v1, v2, cgc_strlen(typeName));\n
    v4[3] = a1;\n
    v6 = v3;\n
    return 0;\n
}\n
", "4213761:sub_404c01": null, "4213776:cgc_destructor_liquids": "int cgc_destructor_liquids(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4213813:sub_404c35": null, "4213824:cgc_constructor_liquids": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_constructor_liquids()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ecx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_malloc(24);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1[4] = v5 - 14264;\n
    v1[5] = v5 - 14136;\n
    return v1;\n
}\n
", "4213923:sub_404ca3": null, "4213936:cgc_set_data_cereals": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_408398;\n
\n
int cgc_set_data_cereals(unsigned int v4[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = a0;\n
    v1 = &v4[1];\n
    v2 = g_408398;\n
    cgc_memcpy(v1, v2, cgc_strlen(g_408398));\n
    v4[3] = a1;\n
    v6 = v3;\n
    return 0;\n
}\n
", "4214049:sub_404d21": null, "4214064:cgc_destructor_cereals": "int cgc_destructor_cereals(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4214101:sub_404d55": null, "4214112:cgc_constructor_cereals": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_constructor_cereals()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ecx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_malloc(24);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1[4] = v5 - 13976;\n
    v1[5] = v5 - 13848;\n
    return v1;\n
}\n
", "4214211:sub_404dc3": null, "4214224:cgc_set_data_toppings": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_40839c;\n
\n
int cgc_set_data_toppings(unsigned int v4[5], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = a0;\n
    v1 = &v4[1];\n
    v2 = g_40839c;\n
    cgc_memcpy(v1, v2, cgc_strlen(g_40839c));\n
    v4[4] = a1;\n
    v6 = v3;\n
    return 0;\n
}\n
", "4214337:sub_404e41": null, "4214352:cgc_destructor_toppings": "int cgc_destructor_toppings(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4214389:sub_404e75": null, "4214400:cgc_constructor_toppings": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_constructor_toppings()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[7];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ecx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_malloc(28);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1[5] = v5 - 13688;\n
    v1[6] = v5 - 13560;\n
    return v1;\n
}\n
", "4214499:sub_404ee3": null, "4214512:cgc_set_data_generic_string": "typedef struct struct_2 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[88];\n
    char *field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    char *field_14;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_data_generic_string(struct_1 *v5, unsigned int a0, char *a1)\n
{\n
    char *v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    struct_2 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v2;\n
    v3 = cgc_strlen(a1);\n
    v5->field_0 = a0;\n
    v0 = &v5->padding_4[0];\n
    v1 = v7->field_58;\n
    cgc_memcpy(v0, v1, cgc_strlen(v7->field_58));\n
    v5->field_14 = cgc_malloc(v3);\n
    if (!v5->field_14)\n
        cgc__terminate();\n
    cgc_memcpy(v5->field_14, a1, v3);\n
    return 0;\n
}\n
", "4214715:sub_404fbb": null, "4214720:cgc_destructor_generic_string": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destructor_generic_string(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14)\n
        cgc_free(v1->field_14);\n
    return cgc_free(v1);\n
}\n
", "4214796:sub_40500c": null, "4214800:cgc_constructor_generic_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_constructor_generic_string()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[8];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ecx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_calloc(32);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1[6] = v5 - 13400;\n
    v1[7] = v5 - 13192;\n
    return v1;\n
}\n
", "4214899:sub_405073": null, "4214912:cgc_set_data_printer_string": "typedef struct struct_1 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[92];\n
    char *field_5c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    char *field_14;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_data_printer_string(struct_0 *v7, unsigned int a0, char *a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    char *v1;  // [bp-0x1c]\n
    char *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_2 *v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = v0;\n
    v4 = cgc_strlen(a1);\n
    v7->field_0 = a0;\n
    v1 = &v7->padding_4[0];\n
    v2 = v9->field_5c;\n
    cgc_memcpy(v1, v2, cgc_strlen(v9->field_5c));\n
    for (v3 = 0; v3 < v4; v3 += 1)\n
    {\n
        if (!cgc_is_printable(a1[v3]))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    v7->field_14 = cgc_malloc(v4);\n
    if (!v7->field_14)\n
        cgc__terminate();\n
    cgc_memcpy(v7->field_14, a1, v4);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4215206:sub_4051a6": null, "4215216:cgc_destructor_printer_string": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_destructor_printer_string(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14)\n
        cgc_free(v1->field_14);\n
    return cgc_free(v1);\n
}\n
", "4215292:sub_4051fc": null, "4215296:cgc_constructor_printer_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_constructor_printer_string()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[8];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ecx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_calloc(32);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1[6] = v5 - 13000;\n
    v1[7] = v5 - 12696;\n
    return v1;\n
}\n
", "4215395:sub_405263": null, "4215408:cgc_os_exec": "int cgc_os_exec(struct struct_0 **v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // esi\n
\n
    v1 = v3;\n
    v0 = a2;\n
    v2();\n
    return 0;\n
}\n
", "4215466:sub_4052aa": null, "4215472:cgc_set_data_command_runner": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[16];\n
    struct struct_0 **field_14;\n
    unsigned short field_18;\n
    char padding_1a[2];\n
    unsigned int field_1c;\n
    unsigned int field_20;\n
    unsigned int field_24;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_4083a8;\n
\n
int cgc_set_data_command_runner(struct_0 *v8, unsigned int a0, unsigned short a1, unsigned int *a2)\n
{\n
    char *v0;  // [bp-0x30]\n
    char *v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    void* v3;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ecx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8->field_0 = a0;\n
    v0 = &v8->padding_4[0];\n
    v1 = g_4083a8;\n
    cgc_memcpy(v0, v1, cgc_strlen(g_4083a8));\n
    memset(&v5, 0, 12);\n
    v8->field_18 = a1;\n
    if (a1 >= 2 && 4 >= a1)\n
    {\n
        v4 = a2;\n
        v8->field_14 = *(v4);\n
        for (v3 = 0; v3 < a1 - 1; (&v8->field_1c)[v10] = *(v4))\n
        {\n
            v4 += 5;\n
            v10 = v3;\n
            v3 = v10 + 1;\n
        }\n
        cgc_os_exec(v8->field_14, v8->field_1c, v8->field_20, v8->field_24);\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = -1;\n
    return v6;\n
}\n
", "4215804:sub_4053fc": null, "4215808:cgc_destructor_command_runner": "int cgc_destructor_command_runner(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4215845:sub_405425": null, "4215856:cgc_constructor_command_runner": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_constructor_command_runner()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[12];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ecx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_calloc(48);\n
    if (!v1)\n
        cgc__terminate();\n
    v5 = v0;\n
    v1[10] = v5 - 12440;\n
    v1[11] = v5 - 12104;\n
    return v1;\n
}\n
", "4215955:sub_405493": null, "4215968:cgc_deserialize_liquids": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *typeName;\n
\n
int cgc_deserialize_liquids(struct struct_0 **v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct struct_1 *v2[6];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    struct struct_0 **v11;  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &*(v7)->field_0;\n
    v9 = v7;\n
    *(v9) = *(v9) + 1;\n
    v10 = v7;\n
    *(v10) = cgc_strlen(typeName) + *(v10);\n
    v4 = &*(v7)->field_0;\n
    v11 = v7;\n
    *(v11) = *(v11) + 1;\n
    v2[0] = cgc_constructor_liquids();\n
    v0 = *(v4);\n
    v3 = v2[4](v2, *(v5));\n
    if (0 > v3)\n
    {\n
        v2[5]();\n
        v2 = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216147:sub_405553": null, "4216160:cgc_deserialize_cereals": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_408398;\n
\n
int cgc_deserialize_cereals(struct struct_0 **v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct struct_1 *v2[6];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    struct struct_0 **v11;  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &*(v7)->field_0;\n
    v9 = v7;\n
    *(v9) = *(v9) + 1;\n
    v10 = v7;\n
    *(v10) = cgc_strlen(g_408398) + *(v10);\n
    v4 = &*(v7)->field_0;\n
    v11 = v7;\n
    *(v11) = *(v11) + 1;\n
    v2[0] = cgc_constructor_cereals();\n
    v0 = *(v4);\n
    v3 = v2[4](v2, *(v5));\n
    if (0 > v3)\n
    {\n
        v2[5]();\n
        v2 = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216339:sub_405613": null, "4216352:cgc_deserialize_toppings": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_40839c;\n
\n
int cgc_deserialize_toppings(struct struct_0 **v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct struct_1 *v2[7];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    struct struct_0 **v11;  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &*(v7)->field_0;\n
    v9 = v7;\n
    *(v9) = *(v9) + 1;\n
    v10 = v7;\n
    *(v10) = cgc_strlen(g_40839c) + *(v10);\n
    v4 = &*(v7)->field_0;\n
    v11 = v7;\n
    *(v11) = *(v11) + 1;\n
    v2[0] = cgc_constructor_toppings();\n
    v0 = *(v4);\n
    v3 = v2[5](v2, *(v5));\n
    if (0 > v3)\n
    {\n
        v2[6]();\n
        v2 = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216531:sub_4056d3": null, "4216544:cgc_deserialize_generic_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_4083a0;\n
\n
int cgc_deserialize_generic_string(struct struct_0 **v7)\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct struct_1 *v2[8];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    struct struct_0 **v12;  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &*(v7)->field_0;\n
    v9 = v7;\n
    *(v9) = *(v9) + 1;\n
    v10 = v7;\n
    *(v10) = cgc_strlen(g_4083a0) + *(v10);\n
    v4 = &*(v7)->field_0;\n
    v12 = v7;\n
    *(v12) = 1 + cgc_strlen(v4) + *(v12);\n
    v2[0] = cgc_constructor_generic_string();\n
    v0 = v4;\n
    v3 = v2[6](v2, *(v5));\n
    if (0 > v3)\n
    {\n
        v2[7]();\n
        v2 = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216737:sub_4057a1": null, "4216752:cgc_deserialize_printer_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_4083a4;\n
\n
int cgc_deserialize_printer_string(struct struct_0 **v7)\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct struct_1 *v2[8];  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct struct_0 **v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    struct struct_0 **v12;  // eax\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &*(v7)->field_0;\n
    v9 = v7;\n
    *(v9) = *(v9) + 1;\n
    v10 = v7;\n
    *(v10) = cgc_strlen(g_4083a4) + *(v10);\n
    v4 = &*(v7)->field_0;\n
    v12 = v7;\n
    *(v12) = 1 + cgc_strlen(v4) + *(v12);\n
    v2[0] = cgc_constructor_printer_string();\n
    v0 = v4;\n
    v3 = v2[6](v2, *(v5));\n
    if (0 > v3)\n
    {\n
        v2[7]();\n
        v2 = 0;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4216945:sub_405871": null, "4216960:cgc_deserialize_command_runner": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char *g_4083a8;\n
\n
int cgc_deserialize_command_runner(struct struct_1 **v9)\n
{\n
    unsigned short *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    struct struct_0 *v2[12];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned short v4;  // [bp-0x1e]\n
    unsigned short *v5;  // [bp-0x1c]\n
    unsigned int *v6;  // [bp-0x18]\n
    struct struct_0 *v7[12];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct struct_1 **v11;  // eax\n
    struct struct_1 **v12;  // eax\n
    struct struct_1 **v13;  // eax\n
    struct struct_1 **v14;  // eax\n
    unsigned short v15;  // dx\n
    unsigned int v16;  // edx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = &*(v9);\n
    v11 = v9;\n
    *(v11) = *(v11) + 2;\n
    v12 = v9;\n
    *(v12) = cgc_strlen(g_4083a8) + *(v12);\n
    v4 = *(v9)->field_0;\n
    if (v4 >= 2 && 4 >= v4)\n
    {\n
        v13 = v9;\n
        *(v13) = *(v13) + 1;\n
        v5 = &*(v9)->field_0;\n
        v14 = v9;\n
        *(v14) = 5 + 5 * v4 + *(v14);\n
        v2[0] = cgc_constructor_command_runner();\n
        v15 = v4;\n
        v0 = v5;\n
        v3 = v2[10](v2, *(v6), v16);\n
        if (0 > v3)\n
        {\n
            v2[11]();\n
            v2 = 0;\n
        }\n
        v7 = v2;\n
        return v7;\n
    }\n
    v7[0] = 0;\n
    return v7;\n
}\n
", "4217227:sub_40598b": null, "4217232:cgc_check_inherited_types": "typedef struct struct_2 {\n
    char padding_0[28];\n
    struct struct_0 *field_1c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[44];\n
    struct struct_0 *field_2c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_inherited_types(unsigned int v6, unsigned short **a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_1 *v2;  // [bp-0x18]\n
    struct_2 *v3;  // [bp-0x14]\n
    struct_2 *v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    if (v1 == 3)\n
    {\n
        v4 = cgc_deserialize_generic_string(a0);\n
        if (!v4)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v4->field_1c();\n
    }\n
    else if (v1 == 4)\n
    {\n
        v3 = cgc_deserialize_printer_string(a0);\n
        if (!v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v3->field_1c();\n
    }\n
    else\n
    {\n
        if (v1 != 5)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v2 = cgc_deserialize_command_runner(a0);\n
        if (!v2)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v2->field_2c();\n
    }\n
    v5 = 0;\n
    return v5;\n
}\n
", "4217528:sub_405ab8": null, "4217536:cgc_gen_result_bufs": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gen_result_bufs()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    char *v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0x4347c000;\n
    v2 = 0x4347c000;\n
    for (v1 = 0; v1 < 4095; v1 = v4)\n
    {\n
        v5 = v0;\n
        v6 = v1 & 3;\n
        v6[240 + v5] = v6[240 + v5] ^ v2[v1];\n
        v7 = v1 + 1 & 3;\n
        *((v5 + v7 + 244)) = *((v5 + v7 + 244)) ^ v2[1 + v1];\n
        v4 = v1 + 2;\n
    }\n
    return v4;\n
}\n
", "4217679:sub_405b4f": null, "4217680:cgc_receive_input": "typedef struct struct_1 {\n
    char padding_0[248];\n
    struct struct_0 *field_f8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_input()\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_1 *v8;  // ecx\n
    struct_1 *v9;  // ebx\n
    struct_1 *v10;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = cgc_recv_all(&v1, 6);\n
    if (v3 != 6)\n
        cgc__terminate();\n
    if (cgc_memcmp(&v0[35].padding_0[49], &v1, 4) && cgc_memcmp(&v0[35].padding_0[45], &v1, 4))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v8 = v0;\n
    v8->field_f8 = cgc_malloc(*(&v2) + 6);\n
    if (!v8->field_f8)\n
        cgc__terminate();\n
    v9 = v0;\n
    v9->field_f8->field_4 = *(&v2);\n
    cgc_memcpy(v9->field_f8, &v1, 4);\n
    v10 = v0;\n
    v3 = cgc_recv_all(v10->field_f8 + 1, v10->field_f8->field_4);\n
    if (v3 != v0->field_f8->field_4)\n
        cgc__terminate();\n
    v4 = 0;\n
    return v4;\n
}\n
", "4218037:sub_405cb5": null, "4218048:main": "typedef struct struct_1 {\n
    char padding_0[248];\n
    void* field_f8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[248];\n
    unsigned int field_f8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 4242;\n
    cgc_gen_result_bufs();\n
    while (true)\n
    {\n
        v2 = cgc_receive_input();\n
        if (0 <= v2)\n
        {\n
            cgc_send(&v1, 4);\n
            v7 = v0;\n
            if (!cgc_memcmp(&v7[35].padding_0[49], v7->field_f8, 4))\n
                v2 = cgc_process_plain_input(v0->field_f8);\n
            else\n
                v2 = cgc_process_serialized_input(v0->field_f8);\n
        }\n
        if (v2)\n
            break;\n
        cgc_send(&v0->padding_0[240], 4);\n
        cgc_free(v0->field_f8);\n
        v1 += 1;\n
    }\n
    cgc_send(&v0->padding_0[244], 4);\n
    v8 = v4;\n
    return 0;\n
}\n
", "4218360:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}