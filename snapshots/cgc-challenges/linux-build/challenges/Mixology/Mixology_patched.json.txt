{"4222976:_init": "extern struct_0 *g_425124;\n
\n
int _init()\n
{\n
    if (g_425124)\n
    {\n
        g_425124();\n
        return;\n
    }\n
    return;\n
}\n
", "4223024:sub_407030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_407030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4223040:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4223056:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4223072:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4223088:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4223104:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4223120:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4223136:sub_4070a0": "int sub_4070a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4223142:sub_4070a6": null, "4223152:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4223195:sub_4070db": null, "4223196:sub_4070dc": "int sub_4070dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4223200:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4223204:sub_4070e4": null, "4223216:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 122939;\n
    v6 = v5 + 9025;\n
    v7 = v5 + 9025;\n
    if (v7 == v6)\n
        return v5 + 9025;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4223267:sub_407123": "int sub_407123()\n
{\n
}\n
", "4223273:sub_407129": "int sub_407129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4223280:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 122875;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 9025;\n
    v9 = (v6 + 9025 - (v6 + 9025) >> 31) + (9025 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4223351:sub_407177": "int sub_407177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4223360:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_425120;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_425120)\n
    {\n
        v0 = __dso_handle;\n
        sub_4070a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4223435:sub_4071cb": "int sub_4071cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4223440:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4223449:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4223453:sub_4071dd": null, "4223456:cgc_get_num_for_char": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_num_for_char(char v3)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 64)\n
        {\n
            v2 = 128;\n
            return v2;\n
        }\n
        else if (v3 != v1[v0->field_2c])\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4223568:cgc_encode": "typedef struct struct_0 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_encode(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    struct_0 *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char *v3;  // [bp-0x24]\n
    char v4;  // [bp-0x1d]\n
    char *v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    char *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // eax\n
    struct_0 *v14;  // eax\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = a0 * 2;\n
    v0 = v8 + 1;\n
    v7 = cgc_calloc(1);\n
    if (!v7)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v6 = 0;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (v5 >= a0)\n
        {\n
            v7[1 + v8] = 0;\n
            v9 = v7;\n
            return v9;\n
        }\n
        v4 = *((v11 + v5));\n
        v13 = v4;\n
        v3 = (v13 >> 31 CONCAT v13) /m 5;\n
        v2 = (v4 >> 31 CONCAT v4) /m 5 >> 32;\n
        if (v3 >= 64)\n
            break;\n
        if (v2 >= 64)\n
            break;\n
        v14 = v1;\n
        v7[v6] = v3[v14->field_2c];\n
        v7[1 + v6] = v2[v14->field_2c];\n
        v6 += 2;\n
        v5 += 1;\n
    }\n
    cgc_free();\n
    v9 = 0;\n
    return v9;\n
}\n
", "4223861:sub_407375": null, "4223872:cgc_decode": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_decode(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    char v3;  // [bp-0x1b]\n
    char v4;  // [bp-0x1a]\n
    char v5;  // [bp-0x19]\n
    char *v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x14]\n
    char *v8;  // [bp-0x10]\n
    char *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0 >> 1;\n
    v8 = cgc_calloc(1);\n
    v7 = 0;\n
    v6 = 0;\n
    while (true)\n
    {\n
        if (v6 >= a0)\n
        {\n
            v9 = v8;\n
            return v9;\n
        }\n
        v5 = *((v11 + v6));\n
        v4 = *((v11 + v6 + 1));\n
        v3 = cgc_get_num_for_char(v5);\n
        v2 = cgc_get_num_for_char(v4);\n
        if (v3 >= 127)\n
            break;\n
        if (v2 >= 127)\n
            break;\n
        v8[v7] = v3 * 5 + v2;\n
        v7 += 1;\n
        v6 += 2;\n
    }\n
    cgc_free();\n
    v9 = 0;\n
    return v9;\n
}\n
", "4224131:sub_407483": null, "4224144:cgc_pos_ceil": null, "4224259:sub_407503": null, "4224272:cgc_malloc_init": "typedef struct struct_0 {\n
    char padding_0[36104];\n
    unsigned int field_8d08;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int malloc_array;\n
\n
int cgc_malloc_init()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = cgc_allocate(524280, 0, &malloc_array);\n
    if (v1)\n
        cgc__terminate();\n
    if (!v0->field_8d08)\n
        cgc__terminate();\n
    v5 = v2;\n
    return 0;\n
}\n
", "4224402:sub_407592": null, "4224416:cgc_buf_is_numeric": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_buf_is_numeric(unsigned int v3)\n
{\n
    char *v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = v1;\n
        if (v0 >= cgc_strlen(v3, v0, &_GLOBAL_OFFSET_TABLE_))\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        if (v1[v3] >= 48 && v1[v3] <= 57)\n
            goto LABEL_407626;\n
        if (*((v3 + v1)) != 45)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
LABEL_407626:\n
        v1 += 1;\n
    }\n
}\n
", "4224585:sub_407649": null, "4224592:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8]\n
\n
    v1 = 0;\n
    for (v0 = v2; *(v0); v0 += 1);\n
    return v0 - v2;\n
}\n
", "4224658:sub_407692": null, "4224672:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(unsigned int v6)\n
{\n
    char *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 1;\n
    v4 = 0;\n
    if (v4[v6] == 45)\n
        v5 = -1;\n
    v3 = 0;\n
    v2 = v4;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v6))\n
            break;\n
        v3 = v3 * 10 + *((v6 + v2)) - 48;\n
        v2 += 1;\n
    }\n
    v3 *= v5;\n
    return v3;\n
}\n
", "4224838:sub_407746": null, "4224848:cgc_read_ascii_line": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_ascii_line(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18]\n
    char v5[4096];  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    *(&v5[0]) = 0;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v5 < a1)\n
            v1 = v5 < 4095;\n
        if (!(v1 & 1))\n
        {\n
LABEL_407852:\n
            *((a0 + 4095)) = 0;\n
            v7 = v6;\n
            break;\n
        }\n
        v4 = 0;\n
        v0 = &v4;\n
        v3 = cgc_receive(v8, a0 + v5, 1);\n
        if (v3)\n
        {\n
LABEL_407833:\n
            v7 = 0;\n
            return v7;\n
        }\n
        if (!(v4 == 1))\n
            goto LABEL_407833;\n
        v6 += 1;\n
        if (*((a0 + v5)) == 10)\n
        {\n
LABEL_40781f:\n
            *((a0 + v5)) = 0;\n
            goto LABEL_407852;\n
        }\n
        else\n
        {\n
            if (!*((a0 + v5)))\n
                goto LABEL_40781f;\n
            v5 += 1;\n
        }\n
    }\n
    return v7;\n
}\n
", "4225131:sub_40786b": null, "4225136:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[48];\n
    struct struct_1 *field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v4, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        v4 = v0->field_30;\n
    }\n
    else\n
    {\n
        v5 = v0;\n
        v5->field_30 = &v5[2130].padding_0[44];\n
    }\n
    v2 = cgc_strlen(v4);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 < v2)\n
        {\n
            if (*((v4 + v1)) == a0)\n
            {\n
                *((v4 + v1)) = 0;\n
                v0->field_30 = v4 + v1 + 1;\n
                v3 = v4;\n
                return v3;\n
            }\n
            if (!*((v4 + v1)) && v1)\n
            {\n
                v3 = v4;\n
                return v3;\n
            }\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v3 = v4;\n
            return v3;\n
        }\n
    }\n
}\n
", "4225406:sub_40797e": null, "4225408:cgc_calloc": "int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = a0 * v5;\n
    v0 = v3;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v1 = 0; v1 < v3; v1 += 1)\n
    {\n
        v2[v1] = 0;\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4225537:sub_407a01": null, "4225552:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[36104];\n
    unsigned int field_8d08;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    unsigned int v0[2];  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= 65535)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v3[0] = v1->field_8d08 + v4 * 8;\n
        if (!v3[0])\n
            break;\n
        v4 += 1;\n
    }\n
    v0[0] = v3;\n
    v2 = cgc_allocate(v6, 0);\n
    if (v2)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3[1] = v6;\n
    v5 = v3[0];\n
    return v5;\n
}\n
", "4225742:sub_407ace": null, "4225744:cgc_recv_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_recv_until(unsigned int v6, char *a0, unsigned int a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // esi\n
\n
    v5 = v7;\n
    v3 = 0;\n
    v0 = &v3;\n
    v2 = cgc_receive(v6, a0, a1);\n
    if (v2)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v3)\n
        {\n
            v4 = -2;\n
            return v4;\n
        }\n
        else if (a2 != a0[v1])\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v4 = v1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4225928:sub_407b88": null, "4225936:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v3;\n
        v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
        if (v2)\n
        {\n
            v5 = 3;\n
            return v5;\n
        }\n
        v4 = v3 + v4;\n
    }\n
}\n
", "4226118:sub_407c46": null, "4226128:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v6, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_strlen(v6);\n
    v2 = &v6[v4];\n
    v3 = a0;\n
    v0 = cgc_strlen(a0);\n
    cgc_memcpy(v2, v3);\n
    v8 = v5;\n
    return v6;\n
}\n
", "4226233:sub_407cb9": null, "4226240:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v0;\n
}\n
", "4226323:sub_407d13": null, "4226336:cgc_free": "typedef struct struct_0 {\n
    char padding_0[36104];\n
    unsigned int field_8d08;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v5[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3[2];  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[2];  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = v5;\n
    if (!v5)\n
        return v5;\n
    v4 = 65534;\n
    while (true)\n
    {\n
        if (v4 < 0)\n
            return v6;\n
        v3[0] = v1->field_8d08 + v4 * 8;\n
        if (v3 && v5 == v3[0])\n
        {\n
            v0 = v3[1];\n
            v2 = cgc_deallocate(v3[0]);\n
            v3[0] = 0;\n
            v6 = v3;\n
            *((v6 + 4)) = 0;\n
            return v3;\n
        }\n
        v6 = v4 - 1;\n
        v4 = v6;\n
    }\n
}\n
", "4226515:sub_407dd3": null, "4226528:cgc_memcmp": "int cgc_memcmp(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = v4;\n
    v1 = a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v2[v0] == *((v1 + v0)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4226648:sub_407e58": null, "4226656:cgc_itoaB10": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoaB10(unsigned int v13)\n
{\n
    char v0;  // [bp-0x35]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    char *v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    char *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v12 = v14;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 12;\n
    v9 = cgc_malloc(v10);\n
    if (!v9)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v8 = v13;\n
    if (!v13)\n
    {\n
        cgc_memcpy(v9, v1 - 110823, 2);\n
        v11 = v9;\n
        return v11;\n
    }\n
    v7 = 0;\n
    if (v13 < 0)\n
    {\n
        v7 = 1;\n
        v8 = -(v8);\n
    }\n
    v6 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v6 < v10)\n
            v0 = v8;\n
        if (!(v0 & 1))\n
            break;\n
        v5 = (v8 >> 31 CONCAT v8) /m 10 >> 32;\n
        if (v5 > 9)\n
            v9[v6] = v5 + 87;\n
        else\n
            v9[v6] = v5 + 48;\n
        v15 = v8;\n
        v8 = (v15 >> 31 CONCAT v15) /m 10;\n
        v6 += 1;\n
    }\n
    if (v7 == 1)\n
        v9[1 + v6] = 45;\n
    v4 = cgc_malloc(v10);\n
    v3 = cgc_strlen(v9);\n
    for (v2 = 0; v2 < v3; v2 += 1)\n
    {\n
        v4[v2] = v9[1 + v3 + -1 * v2];\n
    }\n
    cgc_free(v9);\n
    v11 = v4;\n
    return v11;\n
}\n
", "4227100:sub_40801c": null, "4227104:cgc_malloc_reset": "typedef struct struct_0 {\n
    char padding_0[36104];\n
    unsigned int field_8d08;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_reset()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3[2];  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    for (v4 = 65534; v4 >= 0; v4 = v6)\n
    {\n
        v3[0] = v1->field_8d08 + v4 * 8;\n
        if (v3 && v3[0])\n
        {\n
            v0 = v3[1];\n
            v2 = cgc_deallocate(v3[0]);\n
            v3[0] = 0;\n
            v3[1] = 0;\n
        }\n
        v6 = &v4->padding_0[1];\n
    }\n
    return v6;\n
}\n
", "4227258:sub_4080ba": null, "4227264:cgc_alloc_sample_st": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_alloc_sample_st(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_malloc(8);\n
    if (!v1)\n
    {\n
        v2[0] = v1;\n
        return v2;\n
    }\n
    v1[0] = cgc_malloc(v4 * 4);\n
    if (!v1[0])\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1[1] = v4;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4227397:sub_408145": null, "4227408:cgc_get_compound_by_idx": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_compound_by_idx(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 > 2999)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0 + 52 + v2 * 12;\n
    return v1;\n
}\n
", "4227483:sub_40819b": null, "4227488:cgc_get_sample_name_at_idx": "extern char chem_formulas;\n
\n
int cgc_get_sample_name_at_idx(unsigned int *v1, struct struct_0 **a0)\n
{\n
    unsigned int *v0;  // [bp-0x8]\n
    unsigned int *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = *((*(v1) + a0 * 4));\n
    return *((&chem_formulas + 0xc * v0));\n
}\n
", "4227543:sub_4081d7": null, "4227552:cgc_get_chem_ref_at_idx": "int cgc_get_chem_ref_at_idx(unsigned int *v0, unsigned int *a0)\n
{\n
    return *((*(v0) + a0 * 4));\n
}\n
", "4227574:sub_4081f6": null, "4227584:cgc_set_sample_at_idx": "int cgc_set_sample_at_idx(unsigned int *v0, unsigned int *a0, unsigned int a1)\n
{\n
    *((*(v0) + a0 * 4)) = a1;\n
    return 0;\n
}\n
", "4227614:sub_40821e": null, "4227616:cgc_check_compound_idx_in_sample": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_compound_idx_in_sample(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v3->field_4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_get_chem_ref_at_idx(v3, v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4227743:sub_40829f": null, "4227744:cgc_reconstruct_sample_from_zoom": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_reconstruct_sample_from_zoom(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 0;\n
    for (v5 = 0; v5 < 2999; v5 += 1)\n
    {\n
        v7 = cgc_check_compound_idx_in_zoom(v9) + v7;\n
        if (v7 == 1)\n
            v6 += 1;\n
    }\n
    if (!v7)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v4 = cgc_alloc_sample_st(v7);\n
    if (!v4)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    v3 = 0;\n
    for (v2 = 0; v2 < 2999; v2 += 1)\n
    {\n
        v1 = cgc_check_compound_idx_in_zoom(v9);\n
        if (v1 == 1)\n
        {\n
            cgc_set_sample_at_idx(v4, v3, v2);\n
            v3 += 1;\n
        }\n
    }\n
    v8 = v4;\n
    return v8;\n
}\n
", "4228061:sub_4083dd": null, "4228064:cgc_check_compound_idx_in_zoom": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int chem_formulas;\n
\n
int cgc_check_compound_idx_in_zoom(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = (&chem_formulas)[3 * a0];\n
    v4 = cgc_strlen(v5);\n
    v0 = v4;\n
    v3[0] = cgc_hash_pair_buf(v5);\n
    v0 = v7;\n
    v2 = cgc_zoom_check(v3);\n
    cgc_free(v3);\n
    v9 = v6;\n
    return v2;\n
}\n
", "4228194:sub_408462": null, "4228208:cgc_get_npages": null, "4228253:sub_40849d": null, "4228256:cgc_get_command_from_input": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_command_from_input(char *v7)\n
{\n
    char *v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int *v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // eax\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_strtok(v7, 32);\n
    if (!v4)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < 4)\n
        {\n
            v9 = v2;\n
            v0 = *((v9 + 36052 + v3 * 12 + 4));\n
            v1 = v4;\n
            if (!cgc_memcmp(v0, v1, cgc_strlen(*((v9 + 36052 + v3 * 12 + 4)))) && *((v2 + 36052 + v3 * 12)) > 0)\n
            {\n
                v10 = v2;\n
                *((v10 + 36052 + v3 * 12)) = *((v10 + 36052 + v3 * 12)) - 1;\n
                v5 = *((v10 + 36052 + v3 * 12 + 8));\n
                return v5;\n
            }\n
            v3 = v3 + 1;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4228544:cgc_copy_new_comp_name": "int cgc_copy_new_comp_name(char *v0, char *a0)\n
{\n
    return cgc_memcpy(v0, a0, 127);\n
}\n
", "4228601:sub_4085f9": null, "4228608:cgc_gen_chem_name": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gen_chem_name(char *v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char **v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 8;\n
    for (v4 = 0; v4 < a0->field_4; v4 += 1)\n
    {\n
        if (v4 * v5 == 128)\n
            break;\n
        v3 = cgc_get_compound_by_idx(cgc_get_chem_ref_at_idx(a0, v4));\n
        if (!v3)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v2 = cgc_strlen(*(v3));\n
        if (v2 > v5)\n
            v2 = v5;\n
        cgc_memcpy(&v7[v4 * v5], *(v3), v2);\n
    }\n
    v1 = cgc_malloc(128);\n
    cgc_memcpy(v1, v7, 128);\n
    v6 = v1;\n
    return v6;\n
}\n
", "4228897:sub_408721": null, "4228912:cgc_mix_cmd": null, "4229736:sub_408a68": null, "4229744:cgc_list_cmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_cmd(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_strlen(v6);\n
    v2 = v6;\n
    if (!v2)\n
    {\n
        v4 = 2;\n
        return v4;\n
    }\n
    else if (cgc_buf_is_numeric(v2) == 1)\n
    {\n
        v1 = cgc_atoi(v2);\n
        if (v1 < 0)\n
        {\n
            v4 = 4;\n
            return v4;\n
        }\n
        v4 = cgc_transmit_compound_list_page();\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = 3;\n
        return v4;\n
    }\n
}\n
", "4229911:sub_408b17": null, "4229920:cgc_transmit_compound_list_page": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_compound_list_page(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_get_npages();\n
    if (v7 >= v4)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    v3 = v7 * 25;\n
    v2 = v3 + 25;\n
    if (v2 > 2999)\n
        v2 = 2999;\n
    v0 = v2;\n
    v5 = cgc_transmit_compound_list(v3);\n
    return v5;\n
}\n
", "4230046:sub_408b9e": null, "4230048:cgc_quit_cmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_quit_cmd()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc__terminate(0, v0);\n
    cgc_prep_cmd(v2, v3);\n
    return;\n
}\n
", "4230096:cgc_prep_cmd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prep_cmd(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v7;\n
    if (cgc_buf_is_numeric(v4) != 1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    v0 = 1000;\n
    v3 = cgc_sample_compounds(v4);\n
    if (!v3)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    v2 = cgc_transmit_compound_sample_zoom();\n
    cgc_free_sample_st();\n
    v5 = v2;\n
    return v5;\n
}\n
", "4230252:sub_408c6c": null, "4230256:cgc_sample_compounds": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sample_compounds(char *v7, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 > 2999)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v1 = v7;\n
    v5 = cgc_crazy_hash(v1, cgc_strlen(v7));\n
    v4 = cgc_alloc_sample_st(a0);\n
    if (!v4)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    for (v3 = 0; v3 < a0; v3 += 1)\n
    {\n
        v0 = v3;\n
        cgc_set_sample_at_idx(v4, v0, (0 CONCAT v5) /m 2999 >> 32);\n
        v5 = cgc_crazy_hash(&v5, 4);\n
    }\n
    v6 = v4;\n
    return v6;\n
}\n
", "4230522:sub_408d7a": null, "4230528:cgc_transmit_compound_sample_zoom": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_compound_sample_zoom(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_zoom_buf();\n
    if (!v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    cgc_transmit_line_nl();\n
    cgc_free(v1);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4230633:sub_408de9": null, "4230640:cgc_free_sample_st": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_sample_st(unsigned int *v2[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_free(*(v2));\n
    v4 = v1;\n
    return cgc_free(v2);\n
}\n
", "4230698:sub_408e2a": null, "4230704:cgc_transmit_compound_list": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_compound_list(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 > v4 && v4 <= 2999 && a0 <= 2999)\n
    {\n
        for (v2 = v4; v2 < a0; v2 += 1)\n
        {\n
            v0 = *((v1 + 52 + v2 * 12));\n
            cgc_transmit_line_nl();\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4230855:sub_408ec7": null, "4230864:cgc_transmit_line_nl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_line_nl(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v3;\n
    cgc_transmit_all(1, v0, cgc_strlen(v3));\n
    v5 = v2;\n
    return cgc_transmit_all(1, v1 - 110805, 1);\n
}\n
", "4230971:sub_408f3b": null, "4230976:cgc_make_compound_sample_zoom": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_make_compound_sample_zoom(struct_0 *v14)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    char *v6;  // [bp-0x24]\n
    char *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    void* v9;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
\n
    v13 = v15;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_n_elements_from_sampsz();\n
    v11 = cgc_new_zoom_filter();\n
    if (!v11)\n
    {\n
        v10 = v4 - 110803;\n
        v3 = v10;\n
        cgc_transmit_all(1, v3, cgc_strlen(v10));\n
        v12 = 0;\n
        return v12;\n
    }\n
    v9 = 0;\n
    while (true)\n
    {\n
        if (v9 < v14->field_4)\n
        {\n
            v8 = cgc_get_chem_ref_at_idx(v14, v9);\n
            if (v8 > 2999)\n
            {\n
                v7 = v4 - 110788;\n
                v2 = v7;\n
                v0 = v2;\n
                cgc_transmit_all(1, v0, cgc_strlen(v7));\n
                cgc_zoom_free(v11, v0);\n
                v12 = 0;\n
                return v12;\n
            }\n
            v6 = *((v4 + 52 + v8 * 12));\n
            v1 = v6;\n
            cgc_strlen(v6);\n
            v5 = cgc_hash_pair_buf(v1);\n
            cgc_zoom_add(v5);\n
            v9 += 1;\n
        }\n
        else\n
        {\n
            v12 = v11;\n
            return v12;\n
        }\n
    }\n
}\n
", "4231354:sub_4090ba": null, "4231360:cgc_free_zoombuf": "int cgc_free_zoombuf(unsigned int v0[2])\n
{\n
    return cgc_free(v0);\n
}\n
", "4231397:sub_4090e5": null, "4231408:cgc_zoom_buf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_zoom_buf(void* v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[5];  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = cgc_make_compound_sample_zoom(v5);\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = cgc_encode(v2[0], v2[4]);\n
    cgc_zoom_free(v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4231527:sub_409167": null, "4231536:cgc_new_zoom_filter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_new_zoom_filter(unsigned int v12)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned short v1;  // [bp-0x38]\n
    unsigned short v2;  // [bp-0x36]\n
    unsigned short v3;  // [bp-0x34]\n
    unsigned short v4;  // [bp-0x32]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned long v6;  // [bp-0x2c]\n
    unsigned long v7;  // [bp-0x24]\n
    unsigned int v8[6];  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11[6];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v12)\n
    {\n
        v11[0] = 0;\n
        return v11;\n
    }\n
    v8[0] = cgc_malloc(24);\n
    if (!v8)\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v8[5] = 0;\n
    v8[1] = v12;\n
    v10 = 1076674899;\n
    v9 = 676274637;\n
    v5 = v12;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t60,1] = t61\n
    [D] PutI(136:I8x8)[t60,1] = 0x01\n
    [D] PutI(136:I8x8)[t60,0] = 0x00\n
    v4 = [D] x86g_create_fpucw(fpround<4>);\n
    v3 = v4 | 0xc00;\n
    v6 = ([D] GetI(136:I8x8)[t106,0] ? [D] GetI(72:F64x8)[t106,0] : nan);\n
    [D] PutI(136:I8x8)[t106,0] = 0x00\n
    v8[2] = v6;\n
    [D] PutI(72:F64x8)[t134,0] = t137\n
    [D] PutI(136:I8x8)[t134,0] = 0x01\n
    [D] PutI(72:F64x8)[t146,0] = t149\n
    [D] PutI(136:I8x8)[t146,0] = 0x01\n
    [D] PutI(72:F64x8)[t156,1] = t157\n
    [D] PutI(136:I8x8)[t156,1] = 0x01\n
    [D] PutI(136:I8x8)[t156,0] = 0x00\n
    v2 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-50, size=2, endness=Iend_LE)))));\n
    v1 = v2 | 0xc00;\n
    v7 = ([D] GetI(136:I8x8)[t202,0] ? [D] GetI(72:F64x8)[t202,0] : nan);\n
    [D] PutI(136:I8x8)[t202,0] = 0x00\n
    v8[3] = v7;\n
    v8[4] = (v8[2] >> 3) + 1;\n
    v8[0] = cgc_calloc(1, v8[4]);\n
    if (!v8[0])\n
    {\n
        v11 = 0;\n
        return v11;\n
    }\n
    v11 = v8;\n
    return v11;\n
}\n
", "4231841:sub_4092a1": null, "4231856:cgc_get_sample_n_bits": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_sample_n_bits(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = cgc_new_zoom_filter(cgc_n_elements_from_sampsz(v5));\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = v1->field_8;\n
    cgc_zoom_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4231973:sub_409325": null, "4231984:cgc_n_elements_from_sampsz": "int cgc_n_elements_from_sampsz(unsigned int v8)\n
{\n
    unsigned short v0;  // [bp-0x28]\n
    unsigned short v1;  // [bp-0x26]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
\n
    v7 = 0x3ff40000;\n
    v6 = 0;\n
    v2 = v8;\n
    v3 = 0;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t23,1] = t24\n
    [D] PutI(136:I8x8)[t23,1] = 0x01\n
    [D] PutI(136:I8x8)[t23,0] = 0x00\n
    v1 = [D] x86g_create_fpucw(fpround<4>);\n
    v0 = v1 | 0xc00;\n
    v4 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
    [D] PutI(136:I8x8)[t69,0] = 0x00\n
    v5 = v4;\n
    return v5;\n
}\n
", "4232067:sub_409383": null, "4232080:cgc_zoom_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_zoom_free(unsigned int *v2[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_free(*(v2));\n
    v4 = v1;\n
    return cgc_free(v2);\n
}\n
", "4232138:sub_4093ca": null, "4232144:cgc_load_zoom_filter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_load_zoom_filter(char *v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned short v1;  // [bp-0x30]\n
    unsigned short v2;  // [bp-0x2e]\n
    unsigned long v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6[5];  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    unsigned int v10[5];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_strlen(v12);\n
    v8 = cgc_decode(v12, v9);\n
    if (!v8)\n
    {\n
        v10[0] = 0;\n
        return v10;\n
    }\n
    v7 = cgc_strlen(v12) >> 1;\n
    v6[0] = cgc_malloc(24);\n
    v6[4] = v7;\n
    v6[2] = a0;\n
    v5 = 1076674899;\n
    v4 = 676274637;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t21,1] = t22\n
    [D] PutI(136:I8x8)[t21,1] = 0x01\n
    [D] PutI(136:I8x8)[t21,0] = 0x00\n
    v2 = [D] x86g_create_fpucw(fpround<4>);\n
    v1 = v2 | 0xc00;\n
    v3 = ([D] GetI(136:I8x8)[t67,0] ? [D] GetI(72:F64x8)[t67,0] : nan);\n
    [D] PutI(136:I8x8)[t67,0] = 0x00\n
    v6[3] = v3;\n
    v6[0] = v8;\n
    v10 = v6;\n
    return v10;\n
}\n
", "4232376:sub_4094b8": null, "4232384:cgc_crazy_hash": "int cgc_crazy_hash(unsigned int *v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v2[3];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
\n
    v7 = a1;\n
    v6 = a0 >> 2;\n
    v5 = v8;\n
    for (v4 = 0; v4 < v6; v4 += 1)\n
    {\n
        v3 = v5[v4];\n
        v3 *= 305781454;\n
        v3 = v3 * 0x8000 | v3 >> 17;\n
        v3 *= 2562341086;\n
        v7 = v3 ^ v7;\n
        v7 = (v7 * 0x2000 | v7 >> 19) * 5 - 21350118;\n
    }\n
    *(&v2) = &v8[v6];\n
    v1 = 0;\n
    v0 = a0 & 3;\n
    if (v0 != 1)\n
    {\n
        if (v0 != 2)\n
        {\n
            if (!(v0 == 3))\n
                goto LABEL_4095fe;\n
            v1 = v2[2] * 0x10000 ^ v1;\n
        }\n
        v1 = v2[1] * 0x100 ^ v1;\n
    }\n
    v1 = v2[0] ^ v1;\n
    v1 *= 305781454;\n
    v1 = v1 * 0x8000 | v1 >> 17;\n
    v1 *= 2562341086;\n
    v7 = v1 ^ v7;\n
LABEL_4095fe:\n
    v7 = a0 ^ v7;\n
    v7 = v7 >> 16 ^ v7;\n
    v7 *= 848869921;\n
    v7 = v7 >> 13 ^ v7;\n
    v7 *= 1463722387;\n
    v7 = v7 >> 16 ^ v7;\n
    return v7;\n
}\n
", "4232775:sub_409647": null, "4232784:cgc_hash_pair_buf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_hash_pair_buf(unsigned int *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[2];  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_crazy_hash(v5, a0, 2538058380);\n
    v2 = cgc_crazy_hash(v5, a0, v3);\n
    v1[0] = cgc_malloc(8);\n
    v1[0] = v3;\n
    v1[1] = v2;\n
    v7 = v4;\n
    return v1;\n
}\n
", "4232916:sub_4096d4": null, "4232928:cgc_zoom_add": "int cgc_zoom_add(unsigned int v5[2], unsigned int a0[6])\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x11]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6[6];  // eax\n
\n
    for (v0 = 0; v0 < a0[3]; v0 += 1)\n
    {\n
        v4 = (0 CONCAT v5[0] + v5[1] * v0) /m a0[2] >> 32;\n
        v3 = v4 >> 3;\n
        v1 = v3[a0[0]];\n
        v2 = 1 << (v4 & 7 & 31);\n
        if (!(v1 & v2))\n
        {\n
            v3[a0[0]] = v1 | v2;\n
            v6 = a0;\n
            v6[5] = v6[5] + 1;\n
        }\n
    }\n
    return v0;\n
}\n
", "4233101:sub_40978d": null, "4233104:cgc_zoom_check": "int cgc_zoom_check(unsigned int v7[2], unsigned int a0[4])\n
{\n
    void* v0;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
\n
    v5 = 0;\n
    for (v0 = 0; v0 < a0[3]; v0 += 1)\n
    {\n
        v4 = (0 CONCAT v7[0] + v7[1] * v0) /m a0[2] >> 32;\n
        v3 = v4 >> 3;\n
        v1 = v3[a0[0]];\n
        v2 = 1 << (v4 & 7 & 31);\n
        if ((v1 & v2))\n
            v5 += 1;\n
    }\n
    if (v5 == a0[3])\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4233298:sub_409852": null, "4233312:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    struct struct_0 **v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    char *v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char v7;  // [bp-0x10]\n
    void* v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    cgc_malloc_init();\n
    if (*(&v7))\n
        cgc__terminate();\n
    v6 = v0 - 6908;\n
    cgc_transmit_line_nl(v6);\n
    while (true)\n
    {\n
        v5 = cgc_calloc(1, 0x1000);\n
        if (v5)\n
        {\n
            v4 = cgc_read_ascii_line(0, v5, 0x1000);\n
            if (v4 < 3)\n
            {\n
                cgc_free(v5);\n
            }\n
            else\n
            {\n
                v3 = cgc_get_command_from_input(v5);\n
                if (!v3)\n
                    cgc__terminate();\n
                v2 = cgc_strlen(v5);\n
                if (v2 > 0x1000)\n
                    cgc__terminate();\n
                v1 = v3();\n
                if (v1)\n
                    cgc__terminate();\n
                cgc_free(v5);\n
            }\n
        }\n
    }\n
}\n
", "4233664:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}