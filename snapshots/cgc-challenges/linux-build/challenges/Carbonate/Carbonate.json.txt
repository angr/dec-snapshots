{"4202496:_init": "extern struct_0 *g_40a530;\n
\n
int _init()\n
{\n
    if (g_40a530)\n
    {\n
        g_40a530();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_log2": "// attributes: PLT stub\n
int cgc_log2()\n
{\n
    ::libc.so.0::cgc_log2();\n
    return;\n
}\n
", "4202576:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202592:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202608:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202624:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202640:cgc_cos": "// attributes: PLT stub\n
int cgc_cos()\n
{\n
    ::libc.so.0::cgc_cos();\n
    return;\n
}\n
", "4202656:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202672:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202688:cgc_tan": "// attributes: PLT stub\n
int cgc_tan()\n
{\n
    ::libc.so.0::cgc_tan();\n
    return;\n
}\n
", "4202704:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202720:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202736:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202752:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202768:sub_402110": "int sub_402110()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202774:sub_402116": null, "4202784:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202827:sub_40214b": null, "4202828:sub_40214c": "int sub_40214c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202832:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202836:sub_402154": null, "4202848:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33751;\n
    v6 = v5 + 18;\n
    v7 = v5 + 18;\n
    if (v7 == v6)\n
        return v5 + 18;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202899:sub_402193": "int sub_402193()\n
{\n
}\n
", "4202905:sub_402199": "int sub_402199()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202912:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33687;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 18;\n
    v9 = (v6 + 18 - (v6 + 18) >> 31) + (18 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202983:sub_4021e7": "int sub_4021e7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202992:__do_global_dtors_aux": "extern unsigned int __dso_handle;\n
extern char completed.0;\n
extern unsigned int g_40a52c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (completed.0)\n
        return;\n
    if (g_40a52c)\n
    {\n
        v0 = __dso_handle;\n
        sub_402110();\n
    }\n
    deregister_tm_clones();\n
    completed.0 = 1;\n
    return;\n
}\n
", "4203067:sub_40223b": "int sub_40223b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203072:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203081:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203085:sub_40224d": null, "4203088:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4203292:sub_40231c": null, "4203296:cgc_floor": null, "4203460:sub_4023c4": null, "4203472:cgc_round_away_from_zero": null, "4203626:sub_40246a": null, "4203632:cgc_round": null, "4203776:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4203868:sub_40255c": null, "4203872:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        *(v1) = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4204081:sub_402631": null, "4204096:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        a0->field_0 = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4204289:sub_402701": null, "4204304:cgc_float_to_str": null, "4205167:sub_402a6f": null, "4205168:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v26, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    void* v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v25;  // [bp-0xc]\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!v26)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(v26))\n
    {\n
        if (*(v26) != 64)\n
        {\n
            cgc_putc(*(v26));\n
            v26 += 1;\n
            v24 += 1;\n
LABEL_403344:\n
        }\n
        else\n
        {\n
            v26 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(v26) == 64)\n
            {\n
                cgc_putc(64);\n
                v26 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 45)\n
            {\n
                v19 = 1;\n
                v26 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(v26) == 48)\n
                {\n
                    v20 = 1;\n
                    v26 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
                }\n
            }\n
            if (*(v26) == 46)\n
            {\n
                v26 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); v26 += 1);\n
            }\n
            if (*(v26) == 99)\n
            {\n
                v27 = a0;\n
                a0 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                cgc_putc(v16);\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 100)\n
            {\n
                v28 = a0;\n
                a0 = v28 + 1;\n
                v15 = &*(v28)->field_0;\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; v14->field_0; v14 += 1)\n
                {\n
                    cgc_putc(v14->field_0);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 120)\n
            {\n
                v29 = a0;\n
                a0 = v29 + 1;\n
                v13 = &*(v29)->field_0;\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            cgc_putc(48);\n
                        else\n
                            cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    cgc_putc(v12->field_0);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        cgc_putc(32);\n
                        v24 += 1;\n
                    }\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (*(v26) == 102)\n
            {\n
                a0 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            cgc_putc(32);\n
                        else\n
                            cgc_putc(48);\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    cgc_putc(v10->field_0);\n
                    v24 += 1;\n
                }\n
                v26 += 1;\n
                continue;\n
            }\n
            if (!(*(v26) == 115))\n
                goto LABEL_403344;\n
            v35 = a0;\n
            a0 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_4031c3;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_4031c3:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (!v20)\n
                        cgc_putc(32);\n
                    else\n
                        cgc_putc(48);\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                cgc_putc(*(v9));\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    cgc_putc(32);\n
                    v24 += 1;\n
                }\n
            }\n
            v26 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4207451:sub_40335b": null, "4207456:cgc_vsprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v26, char *a0, struct struct_0 **a1)\n
{\n
    struct_1 *v0;  // [bp-0xb4]\n
    unsigned int v1;  // [bp-0xb0]\n
    char v2;  // [bp-0xa5]\n
    unsigned int v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    unsigned int v5;  // [bp-0x9c]\n
    unsigned int v6;  // [bp-0x98]\n
    unsigned int v7;  // [bp-0x94]\n
    unsigned int v8;  // [bp-0x90]\n
    char *v9;  // [bp-0x8c], Other Possible Types: unsigned int\n
    struct_1 *v10;  // [bp-0x88], Other Possible Types: unsigned int\n
    unsigned long v11;  // [bp-0x84]\n
    struct_1 *v12;  // [bp-0x7c], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0x78]\n
    struct_1 *v14;  // [bp-0x74], Other Possible Types: unsigned int\n
    char *v15;  // [bp-0x70]\n
    char v16;  // [bp-0x69]\n
    void* v17;  // [bp-0x68], Other Possible Types: unsigned int\n
    void* v18;  // [bp-0x64], Other Possible Types: unsigned int\n
    unsigned int v19;  // [bp-0x60]\n
    void* v20;  // [bp-0x5c], Other Possible Types: unsigned int\n
    void* v21;  // [bp-0x58], Other Possible Types: unsigned int\n
    void* v22;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v23;  // [bp-0x50]\n
    char *v24;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v25;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    struct struct_0 **v29;  // eax\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    struct struct_0 **v35;  // eax\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v24 = 0;\n
    if (!a0)\n
    {\n
        v25 = -1;\n
        return v25;\n
    }\n
    while (*(a0))\n
    {\n
        if (*(a0) != 64)\n
        {\n
            *((v26 + v24)) = *(a0);\n
            a0 += 1;\n
            v24 += 1;\n
LABEL_403b9b:\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            v22 = 0;\n
            v21 = 0;\n
            v20 = 0;\n
            v19 = 0;\n
            v17 = 0;\n
            if (*(a0) == 64)\n
            {\n
                *((v26 + v24)) = 64;\n
                a0 += 1;\n
                v24 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 45)\n
            {\n
                v19 = 1;\n
                a0 += 1;\n
            }\n
            if (cgc_isdigit())\n
            {\n
                if (*(a0) == 48)\n
                {\n
                    v20 = 1;\n
                    a0 += 1;\n
                }\n
                if (cgc_isdigit())\n
                {\n
                    for (v22 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
                }\n
            }\n
            if (*(a0) == 46)\n
            {\n
                a0 += 1;\n
                for (v21 = cgc_atoi(); cgc_isdigit(); a0 += 1);\n
            }\n
            if (*(a0) == 99)\n
            {\n
                v27 = a1;\n
                a1 = v27 + 1;\n
                v16 = *(v27);\n
                v17 = v22 - 1;\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                *((v26 + v24)) = v16;\n
                v24 += 1;\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 100)\n
            {\n
                v28 = a1;\n
                a1 = v28 + 1;\n
                v15 = &*(v28)->field_0;\n
                cgc_int_to_str(v15, &v23);\n
                v6 = v22;\n
                v17 = v6 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v14 = &v23; *(v14); v14 += 1)\n
                {\n
                    *((v26 + v24)) = *(v14);\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 120)\n
            {\n
                v29 = a1;\n
                a1 = v29 + 1;\n
                v13 = &*(v29)->field_0;\n
                cgc_int_to_hex(v13, &v23);\n
                v5 = v22;\n
                v17 = v5 - cgc_strlen(&v23);\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (!v20)\n
                            *((v26 + v24)) = 32;\n
                        else\n
                            *((v26 + v24)) = 48;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v12 = &v23; v12->field_0; v12 += 1)\n
                {\n
                    *((v26 + v24)) = v12->field_0;\n
                    v24 += 1;\n
                }\n
                if (v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (*(a0) == 102)\n
            {\n
                a1 += 2;\n
                [D] PutI(72:F64x8)[t25,0] = t28\n
                [D] PutI(136:I8x8)[t25,0] = 0x01\n
                v11 = ([D] GetI(136:I8x8)[t40,0] ? [D] GetI(72:F64x8)[t40,0] : nan);\n
                [D] PutI(136:I8x8)[t40,0] = 0x00\n
                v32 = ftop<4> - 1 + 1;\n
                v33 = v32 - 1;\n
                [D] PutI(72:F64x8)[t49,0] = t52\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                v1 = v21;\n
                v0 = &v23;\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v34 = v33 + 1;\n
                cgc_float_to_str();\n
                v4 = v22;\n
                v17 = v4 - cgc_strlen();\n
                if (!v19)\n
                {\n
                    for (v18 = 0; v18 < v17; v18 += 1)\n
                    {\n
                        if (v20)\n
                            *((v26 + v24)) = 48;\n
                        else\n
                            *((v26 + v24)) = 32;\n
                        v24 += 1;\n
                    }\n
                }\n
                for (v10 = &v23; v10->field_0; v10 += 1)\n
                {\n
                    *((v26 + v24)) = v10->field_0;\n
                    v24 += 1;\n
                }\n
                a0 += 1;\n
                continue;\n
            }\n
            if (!(*(a0) == 115))\n
                goto LABEL_403b9b;\n
            v35 = a1;\n
            a1 = v35 + 1;\n
            v9 = &*(v35)->field_0;\n
            if (v21 > 0)\n
            {\n
                v3 = v21;\n
                if (v3 < cgc_strlen())\n
                {\n
                    v8 = v21;\n
                    goto LABEL_403a3e;\n
                }\n
            }\n
            v8 = cgc_strlen();\n
LABEL_403a3e:\n
            v17 = v22 - v8;\n
            if (!v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    if (v20)\n
                        *((v26 + v24)) = 48;\n
                    else\n
                        *((v26 + v24)) = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            while (true)\n
            {\n
                v2 = 0;\n
                if (*(v9))\n
                    v2 = !(v8 <= 0);\n
                if (!(v2 & 1))\n
                    break;\n
                *((v26 + v24)) = *(v9);\n
                v24 += 1;\n
                v9 += 1;\n
                v8 -= 1;\n
            }\n
            if (v19)\n
            {\n
                for (v18 = 0; v18 < v17; v18 += 1)\n
                {\n
                    *((v26 + v24)) = 32;\n
                    v24 += 1;\n
                }\n
            }\n
            a0 += 1;\n
        }\n
    }\n
    v25 = v24;\n
    return v25;\n
}\n
", "4209586:sub_403bb2": null, "4209600:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4209664:cgc_sprintf": "int cgc_sprintf(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0xc]\n
    unsigned int v5;  // esi\n
\n
    v2 = v5;\n
    v1 = &v4;\n
    v0 = cgc_vsprintf(v3, a0, v1);\n
    return v0;\n
}\n
", "4209733:sub_403c45": null, "4209744:cgc_sprng": "typedef struct struct_0 {\n
    char padding_0[236];\n
    unsigned int field_ec;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprng(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // edi\n
    struct_0 *v16;  // eax\n
    unsigned int v17;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = a0;\n
    v2 = v4;\n
    for (v1 = 0; v1 < 16; v1 += 1)\n
    {\n
        v5 = v2;\n
        v6 = v3;\n
        v3 = v6 ^ v6 / 0x1000;\n
        v2 = v5 ^ ((v6 CONCAT v5) * 0x100000 >> 32);\n
        v8 = v2;\n
        v9 = v3;\n
        v3 = v9 ^ ((v9 CONCAT v8) * 0x2000000 >> 32);\n
        v2 = v8 ^ v8 * 0x2000000;\n
        v12 = v2;\n
        v13 = v3;\n
        v3 = v13 ^ v13 / 0x8000000;\n
        v2 = v12 ^ ((v13 CONCAT v12) * 32 >> 32);\n
        v15 = v2;\n
        v16 = v0;\n
        v17 = v1;\n
        *(&v16->padding_0[108 + 8 * v17]) = v15 * 3625897269;\n
        *(&v16->padding_0[112 + 8 * v17]) = (v15 * 3625897269 >> 32) + v15 * 419896726 + v3 * 3625897269;\n
    }\n
    v0->field_ec = 0;\n
    return v0;\n
}\n
", "4209970:sub_403d32": null, "4209984:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int position;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]);\n
    v2 = *(&(&_GLOBAL_OFFSET_TABLE_)[108 + 8 * position]);\n
    v9 = position + 1;\n
    if (v9 < 0)\n
        v9 = position + 16;\n
    position = position + -(v9 & -0x10) + 1;\n
    v1 = *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]);\n
    v0 = *(&(&_GLOBAL_OFFSET_TABLE_)[108 + 8 * position]);\n
    v10 = v0;\n
    v11 = v1;\n
    v1 = v11 ^ ((v11 CONCAT v10) * 0x8000000 >> 32);\n
    v0 = v10 ^ v10 * 0x8000000;\n
    v14 = v0;\n
    v15 = v1;\n
    v1 = v15 ^ v15 / 0x2000;\n
    v0 = v14 ^ ((v15 CONCAT v14) * 0x80000 >> 32);\n
    v2 ^= v3 >> 14;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[112 + 8 * position]) = v3 ^ v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[108 + 8 * position]) = v2 ^ v0;\n
    return *(&(&_GLOBAL_OFFSET_TABLE_)[108 + 8 * position]) * 3479400805;\n
}\n
", "4210248:sub_403e48": null, "4210256:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 <= v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = a0 - v5 + 1;\n
    v2 = (0 CONCAT -1) /m v3;\n
    do\n
    {\n
        v1 = cgc_prng();\n
    } while (v1 >= v3 * v2);\n
    v4 = (0 CONCAT v1) /m v2 + v5;\n
    return v4;\n
}\n
", "4210385:sub_403ed1": null, "4210400:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4210472:sub_403f28": null, "4210480:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4210534:sub_403f66": null, "4210544:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4210598:sub_403fa6": null, "4210608:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4210674:sub_403ff2": null, "4210688:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4210754:sub_404042": null, "4210768:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4210822:sub_404086": null, "4210832:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4210926:sub_4040ee": null, "4210928:cgc_isnan": null, "4210951:sub_404107": null, "4210960:cgc_isinf": null, "4211007:sub_40413f": null, "4211008:cgc_atof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_404372:\n
                v15 = v5;\n
                v3 = v15;\n
                if (![D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40434b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40434b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40434b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_404372;\n
                if (!v4)\n
                {\n
LABEL_4042c7:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40434b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_4042c7;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40434b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4211596:sub_40438c": null, "4211600:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4212004:sub_404524": null, "4212016:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4212107:sub_40458b": null, "4212112:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1[v2] = v1[a0];\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        v1[v2] = 0;\n
    }\n
    return v2;\n
}\n
", "4212267:sub_40462b": null, "4212272:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4212380:sub_40469c": null, "4212384:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4212462:sub_4046ee": null, "4212464:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4212572:sub_40475c": null, "4212576:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4212771:sub_404823": null, "4212784:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4212861:sub_40487d": null, "4212864:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        *((v5 + v4)) = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v2 != a0)\n
        {\n
            *((v5 + v4)) = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            return v4;\n
        }\n
    }\n
}\n
", "4213056:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); *((a0 + v2)); v2 += 1)\n
        {\n
            v3[v1] = *((a0 + v2));\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4213215:sub_4049df": null, "4213216:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4213415:sub_404aa7": null, "4213424:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v0 = &v3;\n
    cgc_transmit(1, v1, cgc_strlen(v5));\n
    v0 = &v3;\n
    v7 = v4;\n
    return cgc_transmit(1, v2 - 9460, 1);\n
}\n
", "4213547:sub_404b2b": null, "4213552:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4213658:sub_404b9a": null, "4213664:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
    unsigned int field_54;\n
    unsigned int field_58;\n
    struct struct_1 *field_5c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_54)\n
        {\n
            cgc_deallocate(v4->field_54);\n
            v12 = v4;\n
            v12->field_54 = 0;\n
            v12->field_58 = 0;\n
            v12->field_5c = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_54)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_5c >= v11->field_54 + v11->field_58)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_54)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_58 = cgc_strlen(v10);\n
        v0 = &v13->field_54;\n
        if (cgc_allocate(v13->field_58, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_54, v10);\n
        v14 = v4;\n
        v14->field_5c = v14->field_54;\n
    }\n
    v10 = &v4->field_5c->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_54 + v15->field_58;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_54 + v16->field_58)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_50 = v8;\n
    *(v7) = 0;\n
    v17->field_5c = v7 + 1;\n
    v9 = v17->field_50;\n
    return v9;\n
}\n
", "4214411:sub_404e8b": null, "4214416:cgc_write": "int cgc_write(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    cgc_transmit(1, v3, a0);\n
    if (a0 != *(&v1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = *(&v1);\n
    return v2;\n
}\n
", "4214513:sub_404ef1": null, "4214528:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4214720:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc();\n
    cgc_memset(v1, 0, v3 * a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4214810:sub_40501a": null, "4214816:cgc_malloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_heap_manager;\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    char v0;  // [bp-0x1d]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_heap_manager)\n
    {\n
        cgc_allocate(0x1000, 0);\n
        v7 = v1;\n
        *((v7 + 96)) = *(&v3);\n
        *(*((v7 + 96))) = 0x1000;\n
        *((*((v7 + 96)) + 8)) = 4;\n
        *((*((v7 + 96)) + 4)) = 0x1000 - *((*((v7 + 96)) + 8));\n
        cgc_allocate(0x1000, 0);\n
        cgc_memset(*((*((v1 + 96)) + 12)), 0, 0x1000);\n
        v4 = *((*((v1 + 96)) + 12));\n
        *(v4) = 4084;\n
        *((v4 + 4)) = 0;\n
    }\n
    v4 = *((*((v1 + 96)) + 12));\n
    if (v6 > *(v4))\n
    {\n
        cgc_allocate(0x1000, 0);\n
        if (!*((v4 + 4)))\n
        {\n
            cgc_puts(v1 - 9458);\n
            cgc__terminate();\n
        }\n
        v4 = *((v4 + 4));\n
        *(v4) = 4084;\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v8 = v4;\n
        *(v8) = *(v8) - v6;\n
        v2 = v4 + 8;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if ((*((v2 + 4)) & 1))\n
                v0 = *(v2) < v6 + 8;\n
            if (!(v0 & 1))\n
                break;\n
            v2 = v2 + 8 + *(v2);\n
        }\n
        *(v2) = v6;\n
        *((v2 + 4)) = 1;\n
        v5 = v2 + 8;\n
        return v5;\n
    }\n
}\n
", "4215329:sub_405221": null, "4215344:cgc_free": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_1 *v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v1 = v2 - 8;\n
    v1->field_4 = 2;\n
    v0 = &v2 & -0x1000;\n
    v3 = v0;\n
    *(&v3) = v1->field_0 + *(&v3);\n
    return v0;\n
}\n
", "4215397:sub_405265": null, "4215408:_Block_object_assign": "int _Block_object_assign(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0;\n
}\n
", "4215422:sub_40527e": null, "4215424:_Block_object_dispose": "int _Block_object_dispose(unsigned int v0, unsigned int a0)\n
{\n
    return v0;\n
}\n
", "4215435:sub_40528b": null, "4215440:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v0 = 0;\n
    cgc_send_empty_frame();\n
    v0 = 0;\n
    cgc_expect_empty_frame();\n
    cgc_scramble();\n
    if (cgc_scramble_okay())\n
    {\n
        while (true)\n
        {\n
            cgc_cool_set_stuff();\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            cgc_safe_set_stuff();\n
        }\n
    }\n
}\n
", "4215566:sub_40530e": null, "4215568:cgc_scramble": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_scramble()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v4 = cgc_scramble_done();\n
        *(&v4) = v4 ^ 255;\n
        if (!(*(&v4) & 1))\n
            break;\n
        v2 = cgc_expect_frame();\n
        v0 = v2;\n
        cgc_handle_scramble(0);\n
        cgc_free_frame(v2);\n
    }\n
    return v4;\n
}\n
", "4215685:sub_405385": null, "4215696:cgc_cool_set_stuff": "extern unsigned int __block_literal_global;\n
\n
int cgc_cool_set_stuff()\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return cgc_with_set(&__block_literal_global, *(&v0));\n
}\n
", "4215733:sub_4053b5": null, "4215744:__cgc_cool_set_stuff_block_invoke": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cgc_cool_set_stuff_block_invoke(unsigned int v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v5;\n
    while (true)\n
    {\n
        v3 = cgc_receive_frame();\n
        v1 = *(v3);\n
        if (v1 == 16)\n
        {\n
            v0 = v3;\n
            cgc_handle_check(a0);\n
        }\n
        else if (v1 == 32)\n
        {\n
            v0 = v3;\n
            cgc_handle_add(a0);\n
        }\n
        else if (v1 == 48)\n
        {\n
            v0 = v3;\n
            cgc_handle_subtract(a0);\n
        }\n
        else\n
        {\n
            if (v1 == 64)\n
                break;\n
            cgc__terminate();\n
        }\n
        cgc_free_frame();\n
    }\n
    cgc_free_frame();\n
    return cgc_send_empty_frame();\n
}\n
", "4216007:sub_4054c7": null, "4216016:cgc_safe_set_stuff": "extern unsigned int __block_literal_global.2;\n
\n
int cgc_safe_set_stuff()\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return cgc_with_set(&__block_literal_global.2, *(&v0));\n
}\n
", "4216053:sub_4054f5": null, "4216064:__cgc_safe_set_stuff_block_invoke": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cgc_safe_set_stuff_block_invoke(unsigned int v5, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v5;\n
    while (true)\n
    {\n
        v3 = cgc_receive_frame();\n
        v1 = *(v3);\n
        if (v1 == 16)\n
        {\n
            v0 = v3;\n
            cgc_handle_check_safe(a0);\n
        }\n
        else if (v1 == 32)\n
        {\n
            v0 = v3;\n
            cgc_handle_add_safe(a0);\n
        }\n
        else if (v1 == 48)\n
        {\n
            v0 = v3;\n
            cgc_handle_subtract_safe(a0);\n
        }\n
        else\n
        {\n
            if (v1 == 64)\n
                break;\n
            cgc__terminate();\n
        }\n
        cgc_free_frame();\n
    }\n
    cgc_free_frame();\n
    return cgc_send_empty_frame();\n
}\n
", "4216327:sub_405607": null, "4216336:cgc_handle_scramble": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_scramble(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    v2 = *(cgc_extract_scramble_req());\n
    v0 = v2;\n
    cgc_scramble_add();\n
    v0 = 2;\n
    v6 = v3;\n
    return cgc_send_empty_frame();\n
}\n
", "4216418:sub_405662": null, "4216432:cgc_handle_check": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_check(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xb]\n
    unsigned short v4;  // [bp-0xa]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = *(cgc_extract_check_req());\n
    v0 = v4;\n
    v3 = cgc_check_set(v6);\n
    v2 = (v3 ? 18 : 17);\n
    v9 = v5;\n
    return cgc_send_empty_frame();\n
}\n
", "4216549:sub_4056e5": null, "4216560:cgc_handle_add": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_add(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = *(cgc_extract_add_req());\n
    v0 = v2;\n
    cgc_add_set(v4);\n
    v6 = v3;\n
    return cgc_send_empty_frame(33);\n
}\n
", "4216649:sub_405749": null, "4216656:cgc_handle_subtract": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_subtract(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = *(cgc_extract_subtract_req());\n
    v0 = v2;\n
    cgc_subtract_set(v4);\n
    v6 = v3;\n
    return cgc_send_empty_frame(49);\n
}\n
", "4216745:sub_4057a9": null, "4216752:cgc_handle_check_safe": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_check_safe(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xb]\n
    unsigned short v4;  // [bp-0xa]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = *(cgc_extract_check_req());\n
    v0 = v4 & 32767;\n
    v3 = cgc_check_set(v6);\n
    v2 = (v3 ? 18 : 17);\n
    v9 = v5;\n
    return cgc_send_empty_frame();\n
}\n
", "4216877:sub_40582d": null, "4216880:cgc_handle_add_safe": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_add_safe(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = *(cgc_extract_add_req());\n
    v0 = v2 & 32767;\n
    cgc_add_set(v4);\n
    v6 = v3;\n
    return cgc_send_empty_frame(33);\n
}\n
", "4216977:sub_405891": null, "4216992:cgc_handle_subtract_safe": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_subtract_safe(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xa]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = *(cgc_extract_subtract_req());\n
    v0 = v2 & 32767;\n
    cgc_subtract_set(v4);\n
    v6 = v3;\n
    return cgc_send_empty_frame(49);\n
}\n
", "4217089:sub_405901": null, "4217104:cgc_extract_scramble_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_scramble_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 1)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_1 != 2)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4217202:sub_405972": null, "4217216:cgc_extract_check_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_check_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 16)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_1 != 2)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4217314:sub_4059e2": null, "4217328:cgc_extract_add_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_add_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 32)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_1 != 2)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4217426:sub_405a52": null, "4217440:cgc_extract_subtract_req": "typedef struct struct_0 {\n
    char field_0;\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_extract_subtract_req(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_0 != 48)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    if (v2->field_1 != 2)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
    }\n
    return v2->field_4;\n
}\n
", "4217538:sub_405ac2": null, "4217552:cgc_allocate_frame": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_frame()\n
{\n
    struct struct_0 **v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    char v2[2];  // [bp-0x14]\n
    char *v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v6;  // [bp+0x4]\n
    unsigned int v7;  // ebx\n
    char v8[2];  // eax\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v2) = &v6;\n
    v0 = &v3;\n
    if (cgc_allocate(8, 0))\n
        cgc__terminate();\n
    v8 = v2;\n
    *(v3) = v8[0];\n
    v3[1] = v8[1];\n
    if (!v3[1])\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    v0 = v3 + 4;\n
    if (cgc_allocate(v2[1], 0))\n
        cgc__terminate();\n
    v4 = v3;\n
    return v4;\n
}\n
", "4217756:sub_405b9c": null, "4217760:cgc_expect_frame": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_expect_frame(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_receive_frame();\n
    if (*(v2) != v4)\n
    {\n
        v0 = -1;\n
        cgc__terminate();\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4217835:sub_405beb": null, "4217840:cgc_receive_frame": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_frame()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_0 *v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    char v6;  // [bp-0x13]\n
    struct_0 *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 2;\n
    v3 = 0;\n
    v0 = 2;\n
    cgc_receive_eventually(0, &v5);\n
    v2 = cgc_allocate_frame();\n
    if (!v2->field_1)\n
    {\n
        v7 = v2;\n
        return v7;\n
    }\n
    v0 = v2->field_1;\n
    cgc_receive_eventually(0, v2->field_4);\n
    v7 = v2;\n
    return v7;\n
}\n
", "4218019:sub_405ca3": null, "4218032:cgc_receive_eventually": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_eventually(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    for (v4 = a0; v5 < a1; v4 = v2 + v4)\n
    {\n
        v3 = 0;\n
        v2 = 0;\n
        v0 = &v2;\n
        v3 = cgc_receive(v6, v4, a1 - v5);\n
        if (v3)\n
            cgc__terminate();\n
        if (!v2)\n
            cgc__terminate();\n
        v5 = v2 + v5;\n
    }\n
    return v5;\n
}\n
", "4218224:cgc_send_frame": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_frame(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_send_eventually(1, v2, 2);\n
    v4 = v1;\n
    return cgc_send_eventually(1, v2->field_4);\n
}\n
", "4218318:sub_405dce": null, "4218320:cgc_send_eventually": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_eventually(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    for (v4 = a0; v5 < a1; v4 = v2 + v4)\n
    {\n
        v3 = 0;\n
        v2 = 0;\n
        v0 = &v2;\n
        v3 = cgc_transmit(v6, v4, a1 - v5);\n
        if (v3)\n
            cgc__terminate();\n
        v5 = v2 + v5;\n
    }\n
    return v5;\n
}\n
", "4218487:sub_405e77": null, "4218496:cgc_send_empty_frame": "int cgc_send_empty_frame(char v3)\n
{\n
    char v0;  // [bp-0x14]\n
    char v1;  // [bp-0x13]\n
    void* v2;  // [bp-0x10]\n
\n
    v0 = v3;\n
    v1 = 0;\n
    v2 = 0;\n
    return cgc_send_frame(&v0);\n
}\n
", "4218552:sub_405eb8": null, "4218560:cgc_expect_empty_frame": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_expect_empty_frame(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_expect_frame(v3);\n
    v5 = v2;\n
    return cgc_free_frame();\n
}\n
", "4218620:sub_405efc": null, "4218624:cgc_free_frame": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_frame(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2->field_4)\n
    {\n
        v0 = v2->field_1;\n
        if (cgc_deallocate(v2->field_4))\n
            cgc__terminate();\n
    }\n
    v0 = 4;\n
    v3 = cgc_deallocate(v2);\n
    if (v3)\n
    {\n
        v3 = cgc__terminate();\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4218771:sub_405f93": null, "4218784:cgc_scramble_done": "extern char cgc_scramble_steps;\n
\n
int cgc_scramble_done()\n
{\n
    return !(cgc_scramble_steps < 8);\n
}\n
", "4218822:sub_405fc6": null, "4218832:cgc_scramble_add": "typedef struct struct_1 {\n
    char padding_0[100];\n
    char field_64;\n
    char padding_65[7];\n
    unsigned int field_6c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[108];\n
    unsigned int field_6c;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_scramble_steps;\n
\n
int cgc_scramble_add()\n
{\n
}\n
", "4219430:sub_406226": null, "4219440:cgc_scramble_okay": "extern unsigned int state;\n
\n
int cgc_scramble_okay()\n
{\n
    return state == 21;\n
}\n
", "4219482:sub_40625a": null, "4219488:cgc_phase_0": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_0(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_tan();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t64,0] ? [D] GetI(72:F64x8)[t64,0] : nan);\n
    [D] PutI(136:I8x8)[t64,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 * 2 ^ 662804442;\n
    *(v60) = *(v60) ^ v25 >> 8 ^ 436306409;\n
    *(v60) = *(v60) ^ v25 * 0x1000;\n
    *(v60) = *(v60) ^ v25 >> 6;\n
    [D] PutI(72:F64x8)[t118,0] = t121\n
    [D] PutI(136:I8x8)[t118,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t129,0] = t132\n
    [D] PutI(136:I8x8)[t129,0] = 0x01\n
    [D] PutI(72:F64x8)[t140,1] = t141\n
    [D] PutI(136:I8x8)[t140,1] = 0x01\n
    [D] PutI(136:I8x8)[t140,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t162,0] = t165\n
    [D] PutI(136:I8x8)[t162,0] = 0x01\n
    [D] PutI(72:F64x8)[t172,1] = t173\n
    [D] PutI(136:I8x8)[t172,1] = 0x01\n
    [D] PutI(136:I8x8)[t172,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t196,0] ? [D] GetI(72:F64x8)[t196,0] : nan);\n
    [D] PutI(136:I8x8)[t196,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_log2();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t65,0] ? [D] GetI(72:F64x8)[t65,0] : nan);\n
    [D] PutI(136:I8x8)[t65,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 * 4;\n
    *(v94) = *(v94) ^ v25 * 0x2000;\n
    *(v94) = *(v94) ^ v25 >> 5 ^ 944261325;\n
    *(v94) = *(v94) ^ v25 >> 7;\n
    [D] PutI(72:F64x8)[t130,0] = t133\n
    [D] PutI(136:I8x8)[t130,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t141,0] = t144\n
    [D] PutI(136:I8x8)[t141,0] = 0x01\n
    [D] PutI(72:F64x8)[t152,1] = t153\n
    [D] PutI(136:I8x8)[t152,1] = 0x01\n
    [D] PutI(136:I8x8)[t152,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t174,0] = t177\n
    [D] PutI(136:I8x8)[t174,0] = 0x01\n
    [D] PutI(72:F64x8)[t184,1] = t185\n
    [D] PutI(136:I8x8)[t184,1] = 0x01\n
    [D] PutI(136:I8x8)[t184,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t208,0] ? [D] GetI(72:F64x8)[t208,0] : nan);\n
    [D] PutI(136:I8x8)[t208,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_tan();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    *(v125) = *(v125) ^ v25 >> 8 ^ 905813608;\n
    *(v125) = *(v125) ^ v25 * 128 ^ 661603067;\n
    *(v125) = *(v125) ^ v25 >> 7 ^ 854646238;\n
    *(v125) = *(v125) ^ v25 >> 6;\n
    [D] PutI(72:F64x8)[t136,0] = t139\n
    [D] PutI(136:I8x8)[t136,0] = 0x01\n
    [D] PutI(72:F64x8)[t147,0] = t150\n
    [D] PutI(136:I8x8)[t147,0] = 0x01\n
    [D] PutI(72:F64x8)[t158,1] = t159\n
    [D] PutI(136:I8x8)[t158,1] = 0x01\n
    [D] PutI(136:I8x8)[t158,0] = 0x00\n
    [D] PutI(72:F64x8)[t180,0] = t183\n
    [D] PutI(136:I8x8)[t180,0] = 0x01\n
    [D] PutI(72:F64x8)[t190,1] = t191\n
    [D] PutI(136:I8x8)[t190,1] = 0x01\n
    [D] PutI(136:I8x8)[t190,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t214,0] ? [D] GetI(72:F64x8)[t214,0] : nan);\n
    [D] PutI(136:I8x8)[t214,0] = 0x00\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t78,0] ? [D] GetI(72:F64x8)[t78,0] : nan);\n
    [D] PutI(136:I8x8)[t78,0] = 0x00\n
    *(v126) = *(v126) ^ v25 * 32;\n
    *(v126) = *(v126) ^ v25 * 16;\n
    *(v126) = *(v126) ^ v25 >> 12 ^ 258335351;\n
    *(v126) = *(v126) ^ v25 >> 9 ^ 779934883;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4220362:sub_4065ca": null, "4220368:cgc_phase_1": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_1(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_sin();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 >> 6 ^ 439179355;\n
    *(v60) = *(v60) ^ v25 >> 2 ^ 237303735;\n
    *(v60) = *(v60) ^ v25 * 0x8000;\n
    *(v60) = *(v60) ^ v25 >> 11;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_cos();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t62,0] ? [D] GetI(72:F64x8)[t62,0] : nan);\n
    [D] PutI(136:I8x8)[t62,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 >> 6;\n
    *(v94) = *(v94) ^ v25 * 0x1000;\n
    *(v94) = *(v94) ^ v25 >> 9;\n
    *(v94) = *(v94) ^ v25 >> 2;\n
    [D] PutI(72:F64x8)[t127,0] = t130\n
    [D] PutI(136:I8x8)[t127,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t138,0] = t141\n
    [D] PutI(136:I8x8)[t138,0] = 0x01\n
    [D] PutI(72:F64x8)[t149,1] = t150\n
    [D] PutI(136:I8x8)[t149,1] = 0x01\n
    [D] PutI(136:I8x8)[t149,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t171,0] = t174\n
    [D] PutI(136:I8x8)[t171,0] = 0x01\n
    [D] PutI(72:F64x8)[t181,1] = t182\n
    [D] PutI(136:I8x8)[t181,1] = 0x01\n
    [D] PutI(136:I8x8)[t181,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t205,0] ? [D] GetI(72:F64x8)[t205,0] : nan);\n
    [D] PutI(136:I8x8)[t205,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    *(v125) = *(v125) ^ v25 * 0x4000 ^ 327753315;\n
    *(v125) = *(v125) ^ v25 * 0x800;\n
    *(v125) = *(v125) ^ v25 >> 1;\n
    *(v125) = *(v125) ^ v25 >> 10 ^ 196326147;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t72,0] ? [D] GetI(72:F64x8)[t72,0] : nan);\n
    [D] PutI(136:I8x8)[t72,0] = 0x00\n
    *(v126) = *(v126) ^ v25 >> 14;\n
    *(v126) = *(v126) ^ v25 * 8;\n
    *(v126) = *(v126) ^ v25 * 0x200;\n
    *(v126) = *(v126) ^ v25 >> 1;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4221218:sub_406922": null, "4221232:cgc_phase_2": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_2(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_sin();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t62,0] ? [D] GetI(72:F64x8)[t62,0] : nan);\n
    [D] PutI(136:I8x8)[t62,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 * 0x100;\n
    *(v60) = *(v60) ^ v25 * 128;\n
    *(v60) = *(v60) ^ v25 * 0x400;\n
    *(v60) = *(v60) ^ v25 >> 14;\n
    [D] PutI(72:F64x8)[t127,0] = t130\n
    [D] PutI(136:I8x8)[t127,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t138,0] = t141\n
    [D] PutI(136:I8x8)[t138,0] = 0x01\n
    [D] PutI(72:F64x8)[t149,1] = t150\n
    [D] PutI(136:I8x8)[t149,1] = 0x01\n
    [D] PutI(136:I8x8)[t149,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t171,0] = t174\n
    [D] PutI(136:I8x8)[t171,0] = 0x01\n
    [D] PutI(72:F64x8)[t181,1] = t182\n
    [D] PutI(136:I8x8)[t181,1] = 0x01\n
    [D] PutI(136:I8x8)[t181,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t205,0] ? [D] GetI(72:F64x8)[t205,0] : nan);\n
    [D] PutI(136:I8x8)[t205,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_tan();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t62,0] ? [D] GetI(72:F64x8)[t62,0] : nan);\n
    [D] PutI(136:I8x8)[t62,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 >> 8;\n
    *(v94) = *(v94) ^ v25 * 32;\n
    *(v94) = *(v94) ^ v25 * 0x200;\n
    *(v94) = *(v94) ^ v25 >> 6;\n
    [D] PutI(72:F64x8)[t127,0] = t130\n
    [D] PutI(136:I8x8)[t127,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t138,0] = t141\n
    [D] PutI(136:I8x8)[t138,0] = 0x01\n
    [D] PutI(72:F64x8)[t149,1] = t150\n
    [D] PutI(136:I8x8)[t149,1] = 0x01\n
    [D] PutI(136:I8x8)[t149,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t171,0] = t174\n
    [D] PutI(136:I8x8)[t171,0] = 0x01\n
    [D] PutI(72:F64x8)[t181,1] = t182\n
    [D] PutI(136:I8x8)[t181,1] = 0x01\n
    [D] PutI(136:I8x8)[t181,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t205,0] ? [D] GetI(72:F64x8)[t205,0] : nan);\n
    [D] PutI(136:I8x8)[t205,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    *(v125) = *(v125) ^ v25 >> 13;\n
    *(v125) = *(v125) ^ v25 >> 10 ^ 786056884;\n
    *(v125) = *(v125) ^ v25 * 0x800 ^ 110291162;\n
    *(v125) = *(v125) ^ v25 >> 5 ^ 576003576;\n
    [D] PutI(72:F64x8)[t136,0] = t139\n
    [D] PutI(136:I8x8)[t136,0] = 0x01\n
    [D] PutI(72:F64x8)[t147,0] = t150\n
    [D] PutI(136:I8x8)[t147,0] = 0x01\n
    [D] PutI(72:F64x8)[t158,1] = t159\n
    [D] PutI(136:I8x8)[t158,1] = 0x01\n
    [D] PutI(136:I8x8)[t158,0] = 0x00\n
    [D] PutI(72:F64x8)[t180,0] = t183\n
    [D] PutI(136:I8x8)[t180,0] = 0x01\n
    [D] PutI(72:F64x8)[t190,1] = t191\n
    [D] PutI(136:I8x8)[t190,1] = 0x01\n
    [D] PutI(136:I8x8)[t190,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t214,0] ? [D] GetI(72:F64x8)[t214,0] : nan);\n
    [D] PutI(136:I8x8)[t214,0] = 0x00\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t78,0] ? [D] GetI(72:F64x8)[t78,0] : nan);\n
    [D] PutI(136:I8x8)[t78,0] = 0x00\n
    *(v126) = *(v126) ^ v25 * 0x800;\n
    *(v126) = *(v126) ^ v25 >> 1;\n
    *(v126) = *(v126) ^ v25 * 32 ^ 937094273;\n
    *(v126) = *(v126) ^ v25 * 0x100 ^ 554664891;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4222089:sub_406c89": null, "4222096:cgc_phase_3": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_3(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_sin();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 >> 5 ^ 708674924;\n
    *(v60) = *(v60) ^ v25 * 0x8000 ^ 504406548;\n
    *(v60) = *(v60) ^ v25 * 0x800;\n
    *(v60) = *(v60) ^ v25 * 0x8000 ^ 647270034;\n
    [D] PutI(72:F64x8)[t136,0] = t139\n
    [D] PutI(136:I8x8)[t136,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t147,0] = t150\n
    [D] PutI(136:I8x8)[t147,0] = 0x01\n
    [D] PutI(72:F64x8)[t158,1] = t159\n
    [D] PutI(136:I8x8)[t158,1] = 0x01\n
    [D] PutI(136:I8x8)[t158,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t180,0] = t183\n
    [D] PutI(136:I8x8)[t180,0] = 0x01\n
    [D] PutI(72:F64x8)[t190,1] = t191\n
    [D] PutI(136:I8x8)[t190,1] = 0x01\n
    [D] PutI(136:I8x8)[t190,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t214,0] ? [D] GetI(72:F64x8)[t214,0] : nan);\n
    [D] PutI(136:I8x8)[t214,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_log2();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t65,0] ? [D] GetI(72:F64x8)[t65,0] : nan);\n
    [D] PutI(136:I8x8)[t65,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 * 0x4000;\n
    *(v94) = *(v94) ^ v25 >> 4;\n
    *(v94) = *(v94) ^ v25 >> 7 ^ 991209155;\n
    *(v94) = *(v94) ^ v25 * 0x400;\n
    [D] PutI(72:F64x8)[t130,0] = t133\n
    [D] PutI(136:I8x8)[t130,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t141,0] = t144\n
    [D] PutI(136:I8x8)[t141,0] = 0x01\n
    [D] PutI(72:F64x8)[t152,1] = t153\n
    [D] PutI(136:I8x8)[t152,1] = 0x01\n
    [D] PutI(136:I8x8)[t152,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t174,0] = t177\n
    [D] PutI(136:I8x8)[t174,0] = 0x01\n
    [D] PutI(72:F64x8)[t184,1] = t185\n
    [D] PutI(136:I8x8)[t184,1] = 0x01\n
    [D] PutI(136:I8x8)[t184,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t208,0] ? [D] GetI(72:F64x8)[t208,0] : nan);\n
    [D] PutI(136:I8x8)[t208,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    *(v125) = *(v125) ^ v25 * 0x2000;\n
    *(v125) = *(v125) ^ v25 >> 5 ^ 384808372;\n
    *(v125) = *(v125) ^ v25 * 128 ^ 801775006;\n
    *(v125) = *(v125) ^ v25 * 0x400 ^ 364518082;\n
    [D] PutI(72:F64x8)[t136,0] = t139\n
    [D] PutI(136:I8x8)[t136,0] = 0x01\n
    [D] PutI(72:F64x8)[t147,0] = t150\n
    [D] PutI(136:I8x8)[t147,0] = 0x01\n
    [D] PutI(72:F64x8)[t158,1] = t159\n
    [D] PutI(136:I8x8)[t158,1] = 0x01\n
    [D] PutI(136:I8x8)[t158,0] = 0x00\n
    [D] PutI(72:F64x8)[t180,0] = t183\n
    [D] PutI(136:I8x8)[t180,0] = 0x01\n
    [D] PutI(72:F64x8)[t190,1] = t191\n
    [D] PutI(136:I8x8)[t190,1] = 0x01\n
    [D] PutI(136:I8x8)[t190,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t214,0] ? [D] GetI(72:F64x8)[t214,0] : nan);\n
    [D] PutI(136:I8x8)[t214,0] = 0x00\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t78,0] ? [D] GetI(72:F64x8)[t78,0] : nan);\n
    [D] PutI(136:I8x8)[t78,0] = 0x00\n
    *(v126) = *(v126) ^ v25 >> 3 ^ 798845264;\n
    *(v126) = *(v126) ^ v25 >> 11;\n
    *(v126) = *(v126) ^ v25 * 0x2000 ^ 77966248;\n
    *(v126) = *(v126) ^ v25 * 8;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4222977:sub_407001": null, "4222992:cgc_phase_4": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_4(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_tan();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 >> 9;\n
    *(v60) = *(v60) ^ v25 * 128 ^ 474620929;\n
    *(v60) = *(v60) ^ v25 >> 7 ^ 655549109;\n
    *(v60) = *(v60) ^ v25 >> 12;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_log2();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 * 4;\n
    *(v94) = *(v94) ^ v25 * 4 ^ 732118769;\n
    *(v94) = *(v94) ^ v25 * 0x400 ^ 1022315769;\n
    *(v94) = *(v94) ^ v25 * 128;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_tan();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t62,0] ? [D] GetI(72:F64x8)[t62,0] : nan);\n
    [D] PutI(136:I8x8)[t62,0] = 0x00\n
    *(v125) = *(v125) ^ v25 >> 14;\n
    *(v125) = *(v125) ^ v25 * 4;\n
    *(v125) = *(v125) ^ v25 * 8;\n
    *(v125) = *(v125) ^ v25 * 0x200;\n
    [D] PutI(72:F64x8)[t127,0] = t130\n
    [D] PutI(136:I8x8)[t127,0] = 0x01\n
    [D] PutI(72:F64x8)[t138,0] = t141\n
    [D] PutI(136:I8x8)[t138,0] = 0x01\n
    [D] PutI(72:F64x8)[t149,1] = t150\n
    [D] PutI(136:I8x8)[t149,1] = 0x01\n
    [D] PutI(136:I8x8)[t149,0] = 0x00\n
    [D] PutI(72:F64x8)[t171,0] = t174\n
    [D] PutI(136:I8x8)[t171,0] = 0x01\n
    [D] PutI(72:F64x8)[t181,1] = t182\n
    [D] PutI(136:I8x8)[t181,1] = 0x01\n
    [D] PutI(136:I8x8)[t181,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t205,0] ? [D] GetI(72:F64x8)[t205,0] : nan);\n
    [D] PutI(136:I8x8)[t205,0] = 0x00\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t81,0] ? [D] GetI(72:F64x8)[t81,0] : nan);\n
    [D] PutI(136:I8x8)[t81,0] = 0x00\n
    *(v126) = *(v126) ^ v25 * 128;\n
    *(v126) = *(v126) ^ v25 >> 12 ^ 213686654;\n
    *(v126) = *(v126) ^ v25 * 4 ^ 135412687;\n
    *(v126) = *(v126) ^ v25 * 32 ^ 758040657;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4223861:sub_407375": null, "4223872:cgc_phase_5": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_5(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_log2();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 >> 4 ^ 139902303;\n
    *(v60) = *(v60) ^ v25 >> 12;\n
    *(v60) = *(v60) ^ v25 * 0x400 ^ 750961630;\n
    *(v60) = *(v60) ^ v25 * 0x200;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_tan();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t65,0] ? [D] GetI(72:F64x8)[t65,0] : nan);\n
    [D] PutI(136:I8x8)[t65,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 * 4;\n
    *(v94) = *(v94) ^ v25 >> 8 ^ 85809179;\n
    *(v94) = *(v94) ^ v25 >> 14;\n
    *(v94) = *(v94) ^ v25 >> 2;\n
    [D] PutI(72:F64x8)[t130,0] = t133\n
    [D] PutI(136:I8x8)[t130,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t141,0] = t144\n
    [D] PutI(136:I8x8)[t141,0] = 0x01\n
    [D] PutI(72:F64x8)[t152,1] = t153\n
    [D] PutI(136:I8x8)[t152,1] = 0x01\n
    [D] PutI(136:I8x8)[t152,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t174,0] = t177\n
    [D] PutI(136:I8x8)[t174,0] = 0x01\n
    [D] PutI(72:F64x8)[t184,1] = t185\n
    [D] PutI(136:I8x8)[t184,1] = 0x01\n
    [D] PutI(136:I8x8)[t184,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t208,0] ? [D] GetI(72:F64x8)[t208,0] : nan);\n
    [D] PutI(136:I8x8)[t208,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    *(v125) = *(v125) ^ v25 * 0x8000;\n
    *(v125) = *(v125) ^ v25 >> 3;\n
    *(v125) = *(v125) ^ v25 >> 12 ^ 92203185;\n
    *(v125) = *(v125) ^ v25 >> 12 ^ 643455101;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t75,0] ? [D] GetI(72:F64x8)[t75,0] : nan);\n
    [D] PutI(136:I8x8)[t75,0] = 0x00\n
    *(v126) = *(v126) ^ v25 * 0x4000;\n
    *(v126) = *(v126) ^ v25 >> 10;\n
    *(v126) = *(v126) ^ v25 * 4;\n
    *(v126) = *(v126) ^ v25 * 0x200 ^ 1044416787;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4224735:sub_4076df": null, "4224736:cgc_phase_6": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_6(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_sin();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 >> 13;\n
    *(v60) = *(v60) ^ v25 * 8 ^ 562747429;\n
    *(v60) = *(v60) ^ v25 * 0x200;\n
    *(v60) = *(v60) ^ v25 * 0x4000 ^ 264560968;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_sin();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 * 128;\n
    *(v94) = *(v94) ^ v25 * 64 ^ 431783188;\n
    *(v94) = *(v94) ^ v25 * 16 ^ 532294563;\n
    *(v94) = *(v94) ^ v25 * 0x400;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    *(v125) = *(v125) ^ v25 >> 8;\n
    *(v125) = *(v125) ^ v25 >> 8 ^ 796867605;\n
    *(v125) = *(v125) ^ v25 >> 5 ^ 312637212;\n
    *(v125) = *(v125) ^ v25 * 0x800;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_sin();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t78,0] ? [D] GetI(72:F64x8)[t78,0] : nan);\n
    [D] PutI(136:I8x8)[t78,0] = 0x00\n
    *(v126) = *(v126) ^ v25 * 16 ^ 576267867;\n
    *(v126) = *(v126) ^ v25 * 0x400 ^ 556306256;\n
    *(v126) = *(v126) ^ v25 * 0x400;\n
    *(v126) = *(v126) ^ v25 >> 8;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4225611:sub_407a4b": null, "4225616:cgc_phase_7": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_phase_7(unsigned int *v24, char a0, char a2)\n
{\n
    unsigned long v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int *v2;  // [bp-0x5c]\n
    unsigned int *v3;  // [bp-0x58]\n
    unsigned int *v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    unsigned int v13;  // [bp-0x30]\n
    unsigned int v14;  // [bp-0x2c]\n
    unsigned int v15;  // [bp-0x28]\n
    unsigned int v16;  // [bp-0x24]\n
    unsigned int v17;  // [bp-0x20]\n
    unsigned int v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    unsigned int v20;  // [bp-0x14]\n
    unsigned int v21;  // [bp-0x10]\n
    unsigned int v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // [bp+0xc]\n
    unsigned int v26;  // ebx\n
    unsigned int v27;  // edi\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
    unsigned int v53;  // ftop\n
    unsigned int v54;  // ftop\n
    unsigned int v55;  // ftop\n
    unsigned int v57;  // ftop\n
    unsigned int v58;  // ftop\n
    unsigned int v59;  // ftop\n
    unsigned int *v60;  // eax\n
    unsigned int v61;  // ftop\n
    unsigned int v62;  // ftop\n
    unsigned int v63;  // ftop\n
    unsigned int v64;  // ftop\n
    unsigned int v66;  // ftop\n
    unsigned int v67;  // ftop\n
    unsigned int v68;  // ftop\n
    unsigned int v69;  // ftop\n
    unsigned int v70;  // ftop\n
    unsigned int v71;  // ftop\n
    unsigned int v72;  // ftop\n
    unsigned int v73;  // ftop\n
    unsigned int v75;  // ftop\n
    unsigned int v76;  // ftop\n
    unsigned int v77;  // ftop\n
    unsigned int v78;  // ftop\n
    unsigned int v79;  // ftop\n
    unsigned int v80;  // ftop\n
    unsigned int v81;  // ftop\n
    unsigned int v83;  // ftop\n
    unsigned int v84;  // ftop\n
    unsigned int v85;  // ftop\n
    unsigned int v86;  // ftop\n
    unsigned int v87;  // ftop\n
    unsigned int v88;  // ftop\n
    unsigned int v89;  // ftop\n
    unsigned int v91;  // ftop\n
    unsigned int v92;  // ftop\n
    unsigned int v93;  // ftop\n
    unsigned int *v94;  // eax\n
    unsigned int v95;  // ftop\n
    unsigned int v96;  // ftop\n
    unsigned int v97;  // ftop\n
    unsigned int v98;  // ftop\n
    unsigned int v100;  // ftop\n
    unsigned int v101;  // ftop\n
    unsigned int v102;  // ftop\n
    unsigned int v103;  // ftop\n
    unsigned int v104;  // ftop\n
    unsigned int v105;  // ftop\n
    unsigned int v106;  // ftop\n
    unsigned int v107;  // ftop\n
    unsigned int v109;  // ftop\n
    unsigned int v110;  // ftop\n
    unsigned int v111;  // ftop\n
    unsigned int v112;  // ftop\n
    unsigned int v113;  // ftop\n
    unsigned int v114;  // ftop\n
    unsigned int v115;  // ftop\n
    unsigned int v117;  // ftop\n
    unsigned int v118;  // ftop\n
    unsigned int v119;  // ftop\n
    unsigned int v120;  // ftop\n
    unsigned int v121;  // ftop\n
    unsigned int v122;  // ftop\n
    unsigned int v123;  // ftop\n
    unsigned int *v125;  // eax\n
    unsigned int *v126;  // edx\n
\n
    v23 = v26;\n
    v22 = v27;\n
    v21 = v28;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v24;\n
    v4 = v3;\n
    v2 = &a0;\n
    [D] PutI(72:F64x8)[t54,0] = t57\n
    [D] PutI(136:I8x8)[t54,0] = 0x01\n
    v31 = v29 - 1 - 1;\n
    [D] PutI(72:F64x8)[t65,0] = t68\n
    [D] PutI(136:I8x8)[t65,0] = 0x01\n
    [D] PutI(72:F64x8)[t76,1] = t77\n
    [D] PutI(136:I8x8)[t76,1] = 0x01\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    v32 = v31 + 1;\n
    v33 = v32 - 1;\n
    [D] PutI(72:F64x8)[t98,0] = t101\n
    [D] PutI(136:I8x8)[t98,0] = 0x01\n
    [D] PutI(72:F64x8)[t108,1] = t109\n
    [D] PutI(136:I8x8)[t108,1] = 0x01\n
    [D] PutI(136:I8x8)[t108,0] = 0x00\n
    v34 = v33 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t132,0] ? [D] GetI(72:F64x8)[t132,0] : nan);\n
    [D] PutI(136:I8x8)[t132,0] = 0x00\n
    v35 = v34 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v20 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    else\n
    {\n
        v20 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v36 = v35 + 1;\n
    }\n
    v37 = v36 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v38 = v37 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v39 = v38 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v41 = v39 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v42 = v41 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v43 = v42 + 1;\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v19 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    else\n
    {\n
        v19 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v44 = v43 + 1;\n
    }\n
    v45 = v44 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v46 = v45 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v47 = v46 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v49 = v47 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v50 = v49 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v51 = v50 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v18 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    else\n
    {\n
        v18 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v52 = v51 + 1;\n
    }\n
    v53 = v52 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v54 = v53 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v55 = v54 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v57 = v55 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v58 = v57 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v59 = v58 + 1;\n
    cgc_log2();\n
    v60 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v17 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    else\n
    {\n
        v17 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v61 = v59 + 1;\n
    }\n
    v62 = v61 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v63 = v62 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t71,0] ? [D] GetI(72:F64x8)[t71,0] : nan);\n
    [D] PutI(136:I8x8)[t71,0] = 0x00\n
    v64 = v63 + 1;\n
    *(v60) = *(v60) ^ v25 * 0x100 ^ 801699904;\n
    *(v60) = *(v60) ^ v25 * 0x800 ^ 704955289;\n
    *(v60) = *(v60) ^ v25 * 0x1000;\n
    *(v60) = *(v60) ^ v25 * 0x1000 ^ 1051248570;\n
    [D] PutI(72:F64x8)[t136,0] = t139\n
    [D] PutI(136:I8x8)[t136,0] = 0x01\n
    v66 = v64 - 1 - 1;\n
    [D] PutI(72:F64x8)[t147,0] = t150\n
    [D] PutI(136:I8x8)[t147,0] = 0x01\n
    [D] PutI(72:F64x8)[t158,1] = t159\n
    [D] PutI(136:I8x8)[t158,1] = 0x01\n
    [D] PutI(136:I8x8)[t158,0] = 0x00\n
    v67 = v66 - 0;\n
    [D] PutI(72:F64x8)[t180,0] = t183\n
    [D] PutI(136:I8x8)[t180,0] = 0x01\n
    [D] PutI(72:F64x8)[t190,1] = t191\n
    [D] PutI(136:I8x8)[t190,1] = 0x01\n
    [D] PutI(136:I8x8)[t190,0] = 0x00\n
    v68 = v67 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t214,0] ? [D] GetI(72:F64x8)[t214,0] : nan);\n
    [D] PutI(136:I8x8)[t214,0] = 0x00\n
    v69 = v68 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v16 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    else\n
    {\n
        v16 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v70 = v69 + 1;\n
    }\n
    v71 = v70 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v72 = v71 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v73 = v72 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v75 = v73 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v76 = v75 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v77 = v76 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v15 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    else\n
    {\n
        v15 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v78 = v77 + 1;\n
    }\n
    v79 = v78 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v80 = v79 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v81 = v80 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v83 = v81 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v84 = v83 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v85 = v84 + 1;\n
    cgc_sin();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    else\n
    {\n
        v14 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v86 = v85 + 1;\n
    }\n
    v87 = v86 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v88 = v87 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v89 = v88 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v91 = v89 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v92 = v91 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v93 = v92 + 1;\n
    cgc_log2();\n
    v94 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v13 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    else\n
    {\n
        v13 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v95 = v93 + 1;\n
    }\n
    v96 = v95 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v97 = v96 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t68,0] ? [D] GetI(72:F64x8)[t68,0] : nan);\n
    [D] PutI(136:I8x8)[t68,0] = 0x00\n
    v98 = v97 + 1;\n
    *(v94) = *(v94) ^ v25 * 0x200 ^ 716820001;\n
    *(v94) = *(v94) ^ v25 >> 5;\n
    *(v94) = *(v94) ^ v25 >> 5;\n
    *(v94) = *(v94) ^ v25 * 16 ^ 1024254112;\n
    [D] PutI(72:F64x8)[t133,0] = t136\n
    [D] PutI(136:I8x8)[t133,0] = 0x01\n
    v100 = v98 - 1 - 1;\n
    [D] PutI(72:F64x8)[t144,0] = t147\n
    [D] PutI(136:I8x8)[t144,0] = 0x01\n
    [D] PutI(72:F64x8)[t155,1] = t156\n
    [D] PutI(136:I8x8)[t155,1] = 0x01\n
    [D] PutI(136:I8x8)[t155,0] = 0x00\n
    v101 = v100 - 0;\n
    [D] PutI(72:F64x8)[t177,0] = t180\n
    [D] PutI(136:I8x8)[t177,0] = 0x01\n
    [D] PutI(72:F64x8)[t187,1] = t188\n
    [D] PutI(136:I8x8)[t187,1] = 0x01\n
    [D] PutI(136:I8x8)[t187,0] = 0x00\n
    v102 = v101 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t211,0] ? [D] GetI(72:F64x8)[t211,0] : nan);\n
    [D] PutI(136:I8x8)[t211,0] = 0x00\n
    v103 = v102 + 1;\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    else\n
    {\n
        v12 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v104 = v103 + 1;\n
    }\n
    v105 = v104 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v106 = v105 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v107 = v106 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v109 = v107 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v110 = v109 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v111 = v110 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v11 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    else\n
    {\n
        v11 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v112 = v111 + 1;\n
    }\n
    v113 = v112 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v114 = v113 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v115 = v114 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    v117 = v115 - 1 - 0;\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v118 = v117 + 1;\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    v119 = v118 + 1;\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v10 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    else\n
    {\n
        v10 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v120 = v119 + 1;\n
    }\n
    v121 = v120 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v122 = v121 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    v123 = v122 - 0;\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    v125 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v9 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v9 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t65,0] ? [D] GetI(72:F64x8)[t65,0] : nan);\n
    [D] PutI(136:I8x8)[t65,0] = 0x00\n
    *(v125) = *(v125) ^ v25 >> 4 ^ 445308036;\n
    *(v125) = *(v125) ^ v25 * 0x400;\n
    *(v125) = *(v125) ^ v25 >> 7;\n
    *(v125) = *(v125) ^ v25 * 32;\n
    [D] PutI(72:F64x8)[t130,0] = t133\n
    [D] PutI(136:I8x8)[t130,0] = 0x01\n
    [D] PutI(72:F64x8)[t141,0] = t144\n
    [D] PutI(136:I8x8)[t141,0] = 0x01\n
    [D] PutI(72:F64x8)[t152,1] = t153\n
    [D] PutI(136:I8x8)[t152,1] = 0x01\n
    [D] PutI(136:I8x8)[t152,0] = 0x00\n
    [D] PutI(72:F64x8)[t174,0] = t177\n
    [D] PutI(136:I8x8)[t174,0] = 0x01\n
    [D] PutI(72:F64x8)[t184,1] = t185\n
    [D] PutI(136:I8x8)[t184,1] = 0x01\n
    [D] PutI(136:I8x8)[t184,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t208,0] ? [D] GetI(72:F64x8)[t208,0] : nan);\n
    [D] PutI(136:I8x8)[t208,0] = 0x00\n
    cgc_tan();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v8 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v8 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v7 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v7 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_cos();\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v6 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v6 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t10,0] ? [D] GetI(72:F64x8)[t10,0] : nan);\n
    [D] PutI(136:I8x8)[t10,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t22\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(72:F64x8)[t30,0] = t33\n
    [D] PutI(136:I8x8)[t30,0] = 0x01\n
    [D] PutI(72:F64x8)[t41,1] = t42\n
    [D] PutI(136:I8x8)[t41,1] = 0x01\n
    [D] PutI(136:I8x8)[t41,0] = 0x00\n
    [D] PutI(72:F64x8)[t63,0] = t66\n
    [D] PutI(136:I8x8)[t63,0] = 0x01\n
    [D] PutI(72:F64x8)[t73,1] = t74\n
    [D] PutI(136:I8x8)[t73,1] = 0x01\n
    [D] PutI(136:I8x8)[t73,0] = 0x00\n
    v0 = ([D] GetI(136:I8x8)[t97,0] ? [D] GetI(72:F64x8)[t97,0] : nan);\n
    [D] PutI(136:I8x8)[t97,0] = 0x00\n
    cgc_log2();\n
    v126 = v2;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v5 = [D] GetI(72:F64x8)[t7,0];\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    else\n
    {\n
        v5 = nan;\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v25 = ([D] GetI(136:I8x8)[t72,0] ? [D] GetI(72:F64x8)[t72,0] : nan);\n
    [D] PutI(136:I8x8)[t72,0] = 0x00\n
    *(v126) = *(v126) ^ v25 * 2;\n
    *(v126) = *(v126) ^ v25 * 0x1000;\n
    *(v126) = *(v126) ^ v25 * 0x100;\n
    *(v126) = *(v126) ^ v25 * 32;\n
    *(v3) = *(v126);\n
    return v4;\n
}\n
", "4226479:sub_407daf": null, "4226480:cgc_with_set": "typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_with_set(struct_1 *v5)\n
{\n
    char *v0;  // [bp-0x1018]\n
    unsigned int v1;  // [bp-0x1014]\n
    char *v2;  // [bp-0x1010]\n
    char *v3;  // [bp-0x100c], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x1008]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < 0x1000; v3 += 1)\n
    {\n
        (&v4)[v3] = 0;\n
    }\n
    v2 = &v4;\n
    v0 = v2;\n
    return v5->field_c(v5);\n
}\n
", "4226619:sub_407e3b": null, "4226624:cgc_add_set": "int cgc_add_set(char *v2, unsigned short a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = 1 << (a0 & 7 & 31);\n
    v0 = a0 >> 3;\n
    v3 = v2;\n
    v4 = v0;\n
    v3[v4] = v3[v4] | v1;\n
    return v2;\n
}\n
", "4226690:sub_407e82": null, "4226704:cgc_subtract_set": "int cgc_subtract_set(char *v2, unsigned short a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v1 = (1 << (a0 & 7 & 31)) ^ 255;\n
    v0 = a0 >> 3;\n
    v3 = v2;\n
    v4 = v0;\n
    v3[v4] = v3[v4] & v1;\n
    return v2;\n
}\n
", "4226773:sub_407ed5": null, "4226784:cgc_check_set": "int cgc_check_set(unsigned int v2, unsigned short a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v1 = 1 << (a0 & 7 & 31);\n
    v0 = a0 >> 3;\n
    return v0[v2] & v1;\n
}\n
", "4226848:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_log2": null, "5242884:cgc_pow": null, "5242888:__libc_start_main": null, "5242892:cgc__terminate": null, "5242896:cgc_transmit": null, "5242900:cgc_cos": null, "5242904:cgc_allocate": null, "5242908:cgc_rint": null, "5242912:cgc_tan": null, "5242916:cgc_deallocate": null, "5242920:cgc_log10": null, "5242924:cgc_sin": null, "5242928:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}