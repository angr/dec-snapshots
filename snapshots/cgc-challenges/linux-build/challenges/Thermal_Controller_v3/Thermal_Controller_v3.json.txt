{"4202496:_init": "extern struct_0 *g_40e9c0;\n
\n
int _init()\n
{\n
    if (g_40e9c0)\n
    {\n
        g_40e9c0();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 51383;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 51319;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40e9bc;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40e9bc)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_SetFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetFsError(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = FS_ERROR;\n
    if (!FS_ERROR)\n
    {\n
        v0 = 63;\n
        v3 = cgc_strncpy(v1 + 580, v2);\n
    }\n
    return v3;\n
}\n
", "4203791:sub_40250f": null, "4203792:cgc_ClearFsError": "extern char FS_ERROR;\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClearFsError()\n
{\n
    FS_ERROR = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4203816:sub_402528": null, "4203824:cgc_FsError": "extern char FS_ERROR;\n
\n
int cgc_FsError()\n
{\n
    return &FS_ERROR;\n
}\n
", "4203847:sub_402547": null, "4203856:cgc_DestroyFilesystem": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DestroyFilesystem()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    struct struct_2 **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[178].padding_0[12]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < v0->field_38->field_4; v1 = v1 + 1)\n
    {\n
        if (*((v0->field_38->field_8 + (v1 << 2))))\n
        {\n
            if (*(*((v0->field_38->field_8 + (v1 << 2)))))\n
            {\n
                cgc_free();\n
                *(*((v0->field_38->field_8 + v1 * 4))) = 0;\n
            }\n
            if (*((*((v0->field_38->field_8 + (v1 << 2))) + 4)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_38->field_8 + v1 * 4)) + 4)) = 0;\n
            }\n
            if (*((*((v0->field_38->field_8 + (v1 << 2))) + 16)))\n
            {\n
                cgc_free();\n
                *((*((v0->field_38->field_8 + v1 * 4)) + 16)) = 0;\n
            }\n
            cgc_free();\n
            *((v0->field_38->field_8 + v1 * 4)) = 0;\n
        }\n
    }\n
    cgc_free();\n
    v0->field_38 = 0;\n
    cgc_ClearFsError();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4204329:sub_402729": null, "4204336:cgc_InitFilesystem": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern unsigned int FS_ERROR;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitFilesystem(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0 = 64;\n
    cgc_bzero(&FS_ERROR);\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[177].padding_0[46]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v1->field_38)\n
        cgc_DestroyFilesystem();\n
    v6 = cgc_calloc();\n
    v1->field_38 = v6;\n
    if (!v6)\n
    {\n
        cgc_SetFsError(&v1[177].padding_0[23]);\n
        v2 = 0;\n
        return v2;\n
    }\n
    v7 = cgc_calloc();\n
    v1->field_38->field_8 = v7;\n
    if (!v7)\n
    {\n
        cgc_SetFsError(&v1[177].padding_0[23]);\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1->field_38->field_4 = v4;\n
    if (!cgc_Login())\n
    {\n
        cgc_SetFsError(&v1[177].padding_0[9]);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!cgc_InitPasswd())\n
    {\n
        cgc_Logout();\n
        cgc_SetFsError(&v1[176].field_38);\n
        cgc_free();\n
        cgc_free();\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v0 = 32;\n
        cgc_bzero(&v1[10].padding_0[44]);\n
        cgc_ClearFsError();\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4204824:sub_402918": null, "4204832:cgc_Login": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Login(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[157].padding_0[40]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_strlen();\n
    v2 = cgc_calloc();\n
    if (!v2)\n
    {\n
        cgc_SetFsError(&v1[166].padding_0[19]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = v4;\n
    cgc_strcpy(v2);\n
    if (v1->field_3c)\n
    {\n
        cgc_free();\n
        v1->field_3c = 0;\n
    }\n
    v1->field_3c = v2;\n
    cgc_ClearFsError();\n
    v3 = 1;\n
    return v3;\n
}\n
", "4205057:sub_402a01": null, "4205072:cgc_InitPasswd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPasswd(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v2 - 10071);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_fopen(v2 - 9948);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v2 - 10047);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_fwrite(v2 - 10020, 5, 1);\n
    v1 = v5;\n
    v6 = cgc_strlen(v5, 5, 1);\n
    v0 = v3;\n
    cgc_fwrite(v1, v6, 1);\n
    cgc_fclose(v3, v6, 1);\n
    cgc_ClearFsError();\n
    v4 = 1;\n
    return v4;\n
}\n
", "4205329:sub_402b11": null, "4205344:cgc_Logout": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Logout()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_3c;\n
        cgc_free();\n
    }\n
    v1->field_3c = 0;\n
    cgc_ClearFsError();\n
    return 1;\n
}\n
", "4205425:sub_402b71": null, "4205440:cgc_FindFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FindFile(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_38->field_4)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_38->field_8 + (v2 << 2))) && *(*((v1->field_38->field_8 + (v2 << 2)))))\n
        {\n
            v0 = v4;\n
            if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v2 << 2))))))\n
            {\n
                v3 = *((v1->field_38->field_8 + v2 * 4));\n
                return v3;\n
            }\n
        }\n
        v2 = v2 + 1;\n
    }\n
}\n
", "4205655:sub_402c57": null, "4205664:cgc_CreateEmptyFile": "typedef struct struct_1 {\n
    char padding_0[56];\n
    struct struct_2 *field_38;\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateEmptyFile(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_1 *v1;  // [bp-0x18]\n
    struct struct_0 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    struct_1 *v8;  // ebx\n
    struct_1 *v9;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[165].padding_0[25]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (!v1->field_3c)\n
    {\n
        cgc_SetFsError(&v1[165].padding_0[8]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if ((a0 & 153))\n
    {\n
        cgc_SetFsError(&v1[164].padding_0[55]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (cgc_FindFile(v4))\n
    {\n
        cgc_SetFsError(&v1[164].padding_0[42]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1->field_38->field_4)\n
        {\n
LABEL_402f87:\n
            if (v2 != v1->field_38->field_4)\n
            {\n
                cgc_ClearFsError();\n
                v3 = *((v1->field_38->field_8 + v2 * 4));\n
                return v3;\n
            }\n
            cgc_SetFsError(&v1[164].padding_0[22]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*((v1->field_38->field_8 + (v2 << 2))))\n
        {\n
            v2 = v2 + 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_calloc();\n
            *((v1->field_38->field_8 + v2 * 4)) = v5;\n
            if (!v5)\n
            {\n
                cgc_SetFsError(&v1[166].padding_0[19]);\n
                v3 = 0;\n
                return v3;\n
            }\n
            cgc_strlen();\n
            v6 = cgc_calloc();\n
            *(*((v1->field_38->field_8 + v2 * 4))) = v6;\n
            if (!v6)\n
            {\n
                cgc_SetFsError(&v1[166].padding_0[19]);\n
                cgc_free();\n
                *((v1->field_38->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v0 = v4;\n
            cgc_strcpy(*(*((v1->field_38->field_8 + v2 * 4))));\n
            v7 = cgc_calloc(5);\n
            *((*((v1->field_38->field_8 + v2 * 4)) + 4)) = v7;\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v1[166].padding_0[19]);\n
                cgc_free();\n
                *(*((v1->field_38->field_8 + v2 * 4))) = 0;\n
                cgc_free();\n
                *((v1->field_38->field_8 + v2 * 4)) = 0;\n
                v3 = 0;\n
                return v3;\n
            }\n
            v8 = v1;\n
            v0 = v8->field_3c;\n
            cgc_strcpy(*((*((v8->field_38->field_8 + v2 * 4)) + 4)));\n
            v9 = v1;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 8)) = a0;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 12)) = 0;\n
            *((*((v9->field_38->field_8 + v2 * 4)) + 16)) = 0;\n
            goto LABEL_402f87;\n
            goto LABEL_402f87;\n
        }\n
    }\n
}\n
", "4206560:cgc_fopen": "typedef struct struct_2 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_fopen(unsigned int v5, char *a0)\n
{\n
    struct_2 *v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct_3 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v0[167].padding_0[4]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (v5 && a0)\n
    {\n
        if (cgc_strlen() > 1)\n
        {\n
            cgc_SetFsError(&v0[164].padding_0[55]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 114 && *(a0) != 119)\n
        {\n
            cgc_SetFsError(&v0[164].padding_0[55]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v0->field_3c)\n
        {\n
            cgc_SetFsError(&v0[165].padding_0[8]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_FindFile(v5);\n
        if (!v2 && *(a0) == 114)\n
        {\n
            cgc_SetFsError(&v0[163].padding_0[46]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2)\n
        {\n
            for (v3 = 0; v3 < 8; v3 += 1)\n
            {\n
                if (*(&v0[10].padding_0[4 + 4 * v3]) && *(*(&v0[10].padding_0[4 + 4 * v3])) == v2)\n
                {\n
                    cgc_SetFsError(&v0[163].padding_0[24]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        if (v2 && cgc_strcmp(v0->field_3c))\n
        {\n
            if (cgc_strcmp(v2->field_4))\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 64))\n
                {\n
                    cgc_SetFsError(&v0[163].padding_0[3]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 96))\n
                {\n
                    cgc_SetFsError(&v0[163].padding_0[3]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
            else\n
            {\n
                if (*(a0) == 114 && !(v2->field_8 & 4))\n
                {\n
                    cgc_SetFsError(&v0[163].padding_0[3]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                if (*(a0) == 119 && !(v2->field_8 & 6))\n
                {\n
                    cgc_SetFsError(&v0[163].padding_0[3]);\n
                    v4 = 0;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v1 = cgc_calloc();\n
        if (!v1)\n
        {\n
            cgc_SetFsError(&v0[166].padding_0[19]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        for (v3 = 0; v3 < 8; v3 += 1)\n
        {\n
            if (!*(&v0[10].padding_0[4 + 4 * v3]))\n
            {\n
                *(&v0[10].padding_0[4 + 4 * v3]) = v1;\n
                break;\n
            }\n
        }\n
        if (v3 == 8)\n
        {\n
            cgc_SetFsError(&v0[162].padding_0[49]);\n
            cgc_free();\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (*(a0) != 119)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 4;\n
            v1->field_8 = 0;\n
        }\n
        else if (v2)\n
        {\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
            v1->field_0->field_c = 0;\n
            if (v1->field_0->field_10)\n
            {\n
                cgc_free();\n
                v1->field_0->field_10 = 0;\n
            }\n
        }\n
        else\n
        {\n
            v2 = cgc_CreateEmptyFile(v5, 6);\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[162].padding_0[24]);\n
                *(&v0[10].padding_0[4 + 4 * v3]) = 0;\n
                cgc_free();\n
                v4 = 0;\n
                return v4;\n
            }\n
            v1->field_0 = &v2;\n
            v1->field_4 = 6;\n
            v1->field_8 = 0;\n
        }\n
        cgc_ClearFsError();\n
        v4 = v1;\n
        return v4;\n
    }\n
    cgc_SetFsError(&v0[164].padding_0[7]);\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207864:sub_4034f8": null, "4207872:cgc_fclose": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fclose(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0xa]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 10370);\n
        v2 = 0;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < 8; v1 += 1)\n
    {\n
        if (*((v0 + (v1 << 2) + 644)) == v3)\n
            *((v0 + v1 * 4 + 644)) = 0;\n
    }\n
    cgc_ClearFsError();\n
    cgc_free();\n
    v2 = 1;\n
    return v2;\n
}\n
", "4208045:sub_4035ad": null, "4208048:cgc_fread": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v3, unsigned int a0, unsigned int a1, struct_0 *a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a2)\n
    {\n
        if (!a2->field_0->field_10)\n
        {\n
            cgc_SetFsError(v1 - 10318);\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (a1 * a0 > a2->field_0->field_c - a2->field_8)\n
        {\n
            v0 = a2->field_0->field_c - a2->field_8;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v4 = a2;\n
            v4->field_8 = a2->field_0->field_c - a2->field_8 + v4->field_8;\n
            cgc_ClearFsError();\n
            v2 = a2->field_0->field_c - a2->field_8;\n
            return v2;\n
        }\n
        else\n
        {\n
            v0 = a1 * a0;\n
            cgc_memcpy(v3, a2->field_0->field_10 + a2->field_8);\n
            v5 = a2;\n
            v5->field_8 = a1 * a0 + v5->field_8;\n
            cgc_ClearFsError();\n
            v2 = a1 * a0;\n
            return v2;\n
        }\n
    }\n
    cgc_SetFsError(v1 - 10349);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4208395:sub_40370b": null, "4208400:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v4, unsigned int a0, unsigned int a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[5];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a2)\n
    {\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(v1 - 10643);\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (*(a2)->field_10)\n
        {\n
            v0 = *(a2)->field_c;\n
            cgc_memcpy(v2, *(a2)->field_10);\n
        }\n
        v0 = a1 * a0;\n
        cgc_memcpy(v2 + *(a2)->field_c, v4);\n
        v5 = *(a2);\n
        v5[3] = a1 * a0 + v5[3];\n
        if (*(a2)->field_10)\n
            cgc_free();\n
        *(a2)->field_10 = v2;\n
        cgc_ClearFsError();\n
        v3 = a1 * a0;\n
        return v3;\n
    }\n
    cgc_SetFsError(v1 - 10349);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4208735:sub_40385f": null, "4208736:cgc_fgets": "typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fgets(unsigned int v4, unsigned int a0, struct_2 *a1)\n
{\n
    char v0;  // [bp-0x19]\n
    int tmp_50;  // tmp #50\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
    struct_2 *v6;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        cgc_SetFsError(v1 - 10306);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!a1)\n
    {\n
        cgc_SetFsError(v1 - 10291);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_8 == a1->field_0->field_c)\n
    {\n
        cgc_SetFsError(v1 - 10318);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1->field_0->field_10)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (a1->field_8 < a1->field_0->field_c)\n
                v0 = v2 < a0 - 1;\n
            if (!(v0 & 1))\n
                break;\n
            v5 = a1->field_0->field_10;\n
            v6 = a1;\n
            v7 = v6->field_8;\n
            v6->field_8 = v7 + 1;\n
            tmp_50 = v5[v7];\n
            v8 = v2;\n
            v2 = v8 + 1;\n
            *((v4 + v8)) = tmp_50;\n
            if (*((a1->field_0->field_10 + a1->field_8 + 1)) == 10)\n
                break;\n
        }\n
        *((v4 + v2)) = 0;\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(v1 - 10318);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209117:sub_4039dd": null, "4209120:cgc_ListFiles": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_ListFiles(unsigned int *v16)\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    struct_0 *v1;  // [bp-0x44]\n
    unsigned short v2;  // [bp-0x40]\n
    unsigned short v3;  // [bp-0x3e]\n
    unsigned int v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x38]\n
    unsigned long v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    char v9;  // [bp-0x1d]\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x1b]\n
    char v12;  // [bp-0x1a]\n
    char v13;  // [bp-0x19]\n
    struct struct_2 **v14;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v15;  // [bp-0x11]\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // eax\n
    struct_0 *v25;  // eax\n
    struct_0 *v26;  // ebx\n
    struct_0 *v27;  // eax\n
    struct_0 *v28;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[178].padding_0[12]);\n
        v15 = 0;\n
        return v15;\n
    }\n
    if (v16)\n
    {\n
        v8 = 79;\n
        for (v14 = 0; v14 < v1->field_38->field_4; v14 += 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v14 << 2))))\n
            {\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v7 = cgc_strlen();\n
                if (v7 < 32)\n
                    v8 += 32;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 1;\n
                v4 = *((*((v1->field_38->field_8 + v14 * 4)) + 12));\n
                v5 = 0;\n
                v18 = ftop<4> - 1;\n
                if ([D] GetI(136:I8x8)[t47,0])\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    v19 = v18 - 1;\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(136:I8x8)[t6,0] = 0x00\n
                v20 = v19 + 1;\n
                cgc_log10();\n
                [D] PutI(72:F64x8)[t18,0] = t21\n
                [D] PutI(136:I8x8)[t18,0] = 0x01\n
                [D] PutI(72:F64x8)[t28,1] = t29\n
                [D] PutI(136:I8x8)[t28,1] = 0x01\n
                [D] PutI(136:I8x8)[t28,0] = 0x00\n
                v22 = v20 - 1 + 1;\n
                v3 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-62, size=2, endness=Iend_LE)))));\n
                v2 = v3 | 0xc00;\n
                v6 = ([D] GetI(136:I8x8)[t74,0] ? [D] GetI(72:F64x8)[t74,0] : nan);\n
                [D] PutI(136:I8x8)[t74,0] = 0x00\n
                v23 = v22 + 1;\n
                v7 = v6;\n
                if (v7 < 8)\n
                    v8 += 8;\n
                else\n
                    v8 = v7 + v8;\n
                v8 += 6;\n
            }\n
        }\n
        v24 = cgc_calloc();\n
        *(v16) = v24;\n
        if (!v24)\n
        {\n
            cgc_SetFsError(&v1[177].padding_0[23]);\n
            v15 = 0;\n
            return v15;\n
        }\n
    }\n
    if (!v16)\n
    {\n
        v26 = v1;\n
        cgc_printf(&v26[171].padding_0[18], &v26[170].padding_0[55], &v26[170].padding_0[46], &v26[170].padding_0[40]);\n
    }\n
    else\n
    {\n
        v25 = v1;\n
        v0 = &v25[170].padding_0[35];\n
        cgc_sprintf(*(v16), &v25[171].padding_0[18], &v25[170].padding_0[55], &v25[170].padding_0[46], &v25[170].padding_0[40]);\n
    }\n
    for (v14 = 0; v14 < v1->field_38->field_4; v14 += 1)\n
    {\n
        if (*((v1->field_38->field_8 + (v14 << 2))))\n
        {\n
            if (v16)\n
            {\n
                v27 = v1;\n
                v0 = *((*((v27->field_38->field_8 + v14 * 4)) + 12));\n
                cgc_sprintf(*(v16), &v1[170].padding_0[30], *(v16), *(*((v27->field_38->field_8 + v14 * 4))), *((*((v27->field_38->field_8 + v14 * 4)) + 4)));\n
            }\n
            else\n
            {\n
                v28 = v1;\n
                cgc_printf(&v28[170].padding_0[28], *(*((v28->field_38->field_8 + v14 * 4))), *((*((v28->field_38->field_8 + v14 * 4)) + 4)));\n
            }\n
            cgc_memset(&v9, 45);\n
            v13 = 0;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 4))\n
                v9 = 114;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 6))\n
                v10 = 119;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 64))\n
                v11 = 114;\n
            if ((*((*((v1->field_38->field_8 + (v14 << 2))) + 8)) & 96))\n
                v12 = 119;\n
            if (v16)\n
                cgc_sprintf(*(v16), &v1[170].padding_0[10], *(v16));\n
            else\n
                cgc_printf(&v1[171].padding_0[1]);\n
        }\n
    }\n
    cgc_ClearFsError();\n
    v15 = 1;\n
    return v15;\n
}\n
", "4210310:sub_403e86": null, "4210320:cgc_DeleteFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_FS;\n
\n
int cgc_DeleteFile(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    struct struct_2 **v3;  // [bp-0x14]\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!cgc_FS)\n
    {\n
        cgc_SetFsError(&v1[167].padding_0[4]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v6)\n
    {\n
        cgc_SetFsError(&v1[165].padding_0[25]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!v1->field_3c)\n
    {\n
        cgc_SetFsError(&v1[165].padding_0[8]);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        for (v4 = 0; v4 < v1->field_38->field_4; v4 += 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v4 << 2))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                {\n
                    v2[0] = *((v1->field_38->field_8 + v4 * 4));\n
                    v3 = v4;\n
                    break;\n
                }\n
            }\n
        }\n
        if (v4 == v1->field_38->field_4)\n
        {\n
            cgc_SetFsError(&v1[163].padding_0[46]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        for (v4 = 0; v4 < 8; v4 += 1)\n
        {\n
            if (*(&v1[10].padding_0[4 + 4 * v4]) && *(*(&v1[10].padding_0[4 + 4 * v4])) == v2)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        v7 = v1;\n
        v0 = &v7[157].padding_0[45];\n
        if (cgc_strcmp(v7->field_3c))\n
        {\n
            v0 = v2[1];\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[163].padding_0[3]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_free();\n
        if (v2[1])\n
            cgc_free();\n
        if (v2[4])\n
            cgc_free();\n
        cgc_free();\n
        *((v1->field_38->field_8 + v3 * 4)) = 0;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4210985:sub_404129": null, "4210992:cgc_RenameFile": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RenameFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_2 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    if (v6 && a0)\n
    {\n
        for (v4 = 0; v4 < v1->field_38->field_4; v4 = v4 + 1)\n
        {\n
            if (*((v1->field_38->field_8 + (v4 << 2))) && *(*((v1->field_38->field_8 + (v4 << 2)))))\n
            {\n
                v0 = v6;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                    v3[0] = *((v1->field_38->field_8 + v4 * 4));\n
                v0 = a0;\n
                if (!cgc_strcmp(*(*((v1->field_38->field_8 + (v4 << 2))))))\n
                {\n
                    cgc_SetFsError(&v1[159].padding_0[26]);\n
                    v5 = 0;\n
                    return v5;\n
                }\n
            }\n
        }\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[158].field_38 + 2);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v7 = v1;\n
        v0 = &v7[157].padding_0[45];\n
        if (cgc_strcmp(v7->field_3c))\n
        {\n
            v0 = *((v3 + 4));\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[163].padding_0[3]);\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        cgc_strlen();\n
        v2 = cgc_calloc();\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[166].padding_0[19]);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = a0;\n
        cgc_strcpy(v2);\n
        cgc_free(*(v3));\n
        *(v3) = v2;\n
        cgc_ClearFsError();\n
        v5 = 1;\n
        return v5;\n
    }\n
    cgc_SetFsError(&v1[165].padding_0[25]);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4211579:sub_40437b": null, "4211584:cgc_ChangeMode": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeMode(unsigned int v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    struct_1 *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    struct_0 *v5;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v4)\n
    {\n
        cgc_SetFsError(&v1[158].padding_0[36]);\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!(a0 & 153))\n
    {\n
        v2 = cgc_FindFile(v4);\n
        if (!v2)\n
        {\n
            cgc_SetFsError(&v1[158].padding_0[23]);\n
            v3 = 0;\n
            return v3;\n
        }\n
        v5 = v1;\n
        v0 = &v5[157].padding_0[45];\n
        if (cgc_strcmp(v5->field_3c))\n
        {\n
            v0 = v2->field_4;\n
            if (cgc_strcmp(v1->field_3c))\n
            {\n
                cgc_SetFsError(&v1[163].padding_0[3]);\n
                v3 = 0;\n
                return v3;\n
            }\n
        }\n
        v2->field_8 = a0;\n
        cgc_ClearFsError();\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[164].padding_0[55]);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4211873:sub_4044a1": null, "4211888:cgc_ChangeOwner": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangeOwner(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_1 *v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_0 *v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v5)\n
    {\n
        cgc_SetFsError(&v1[165].padding_0[25]);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        v6 = v1;\n
        v0 = &v6[157].padding_0[45];\n
        if (cgc_strcmp(v6->field_3c))\n
        {\n
            cgc_SetFsError(&v1[157].padding_0[53]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        v3 = cgc_FindFile(v5);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v1[158].padding_0[23]);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (cgc_UserExists())\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v1[166].padding_0[19]);\n
                v4 = 0;\n
                return v4;\n
            }\n
            v0 = a0;\n
            cgc_strcpy(v2);\n
            if (v3->field_4)\n
                cgc_free();\n
            v3->field_4 = v2;\n
            cgc_ClearFsError();\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_SetFsError(&v1[158].padding_0[36]);\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v1[158].padding_0[3]);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4212298:sub_40464a": null, "4212304:cgc_UserExists": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_UserExists(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x98]\n
    unsigned int v1;  // [bp-0x94]\n
    char v2;  // [bp-0x90]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v6;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        cgc_SetFsError(v0 - 10088);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v6 = v0;\n
    v3 = cgc_fopen(v6 - 9948, v6 - 10293);\n
    if (!v3)\n
    {\n
        cgc_SetFsError(v0 - 10047);\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!cgc_fgets(&v2, 127, v3))\n
        {\n
            cgc_fclose(v3);\n
            cgc_ClearFsError();\n
            v4 = 0;\n
            return v4;\n
        }\n
        v1 = cgc_strtok(&v2);\n
        if (!v1)\n
        {\n
            cgc_SetFsError(v0 - 10014);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_strcmp(v1))\n
        {\n
            cgc_fclose(v3);\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4212680:sub_4047c8": null, "4212688:cgc_Uid": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_CurrentUser;\n
\n
int cgc_Uid()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_CurrentUser)\n
    {\n
        v0 = v1->field_3c;\n
        v3 = cgc_puts();\n
    }\n
    return v3;\n
}\n
", "4212746:sub_40480a": null, "4212752:cgc_AddUser": "typedef struct struct_1 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddUser(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    unsigned int v1;  // [bp-0xb4]\n
    struct_0 *v2;  // [bp-0xa8]\n
    struct_0 *v3;  // [bp-0xa4]\n
    unsigned int v4;  // [bp-0xa0]\n
    struct_1 *v5;  // [bp-0x9c]\n
    char v6;  // [bp-0x98]\n
    struct struct_0 **v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14]\n
    char v9;  // [bp-0xd]\n
    struct_1 *v11;  // ebx\n
    struct_1 *v12;  // ebx\n
    struct_1 *v13;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v5[157].padding_0[40]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v5[156].padding_0[2]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v5->field_3c))\n
    {\n
        cgc_SetFsError(&v5[157].padding_0[53]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[157].padding_0[40]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v5[156].padding_0[2]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (!cgc_UserExists(v10))\n
    {\n
        v11 = v5;\n
        v8 = cgc_fopen(&v11[155].padding_0[28], &v11[160].padding_0[53]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v5[156].field_3c + 3);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v5;\n
        v7 = cgc_fopen(&v12[155].padding_0[29], &v12[157].padding_0[1]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v5[155].padding_0[21]);\n
            cgc_fclose(v8);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            if (cgc_fgets(&v6, 127, v8))\n
            {\n
                v3 = &v6;\n
                v0 = cgc_strlen();\n
                v4 = cgc_fwrite(v3, v0, 1, v7);\n
                if (v4 != cgc_strlen(&v6, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[154].padding_0[54]);\n
                    cgc_DeleteFile(&v5[155].padding_0[29]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
                else if (*(&v5 + cgc_strlen()) != 10 && cgc_fwrite(&v5[152].padding_0[13], 1, 1, v7) != 1)\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v5[154].padding_0[54]);\n
                    cgc_DeleteFile(&v5[155].padding_0[29]);\n
                    v9 = 0;\n
                    return v9;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v5[154].padding_0[22];\n
                v1 = v10;\n
                cgc_sprintf(&v6, v0, v1);\n
                v2 = &v6;\n
                cgc_fwrite(v2, cgc_strlen(&v6, v0, v1), 1, v7);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v5[155].padding_0[28]);\n
                v13 = v5;\n
                cgc_RenameFile(&v13[155].padding_0[29], &v13[155].padding_0[28]);\n
                cgc_ClearFsError();\n
                v9 = 1;\n
                return v9;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v5[155].padding_0[49]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4213918:sub_404c9e": null, "4213920:cgc_DeleteUser": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DeleteUser(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0xb8]\n
    struct_1 *v1;  // [bp-0xa8]\n
    unsigned int v2;  // [bp-0xa4]\n
    struct_0 *v3;  // [bp-0xa0]\n
    struct struct_0 **v4;  // [bp-0x9c]\n
    void* v5;  // [bp-0x98]\n
    char v6;  // [bp-0x91]\n
    unsigned int v7;  // [bp-0x90]\n
    char v8;  // [bp-0x89]\n
    char v9;  // [bp-0x9]\n
    struct_0 *v11;  // ebx\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // ebx\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = 0;\n
    if (!v10)\n
    {\n
        cgc_SetFsError(&v3[157].padding_0[40]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v3->field_3c))\n
    {\n
        cgc_SetFsError(&v3[157].padding_0[53]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else if (cgc_strcmp(v10))\n
    {\n
        v11 = v3;\n
        v5 = cgc_fopen(&v11[155].padding_0[28], &v11[160].padding_0[53]);\n
        if (!v5)\n
        {\n
            cgc_SetFsError(&v3[156].field_3c + 3);\n
            v9 = 0;\n
            return v9;\n
        }\n
        v12 = v3;\n
        v4 = cgc_fopen(&v12[155].padding_0[29], &v12[157].padding_0[1]);\n
        if (!v4)\n
        {\n
            cgc_SetFsError(&v3[155].padding_0[21]);\n
            cgc_fclose(v5);\n
            v9 = 0;\n
            return v9;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v8, 127, v5))\n
                {\n
                    cgc_fclose(v5);\n
                    cgc_fclose(v4);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v3[153].padding_0[57]);\n
                        cgc_fclose(v5);\n
                        cgc_fclose(v4);\n
                        cgc_DeleteFile(&v3[155].padding_0[29]);\n
                        v9 = 0;\n
                        return v9;\n
                    }\n
                    cgc_DeleteFile(&v3[155].padding_0[28]);\n
                    v13 = v3;\n
                    cgc_RenameFile(&v13[155].padding_0[29], &v13[155].padding_0[28]);\n
                    cgc_ClearFsError();\n
                    v9 = 1;\n
                    return v9;\n
                }\n
            } while (!cgc_strlen());\n
            v7 = cgc_strtok(&v8);\n
            if (!v7)\n
            {\n
                cgc_SetFsError(&v3[156].padding_0[30]);\n
                cgc_fclose(v5);\n
                cgc_fclose(v4);\n
                cgc_DeleteFile(&v3[155].padding_0[29]);\n
                v9 = 0;\n
                return v9;\n
            }\n
            if (cgc_strcmp(v7))\n
            {\n
                (&v8)[cgc_strlen()] = 58;\n
                v1 = &v8;\n
                v0 = cgc_strlen();\n
                v2 = cgc_fwrite(v1, v0, 1, v4);\n
                if (v2 != cgc_strlen(&v8, v0, 1))\n
                    break;\n
            }\n
            else\n
            {\n
                v6 = 1;\n
            }\n
        }\n
        cgc_fclose(v5);\n
        cgc_fclose(v4);\n
        cgc_SetFsError(&v3[154].padding_0[54]);\n
        cgc_DeleteFile(&v3[155].padding_0[29]);\n
        v9 = 0;\n
        return v9;\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v3[154].padding_0[16]);\n
        v9 = 0;\n
        return v9;\n
    }\n
}\n
", "4215026:sub_4050f2": null, "4215040:cgc_ChangePasswd": "typedef struct struct_1 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ChangePasswd(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    struct_0 *v2;  // [bp-0xb4]\n
    unsigned int v3;  // [bp-0xb0]\n
    struct_0 *v4;  // [bp-0xac]\n
    unsigned int v5;  // [bp-0xa8]\n
    struct_1 *v6;  // [bp-0xa4]\n
    struct struct_0 **v7;  // [bp-0xa0]\n
    void* v8;  // [bp-0x9c]\n
    char v9;  // [bp-0x95]\n
    unsigned int v10;  // [bp-0x94]\n
    char v11;  // [bp-0x8d]\n
    char v12;  // [bp-0xd]\n
    struct_1 *v14;  // ebx\n
    struct_1 *v15;  // ebx\n
    struct_1 *v16;  // ebx\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = 0;\n
    if (!v13)\n
    {\n
        cgc_SetFsError(&v6[157].padding_0[40]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v6[156].padding_0[2]);\n
        v12 = 0;\n
        return v12;\n
    }\n
    else if (cgc_strlen() <= 32)\n
    {\n
        if (cgc_strcmp(v6->field_3c) && cgc_strcmp(v6->field_3c))\n
        {\n
            cgc_SetFsError(&v6[153].padding_0[42]);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v14 = v6;\n
        v8 = cgc_fopen(&v14[155].padding_0[28], &v14[160].padding_0[53]);\n
        if (!v8)\n
        {\n
            cgc_SetFsError(&v6[156].field_3c + 3);\n
            v12 = 0;\n
            return v12;\n
        }\n
        v15 = v6;\n
        v7 = cgc_fopen(&v15[155].padding_0[29], &v15[157].padding_0[1]);\n
        if (!v7)\n
        {\n
            cgc_SetFsError(&v6[155].padding_0[21]);\n
            cgc_fclose(v8);\n
            v12 = 0;\n
            return v12;\n
        }\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!cgc_fgets(&v11, 127, v8))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    if (!v9)\n
                    {\n
                        cgc_SetFsError(&v6[153].padding_0[57]);\n
                        cgc_fclose(v8);\n
                        cgc_fclose(v7);\n
                        cgc_DeleteFile(&v6[155].padding_0[29]);\n
                        v12 = 0;\n
                        return v12;\n
                    }\n
                    cgc_DeleteFile(&v6[155].padding_0[28]);\n
                    v16 = v6;\n
                    cgc_RenameFile(&v16[155].padding_0[29], &v16[155].padding_0[28]);\n
                    cgc_ClearFsError();\n
                    v12 = 1;\n
                    return v12;\n
                }\n
            } while (!cgc_strlen());\n
            v10 = cgc_strtok(&v11);\n
            if (!v10)\n
            {\n
                cgc_SetFsError(&v6[156].padding_0[30]);\n
                cgc_fclose(v8);\n
                cgc_fclose(v7);\n
                cgc_DeleteFile(&v6[155].padding_0[29]);\n
                v12 = 0;\n
                return v12;\n
            }\n
            else if (cgc_strcmp(v10))\n
            {\n
                (&v11)[cgc_strlen()] = 58;\n
                v2 = &v11;\n
                v0 = cgc_strlen();\n
                v3 = cgc_fwrite(v2, v0, 1, v7);\n
                if (v3 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_SetFsError(&v6[154].padding_0[54]);\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_DeleteFile(&v6[155].padding_0[29]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
            else\n
            {\n
                v0 = &v6[153].padding_0[3];\n
                v1 = v13;\n
                cgc_sprintf(&v11, v0, v1);\n
                v4 = &v11;\n
                v0 = cgc_strlen(&v11, v0, v1);\n
                v5 = cgc_fwrite(v4, v0, 1, v7);\n
                if (v5 != cgc_strlen(&v11, v0, 1))\n
                {\n
                    cgc_fclose(v8);\n
                    cgc_fclose(v7);\n
                    cgc_SetFsError(&v6[154].padding_0[54]);\n
                    cgc_DeleteFile(&v6[155].padding_0[29]);\n
                    v12 = 0;\n
                    return v12;\n
                }\n
            }\n
        }\n
    }\n
    else\n
    {\n
        cgc_SetFsError(&v6[156].padding_0[2]);\n
        v12 = 0;\n
        return v12;\n
    }\n
}\n
", "4216460:sub_40568c": null, "4216464:cgc_CheckPasswd": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckPasswd(unsigned int v9, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xa8]\n
    char v1;  // [bp-0xa1]\n
    void* v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x9c]\n
    char v4;  // [bp-0x95]\n
    unsigned int v5;  // [bp-0x94]\n
    unsigned int v6;  // [bp-0x90]\n
    char v7;  // [bp-0x89]\n
    char v8;  // [bp-0x9]\n
    struct_0 *v10;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v9)\n
    {\n
        cgc_SetFsError(&v0[157].padding_0[40]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (!a0)\n
    {\n
        cgc_SetFsError(&v0[156].padding_0[2]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (cgc_strlen() > 32)\n
    {\n
        cgc_SetFsError(&v0[156].padding_0[2]);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        if (!v0->field_3c)\n
        {\n
            cgc_Login(&v0[157].padding_0[45]);\n
            v1 = 1;\n
        }\n
        else if (cgc_strcmp(v0->field_3c))\n
        {\n
            cgc_strlen();\n
            v2 = cgc_calloc();\n
            if (!v2)\n
            {\n
                cgc_SetFsError(&v0[166].padding_0[19]);\n
                v8 = 0;\n
                return v8;\n
            }\n
            cgc_strcpy(v2);\n
            cgc_Logout();\n
            cgc_Login(&v0[157].padding_0[45]);\n
        }\n
        v10 = v0;\n
        v3 = cgc_fopen(&v10[155].padding_0[28], &v10[160].padding_0[53]);\n
        if (!v3)\n
        {\n
            cgc_SetFsError(&v0[156].field_3c + 3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 0;\n
            return v8;\n
        }\n
        else\n
        {\n
            do\n
            {\n
                do\n
                {\n
                    do\n
                    {\n
                        if (!cgc_fgets(&v7, 127, v3))\n
                        {\n
                            cgc_fclose(v3);\n
                            if (!v4)\n
                            {\n
                                cgc_SetFsError(&v0[153].padding_0[57]);\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                            else\n
                            {\n
                                cgc_ClearFsError();\n
                                if (v2)\n
                                {\n
                                    cgc_Logout();\n
                                    cgc_Login(v2);\n
                                    cgc_free();\n
                                }\n
                                if (v1)\n
                                    cgc_Logout();\n
                                v8 = 0;\n
                                return v8;\n
                            }\n
                        }\n
                    } while (!cgc_strlen());\n
                    v6 = cgc_strtok(&v7);\n
                    if (!v6)\n
                    {\n
                        cgc_SetFsError(&v0[156].padding_0[30]);\n
                        cgc_fclose(v3);\n
                        if (v2)\n
                        {\n
                            cgc_Logout();\n
                            cgc_Login(v2);\n
                            cgc_free();\n
                        }\n
                        if (v1)\n
                            cgc_Logout();\n
                        v8 = 0;\n
                        return v8;\n
                    }\n
                } while (cgc_strcmp(v6));\n
                v5 = cgc_strtok(0);\n
                if (!v5)\n
                {\n
                    cgc_SetFsError(&v0[156].padding_0[30]);\n
                    cgc_fclose(v3);\n
                    if (v2)\n
                    {\n
                        cgc_Logout();\n
                        cgc_Login(v2);\n
                        cgc_free();\n
                    }\n
                    if (v1)\n
                        cgc_Logout();\n
                    v8 = 0;\n
                    return v8;\n
                }\n
            } while (cgc_strcmp(v5));\n
            cgc_ClearFsError();\n
            cgc_fclose(v3);\n
            if (v2)\n
            {\n
                cgc_Logout();\n
                cgc_Login(v2);\n
                cgc_free();\n
            }\n
            if (v1)\n
                cgc_Logout();\n
            v8 = 1;\n
            return v8;\n
        }\n
    }\n
}\n
", "4217975:sub_405c77": null, "4217984:cgc_receive_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a0)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = 0;\n
        v0 = &v2;\n
        if (cgc_receive(0, v5 + v3, a0 - v3))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        else if (v2)\n
        {\n
            v3 = v2 + v3;\n
        }\n
        else\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4218160:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v3)\n
        {\n
            if (v2 == a0)\n
                return v4;\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4218374:sub_405e06": null, "4218384:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 64));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 64)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4218721:sub_405f61": null, "4218736:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[143].field_40);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_40)\n
    {\n
        v7 = v1;\n
        v7->field_40 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4218961:sub_406051": null, "4218976:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4219047:sub_4060a7": null, "4219056:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[64];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_40);\n
    v3[0] = v1->field_40;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4219273:sub_406189": null, "4219280:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4219364:sub_4061e4": null, "4219376:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_40; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4219657:sub_406309": null, "4219664:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4219772:sub_40637c": null, "4219776:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 64)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 64));\n
        *((v6 + v3 * 4 + 64)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4220061:sub_40649d": null, "4220064:cgc_round": null, "4220210:sub_406532": null, "4220224:cgc_floor": null, "4220380:sub_4065dc": null, "4220384:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[804];\n
    unsigned int field_324;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_324 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[676 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[676 + 4 * (v2 + 1 & 31)]);\n
        *((676 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4220607:sub_4066bf": null, "4220608:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4220655:sub_4066ef": null, "4220656:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[676 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4220939:sub_40680b": null, "4220944:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4221132:sub_4068cc": null, "4221136:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4221237:sub_406935": null, "4221248:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4221282:sub_406962": null, "4221296:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    struct struct_0 *field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(struct_0 *v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_0 *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ecx\n
    struct_0 *v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (v4->field_100 >= 0x100)\n
    {\n
        for (v3 = v4; v4->field_100 > 0; v3 = &(&v3->field_0)[*(&v2)])\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, v4->field_100))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = v7->field_100 - *(&v2);\n
                *(&v7->field_100) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = v9->field_100;\n
    *(&v9->field_100) = v8 + 1;\n
    (&v4->field_0)[v8] = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4221566:sub_406a7e": null, "4221568:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4221660:sub_406adc": null, "4221664:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221852:sub_406b9c": null, "4221856:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v3 = a0; v2 < a0; v2 = *(&v4) + v2)\n
    {\n
        v0 = &v4;\n
        if (cgc_transmit(1, v5 + v2, a0 - v2))\n
            cgc__terminate();\n
        if (!*(&v4))\n
            cgc__terminate();\n
    }\n
    return v2;\n
}\n
", "4222020:sub_406c44": null, "4222032:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4222335:sub_406d7f": null, "4222336:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_4072b9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_4072b9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 9700)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4223692:sub_4072cc": null, "4223696:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4223754:sub_40730a": null, "4223760:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4223829:sub_407355": null, "4223840:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4223979:sub_4073eb": null, "4223984:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4224256:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4224912:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4227328:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4227994:sub_40839a": null, "4228000:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4228540:sub_4085bc": null, "4228544:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4228591:sub_4085ef": null, "4228592:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4228629:sub_408615": null, "4228640:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4228877:sub_40870d": null, "4228880:cgc_atof": null, "4229165:sub_40882d": null, "4229168:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4229244:sub_40887c": null, "4229248:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4229385:sub_408909": null, "4229392:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4229528:sub_408998": null, "4229536:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(v7[0]); v7 = &v7[1]);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = &v7[1];\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = &v7[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_408aba;\n
    if (*(v7) != 48)\n
    {\n
LABEL_408aba:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_408b0d;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_408b0d;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_408b0d:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_408aba;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (cgc_isupper(v1))\n
                v1 -= 55;\n
            else\n
                v1 -= 87;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_408c45:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_408c4a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            v7 = &v7[1];\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_408c4a;\n
            goto LABEL_408c45;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4230307:sub_408ca3": null, "4230320:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4230379:sub_408ceb": null, "4230384:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4230439:sub_408d27": null, "4230448:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4230603:sub_408dcb": null, "4230608:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v4[v2] == a0)\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4230766:sub_408e6e": null, "4230768:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[576];\n
    struct struct_1 *field_240;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_240)\n
        {\n
            v6 = v1->field_240;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_240 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_240 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            *((v6 + v3)) = 0;\n
        }\n
        else\n
        {\n
            v1->field_240 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
    }\n
    if (v3 == v2)\n
        v1->field_240 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4231287:sub_409077": null, "4231296:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4231646:sub_4091de": null, "4231648:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4231831:sub_409297": null, "4231840:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = *((v4 + v2));\n
        v0 = *((a0 + v2));\n
        if (v1 < v0)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (v1 <= v0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 1;\n
            return v3;\n
        }\n
    }\n
}\n
", "4231993:sub_409339": null, "4232000:main": "int main(unsigned int v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebx\n
\n
    cgc_ui_main(0, v1); /* do not return */\n
}\n
", "4232035:sub_409363": "int sub_409363(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ebx\n
\n
    v1 = v0;\n
    return 0;\n
}\n
", "4232043:sub_40936b": null, "4232048:cgc_init_state": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[1600];\n
    unsigned int field_648;\n
    unsigned int field_64c;\n
    unsigned int field_650;\n
    unsigned int field_654;\n
    char padding_658[8];\n
    unsigned int field_660;\n
    unsigned int field_664;\n
    unsigned short field_668;\n
    char padding_66a[2];\n
    unsigned int field_66c;\n
    unsigned int field_670;\n
    char field_674;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_state()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc(1660);\n
    cgc_bzero(v1, 0x67c);\n
    v5 = v1;\n
    v5->field_64c = 0x4052c000;\n
    v5->field_648 = 0;\n
    v1->field_654 = 0;\n
    v1->field_650 = 175;\n
    v1->field_4 = 0;\n
    v1->field_660 = 0;\n
    v1->field_668 = 65535;\n
    v1->field_0 = 0;\n
    v1->field_664 = 75;\n
    cgc_bzero(&v1->padding_8, 0x320);\n
    v1->field_670 = 0;\n
    v1->field_674 = 0;\n
    v1->field_66c = 0;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4232284:sub_40945c": null, "4232288:cgc_new_state": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char padding_8[1600];\n
    unsigned int field_648;\n
    unsigned int field_64c;\n
    unsigned int field_650;\n
    char padding_654[12];\n
    unsigned int field_660;\n
    unsigned int field_664;\n
    unsigned short field_668;\n
    char padding_66a[2];\n
    unsigned int field_66c;\n
    unsigned int field_670;\n
    char field_674;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_new_state(struct_0 *v3)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v3;\n
    cgc_free_program();\n
    v5 = v3;\n
    v5->field_64c = 0x4052c000;\n
    v5->field_648 = 0;\n
    v3->field_650 = 175;\n
    v3->field_4 = 0;\n
    v3->field_660 = 0;\n
    v3->field_668 = 65535;\n
    v3->field_0 = 0;\n
    v3->field_664 = 75;\n
    v3->field_670 = 0;\n
    v3->field_674 = 0;\n
    v3->field_66c = 0;\n
    v0 = v3;\n
    v6 = v2;\n
    return cgc_reset_sensors();\n
}\n
", "4232474:sub_40951a": null, "4232480:cgc_free_program": "typedef struct struct_1 {\n
    char padding_0[1628];\n
    unsigned short field_65c;\n
    char padding_65e[26];\n
    struct struct_0 *field_678;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_program(struct_1 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_1 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    if (!v4->field_678)\n
        return v3;\n
    v2 = v3->field_678;\n
    v1 = 0;\n
    while (v2)\n
    {\n
        v1 = v2;\n
        v2 = v2->field_4;\n
        cgc_free(v1);\n
    }\n
    v3->field_678 = 0;\n
    v4 = v3;\n
    *((v4 + 1628)) = 0;\n
    return v3;\n
}\n
", "4232620:sub_4095ac": null, "4232624:cgc_reset_sensors": "typedef struct struct_1 {\n
    char padding_0[1624];\n
    struct struct_0 *field_658;\n
    char padding_65c[8];\n
    unsigned int field_664;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    char padding_8[12];\n
    unsigned long long field_14;\n
} struct_0;\n
\n
int cgc_reset_sensors(struct_1 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0x8]\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v6;  // ftop\n
    unsigned int v7;  // ftop\n
    struct_0 *v8;  // eax\n
    unsigned int v9;  // ftop\n
\n
    v4 = v3->field_658;\n
    while (true)\n
    {\n
        v2 = v4;\n
        if (!v2)\n
            break;\n
        v0 = v3->field_664;\n
        v1 = 0;\n
        v6 = v9 - 1;\n
        if ([D] GetI(136:I8x8)[t10,0])\n
        {\n
            v7 = v6 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v7 = v6 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v8 = v2;\n
        if ([D] GetI(136:I8x8)[t10,0])\n
        {\n
            *(&(&v8->padding_8)[1]) = [D] GetI(72:F64x8)[t6,0];\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
            v9 = v7 + 1;\n
        }\n
        else\n
        {\n
            *(&(&v8->padding_8)[1]) = nan;\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
            v9 = v7 + 1;\n
        }\n
        v4 = v2->field_4;\n
    }\n
    return v4;\n
}\n
", "4232702:sub_4095fe": null, "4232704:cgc_power_on": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_power_on(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v1->field_4 = 1;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4232758:sub_409636": null, "4232768:cgc_power_off": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_power_off(void* v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    cgc_new_state(v2);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4232845:sub_40968d": null, "4232848:cgc_smoke_on": "int cgc_smoke_on(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    else if (*(v1) != 1)\n
    {\n
        *(v1) = 1;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 2;\n
        return v0;\n
    }\n
}\n
", "4232925:sub_4096dd": null, "4232928:cgc_smoke_off": "int cgc_smoke_off(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    else if (*(v1))\n
    {\n
        *(v1) = 0;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 2;\n
        return v0;\n
    }\n
}\n
", "4233005:sub_40972d": null, "4233008:cgc_set_ambient_temp": "typedef struct struct_0 {\n
    char padding_0[1636];\n
    unsigned int field_664;\n
} struct_0;\n
\n
int cgc_set_ambient_temp(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    else if (a0 <= 175)\n
    {\n
        v1->field_664 = a0;\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 2;\n
        return v0;\n
    }\n
}\n
", "4233092:sub_409784": null, "4233104:cgc_set_temp": "typedef struct struct_0 {\n
    char padding_0[1616];\n
    unsigned int field_650;\n
} struct_0;\n
\n
int cgc_set_temp(struct_0 *v1, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (a0 >= 175 && a0 <= 350)\n
    {\n
        v1->field_650 = a0;\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 2;\n
    return v0;\n
}\n
", "4233207:sub_4097f7": null, "4233216:cgc_add_sensor": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_sensor(unsigned int v7, unsigned short a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    v0 = a0;\n
    if (cgc_find_sensor(v7))\n
    {\n
        v6 = 2;\n
        return v6;\n
    }\n
    else if (*((v7 + 1620)) <= 9)\n
    {\n
        v5 = *((v7 + 1624));\n
        if (!v5)\n
        {\n
            v4 = cgc_malloc(28);\n
            *((v7 + 1624)) = v4;\n
            *(v4) = 0;\n
        }\n
        else\n
        {\n
            for (v4 = *((v7 + 1624)); v5; v5 = *((v5 + 4)))\n
            {\n
                v4 = v5;\n
            }\n
            *((v4 + 4)) = cgc_malloc(28);\n
            *(*((v4 + 4))) = v4;\n
            v4 = *((v4 + 4));\n
        }\n
        *((v4 + 4)) = 0;\n
        v2 = *((v7 + 1636));\n
        v3 = 0;\n
        if ([D] GetI(136:I8x8)[t10,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v8 = v4;\n
        if ([D] GetI(136:I8x8)[t10,0])\n
        {\n
            *((v8 + 20)) = [D] GetI(72:F64x8)[t6,0];\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
        }\n
        else\n
        {\n
            *((v8 + 20)) = nan;\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
        }\n
        *((v4 + 8)) = a0;\n
        *((v4 + 12)) = a1;\n
        *((v4 + 16)) = a2;\n
        *((v7 + 1620)) = *((v7 + 1620)) + 1;\n
        v6 = 0;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 3;\n
        return v6;\n
    }\n
}\n
", "4233607:sub_409987": null, "4233616:cgc_find_sensor": "typedef struct struct_1 {\n
    char padding_0[1624];\n
    struct struct_0 *field_658;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned short field_8;\n
} struct_0;\n
\n
int cgc_find_sensor(struct_1 *v4, unsigned short a0)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v4->field_658)\n
    {\n
        v2 = v4->field_658;\n
        v1 = v4->field_658;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2)\n
                v0 = *((v1 + 8)) != a0;\n
            if (!(v0 & 1))\n
                break;\n
            v1 = v2;\n
            v2 = v2->field_4;\n
        }\n
        if (*((v1 + 8)) != a0)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4233818:sub_409a5a": null, "4233824:cgc_remove_sensor": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_sensor(unsigned int v4[407], unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_find_sensor(v4, a0);\n
    if (!v1)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    if (!v1->field_0)\n
        v4[406] = v1->field_4;\n
    if (v1->field_4)\n
        v1->field_4->field_0 = v1->field_0;\n
    if (v1->field_0)\n
        v1->field_0->field_4 = v1->field_4;\n
    v4[405] = v4[405] - 1;\n
    cgc_free(v1);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4234027:sub_409b2b": null, "4234032:cgc_add_steps": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_steps(unsigned short v14[821], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x28]\n
    unsigned int v8;  // [bp-0x24]\n
    unsigned int v9;  // [bp-0x20]\n
    unsigned int v10;  // [bp-0x1c]\n
    unsigned short v11;  // [bp-0x16]\n
    unsigned int *v12;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 > 10)\n
    {\n
        v13 = 5;\n
        return v13;\n
    }\n
    v12 = 0;\n
    while (true)\n
    {\n
        if (v12 >= a0)\n
        {\n
            cgc_new_state(v14);\n
            for (v7 = 0; v7 < a0; v7 += 1)\n
            {\n
                v6 = *((a1 + v7 * 12));\n
                v5 = *((a1 + v7 * 12 + 4));\n
                v4 = *((a1 + v7 * 12 + 4));\n
                v3 = *((a1 + v7 * 12 + 8));\n
                v0 = v3;\n
                v2 = cgc_add_step(v14, v6, v5);\n
            }\n
            v14[820] = 0;\n
            v14[814] = a0;\n
            v13 = 0;\n
            return v13;\n
        }\n
        v11 = *((a1 + v12 * 12));\n
        v10 = *((a1 + v12 * 12 + 4));\n
        v9 = *((a1 + v12 * 12 + 4));\n
        v8 = *((a1 + v12 * 12 + 8));\n
        if (v11)\n
        {\n
LABEL_409c03:\n
            if (v11 != 1)\n
            {\n
LABEL_409c61:\n
                if (v11 > 1)\n
                {\n
                    v13 = 4;\n
                    return v13;\n
                }\n
                v12 = v12 + 1;\n
            }\n
            else\n
            {\n
                if (v9 >= 1800 && v9 <= 14400)\n
                {\n
                    if (v8 >= 175 && v8 <= 350)\n
                        goto LABEL_409c61;\n
                    v13 = 1;\n
                    return v13;\n
                }\n
                v13 = 2;\n
                return v13;\n
            }\n
        }\n
        else\n
        {\n
            if (v10 > 12)\n
            {\n
                v13 = 3;\n
                return v13;\n
            }\n
            if (v8 >= 175 && v8 <= 350)\n
                goto LABEL_409c03;\n
            v13 = 1;\n
            return v13;\n
        }\n
    }\n
}\n
", "4234570:sub_409d4a": null, "4234576:cgc_add_step": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_step(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = *((v3 + 1656));\n
    if (!v2)\n
    {\n
        v2 = cgc_malloc(20);\n
        cgc_bzero(v2, 0x14);\n
        *(v2) = 0;\n
        *((v3 + 1656)) = v2;\n
    }\n
    else\n
    {\n
        for (v1 = v2; v1; v1 = *((v1 + 4)))\n
        {\n
            v2 = v1;\n
        }\n
        *((v2 + 4)) = cgc_malloc(20);\n
        cgc_bzero(*((v2 + 4)), 0x14);\n
        v2 = *((v2 + 4));\n
    }\n
    *((v2 + 4)) = 0;\n
    *((v2 + 8)) = a0;\n
    if (!a0)\n
        *((v2 + 12)) = a1;\n
    else\n
        *((v2 + 12)) = a1;\n
    *((v2 + 16)) = a2;\n
    return 0;\n
}\n
", "4234865:sub_409e71": null, "4234880:cgc_get_program": "typedef struct struct_1 {\n
    char padding_0[1656];\n
    struct struct_0 *field_678;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_get_program(struct_1 *v3, unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    if (!v3)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    else if (v3->field_678)\n
    {\n
        v1 = v3->field_678;\n
        for (v0 = 0; v1; v1 = *((v1 + 4)))\n
        {\n
            *((a1 + v0 * 12)) = *((v1 + 8));\n
            *((a1 + v0 * 12 + 4)) = *((v1 + 12));\n
            *((a1 + v0 * 12 + 8)) = *((v1 + 16));\n
            v0 = v0 + 1;\n
        }\n
        *(a0) = v0;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4235070:sub_409f3e": null, "4235072:cgc_get_status": null, "4235226:sub_409fda": null, "4235232:cgc_get_sensors": null, "4235505:sub_40a0f1": null, "4235520:cgc_update_sensors": "typedef struct struct_1 {\n
    char padding_0[1624];\n
    struct struct_0 *field_658;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    char padding_8[8];\n
    unsigned int field_10;\n
    unsigned long long field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_update_sensors(struct_1 *v7)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned long v3;  // [bp-0x24]\n
    unsigned long v4;  // [bp-0x1c]\n
    unsigned long v5;  // [bp-0x14]\n
    struct_0 *v6;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = v7->field_658;\n
    for (v6 = v8; v6; v6 = v8)\n
    {\n
        v1 = *((v6 + 16));\n
        v2 = 0;\n
        v10 = ftop<4> - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v11 = v10 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v11 = v10 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v12 = v11 - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v13 = v12 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v13 = v12 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t17,1] = t18\n
        [D] PutI(136:I8x8)[t17,1] = 0x01\n
        [D] PutI(136:I8x8)[t17,0] = 0x00\n
        v14 = v13 - 0;\n
        [D] PutI(72:F64x8)[t39,0] = t42\n
        [D] PutI(136:I8x8)[t39,0] = 0x01\n
        [D] PutI(72:F64x8)[t50,1] = t51\n
        [D] PutI(136:I8x8)[t50,1] = 0x01\n
        [D] PutI(136:I8x8)[t50,0] = 0x00\n
        v5 = ([D] GetI(136:I8x8)[t75,0] ? [D] GetI(72:F64x8)[t75,0] : nan);\n
        [D] PutI(136:I8x8)[t75,0] = 0x00\n
        v16 = v14 + 1 - 0;\n
        [D] PutI(72:F64x8)[t87,0] = t90\n
        [D] PutI(136:I8x8)[t87,0] = 0x01\n
        v17 = v16 - 1;\n
        [D] PutI(72:F64x8)[t102,0] = t105\n
        [D] PutI(136:I8x8)[t102,0] = 0x01\n
        [D] PutI(72:F64x8)[t112,1] = t113\n
        [D] PutI(136:I8x8)[t112,1] = 0x01\n
        [D] PutI(136:I8x8)[t112,0] = 0x00\n
        v18 = v17 + 1;\n
        v4 = ([D] GetI(136:I8x8)[t137,0] ? [D] GetI(72:F64x8)[t137,0] : nan);\n
        [D] PutI(136:I8x8)[t137,0] = 0x00\n
        v19 = v18 - 0;\n
        [D] PutI(72:F64x8)[t146,0] = t149\n
        [D] PutI(136:I8x8)[t146,0] = 0x01\n
        v20 = v19 - 1;\n
        [D] PutI(72:F64x8)[t158,0] = t161\n
        [D] PutI(136:I8x8)[t158,0] = 0x01\n
        [D] PutI(72:F64x8)[t168,1] = t169\n
        [D] PutI(136:I8x8)[t168,1] = 0x01\n
        [D] PutI(136:I8x8)[t168,0] = 0x00\n
        v21 = v20 + 1;\n
        v3 = ([D] GetI(136:I8x8)[t193,0] ? [D] GetI(72:F64x8)[t193,0] : nan);\n
        [D] PutI(136:I8x8)[t193,0] = 0x00\n
        v22 = v21 - 0;\n
        [D] PutI(72:F64x8)[t205,0] = t208\n
        [D] PutI(136:I8x8)[t205,0] = 0x01\n
        v23 = v22 - 1;\n
        [D] PutI(72:F64x8)[t217,0] = t220\n
        [D] PutI(136:I8x8)[t217,0] = 0x01\n
        [D] PutI(72:F64x8)[t227,1] = t228\n
        [D] PutI(136:I8x8)[t227,1] = 0x01\n
        [D] PutI(136:I8x8)[t227,0] = 0x00\n
        v24 = v23 + 1;\n
        *((v6 + 20)) = ([D] GetI(136:I8x8)[t252,0] ? [D] GetI(72:F64x8)[t252,0] : nan);\n
        [D] PutI(136:I8x8)[t252,0] = 0x00\n
        v25 = v24 + 1;\n
        v8 = *((v6 + 4));\n
    }\n
    return v8;\n
}\n
", "4235671:sub_40a197": null, "4235680:cgc_get_step": "typedef struct struct_1 {\n
    char padding_0[1656];\n
    struct struct_0 *field_678;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
int cgc_get_step(struct_1 *v2, unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v2->field_678;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a0)\n
            return v1;\n
        if (!v1)\n
            return v1;\n
        v1 = v1->field_4;\n
        v0 += 1;\n
    }\n
}\n
", "4235769:sub_40a1f9": null, "4235776:cgc_check_program": null, "4236124:sub_40a35c": null, "4236128:cgc_add_history": null, "4236216:sub_40a3b8": null, "4236224:cgc_simulate_seconds": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[1600];\n
    unsigned long long field_648;\n
    unsigned int field_650;\n
    char padding_654[12];\n
    unsigned int field_660;\n
    unsigned int field_664;\n
    unsigned short field_668;\n
    char padding_66a[2];\n
    unsigned int field_66c;\n
    char padding_670[4];\n
    char field_674;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_simulate_seconds(struct_0 *v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    void* v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    void* v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    void* v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0xc]\n
    unsigned int v13;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v30;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v40;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
    unsigned int v44;  // ftop\n
    unsigned int v45;  // ftop\n
    unsigned int v46;  // ftop\n
    unsigned int v47;  // ftop\n
    unsigned int v48;  // ftop\n
    unsigned int v49;  // ftop\n
    unsigned int v50;  // ftop\n
    unsigned int v51;  // ftop\n
    unsigned int v52;  // ftop\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v11)\n
    {\n
        v10 = 1;\n
        return v10;\n
    }\n
    if (a0 >= 10 && a0 <= 8000)\n
    {\n
        v9 = 0;\n
        while (true)\n
        {\n
            if (v9 < a0)\n
            {\n
                if (v11->field_4 != 1)\n
                {\n
                    v13 = v29 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v19 = v13 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v19 = v13 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v7 = v11->field_664;\n
                    v8 = 0;\n
                    v20 = v19 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v31 = v20 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v31 = v20 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t5,0] = t9\n
                    [D] PutI(136:I8x8)[t5,0] = 0x01\n
                    [D] PutI(72:F64x8)[t5,1] = t2\n
                    [D] PutI(136:I8x8)[t5,1] = 0x01\n
                    [D] PutI(136:I8x8)[t25,0] = 0x00\n
                    v33 = v31 + 1;\n
                    [D] PutI(72:F64x8)[t39,0] = t40\n
                    [D] PutI(136:I8x8)[t39,0] = 0x01\n
                    [D] PutI(136:I8x8)[t39,0] = 0x00\n
                    v29 = v33 + 1;\n
                    if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v36 = v29 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v38 = v36 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v38 = v36 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v40 = v38 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v42 = v40 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v42 = v40 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t1,1] = t2\n
                        [D] PutI(136:I8x8)[t1,1] = 0x01\n
                        [D] PutI(136:I8x8)[t1,0] = 0x00\n
                        v44 = v42 + 1;\n
                        *(&v11->field_648) = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                        [D] PutI(136:I8x8)[t26,0] = 0x00\n
                        v29 = v44 + 1;\n
                    }\n
                }\n
                else if (v11->field_660 == 1)\n
                {\n
                    v15 = v29 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v21 = v15 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v21 = v15 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v22 = v21 - 1;\n
                    [D] PutI(72:F64x8)[t10,0] = t13\n
                    [D] PutI(136:I8x8)[t10,0] = 0x01\n
                    [D] PutI(72:F64x8)[t20,1] = t21\n
                    [D] PutI(136:I8x8)[t20,1] = 0x01\n
                    [D] PutI(136:I8x8)[t20,0] = 0x00\n
                    *(&v11->field_648) = ([D] GetI(136:I8x8)[t45,0] ? [D] GetI(72:F64x8)[t45,0] : nan);\n
                    [D] PutI(136:I8x8)[t45,0] = 0x00\n
                    v24 = v22 + 1 - 0;\n
                    [D] PutI(72:F64x8)[t57,0] = t60\n
                    [D] PutI(136:I8x8)[t57,0] = 0x01\n
                    v1 = v11->field_650;\n
                    v2 = 0;\n
                    v25 = v24 - 1;\n
                    [D] PutI(72:F64x8)[t77,0] = t80\n
                    [D] PutI(136:I8x8)[t77,0] = 0x01\n
                    v26 = v25 - 1;\n
                    [D] PutI(72:F64x8)[t92,0] = t95\n
                    [D] PutI(136:I8x8)[t92,0] = 0x01\n
                    [D] PutI(72:F64x8)[t103,1] = t104\n
                    [D] PutI(136:I8x8)[t103,1] = 0x01\n
                    [D] PutI(136:I8x8)[t103,0] = 0x00\n
                    v27 = v26 + 1;\n
                    [D] PutI(72:F64x8)[t126,0] = t130\n
                    [D] PutI(136:I8x8)[t126,0] = 0x01\n
                    [D] PutI(72:F64x8)[t126,1] = t123\n
                    [D] PutI(136:I8x8)[t126,1] = 0x01\n
                    [D] PutI(136:I8x8)[t146,0] = 0x00\n
                    v28 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t160,0] = t161\n
                    [D] PutI(136:I8x8)[t160,0] = 0x01\n
                    [D] PutI(136:I8x8)[t160,0] = 0x00\n
                    v29 = v28 + 1;\n
                    if (((CmpF(([D] GetI(136:I8x8)[t146,0] ? [D] GetI(72:F64x8)[t146,0] : nan), ([D] GetI(136:I8x8)[t146,1] ? [D] GetI(72:F64x8)[t146,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t146,0] ? [D] GetI(72:F64x8)[t146,0] : nan), ([D] GetI(136:I8x8)[t146,1] ? [D] GetI(72:F64x8)[t146,1] : nan)) & 69) >> 6)) & 1) != 1)\n
                        v11->field_660 = 0;\n
                }\n
                else\n
                {\n
                    v17 = v29 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v18 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v18 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v5 = v11->field_664;\n
                    v6 = 0;\n
                    v30 = v18 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v32 = v30 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v32 = v30 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t5,0] = t9\n
                    [D] PutI(136:I8x8)[t5,0] = 0x01\n
                    [D] PutI(72:F64x8)[t5,1] = t2\n
                    [D] PutI(136:I8x8)[t5,1] = 0x01\n
                    [D] PutI(136:I8x8)[t25,0] = 0x00\n
                    v34 = v32 + 1;\n
                    [D] PutI(72:F64x8)[t39,0] = t40\n
                    [D] PutI(136:I8x8)[t39,0] = 0x01\n
                    [D] PutI(136:I8x8)[t39,0] = 0x00\n
                    v35 = v34 + 1;\n
                    if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) != 1)\n
                    {\n
                        v37 = v35 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v39 = v37 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v39 = v37 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v41 = v39 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v43 = v41 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v43 = v41 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t1,1] = t2\n
                        [D] PutI(136:I8x8)[t1,1] = 0x01\n
                        [D] PutI(136:I8x8)[t1,0] = 0x00\n
                        v45 = v43 + 1;\n
                        *(&v11->field_648) = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                        [D] PutI(136:I8x8)[t26,0] = 0x00\n
                        v35 = v45 + 1;\n
                    }\n
                    v46 = v35 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v47 = v46 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v47 = v46 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v3 = v11->field_650;\n
                    v4 = 0;\n
                    v48 = v47 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v49 = v48 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v49 = v48 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v50 = v49 - 1;\n
                    if (![D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v51 = v50 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v51 = v50 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t0,1] = t1\n
                    [D] PutI(136:I8x8)[t0,1] = 0x01\n
                    [D] PutI(136:I8x8)[t0,0] = 0x00\n
                    v52 = v51 + 1;\n
                    [D] PutI(136:I8x8)[t25,0] = 0x00\n
                    [D] PutI(72:F64x8)[t39,0] = t40\n
                    [D] PutI(136:I8x8)[t39,0] = 0x01\n
                    [D] PutI(136:I8x8)[t39,0] = 0x00\n
                    v29 = v52 + 1 + 1;\n
                    if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) != 1)\n
                        v11->field_660 = 1;\n
                }\n
                cgc_update_sensors(v11);\n
                if (v11->field_668 > 65535)\n
                {\n
                    cgc_check_program(v11);\n
                    if (v11->field_674)\n
                    {\n
                        v10 = 2;\n
                        return v10;\n
                    }\n
                }\n
                if (!(0 CONCAT v11->field_66c) /m 60 >> 32)\n
                    cgc_add_history(v11);\n
                v11->field_66c = v11->field_66c + 1;\n
                v9 += 1;\n
            }\n
            else\n
            {\n
                v10 = 0;\n
                return v10;\n
            }\n
        }\n
    }\n
    v10 = 1;\n
    return v10;\n
}\n
", "4236846:sub_40a62e": null, "4236848:cgc_validate_fw": "int cgc_validate_fw(unsigned int v5)\n
{\n
    unsigned short v0;  // [bp-0x16]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    if (!v5)\n
    {\n
        v4 = 1;\n
        return v4;\n
    }\n
    v3 = 0x1000;\n
    v2 = 0x4347c000;\n
    v1 = 0;\n
    for (v0 = 0; v0 < v3; v0 += 1)\n
    {\n
        v1 += (v0 + 1) * v2[v0];\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4236980:sub_40a6b4": null, "4236992:cgc_check_val": "int cgc_check_val(char *v2, unsigned short a0)\n
{\n
    unsigned short v0;  // [bp-0xa]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v1 += (v0 + 1) * v2[v0];\n
    }\n
    return v1;\n
}\n
", "4237088:cgc_exit_normal": "int cgc_exit_normal()\n
{\n
    unsigned int v0;  // [bp+0x4]\n
    unsigned int v1;  // [bp+0x8]\n
    unsigned int v2;  // ebx\n
\n
    cgc__terminate(0, v2);\n
    cgc_ui_main(v0, v1); /* do not return */\n
}\n
", "4237120:cgc_ui_main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ui_main()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_init_state();\n
    while (true)\n
    {\n
        v0 = v2;\n
        cgc_get_command();\n
    }\n
}\n
", "4237169:sub_40a771": null, "4237184:cgc_get_command": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_command(unsigned int v45[413])\n
{\n
    unsigned int v0;  // [bp-0x4b8]\n
    unsigned int v1;  // [bp-0x4b4]\n
    unsigned int v2;  // [bp-0x4b0]\n
    unsigned int v3;  // [bp-0x49c]\n
    unsigned int v4;  // [bp-0x498]\n
    unsigned int v5;  // [bp-0x494]\n
    char v6;  // [bp-0x490]\n
    void* v7;  // [bp-0x210], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x20c]\n
    char v9;  // [bp-0x208]\n
    char v10;  // [bp-0x204]\n
    char *v11;  // [bp-0x200]\n
    char v12;  // [bp-0x1fc]\n
    char v13;  // [bp-0x1f8]\n
    void* v14;  // [bp-0x1f4], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x1f0]\n
    unsigned int v16;  // [bp-0x1ec]\n
    char v17;  // [bp-0x1e8]\n
    char v18;  // [bp-0x1d0]\n
    void* v19;  // [bp-0x158], Other Possible Types: unsigned int\n
    unsigned int v20;  // [bp-0x154]\n
    void* v21;  // [bp-0x150]\n
    unsigned int v22;  // [bp-0x14c]\n
    struct_0 *v23;  // [bp-0x148]\n
    unsigned short v24;  // [bp-0x142]\n
    void* v25;  // [bp-0x140]\n
    unsigned short v26;  // [bp-0x13c]\n
    unsigned short v27;  // [bp-0x13a]\n
    unsigned int v28;  // [bp-0x138]\n
    unsigned int v29;  // [bp-0x134]\n
    unsigned short v30;  // [bp-0x12e]\n
    unsigned short v31;  // [bp-0x12c]\n
    unsigned short v32;  // [bp-0x12a]\n
    unsigned short v33;  // [bp-0x128]\n
    unsigned short v34;  // [bp-0x126]\n
    void* v35;  // [bp-0x124], Other Possible Types: unsigned int\n
    void* v36;  // [bp-0x120], Other Possible Types: unsigned int\n
    char v37;  // [bp-0x11c]\n
    char v38;  // [bp-0x11a]\n
    char v39;  // [bp-0x118]\n
    char v40;  // [bp-0x116]\n
    char v41;  // [bp-0x114]\n
    char v42;  // [bp-0x110]\n
    unsigned int v43;  // [bp-0x14]\n
    unsigned int v44;  // [bp-0x8]\n
    unsigned int v46;  // ebx\n
    unsigned short v47;  // si\n
    unsigned int v48;  // esi\n
\n
    v44 = v46;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v36 = 0;\n
    v35 = 0;\n
    v34 = 0;\n
    v33 = 0;\n
    v32 = 170;\n
    v31 = 65535;\n
    v30 = 65535;\n
    v29 = 65535;\n
    v28 = 65535;\n
    v27 = 65535;\n
    v26 = 65535;\n
    v25 = 0;\n
    v24 = 0;\n
    v23 = 0;\n
    v22 = -1;\n
    v21 = 0;\n
    cgc_bzero(&v37, 0x108);\n
    cgc_get_bytes(&v37);\n
    v34 = cgc_get_short(&v37);\n
    if (v34 != 23205)\n
    {\n
        cgc_prime_buf();\n
        cgc_send(&v37, 12);\n
        v43 = 1;\n
        return v43;\n
    }\n
    cgc_get_bytes(&v38);\n
    v33 = cgc_get_short(&v38);\n
    if (v33 > 0x100)\n
    {\n
        cgc_prime_buf();\n
        cgc_send(&v37, 12);\n
        v43 = 1;\n
        return v43;\n
    }\n
    cgc_get_bytes(&v39);\n
    v36 = cgc_get_int(&(&v37)[v33]);\n
    v35 = cgc_check_val(&v37, v33);\n
    if (v36 != v35)\n
    {\n
        cgc_prime_buf();\n
        cgc_send(&v37, 12);\n
        v43 = 1;\n
        return v43;\n
    }\n
    v32 = cgc_get_short();\n
    v3 = v32;\n
    if (v3 == 1)\n
    {\n
        v31 = cgc_get_short();\n
        cgc_prime_buf();\n
        if (!v31)\n
            cgc_power_off(v45);\n
        if (v31 == 1)\n
            cgc_power_on(v45);\n
        if ((Not (Not (Load(addr=stack_base-300, size=2, endness=Iend_LE) <=s 0x1<16>)))) { Goto None } else { Goto None }\n
        cgc_send(&v37, 12);\n
    }\n
    else if (v3 == 2)\n
    {\n
        v27 = cgc_get_short();\n
        cgc_prime_buf();\n
        if (cgc_set_temp(v45, v27) == 2)\n
            v40 = 1;\n
        cgc_send(&v37, 12);\n
    }\n
    else if (v3 == 3)\n
    {\n
        v30 = cgc_get_short();\n
        v29 = cgc_get_int();\n
        v28 = cgc_get_int();\n
        v20 = cgc_get_int();\n
        v47 = v30;\n
        v1 = v29;\n
        v2 = v28;\n
        v22 = cgc_add_sensor(v45, v30, v1, v2, v20);\n
        cgc_prime_buf(&v37, v48, v1, v2);\n
        if (v22 == 2)\n
            v40 = 7;\n
        if (v22 == 3)\n
            v40 = 8;\n
        cgc_send(&v37, 12);\n
    }\n
    else if (v3 == 4)\n
    {\n
        v30 = cgc_get_short();\n
        v22 = cgc_remove_sensor(v45, v30);\n
        cgc_prime_buf(&v37);\n
        if (v22 == 1)\n
            v40 = 6;\n
        cgc_send(&v37, 12);\n
    }\n
    else if (v3 == 5)\n
    {\n
        v31 = cgc_get_short();\n
        cgc_prime_buf();\n
        if (!v31)\n
            cgc_smoke_off(v45);\n
        if (v31 == 1)\n
            cgc_smoke_on(v45);\n
        if ((Not (Not (Load(addr=stack_base-300, size=2, endness=Iend_LE) <=s 0x1<16>)))) { Goto None } else { Goto None }\n
        cgc_send(&v37, 12);\n
    }\n
    else if (v3 == 6)\n
    {\n
        v26 = cgc_get_short();\n
        v23 = &v41;\n
        v0 = v26;\n
        v22 = cgc_add_steps(v45, v0, v23);\n
        cgc_prime_buf(&v37, v0);\n
        if (v22 == 3)\n
            v40 = 3;\n
        if (v22 == 2)\n
            v40 = 2;\n
        if (v22 == 1)\n
            v40 = 1;\n
        cgc_send(&v37, 12);\n
    }\n
    else if (v3 == 7)\n
    {\n
        cgc_prime_buf();\n
        v19 = 0;\n
        cgc_bzero(&v18, 0x78);\n
        v39 = 1;\n
        v40 = 7;\n
        cgc_get_program(v45, &v19, &v18);\n
        v19 *= 12;\n
        cgc_memcpy(&v41, &v19, 4);\n
        cgc_memcpy(&v42, &v18, v19);\n
        cgc_send(&v37, v19 + 12);\n
    }\n
    else if (v3 == 8)\n
    {\n
        cgc_prime_buf();\n
        v39 = 1;\n
        v40 = 8;\n
        v16 = 24;\n
        v22 = cgc_get_status(v45, &v17);\n
        cgc_memcpy(&v41, &v16, 4);\n
        cgc_memcpy(&v42, &v17, 24);\n
        cgc_send(&v37, 36);\n
    }\n
    else if (v3 == 9)\n
    {\n
        v24 = cgc_get_short();\n
        cgc_prime_buf();\n
        v15 = 12;\n
        v14 = 0;\n
        v22 = cgc_simulate_seconds(v45, v24);\n
        *(&v13) = v45[411];\n
        *(&v12) = v45[404];\n
        if (!v22)\n
        {\n
            v40 = 9;\n
            cgc_memcpy(&v41, &v13, 4);\n
            cgc_send(&v37, 12);\n
        }\n
        if (v22 == 2)\n
        {\n
            v39 = 1;\n
            v40 = 12;\n
            v14 = v45[412] * 4;\n
            v11 = &v45[2];\n
            *(&v10) = v45[412];\n
            *(&v9) = v45[409];\n
            cgc_new_state(v45);\n
            if (*(&v10) > 0)\n
            {\n
                cgc_memcpy(&v41, &v10, 4);\n
                cgc_memcpy(&v42, v11, v14);\n
                v15 = v14 + 12;\n
            }\n
            cgc_memcpy(&(&v37)[v15], &v9, 4);\n
            v15 += 4;\n
            cgc_memcpy(&(&v37)[v15], &v12, 4);\n
            v15 += 4;\n
            cgc_send(&v37, v15);\n
        }\n
    }\n
    else if (v3 == 10)\n
    {\n
        *(&v8) = cgc_validate_fw(v45);\n
        cgc_prime_buf();\n
        v39 = 1;\n
        v40 = 10;\n
        v41 = 4;\n
        cgc_memcpy(&v42, &v8, 4);\n
        cgc_send(&v37, 16);\n
    }\n
    else if (v3 == 11)\n
    {\n
        cgc_prime_buf();\n
        v7 = 0;\n
        v39 = 1;\n
        v40 = 11;\n
        v7 = v45[405] * 16;\n
        cgc_get_sensors(v45, &v6);\n
        cgc_memcpy(&v41, &v7, 4);\n
        cgc_memcpy(&v42, &v6, v7);\n
        cgc_send(&v37, v7 + 12);\n
    }\n
    else if (v3 == 12)\n
    {\n
        v5 = cgc_get_signed_int();\n
        cgc_prime_buf();\n
        if (cgc_set_ambient_temp(v45, v5) == 2)\n
            v40 = 1;\n
        cgc_send(&v37, 12);\n
    }\n
    else\n
    {\n
        if (v3 == 255)\n
            cgc_exit_normal(); /* do not return */\n
        cgc_prime_buf();\n
        v40 = 5;\n
        cgc_send(&v37, 12);\n
    }\n
    v43 = 0;\n
    return v43;\n
}\n
", "4240743:sub_40b567": "int sub_40b567()\n
{\n
}\n
", "4240824:sub_40b5b8": null, "4240832:cgc_get_bytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_bytes(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_receive_bytes(v2, a0);\n
    if (v4 == -1)\n
    {\n
        v4 = cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4240908:sub_40b60c": null, "4240912:cgc_prime_buf": "typedef struct struct_0 {\n
    unsigned int field_-2538;\n
    unsigned int field_-2534;\n
    unsigned int field_-2530;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prime_buf(char *v5)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    char v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.field_-2538;\n
    cgc_bzero(v5, 0x108);\n
    v7 = v0;\n
    *(&v1) = v7[794].field_-2538;\n
    v2 = v7[793].field_-2530;\n
    v3 = v7[793].field_-2534;\n
    v8 = v4;\n
    return cgc_memcpy(v5, &v1, 12);\n
}\n
", "4241018:sub_40b67a": null, "4241024:cgc_get_short": "int cgc_get_short(unsigned short *v0)\n
{\n
    return *(v0);\n
}\n
", "4241038:sub_40b68e": null, "4241040:cgc_get_int": "int cgc_get_int(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4241053:sub_40b69d": null, "4241056:cgc_get_signed_int": "int cgc_get_signed_int(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4241072:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}