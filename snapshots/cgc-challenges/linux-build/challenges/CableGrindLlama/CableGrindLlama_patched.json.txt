{"4206592:_init": "extern struct_0 *g_4f04c8;\n
\n
int _init()\n
{\n
    if (g_4f04c8)\n
    {\n
        g_4f04c8();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206672:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4206688:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206704:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206720:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4206736:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206752:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4206768:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206784:sub_4030c0": "int sub_4030c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4206790:sub_4030c6": null, "4206800:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206843:sub_4030fb": null, "4206844:sub_4030fc": "int sub_4030fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206848:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206852:sub_403104": null, "4206864:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 971711;\n
    v6 = v5 + 114;\n
    v7 = v5 + 114;\n
    if (v7 == v6)\n
        return v5 + 114;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4206915:sub_403143": "int sub_403143()\n
{\n
}\n
", "4206921:sub_403149": "int sub_403149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4206928:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 971647;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 114;\n
    v9 = (v6 + 114 - (v6 + 114) >> 31) + (114 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4206999:sub_403197": "int sub_403197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207008:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_4f04c4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_4f04c4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4030c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207083:sub_4031eb": "int sub_4031eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207088:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207097:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207101:sub_4031fd": null, "4207104:cgc_promptc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_promptc(unsigned int v4, unsigned short a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a1;\n
    v0 = cgc_strlen();\n
    if (cgc_sendall(1, v2) < 0)\n
        cgc__terminate();\n
    v0 = a0;\n
    v6 = cgc_recvline(0, v4);\n
    if (v6 >= 0)\n
        return v6;\n
    v0 = 30;\n
    if (cgc_sendline(1, v1 - 13516) < 0)\n
        cgc__terminate();\n
    v6 = cgc__terminate();\n
    return v6;\n
}\n
", "4207322:sub_4032da": null, "4207328:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (!a1)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v0 = &v3;\n
        if (cgc_transmit(v5, a0, a1))\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        a0 = v3 + a0;\n
        v2 = v3 + v2;\n
        a1 -= v3;\n
    }\n
}\n
", "4207539:sub_4033b3": null, "4207552:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4207604:sub_4033f4": null, "4207616:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 10)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 10)\n
        {\n
            v4 = -2;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4207879:sub_403507": null, "4207888:cgc_sendline": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendline(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_sendall(v5, a0, a1);\n
    if (v2 < 0)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v0 = &a1;\n
    if (cgc_transmit(v5, v1 - 13400, 1))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 += 1;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4208049:sub_4035b1": null, "4208064:cgc_recv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
        }\n
        else\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
    }\n
}\n
", "4208271:sub_40368f": null, "4208272:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); a0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        v0 += 1;\n
    }\n
    v3 = v0;\n
    v0 = v3 + 1;\n
    *(v3) = 0;\n
    return v0 - v1 - 1;\n
}\n
", "4208363:sub_4036eb": null, "4208368:cgc_strncpy": "int cgc_strncpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = v2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 - v2 < a1)\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    v3 = v1;\n
    v1 = v3 + 1;\n
    *(v3) = 0;\n
    return v1 - v2 - 1;\n
}\n
", "4208505:sub_403779": null, "4208512:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v1 = v2; *(v1); v1 += 1);\n
    cgc_strcpy(v1, a0);\n
    return v2;\n
}\n
", "4208602:sub_4037da": null, "4208608:cgc_streq": "int cgc_streq(char *v3, char *a0)\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(a0))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(a0);\n
    v2 = v0 & 1;\n
    return v2;\n
}\n
", "4208780:sub_40388c": null, "4208784:cgc_strncmp": "int cgc_strncmp(char *v3, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xa]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // eax\n
\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v4 = a1;\n
                a1 = v4 - 1;\n
                v1 = v4;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v3) != *(a0))\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    v0 = 0;\n
    if (!*(v3))\n
        v0 = !*(a0);\n
    v2 = (v0 ^ 255) & 1;\n
    return v2;\n
}\n
", "4208986:sub_40395a": null, "4208992:cgc_startswith": "int cgc_startswith(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
        {\n
            v1 = !*(a0);\n
            return v1;\n
        }\n
        else if (*(v2) == *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4209138:sub_4039f2": null, "4209152:cgc_uint2str": "int cgc_uint2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // ecx\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v1 = (0 CONCAT v1) /m 10;\n
    } while (v1 > 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v5 = v2;\n
    v2 = v5 + 1;\n
    v5[v4] = 0;\n
    do\n
    {\n
        v0 = (0 CONCAT a1) /m 10 >> 32;\n
        v6 = v2;\n
        v2 = v6 - 1;\n
        *((v4 + v6)) = v0 + 48;\n
        a1 = (0 CONCAT a1) /m 10;\n
    } while (a1 > 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4209360:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4209633:sub_403be1": null, "4209648:cgc_str2uint": "int cgc_str2uint(unsigned int v4)\n
{\n
    char *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    v1 = 10;\n
    if (!v4)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (*((v4 + v0)) < 48)\n
        {\n
LABEL_403c79:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(*((v4 + v0)) <= 57))\n
                goto LABEL_403c79;\n
            v2 *= 10;\n
            v2 = *((v4 + v0)) - 48 + v2;\n
        }\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4209823:sub_403c9f": null, "4209824:cgc_memset": "int cgc_memset(unsigned int v1, char a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = a0;\n
    }\n
    return v1;\n
}\n
", "4209890:sub_403ce2": null, "4209904:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    return v1;\n
}\n
", "4209976:sub_403d38": null, "4209984:cgc_b2hex": "int cgc_b2hex(char v0, char a0[3])\n
{\n
    if (v0 >> 4 < 10)\n
        a0[0] = (v0 >> 4) + 48;\n
    else\n
        a0[0] = (v0 >> 4) - -55;\n
    if ((v0 & 15) < 10)\n
        a0[1] = (v0 & 15) + 48;\n
    else\n
        a0[1] = (v0 & 15) - -55;\n
    a0[2] = 0;\n
    return a0;\n
}\n
", "4210123:sub_403dcb": null, "4210128:cgc_strchr": "int cgc_strchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v0) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4210216:sub_403e28": null, "4210224:cgc___umoddi3": "int cgc___umoddi3(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    return v0 - a0 * (v1 >> 31 CONCAT v1) /m a0;\n
}\n
", "4210263:sub_403e57": null, "4210272:cgc_sleep": "int cgc_sleep(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
\n
    v1 = v3;\n
    v2 = 0;\n
    v0 = 0;\n
    return cgc_fdwait(0, 0, 0, &v1);\n
}\n
", "4210358:sub_403eb6": null, "4210368:cgc_memcmp": "int cgc_memcmp(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0[v2] == v0[a0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4210476:sub_403f2c": null, "4210480:cgc___free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc___free(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2 = v3 - 16;\n
    if (a0 && *((v1 + (a0 << 2) + 620)) != *(v2))\n
        cgc___heap_cookie_fail();\n
    cgc_remove();\n
    v0 = a0;\n
    return cgc_insert(*((v1 + a0 * 4 + 560)), v2);\n
}\n
", "4210629:sub_403fc5": null, "4210640:cgc_remove": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_remove(struct_2 *v0)\n
{\n
    v0->field_4->field_8 = v0->field_8;\n
    v0->field_8->field_4 = v0->field_4;\n
    v0->field_8 = 0;\n
    v0->field_4 = 0;\n
    return v0;\n
}\n
", "4210698:sub_40400a": null, "4210704:cgc_insert": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert(struct_0 *v0, struct_2 *a0, unsigned int a1)\n
{\n
    a0->field_0 = *(&(&_GLOBAL_OFFSET_TABLE_)[620 + 4 * a1]);\n
    a0->field_8 = v0;\n
    a0->field_4 = v0->field_4;\n
    a0->field_4->field_8 = a0;\n
    v0->field_4 = a0;\n
    return v0;\n
}\n
", "4210787:sub_404063": null, "4210800:cgc_nmalloc": "int cgc_nmalloc(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x18]\n
\n
    v0 = 0;\n
    return cgc___malloc(v1);\n
}\n
", "4210849:sub_4040a1": null, "4210864:cgc___malloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_heapinit_done;\n
\n
int cgc___malloc(unsigned int v16, unsigned int a0)\n
{\n
    char v0;  // [bp-0x45]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x40]\n
    unsigned int v3;  // [bp-0x3c]\n
    unsigned int v4;  // [bp-0x38]\n
    unsigned int v5;  // [bp-0x34]\n
    unsigned int v6;  // [bp-0x30]\n
    unsigned int v7;  // [bp-0x2c]\n
    unsigned int v8;  // [bp-0x28]\n
    unsigned int v9;  // [bp-0x24]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_heapinit_done)\n
        cgc_heapinit();\n
    if (!v16)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = *((v1 + a0 * 4 + 560));\n
    v3 = 0;\n
    v2 = 0;\n
    v16 += 16;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*((v4 + 12)) < v16)\n
        {\n
            v15 = v4;\n
            v14 = a0;\n
            if (v14 && *(v15) != *((v1 + (v14 << 2) + 620)))\n
                cgc___heap_cookie_fail();\n
            v0 = *((v15 + 8)) != *((v1 + a0 * 4 + 560));\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        while (true)\n
        {\n
            v13 = v4;\n
            v12 = a0;\n
            if (v12 && *(v13) != *((v1 + (v12 << 2) + 620)))\n
                cgc___heap_cookie_fail();\n
            if (*((v13 + 8)) != v4 + *((v4 + 12)))\n
                break;\n
            v11 = v4;\n
            v10 = a0;\n
            if (v10 && *(v11) != *((v1 + (v10 << 2) + 620)))\n
                cgc___heap_cookie_fail();\n
            v3 = *((v11 + 8));\n
            cgc_remove(v3);\n
            v17 = v4;\n
            *((v17 + 12)) = *((v3 + 12)) + *((v17 + 12));\n
        }\n
        v9 = v4;\n
        v8 = a0;\n
        if (v8 && *(v9) != *((v1 + (v8 << 2) + 620)))\n
            cgc___heap_cookie_fail();\n
        if (*((v9 + 8)) == *((v1 + (a0 << 2) + 560)))\n
            break;\n
        v7 = v4;\n
        v6 = a0;\n
        if (v6 && *(v7) != *((v1 + (v6 << 2) + 620)))\n
            cgc___heap_cookie_fail();\n
        v4 = *((v7 + 8));\n
    }\n
    if (a0 && *((v1 + (a0 << 2) + 620)) != *(v4))\n
        cgc___heap_cookie_fail();\n
    if (*((v4 + 12)) >= v16)\n
    {\n
        cgc_remove(v4);\n
        if (*((v4 + 12)) > v16 + 17)\n
        {\n
            v3 = v4 + v16;\n
            *((v3 + 12)) = *((v4 + 12)) - v16;\n
            *((v4 + 12)) = v16;\n
            cgc_insert(*((v1 + a0 * 4 + 560)), v3, a0);\n
        }\n
        cgc_insert(*((v1 + a0 * 4 + 572)), v4, a0);\n
        v5 = v4 + 16;\n
        return v5;\n
    }\n
    else if (v16 > *((v1 + (a0 << 2) + 596)))\n
    {\n
        if (*((v1 + (a0 << 2) + 596)) > 16)\n
        {\n
            v21 = v1;\n
            v4 = *((v21 + a0 * 4 + 584));\n
            *((v4 + 12)) = *((v21 + a0 * 4 + 596));\n
            cgc_insert(*((v21 + a0 * 4 + 560)), v4, a0);\n
        }\n
        if (cgc_allocate(v16, 0))\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        *((v4 + 12)) = v16;\n
        cgc_insert(*((v1 + a0 * 4 + 572)), v4, a0);\n
        *((v1 + a0 * 4 + 584)) = v4 + v16;\n
        if (!(v16 & 4095))\n
            *((v1 + a0 * 4 + 596)) = 0;\n
        else\n
            *((v1 + a0 * 4 + 596)) = 0x1000 - (v16 & 4095);\n
        v5 = v4 + 16;\n
        return v5;\n
    }\n
    else\n
    {\n
        v18 = v1;\n
        v4 = *((v18 + a0 * 4 + 584));\n
        *((v4 + 12)) = v16;\n
        v19 = a0;\n
        *((v18 + v19 * 4 + 584)) = v16 + *((v18 + v19 * 4 + 584));\n
        v20 = a0;\n
        *((v18 + v20 * 4 + 596)) = *((v18 + v20 * 4 + 596)) - v16;\n
        cgc_insert(*((v18 + a0 * 4 + 572)), v4, a0);\n
        v5 = v4 + 16;\n
        return v5;\n
    }\n
}\n
", "4212051:sub_404553": null, "4212064:cgc_smalloc": "int cgc_smalloc(unsigned int v0)\n
{\n
    return cgc___malloc(v0, 1);\n
}\n
", "4212111:sub_40458f": null, "4212112:cgc_ssmalloc": "int cgc_ssmalloc(unsigned int v0)\n
{\n
    return cgc___malloc(v0, 2);\n
}\n
", "4212159:sub_4045bf": null, "4212160:cgc_malloc": "typedef struct struct_1 {\n
    char padding_0[636];\n
    struct struct_0 *field_27c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int mallocp;\n
\n
int cgc_malloc(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_1 *v1;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!mallocp)\n
    {\n
        v0 = 0;\n
        cgc_setheap();\n
    }\n
    v0 = v2;\n
    return v1->field_27c();\n
}\n
", "4212238:sub_40460e": null, "4212240:cgc_setheap": "extern unsigned int _GLOBAL_OFFSET_TABLE_[161];\n
\n
int cgc_setheap(unsigned int v1)\n
{\n
    unsigned int v0[161];  // [bp-0x8]\n
    unsigned int v2[161];  // eax\n
    unsigned int v3[161];  // eax, Other Possible Types: unsigned int\n
\n
    v0[0] = v2;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (v1 == 269484304)\n
    {\n
        v3 = v0;\n
        v3[158] = 0;\n
        v3[159] = &v3[1502 + 123];\n
        v3[160] = &v3[1500 + 37];\n
        return v0;\n
    }\n
    if (v1 == -255787026)\n
    {\n
        v3 = v0;\n
        v3[158] = 1;\n
        v3[159] = &v3[1500 + 129];\n
        v3[160] = &v3[1500 + 21];\n
    }\n
    else\n
    {\n
        v3 = v0;\n
        v3[158] = 2;\n
        v3[159] = &v3[1500 + 117];\n
        v3[160] = &v3[1500 + 9];\n
    }\n
    return v3;\n
}\n
", "4212419:sub_4046c3": null, "4212432:cgc_nfree": "int cgc_nfree(unsigned int v0)\n
{\n
    return cgc___free(v0, 0);\n
}\n
", "4212481:sub_404701": null, "4212496:cgc_sfree": "int cgc_sfree(unsigned int v0)\n
{\n
    return cgc___free(v0, 1);\n
}\n
", "4212543:sub_40473f": null, "4212544:cgc_ssfree": "int cgc_ssfree(unsigned int v0)\n
{\n
    return cgc___free(v0, 2);\n
}\n
", "4212591:sub_40476f": null, "4212592:cgc_free": "typedef struct struct_1 {\n
    char padding_0[640];\n
    struct struct_0 *field_280;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int freep;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!freep)\n
        cgc_setheap(0);\n
    return v0->field_280();\n
}\n
", "4212670:sub_4047be": null, "4212672:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_malloc(v4);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    cgc_memset(v1, 0, v4);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4212778:sub_40482a": null, "4212784:cgc_checkheap": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc___htype;\n
\n
int cgc_checkheap()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    struct_0 *v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    struct_0 *v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    struct_0 *v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x10]\n
    struct_0 *v10;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc___htype;\n
    v1 = *(&(&_GLOBAL_OFFSET_TABLE_)[560 + 4 * v2]);\n
    do\n
    {\n
        v6 = v1;\n
        v5 = v2;\n
        if (v5 && v6->field_0 != *((v0 + (v5 << 2) + 620)))\n
            cgc___heap_cookie_fail();\n
        v1 = v6->field_8;\n
    } while (v1 != *((v0 + (v2 << 2) + 560)));\n
    do\n
    {\n
        v10 = v1;\n
        v9 = v2;\n
        if (v9 && v10->field_0 != *((v0 + (v9 << 2) + 620)))\n
            cgc___heap_cookie_fail();\n
        *(&v1) = v10->padding_4;\n
    } while (v1 != *((v0 + (v2 << 2) + 560)));\n
    v1 = *((v0 + v2 * 4 + 572));\n
    do\n
    {\n
        v4 = v1;\n
        v3 = v2;\n
        if (v3 && v4->field_0 != *((v0 + (v3 << 2) + 620)))\n
            cgc___heap_cookie_fail();\n
        v1 = v4->field_8;\n
    } while (v1 != *((v0 + (v2 << 2) + 572)));\n
    do\n
    {\n
        v8 = v1;\n
        v7 = v2;\n
        if (v7 && v8->field_0 != *((v0 + (v7 << 2) + 620)))\n
            cgc___heap_cookie_fail();\n
        *(&v1) = v8->padding_4;\n
    } while (v1 != *((v0 + (v2 << 2) + 572)));\n
    return v8->padding_4;\n
}\n
", "4213208:sub_4049d8": null, "4213216:cgc___stack_cookie_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc___stack_cookie_init()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_random(&cgc__cookie, 12);\n
    if (!v4)\n
        return v4;\n
    if (cgc_sendline(1, v0 - 13485, 21) < 0)\n
        cgc__terminate();\n
    v4 = cgc__terminate();\n
    return v4;\n
}\n
", "4213357:sub_404a6d": null, "4213360:cgc__cookie_fail": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__cookie_fail()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    char v2;  // [bp-0x4]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
\n
    v4 = &v2;\n
    v1 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (cgc_sendline(1, \"Friend is someone to share the last cookie with.\", 48) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
    cgc___stack_cookie_fail();\n
    return;\n
}\n
", "4213456:cgc___stack_cookie_fail": "int cgc___stack_cookie_fail()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return cgc__cookie_fail(v2, *(&v0));\n
}\n
", "4213484:sub_404aec": null, "4213488:cgc___heap_cookie_fail": "int cgc___heap_cookie_fail()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return cgc__cookie_fail(v2, *(&v0));\n
}\n
", "4213516:sub_404b0c": null, "4213520:cgc_heapinit": "typedef struct struct_0 {\n
    char padding_0[460];\n
    char field_1cc;\n
    char padding_1cd[163];\n
    unsigned int field_270;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_4f0748;\n
\n
int cgc_heapinit()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_random(&g_4f0748, 4, 0))\n
    {\n
        if (cgc_sendline(1, &v0[21].padding_0[297], 21) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = v0;\n
    v5->field_270 = 1354825710;\n
    for (v1 = 0; v1 < 3; v1 = v5)\n
    {\n
        v6 = v0;\n
        *((572 + &v6->padding_0[0] + 0x4 * v1)) = &v6->padding_1cd[51] + 0x10 * v1;\n
        *((560 + &v6->padding_0[0] + 0x4 * v1)) = &v6->padding_1cd[3] + 0x10 * v1;\n
        *((*((572 + &v6->padding_0[0] + 0x4 * v1)) + 8)) = *((572 + &v6->padding_0[0] + 0x4 * v1));\n
        *((*((572 + &v6->padding_0[0] + 0x4 * v1)) + 4)) = *((572 + &v6->padding_0[0] + 0x4 * v1));\n
        *(*((572 + &v6->padding_0[0] + 0x4 * v1))) = *((620 + &v6->padding_0[0] + 0x4 * v1));\n
        *(*((560 + &v6->padding_0[0] + 0x4 * v1))) = *((620 + &v6->padding_0[0] + 0x4 * v1));\n
        *((*((560 + &v6->padding_0[0] + 0x4 * v1)) + 8)) = *((560 + &v6->padding_0[0] + 0x4 * v1));\n
        *((*((560 + &v6->padding_0[0] + 0x4 * v1)) + 4)) = *((560 + &v6->padding_0[0] + 0x4 * v1));\n
        v6->field_1cc = 1;\n
        v5 = &v1->padding_0[1];\n
    }\n
    v7 = v2;\n
    return v5;\n
}\n
", "4213902:sub_404c8e": null, "4213904:cgc_dupe_open": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dupe_open(unsigned int v3[6])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[6];  // [bp-0x10]\n
    unsigned int v2[6];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    if (v1[0] <= 3 && v1[4] < v1[2])\n
    {\n
        if (v1[2] > 0)\n
        {\n
            cgc_setheap(v1[5]);\n
            v2 = v1;\n
            return v2;\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2[0] = 0;\n
    return v2;\n
}\n
", "4214034:sub_404d12": null, "4214048:cgc_dupe_next": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dupe_next(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2[3];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[5];  // eax\n
    unsigned int v5[5];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = 0;\n
    if (v3[3] <= 0x10000 && v3[3] >= 0)\n
    {\n
        if (v3[2] <= 0x300000 && v3[2] >= 0)\n
        {\n
            v1[0] = cgc_malloc(v3[3] + 12);\n
            if (!v1)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (v3[4] + 8 > v3[2])\n
            {\n
                cgc_free(v1);\n
                v2 = 0;\n
                return v2;\n
            }\n
            else\n
            {\n
                v1[0] = v3;\n
                cgc_memcpy(&v1[1], &v3[1 + 1] + v3[4], 8);\n
                v4 = v3;\n
                v4[4] = v4[4] + 8;\n
                if (v1[2] > 0 && v3[4] + v1[2] <= v3[2] && v1[2] <= v3[3])\n
                {\n
                    cgc_memcpy(v1 + 1, &v3[1 + 1] + v3[4], v1[2]);\n
                    v5 = v3;\n
                    v5[4] = v1[2] + v5[4];\n
                    v2 = v1;\n
                    return v2;\n
                }\n
                cgc_free(v1);\n
                v2 = 0;\n
                return v2;\n
            }\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2[0] = 0;\n
    return v2;\n
}\n
", "4214469:sub_404ec5": null, "4214480:cgc_dupe_free": "int cgc_dupe_free(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4214517:sub_404ef5": null, "4214528:cgc_dupe_close": "int cgc_dupe_close(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4214565:sub_404f25": null, "4214576:cgc_process_llama": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_llama(struct_0 *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v2;\n
    if (24 > a0)\n
        return 24;\n
    if (cgc_sendline(1, v0 - 13414, 15) < 0)\n
        cgc__terminate();\n
    v3 = v1;\n
    if (*((v3 + 20)) >= 100)\n
        return v1;\n
    a0 -= 24;\n
    v3 = v2 + 1;\n
    v2 = v3;\n
    if (a0 <= 0)\n
        return v3;\n
    v3 = *((v0 + v1->field_14 * 4 + 52))(&v2);\n
}\n
", "4214771:sub_404ff3": null, "4214784:cgc_process_dupe": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process_dupe(unsigned int v4[4])\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (cgc_sendline(1, \"Starting dissection...\", 22) < 0)\n
        cgc__terminate();\n
    while (true)\n
    {\n
        v2 = cgc_dupe_next(v4);\n
        v0 = 0;\n
        if (v2)\n
            v0 = v2;\n
        if (!(v0 & 1))\n
            break;\n
        if (cgc_sendline(1, v1 - 13375, 20) < 0)\n
            cgc__terminate();\n
        if (v2->field_8 > v4[3])\n
        {\n
LABEL_4050ee:\n
            break;\n
        }\n
        else\n
        {\n
            if (!(v4[1] < 1))\n
                goto LABEL_4050ee;\n
            *((v1 + v4[1] * 4 + 452))(v2 + 1);\n
        }\n
    }\n
    v6 = cgc_sendline(1, v1 - 13354, 27);\n
    if (v6 < 0)\n
    {\n
        v6 = cgc__terminate();\n
        return v6;\n
    }\n
    return v6;\n
}\n
", "4215132:sub_40515c": null, "4215136:cgc_process_llamainutilely": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamainutilely(struct struct_0 **v12, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x34]\n
    char v1;  // [bp-0x2d]\n
    struct_2 *v2;  // [bp-0x2c]\n
    struct struct_3 **v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    char v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1e]\n
    char v7[2];  // [bp-0x18]\n
    unsigned short v8;  // [bp-0x12]\n
    unsigned int *v9;  // [bp-0x10]\n
    struct struct_0 **v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int *v14;  // eax\n
    struct struct_0 **v15;  // eax\n
    unsigned int *v16;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ebx\n
\n
    v11 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = cgc__cookie;\n
    v3 = -1;\n
    if (cgc_sendline(1, \"===llamainutilely===\", 20) < 0)\n
        cgc__terminate();\n
    v10 = v12;\n
    v9 = a0;\n
    *(&v7) = *(v10);\n
    memset(&v6, 0, 6);\n
    if (*(v9) < 2)\n
    {\n
        if (cgc_sendline(1, &v2[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v7[0] << 8)\n
        v1 = v7[1];\n
    v8 = v1 & 1;\n
    cgc_uint2str(&v6, 6, v8);\n
    v0 = &v6;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v6)) < 0)\n
        cgc__terminate();\n
    v14 = v9;\n
    *(v14) = *(v14) - 2;\n
    v15 = v10;\n
    *(v15) = *(v15) + 1;\n
    v4 ^= v2->field_260;\n
    if (v4)\n
        cgc___stack_cookie_fail();\n
    v16 = a0;\n
    if (*(v16) > 0 && v3 >= 0 && v3 < 0)\n
        v16 = *((&v5 + 0x4 * v3))(v12);\n
    v17 = v11;\n
    return v16;\n
}\n
", "4215646:sub_40535e": null, "4215648:cgc_process_llamaantioxygen": "typedef struct struct_4 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f030c;\n
extern unsigned int g_4f0310;\n
extern unsigned int g_4f0314;\n
\n
int cgc_process_llamaantioxygen(struct struct_0 **v199, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x434]\n
    struct_3 *v1;  // [bp-0x430]\n
    char v2;  // [bp-0x429]\n
    struct_3 *v3;  // [bp-0x428]\n
    char v4;  // [bp-0x421]\n
    struct_3 *v5;  // [bp-0x420]\n
    struct_3 *v6;  // [bp-0x41c]\n
    char v7;  // [bp-0x415]\n
    unsigned int v8;  // [bp-0x414]\n
    struct_3 *v9;  // [bp-0x410]\n
    struct_3 *v10;  // [bp-0x40c]\n
    struct_3 *v11;  // [bp-0x408]\n
    char v12;  // [bp-0x401]\n
    struct_3 *v13;  // [bp-0x400]\n
    struct_3 *v14;  // [bp-0x3fc]\n
    char v15;  // [bp-0x3f5]\n
    struct_3 *v16;  // [bp-0x3f4]\n
    char v17;  // [bp-0x3ed]\n
    struct_3 *v18;  // [bp-0x3ec]\n
    char v19;  // [bp-0x3e5]\n
    struct_3 *v20;  // [bp-0x3e4]\n
    unsigned int v21;  // [bp-0x3e0]\n
    struct_3 *v22;  // [bp-0x3dc]\n
    struct_3 *v23;  // [bp-0x3d8]\n
    struct_3 *v24;  // [bp-0x3d4]\n
    struct_3 *v25;  // [bp-0x3d0]\n
    struct_3 *v26;  // [bp-0x3cc]\n
    struct_3 *v27;  // [bp-0x3c8]\n
    unsigned int v28;  // [bp-0x3c4]\n
    struct_3 *v29;  // [bp-0x3c0]\n
    char v30;  // [bp-0x3b9]\n
    struct_4 *v31;  // [bp-0x3b8]\n
    unsigned short v32;  // [bp-0x3b4]\n
    unsigned short v33;  // [bp-0x3b2]\n
    unsigned short v34;  // [bp-0x3b0]\n
    unsigned short v35;  // [bp-0x3ae]\n
    unsigned short v36;  // [bp-0x3ac]\n
    unsigned short v37;  // [bp-0x3aa]\n
    unsigned short v38;  // [bp-0x3a8]\n
    unsigned short v39;  // [bp-0x3a6]\n
    unsigned short v40;  // [bp-0x3a4]\n
    unsigned short v41;  // [bp-0x3a2]\n
    unsigned short v42;  // [bp-0x3a0]\n
    unsigned short v43;  // [bp-0x39e]\n
    unsigned long v44;  // [bp-0x39c]\n
    unsigned long v45;  // [bp-0x394]\n
    unsigned long v46;  // [bp-0x38c]\n
    unsigned long v47;  // [bp-0x384]\n
    unsigned long v48;  // [bp-0x37c]\n
    unsigned long v49;  // [bp-0x374]\n
    struct struct_2 **v50;  // [bp-0x36c], Other Possible Types: unsigned int\n
    unsigned int v51;  // [bp-0x368]\n
    unsigned int v52;  // [bp-0x364]\n
    unsigned int v53;  // [bp-0x360]\n
    unsigned int v54;  // [bp-0x35c]\n
    char v55;  // [bp-0x356]\n
    char v56[2];  // [bp-0x350]\n
    unsigned short v57;  // [bp-0x34a]\n
    unsigned int *v58;  // [bp-0x348]\n
    struct struct_0 **v59;  // [bp-0x344]\n
    char v60;  // [bp-0x33d]\n
    char v61[8];  // [bp-0x328]\n
    unsigned int v62;  // [bp-0x324]\n
    void* v63;  // [bp-0x320]\n
    unsigned int *v64;  // [bp-0x318]\n
    struct struct_0 **v65;  // [bp-0x314]\n
    char v66;  // [bp-0x30d]\n
    char v67[8];  // [bp-0x2f8]\n
    unsigned int v68;  // [bp-0x2f4]\n
    void* v69;  // [bp-0x2f0]\n
    unsigned int *v70;  // [bp-0x2e8]\n
    struct struct_0 **v71;  // [bp-0x2e4]\n
    char v72;  // [bp-0x2dd]\n
    char v73[8];  // [bp-0x2c8]\n
    unsigned int v74;  // [bp-0x2c4]\n
    void* v75;  // [bp-0x2c0]\n
    unsigned int *v76;  // [bp-0x2b8]\n
    struct struct_0 **v77;  // [bp-0x2b4]\n
    char v78;  // [bp-0x2ad]\n
    char v79[8];  // [bp-0x298]\n
    unsigned int v80;  // [bp-0x294]\n
    void* v81;  // [bp-0x290]\n
    unsigned int *v82;  // [bp-0x288]\n
    struct struct_0 **v83;  // [bp-0x284]\n
    char v84;  // [bp-0x27d]\n
    char v85[8];  // [bp-0x268]\n
    unsigned int v86;  // [bp-0x264]\n
    void* v87;  // [bp-0x260]\n
    unsigned int *v88;  // [bp-0x258]\n
    struct struct_0 **v89;  // [bp-0x254]\n
    char v90;  // [bp-0x24d]\n
    char v91[8];  // [bp-0x238]\n
    unsigned int v92;  // [bp-0x234]\n
    void* v93;  // [bp-0x230]\n
    unsigned int *v94;  // [bp-0x228]\n
    struct struct_0 **v95;  // [bp-0x224]\n
    unsigned int v96;  // [bp-0x220]\n
    char v97;  // [bp-0x219]\n
    unsigned int *v98;  // [bp-0x218]\n
    struct struct_0 **v99;  // [bp-0x214]\n
    unsigned int v100;  // [bp-0x210]\n
    char v101;  // [bp-0x209]\n
    unsigned int *v102;  // [bp-0x208]\n
    struct struct_0 **v103;  // [bp-0x204]\n
    unsigned int v104;  // [bp-0x200]\n
    char v105;  // [bp-0x1f9]\n
    unsigned int *v106;  // [bp-0x1f8]\n
    struct struct_0 **v107;  // [bp-0x1f4]\n
    char *v108;  // [bp-0x1f0]\n
    unsigned int *v109;  // [bp-0x1ec]\n
    struct struct_0 **v110;  // [bp-0x1e8]\n
    struct_1 *v111;  // [bp-0x1e4]\n
    unsigned int *v112;  // [bp-0x1e0]\n
    struct struct_0 **v113;  // [bp-0x1dc]\n
    char *v114;  // [bp-0x1d8]\n
    unsigned int v115;  // [bp-0x1d4]\n
    unsigned int *v116;  // [bp-0x1d0]\n
    struct struct_0 **v117;  // [bp-0x1cc]\n
    char *v118;  // [bp-0x1c8]\n
    unsigned int v119;  // [bp-0x1c4]\n
    unsigned int *v120;  // [bp-0x1c0]\n
    struct struct_0 **v121;  // [bp-0x1bc]\n
    char v122;  // [bp-0x1b8]\n
    unsigned short v123;  // [bp-0x1b2]\n
    unsigned int *v124;  // [bp-0x1b0]\n
    struct struct_0 **v125;  // [bp-0x1ac]\n
    char v126;  // [bp-0x1a5]\n
    char v127;  // [bp-0x1a1]\n
    unsigned int *v128;  // [bp-0x1a0]\n
    struct struct_0 **v129;  // [bp-0x19c]\n
    char v130;  // [bp-0x195]\n
    char v131;  // [bp-0x191]\n
    unsigned int *v132;  // [bp-0x190]\n
    struct struct_0 **v133;  // [bp-0x18c]\n
    unsigned short *v134;  // [bp-0x188]\n
    unsigned int *v135;  // [bp-0x184]\n
    struct struct_0 **v136;  // [bp-0x180]\n
    unsigned short *v137;  // [bp-0x17c]\n
    unsigned int *v138;  // [bp-0x178]\n
    struct struct_0 **v139;  // [bp-0x174]\n
    unsigned short *v140;  // [bp-0x170]\n
    unsigned int *v141;  // [bp-0x16c]\n
    struct struct_0 **v142;  // [bp-0x168]\n
    char v143;  // [bp-0x161]\n
    unsigned long v144;  // [bp-0x14c]\n
    unsigned int *v145;  // [bp-0x140]\n
    struct struct_0 **v146;  // [bp-0x13c]\n
    char v147;  // [bp-0x138]\n
    unsigned int v148;  // [bp-0x12c]\n
    unsigned int *v149;  // [bp-0x128]\n
    struct struct_0 **v150;  // [bp-0x124]\n
    char v151;  // [bp-0x120]\n
    unsigned int v152;  // [bp-0x114]\n
    unsigned int *v153;  // [bp-0x110]\n
    struct struct_0 **v154;  // [bp-0x10c]\n
    char v155;  // [bp-0x108]\n
    unsigned int v156;  // [bp-0xfc]\n
    unsigned int *v157;  // [bp-0xf8]\n
    struct struct_0 **v158;  // [bp-0xf4]\n
    char v159;  // [bp-0xf0]\n
    unsigned int v160;  // [bp-0xe4]\n
    unsigned int *v161;  // [bp-0xe0]\n
    struct struct_0 **v162;  // [bp-0xdc]\n
    char v163;  // [bp-0xd8]\n
    unsigned int v164;  // [bp-0xcc]\n
    unsigned int *v165;  // [bp-0xc8]\n
    struct struct_0 **v166;  // [bp-0xc4]\n
    char v167;  // [bp-0xc0]\n
    unsigned int v168;  // [bp-0xb4]\n
    unsigned int *v169;  // [bp-0xb0]\n
    struct struct_0 **v170;  // [bp-0xac]\n
    unsigned int v171;  // [bp-0xa8]\n
    unsigned short v172;  // [bp-0xa2]\n
    unsigned int *v173;  // [bp-0xa0]\n
    struct struct_0 **v174;  // [bp-0x9c]\n
    unsigned int v175;  // [bp-0x98]\n
    unsigned short v176;  // [bp-0x92]\n
    unsigned int *v177;  // [bp-0x90]\n
    struct struct_0 **v178;  // [bp-0x8c]\n
    char v179;  // [bp-0x88]\n
    char v180[4];  // [bp-0x7c]\n
    unsigned int v181;  // [bp-0x78]\n
    unsigned int *v182;  // [bp-0x74]\n
    struct struct_0 **v183;  // [bp-0x70]\n
    char *v184;  // [bp-0x6c]\n
    unsigned int v185;  // [bp-0x68]\n
    unsigned int *v186;  // [bp-0x64]\n
    struct struct_0 **v187;  // [bp-0x60]\n
    char v188;  // [bp-0x59]\n
    unsigned int v189;  // [bp-0x44]\n
    unsigned int v190;  // [bp-0x40]\n
    unsigned int *v191;  // [bp-0x3c]\n
    struct struct_0 **v192;  // [bp-0x38]\n
    char v193;  // [bp-0x31]\n
    unsigned int v194;  // [bp-0x1c]\n
    unsigned int v195;  // [bp-0x18]\n
    unsigned int *v196;  // [bp-0x10]\n
    struct struct_0 **v197;  // [bp-0xc]\n
    unsigned int v198;  // [bp-0x8]\n
    unsigned int v200;  // ebx\n
    unsigned int *v201;  // eax\n
    struct struct_0 **v202;  // eax\n
    unsigned int *v203;  // eax\n
    struct struct_0 **v204;  // eax\n
    struct struct_0 **v205;  // eax\n
    unsigned int *v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    unsigned int *v215;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_0 **v232;  // eax\n
    unsigned int *v233;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    unsigned int *v247;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    struct struct_0 **v260;  // eax\n
    unsigned int *v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    struct_1 *v265;  // ecx\n
    unsigned int *v266;  // eax\n
    struct struct_0 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_0 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int v282[2];  // ecx\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    unsigned int *v285;  // eax, Other Possible Types: unsigned int\n
    unsigned int v286;  // ebx\n
\n
    v198 = v200;\n
    v31 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v52 = g_4f030c;\n
    v53 = g_4f0310;\n
    v54 = g_4f0314;\n
    v51 = cgc__cookie;\n
    v50 = -1;\n
    if (cgc_sendline(1, \"===llamaantioxygen===\", 21) < 0)\n
        cgc__terminate();\n
    v95 = v199;\n
    v94 = a0;\n
    *(&v91[0]) = *(v95);\n
    memset(&v90, 0, 21);\n
    if (*(v94) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (v91[0])\n
    {\n
        v30 = 0;\n
        if (v91[1])\n
        {\n
            v30 = 0;\n
            if (v91[2])\n
            {\n
                v30 = 0;\n
                if (v91[3])\n
                {\n
                    v30 = 0;\n
                    if (v91[4] << 24)\n
                    {\n
                        v30 = 0;\n
                        if (v91[5] << 16)\n
                        {\n
                            v30 = 0;\n
                            if (v91[6] << 8)\n
                                v30 = v91[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v92 = v30 & 1;\n
    v93 = 0;\n
    cgc_uint2str(&v90, 21, v92);\n
    v29 = &v90;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v201 = v94;\n
    *(v201) = *(v201) - 8;\n
    v202 = v95;\n
    *(v202) = &(*(v202))[1].padding_1[2];\n
    v107 = v199;\n
    v106 = a0;\n
    if (*(v106) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(v107)->field_0;\n
    v203 = v106;\n
    *(v203) = *(v203) - 1;\n
    v204 = v107;\n
    *(v204) = &*(v204)->padding_1;\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_405757;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_405757:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v205 = v107;\n
    *(v205) = &(&*(v205)->field_0)[v105];\n
    v206 = v106;\n
    *(v206) = *(v206) - v105;\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v113 = v199;\n
    v112 = a0;\n
    v111 = &*(v113);\n
    if (*(v112) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v207 = v112;\n
    *(v207) = *(v207) - 1;\n
    v208 = v113;\n
    *(v208) = &*(v208)->padding_1;\n
    v50 = v111->field_0;\n
    v121 = v199;\n
    v120 = a0;\n
    if (*(v120) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v120) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v120);\n
    v119 = v28;\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = cgc_calloc(134);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v118, &v31[18].padding_0[182]);\n
    cgc_strncpy(v118 + 5, *(v121), v119);\n
    v210 = v121;\n
    *(v210) = &(&*(v210)->field_4)[cgc_strlen(v118)];\n
    v212 = v120;\n
    *(v212) = *(v212) - (cgc_strlen(v118) + -4);\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v125 = v199;\n
    v124 = a0;\n
    memset(&v122, 0, 6);\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    cgc_uint2str(&v122, 6, v123);\n
    v27 = &v122;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v213 = v124;\n
    *(v213) = *(v213) - 2;\n
    v214 = v125;\n
    *(v214) = &*(v214)->padding_1[1];\n
    v133 = v199;\n
    v132 = a0;\n
    memset(&v130, 0, 4);\n
    if (*(v132) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(v133)->field_0;\n
    cgc_uint2str(&v130, 4, v131);\n
    v26 = &v130;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v215 = v132;\n
    *(v215) = *(v215) - 1;\n
    v216 = v133;\n
    *(v216) = &*(v216)->padding_1;\n
    v142 = v199;\n
    v141 = a0;\n
    v140 = &*(v142)->field_0;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v217 = v141;\n
    *(v217) = *(v217) - 2;\n
    v218 = v142;\n
    *(v218) = &*(v218)->padding_1[1];\n
    v50 = *(v140);\n
    v146 = v199;\n
    v145 = a0;\n
    memset(&v143, 0, 21);\n
    if (*(v145) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v144 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(fpround<4>);\n
    v42 = v43 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v143, 21, v49);\n
    v25 = &v143;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v143)) < 0)\n
        cgc__terminate();\n
    v219 = v145;\n
    *(v219) = *(v219) - 8;\n
    v220 = v146;\n
    *(v220) = &(*(v220))[1].padding_1[2];\n
    v150 = v199;\n
    v149 = a0;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = *(&*(v150)->field_0);\n
    cgc_uint2str(&v147, 12, v148);\n
    v24 = &v147;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v221 = v149;\n
    *(v221) = *(v221) - 4;\n
    v222 = v150;\n
    *(v222) = &*(v222)->field_4;\n
    v170 = v199;\n
    v169 = a0;\n
    memset(&v167, 0, 12);\n
    if (*(v169) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v168 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-926, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v167, 12, v48);\n
    v23 = &v167;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v167)) < 0)\n
        cgc__terminate();\n
    v223 = v169;\n
    *(v223) = *(v223) - 4;\n
    v224 = v170;\n
    *(v224) = &*(v224)->field_4;\n
    v174 = v199;\n
    v173 = a0;\n
    if (*(v173) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(&*(v174)->field_0);\n
    v225 = v173;\n
    *(v225) = *(v225) - 2;\n
    v226 = v174;\n
    *(v226) = &*(v226)->padding_1[1];\n
    if (v172 <= *(v173) && !(!v172))\n
        goto LABEL_406419;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_406419:\n
    v171 = cgc_calloc(v172);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v171, *(v174), v172);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v227 = v173;\n
    *(v227) = *(v227) - v172;\n
    v228 = v174;\n
    *(v228) = &(&*(v228)->field_0)[v172];\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    v166 = v199;\n
    v165 = a0;\n
    memset(&v163, 0, 12);\n
    if (*(v165) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v164 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-930, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v163, 12, v47);\n
    v22 = &v163;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v163)) < 0)\n
        cgc__terminate();\n
    v229 = v165;\n
    *(v229) = *(v229) - 4;\n
    v230 = v166;\n
    *(v230) = &*(v230)->field_4;\n
    v110 = v199;\n
    v109 = a0;\n
    v108 = &*(v110)->field_0;\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v231 = v109;\n
    *(v231) = *(v231) - 1;\n
    v232 = v110;\n
    *(v232) = &*(v232)->padding_1;\n
    v50 = *(v108);\n
    v178 = v199;\n
    v177 = a0;\n
    if (*(v177) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = *(&*(v178)->field_0);\n
    v233 = v177;\n
    *(v233) = *(v233) - 2;\n
    v234 = v178;\n
    *(v234) = &*(v234)->padding_1[1];\n
    if (v176 <= *(v177) && !(!v176))\n
        goto LABEL_406870;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_406870:\n
    v175 = cgc_calloc(v176);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v175, *(v178), v176);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v235 = v177;\n
    *(v235) = *(v235) - v176;\n
    v236 = v178;\n
    *(v236) = &(&*(v236)->field_0)[v176];\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    v117 = v199;\n
    v116 = a0;\n
    if (*(v116) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v116) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v116);\n
    v115 = v21;\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = cgc_calloc(134);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v114, &v31[18].padding_0[182]);\n
    cgc_strncpy(v114 + 5, *(v117), v115);\n
    v238 = v117;\n
    *(v238) = &(&*(v238)->field_4)[cgc_strlen(v114)];\n
    v240 = v116;\n
    *(v240) = *(v240) - (cgc_strlen(v114) + -4);\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v162 = v199;\n
    v161 = a0;\n
    memset(&v159, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v160 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-934, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v159, 12, v46);\n
    v20 = &v159;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v159)) < 0)\n
        cgc__terminate();\n
    v241 = v161;\n
    *(v241) = *(v241) - 4;\n
    v242 = v162;\n
    *(v242) = &*(v242)->field_4;\n
    v89 = v199;\n
    v88 = a0;\n
    *(&v85[0]) = *(v89);\n
    memset(&v84, 0, 21);\n
    if (*(v88) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v85[0])\n
    {\n
        v19 = 0;\n
        if (v85[1])\n
        {\n
            v19 = 0;\n
            if (v85[2])\n
            {\n
                v19 = 0;\n
                if (v85[3])\n
                {\n
                    v19 = 0;\n
                    if (v85[4] << 24)\n
                    {\n
                        v19 = 0;\n
                        if (v85[5] << 16)\n
                        {\n
                            v19 = 0;\n
                            if (v85[6] << 8)\n
                                v19 = v85[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v86 = v19 & 1;\n
    v87 = 0;\n
    cgc_uint2str(&v84, 21, v86);\n
    v18 = &v84;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v84)) < 0)\n
        cgc__terminate();\n
    v243 = v88;\n
    *(v243) = *(v243) - 8;\n
    v244 = v89;\n
    *(v244) = &(*(v244))[1].padding_1[2];\n
    v183 = v199;\n
    v182 = a0;\n
    *(&v180[0]) = *(v183);\n
    memset(&v179, 0, 12);\n
    if (*(v182) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v180[0] << 24)\n
    {\n
        v17 = 0;\n
        if (v180[1] << 16)\n
        {\n
            v17 = 0;\n
            if (v180[2] << 8)\n
                v17 = v180[3];\n
        }\n
    }\n
    v181 = v17 & 1;\n
    cgc_uint2str(&v179, 12, v181);\n
    v16 = &v179;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v179)) < 0)\n
        cgc__terminate();\n
    v245 = v182;\n
    *(v245) = *(v245) - 4;\n
    v246 = v183;\n
    *(v246) = &*(v246)->field_4;\n
    v83 = v199;\n
    v82 = a0;\n
    *(&v79[0]) = *(v83);\n
    memset(&v78, 0, 21);\n
    if (*(v82) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v79[0])\n
    {\n
        v15 = 0;\n
        if (v79[1])\n
        {\n
            v15 = 0;\n
            if (v79[2])\n
            {\n
                v15 = 0;\n
                if (v79[3])\n
                {\n
                    v15 = 0;\n
                    if (v79[4] << 24)\n
                    {\n
                        v15 = 0;\n
                        if (v79[5] << 16)\n
                        {\n
                            v15 = 0;\n
                            if (v79[6] << 8)\n
                                v15 = v79[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v80 = v15 & 1;\n
    v81 = 0;\n
    cgc_uint2str(&v78, 21, v80);\n
    v14 = &v78;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v247 = v82;\n
    *(v247) = *(v247) - 8;\n
    v248 = v83;\n
    *(v248) = &(*(v248))[1].padding_1[2];\n
    v139 = v199;\n
    v138 = a0;\n
    v137 = &*(v139)->field_0;\n
    if (*(v138) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v249 = v138;\n
    *(v249) = *(v249) - 2;\n
    v250 = v139;\n
    *(v250) = &*(v250)->padding_1[1];\n
    v50 = *(v137);\n
    v158 = v199;\n
    v157 = a0;\n
    memset(&v155, 0, 12);\n
    if (*(v157) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v156 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-938, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v155, 12, v45);\n
    v13 = &v155;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v251 = v157;\n
    *(v251) = *(v251) - 4;\n
    v252 = v158;\n
    *(v252) = &*(v252)->field_4;\n
    v77 = v199;\n
    v76 = a0;\n
    *(&v73[0]) = *(v77);\n
    memset(&v72, 0, 21);\n
    if (*(v76) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v73[0])\n
    {\n
        v12 = 0;\n
        if (v73[1])\n
        {\n
            v12 = 0;\n
            if (v73[2])\n
            {\n
                v12 = 0;\n
                if (v73[3])\n
                {\n
                    v12 = 0;\n
                    if (v73[4] << 24)\n
                    {\n
                        v12 = 0;\n
                        if (v73[5] << 16)\n
                        {\n
                            v12 = 0;\n
                            if (v73[6] << 8)\n
                                v12 = v73[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v74 = v12 & 1;\n
    v75 = 0;\n
    cgc_uint2str(&v72, 21, v74);\n
    v11 = &v72;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v253 = v76;\n
    *(v253) = *(v253) - 8;\n
    v254 = v77;\n
    *(v254) = &(*(v254))[1].padding_1[2];\n
    v129 = v199;\n
    v128 = a0;\n
    memset(&v126, 0, 4);\n
    if (*(v128) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(v129)->field_0;\n
    cgc_uint2str(&v126, 4, v127);\n
    v10 = &v126;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v255 = v128;\n
    *(v255) = *(v255) - 1;\n
    v256 = v129;\n
    *(v256) = &*(v256)->padding_1;\n
    v154 = v199;\n
    v153 = a0;\n
    memset(&v151, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v152 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-942, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v151, 12, v44);\n
    v9 = &v151;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v151)) < 0)\n
        cgc__terminate();\n
    v257 = v153;\n
    *(v257) = *(v257) - 4;\n
    v258 = v154;\n
    *(v258) = &*(v258)->field_4;\n
    v187 = v199;\n
    v186 = a0;\n
    if (*(v186) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v186) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v186);\n
    v185 = v8;\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v184 = cgc_calloc(134);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v184, &v31[18].padding_0[182]);\n
    cgc_strncpy(v184 + 5, *(v187), v185);\n
    v260 = v187;\n
    *(v260) = &(&*(v260)->field_4)[cgc_strlen(v184)];\n
    v262 = v186;\n
    *(v262) = *(v262) - (cgc_strlen(v184) + -4);\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v71 = v199;\n
    v70 = a0;\n
    *(&v67[0]) = *(v71);\n
    memset(&v66, 0, 21);\n
    if (*(v70) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v67[0])\n
    {\n
        v7 = 0;\n
        if (v67[1])\n
        {\n
            v7 = 0;\n
            if (v67[2])\n
            {\n
                v7 = 0;\n
                if (v67[3])\n
                {\n
                    v7 = 0;\n
                    if (v67[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v67[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v67[6] << 8)\n
                                v7 = v67[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v68 = v7 & 1;\n
    v69 = 0;\n
    cgc_uint2str(&v66, 21, v68);\n
    v6 = &v66;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v263 = v70;\n
    *(v263) = *(v263) - 8;\n
    v264 = v71;\n
    *(v264) = &(*(v264))[1].padding_1[2];\n
    v197 = v199;\n
    v196 = a0;\n
    memset(&v193, 0, 21);\n
    if (*(v196) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v265 = *(v197);\n
    v195 = v265->field_4;\n
    v194 = *(&v265->field_0);\n
    cgc_uint2str(&v193, 21, v194);\n
    v5 = &v193;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v266 = v196;\n
    *(v266) = *(v266) - 8;\n
    v267 = v197;\n
    *(v267) = &(*(v267))[1].padding_1[2];\n
    v103 = v199;\n
    v102 = a0;\n
    if (*(v102) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v101 = *(v103)->field_0;\n
    v268 = v102;\n
    *(v268) = *(v268) - 1;\n
    v269 = v103;\n
    *(v269) = &*(v269)->padding_1;\n
    if (v101 <= *(v102) && !(!v101))\n
        goto LABEL_40819c;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40819c:\n
    v100 = cgc_calloc(v101);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v100, *(v103), v101);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v270 = v103;\n
    *(v270) = &(&*(v270)->field_0)[v101];\n
    v271 = v102;\n
    *(v271) = *(v271) - v101;\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    v65 = v199;\n
    v64 = a0;\n
    *(&v61[0]) = *(v65);\n
    memset(&v60, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v61[0])\n
    {\n
        v4 = 0;\n
        if (v61[1])\n
        {\n
            v4 = 0;\n
            if (v61[2])\n
            {\n
                v4 = 0;\n
                if (v61[3])\n
                {\n
                    v4 = 0;\n
                    if (v61[4] << 24)\n
                    {\n
                        v4 = 0;\n
                        if (v61[5] << 16)\n
                        {\n
                            v4 = 0;\n
                            if (v61[6] << 8)\n
                                v4 = v61[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v62 = v4 & 1;\n
    v63 = 0;\n
    cgc_uint2str(&v60, 21, v62);\n
    v3 = &v60;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v272 = v64;\n
    *(v272) = *(v272) - 8;\n
    v273 = v65;\n
    *(v273) = &(*(v273))[1].padding_1[2];\n
    v136 = v199;\n
    v135 = a0;\n
    v134 = &*(v136)->field_0;\n
    if (*(v135) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v274 = v135;\n
    *(v274) = *(v274) - 2;\n
    v275 = v136;\n
    *(v275) = &*(v275)->padding_1[1];\n
    v50 = *(v134);\n
    v99 = v199;\n
    v98 = a0;\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v97 = *(v99)->field_0;\n
    v276 = v98;\n
    *(v276) = *(v276) - 1;\n
    v277 = v99;\n
    *(v277) = &*(v277)->padding_1;\n
    if (v97 <= *(v98) && !(!v97))\n
        goto LABEL_4086c5;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4086c5:\n
    v96 = cgc_calloc(v97);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v96, *(v99), v97);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v278 = v99;\n
    *(v278) = &(&*(v278)->field_0)[v97];\n
    v279 = v98;\n
    *(v279) = *(v279) - v97;\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    v59 = v199;\n
    v58 = a0;\n
    *(&v56) = *(v59);\n
    memset(&v55, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v56[0] << 8)\n
        v2 = v56[1];\n
    v57 = v2 & 1;\n
    cgc_uint2str(&v55, 6, v57);\n
    v1 = &v55;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v280 = v58;\n
    *(v280) = *(v280) - 2;\n
    v281 = v59;\n
    *(v281) = &*(v281)->padding_1[1];\n
    v192 = v199;\n
    v191 = a0;\n
    memset(&v188, 0, 21);\n
    if (*(v191) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v282 = *(v192);\n
    v190 = v282[1];\n
    v189 = v282[0];\n
    cgc_uint2str(&v188, 21, v189);\n
    v0 = &v188;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v188)) < 0)\n
        cgc__terminate();\n
    v283 = v191;\n
    *(v283) = *(v283) - 8;\n
    v284 = v192;\n
    *(v284) = &(*(v284))[1].padding_1[2];\n
    v51 ^= v31->field_260;\n
    if (v51)\n
        cgc___stack_cookie_fail();\n
    v285 = a0;\n
    if (*(v285) > 0 && v50 >= 0 && v50 < 3)\n
        v285 = (&v52)[v50](v199);\n
    v286 = v198;\n
    return v285;\n
}\n
", "4229910:sub_408b16": null, "4229920:cgc_process_llamasubtileness": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasubtileness(struct struct_1 **v153, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x32c]\n
    char v1;  // [bp-0x325]\n
    unsigned int v2;  // [bp-0x324]\n
    struct_0 *v3;  // [bp-0x320]\n
    struct_0 *v4;  // [bp-0x31c]\n
    char v5;  // [bp-0x315]\n
    unsigned int v6;  // [bp-0x314]\n
    struct_0 *v7;  // [bp-0x310]\n
    struct_0 *v8;  // [bp-0x30c]\n
    struct_0 *v9;  // [bp-0x308]\n
    struct_0 *v10;  // [bp-0x304]\n
    struct_0 *v11;  // [bp-0x300]\n
    struct_0 *v12;  // [bp-0x2fc]\n
    struct_0 *v13;  // [bp-0x2f8]\n
    struct_0 *v14;  // [bp-0x2f4]\n
    char v15;  // [bp-0x2ed]\n
    struct_0 *v16;  // [bp-0x2ec]\n
    struct_0 *v17;  // [bp-0x2e8]\n
    char v18;  // [bp-0x2e1]\n
    unsigned int v19;  // [bp-0x2e0]\n
    struct_0 *v20;  // [bp-0x2dc]\n
    struct_0 *v21;  // [bp-0x2d8]\n
    struct_3 *v22;  // [bp-0x2d4]\n
    unsigned short v23;  // [bp-0x2d0]\n
    unsigned short v24;  // [bp-0x2ce]\n
    unsigned short v25;  // [bp-0x2cc]\n
    unsigned short v26;  // [bp-0x2ca]\n
    unsigned short v27;  // [bp-0x2c8]\n
    unsigned short v28;  // [bp-0x2c6]\n
    unsigned long v29;  // [bp-0x2c4]\n
    unsigned long v30;  // [bp-0x2bc]\n
    unsigned long v31;  // [bp-0x2b4]\n
    struct struct_2 **v32;  // [bp-0x2a8]\n
    unsigned int v33;  // [bp-0x2a4]\n
    char v34;  // [bp-0x2a0]\n
    char v35;  // [bp-0x29e]\n
    char v36[2];  // [bp-0x298]\n
    unsigned short v37;  // [bp-0x292]\n
    unsigned int *v38;  // [bp-0x290]\n
    struct struct_1 **v39;  // [bp-0x28c]\n
    char v40;  // [bp-0x286]\n
    char v41[2];  // [bp-0x280]\n
    unsigned short v42;  // [bp-0x27a]\n
    unsigned int *v43;  // [bp-0x278]\n
    struct struct_1 **v44;  // [bp-0x274]\n
    char v45;  // [bp-0x26d]\n
    char v46[8];  // [bp-0x258]\n
    unsigned int v47;  // [bp-0x254]\n
    void* v48;  // [bp-0x250]\n
    unsigned int *v49;  // [bp-0x248]\n
    struct struct_1 **v50;  // [bp-0x244]\n
    char v51;  // [bp-0x23d]\n
    char v52[5];  // [bp-0x228]\n
    unsigned int v53;  // [bp-0x224]\n
    void* v54;  // [bp-0x220]\n
    unsigned int *v55;  // [bp-0x21c]\n
    struct struct_1 **v56;  // [bp-0x218]\n
    char *v57;  // [bp-0x214]\n
    unsigned int v58;  // [bp-0x210]\n
    unsigned int *v59;  // [bp-0x20c]\n
    struct struct_1 **v60;  // [bp-0x208]\n
    char *v61;  // [bp-0x204]\n
    unsigned int v62;  // [bp-0x200]\n
    unsigned int *v63;  // [bp-0x1fc]\n
    struct struct_1 **v64;  // [bp-0x1f8]\n
    char v65;  // [bp-0x1f4]\n
    unsigned short v66;  // [bp-0x1ee]\n
    unsigned int *v67;  // [bp-0x1ec]\n
    struct struct_1 **v68;  // [bp-0x1e8]\n
    char v69;  // [bp-0x1e1]\n
    char v70;  // [bp-0x1dd]\n
    unsigned int *v71;  // [bp-0x1dc]\n
    struct struct_1 **v72;  // [bp-0x1d8]\n
    char v73;  // [bp-0x1d1]\n
    char v74;  // [bp-0x1cd]\n
    unsigned int *v75;  // [bp-0x1cc]\n
    struct struct_1 **v76;  // [bp-0x1c8]\n
    char v77;  // [bp-0x1c1]\n
    char v78;  // [bp-0x1bd]\n
    unsigned int *v79;  // [bp-0x1bc]\n
    struct struct_1 **v80;  // [bp-0x1b8]\n
    char v81;  // [bp-0x1b1]\n
    unsigned long v82;  // [bp-0x19c]\n
    unsigned int *v83;  // [bp-0x194]\n
    struct struct_1 **v84;  // [bp-0x190]\n
    char v85;  // [bp-0x189]\n
    unsigned long v86;  // [bp-0x174]\n
    unsigned int *v87;  // [bp-0x16c]\n
    struct struct_1 **v88;  // [bp-0x168]\n
    char v89;  // [bp-0x161]\n
    unsigned long v90;  // [bp-0x14c]\n
    unsigned int *v91;  // [bp-0x144]\n
    struct struct_1 **v92;  // [bp-0x140]\n
    char v93;  // [bp-0x13c]\n
    unsigned int v94;  // [bp-0x130]\n
    unsigned int *v95;  // [bp-0x12c]\n
    struct struct_1 **v96;  // [bp-0x128]\n
    unsigned int v97;  // [bp-0x124]\n
    unsigned short v98;  // [bp-0x11e]\n
    unsigned int *v99;  // [bp-0x11c]\n
    struct struct_1 **v100;  // [bp-0x118]\n
    unsigned int v101;  // [bp-0x114]\n
    unsigned short v102;  // [bp-0x10e]\n
    unsigned int *v103;  // [bp-0x10c]\n
    struct struct_1 **v104;  // [bp-0x108]\n
    unsigned int v105;  // [bp-0x104]\n
    unsigned short v106;  // [bp-0xfe]\n
    unsigned int *v107;  // [bp-0xfc]\n
    struct struct_1 **v108;  // [bp-0xf8]\n
    unsigned int v109;  // [bp-0xf4]\n
    unsigned short v110;  // [bp-0xee]\n
    unsigned int *v111;  // [bp-0xec]\n
    struct struct_1 **v112;  // [bp-0xe8]\n
    unsigned int v113;  // [bp-0xe4]\n
    unsigned short v114;  // [bp-0xde]\n
    unsigned int *v115;  // [bp-0xdc]\n
    struct struct_1 **v116;  // [bp-0xd8]\n
    unsigned int v117;  // [bp-0xd4]\n
    unsigned short v118;  // [bp-0xce]\n
    unsigned int *v119;  // [bp-0xcc]\n
    struct struct_1 **v120;  // [bp-0xc8]\n
    unsigned int v121;  // [bp-0xc4]\n
    unsigned short v122;  // [bp-0xbe]\n
    unsigned int *v123;  // [bp-0xbc]\n
    struct struct_1 **v124;  // [bp-0xb8]\n
    char *v125;  // [bp-0xb4]\n
    unsigned int v126;  // [bp-0xb0]\n
    unsigned int *v127;  // [bp-0xac]\n
    struct struct_1 **v128;  // [bp-0xa8]\n
    char v129;  // [bp-0xa1]\n
    unsigned int v130;  // [bp-0x8c]\n
    unsigned int v131;  // [bp-0x88]\n
    unsigned int *v132;  // [bp-0x84]\n
    struct struct_1 **v133;  // [bp-0x80]\n
    char v134;  // [bp-0x79]\n
    unsigned int v135;  // [bp-0x64]\n
    unsigned int v136;  // [bp-0x60]\n
    unsigned int *v137;  // [bp-0x5c]\n
    struct struct_1 **v138;  // [bp-0x58]\n
    char v139;  // [bp-0x51]\n
    unsigned int v140;  // [bp-0x3c]\n
    unsigned int v141;  // [bp-0x38]\n
    unsigned int *v142;  // [bp-0x30]\n
    struct struct_1 **v143;  // [bp-0x2c]\n
    unsigned int v144;  // [bp-0x28]\n
    char v145;  // [bp-0x21]\n
    unsigned int *v146;  // [bp-0x20]\n
    struct struct_1 **v147;  // [bp-0x1c]\n
    unsigned int v148;  // [bp-0x18]\n
    char v149;  // [bp-0x11]\n
    unsigned int *v150;  // [bp-0x10]\n
    struct struct_1 **v151;  // [bp-0xc]\n
    unsigned int v152;  // [bp-0x8]\n
    unsigned int v154;  // ebx\n
    unsigned int v155[2];  // ecx\n
    unsigned int *v156;  // eax\n
    struct struct_1 **v157;  // eax\n
    unsigned int *v158;  // eax\n
    struct struct_1 **v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_1 **v161;  // eax\n
    struct struct_1 **v162;  // eax\n
    unsigned int *v163;  // eax\n
    struct struct_1 **v165;  // eax\n
    unsigned int *v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_1 **v169;  // eax\n
    unsigned int *v170;  // eax\n
    struct struct_1 **v171;  // eax\n
    unsigned int *v172;  // eax\n
    struct struct_1 **v173;  // eax\n
    unsigned int *v174;  // eax\n
    struct struct_1 **v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_1 **v177;  // eax\n
    unsigned int *v178;  // eax\n
    struct struct_1 **v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_1 **v181;  // eax\n
    struct struct_1 **v182;  // eax\n
    unsigned int *v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_1 **v185;  // eax\n
    unsigned int *v186;  // eax\n
    struct struct_1 **v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_1 **v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_1 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_1 **v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_1 **v195;  // eax\n
    char v196[5];  // ecx\n
    unsigned int *v197;  // eax\n
    struct struct_1 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_1 **v200;  // eax\n
    unsigned int *v201;  // eax\n
    struct struct_1 **v202;  // eax\n
    unsigned int v203[2];  // ecx\n
    unsigned int *v204;  // eax\n
    struct struct_1 **v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_1 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_1 **v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_1 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_1 **v213;  // eax\n
    struct struct_1 **v215;  // eax\n
    unsigned int *v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_1 **v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_1 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_1 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_1 **v225;  // eax\n
    struct struct_1 **v227;  // eax\n
    unsigned int *v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_1 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_1 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_1 **v235;  // eax\n
    unsigned int *v236;  // eax, Other Possible Types: unsigned int\n
    unsigned int v237;  // ebx\n
\n
    v152 = v154;\n
    v22 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamasubtileness===\", 22) < 0)\n
        cgc__terminate();\n
    v143 = v153;\n
    v142 = a0;\n
    memset(&v139, 0, 21);\n
    if (*(v142) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v155 = *(v143);\n
    v141 = v155[1];\n
    v140 = v155[0];\n
    cgc_uint2str(&v139, 21, v140);\n
    v21 = &v139;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v156 = v142;\n
    *(v156) = *(v156) - 8;\n
    v157 = v143;\n
    *(v157) = &(*(v157))[1].padding_1[2];\n
    v80 = v153;\n
    v79 = a0;\n
    memset(&v77, 0, 4);\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v78 = *(v80)->field_0;\n
    cgc_uint2str(&v77, 4, v78);\n
    v20 = &v77;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v158 = v79;\n
    *(v158) = *(v158) - 1;\n
    v159 = v80;\n
    *(v159) = &*(v159)->padding_1;\n
    v151 = v153;\n
    v150 = a0;\n
    if (*(v150) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v149 = *(v151)->field_0;\n
    v160 = v150;\n
    *(v160) = *(v160) - 1;\n
    v161 = v151;\n
    *(v161) = &*(v161)->padding_1;\n
    if (v149 <= *(v150) && !(!v149))\n
        goto LABEL_408ef6;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_408ef6:\n
    v148 = cgc_calloc(v149);\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v148, *(v151), v149);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v162 = v151;\n
    *(v162) = &(&*(v162)->field_0)[v149];\n
    v163 = v150;\n
    *(v163) = *(v163) - v149;\n
    cgc_checkheap();\n
    cgc_free(v148);\n
    v128 = v153;\n
    v127 = a0;\n
    if (*(v127) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v127) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v127);\n
    v126 = v19;\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v125 = cgc_calloc(134);\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v125, &v22[18].padding_0[182]);\n
    cgc_strncpy(v125 + 5, *(v128), v126);\n
    v165 = v128;\n
    *(v165) = &(&*(v165)->field_4)[cgc_strlen(v125)];\n
    v167 = v127;\n
    *(v167) = *(v167) - (cgc_strlen(v125) + -4);\n
    cgc_checkheap();\n
    cgc_free(v125);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v44 = v153;\n
    v43 = a0;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v41[0] << 8)\n
        v18 = v41[1];\n
    v42 = v18 & 1;\n
    cgc_uint2str(&v40, 6, v42);\n
    v17 = &v40;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v168 = v43;\n
    *(v168) = *(v168) - 2;\n
    v169 = v44;\n
    *(v169) = &*(v169)->padding_1[1];\n
    v112 = v153;\n
    v111 = a0;\n
    if (*(v111) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(&*(v112)->field_0);\n
    v170 = v111;\n
    *(v170) = *(v170) - 2;\n
    v171 = v112;\n
    *(v171) = &*(v171)->padding_1[1];\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_409517;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_409517:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v172 = v111;\n
    *(v172) = *(v172) - v110;\n
    v173 = v112;\n
    *(v173) = &(&*(v173)->field_0)[v110];\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v68 = v153;\n
    v67 = a0;\n
    memset(&v65, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v66 = *(&*(v68)->field_0);\n
    cgc_uint2str(&v65, 6, v66);\n
    v16 = &v65;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v174 = v67;\n
    *(v174) = *(v174) - 2;\n
    v175 = v68;\n
    *(v175) = &*(v175)->padding_1[1];\n
    v56 = v153;\n
    v55 = a0;\n
    *(&v52[0]) = *(v56);\n
    memset(&v51, 0, 21);\n
    if (*(v55) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v52[0])\n
    {\n
        v15 = 0;\n
        if (v52[1])\n
        {\n
            v15 = 0;\n
            if (v52[2])\n
            {\n
                v15 = 0;\n
                if (v52[3])\n
                {\n
                    v15 = 0;\n
                    if (v52[4] << 24)\n
                    {\n
                        v15 = 0;\n
                        if (v52[1] << 16)\n
                        {\n
                            v15 = 0;\n
                            if (v52[1 + 1] << 8)\n
                                v15 = v52[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v53 = v15 & 1;\n
    v54 = 0;\n
    cgc_uint2str(&v51, 21, v53);\n
    v14 = &v51;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v176 = v55;\n
    *(v176) = *(v176) - 8;\n
    v177 = v56;\n
    *(v177) = &(*(v177))[1].padding_1[2];\n
    v92 = v153;\n
    v91 = a0;\n
    memset(&v89, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v90 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v28 = [D] x86g_create_fpucw(fpround<4>);\n
    v27 = v28 | 0xc00;\n
    v31 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v89, 21, v31);\n
    v13 = &v89;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v89)) < 0)\n
        cgc__terminate();\n
    v178 = v91;\n
    *(v178) = *(v178) - 8;\n
    v179 = v92;\n
    *(v179) = &(*(v179))[1].padding_1[2];\n
    v147 = v153;\n
    v146 = a0;\n
    if (*(v146) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v145 = *(v147)->field_0;\n
    v180 = v146;\n
    *(v180) = *(v180) - 1;\n
    v181 = v147;\n
    *(v181) = &*(v181)->padding_1;\n
    if (v145 <= *(v146) && !(!v145))\n
        goto LABEL_409c33;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_409c33:\n
    v144 = cgc_calloc(v145);\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v144, *(v147), v145);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v182 = v147;\n
    *(v182) = &(&*(v182)->field_0)[v145];\n
    v183 = v146;\n
    *(v183) = *(v183) - v145;\n
    cgc_checkheap();\n
    cgc_free(v144);\n
    v108 = v153;\n
    v107 = a0;\n
    if (*(v107) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(&*(v108)->field_0);\n
    v184 = v107;\n
    *(v184) = *(v184) - 2;\n
    v185 = v108;\n
    *(v185) = &*(v185)->padding_1[1];\n
    if (v106 <= *(v107) && !(!v106))\n
        goto LABEL_409e4c;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_409e4c:\n
    v105 = cgc_calloc(v106);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v105, *(v108), v106);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v186 = v107;\n
    *(v186) = *(v186) - v106;\n
    v187 = v108;\n
    *(v187) = &(&*(v187)->field_0)[v106];\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    v104 = v153;\n
    v103 = a0;\n
    if (*(v103) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v102 = *(&*(v104)->field_0);\n
    v188 = v103;\n
    *(v188) = *(v188) - 2;\n
    v189 = v104;\n
    *(v189) = &*(v189)->padding_1[1];\n
    if (v102 <= *(v103) && !(!v102))\n
        goto LABEL_40a086;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40a086:\n
    v101 = cgc_calloc(v102);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v101, *(v104), v102);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v190 = v103;\n
    *(v190) = *(v190) - v102;\n
    v191 = v104;\n
    *(v191) = &(&*(v191)->field_0)[v102];\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    v88 = v153;\n
    v87 = a0;\n
    memset(&v85, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v86 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v26 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-710, size=2, endness=Iend_LE)))));\n
    v25 = v26 | 0xc00;\n
    v30 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v85, 21, v30);\n
    v12 = &v85;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v85)) < 0)\n
        cgc__terminate();\n
    v192 = v87;\n
    *(v192) = *(v192) - 8;\n
    v193 = v88;\n
    *(v193) = &(*(v193))[1].padding_1[2];\n
    v76 = v153;\n
    v75 = a0;\n
    memset(&v73, 0, 4);\n
    if (*(v75) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v74 = *(v76)->field_0;\n
    cgc_uint2str(&v73, 4, v74);\n
    v11 = &v73;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v194 = v75;\n
    *(v194) = *(v194) - 1;\n
    v195 = v76;\n
    *(v195) = &*(v195)->padding_1;\n
    v138 = v153;\n
    v137 = a0;\n
    memset(&v134, 0, 21);\n
    if (*(v137) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v196 = *(v138);\n
    v136 = *(&v196[4]);\n
    v135 = *(&v196[0]);\n
    cgc_uint2str(&v134, 21, v135);\n
    v10 = &v134;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v197 = v137;\n
    *(v197) = *(v197) - 8;\n
    v198 = v138;\n
    *(v198) = &(*(v198))[1].padding_1[2];\n
    v124 = v153;\n
    v123 = a0;\n
    if (*(v123) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(&*(v124)->field_0);\n
    v199 = v123;\n
    *(v199) = *(v199) - 2;\n
    v200 = v124;\n
    *(v200) = &*(v200)->padding_1[1];\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_40a69d;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40a69d:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v201 = v123;\n
    *(v201) = *(v201) - v122;\n
    v202 = v124;\n
    *(v202) = &(&*(v202)->field_0)[v122];\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v133 = v153;\n
    v132 = a0;\n
    memset(&v129, 0, 21);\n
    if (*(v132) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v203 = *(v133);\n
    v131 = v203[1];\n
    v130 = v203[0];\n
    cgc_uint2str(&v129, 21, v130);\n
    v9 = &v129;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v129)) < 0)\n
        cgc__terminate();\n
    v204 = v132;\n
    *(v204) = *(v204) - 8;\n
    v205 = v133;\n
    *(v205) = &(*(v205))[1].padding_1[2];\n
    v120 = v153;\n
    v119 = a0;\n
    if (*(v119) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(&*(v120)->field_0);\n
    v206 = v119;\n
    *(v206) = *(v206) - 2;\n
    v207 = v120;\n
    *(v207) = &*(v207)->padding_1[1];\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_40aa11;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40aa11:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v208 = v119;\n
    *(v208) = *(v208) - v118;\n
    v209 = v120;\n
    *(v209) = &(&*(v209)->field_0)[v118];\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v96 = v153;\n
    v95 = a0;\n
    memset(&v93, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = *(&*(v96)->field_0);\n
    cgc_uint2str(&v93, 12, v94);\n
    v8 = &v93;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v93)) < 0)\n
        cgc__terminate();\n
    v210 = v95;\n
    *(v210) = *(v210) - 4;\n
    v211 = v96;\n
    *(v211) = &*(v211)->field_4;\n
    v72 = v153;\n
    v71 = a0;\n
    memset(&v69, 0, 4);\n
    if (*(v71) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v70 = *(v72)->field_0;\n
    cgc_uint2str(&v69, 4, v70);\n
    v7 = &v69;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v212 = v71;\n
    *(v212) = *(v212) - 1;\n
    v213 = v72;\n
    *(v213) = &*(v213)->padding_1;\n
    v64 = v153;\n
    v63 = a0;\n
    if (*(v63) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v63) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v63);\n
    v62 = v6;\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = cgc_calloc(134);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v61, &v22[18].padding_0[182]);\n
    cgc_strncpy(v61 + 5, *(v64), v62);\n
    v215 = v64;\n
    *(v215) = &(&*(v215)->field_4)[cgc_strlen(v61)];\n
    v217 = v63;\n
    *(v217) = *(v217) - (cgc_strlen(v61) + -4);\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v50 = v153;\n
    v49 = a0;\n
    *(&v46[0]) = *(v50);\n
    memset(&v45, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v46[0])\n
    {\n
        v5 = 0;\n
        if (v46[1])\n
        {\n
            v5 = 0;\n
            if (v46[2])\n
            {\n
                v5 = 0;\n
                if (v46[3])\n
                {\n
                    v5 = 0;\n
                    if (v46[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v46[5] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v46[6] << 8)\n
                                v5 = v46[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v47 = v5 & 1;\n
    v48 = 0;\n
    cgc_uint2str(&v45, 21, v47);\n
    v4 = &v45;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v45)) < 0)\n
        cgc__terminate();\n
    v218 = v49;\n
    *(v218) = *(v218) - 8;\n
    v219 = v50;\n
    *(v219) = &(*(v219))[1].padding_1[2];\n
    v100 = v153;\n
    v99 = a0;\n
    if (*(v99) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v98 = *(&*(v100)->field_0);\n
    v220 = v99;\n
    *(v220) = *(v220) - 2;\n
    v221 = v100;\n
    *(v221) = &*(v221)->padding_1[1];\n
    if (v98 <= *(v99) && !(!v98))\n
        goto LABEL_40b39b;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40b39b:\n
    v97 = cgc_calloc(v98);\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v97, *(v100), v98);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v222 = v99;\n
    *(v222) = *(v222) - v98;\n
    v223 = v100;\n
    *(v223) = &(&*(v223)->field_0)[v98];\n
    cgc_checkheap();\n
    cgc_free(v97);\n
    v84 = v153;\n
    v83 = a0;\n
    memset(&v81, 0, 21);\n
    if (*(v83) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v82 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v24 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-714, size=2, endness=Iend_LE)))));\n
    v23 = v24 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v81, 21, v29);\n
    v3 = &v81;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v81)) < 0)\n
        cgc__terminate();\n
    v224 = v83;\n
    *(v224) = *(v224) - 8;\n
    v225 = v84;\n
    *(v225) = &(*(v225))[1].padding_1[2];\n
    v60 = v153;\n
    v59 = a0;\n
    if (*(v59) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v59) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v59);\n
    v58 = v2;\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v57 = cgc_calloc(134);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v57, &v22[18].padding_0[182]);\n
    cgc_strncpy(v57 + 5, *(v60), v58);\n
    v227 = v60;\n
    *(v227) = &(&*(v227)->field_4)[cgc_strlen(v57)];\n
    v229 = v59;\n
    *(v229) = *(v229) - (cgc_strlen(v57) + -4);\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v39 = v153;\n
    v38 = a0;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v36[0] << 8)\n
        v1 = v36[1];\n
    v37 = v1 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v0 = &v35;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v230 = v38;\n
    *(v230) = *(v230) - 2;\n
    v231 = v39;\n
    *(v231) = &*(v231)->padding_1[1];\n
    v116 = v153;\n
    v115 = a0;\n
    if (*(v115) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(&*(v116)->field_0);\n
    v232 = v115;\n
    *(v232) = *(v232) - 2;\n
    v233 = v116;\n
    *(v233) = &*(v233)->padding_1[1];\n
    if (v114 <= *(v115) && !(!v114))\n
        goto LABEL_40bb51;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40bb51:\n
    v113 = cgc_calloc(v114);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v113, *(v116), v114);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v234 = v115;\n
    *(v234) = *(v234) - v114;\n
    v235 = v116;\n
    *(v235) = &(&*(v235)->field_0)[v114];\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    v33 ^= v22->field_260;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v236 = a0;\n
    if (*(v236) > 0 && v32 >= 0 && v32 < 0)\n
        v236 = *((&v34 + 0x4 * v32))(v153);\n
    v237 = v152;\n
    return v236;\n
}\n
", "4242678:sub_40bcf6": null, "4242688:cgc_process_llamapunaise": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamapunaise(struct struct_0 **v126, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x274]\n
    char v1;  // [bp-0x26d]\n
    struct_1 *v2;  // [bp-0x26c]\n
    char v3;  // [bp-0x265]\n
    struct_1 *v4;  // [bp-0x264]\n
    struct_1 *v5;  // [bp-0x260]\n
    char v6;  // [bp-0x259]\n
    struct_1 *v7;  // [bp-0x258]\n
    struct_1 *v8;  // [bp-0x254]\n
    struct_1 *v9;  // [bp-0x250]\n
    struct_1 *v10;  // [bp-0x24c]\n
    struct_1 *v11;  // [bp-0x248]\n
    char v12;  // [bp-0x241]\n
    struct_1 *v13;  // [bp-0x240]\n
    struct_1 *v14;  // [bp-0x23c]\n
    struct_1 *v15;  // [bp-0x238]\n
    struct_1 *v16;  // [bp-0x234]\n
    char v17;  // [bp-0x22d]\n
    struct_1 *v18;  // [bp-0x22c]\n
    struct_2 *v19;  // [bp-0x228]\n
    unsigned short v20;  // [bp-0x224]\n
    unsigned short v21;  // [bp-0x222]\n
    unsigned short v22;  // [bp-0x220]\n
    unsigned short v23;  // [bp-0x21e]\n
    unsigned long v24;  // [bp-0x21c]\n
    unsigned long v25;  // [bp-0x214]\n
    struct struct_4 **v26;  // [bp-0x208]\n
    unsigned int v27;  // [bp-0x204]\n
    char v28;  // [bp-0x200]\n
    char v29;  // [bp-0x1fe]\n
    char v30[2];  // [bp-0x1f8]\n
    unsigned short v31;  // [bp-0x1f2]\n
    unsigned int *v32;  // [bp-0x1f0]\n
    struct struct_0 **v33;  // [bp-0x1ec]\n
    char v34;  // [bp-0x1e5]\n
    char v35[8];  // [bp-0x1d0]\n
    unsigned int v36;  // [bp-0x1cc]\n
    void* v37;  // [bp-0x1c8]\n
    unsigned int *v38;  // [bp-0x1c0]\n
    struct struct_0 **v39;  // [bp-0x1bc]\n
    unsigned int v40;  // [bp-0x1b8]\n
    char v41;  // [bp-0x1b1]\n
    unsigned int *v42;  // [bp-0x1b0]\n
    struct struct_0 **v43;  // [bp-0x1ac]\n
    unsigned int v44;  // [bp-0x1a8]\n
    char v45;  // [bp-0x1a1]\n
    unsigned int *v46;  // [bp-0x1a0]\n
    struct struct_0 **v47;  // [bp-0x19c]\n
    unsigned int v48;  // [bp-0x198]\n
    char v49;  // [bp-0x191]\n
    unsigned int *v50;  // [bp-0x190]\n
    struct struct_0 **v51;  // [bp-0x18c]\n
    char v52;  // [bp-0x188]\n
    unsigned short v53;  // [bp-0x182]\n
    unsigned int *v54;  // [bp-0x180]\n
    struct struct_0 **v55;  // [bp-0x17c]\n
    char v56;  // [bp-0x175]\n
    char v57;  // [bp-0x171]\n
    unsigned int *v58;  // [bp-0x170]\n
    struct struct_0 **v59;  // [bp-0x16c]\n
    char v60;  // [bp-0x165]\n
    char v61;  // [bp-0x161]\n
    unsigned int *v62;  // [bp-0x160]\n
    struct struct_0 **v63;  // [bp-0x15c]\n
    char v64;  // [bp-0x155]\n
    char v65;  // [bp-0x151]\n
    unsigned int *v66;  // [bp-0x150]\n
    struct struct_0 **v67;  // [bp-0x14c]\n
    char v68;  // [bp-0x148]\n
    unsigned int v69;  // [bp-0x13c]\n
    unsigned int *v70;  // [bp-0x138]\n
    struct struct_0 **v71;  // [bp-0x134]\n
    char v72;  // [bp-0x130]\n
    unsigned int v73;  // [bp-0x124]\n
    unsigned int *v74;  // [bp-0x120]\n
    struct struct_0 **v75;  // [bp-0x11c]\n
    char v76;  // [bp-0x118]\n
    unsigned int v77;  // [bp-0x10c]\n
    unsigned int *v78;  // [bp-0x108]\n
    struct struct_0 **v79;  // [bp-0x104]\n
    unsigned int v80;  // [bp-0x100]\n
    unsigned short v81;  // [bp-0xfa]\n
    unsigned int *v82;  // [bp-0xf8]\n
    struct struct_0 **v83;  // [bp-0xf4]\n
    unsigned int v84;  // [bp-0xf0]\n
    unsigned short v85;  // [bp-0xea]\n
    unsigned int *v86;  // [bp-0xe8]\n
    struct struct_0 **v87;  // [bp-0xe4]\n
    unsigned int v88;  // [bp-0xe0]\n
    unsigned short v89;  // [bp-0xda]\n
    unsigned int *v90;  // [bp-0xd8]\n
    struct struct_0 **v91;  // [bp-0xd4]\n
    char v92;  // [bp-0xd0]\n
    struct_3 *v93;  // [bp-0xc4]\n
    unsigned int v94;  // [bp-0xc0]\n
    unsigned int *v95;  // [bp-0xbc]\n
    struct struct_0 **v96;  // [bp-0xb8]\n
    char v97;  // [bp-0xb4]\n
    struct_3 *v98;  // [bp-0xa8]\n
    unsigned int v99;  // [bp-0xa4]\n
    unsigned int *v100;  // [bp-0xa0]\n
    struct struct_0 **v101;  // [bp-0x9c]\n
    char v102;  // [bp-0x98]\n
    char v103[4];  // [bp-0x8c]\n
    unsigned int v104;  // [bp-0x88]\n
    unsigned int *v105;  // [bp-0x84]\n
    struct struct_0 **v106;  // [bp-0x80]\n
    char v107;  // [bp-0x79]\n
    unsigned int v108;  // [bp-0x64]\n
    unsigned int v109;  // [bp-0x60]\n
    unsigned int *v110;  // [bp-0x5c]\n
    struct struct_0 **v111;  // [bp-0x58]\n
    char v112;  // [bp-0x51]\n
    unsigned int v113;  // [bp-0x3c]\n
    unsigned int v114;  // [bp-0x38]\n
    unsigned int *v115;  // [bp-0x30]\n
    struct struct_0 **v116;  // [bp-0x2c]\n
    unsigned int v117;  // [bp-0x28]\n
    char v118;  // [bp-0x21]\n
    unsigned int *v119;  // [bp-0x20]\n
    struct struct_0 **v120;  // [bp-0x1c]\n
    unsigned int v121;  // [bp-0x18]\n
    char v122;  // [bp-0x11]\n
    unsigned int *v123;  // [bp-0x10]\n
    struct struct_0 **v124;  // [bp-0xc]\n
    unsigned int v125;  // [bp-0x8]\n
    unsigned int v127;  // ebx\n
    unsigned int *v128;  // eax\n
    struct struct_0 **v129;  // eax\n
    unsigned int *v130;  // eax\n
    struct struct_0 **v131;  // eax\n
    unsigned int *v132;  // eax\n
    struct struct_0 **v133;  // eax\n
    struct struct_0 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    unsigned int *v136;  // eax\n
    struct struct_0 **v137;  // eax\n
    struct struct_0 **v138;  // eax\n
    unsigned int *v139;  // eax\n
    unsigned int *v140;  // eax\n
    struct struct_0 **v141;  // eax\n
    unsigned int *v142;  // eax\n
    struct struct_0 **v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_0 **v149;  // eax\n
    unsigned int *v150;  // eax\n
    struct struct_0 **v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_0 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_0 **v155;  // eax\n
    struct struct_0 **v156;  // eax\n
    unsigned int *v157;  // eax\n
    struct_3 *v158;  // ecx\n
    unsigned int *v159;  // eax\n
    struct struct_0 **v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v163;  // eax\n
    struct struct_0 **v164;  // eax\n
    struct struct_0 **v165;  // eax\n
    unsigned int *v166;  // eax\n
    unsigned int *v167;  // eax\n
    struct struct_0 **v168;  // eax\n
    unsigned int *v169;  // eax\n
    struct struct_0 **v170;  // eax\n
    unsigned int *v171;  // eax\n
    struct struct_0 **v172;  // eax\n
    unsigned int *v173;  // eax\n
    struct struct_0 **v174;  // eax\n
    struct struct_0 **v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct_3 *v177;  // ecx\n
    unsigned int *v178;  // eax\n
    struct struct_0 **v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_0 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    struct struct_0 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    unsigned int *v186;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_0 **v189;  // eax\n
    unsigned int *v190;  // eax, Other Possible Types: unsigned int\n
    unsigned int v191;  // ebx\n
\n
    v125 = v127;\n
    v19 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v27 = cgc__cookie;\n
    v26 = -1;\n
    if (cgc_sendline(1, \"===llamapunaise===\", 18) < 0)\n
        cgc__terminate();\n
    v91 = v126;\n
    v90 = a0;\n
    if (*(v90) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = *(&*(v91)->field_0);\n
    v128 = v90;\n
    *(v128) = *(v128) - 2;\n
    v129 = v91;\n
    *(v129) = &*(v129)->padding_1[1];\n
    if (v89 <= *(v90) && !(!v89))\n
        goto LABEL_40be8d;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40be8d:\n
    v88 = cgc_calloc(v89);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v88, *(v91), v89);\n
    if (cgc_sendline(1, &v19[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v130 = v90;\n
    *(v130) = *(v130) - v89;\n
    v131 = v91;\n
    *(v131) = &(&*(v131)->field_0)[v89];\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    v124 = v126;\n
    v123 = a0;\n
    if (*(v123) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(v124)->field_0;\n
    v132 = v123;\n
    *(v132) = *(v132) - 1;\n
    v133 = v124;\n
    *(v133) = &*(v133)->padding_1;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_40c0a7;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40c0a7:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v134 = v124;\n
    *(v134) = &(&*(v134)->field_0)[v122];\n
    v135 = v123;\n
    *(v135) = *(v135) - v122;\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v120 = v126;\n
    v119 = a0;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(v120)->field_0;\n
    v136 = v119;\n
    *(v136) = *(v136) - 1;\n
    v137 = v120;\n
    *(v137) = &*(v137)->padding_1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_40c2a0;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40c2a0:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v138 = v120;\n
    *(v138) = &(&*(v138)->field_0)[v118];\n
    v139 = v119;\n
    *(v139) = *(v139) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v79 = v126;\n
    v78 = a0;\n
    memset(&v76, 0, 12);\n
    if (*(v78) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v77 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v23 = [D] x86g_create_fpucw(fpround<4>);\n
    v22 = v23 | 0xc00;\n
    v25 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v76, 12, v25);\n
    v18 = &v76;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v140 = v78;\n
    *(v140) = *(v140) - 4;\n
    v141 = v79;\n
    *(v141) = &*(v141)->field_4;\n
    v39 = v126;\n
    v38 = a0;\n
    *(&v35[0]) = *(v39);\n
    memset(&v34, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v35[0])\n
    {\n
        v17 = 0;\n
        if (v35[1])\n
        {\n
            v17 = 0;\n
            if (v35[2])\n
            {\n
                v17 = 0;\n
                if (v35[3])\n
                {\n
                    v17 = 0;\n
                    if (v35[4] << 24)\n
                    {\n
                        v17 = 0;\n
                        if (v35[5] << 16)\n
                        {\n
                            v17 = 0;\n
                            if (v35[6] << 8)\n
                                v17 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v36 = v17 & 1;\n
    v37 = 0;\n
    cgc_uint2str(&v34, 21, v36);\n
    v16 = &v34;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v142 = v38;\n
    *(v142) = *(v142) - 8;\n
    v143 = v39;\n
    *(v143) = &(*(v143))[1].padding_1[2];\n
    v87 = v126;\n
    v86 = a0;\n
    if (*(v86) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v85 = *(&*(v87)->field_0);\n
    v144 = v86;\n
    *(v144) = *(v144) - 2;\n
    v145 = v87;\n
    *(v145) = &*(v145)->padding_1[1];\n
    if (v85 <= *(v86) && !(!v85))\n
        goto LABEL_40c875;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40c875:\n
    v84 = cgc_calloc(v85);\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v84, *(v87), v85);\n
    if (cgc_sendline(1, &v19[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v146 = v86;\n
    *(v146) = *(v146) - v85;\n
    v147 = v87;\n
    *(v147) = &(&*(v147)->field_0)[v85];\n
    cgc_checkheap();\n
    cgc_free(v84);\n
    v83 = v126;\n
    v82 = a0;\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v81 = *(&*(v83)->field_0);\n
    v148 = v82;\n
    *(v148) = *(v148) - 2;\n
    v149 = v83;\n
    *(v149) = &*(v149)->padding_1[1];\n
    if (v81 <= *(v82) && !(!v81))\n
        goto LABEL_40caaf;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40caaf:\n
    v80 = cgc_calloc(v81);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v80, *(v83), v81);\n
    if (cgc_sendline(1, &v19[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v150 = v82;\n
    *(v150) = *(v150) - v81;\n
    v151 = v83;\n
    *(v151) = &(&*(v151)->field_0)[v81];\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    v55 = v126;\n
    v54 = a0;\n
    memset(&v52, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v53 = *(&*(v55)->field_0);\n
    cgc_uint2str(&v52, 6, v53);\n
    v15 = &v52;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v152 = v54;\n
    *(v152) = *(v152) - 2;\n
    v153 = v55;\n
    *(v153) = &*(v153)->padding_1[1];\n
    v51 = v126;\n
    v50 = a0;\n
    if (*(v50) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = *(v51)->field_0;\n
    v154 = v50;\n
    *(v154) = *(v154) - 1;\n
    v155 = v51;\n
    *(v155) = &*(v155)->padding_1;\n
    if (v49 <= *(v50) && !(!v49))\n
        goto LABEL_40ce2d;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40ce2d:\n
    v48 = cgc_calloc(v49);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v48, *(v51), v49);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v156 = v51;\n
    *(v156) = &(&*(v156)->field_0)[v49];\n
    v157 = v50;\n
    *(v157) = *(v157) - v49;\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    v116 = v126;\n
    v115 = a0;\n
    memset(&v112, 0, 21);\n
    if (*(v115) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v158 = *(v116);\n
    v114 = v158->field_4;\n
    v113 = *(&v158->field_0);\n
    cgc_uint2str(&v112, 21, v113);\n
    v14 = &v112;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v159 = v115;\n
    *(v159) = *(v159) - 8;\n
    v160 = v116;\n
    *(v160) = &(*(v160))[1].padding_1[2];\n
    v75 = v126;\n
    v74 = a0;\n
    memset(&v72, 0, 12);\n
    if (*(v74) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v73 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-542, size=2, endness=Iend_LE)))));\n
    v20 = v21 | 0xc00;\n
    v24 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v72, 12, v24);\n
    v13 = &v72;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v161 = v74;\n
    *(v161) = *(v161) - 4;\n
    v162 = v75;\n
    *(v162) = &*(v162)->field_4;\n
    v47 = v126;\n
    v46 = a0;\n
    if (*(v46) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v45 = *(v47)->field_0;\n
    v163 = v46;\n
    *(v163) = *(v163) - 1;\n
    v164 = v47;\n
    *(v164) = &*(v164)->padding_1;\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_40d2fe;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40d2fe:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v165 = v47;\n
    *(v165) = &(&*(v165)->field_0)[v45];\n
    v166 = v46;\n
    *(v166) = *(v166) - v45;\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v106 = v126;\n
    v105 = a0;\n
    *(&v103[0]) = *(v106);\n
    memset(&v102, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v103[0] << 24)\n
    {\n
        v12 = 0;\n
        if (v103[1] << 16)\n
        {\n
            v12 = 0;\n
            if (v103[2] << 8)\n
                v12 = v103[3];\n
        }\n
    }\n
    v104 = v12 & 1;\n
    cgc_uint2str(&v102, 12, v104);\n
    v11 = &v102;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v167 = v105;\n
    *(v167) = *(v167) - 4;\n
    v168 = v106;\n
    *(v168) = &*(v168)->field_4;\n
    v67 = v126;\n
    v66 = a0;\n
    memset(&v64, 0, 4);\n
    if (*(v66) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v65 = *(v67)->field_0;\n
    cgc_uint2str(&v64, 4, v65);\n
    v10 = &v64;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v169 = v66;\n
    *(v169) = *(v169) - 1;\n
    v170 = v67;\n
    *(v170) = &*(v170)->padding_1;\n
    v63 = v126;\n
    v62 = a0;\n
    memset(&v60, 0, 4);\n
    if (*(v62) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = *(v63)->field_0;\n
    cgc_uint2str(&v60, 4, v61);\n
    v9 = &v60;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v171 = v62;\n
    *(v171) = *(v171) - 1;\n
    v172 = v63;\n
    *(v172) = &*(v172)->padding_1;\n
    v43 = v126;\n
    v42 = a0;\n
    if (*(v42) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = *(v43)->field_0;\n
    v173 = v42;\n
    *(v173) = *(v173) - 1;\n
    v174 = v43;\n
    *(v174) = &*(v174)->padding_1;\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_40d96d;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40d96d:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v175 = v43;\n
    *(v175) = &(&*(v175)->field_0)[v41];\n
    v176 = v42;\n
    *(v176) = *(v176) - v41;\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v111 = v126;\n
    v110 = a0;\n
    memset(&v107, 0, 21);\n
    if (*(v110) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v177 = *(v111);\n
    v109 = v177->field_4;\n
    v108 = *(&v177->field_0);\n
    cgc_uint2str(&v107, 21, v108);\n
    v8 = &v107;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v178 = v110;\n
    *(v178) = *(v178) - 8;\n
    v179 = v111;\n
    *(v179) = &(*(v179))[1].padding_1[2];\n
    v71 = v126;\n
    v70 = a0;\n
    memset(&v68, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v69 = *(&*(v71)->field_0);\n
    cgc_uint2str(&v68, 12, v69);\n
    v7 = &v68;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v68)) < 0)\n
        cgc__terminate();\n
    v180 = v70;\n
    *(v180) = *(v180) - 4;\n
    v181 = v71;\n
    *(v181) = &*(v181)->field_4;\n
    v101 = v126;\n
    v100 = a0;\n
    v98 = &*(v101);\n
    memset(&v97, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v98->field_0 << 24)\n
    {\n
        v6 = 0;\n
        if (v98->padding_1[0] << 16)\n
        {\n
            v6 = 0;\n
            if (v98->padding_1[1] << 8)\n
                v6 = v98->padding_1[2];\n
        }\n
    }\n
    v99 = v6 & 1;\n
    cgc_uint2str(&v97, 12, v99);\n
    v5 = &v97;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v97)) < 0)\n
        cgc__terminate();\n
    v182 = v100;\n
    *(v182) = *(v182) - 4;\n
    v183 = v101;\n
    *(v183) = &*(v183)->field_4;\n
    v59 = v126;\n
    v58 = a0;\n
    memset(&v56, 0, 4);\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v57 = *(v59)->field_0;\n
    cgc_uint2str(&v56, 4, v57);\n
    v4 = &v56;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v184 = v58;\n
    *(v184) = *(v184) - 1;\n
    v185 = v59;\n
    *(v185) = &*(v185)->padding_1;\n
    v96 = v126;\n
    v95 = a0;\n
    v93 = &*(v96);\n
    memset(&v92, 0, 12);\n
    if (*(v95) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v93->field_0 << 24)\n
    {\n
        v3 = 0;\n
        if (v93->padding_1[0] << 16)\n
        {\n
            v3 = 0;\n
            if (v93->padding_1[1] << 8)\n
                v3 = v93->padding_1[2];\n
        }\n
    }\n
    v94 = v3 & 1;\n
    cgc_uint2str(&v92, 12, v94);\n
    v2 = &v92;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v186 = v95;\n
    *(v186) = *(v186) - 4;\n
    v187 = v96;\n
    *(v187) = &*(v187)->field_4;\n
    v33 = v126;\n
    v32 = a0;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v30[0] << 8)\n
        v1 = v30[1];\n
    v31 = v1 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v0 = &v29;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v188 = v32;\n
    *(v188) = *(v188) - 2;\n
    v189 = v33;\n
    *(v189) = &*(v189)->padding_1[1];\n
    v27 ^= v19->field_260;\n
    if (v27)\n
        cgc___stack_cookie_fail();\n
    v190 = a0;\n
    if (*(v190) > 0 && v26 >= 0 && v26 < 0)\n
        v190 = *((&v28 + 0x4 * v26))(v126);\n
    v191 = v125;\n
    return v190;\n
}\n
", "4252615:sub_40e3c7": null, "4252624:cgc_process_llamafucate": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamafucate(struct struct_0 **v180, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x39c]\n
    struct_1 *v1;  // [bp-0x398]\n
    unsigned int v2;  // [bp-0x394]\n
    unsigned int v3;  // [bp-0x390]\n
    unsigned int v4;  // [bp-0x38c]\n
    struct_1 *v5;  // [bp-0x388]\n
    struct_1 *v6;  // [bp-0x384]\n
    struct_1 *v7;  // [bp-0x380]\n
    char v8;  // [bp-0x379]\n
    struct_1 *v9;  // [bp-0x378]\n
    char v10;  // [bp-0x371]\n
    struct_1 *v11;  // [bp-0x370]\n
    char v12;  // [bp-0x369]\n
    struct_1 *v13;  // [bp-0x368]\n
    struct_1 *v14;  // [bp-0x364]\n
    struct_1 *v15;  // [bp-0x360]\n
    struct_1 *v16;  // [bp-0x35c]\n
    char v17;  // [bp-0x355]\n
    struct_1 *v18;  // [bp-0x354]\n
    struct_1 *v19;  // [bp-0x350]\n
    struct_1 *v20;  // [bp-0x34c]\n
    char v21;  // [bp-0x345]\n
    struct_1 *v22;  // [bp-0x344]\n
    struct_1 *v23;  // [bp-0x340]\n
    struct_1 *v24;  // [bp-0x33c]\n
    char v25;  // [bp-0x335]\n
    struct_1 *v26;  // [bp-0x334]\n
    char v27;  // [bp-0x32d]\n
    struct_1 *v28;  // [bp-0x32c]\n
    struct_1 *v29;  // [bp-0x328]\n
    char v30;  // [bp-0x321]\n
    struct_1 *v31;  // [bp-0x320]\n
    struct_3 *v32;  // [bp-0x31c]\n
    unsigned short v33;  // [bp-0x318]\n
    unsigned short v34;  // [bp-0x316]\n
    unsigned short v35;  // [bp-0x314]\n
    unsigned short v36;  // [bp-0x312]\n
    unsigned short v37;  // [bp-0x310]\n
    unsigned short v38;  // [bp-0x30e]\n
    unsigned short v39;  // [bp-0x30c]\n
    unsigned short v40;  // [bp-0x30a]\n
    unsigned short v41;  // [bp-0x308]\n
    unsigned short v42;  // [bp-0x306]\n
    unsigned long v43;  // [bp-0x304]\n
    unsigned long v44;  // [bp-0x2fc]\n
    unsigned long v45;  // [bp-0x2f4]\n
    unsigned long v46;  // [bp-0x2ec]\n
    unsigned long v47;  // [bp-0x2e4]\n
    struct struct_2 **v48;  // [bp-0x2d8]\n
    unsigned int v49;  // [bp-0x2d4]\n
    char v50;  // [bp-0x2d0]\n
    char v51;  // [bp-0x2ce]\n
    char v52[2];  // [bp-0x2c8]\n
    unsigned short v53;  // [bp-0x2c2]\n
    unsigned int *v54;  // [bp-0x2c0]\n
    struct struct_0 **v55;  // [bp-0x2bc]\n
    char v56;  // [bp-0x2b6]\n
    char v57[2];  // [bp-0x2b0]\n
    unsigned short v58;  // [bp-0x2aa]\n
    unsigned int *v59;  // [bp-0x2a8]\n
    struct struct_0 **v60;  // [bp-0x2a4]\n
    char v61;  // [bp-0x29e]\n
    char v62[2];  // [bp-0x298]\n
    unsigned short v63;  // [bp-0x292]\n
    unsigned int *v64;  // [bp-0x290]\n
    struct struct_0 **v65;  // [bp-0x28c]\n
    char v66;  // [bp-0x286]\n
    char v67[2];  // [bp-0x280]\n
    unsigned short v68;  // [bp-0x27a]\n
    unsigned int *v69;  // [bp-0x278]\n
    struct struct_0 **v70;  // [bp-0x274]\n
    char v71;  // [bp-0x26e]\n
    char v72[2];  // [bp-0x268]\n
    unsigned short v73;  // [bp-0x262]\n
    unsigned int *v74;  // [bp-0x260]\n
    struct struct_0 **v75;  // [bp-0x25c]\n
    char v76;  // [bp-0x256]\n
    char v77[2];  // [bp-0x250]\n
    unsigned short v78;  // [bp-0x24a]\n
    unsigned int *v79;  // [bp-0x248]\n
    struct struct_0 **v80;  // [bp-0x244]\n
    char v81;  // [bp-0x23d]\n
    char v82[8];  // [bp-0x228]\n
    unsigned int v83;  // [bp-0x224]\n
    void* v84;  // [bp-0x220]\n
    unsigned int *v85;  // [bp-0x21c]\n
    struct struct_0 **v86;  // [bp-0x218]\n
    char *v87;  // [bp-0x214]\n
    unsigned int v88;  // [bp-0x210]\n
    unsigned int *v89;  // [bp-0x20c]\n
    struct struct_0 **v90;  // [bp-0x208]\n
    char v91;  // [bp-0x204]\n
    unsigned short v92;  // [bp-0x1fe]\n
    unsigned int *v93;  // [bp-0x1fc]\n
    struct struct_0 **v94;  // [bp-0x1f8]\n
    char v95;  // [bp-0x1f1]\n
    char v96;  // [bp-0x1ed]\n
    unsigned int *v97;  // [bp-0x1ec]\n
    struct struct_0 **v98;  // [bp-0x1e8]\n
    char v99;  // [bp-0x1e1]\n
    char v100;  // [bp-0x1dd]\n
    unsigned int *v101;  // [bp-0x1dc]\n
    struct struct_0 **v102;  // [bp-0x1d8]\n
    char v103;  // [bp-0x1d1]\n
    char v104;  // [bp-0x1cd]\n
    unsigned int *v105;  // [bp-0x1cc]\n
    struct struct_0 **v106;  // [bp-0x1c8]\n
    char v107;  // [bp-0x1c1]\n
    unsigned long v108;  // [bp-0x1ac]\n
    unsigned int *v109;  // [bp-0x1a4]\n
    struct struct_0 **v110;  // [bp-0x1a0]\n
    char v111;  // [bp-0x199]\n
    unsigned long v112;  // [bp-0x184]\n
    unsigned int *v113;  // [bp-0x178]\n
    struct struct_0 **v114;  // [bp-0x174]\n
    char v115;  // [bp-0x170]\n
    unsigned int v116;  // [bp-0x164]\n
    unsigned int *v117;  // [bp-0x160]\n
    struct struct_0 **v118;  // [bp-0x15c]\n
    char v119;  // [bp-0x158]\n
    unsigned int v120;  // [bp-0x14c]\n
    unsigned int *v121;  // [bp-0x148]\n
    struct struct_0 **v122;  // [bp-0x144]\n
    char v123;  // [bp-0x140]\n
    unsigned int v124;  // [bp-0x134]\n
    unsigned int *v125;  // [bp-0x130]\n
    struct struct_0 **v126;  // [bp-0x12c]\n
    char v127;  // [bp-0x128]\n
    unsigned int v128;  // [bp-0x11c]\n
    unsigned int *v129;  // [bp-0x118]\n
    struct struct_0 **v130;  // [bp-0x114]\n
    unsigned int v131;  // [bp-0x110]\n
    unsigned short v132;  // [bp-0x10a]\n
    unsigned int *v133;  // [bp-0x108]\n
    struct struct_0 **v134;  // [bp-0x104]\n
    unsigned int v135;  // [bp-0x100]\n
    unsigned short v136;  // [bp-0xfa]\n
    unsigned int *v137;  // [bp-0xf8]\n
    struct struct_0 **v138;  // [bp-0xf4]\n
    unsigned int v139;  // [bp-0xf0]\n
    unsigned short v140;  // [bp-0xea]\n
    unsigned int *v141;  // [bp-0xe8]\n
    struct struct_0 **v142;  // [bp-0xe4]\n
    unsigned int v143;  // [bp-0xe0]\n
    unsigned short v144;  // [bp-0xda]\n
    unsigned int *v145;  // [bp-0xd8]\n
    struct struct_0 **v146;  // [bp-0xd4]\n
    char v147;  // [bp-0xd0]\n
    char v148[8];  // [bp-0xc4]\n
    unsigned int v149;  // [bp-0xc0]\n
    unsigned int *v150;  // [bp-0xbc]\n
    struct struct_0 **v151;  // [bp-0xb8]\n
    char *v152;  // [bp-0xb4]\n
    unsigned int v153;  // [bp-0xb0]\n
    unsigned int *v154;  // [bp-0xac]\n
    struct struct_0 **v155;  // [bp-0xa8]\n
    char *v156;  // [bp-0xa4]\n
    unsigned int v157;  // [bp-0xa0]\n
    unsigned int *v158;  // [bp-0x9c]\n
    struct struct_0 **v159;  // [bp-0x98]\n
    char v160;  // [bp-0x91]\n
    unsigned int v161;  // [bp-0x7c]\n
    unsigned int v162;  // [bp-0x78]\n
    unsigned int *v163;  // [bp-0x74]\n
    struct struct_0 **v164;  // [bp-0x70]\n
    char v165;  // [bp-0x69]\n
    unsigned int v166;  // [bp-0x54]\n
    unsigned int v167;  // [bp-0x50]\n
    unsigned int *v168;  // [bp-0x4c]\n
    struct struct_0 **v169;  // [bp-0x48]\n
    char v170;  // [bp-0x41]\n
    unsigned int v171;  // [bp-0x2c]\n
    unsigned int v172;  // [bp-0x28]\n
    unsigned int *v173;  // [bp-0x20]\n
    struct struct_0 **v174;  // [bp-0x1c]\n
    unsigned int v175;  // [bp-0x18]\n
    char v176;  // [bp-0x11]\n
    unsigned int *v177;  // [bp-0x10]\n
    struct struct_0 **v178;  // [bp-0xc]\n
    unsigned int v179;  // [bp-0x8]\n
    unsigned int v181;  // ebx\n
    unsigned int *v182;  // eax\n
    struct struct_0 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    unsigned int v186[2];  // ecx\n
    unsigned int *v187;  // eax\n
    struct struct_0 **v188;  // eax\n
    unsigned int *v189;  // eax\n
    struct struct_0 **v190;  // eax\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    unsigned int *v195;  // eax\n
    struct struct_0 **v196;  // eax\n
    unsigned int *v197;  // eax\n
    struct struct_0 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_0 **v200;  // eax\n
    unsigned int v201[2];  // ecx\n
    unsigned int *v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int v204[2];  // ecx\n
    unsigned int *v205;  // eax\n
    struct struct_0 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    unsigned int *v215;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    struct struct_0 **v232;  // eax\n
    unsigned int *v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v246;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    struct struct_0 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax, Other Possible Types: unsigned int\n
    unsigned int v260;  // ebx\n
\n
    v179 = v181;\n
    v32 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v49 = cgc__cookie;\n
    v48 = -1;\n
    if (cgc_sendline(1, \"===llamafucate===\", 17) < 0)\n
        cgc__terminate();\n
    v94 = v180;\n
    v93 = a0;\n
    memset(&v91, 0, 6);\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 6, v92);\n
    v31 = &v91;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v182 = v93;\n
    *(v182) = *(v182) - 2;\n
    v183 = v94;\n
    *(v183) = &*(v183)->padding_1[1];\n
    v151 = v180;\n
    v150 = a0;\n
    *(&v148[0]) = *(v151);\n
    memset(&v147, 0, 12);\n
    if (*(v150) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (v148[0] << 24)\n
    {\n
        v30 = 0;\n
        if (v148[1] << 16)\n
        {\n
            v30 = 0;\n
            if (v148[2] << 8)\n
                v30 = v148[3];\n
        }\n
    }\n
    v149 = v30 & 1;\n
    cgc_uint2str(&v147, 12, v149);\n
    v29 = &v147;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v184 = v150;\n
    *(v184) = *(v184) - 4;\n
    v185 = v151;\n
    *(v185) = &*(v185)->field_4;\n
    v174 = v180;\n
    v173 = a0;\n
    memset(&v170, 0, 21);\n
    if (*(v173) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v186 = *(v174);\n
    v172 = v186[1];\n
    v171 = v186[0];\n
    cgc_uint2str(&v170, 21, v171);\n
    v28 = &v170;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v187 = v173;\n
    *(v187) = *(v187) - 8;\n
    v188 = v174;\n
    *(v188) = &(*(v188))[1].padding_1[2];\n
    v142 = v180;\n
    v141 = a0;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = *(&*(v142)->field_0);\n
    v189 = v141;\n
    *(v189) = *(v189) - 2;\n
    v190 = v142;\n
    *(v190) = &*(v190)->padding_1[1];\n
    if (v140 <= *(v141) && !(!v140))\n
        goto LABEL_40e989;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40e989:\n
    v139 = cgc_calloc(v140);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v139, *(v142), v140);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v191 = v141;\n
    *(v191) = *(v191) - v140;\n
    v192 = v142;\n
    *(v192) = &(&*(v192)->field_0)[v140];\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    v80 = v180;\n
    v79 = a0;\n
    *(&v77) = *(v80);\n
    memset(&v76, 0, 6);\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v77[0] << 8)\n
        v27 = v77[1];\n
    v78 = v27 & 1;\n
    cgc_uint2str(&v76, 6, v78);\n
    v26 = &v76;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v193 = v79;\n
    *(v193) = *(v193) - 2;\n
    v194 = v80;\n
    *(v194) = &*(v194)->padding_1[1];\n
    v75 = v180;\n
    v74 = a0;\n
    *(&v72) = *(v75);\n
    memset(&v71, 0, 6);\n
    if (*(v74) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v72[0] << 8)\n
        v25 = v72[1];\n
    v73 = v25 & 1;\n
    cgc_uint2str(&v71, 6, v73);\n
    v24 = &v71;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v195 = v74;\n
    *(v195) = *(v195) - 2;\n
    v196 = v75;\n
    *(v196) = &*(v196)->padding_1[1];\n
    v138 = v180;\n
    v137 = a0;\n
    if (*(v137) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v136 = *(&*(v138)->field_0);\n
    v197 = v137;\n
    *(v197) = *(v197) - 2;\n
    v198 = v138;\n
    *(v198) = &*(v198)->padding_1[1];\n
    if (v136 <= *(v137) && !(!v136))\n
        goto LABEL_40eed1;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_40eed1:\n
    v135 = cgc_calloc(v136);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v135, *(v138), v136);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v199 = v137;\n
    *(v199) = *(v199) - v136;\n
    v200 = v138;\n
    *(v200) = &(&*(v200)->field_0)[v136];\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    v169 = v180;\n
    v168 = a0;\n
    memset(&v165, 0, 21);\n
    if (*(v168) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v201 = *(v169);\n
    v167 = v201[1];\n
    v166 = v201[0];\n
    cgc_uint2str(&v165, 21, v166);\n
    v23 = &v165;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v165)) < 0)\n
        cgc__terminate();\n
    v202 = v168;\n
    *(v202) = *(v202) - 8;\n
    v203 = v169;\n
    *(v203) = &(*(v203))[1].padding_1[2];\n
    v164 = v180;\n
    v163 = a0;\n
    memset(&v160, 0, 21);\n
    if (*(v163) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = *(v164);\n
    v162 = v204[1];\n
    v161 = v204[0];\n
    cgc_uint2str(&v160, 21, v161);\n
    v22 = &v160;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v160)) < 0)\n
        cgc__terminate();\n
    v205 = v163;\n
    *(v205) = *(v205) - 8;\n
    v206 = v164;\n
    *(v206) = &(*(v206))[1].padding_1[2];\n
    v70 = v180;\n
    v69 = a0;\n
    *(&v67) = *(v70);\n
    memset(&v66, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = 0;\n
    if (v67[0] << 8)\n
        v21 = v67[1];\n
    v68 = v21 & 1;\n
    cgc_uint2str(&v66, 6, v68);\n
    v20 = &v66;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v207 = v69;\n
    *(v207) = *(v207) - 2;\n
    v208 = v70;\n
    *(v208) = &*(v208)->padding_1[1];\n
    v106 = v180;\n
    v105 = a0;\n
    memset(&v103, 0, 4);\n
    if (*(v105) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(v106)->field_0;\n
    cgc_uint2str(&v103, 4, v104);\n
    v19 = &v103;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v209 = v105;\n
    *(v209) = *(v209) - 1;\n
    v210 = v106;\n
    *(v210) = &*(v210)->padding_1;\n
    v130 = v180;\n
    v129 = a0;\n
    memset(&v127, 0, 12);\n
    if (*(v129) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v128 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(fpround<4>);\n
    v41 = v42 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v127, 12, v47);\n
    v18 = &v127;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v211 = v129;\n
    *(v211) = *(v211) - 4;\n
    v212 = v130;\n
    *(v212) = &*(v212)->field_4;\n
    v65 = v180;\n
    v64 = a0;\n
    *(&v62) = *(v65);\n
    memset(&v61, 0, 6);\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v62[0] << 8)\n
        v17 = v62[1];\n
    v63 = v17 & 1;\n
    cgc_uint2str(&v61, 6, v63);\n
    v16 = &v61;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v213 = v64;\n
    *(v213) = *(v213) - 2;\n
    v214 = v65;\n
    *(v214) = &*(v214)->padding_1[1];\n
    v102 = v180;\n
    v101 = a0;\n
    memset(&v99, 0, 4);\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(v102)->field_0;\n
    cgc_uint2str(&v99, 4, v100);\n
    v15 = &v99;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v215 = v101;\n
    *(v215) = *(v215) - 1;\n
    v216 = v102;\n
    *(v216) = &*(v216)->padding_1;\n
    v126 = v180;\n
    v125 = a0;\n
    memset(&v123, 0, 12);\n
    if (*(v125) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v124 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-774, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v123, 12, v46);\n
    v14 = &v123;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v217 = v125;\n
    *(v217) = *(v217) - 4;\n
    v218 = v126;\n
    *(v218) = &*(v218)->field_4;\n
    v98 = v180;\n
    v97 = a0;\n
    memset(&v95, 0, 4);\n
    if (*(v97) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(v98)->field_0;\n
    cgc_uint2str(&v95, 4, v96);\n
    v13 = &v95;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v219 = v97;\n
    *(v219) = *(v219) - 1;\n
    v220 = v98;\n
    *(v220) = &*(v220)->padding_1;\n
    v60 = v180;\n
    v59 = a0;\n
    *(&v57) = *(v60);\n
    memset(&v56, 0, 6);\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v57[0] << 8)\n
        v12 = v57[1];\n
    v58 = v12 & 1;\n
    cgc_uint2str(&v56, 6, v58);\n
    v11 = &v56;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v221 = v59;\n
    *(v221) = *(v221) - 2;\n
    v222 = v60;\n
    *(v222) = &*(v222)->padding_1[1];\n
    v55 = v180;\n
    v54 = a0;\n
    *(&v52) = *(v55);\n
    memset(&v51, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v52[0] << 8)\n
        v10 = v52[1];\n
    v53 = v10 & 1;\n
    cgc_uint2str(&v51, 6, v53);\n
    v9 = &v51;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v223 = v54;\n
    *(v223) = *(v223) - 2;\n
    v224 = v55;\n
    *(v224) = &*(v224)->padding_1[1];\n
    v86 = v180;\n
    v85 = a0;\n
    *(&v82[0]) = *(v86);\n
    memset(&v81, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v82[0])\n
    {\n
        v8 = 0;\n
        if (v82[1])\n
        {\n
            v8 = 0;\n
            if (v82[2])\n
            {\n
                v8 = 0;\n
                if (v82[3])\n
                {\n
                    v8 = 0;\n
                    if (v82[4] << 24)\n
                    {\n
                        v8 = 0;\n
                        if (v82[5] << 16)\n
                        {\n
                            v8 = 0;\n
                            if (v82[6] << 8)\n
                                v8 = v82[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v83 = v8 & 1;\n
    v84 = 0;\n
    cgc_uint2str(&v81, 21, v83);\n
    v7 = &v81;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v81)) < 0)\n
        cgc__terminate();\n
    v225 = v85;\n
    *(v225) = *(v225) - 8;\n
    v226 = v86;\n
    *(v226) = &(*(v226))[1].padding_1[2];\n
    v114 = v180;\n
    v113 = a0;\n
    memset(&v111, 0, 21);\n
    if (*(v113) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v112 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-778, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v111, 21, v45);\n
    v6 = &v111;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v227 = v113;\n
    *(v227) = *(v227) - 8;\n
    v228 = v114;\n
    *(v228) = &(*(v228))[1].padding_1[2];\n
    v122 = v180;\n
    v121 = a0;\n
    memset(&v119, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-782, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v119, 12, v44);\n
    v5 = &v119;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v229 = v121;\n
    *(v229) = *(v229) - 4;\n
    v230 = v122;\n
    *(v230) = &*(v230)->field_4;\n
    v159 = v180;\n
    v158 = a0;\n
    if (*(v158) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v158) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v158);\n
    v157 = v4;\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = cgc_calloc(134);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v156, &v32[18].padding_0[182]);\n
    cgc_strncpy(v156 + 5, *(v159), v157);\n
    v232 = v159;\n
    *(v232) = &(&*(v232)->field_4)[cgc_strlen(v156)];\n
    v234 = v158;\n
    *(v234) = *(v234) - (cgc_strlen(v156) + -4);\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v146 = v180;\n
    v145 = a0;\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(&*(v146)->field_0);\n
    v235 = v145;\n
    *(v235) = *(v235) - 2;\n
    v236 = v146;\n
    *(v236) = &*(v236)->padding_1[1];\n
    if (v144 <= *(v145) && !(!v144))\n
        goto LABEL_4107e2;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4107e2:\n
    v143 = cgc_calloc(v144);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v143, *(v146), v144);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v237 = v145;\n
    *(v237) = *(v237) - v144;\n
    v238 = v146;\n
    *(v238) = &(&*(v238)->field_0)[v144];\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    v134 = v180;\n
    v133 = a0;\n
    if (*(v133) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(&*(v134)->field_0);\n
    v239 = v133;\n
    *(v239) = *(v239) - 2;\n
    v240 = v134;\n
    *(v240) = &*(v240)->padding_1[1];\n
    if (v132 <= *(v133) && !(!v132))\n
        goto LABEL_410a1c;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_410a1c:\n
    v131 = cgc_calloc(v132);\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v131, *(v134), v132);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v241 = v133;\n
    *(v241) = *(v241) - v132;\n
    v242 = v134;\n
    *(v242) = &(&*(v242)->field_0)[v132];\n
    cgc_checkheap();\n
    cgc_free(v131);\n
    v90 = v180;\n
    v89 = a0;\n
    if (*(v89) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v89) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v89);\n
    v88 = v3;\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = cgc_calloc(134);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v87, &v32[18].padding_0[182]);\n
    cgc_strncpy(v87 + 5, *(v90), v88);\n
    v244 = v90;\n
    *(v244) = &(&*(v244)->field_4)[cgc_strlen(v87)];\n
    v246 = v89;\n
    *(v246) = *(v246) - (cgc_strlen(v87) + -4);\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v155 = v180;\n
    v154 = a0;\n
    if (*(v154) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v154) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v154);\n
    v153 = v2;\n
    if (!v153)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v152 = cgc_calloc(134);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v152, &v32[18].padding_0[182]);\n
    cgc_strncpy(v152 + 5, *(v155), v153);\n
    v248 = v155;\n
    *(v248) = &(&*(v248)->field_4)[cgc_strlen(v152)];\n
    v250 = v154;\n
    *(v250) = *(v250) - (cgc_strlen(v152) + -4);\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v118 = v180;\n
    v117 = a0;\n
    memset(&v115, 0, 12);\n
    if (*(v117) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(&*(v118)->field_0);\n
    cgc_uint2str(&v115, 12, v116);\n
    v1 = &v115;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v251 = v117;\n
    *(v251) = *(v251) - 4;\n
    v252 = v118;\n
    *(v252) = &*(v252)->field_4;\n
    v178 = v180;\n
    v177 = a0;\n
    if (*(v177) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = *(v178)->field_0;\n
    v253 = v177;\n
    *(v253) = *(v253) - 1;\n
    v254 = v178;\n
    *(v254) = &*(v254)->padding_1;\n
    if (v176 <= *(v177) && !(!v176))\n
        goto LABEL_41127b;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41127b:\n
    v175 = cgc_calloc(v176);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v175, *(v178), v176);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v255 = v178;\n
    *(v255) = &(&*(v255)->field_0)[v176];\n
    v256 = v177;\n
    *(v256) = *(v256) - v176;\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    v110 = v180;\n
    v109 = a0;\n
    memset(&v107, 0, 21);\n
    if (*(v109) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v108 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-786, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v107, 21, v43);\n
    v0 = &v107;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v257 = v109;\n
    *(v257) = *(v257) - 8;\n
    v258 = v110;\n
    *(v258) = &(*(v258))[1].padding_1[2];\n
    v49 ^= v32->field_260;\n
    if (v49)\n
        cgc___stack_cookie_fail();\n
    v259 = a0;\n
    if (*(v259) > 0 && v48 >= 0 && v48 < 0)\n
        v259 = *((&v50 + 0x4 * v48))(v180);\n
    v260 = v179;\n
    return v259;\n
}\n
", "4265331:sub_411573": null, "4265344:cgc_process_llamacyanohydrin": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamacyanohydrin(struct struct_0 **v79, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x17c]\n
    struct_1 *v1;  // [bp-0x178]\n
    struct_1 *v2;  // [bp-0x174]\n
    char v3;  // [bp-0x16d]\n
    struct_1 *v4;  // [bp-0x16c]\n
    struct_1 *v5;  // [bp-0x168]\n
    char v6;  // [bp-0x161]\n
    unsigned int v7;  // [bp-0x160]\n
    struct_1 *v8;  // [bp-0x15c]\n
    char v9;  // [bp-0x155]\n
    struct_1 *v10;  // [bp-0x154]\n
    char v11;  // [bp-0x14d]\n
    unsigned int v12;  // [bp-0x14c]\n
    struct_1 *v13;  // [bp-0x148]\n
    struct_1 *v14;  // [bp-0x144]\n
    struct_3 *v15;  // [bp-0x140]\n
    unsigned short v16;  // [bp-0x13c]\n
    unsigned short v17;  // [bp-0x13a]\n
    unsigned short v18;  // [bp-0x138]\n
    unsigned short v19;  // [bp-0x136]\n
    unsigned long v20;  // [bp-0x134]\n
    unsigned long v21;  // [bp-0x12c]\n
    struct struct_2 **v22;  // [bp-0x124]\n
    unsigned int v23;  // [bp-0x120]\n
    char v24;  // [bp-0x11c]\n
    char v25;  // [bp-0x11a]\n
    char v26[2];  // [bp-0x114]\n
    unsigned short v27;  // [bp-0x10e]\n
    unsigned int *v28;  // [bp-0x10c]\n
    struct struct_0 **v29;  // [bp-0x108]\n
    char v30;  // [bp-0x102]\n
    char v31[2];  // [bp-0xfc]\n
    unsigned short v32;  // [bp-0xf6]\n
    unsigned int *v33;  // [bp-0xf4]\n
    struct struct_0 **v34;  // [bp-0xf0]\n
    unsigned int v35;  // [bp-0xec]\n
    char v36;  // [bp-0xe5]\n
    unsigned int *v37;  // [bp-0xe4]\n
    struct struct_0 **v38;  // [bp-0xe0]\n
    char v39;  // [bp-0xdc]\n
    unsigned short v40;  // [bp-0xd6]\n
    unsigned int *v41;  // [bp-0xd4]\n
    struct struct_0 **v42;  // [bp-0xd0]\n
    char v43;  // [bp-0xc9]\n
    char v44;  // [bp-0xc5]\n
    unsigned int *v45;  // [bp-0xc4]\n
    struct struct_0 **v46;  // [bp-0xc0]\n
    char v47;  // [bp-0xbc]\n
    unsigned int v48;  // [bp-0xb0]\n
    unsigned int *v49;  // [bp-0xac]\n
    struct struct_0 **v50;  // [bp-0xa8]\n
    char v51;  // [bp-0xa4]\n
    unsigned int v52;  // [bp-0x98]\n
    unsigned int *v53;  // [bp-0x94]\n
    struct struct_0 **v54;  // [bp-0x90]\n
    char v55;  // [bp-0x8c]\n
    char v56[4];  // [bp-0x80]\n
    unsigned int v57;  // [bp-0x7c]\n
    unsigned int *v58;  // [bp-0x78]\n
    struct struct_0 **v59;  // [bp-0x74]\n
    char v60;  // [bp-0x70]\n
    char v61[4];  // [bp-0x64]\n
    unsigned int v62;  // [bp-0x60]\n
    unsigned int *v63;  // [bp-0x5c]\n
    struct struct_0 **v64;  // [bp-0x58]\n
    char *v65;  // [bp-0x54]\n
    unsigned int v66;  // [bp-0x50]\n
    unsigned int *v67;  // [bp-0x4c]\n
    struct struct_0 **v68;  // [bp-0x48]\n
    char *v69;  // [bp-0x44]\n
    unsigned int v70;  // [bp-0x40]\n
    unsigned int *v71;  // [bp-0x3c]\n
    struct struct_0 **v72;  // [bp-0x38]\n
    char v73;  // [bp-0x31]\n
    unsigned int v74;  // [bp-0x1c]\n
    unsigned int v75;  // [bp-0x18]\n
    unsigned int *v76;  // [bp-0x10]\n
    struct struct_0 **v77;  // [bp-0xc]\n
    unsigned int v78;  // [bp-0x8]\n
    unsigned int v80;  // ebx\n
    unsigned int *v81;  // eax\n
    struct struct_0 **v82;  // eax\n
    unsigned int v83[2];  // ecx\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    struct struct_0 **v87;  // eax\n
    unsigned int *v89;  // eax\n
    unsigned int *v90;  // eax\n
    struct struct_0 **v91;  // eax\n
    unsigned int *v92;  // eax\n
    struct struct_0 **v93;  // eax\n
    struct struct_0 **v95;  // eax\n
    unsigned int *v97;  // eax\n
    unsigned int *v98;  // eax\n
    struct struct_0 **v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_0 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_0 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_0 **v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_0 **v107;  // eax\n
    struct struct_0 **v108;  // eax\n
    unsigned int *v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax, Other Possible Types: unsigned int\n
    unsigned int v113;  // ebx\n
\n
    v78 = v80;\n
    v15 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamacyanohydrin===\", 22) < 0)\n
        cgc__terminate();\n
    v42 = v79;\n
    v41 = a0;\n
    memset(&v39, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = *(&*(v42)->field_0);\n
    cgc_uint2str(&v39, 6, v40);\n
    v14 = &v39;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v81 = v41;\n
    *(v81) = *(v81) - 2;\n
    v82 = v42;\n
    *(v82) = &*(v82)->padding_1[1];\n
    v77 = v79;\n
    v76 = a0;\n
    memset(&v73, 0, 21);\n
    if (*(v76) < 8)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(v77);\n
    v75 = v83[1];\n
    v74 = v83[0];\n
    cgc_uint2str(&v73, 21, v74);\n
    v13 = &v73;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v84 = v76;\n
    *(v84) = *(v84) - 8;\n
    v85 = v77;\n
    *(v85) = *(v85) + 1;\n
    v72 = v79;\n
    v71 = a0;\n
    if (*(v71) <= 0)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v71) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v71);\n
    v70 = v12;\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v69 = cgc_calloc(134);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v69, &v15[18].padding_0[182]);\n
    cgc_strncpy(v69 + 5, *(v72), v70);\n
    v87 = v72;\n
    *(v87) = -4 + cgc_strlen(v69) + *(v87);\n
    v89 = v71;\n
    *(v89) = *(v89) - (cgc_strlen(v69) + -4);\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    if (cgc_sendline(1, &v15[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v64 = v79;\n
    v63 = a0;\n
    *(&v61[0]) = *(v64);\n
    memset(&v60, 0, 12);\n
    if (*(v63) < 4)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v61[0] << 24)\n
    {\n
        v11 = 0;\n
        if (v61[1] << 16)\n
        {\n
            v11 = 0;\n
            if (v61[2] << 8)\n
                v11 = v61[3];\n
        }\n
    }\n
    v62 = v11 & 1;\n
    cgc_uint2str(&v60, 12, v62);\n
    v10 = &v60;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v90 = v63;\n
    *(v90) = *(v90) - 4;\n
    v91 = v64;\n
    *(v91) = &*(v91)->field_4;\n
    v34 = v79;\n
    v33 = a0;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v31[0] << 8)\n
        v9 = v31[1];\n
    v32 = v9 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v8 = &v30;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v92 = v33;\n
    *(v92) = *(v92) - 2;\n
    v93 = v34;\n
    *(v93) = &*(v93)->padding_1[1];\n
    v68 = v79;\n
    v67 = a0;\n
    if (*(v67) <= 0)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v67) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v67);\n
    v66 = v7;\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v65 = cgc_calloc(134);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v65, &v15[18].padding_0[182]);\n
    cgc_strncpy(v65 + 5, *(v68), v66);\n
    v95 = v68;\n
    *(v95) = -4 + cgc_strlen(v65) + *(v95);\n
    v97 = v67;\n
    *(v97) = *(v97) - (cgc_strlen(v65) + -4);\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    if (cgc_sendline(1, &v15[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v29 = v79;\n
    v28 = a0;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v26[0] << 8)\n
        v6 = v26[1];\n
    v27 = v6 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v5 = &v25;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v98 = v28;\n
    *(v98) = *(v98) - 2;\n
    v99 = v29;\n
    *(v99) = &*(v99)->padding_1[1];\n
    v54 = v79;\n
    v53 = a0;\n
    memset(&v51, 0, 12);\n
    if (*(v53) < 4)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v52 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v21 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v51, 12, v21);\n
    v4 = &v51;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v100 = v53;\n
    *(v100) = *(v100) - 4;\n
    v101 = v54;\n
    *(v101) = &*(v101)->field_4;\n
    v59 = v79;\n
    v58 = a0;\n
    *(&v56[0]) = *(v59);\n
    memset(&v55, 0, 12);\n
    if (*(v58) < 4)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v56[0] << 24)\n
    {\n
        v3 = 0;\n
        if (v56[1] << 16)\n
        {\n
            v3 = 0;\n
            if (v56[2] << 8)\n
                v3 = v56[3];\n
        }\n
    }\n
    v57 = v3 & 1;\n
    cgc_uint2str(&v55, 12, v57);\n
    v2 = &v55;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v102 = v58;\n
    *(v102) = *(v102) - 4;\n
    v103 = v59;\n
    *(v103) = &*(v103)->field_4;\n
    v46 = v79;\n
    v45 = a0;\n
    memset(&v43, 0, 4);\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v44 = *(v46)->field_0;\n
    cgc_uint2str(&v43, 4, v44);\n
    v1 = &v43;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v43)) < 0)\n
        cgc__terminate();\n
    v104 = v45;\n
    *(v104) = *(v104) - 1;\n
    v105 = v46;\n
    *(v105) = &*(v105)->padding_1;\n
    v38 = v79;\n
    v37 = a0;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = *(v38)->field_0;\n
    v106 = v37;\n
    *(v106) = *(v106) - 1;\n
    v107 = v38;\n
    *(v107) = &*(v107)->padding_1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_4126fa;\n
    if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4126fa:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, &v15[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v108 = v38;\n
    *(v108) = &(&*(v108)->field_0)[v36];\n
    v109 = v37;\n
    *(v109) = *(v109) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v50 = v79;\n
    v49 = a0;\n
    memset(&v47, 0, 12);\n
    if (*(v49) < 4)\n
    {\n
        if (cgc_sendline(1, &v15[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v48 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v17 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-310, size=2, endness=Iend_LE)))));\n
    v16 = v17 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v47, 12, v20);\n
    v0 = &v47;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v110 = v49;\n
    *(v110) = *(v110) - 4;\n
    v111 = v50;\n
    *(v111) = &*(v111)->field_4;\n
    v23 ^= v15->field_260;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v112 = a0;\n
    if (*(v112) > 0 && v22 >= 0 && v22 < 0)\n
        v112 = *((&v24 + 0x4 * v22))(v79);\n
    v113 = v78;\n
    return v112;\n
}\n
", "4270611:sub_412a13": null, "4270624:cgc_process_llamaisonymy": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaisonymy(struct struct_0 **v230, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x49c]\n
    char v1;  // [bp-0x495]\n
    struct_1 *v2;  // [bp-0x494]\n
    struct_1 *v3;  // [bp-0x490]\n
    char v4;  // [bp-0x489]\n
    struct_1 *v5;  // [bp-0x488]\n
    struct_1 *v6;  // [bp-0x484]\n
    struct_1 *v7;  // [bp-0x480]\n
    char v8;  // [bp-0x479]\n
    unsigned int v9;  // [bp-0x478]\n
    unsigned int v10;  // [bp-0x474]\n
    struct_1 *v11;  // [bp-0x470]\n
    struct_1 *v12;  // [bp-0x46c]\n
    struct_1 *v13;  // [bp-0x468]\n
    struct_1 *v14;  // [bp-0x464]\n
    unsigned int v15;  // [bp-0x460]\n
    struct_1 *v16;  // [bp-0x45c]\n
    unsigned int v17;  // [bp-0x458]\n
    struct_1 *v18;  // [bp-0x454]\n
    char v19;  // [bp-0x44d]\n
    struct_1 *v20;  // [bp-0x44c]\n
    struct_1 *v21;  // [bp-0x448]\n
    char v22;  // [bp-0x441]\n
    struct_1 *v23;  // [bp-0x440]\n
    struct_1 *v24;  // [bp-0x43c]\n
    struct_1 *v25;  // [bp-0x438]\n
    struct_1 *v26;  // [bp-0x434]\n
    char v27;  // [bp-0x42d]\n
    struct_1 *v28;  // [bp-0x42c]\n
    struct_1 *v29;  // [bp-0x428]\n
    char v30;  // [bp-0x421]\n
    struct_1 *v31;  // [bp-0x420]\n
    struct_1 *v32;  // [bp-0x41c]\n
    struct_1 *v33;  // [bp-0x418]\n
    struct_1 *v34;  // [bp-0x414]\n
    char v35;  // [bp-0x40d]\n
    struct_1 *v36;  // [bp-0x40c]\n
    char v37;  // [bp-0x405]\n
    struct_1 *v38;  // [bp-0x404]\n
    unsigned int v39;  // [bp-0x400]\n
    struct_1 *v40;  // [bp-0x3fc]\n
    char v41;  // [bp-0x3f5]\n
    struct_3 *v42;  // [bp-0x3f4]\n
    unsigned short v43;  // [bp-0x3f0]\n
    unsigned short v44;  // [bp-0x3ee]\n
    unsigned short v45;  // [bp-0x3ec]\n
    unsigned short v46;  // [bp-0x3ea]\n
    unsigned short v47;  // [bp-0x3e8]\n
    unsigned short v48;  // [bp-0x3e6]\n
    unsigned short v49;  // [bp-0x3e4]\n
    unsigned short v50;  // [bp-0x3e2]\n
    unsigned short v51;  // [bp-0x3e0]\n
    unsigned short v52;  // [bp-0x3de]\n
    unsigned long v53;  // [bp-0x3dc]\n
    unsigned long v54;  // [bp-0x3d4]\n
    unsigned long v55;  // [bp-0x3cc]\n
    unsigned long v56;  // [bp-0x3c4]\n
    unsigned long v57;  // [bp-0x3bc]\n
    struct struct_2 **v58;  // [bp-0x3b0]\n
    unsigned int v59;  // [bp-0x3ac]\n
    char v60;  // [bp-0x3a8]\n
    char v61;  // [bp-0x3a6]\n
    char v62[2];  // [bp-0x3a0]\n
    unsigned short v63;  // [bp-0x39a]\n
    unsigned int *v64;  // [bp-0x398]\n
    struct struct_0 **v65;  // [bp-0x394]\n
    char v66;  // [bp-0x38e]\n
    char v67[2];  // [bp-0x388]\n
    unsigned short v68;  // [bp-0x382]\n
    unsigned int *v69;  // [bp-0x380]\n
    struct struct_0 **v70;  // [bp-0x37c]\n
    char v71;  // [bp-0x376]\n
    char v72[5];  // [bp-0x370]\n
    unsigned short v73;  // [bp-0x36a]\n
    unsigned int *v74;  // [bp-0x368]\n
    struct struct_0 **v75;  // [bp-0x364]\n
    char v76;  // [bp-0x35d]\n
    char v77[5];  // [bp-0x348]\n
    unsigned int v78;  // [bp-0x344]\n
    void* v79;  // [bp-0x340]\n
    unsigned int *v80;  // [bp-0x338]\n
    struct struct_0 **v81;  // [bp-0x334]\n
    char v82;  // [bp-0x32d]\n
    char v83[8];  // [bp-0x318]\n
    unsigned int v84;  // [bp-0x314]\n
    void* v85;  // [bp-0x310]\n
    unsigned int *v86;  // [bp-0x308]\n
    struct struct_0 **v87;  // [bp-0x304]\n
    char v88;  // [bp-0x2fd]\n
    char v89[8];  // [bp-0x2e8]\n
    unsigned int v90;  // [bp-0x2e4]\n
    void* v91;  // [bp-0x2e0]\n
    unsigned int *v92;  // [bp-0x2dc]\n
    struct struct_0 **v93;  // [bp-0x2d8]\n
    unsigned int v94;  // [bp-0x2d4]\n
    char v95;  // [bp-0x2cd]\n
    unsigned int *v96;  // [bp-0x2cc]\n
    struct struct_0 **v97;  // [bp-0x2c8]\n
    unsigned int v98;  // [bp-0x2c4]\n
    char v99;  // [bp-0x2bd]\n
    unsigned int *v100;  // [bp-0x2bc]\n
    struct struct_0 **v101;  // [bp-0x2b8]\n
    unsigned int v102;  // [bp-0x2b4]\n
    char v103;  // [bp-0x2ad]\n
    unsigned int *v104;  // [bp-0x2ac]\n
    struct struct_0 **v105;  // [bp-0x2a8]\n
    char *v106;  // [bp-0x2a4]\n
    unsigned int v107;  // [bp-0x2a0]\n
    unsigned int *v108;  // [bp-0x29c]\n
    struct struct_0 **v109;  // [bp-0x298]\n
    char *v110;  // [bp-0x294]\n
    unsigned int v111;  // [bp-0x290]\n
    unsigned int *v112;  // [bp-0x28c]\n
    struct struct_0 **v113;  // [bp-0x288]\n
    char *v114;  // [bp-0x284]\n
    unsigned int v115;  // [bp-0x280]\n
    unsigned int *v116;  // [bp-0x27c]\n
    struct struct_0 **v117;  // [bp-0x278]\n
    char v118;  // [bp-0x274]\n
    unsigned short v119;  // [bp-0x26e]\n
    unsigned int *v120;  // [bp-0x26c]\n
    struct struct_0 **v121;  // [bp-0x268]\n
    char v122;  // [bp-0x264]\n
    unsigned short v123;  // [bp-0x25e]\n
    unsigned int *v124;  // [bp-0x25c]\n
    struct struct_0 **v125;  // [bp-0x258]\n
    char v126;  // [bp-0x254]\n
    unsigned short v127;  // [bp-0x24e]\n
    unsigned int *v128;  // [bp-0x24c]\n
    struct struct_0 **v129;  // [bp-0x248]\n
    char v130;  // [bp-0x241]\n
    char v131;  // [bp-0x23d]\n
    unsigned int *v132;  // [bp-0x23c]\n
    struct struct_0 **v133;  // [bp-0x238]\n
    char v134;  // [bp-0x231]\n
    char v135;  // [bp-0x22d]\n
    unsigned int *v136;  // [bp-0x22c]\n
    struct struct_0 **v137;  // [bp-0x228]\n
    char v138;  // [bp-0x221]\n
    char v139;  // [bp-0x21d]\n
    unsigned int *v140;  // [bp-0x21c]\n
    struct struct_0 **v141;  // [bp-0x218]\n
    char v142;  // [bp-0x211]\n
    char v143;  // [bp-0x20d]\n
    unsigned int *v144;  // [bp-0x20c]\n
    struct struct_0 **v145;  // [bp-0x208]\n
    char v146;  // [bp-0x201]\n
    char v147;  // [bp-0x1fd]\n
    unsigned int *v148;  // [bp-0x1fc]\n
    struct struct_0 **v149;  // [bp-0x1f8]\n
    char v150;  // [bp-0x1f1]\n
    unsigned long v151;  // [bp-0x1dc]\n
    unsigned int *v152;  // [bp-0x1d4]\n
    struct struct_0 **v153;  // [bp-0x1d0]\n
    char v154;  // [bp-0x1c9]\n
    unsigned long v155;  // [bp-0x1b4]\n
    unsigned int *v156;  // [bp-0x1ac]\n
    struct struct_0 **v157;  // [bp-0x1a8]\n
    char v158;  // [bp-0x1a4]\n
    unsigned int v159;  // [bp-0x198]\n
    unsigned int *v160;  // [bp-0x194]\n
    struct struct_0 **v161;  // [bp-0x190]\n
    char v162;  // [bp-0x18c]\n
    unsigned int v163;  // [bp-0x180]\n
    unsigned int *v164;  // [bp-0x17c]\n
    struct struct_0 **v165;  // [bp-0x178]\n
    char v166;  // [bp-0x174]\n
    unsigned int v167;  // [bp-0x168]\n
    unsigned int *v168;  // [bp-0x164]\n
    struct struct_0 **v169;  // [bp-0x160]\n
    char v170;  // [bp-0x15c]\n
    unsigned int v171;  // [bp-0x150]\n
    unsigned int *v172;  // [bp-0x14c]\n
    struct struct_0 **v173;  // [bp-0x148]\n
    unsigned int v174;  // [bp-0x144]\n
    unsigned short v175;  // [bp-0x13e]\n
    unsigned int *v176;  // [bp-0x13c]\n
    struct struct_0 **v177;  // [bp-0x138]\n
    char v178;  // [bp-0x134]\n
    char v179[4];  // [bp-0x128]\n
    unsigned int v180;  // [bp-0x124]\n
    unsigned int *v181;  // [bp-0x120]\n
    struct struct_0 **v182;  // [bp-0x11c]\n
    char v183;  // [bp-0x118]\n
    char v184[4];  // [bp-0x10c]\n
    unsigned int v185;  // [bp-0x108]\n
    unsigned int *v186;  // [bp-0x104]\n
    struct struct_0 **v187;  // [bp-0x100]\n
    char v188;  // [bp-0xfc]\n
    char v189[4];  // [bp-0xf0]\n
    unsigned int v190;  // [bp-0xec]\n
    unsigned int *v191;  // [bp-0xe8]\n
    struct struct_0 **v192;  // [bp-0xe4]\n
    char v193;  // [bp-0xe0]\n
    char v194[4];  // [bp-0xd4]\n
    unsigned int v195;  // [bp-0xd0]\n
    unsigned int *v196;  // [bp-0xcc]\n
    struct struct_0 **v197;  // [bp-0xc8]\n
    char *v198;  // [bp-0xc4]\n
    unsigned int v199;  // [bp-0xc0]\n
    unsigned int *v200;  // [bp-0xbc]\n
    struct struct_0 **v201;  // [bp-0xb8]\n
    char *v202;  // [bp-0xb4]\n
    unsigned int v203;  // [bp-0xb0]\n
    unsigned int *v204;  // [bp-0xac]\n
    struct struct_0 **v205;  // [bp-0xa8]\n
    char v206;  // [bp-0xa1]\n
    unsigned int v207;  // [bp-0x8c]\n
    unsigned int v208;  // [bp-0x88]\n
    unsigned int *v209;  // [bp-0x84]\n
    struct struct_0 **v210;  // [bp-0x80]\n
    char v211;  // [bp-0x79]\n
    unsigned int v212;  // [bp-0x64]\n
    unsigned int v213;  // [bp-0x60]\n
    unsigned int *v214;  // [bp-0x5c]\n
    struct struct_0 **v215;  // [bp-0x58]\n
    char v216;  // [bp-0x51]\n
    unsigned int v217;  // [bp-0x3c]\n
    unsigned int v218;  // [bp-0x38]\n
    unsigned int *v219;  // [bp-0x30]\n
    struct struct_0 **v220;  // [bp-0x2c]\n
    unsigned int v221;  // [bp-0x28]\n
    char v222;  // [bp-0x21]\n
    unsigned int *v223;  // [bp-0x20]\n
    struct struct_0 **v224;  // [bp-0x1c]\n
    unsigned int v225;  // [bp-0x18]\n
    char v226;  // [bp-0x11]\n
    unsigned int *v227;  // [bp-0x10]\n
    struct struct_0 **v228;  // [bp-0xc]\n
    unsigned int v229;  // [bp-0x8]\n
    unsigned int v231;  // ebx\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_0 **v239;  // eax\n
    unsigned int *v240;  // eax\n
    struct struct_0 **v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_0 **v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    unsigned int *v246;  // eax\n
    struct struct_0 **v247;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_0 **v251;  // eax\n
    unsigned int *v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_0 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    unsigned int v260[2];  // ecx\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v284;  // eax\n
    unsigned int v285[2];  // ecx\n
    unsigned int *v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    struct struct_0 **v289;  // eax\n
    unsigned int *v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    struct struct_0 **v295;  // eax\n
    unsigned int *v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    struct struct_0 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_0 **v307;  // eax\n
    unsigned int *v308;  // eax\n
    struct struct_0 **v309;  // eax\n
    struct struct_0 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_0 **v313;  // eax\n
    unsigned int *v315;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int *v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    char v322[5];  // ecx\n
    unsigned int *v323;  // eax\n
    struct struct_0 **v324;  // eax\n
    unsigned int *v325;  // eax\n
    struct struct_0 **v326;  // eax\n
    unsigned int *v327;  // eax\n
    struct struct_0 **v328;  // eax\n
    unsigned int *v329;  // eax\n
    struct struct_0 **v330;  // eax\n
    unsigned int *v331;  // eax\n
    struct struct_0 **v332;  // eax\n
    unsigned int *v333;  // eax, Other Possible Types: unsigned int\n
    unsigned int v334;  // ebx\n
\n
    v229 = v231;\n
    v42 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v59 = cgc__cookie;\n
    v58 = -1;\n
    if (cgc_sendline(1, \"===llamaisonymy===\", 18) < 0)\n
        cgc__terminate();\n
    v93 = v230;\n
    v92 = a0;\n
    *(&v89[0]) = *(v93);\n
    memset(&v88, 0, 21);\n
    if (*(v92) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = 0;\n
    if (v89[0])\n
    {\n
        v41 = 0;\n
        if (v89[1])\n
        {\n
            v41 = 0;\n
            if (v89[2])\n
            {\n
                v41 = 0;\n
                if (v89[3])\n
                {\n
                    v41 = 0;\n
                    if (v89[4] << 24)\n
                    {\n
                        v41 = 0;\n
                        if (v89[5] << 16)\n
                        {\n
                            v41 = 0;\n
                            if (v89[6] << 8)\n
                                v41 = v89[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v90 = v41 & 1;\n
    v91 = 0;\n
    cgc_uint2str(&v88, 21, v90);\n
    v40 = &v88;\n
    if (cgc_sendline(1, v40, cgc_strlen(&v88)) < 0)\n
        cgc__terminate();\n
    v232 = v92;\n
    *(v232) = *(v232) - 8;\n
    v233 = v93;\n
    *(v233) = &(*(v233))[1].padding_1[2];\n
    v205 = v230;\n
    v204 = a0;\n
    if (*(v204) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v204) >= 128)\n
        v39 = 128;\n
    else\n
        v39 = *(v204);\n
    v203 = v39;\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = cgc_calloc(134);\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v202, &v42[18].padding_0[182]);\n
    cgc_strncpy(v202 + 5, *(v205), v203);\n
    v235 = v205;\n
    *(v235) = &(&*(v235)->field_4)[cgc_strlen(v202)];\n
    v237 = v204;\n
    *(v237) = *(v237) - (cgc_strlen(v202) + -4);\n
    cgc_checkheap();\n
    cgc_free(v202);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v173 = v230;\n
    v172 = a0;\n
    memset(&v170, 0, 12);\n
    if (*(v172) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v171 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v52 = [D] x86g_create_fpucw(fpround<4>);\n
    v51 = v52 | 0xc00;\n
    v57 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v170, 12, v57);\n
    v38 = &v170;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v238 = v172;\n
    *(v238) = *(v238) - 4;\n
    v239 = v173;\n
    *(v239) = &*(v239)->field_4;\n
    v75 = v230;\n
    v74 = a0;\n
    *(&v72[0]) = *(v75);\n
    memset(&v71, 0, 6);\n
    if (*(v74) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v37 = 0;\n
    if (v72[0] << 8)\n
        v37 = v72[1];\n
    v73 = v37 & 1;\n
    cgc_uint2str(&v71, 6, v73);\n
    v36 = &v71;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v240 = v74;\n
    *(v240) = *(v240) - 2;\n
    v241 = v75;\n
    *(v241) = &*(v241)->padding_1[1];\n
    v228 = v230;\n
    v227 = a0;\n
    if (*(v227) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v226 = *(v228)->field_0;\n
    v242 = v227;\n
    *(v242) = *(v242) - 1;\n
    v243 = v228;\n
    *(v243) = &*(v243)->padding_1;\n
    if (v226 <= *(v227) && !(!v226))\n
        goto LABEL_413351;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_413351:\n
    v225 = cgc_calloc(v226);\n
    if (!v225)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v225, *(v228), v226);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v244 = v228;\n
    *(v244) = &(&*(v244)->field_0)[v226];\n
    v245 = v227;\n
    *(v245) = *(v245) - v226;\n
    cgc_checkheap();\n
    cgc_free(v225);\n
    v105 = v230;\n
    v104 = a0;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(v105)->field_0;\n
    v246 = v104;\n
    *(v246) = *(v246) - 1;\n
    v247 = v105;\n
    *(v247) = &*(v247)->padding_1;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_413568;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_413568:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v248 = v105;\n
    *(v248) = &(&*(v248)->field_0)[v103];\n
    v249 = v104;\n
    *(v249) = *(v249) - v103;\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v197 = v230;\n
    v196 = a0;\n
    *(&v194[0]) = *(v197);\n
    memset(&v193, 0, 12);\n
    if (*(v196) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = 0;\n
    if (v194[0] << 24)\n
    {\n
        v35 = 0;\n
        if (v194[1] << 16)\n
        {\n
            v35 = 0;\n
            if (v194[2] << 8)\n
                v35 = v194[3];\n
        }\n
    }\n
    v195 = v35 & 1;\n
    cgc_uint2str(&v193, 12, v195);\n
    v34 = &v193;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v250 = v196;\n
    *(v250) = *(v250) - 4;\n
    v251 = v197;\n
    *(v251) = &*(v251)->field_4;\n
    v169 = v230;\n
    v168 = a0;\n
    memset(&v166, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v167 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v50 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-990, size=2, endness=Iend_LE)))));\n
    v49 = v50 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v166, 12, v56);\n
    v33 = &v166;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v166)) < 0)\n
        cgc__terminate();\n
    v252 = v168;\n
    *(v252) = *(v252) - 4;\n
    v253 = v169;\n
    *(v253) = &*(v253)->field_4;\n
    v149 = v230;\n
    v148 = a0;\n
    memset(&v146, 0, 4);\n
    if (*(v148) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v147 = *(v149)->field_0;\n
    cgc_uint2str(&v146, 4, v147);\n
    v32 = &v146;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v254 = v148;\n
    *(v254) = *(v254) - 1;\n
    v255 = v149;\n
    *(v255) = &*(v255)->padding_1;\n
    v224 = v230;\n
    v223 = a0;\n
    if (*(v223) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v222 = *(v224)->field_0;\n
    v256 = v223;\n
    *(v256) = *(v256) - 1;\n
    v257 = v224;\n
    *(v257) = &*(v257)->padding_1;\n
    if (v222 <= *(v223) && !(!v222))\n
        goto LABEL_413bfb;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_413bfb:\n
    v221 = cgc_calloc(v222);\n
    if (!v221)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v221, *(v224), v222);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v258 = v224;\n
    *(v258) = &(&*(v258)->field_0)[v222];\n
    v259 = v223;\n
    *(v259) = *(v259) - v222;\n
    cgc_checkheap();\n
    cgc_free(v221);\n
    v220 = v230;\n
    v219 = a0;\n
    memset(&v216, 0, 21);\n
    if (*(v219) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v260 = *(v220);\n
    v218 = v260[1];\n
    v217 = v260[0];\n
    cgc_uint2str(&v216, 21, v217);\n
    v31 = &v216;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v216)) < 0)\n
        cgc__terminate();\n
    v261 = v219;\n
    *(v261) = *(v261) - 8;\n
    v262 = v220;\n
    *(v262) = &(*(v262))[1].padding_1[2];\n
    v87 = v230;\n
    v86 = a0;\n
    *(&v83[0]) = *(v87);\n
    memset(&v82, 0, 21);\n
    if (*(v86) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (v83[0])\n
    {\n
        v30 = 0;\n
        if (v83[1])\n
        {\n
            v30 = 0;\n
            if (v83[2])\n
            {\n
                v30 = 0;\n
                if (v83[3])\n
                {\n
                    v30 = 0;\n
                    if (v83[4] << 24)\n
                    {\n
                        v30 = 0;\n
                        if (v83[5] << 16)\n
                        {\n
                            v30 = 0;\n
                            if (v83[6] << 8)\n
                                v30 = v83[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v84 = v30 & 1;\n
    v85 = 0;\n
    cgc_uint2str(&v82, 21, v84);\n
    v29 = &v82;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v263 = v86;\n
    *(v263) = *(v263) - 8;\n
    v264 = v87;\n
    *(v264) = &(*(v264))[1].padding_1[2];\n
    v129 = v230;\n
    v128 = a0;\n
    memset(&v126, 0, 6);\n
    if (*(v128) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(&*(v129)->field_0);\n
    cgc_uint2str(&v126, 6, v127);\n
    v28 = &v126;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v265 = v128;\n
    *(v265) = *(v265) - 2;\n
    v266 = v129;\n
    *(v266) = &*(v266)->padding_1[1];\n
    v192 = v230;\n
    v191 = a0;\n
    *(&v189[0]) = *(v192);\n
    memset(&v188, 0, 12);\n
    if (*(v191) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v189[0] << 24)\n
    {\n
        v27 = 0;\n
        if (v189[1] << 16)\n
        {\n
            v27 = 0;\n
            if (v189[2] << 8)\n
                v27 = v189[3];\n
        }\n
    }\n
    v190 = v27 & 1;\n
    cgc_uint2str(&v188, 12, v190);\n
    v26 = &v188;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v188)) < 0)\n
        cgc__terminate();\n
    v267 = v191;\n
    *(v267) = *(v267) - 4;\n
    v268 = v192;\n
    *(v268) = &*(v268)->field_4;\n
    v157 = v230;\n
    v156 = a0;\n
    memset(&v154, 0, 21);\n
    if (*(v156) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v155 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-994, size=2, endness=Iend_LE)))));\n
    v47 = v48 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v154, 21, v55);\n
    v25 = &v154;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v154)) < 0)\n
        cgc__terminate();\n
    v269 = v156;\n
    *(v269) = *(v269) - 8;\n
    v270 = v157;\n
    *(v270) = &(*(v270))[1].padding_1[2];\n
    v165 = v230;\n
    v164 = a0;\n
    memset(&v162, 0, 12);\n
    if (*(v164) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v163 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-998, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v54 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v162, 12, v54);\n
    v24 = &v162;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v162)) < 0)\n
        cgc__terminate();\n
    v271 = v164;\n
    *(v271) = *(v271) - 4;\n
    v272 = v165;\n
    *(v272) = &*(v272)->field_4;\n
    v145 = v230;\n
    v144 = a0;\n
    memset(&v142, 0, 4);\n
    if (*(v144) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(v145)->field_0;\n
    cgc_uint2str(&v142, 4, v143);\n
    v23 = &v142;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v273 = v144;\n
    *(v273) = *(v273) - 1;\n
    v274 = v145;\n
    *(v274) = &*(v274)->padding_1;\n
    v70 = v230;\n
    v69 = a0;\n
    *(&v67) = *(v70);\n
    memset(&v66, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v67[0] << 8)\n
        v22 = v67[1];\n
    v68 = v22 & 1;\n
    cgc_uint2str(&v66, 6, v68);\n
    v21 = &v66;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v275 = v69;\n
    *(v275) = *(v275) - 2;\n
    v276 = v70;\n
    *(v276) = &*(v276)->padding_1[1];\n
    v125 = v230;\n
    v124 = a0;\n
    memset(&v122, 0, 6);\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    cgc_uint2str(&v122, 6, v123);\n
    v20 = &v122;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v277 = v124;\n
    *(v277) = *(v277) - 2;\n
    v278 = v125;\n
    *(v278) = &*(v278)->padding_1[1];\n
    v187 = v230;\n
    v186 = a0;\n
    *(&v184[0]) = *(v187);\n
    memset(&v183, 0, 12);\n
    if (*(v186) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v184[0] << 24)\n
    {\n
        v19 = 0;\n
        if (v184[1] << 16)\n
        {\n
            v19 = 0;\n
            if (v184[2] << 8)\n
                v19 = v184[3];\n
        }\n
    }\n
    v185 = v19 & 1;\n
    cgc_uint2str(&v183, 12, v185);\n
    v18 = &v183;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v183)) < 0)\n
        cgc__terminate();\n
    v279 = v186;\n
    *(v279) = *(v279) - 4;\n
    v280 = v187;\n
    *(v280) = &*(v280)->field_4;\n
    v201 = v230;\n
    v200 = a0;\n
    if (*(v200) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v200) >= 128)\n
        v17 = 128;\n
    else\n
        v17 = *(v200);\n
    v199 = v17;\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v198 = cgc_calloc(134);\n
    if (!v198)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v198, &v42[18].padding_0[182]);\n
    cgc_strncpy(v198 + 5, *(v201), v199);\n
    v282 = v201;\n
    *(v282) = &(&*(v282)->field_4)[cgc_strlen(v198)];\n
    v284 = v200;\n
    *(v284) = *(v284) - (cgc_strlen(v198) + -4);\n
    cgc_checkheap();\n
    cgc_free(v198);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v215 = v230;\n
    v214 = a0;\n
    memset(&v211, 0, 21);\n
    if (*(v214) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v285 = *(v215);\n
    v213 = v285[1];\n
    v212 = v285[0];\n
    cgc_uint2str(&v211, 21, v212);\n
    v16 = &v211;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v211)) < 0)\n
        cgc__terminate();\n
    v286 = v214;\n
    *(v286) = *(v286) - 8;\n
    v287 = v215;\n
    *(v287) = &(*(v287))[1].padding_1[2];\n
    v117 = v230;\n
    v116 = a0;\n
    if (*(v116) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v116) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v116);\n
    v115 = v15;\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = cgc_calloc(134);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v114, &v42[18].padding_0[182]);\n
    cgc_strncpy(v114 + 5, *(v117), v115);\n
    v289 = v117;\n
    *(v289) = &(&*(v289)->field_4)[cgc_strlen(v114)];\n
    v291 = v116;\n
    *(v291) = *(v291) - (cgc_strlen(v114) + -4);\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v141 = v230;\n
    v140 = a0;\n
    memset(&v138, 0, 4);\n
    if (*(v140) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(v141)->field_0;\n
    cgc_uint2str(&v138, 4, v139);\n
    v14 = &v138;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v292 = v140;\n
    *(v292) = *(v292) - 1;\n
    v293 = v141;\n
    *(v293) = &*(v293)->padding_1;\n
    v137 = v230;\n
    v136 = a0;\n
    memset(&v134, 0, 4);\n
    if (*(v136) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(v137)->field_0;\n
    cgc_uint2str(&v134, 4, v135);\n
    v13 = &v134;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v294 = v136;\n
    *(v294) = *(v294) - 1;\n
    v295 = v137;\n
    *(v295) = &*(v295)->padding_1;\n
    v177 = v230;\n
    v176 = a0;\n
    if (*(v176) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v175 = *(&*(v177)->field_0);\n
    v296 = v176;\n
    *(v296) = *(v296) - 2;\n
    v297 = v177;\n
    *(v297) = &*(v297)->padding_1[1];\n
    if (v175 <= *(v176) && !(!v175))\n
        goto LABEL_4155f1;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4155f1:\n
    v174 = cgc_calloc(v175);\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v174, *(v177), v175);\n
    if (cgc_sendline(1, &v42[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v298 = v176;\n
    *(v298) = *(v298) - v175;\n
    v299 = v177;\n
    *(v299) = &(&*(v299)->field_0)[v175];\n
    cgc_checkheap();\n
    cgc_free(v174);\n
    v101 = v230;\n
    v100 = a0;\n
    if (*(v100) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(v101)->field_0;\n
    v300 = v100;\n
    *(v300) = *(v300) - 1;\n
    v301 = v101;\n
    *(v301) = &*(v301)->padding_1;\n
    if (v99 <= *(v100) && !(!v99))\n
        goto LABEL_415829;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_415829:\n
    v98 = cgc_calloc(v99);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v98, *(v101), v99);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v302 = v101;\n
    *(v302) = &(&*(v302)->field_0)[v99];\n
    v303 = v100;\n
    *(v303) = *(v303) - v99;\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    v161 = v230;\n
    v160 = a0;\n
    memset(&v158, 0, 12);\n
    if (*(v160) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v159 = *(&*(v161)->field_0);\n
    cgc_uint2str(&v158, 12, v159);\n
    v12 = &v158;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v158)) < 0)\n
        cgc__terminate();\n
    v304 = v160;\n
    *(v304) = *(v304) - 4;\n
    v305 = v161;\n
    *(v305) = &*(v305)->field_4;\n
    v133 = v230;\n
    v132 = a0;\n
    memset(&v130, 0, 4);\n
    if (*(v132) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(v133)->field_0;\n
    cgc_uint2str(&v130, 4, v131);\n
    v11 = &v130;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v306 = v132;\n
    *(v306) = *(v306) - 1;\n
    v307 = v133;\n
    *(v307) = &*(v307)->padding_1;\n
    v97 = v230;\n
    v96 = a0;\n
    if (*(v96) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(v97)->field_0;\n
    v308 = v96;\n
    *(v308) = *(v308) - 1;\n
    v309 = v97;\n
    *(v309) = &*(v309)->padding_1;\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_415ce8;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_415ce8:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v310 = v97;\n
    *(v310) = &(&*(v310)->field_0)[v95];\n
    v311 = v96;\n
    *(v311) = *(v311) - v95;\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v113 = v230;\n
    v112 = a0;\n
    if (*(v112) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v112) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v112);\n
    v111 = v10;\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = cgc_calloc(134);\n
    if (!v110)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v110, &v42[18].padding_0[182]);\n
    cgc_strncpy(v110 + 5, *(v113), v111);\n
    v313 = v113;\n
    *(v313) = &(&*(v313)->field_4)[cgc_strlen(v110)];\n
    v315 = v112;\n
    *(v315) = *(v315) - (cgc_strlen(v110) + -4);\n
    cgc_checkheap();\n
    cgc_free(v110);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v109 = v230;\n
    v108 = a0;\n
    if (*(v108) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v108) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v108);\n
    v107 = v9;\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = cgc_calloc(134);\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v106, &v42[18].padding_0[182]);\n
    cgc_strncpy(v106 + 5, *(v109), v107);\n
    v317 = v109;\n
    *(v317) = &(&*(v317)->field_4)[cgc_strlen(v106)];\n
    v319 = v108;\n
    *(v319) = *(v319) - (cgc_strlen(v106) + -4);\n
    cgc_checkheap();\n
    cgc_free(v106);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v182 = v230;\n
    v181 = a0;\n
    *(&v179[0]) = *(v182);\n
    memset(&v178, 0, 12);\n
    if (*(v181) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v179[0] << 24)\n
    {\n
        v8 = 0;\n
        if (v179[1] << 16)\n
        {\n
            v8 = 0;\n
            if (v179[2] << 8)\n
                v8 = v179[3];\n
        }\n
    }\n
    v180 = v8 & 1;\n
    cgc_uint2str(&v178, 12, v180);\n
    v7 = &v178;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v178)) < 0)\n
        cgc__terminate();\n
    v320 = v181;\n
    *(v320) = *(v320) - 4;\n
    v321 = v182;\n
    *(v321) = &*(v321)->field_4;\n
    v210 = v230;\n
    v209 = a0;\n
    memset(&v206, 0, 21);\n
    if (*(v209) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v322 = *(v210);\n
    v208 = *(&v322[4]);\n
    v207 = *(&v322[0]);\n
    cgc_uint2str(&v206, 21, v207);\n
    v6 = &v206;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v206)) < 0)\n
        cgc__terminate();\n
    v323 = v209;\n
    *(v323) = *(v323) - 8;\n
    v324 = v210;\n
    *(v324) = &(*(v324))[1].padding_1[2];\n
    v121 = v230;\n
    v120 = a0;\n
    memset(&v118, 0, 6);\n
    if (*(v120) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = *(&*(v121)->field_0);\n
    cgc_uint2str(&v118, 6, v119);\n
    v5 = &v118;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v325 = v120;\n
    *(v325) = *(v325) - 2;\n
    v326 = v121;\n
    *(v326) = &*(v326)->padding_1[1];\n
    v65 = v230;\n
    v64 = a0;\n
    *(&v62) = *(v65);\n
    memset(&v61, 0, 6);\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v62[0] << 8)\n
        v4 = v62[1];\n
    v63 = v4 & 1;\n
    cgc_uint2str(&v61, 6, v63);\n
    v3 = &v61;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v327 = v64;\n
    *(v327) = *(v327) - 2;\n
    v328 = v65;\n
    *(v328) = &*(v328)->padding_1[1];\n
    v153 = v230;\n
    v152 = a0;\n
    memset(&v150, 0, 21);\n
    if (*(v152) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v151 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1002, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v53 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v150, 21, v53);\n
    v2 = &v150;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v329 = v152;\n
    *(v329) = *(v329) - 8;\n
    v330 = v153;\n
    *(v330) = &(*(v330))[1].padding_1[2];\n
    v81 = v230;\n
    v80 = a0;\n
    *(&v77[0]) = *(v81);\n
    memset(&v76, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v77[0])\n
    {\n
        v1 = 0;\n
        if (v77[1])\n
        {\n
            v1 = 0;\n
            if (v77[2])\n
            {\n
                v1 = 0;\n
                if (v77[3])\n
                {\n
                    v1 = 0;\n
                    if (v77[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v77[1] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v77[1 + 1] << 8)\n
                                v1 = v77[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v78 = v1 & 1;\n
    v79 = 0;\n
    cgc_uint2str(&v76, 21, v78);\n
    v0 = &v76;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v331 = v80;\n
    *(v331) = *(v331) - 8;\n
    v332 = v81;\n
    *(v332) = &(*(v332))[1].padding_1[2];\n
    v59 ^= v42->field_260;\n
    if (v59)\n
        cgc___stack_cookie_fail();\n
    v333 = a0;\n
    if (*(v333) > 0 && v58 >= 0 && v58 < 0)\n
        v333 = *((&v60 + 0x4 * v58))(v230);\n
    v334 = v229;\n
    return v333;\n
}\n
", "4287763:sub_416d13": null, "4287776:cgc_process_llamastrawer": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0318;\n
\n
int cgc_process_llamastrawer(struct struct_0 **v137, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x2a0]\n
    char v1;  // [bp-0x299]\n
    struct_1 *v2;  // [bp-0x298]\n
    struct_1 *v3;  // [bp-0x294]\n
    struct_1 *v4;  // [bp-0x290]\n
    unsigned int v5;  // [bp-0x28c]\n
    struct_1 *v6;  // [bp-0x288]\n
    char v7;  // [bp-0x281]\n
    struct_1 *v8;  // [bp-0x280]\n
    struct_1 *v9;  // [bp-0x27c]\n
    struct_1 *v10;  // [bp-0x278]\n
    struct_1 *v11;  // [bp-0x274]\n
    struct_1 *v12;  // [bp-0x270]\n
    char v13;  // [bp-0x269]\n
    struct_1 *v14;  // [bp-0x268]\n
    struct_1 *v15;  // [bp-0x264]\n
    struct_1 *v16;  // [bp-0x260]\n
    struct_1 *v17;  // [bp-0x25c]\n
    char v18;  // [bp-0x255]\n
    struct_3 *v19;  // [bp-0x254]\n
    unsigned short v20;  // [bp-0x250]\n
    unsigned short v21;  // [bp-0x24e]\n
    unsigned short v22;  // [bp-0x24c]\n
    unsigned short v23;  // [bp-0x24a]\n
    unsigned short v24;  // [bp-0x248]\n
    unsigned short v25;  // [bp-0x246]\n
    unsigned long v26;  // [bp-0x244]\n
    unsigned long v27;  // [bp-0x23c]\n
    unsigned long v28;  // [bp-0x234]\n
    struct struct_2 **v29;  // [bp-0x228], Other Possible Types: unsigned int\n
    unsigned int v30;  // [bp-0x224]\n
    unsigned int v31;  // [bp-0x220]\n
    char v32;  // [bp-0x21a]\n
    char v33[4];  // [bp-0x214]\n
    unsigned short v34;  // [bp-0x20e]\n
    unsigned int *v35;  // [bp-0x20c]\n
    struct struct_0 **v36;  // [bp-0x208]\n
    char v37;  // [bp-0x202]\n
    char v38[2];  // [bp-0x1fc]\n
    unsigned short v39;  // [bp-0x1f6]\n
    unsigned int *v40;  // [bp-0x1f4]\n
    struct struct_0 **v41;  // [bp-0x1f0]\n
    unsigned int v42;  // [bp-0x1ec]\n
    char v43;  // [bp-0x1e5]\n
    unsigned int *v44;  // [bp-0x1e4]\n
    struct struct_0 **v45;  // [bp-0x1e0]\n
    unsigned int v46;  // [bp-0x1dc]\n
    char v47;  // [bp-0x1d5]\n
    unsigned int *v48;  // [bp-0x1d4]\n
    struct struct_0 **v49;  // [bp-0x1d0]\n
    unsigned int v50;  // [bp-0x1cc]\n
    char v51;  // [bp-0x1c5]\n
    unsigned int *v52;  // [bp-0x1c4]\n
    struct struct_0 **v53;  // [bp-0x1c0]\n
    char *v54;  // [bp-0x1bc]\n
    unsigned int *v55;  // [bp-0x1b8]\n
    struct struct_0 **v56;  // [bp-0x1b4]\n
    char *v57;  // [bp-0x1b0]\n
    unsigned int *v58;  // [bp-0x1ac]\n
    struct struct_0 **v59;  // [bp-0x1a8]\n
    char *v60;  // [bp-0x1a4]\n
    unsigned int *v61;  // [bp-0x1a0]\n
    struct struct_0 **v62;  // [bp-0x19c]\n
    char v63;  // [bp-0x198]\n
    unsigned short v64;  // [bp-0x192]\n
    unsigned int *v65;  // [bp-0x190]\n
    struct struct_0 **v66;  // [bp-0x18c]\n
    char v67;  // [bp-0x185]\n
    char v68;  // [bp-0x181]\n
    unsigned int *v69;  // [bp-0x180]\n
    struct struct_0 **v70;  // [bp-0x17c]\n
    char v71;  // [bp-0x175]\n
    char v72;  // [bp-0x171]\n
    unsigned int *v73;  // [bp-0x170]\n
    struct struct_0 **v74;  // [bp-0x16c]\n
    char v75;  // [bp-0x165]\n
    char v76;  // [bp-0x161]\n
    unsigned int *v77;  // [bp-0x160]\n
    struct struct_0 **v78;  // [bp-0x15c]\n
    char *v79;  // [bp-0x158]\n
    unsigned int *v80;  // [bp-0x154]\n
    struct struct_0 **v81;  // [bp-0x150]\n
    char v82[4];  // [bp-0x14c]\n
    unsigned int *v83;  // [bp-0x148]\n
    struct struct_0 **v84;  // [bp-0x144]\n
    char v85[4];  // [bp-0x140]\n
    unsigned int *v86;  // [bp-0x13c]\n
    struct struct_0 **v87;  // [bp-0x138]\n
    char v88;  // [bp-0x131]\n
    unsigned long v89;  // [bp-0x11c]\n
    unsigned int *v90;  // [bp-0x114]\n
    struct struct_0 **v91;  // [bp-0x110]\n
    char v92;  // [bp-0x10c]\n
    unsigned int v93;  // [bp-0x100]\n
    unsigned int *v94;  // [bp-0xfc]\n
    struct struct_0 **v95;  // [bp-0xf8]\n
    char v96;  // [bp-0xf4]\n
    unsigned int v97;  // [bp-0xe8]\n
    unsigned int *v98;  // [bp-0xe4]\n
    struct struct_0 **v99;  // [bp-0xe0]\n
    char v100;  // [bp-0xdc]\n
    unsigned int v101;  // [bp-0xd0]\n
    unsigned int *v102;  // [bp-0xcc]\n
    struct struct_0 **v103;  // [bp-0xc8]\n
    unsigned int v104;  // [bp-0xc4]\n
    unsigned short v105;  // [bp-0xbe]\n
    unsigned int *v106;  // [bp-0xbc]\n
    struct struct_0 **v107;  // [bp-0xb8]\n
    char v108;  // [bp-0xb4]\n
    char v109[4];  // [bp-0xa8]\n
    unsigned int v110;  // [bp-0xa4]\n
    unsigned int *v111;  // [bp-0xa0]\n
    struct struct_0 **v112;  // [bp-0x9c]\n
    char v113;  // [bp-0x98]\n
    char v114[4];  // [bp-0x8c]\n
    unsigned int v115;  // [bp-0x88]\n
    unsigned int *v116;  // [bp-0x84]\n
    struct struct_0 **v117;  // [bp-0x80]\n
    char *v118;  // [bp-0x7c]\n
    unsigned int v119;  // [bp-0x78]\n
    unsigned int *v120;  // [bp-0x74]\n
    struct struct_0 **v121;  // [bp-0x70]\n
    char v122;  // [bp-0x69]\n
    unsigned int v123;  // [bp-0x54]\n
    unsigned int v124;  // [bp-0x50]\n
    unsigned int *v125;  // [bp-0x4c]\n
    struct struct_0 **v126;  // [bp-0x48]\n
    char v127;  // [bp-0x41]\n
    unsigned int v128;  // [bp-0x2c]\n
    unsigned int v129;  // [bp-0x28]\n
    unsigned int *v130;  // [bp-0x20]\n
    struct struct_0 **v131;  // [bp-0x1c]\n
    unsigned int v132;  // [bp-0x18]\n
    char v133;  // [bp-0x11]\n
    unsigned int *v134;  // [bp-0x10]\n
    struct struct_0 **v135;  // [bp-0xc]\n
    unsigned int v136;  // [bp-0x8]\n
    unsigned int v138;  // ebx\n
    unsigned int *v139;  // eax\n
    struct struct_0 **v140;  // eax\n
    unsigned int *v141;  // eax\n
    struct struct_0 **v142;  // eax\n
    unsigned int v143[2];  // ecx\n
    unsigned int *v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    struct struct_0 **v148;  // eax\n
    unsigned int *v149;  // eax\n
    unsigned int v150[2];  // ecx\n
    unsigned int *v151;  // eax\n
    struct struct_0 **v152;  // eax\n
    unsigned int *v153;  // eax\n
    struct struct_0 **v154;  // eax\n
    unsigned int *v155;  // eax\n
    struct struct_0 **v156;  // eax\n
    unsigned int *v157;  // eax\n
    struct struct_0 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    struct struct_0 **v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v163;  // eax\n
    struct struct_0 **v164;  // eax\n
    struct struct_0 **v165;  // eax\n
    unsigned int *v166;  // eax\n
    unsigned int *v167;  // eax\n
    struct struct_0 **v168;  // eax\n
    unsigned int *v169;  // eax\n
    struct struct_0 **v170;  // eax\n
    unsigned int *v171;  // eax\n
    struct struct_0 **v172;  // eax\n
    unsigned int *v173;  // eax\n
    struct struct_0 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    struct struct_0 **v176;  // eax\n
    unsigned int *v177;  // eax\n
    struct struct_0 **v178;  // eax\n
    unsigned int *v179;  // eax\n
    struct struct_0 **v180;  // eax\n
    struct struct_0 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    unsigned int *v183;  // eax\n
    struct struct_0 **v184;  // eax\n
    struct struct_0 **v186;  // eax\n
    unsigned int *v188;  // eax\n
    unsigned int *v189;  // eax\n
    struct struct_0 **v190;  // eax\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    struct struct_0 **v193;  // eax\n
    unsigned int *v194;  // eax\n
    unsigned int *v195;  // eax\n
    struct struct_0 **v196;  // eax\n
    unsigned int *v197;  // eax\n
    struct struct_0 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_0 **v200;  // eax\n
    unsigned int *v201;  // eax\n
    struct struct_0 **v202;  // eax\n
    unsigned int *v203;  // eax\n
    struct struct_0 **v204;  // eax\n
    unsigned int *v205;  // eax, Other Possible Types: unsigned int\n
    unsigned int v206;  // ebx\n
\n
    v136 = v138;\n
    v19 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v31 = g_4f0318;\n
    v30 = cgc__cookie;\n
    v29 = -1;\n
    if (cgc_sendline(1, \"===llamastrawer===\", 18) < 0)\n
        cgc__terminate();\n
    v62 = v137;\n
    v61 = a0;\n
    v60 = &*(v62)->field_0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = v61;\n
    *(v139) = *(v139) - 1;\n
    v140 = v62;\n
    *(v140) = &*(v140)->padding_1;\n
    v29 = *(v60);\n
    v41 = v137;\n
    v40 = a0;\n
    *(&v38) = *(v41);\n
    memset(&v37, 0, 6);\n
    if (*(v40) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v38[0] << 8)\n
        v18 = v38[1];\n
    v39 = v18 & 1;\n
    cgc_uint2str(&v37, 6, v39);\n
    v17 = &v37;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v37)) < 0)\n
        cgc__terminate();\n
    v141 = v40;\n
    *(v141) = *(v141) - 2;\n
    v142 = v41;\n
    *(v142) = &*(v142)->padding_1[1];\n
    v131 = v137;\n
    v130 = a0;\n
    memset(&v127, 0, 21);\n
    if (*(v130) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(v131);\n
    v129 = v143[1];\n
    v128 = v143[0];\n
    cgc_uint2str(&v127, 21, v128);\n
    v16 = &v127;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v144 = v130;\n
    *(v144) = *(v144) - 8;\n
    v145 = v131;\n
    *(v145) = *(v145) + 1;\n
    v53 = v137;\n
    v52 = a0;\n
    if (*(v52) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v51 = *(v53)->field_0;\n
    v146 = v52;\n
    *(v146) = *(v146) - 1;\n
    v147 = v53;\n
    *(v147) = &*(v147)->padding_1;\n
    if (v51 <= *(v52) && !(!v51))\n
        goto LABEL_41720c;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41720c:\n
    v50 = cgc_calloc(v51);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v50, *(v53), v51);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v148 = v53;\n
    *(v148) = &(&*(v148)->field_0)[v51];\n
    v149 = v52;\n
    *(v149) = *(v149) - v51;\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    v126 = v137;\n
    v125 = a0;\n
    memset(&v122, 0, 21);\n
    if (*(v125) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v150 = *(v126);\n
    v124 = v150[1];\n
    v123 = v150[0];\n
    cgc_uint2str(&v122, 21, v123);\n
    v15 = &v122;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v151 = v125;\n
    *(v151) = *(v151) - 8;\n
    v152 = v126;\n
    *(v152) = *(v152) + 1;\n
    v78 = v137;\n
    v77 = a0;\n
    memset(&v75, 0, 4);\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    cgc_uint2str(&v75, 4, v76);\n
    v14 = &v75;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v153 = v77;\n
    *(v153) = *(v153) - 1;\n
    v154 = v78;\n
    *(v154) = &*(v154)->padding_1;\n
    v117 = v137;\n
    v116 = a0;\n
    *(&v114[0]) = *(v117);\n
    memset(&v113, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v114[0] << 24)\n
    {\n
        v13 = 0;\n
        if (v114[1] << 16)\n
        {\n
            v13 = 0;\n
            if (v114[2] << 8)\n
                v13 = v114[3];\n
        }\n
    }\n
    v115 = v13 & 1;\n
    cgc_uint2str(&v113, 12, v115);\n
    v12 = &v113;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v113)) < 0)\n
        cgc__terminate();\n
    v155 = v116;\n
    *(v155) = *(v155) - 4;\n
    v156 = v117;\n
    *(v156) = &*(v156)->field_4;\n
    v74 = v137;\n
    v73 = a0;\n
    memset(&v71, 0, 4);\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(v74)->field_0;\n
    cgc_uint2str(&v71, 4, v72);\n
    v11 = &v71;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v157 = v73;\n
    *(v157) = *(v157) - 1;\n
    v158 = v74;\n
    *(v158) = &*(v158)->padding_1;\n
    v70 = v137;\n
    v69 = a0;\n
    memset(&v67, 0, 4);\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(v70)->field_0;\n
    cgc_uint2str(&v67, 4, v68);\n
    v10 = &v67;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v159 = v69;\n
    *(v159) = *(v159) - 1;\n
    v160 = v70;\n
    *(v160) = &*(v160)->padding_1;\n
    v87 = v137;\n
    v86 = a0;\n
    *(&v85[0]) = *(v87);\n
    if (*(v86) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v161 = v86;\n
    *(v161) = *(v161) - 2;\n
    v162 = v87;\n
    *(v162) = &*(v162)->padding_1[1];\n
    v29 = *(&v85[0]);\n
    v49 = v137;\n
    v48 = a0;\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v47 = *(v49)->field_0;\n
    v163 = v48;\n
    *(v163) = *(v163) - 1;\n
    v164 = v49;\n
    *(v164) = &*(v164)->padding_1;\n
    if (v47 <= *(v48) && !(!v47))\n
        goto LABEL_417b8d;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_417b8d:\n
    v46 = cgc_calloc(v47);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v46, *(v49), v47);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v165 = v49;\n
    *(v165) = &(&*(v165)->field_0)[v47];\n
    v166 = v48;\n
    *(v166) = *(v166) - v47;\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    v95 = v137;\n
    v94 = a0;\n
    memset(&v92, 0, 12);\n
    if (*(v94) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = *(&*(v95)->field_0);\n
    cgc_uint2str(&v92, 12, v93);\n
    v9 = &v92;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v167 = v94;\n
    *(v167) = *(v167) - 4;\n
    v168 = v95;\n
    *(v168) = &*(v168)->field_4;\n
    v107 = v137;\n
    v106 = a0;\n
    if (*(v106) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(&*(v107)->field_0);\n
    v169 = v106;\n
    *(v169) = *(v169) - 2;\n
    v170 = v107;\n
    *(v170) = &*(v170)->padding_1[1];\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_417f0a;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_417f0a:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, &v19[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v171 = v106;\n
    *(v171) = *(v171) - v105;\n
    v172 = v107;\n
    *(v172) = &(&*(v172)->field_0)[v105];\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v66 = v137;\n
    v65 = a0;\n
    memset(&v63, 0, 6);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    cgc_uint2str(&v63, 6, v64);\n
    v8 = &v63;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v173 = v65;\n
    *(v173) = *(v173) - 2;\n
    v174 = v66;\n
    *(v174) = &*(v174)->padding_1[1];\n
    v84 = v137;\n
    v83 = a0;\n
    *(&v82[0]) = *(v84);\n
    if (*(v83) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v175 = v83;\n
    *(v175) = *(v175) - 2;\n
    v176 = v84;\n
    *(v176) = &*(v176)->padding_1[1];\n
    v29 = *(&v82[0]);\n
    v112 = v137;\n
    v111 = a0;\n
    *(&v109[0]) = *(v112);\n
    memset(&v108, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v109[0] << 24)\n
    {\n
        v7 = 0;\n
        if (v109[1] << 16)\n
        {\n
            v7 = 0;\n
            if (v109[2] << 8)\n
                v7 = v109[3];\n
        }\n
    }\n
    v110 = v7 & 1;\n
    cgc_uint2str(&v108, 12, v110);\n
    v6 = &v108;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v108)) < 0)\n
        cgc__terminate();\n
    v177 = v111;\n
    *(v177) = *(v177) - 4;\n
    v178 = v112;\n
    *(v178) = &*(v178)->field_4;\n
    v135 = v137;\n
    v134 = a0;\n
    if (*(v134) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = *(v135)->field_0;\n
    v179 = v134;\n
    *(v179) = *(v179) - 1;\n
    v180 = v135;\n
    *(v180) = &*(v180)->padding_1;\n
    if (v133 <= *(v134) && !(!v133))\n
        goto LABEL_4184d4;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4184d4:\n
    v132 = cgc_calloc(v133);\n
    if (!v132)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v132, *(v135), v133);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v181 = v135;\n
    *(v181) = &(&*(v181)->field_0)[v133];\n
    v182 = v134;\n
    *(v182) = *(v182) - v133;\n
    cgc_checkheap();\n
    cgc_free(v132);\n
    v81 = v137;\n
    v80 = a0;\n
    v79 = &*(v81)->field_0;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v183 = v80;\n
    *(v183) = *(v183) - 2;\n
    v184 = v81;\n
    *(v184) = &*(v184)->padding_1[1];\n
    v29 = *(&v79);\n
    v121 = v137;\n
    v120 = a0;\n
    if (*(v120) <= 0)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v120) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v120);\n
    v119 = v5;\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = cgc_calloc(134);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v118, &v19[18].padding_0[182]);\n
    cgc_strncpy(v118 + 5, *(v121), v119);\n
    v186 = v121;\n
    *(v186) = -4 + cgc_strlen(v118) + *(v186);\n
    v188 = v120;\n
    *(v188) = *(v188) - (cgc_strlen(v118) + -4);\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    if (cgc_sendline(1, &v19[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v103 = v137;\n
    v102 = a0;\n
    memset(&v100, 0, 12);\n
    if (*(v102) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v101 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v25 = [D] x86g_create_fpucw(fpround<4>);\n
    v24 = v25 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v100, 12, v28);\n
    v4 = &v100;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v100)) < 0)\n
        cgc__terminate();\n
    v189 = v102;\n
    *(v189) = *(v189) - 4;\n
    v190 = v103;\n
    *(v190) = &*(v190)->field_4;\n
    v45 = v137;\n
    v44 = a0;\n
    if (*(v44) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v43 = *(v45)->field_0;\n
    v191 = v44;\n
    *(v191) = *(v191) - 1;\n
    v192 = v45;\n
    *(v192) = &*(v192)->padding_1;\n
    if (v43 <= *(v44) && !(!v43))\n
        goto LABEL_418b53;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_418b53:\n
    v42 = cgc_calloc(v43);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v42, *(v45), v43);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v193 = v45;\n
    *(v193) = &(&*(v193)->field_0)[v43];\n
    v194 = v44;\n
    *(v194) = *(v194) - v43;\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    v59 = v137;\n
    v58 = a0;\n
    v57 = &*(v59)->field_0;\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v195 = v58;\n
    *(v195) = *(v195) - 1;\n
    v196 = v59;\n
    *(v196) = &*(v196)->padding_1;\n
    v29 = *(v57);\n
    v99 = v137;\n
    v98 = a0;\n
    memset(&v96, 0, 12);\n
    if (*(v98) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v97 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v23 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-582, size=2, endness=Iend_LE)))));\n
    v22 = v23 | 0xc00;\n
    v27 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v96, 12, v27);\n
    v3 = &v96;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v96)) < 0)\n
        cgc__terminate();\n
    v197 = v98;\n
    *(v197) = *(v197) - 4;\n
    v198 = v99;\n
    *(v198) = &*(v198)->field_4;\n
    v91 = v137;\n
    v90 = a0;\n
    memset(&v88, 0, 21);\n
    if (*(v90) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v89 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-586, size=2, endness=Iend_LE)))));\n
    v20 = v21 | 0xc00;\n
    v26 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v88, 21, v26);\n
    v2 = &v88;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v88)) < 0)\n
        cgc__terminate();\n
    v199 = v90;\n
    *(v199) = *(v199) - 8;\n
    v200 = v91;\n
    *(v200) = *(v200) + 1;\n
    v56 = v137;\n
    v55 = a0;\n
    v54 = &*(v56)->field_0;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v201 = v55;\n
    *(v201) = *(v201) - 1;\n
    v202 = v56;\n
    *(v202) = &*(v202)->padding_1;\n
    v29 = *(v54);\n
    v36 = v137;\n
    v35 = a0;\n
    *(&v33[0]) = *(v36);\n
    memset(&v32, 0, 6);\n
    if (*(v35) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v33[0] << 8)\n
        v1 = v33[1];\n
    v34 = v1 & 1;\n
    cgc_uint2str(&v32, 6, v34);\n
    v0 = &v32;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v203 = v35;\n
    *(v203) = *(v203) - 2;\n
    v204 = v36;\n
    *(v204) = &*(v204)->padding_1[1];\n
    v30 ^= v19->field_260;\n
    if (v30)\n
        cgc___stack_cookie_fail();\n
    v205 = a0;\n
    if (*(v205) > 0 && v29 >= 0 && v29 < 1)\n
        v205 = (&v31)[v29](v137);\n
    v206 = v136;\n
    return v205;\n
}\n
", "4297401:sub_4192b9": null, "4297408:cgc_process_llamamarket": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0348;\n
extern unsigned int g_4f034c;\n
extern unsigned int g_4f0350;\n
extern unsigned int g_4f0354;\n
\n
int cgc_process_llamamarket(struct struct_0 **v260, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x51c]\n
    struct_1 *v1;  // [bp-0x518]\n
    struct_1 *v2;  // [bp-0x514]\n
    unsigned int v3;  // [bp-0x510]\n
    struct_1 *v4;  // [bp-0x50c]\n
    char v5;  // [bp-0x505]\n
    struct_1 *v6;  // [bp-0x504]\n
    char v7;  // [bp-0x4fd]\n
    unsigned int v8;  // [bp-0x4fc]\n
    unsigned int v9;  // [bp-0x4f8]\n
    struct_1 *v10;  // [bp-0x4f4]\n
    unsigned int v11;  // [bp-0x4f0]\n
    struct_1 *v12;  // [bp-0x4ec]\n
    char v13;  // [bp-0x4e5]\n
    struct_1 *v14;  // [bp-0x4e4]\n
    char v15;  // [bp-0x4dd]\n
    unsigned int v16;  // [bp-0x4dc]\n
    struct_1 *v17;  // [bp-0x4d8]\n
    unsigned int v18;  // [bp-0x4d4]\n
    struct_1 *v19;  // [bp-0x4d0]\n
    char v20;  // [bp-0x4c9]\n
    struct_1 *v21;  // [bp-0x4c8]\n
    char v22;  // [bp-0x4c1]\n
    struct_1 *v23;  // [bp-0x4c0]\n
    struct_1 *v24;  // [bp-0x4bc]\n
    char v25;  // [bp-0x4b5]\n
    struct_1 *v26;  // [bp-0x4b4]\n
    struct_1 *v27;  // [bp-0x4b0]\n
    char v28;  // [bp-0x4a9]\n
    struct_1 *v29;  // [bp-0x4a8]\n
    unsigned int v30;  // [bp-0x4a4]\n
    struct_1 *v31;  // [bp-0x4a0]\n
    struct_1 *v32;  // [bp-0x49c]\n
    char v33;  // [bp-0x495]\n
    struct_1 *v34;  // [bp-0x494]\n
    char v35;  // [bp-0x48d]\n
    struct_1 *v36;  // [bp-0x48c]\n
    struct_2 *v37;  // [bp-0x488]\n
    unsigned short v38;  // [bp-0x484]\n
    unsigned short v39;  // [bp-0x482]\n
    unsigned short v40;  // [bp-0x480]\n
    unsigned short v41;  // [bp-0x47e]\n
    unsigned short v42;  // [bp-0x47c]\n
    unsigned short v43;  // [bp-0x47a]\n
    unsigned short v44;  // [bp-0x478]\n
    unsigned short v45;  // [bp-0x476]\n
    unsigned short v46;  // [bp-0x474]\n
    unsigned short v47;  // [bp-0x472]\n
    unsigned short v48;  // [bp-0x470]\n
    unsigned short v49;  // [bp-0x46e]\n
    unsigned long v50;  // [bp-0x46c]\n
    unsigned long v51;  // [bp-0x464]\n
    unsigned long v52;  // [bp-0x45c]\n
    unsigned long v53;  // [bp-0x454]\n
    unsigned long v54;  // [bp-0x44c]\n
    unsigned long v55;  // [bp-0x444]\n
    struct struct_4 **v56;  // [bp-0x438], Other Possible Types: unsigned int\n
    unsigned int v57;  // [bp-0x434]\n
    unsigned int v58;  // [bp-0x430]\n
    unsigned int v59;  // [bp-0x42c]\n
    unsigned int v60;  // [bp-0x428]\n
    unsigned int v61;  // [bp-0x424]\n
    char v62;  // [bp-0x41e]\n
    char v63[2];  // [bp-0x418]\n
    unsigned short v64;  // [bp-0x412]\n
    unsigned int *v65;  // [bp-0x410]\n
    struct struct_0 **v66;  // [bp-0x40c]\n
    char v67;  // [bp-0x406]\n
    char *v68;  // [bp-0x400]\n
    unsigned short v69;  // [bp-0x3fa]\n
    unsigned int *v70;  // [bp-0x3f8]\n
    struct struct_0 **v71;  // [bp-0x3f4]\n
    char v72;  // [bp-0x3ee]\n
    char *v73;  // [bp-0x3e8]\n
    unsigned short v74;  // [bp-0x3e2]\n
    unsigned int *v75;  // [bp-0x3e0]\n
    struct struct_0 **v76;  // [bp-0x3dc]\n
    char v77;  // [bp-0x3d6]\n
    char v78[2];  // [bp-0x3d0]\n
    unsigned short v79;  // [bp-0x3ca]\n
    unsigned int *v80;  // [bp-0x3c8]\n
    struct struct_0 **v81;  // [bp-0x3c4]\n
    char v82;  // [bp-0x3be]\n
    char v83[2];  // [bp-0x3b8]\n
    unsigned short v84;  // [bp-0x3b2]\n
    unsigned int *v85;  // [bp-0x3b0]\n
    struct struct_0 **v86;  // [bp-0x3ac]\n
    char v87;  // [bp-0x3a5]\n
    char v88[8];  // [bp-0x390]\n
    unsigned int v89;  // [bp-0x38c]\n
    void* v90;  // [bp-0x388]\n
    unsigned int *v91;  // [bp-0x380]\n
    struct struct_0 **v92;  // [bp-0x37c]\n
    char v93;  // [bp-0x375]\n
    char v94[8];  // [bp-0x360]\n
    unsigned int v95;  // [bp-0x35c]\n
    void* v96;  // [bp-0x358]\n
    unsigned int *v97;  // [bp-0x350]\n
    struct struct_0 **v98;  // [bp-0x34c]\n
    char v99;  // [bp-0x345]\n
    char v100[8];  // [bp-0x330]\n
    unsigned int v101;  // [bp-0x32c]\n
    void* v102;  // [bp-0x328]\n
    unsigned int *v103;  // [bp-0x324]\n
    struct struct_0 **v104;  // [bp-0x320]\n
    unsigned int v105;  // [bp-0x31c]\n
    char v106;  // [bp-0x315]\n
    unsigned int *v107;  // [bp-0x314]\n
    struct struct_0 **v108;  // [bp-0x310]\n
    unsigned int v109;  // [bp-0x30c]\n
    char v110;  // [bp-0x305]\n
    unsigned int *v111;  // [bp-0x304]\n
    struct struct_0 **v112;  // [bp-0x300]\n
    unsigned int v113;  // [bp-0x2fc]\n
    char v114;  // [bp-0x2f5]\n
    unsigned int *v115;  // [bp-0x2f4]\n
    struct struct_0 **v116;  // [bp-0x2f0]\n
    unsigned int v117;  // [bp-0x2ec]\n
    char v118;  // [bp-0x2e5]\n
    unsigned int *v119;  // [bp-0x2e4]\n
    struct struct_0 **v120;  // [bp-0x2e0]\n
    unsigned int v121;  // [bp-0x2dc]\n
    char v122;  // [bp-0x2d5]\n
    unsigned int *v123;  // [bp-0x2d4]\n
    struct struct_0 **v124;  // [bp-0x2d0]\n
    char *v125;  // [bp-0x2cc]\n
    unsigned int *v126;  // [bp-0x2c8]\n
    struct struct_0 **v127;  // [bp-0x2c4]\n
    char v128[8];  // [bp-0x2c0]\n
    unsigned int *v129;  // [bp-0x2bc]\n
    struct struct_0 **v130;  // [bp-0x2b8]\n
    char v131;  // [bp-0x2b1]\n
    unsigned long v132;  // [bp-0x29c]\n
    unsigned int *v133;  // [bp-0x294]\n
    struct struct_0 **v134;  // [bp-0x290]\n
    char v135;  // [bp-0x289]\n
    unsigned long v136;  // [bp-0x274]\n
    unsigned int *v137;  // [bp-0x26c]\n
    struct struct_0 **v138;  // [bp-0x268]\n
    char v139;  // [bp-0x261]\n
    unsigned long v140;  // [bp-0x24c]\n
    unsigned int *v141;  // [bp-0x244]\n
    struct struct_0 **v142;  // [bp-0x240]\n
    char v143;  // [bp-0x23c]\n
    unsigned int v144;  // [bp-0x230]\n
    unsigned int *v145;  // [bp-0x22c]\n
    struct struct_0 **v146;  // [bp-0x228]\n
    char v147;  // [bp-0x224]\n
    unsigned int v148;  // [bp-0x218]\n
    unsigned int *v149;  // [bp-0x214]\n
    struct struct_0 **v150;  // [bp-0x210]\n
    char v151;  // [bp-0x20c]\n
    unsigned int v152;  // [bp-0x200]\n
    unsigned int *v153;  // [bp-0x1fc]\n
    struct struct_0 **v154;  // [bp-0x1f8]\n
    char v155;  // [bp-0x1f4]\n
    unsigned int v156;  // [bp-0x1e8]\n
    unsigned int *v157;  // [bp-0x1e4]\n
    struct struct_0 **v158;  // [bp-0x1e0]\n
    char v159;  // [bp-0x1dc]\n
    unsigned int v160;  // [bp-0x1d0]\n
    unsigned int *v161;  // [bp-0x1cc]\n
    struct struct_0 **v162;  // [bp-0x1c8]\n
    unsigned int v163;  // [bp-0x1c4]\n
    unsigned short v164;  // [bp-0x1be]\n
    unsigned int *v165;  // [bp-0x1bc]\n
    struct struct_0 **v166;  // [bp-0x1b8]\n
    unsigned int v167;  // [bp-0x1b4]\n
    unsigned short v168;  // [bp-0x1ae]\n
    unsigned int *v169;  // [bp-0x1ac]\n
    struct struct_0 **v170;  // [bp-0x1a8]\n
    unsigned int v171;  // [bp-0x1a4]\n
    unsigned short v172;  // [bp-0x19e]\n
    unsigned int *v173;  // [bp-0x19c]\n
    struct struct_0 **v174;  // [bp-0x198]\n
    unsigned int v175;  // [bp-0x194]\n
    unsigned short v176;  // [bp-0x18e]\n
    unsigned int *v177;  // [bp-0x18c]\n
    struct struct_0 **v178;  // [bp-0x188]\n
    unsigned int v179;  // [bp-0x184]\n
    unsigned short v180;  // [bp-0x17e]\n
    unsigned int *v181;  // [bp-0x17c]\n
    struct struct_0 **v182;  // [bp-0x178]\n
    unsigned int v183;  // [bp-0x174]\n
    unsigned short v184;  // [bp-0x16e]\n
    unsigned int *v185;  // [bp-0x16c]\n
    struct struct_0 **v186;  // [bp-0x168]\n
    unsigned int v187;  // [bp-0x164]\n
    unsigned short v188;  // [bp-0x15e]\n
    unsigned int *v189;  // [bp-0x15c]\n
    struct struct_0 **v190;  // [bp-0x158]\n
    char v191;  // [bp-0x154]\n
    struct_3 *v192;  // [bp-0x148]\n
    unsigned int v193;  // [bp-0x144]\n
    unsigned int *v194;  // [bp-0x140]\n
    struct struct_0 **v195;  // [bp-0x13c]\n
    char v196;  // [bp-0x138]\n
    struct_3 *v197;  // [bp-0x12c]\n
    unsigned int v198;  // [bp-0x128]\n
    unsigned int *v199;  // [bp-0x124]\n
    struct struct_0 **v200;  // [bp-0x120]\n
    char *v201;  // [bp-0x11c]\n
    unsigned int v202;  // [bp-0x118]\n
    unsigned int *v203;  // [bp-0x114]\n
    struct struct_0 **v204;  // [bp-0x110]\n
    char *v205;  // [bp-0x10c]\n
    unsigned int v206;  // [bp-0x108]\n
    unsigned int *v207;  // [bp-0x104]\n
    struct struct_0 **v208;  // [bp-0x100]\n
    char *v209;  // [bp-0xfc]\n
    unsigned int v210;  // [bp-0xf8]\n
    unsigned int *v211;  // [bp-0xf4]\n
    struct struct_0 **v212;  // [bp-0xf0]\n
    char *v213;  // [bp-0xec]\n
    unsigned int v214;  // [bp-0xe8]\n
    unsigned int *v215;  // [bp-0xe4]\n
    struct struct_0 **v216;  // [bp-0xe0]\n
    char *v217;  // [bp-0xdc]\n
    unsigned int v218;  // [bp-0xd8]\n
    unsigned int *v219;  // [bp-0xd4]\n
    struct struct_0 **v220;  // [bp-0xd0]\n
    char *v221;  // [bp-0xcc]\n
    unsigned int v222;  // [bp-0xc8]\n
    unsigned int *v223;  // [bp-0xc4]\n
    struct struct_0 **v224;  // [bp-0xc0]\n
    char *v225;  // [bp-0xbc]\n
    unsigned int v226;  // [bp-0xb8]\n
    unsigned int *v227;  // [bp-0xb4]\n
    struct struct_0 **v228;  // [bp-0xb0]\n
    char v229;  // [bp-0xa9]\n
    unsigned int v230;  // [bp-0x94]\n
    unsigned int v231;  // [bp-0x90]\n
    unsigned int *v232;  // [bp-0x8c]\n
    struct struct_0 **v233;  // [bp-0x88]\n
    char v234;  // [bp-0x81]\n
    unsigned int v235;  // [bp-0x6c]\n
    unsigned int v236;  // [bp-0x68]\n
    unsigned int *v237;  // [bp-0x60]\n
    struct struct_0 **v238;  // [bp-0x5c]\n
    unsigned int v239;  // [bp-0x58]\n
    char v240;  // [bp-0x51]\n
    unsigned int *v241;  // [bp-0x50]\n
    struct struct_0 **v242;  // [bp-0x4c]\n
    unsigned int v243;  // [bp-0x48]\n
    char v244;  // [bp-0x41]\n
    unsigned int *v245;  // [bp-0x40]\n
    struct struct_0 **v246;  // [bp-0x3c]\n
    unsigned int v247;  // [bp-0x38]\n
    char v248;  // [bp-0x31]\n
    unsigned int *v249;  // [bp-0x30]\n
    struct struct_0 **v250;  // [bp-0x2c]\n
    unsigned int v251;  // [bp-0x28]\n
    char v252;  // [bp-0x21]\n
    unsigned int *v253;  // [bp-0x20]\n
    struct struct_0 **v254;  // [bp-0x1c]\n
    unsigned int v255;  // [bp-0x18]\n
    char v256;  // [bp-0x11]\n
    unsigned int *v257;  // [bp-0x10]\n
    struct struct_0 **v258;  // [bp-0xc]\n
    unsigned int v259;  // [bp-0x8]\n
    unsigned int v261;  // ebx\n
    unsigned int *v262;  // eax\n
    struct struct_0 **v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct_3 *v266;  // ecx\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_0 **v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_0 **v298;  // eax\n
    struct struct_0 **v300;  // eax\n
    unsigned int *v302;  // eax\n
    unsigned int *v303;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v305;  // eax\n
    struct struct_0 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax\n
    struct struct_0 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_0 **v312;  // eax\n
    unsigned int *v313;  // eax\n
    struct struct_0 **v314;  // eax\n
    unsigned int *v315;  // eax\n
    struct struct_0 **v316;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    unsigned int *v319;  // eax\n
    struct struct_0 **v320;  // eax\n
    unsigned int *v321;  // eax\n
    struct struct_0 **v322;  // eax\n
    unsigned int *v323;  // eax\n
    struct struct_0 **v324;  // eax\n
    unsigned int *v325;  // eax\n
    struct struct_0 **v326;  // eax\n
    struct struct_0 **v328;  // eax\n
    unsigned int *v330;  // eax\n
    unsigned int *v331;  // eax\n
    struct struct_0 **v332;  // eax\n
    unsigned int *v333;  // eax\n
    struct struct_0 **v334;  // eax\n
    struct struct_0 **v336;  // eax\n
    unsigned int *v338;  // eax\n
    unsigned int *v339;  // eax\n
    struct struct_0 **v340;  // eax\n
    struct struct_0 **v341;  // eax\n
    unsigned int *v342;  // eax\n
    unsigned int *v343;  // eax\n
    struct struct_0 **v344;  // eax\n
    unsigned int *v345;  // eax\n
    struct struct_0 **v346;  // eax\n
    struct struct_0 **v347;  // eax\n
    unsigned int *v348;  // eax\n
    unsigned int *v349;  // eax\n
    struct struct_0 **v350;  // eax\n
    struct struct_0 **v352;  // eax\n
    unsigned int *v354;  // eax\n
    unsigned int *v355;  // eax\n
    struct struct_0 **v356;  // eax\n
    unsigned int *v357;  // eax\n
    struct struct_0 **v358;  // eax\n
    struct struct_0 **v359;  // eax\n
    unsigned int *v360;  // eax\n
    unsigned int *v361;  // eax\n
    struct struct_0 **v362;  // eax\n
    struct struct_0 **v363;  // eax\n
    unsigned int *v364;  // eax\n
    unsigned int *v365;  // eax\n
    struct struct_0 **v366;  // eax\n
    unsigned int *v367;  // eax\n
    struct struct_0 **v368;  // eax\n
    unsigned int *v369;  // eax\n
    struct struct_0 **v370;  // eax\n
    struct struct_0 **v371;  // eax\n
    unsigned int *v372;  // eax\n
    struct struct_0 **v374;  // eax\n
    unsigned int *v376;  // eax\n
    struct struct_0 **v378;  // eax\n
    unsigned int *v380;  // eax\n
    unsigned int *v381;  // eax\n
    struct struct_0 **v382;  // eax\n
    unsigned int *v383;  // eax\n
    struct struct_0 **v384;  // eax\n
    unsigned int *v385;  // eax\n
    struct struct_0 **v386;  // eax\n
    unsigned int *v387;  // eax\n
    struct struct_0 **v388;  // eax\n
    struct struct_0 **v390;  // eax\n
    unsigned int *v392;  // eax\n
    unsigned int v393[2];  // ecx\n
    unsigned int *v394;  // eax\n
    struct struct_0 **v395;  // eax\n
    unsigned int *v396;  // eax\n
    struct struct_0 **v397;  // eax\n
    struct struct_0 **v398;  // eax\n
    unsigned int *v399;  // eax\n
    unsigned int *v400;  // eax\n
    struct struct_0 **v401;  // eax\n
    unsigned int *v402;  // eax\n
    struct struct_0 **v403;  // eax\n
    unsigned int *v404;  // eax, Other Possible Types: unsigned int\n
    unsigned int v405;  // ebx\n
\n
    v259 = v261;\n
    v37 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v58 = g_4f0348;\n
    v59 = g_4f034c;\n
    v60 = g_4f0350;\n
    v61 = g_4f0354;\n
    v57 = cgc__cookie;\n
    v56 = -1;\n
    if (cgc_sendline(1, \"===llamamarket===\", 17) < 0)\n
        cgc__terminate();\n
    v124 = v260;\n
    v123 = a0;\n
    if (*(v123) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(v124)->field_0;\n
    v262 = v123;\n
    *(v262) = *(v262) - 1;\n
    v263 = v124;\n
    *(v263) = &*(v263)->padding_1;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_41947b;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41947b:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v264 = v124;\n
    *(v264) = &(&*(v264)->field_0)[v122];\n
    v265 = v123;\n
    *(v265) = *(v265) - v122;\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v238 = v260;\n
    v237 = a0;\n
    memset(&v234, 0, 21);\n
    if (*(v237) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v266 = *(v238);\n
    v236 = v266->field_4;\n
    v235 = *(&v266->field_0);\n
    cgc_uint2str(&v234, 21, v235);\n
    v36 = &v234;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v234)) < 0)\n
        cgc__terminate();\n
    v267 = v237;\n
    *(v267) = *(v267) - 8;\n
    v268 = v238;\n
    *(v268) = &(*(v268))[1].padding_1[2];\n
    v104 = v260;\n
    v103 = a0;\n
    *(&v100[0]) = *(v104);\n
    memset(&v99, 0, 21);\n
    if (*(v103) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = 0;\n
    if (v100[0])\n
    {\n
        v35 = 0;\n
        if (v100[1])\n
        {\n
            v35 = 0;\n
            if (v100[2])\n
            {\n
                v35 = 0;\n
                if (v100[3])\n
                {\n
                    v35 = 0;\n
                    if (v100[4] << 24)\n
                    {\n
                        v35 = 0;\n
                        if (v100[5] << 16)\n
                        {\n
                            v35 = 0;\n
                            if (v100[6] << 8)\n
                                v35 = v100[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v101 = v35 & 1;\n
    v102 = 0;\n
    cgc_uint2str(&v99, 21, v101);\n
    v34 = &v99;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v269 = v103;\n
    *(v269) = *(v269) - 8;\n
    v270 = v104;\n
    *(v270) = &(*(v270))[1].padding_1[2];\n
    v190 = v260;\n
    v189 = a0;\n
    if (*(v189) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v188 = *(&*(v190)->field_0);\n
    v271 = v189;\n
    *(v271) = *(v271) - 2;\n
    v272 = v190;\n
    *(v272) = &*(v272)->padding_1[1];\n
    if (v188 <= *(v189) && !(!v188))\n
        goto LABEL_419a22;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_419a22:\n
    v187 = cgc_calloc(v188);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v187, *(v190), v188);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v273 = v189;\n
    *(v273) = *(v273) - v188;\n
    v274 = v190;\n
    *(v274) = &(&*(v274)->field_0)[v188];\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    v186 = v260;\n
    v185 = a0;\n
    if (*(v185) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v184 = *(&*(v186)->field_0);\n
    v275 = v185;\n
    *(v275) = *(v275) - 2;\n
    v276 = v186;\n
    *(v276) = &*(v276)->padding_1[1];\n
    if (v184 <= *(v185) && !(!v184))\n
        goto LABEL_419c5c;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_419c5c:\n
    v183 = cgc_calloc(v184);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v183, *(v186), v184);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v277 = v185;\n
    *(v277) = *(v277) - v184;\n
    v278 = v186;\n
    *(v278) = &(&*(v278)->field_0)[v184];\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    v258 = v260;\n
    v257 = a0;\n
    if (*(v257) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v256 = *(v258)->field_0;\n
    v279 = v257;\n
    *(v279) = *(v279) - 1;\n
    v280 = v258;\n
    *(v280) = &*(v280)->padding_1;\n
    if (v256 <= *(v257) && !(!v256))\n
        goto LABEL_419e76;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_419e76:\n
    v255 = cgc_calloc(v256);\n
    if (!v255)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v255, *(v258), v256);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v281 = v258;\n
    *(v281) = &(&*(v281)->field_0)[v256];\n
    v282 = v257;\n
    *(v282) = *(v282) - v256;\n
    cgc_checkheap();\n
    cgc_free(v255);\n
    v86 = v260;\n
    v85 = a0;\n
    *(&v83) = *(v86);\n
    memset(&v82, 0, 6);\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = 0;\n
    if (v83[0] << 8)\n
        v33 = v83[1];\n
    v84 = v33 & 1;\n
    cgc_uint2str(&v82, 6, v84);\n
    v32 = &v82;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v283 = v85;\n
    *(v283) = *(v283) - 2;\n
    v284 = v86;\n
    *(v284) = &*(v284)->padding_1[1];\n
    v254 = v260;\n
    v253 = a0;\n
    if (*(v253) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v252 = *(v254)->field_0;\n
    v285 = v253;\n
    *(v285) = *(v285) - 1;\n
    v286 = v254;\n
    *(v286) = &*(v286)->padding_1;\n
    if (v252 <= *(v253) && !(!v252))\n
        goto LABEL_41a1f6;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41a1f6:\n
    v251 = cgc_calloc(v252);\n
    if (!v251)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v251, *(v254), v252);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v287 = v254;\n
    *(v287) = &(&*(v287)->field_0)[v252];\n
    v288 = v253;\n
    *(v288) = *(v288) - v252;\n
    cgc_checkheap();\n
    cgc_free(v251);\n
    v174 = v260;\n
    v173 = a0;\n
    if (*(v173) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(&*(v174)->field_0);\n
    v289 = v173;\n
    *(v289) = *(v289) - 2;\n
    v290 = v174;\n
    *(v290) = &*(v290)->padding_1[1];\n
    if (v172 <= *(v173) && !(!v172))\n
        goto LABEL_41a40f;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41a40f:\n
    v171 = cgc_calloc(v172);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v171, *(v174), v172);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v291 = v173;\n
    *(v291) = *(v291) - v172;\n
    v292 = v174;\n
    *(v292) = &(&*(v292)->field_0)[v172];\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    v142 = v260;\n
    v141 = a0;\n
    memset(&v139, 0, 21);\n
    if (*(v141) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v140 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v49 = [D] x86g_create_fpucw(fpround<4>);\n
    v48 = v49 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v139, 21, v55);\n
    v31 = &v139;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v293 = v141;\n
    *(v293) = *(v293) - 8;\n
    v294 = v142;\n
    *(v294) = &(*(v294))[1].padding_1[2];\n
    v170 = v260;\n
    v169 = a0;\n
    if (*(v169) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v168 = *(&*(v170)->field_0);\n
    v295 = v169;\n
    *(v295) = *(v295) - 2;\n
    v296 = v170;\n
    *(v296) = &*(v296)->padding_1[1];\n
    if (v168 <= *(v169) && !(!v168))\n
        goto LABEL_41a7bd;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41a7bd:\n
    v167 = cgc_calloc(v168);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v167, *(v170), v168);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v297 = v169;\n
    *(v297) = *(v297) - v168;\n
    v298 = v170;\n
    *(v298) = &(&*(v298)->field_0)[v168];\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    v228 = v260;\n
    v227 = a0;\n
    if (*(v227) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v227) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v227);\n
    v226 = v30;\n
    if (!v226)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v225 = cgc_calloc(134);\n
    if (!v225)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v225, &v37[18].padding_0[182]);\n
    cgc_strncpy(v225 + 5, *(v228), v226);\n
    v300 = v228;\n
    *(v300) = &(&*(v300)->field_4)[cgc_strlen(v225)];\n
    v302 = v227;\n
    *(v302) = *(v302) - (cgc_strlen(v225) + -4);\n
    cgc_checkheap();\n
    cgc_free(v225);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v150 = v260;\n
    v149 = a0;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = *(&*(v150)->field_0);\n
    cgc_uint2str(&v147, 12, v148);\n
    v29 = &v147;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v303 = v149;\n
    *(v303) = *(v303) - 4;\n
    v304 = v150;\n
    *(v304) = &*(v304)->field_4;\n
    v81 = v260;\n
    v80 = a0;\n
    *(&v78) = *(v81);\n
    memset(&v77, 0, 6);\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = 0;\n
    if (v78[0] << 8)\n
        v28 = v78[1];\n
    v79 = v28 & 1;\n
    cgc_uint2str(&v77, 6, v79);\n
    v27 = &v77;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v305 = v80;\n
    *(v305) = *(v305) - 2;\n
    v306 = v81;\n
    *(v306) = &*(v306)->padding_1[1];\n
    v130 = v260;\n
    v129 = a0;\n
    *(&v128[0]) = *(v130);\n
    if (*(v129) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v307 = v129;\n
    *(v307) = *(v307) - 2;\n
    v308 = v130;\n
    *(v308) = &*(v308)->padding_1[1];\n
    v56 = *(&v128[0]);\n
    v138 = v260;\n
    v137 = a0;\n
    memset(&v135, 0, 21);\n
    if (*(v137) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v136 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v47 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1134, size=2, endness=Iend_LE)))));\n
    v46 = v47 | 0xc00;\n
    v54 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v135, 21, v54);\n
    v26 = &v135;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v309 = v137;\n
    *(v309) = *(v309) - 8;\n
    v310 = v138;\n
    *(v310) = &(*(v310))[1].padding_1[2];\n
    v200 = v260;\n
    v199 = a0;\n
    v197 = &*(v200);\n
    memset(&v196, 0, 12);\n
    if (*(v199) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v197->field_0 << 24)\n
    {\n
        v25 = 0;\n
        if (v197->padding_1[0] << 16)\n
        {\n
            v25 = 0;\n
            if (v197->padding_1[1] << 8)\n
                v25 = v197->padding_1[2];\n
        }\n
    }\n
    v198 = v25 & 1;\n
    cgc_uint2str(&v196, 12, v198);\n
    v24 = &v196;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v196)) < 0)\n
        cgc__terminate();\n
    v311 = v199;\n
    *(v311) = *(v311) - 4;\n
    v312 = v200;\n
    *(v312) = &*(v312)->field_4;\n
    v146 = v260;\n
    v145 = a0;\n
    memset(&v143, 0, 12);\n
    if (*(v145) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(&*(v146)->field_0);\n
    cgc_uint2str(&v143, 12, v144);\n
    v23 = &v143;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v143)) < 0)\n
        cgc__terminate();\n
    v313 = v145;\n
    *(v313) = *(v313) - 4;\n
    v314 = v146;\n
    *(v314) = &*(v314)->field_4;\n
    v120 = v260;\n
    v119 = a0;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(v120)->field_0;\n
    v315 = v119;\n
    *(v315) = *(v315) - 1;\n
    v316 = v120;\n
    *(v316) = &*(v316)->padding_1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_41b461;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41b461:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v317 = v120;\n
    *(v317) = &(&*(v317)->field_0)[v118];\n
    v318 = v119;\n
    *(v318) = *(v318) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v195 = v260;\n
    v194 = a0;\n
    v192 = &*(v195);\n
    memset(&v191, 0, 12);\n
    if (*(v194) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v192->field_0 << 24)\n
    {\n
        v22 = 0;\n
        if (v192->padding_1[0] << 16)\n
        {\n
            v22 = 0;\n
            if (v192->padding_1[1] << 8)\n
                v22 = v192->padding_1[2];\n
        }\n
    }\n
    v193 = v22 & 1;\n
    cgc_uint2str(&v191, 12, v193);\n
    v21 = &v191;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v191)) < 0)\n
        cgc__terminate();\n
    v319 = v194;\n
    *(v319) = *(v319) - 4;\n
    v320 = v195;\n
    *(v320) = &*(v320)->field_4;\n
    v182 = v260;\n
    v181 = a0;\n
    if (*(v181) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v180 = *(&*(v182)->field_0);\n
    v321 = v181;\n
    *(v321) = *(v321) - 2;\n
    v322 = v182;\n
    *(v322) = &*(v322)->padding_1[1];\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_41b85c;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41b85c:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v323 = v181;\n
    *(v323) = *(v323) - v180;\n
    v324 = v182;\n
    *(v324) = &(&*(v324)->field_0)[v180];\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v98 = v260;\n
    v97 = a0;\n
    *(&v94[0]) = *(v98);\n
    memset(&v93, 0, 21);\n
    if (*(v97) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v94[0])\n
    {\n
        v20 = 0;\n
        if (v94[1])\n
        {\n
            v20 = 0;\n
            if (v94[2])\n
            {\n
                v20 = 0;\n
                if (v94[3])\n
                {\n
                    v20 = 0;\n
                    if (v94[4] << 24)\n
                    {\n
                        v20 = 0;\n
                        if (v94[5] << 16)\n
                        {\n
                            v20 = 0;\n
                            if (v94[6] << 8)\n
                                v20 = v94[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v95 = v20 & 1;\n
    v96 = 0;\n
    cgc_uint2str(&v93, 21, v95);\n
    v19 = &v93;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v93)) < 0)\n
        cgc__terminate();\n
    v325 = v97;\n
    *(v325) = *(v325) - 8;\n
    v326 = v98;\n
    *(v326) = &(*(v326))[1].padding_1[2];\n
    v224 = v260;\n
    v223 = a0;\n
    if (*(v223) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v223) >= 128)\n
        v18 = 128;\n
    else\n
        v18 = *(v223);\n
    v222 = v18;\n
    if (!v222)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v221 = cgc_calloc(134);\n
    if (!v221)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v221, &v37[18].padding_0[182]);\n
    cgc_strncpy(v221 + 5, *(v224), v222);\n
    v328 = v224;\n
    *(v328) = &(&*(v328)->field_4)[cgc_strlen(v221)];\n
    v330 = v223;\n
    *(v330) = *(v330) - (cgc_strlen(v221) + -4);\n
    cgc_checkheap();\n
    cgc_free(v221);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v127 = v260;\n
    v126 = a0;\n
    v125 = &*(v127)->field_0;\n
    if (*(v126) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v331 = v126;\n
    *(v331) = *(v331) - 1;\n
    v332 = v127;\n
    *(v332) = &*(v332)->padding_1;\n
    v56 = *(v125);\n
    v134 = v260;\n
    v133 = a0;\n
    memset(&v131, 0, 21);\n
    if (*(v133) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v132 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v45 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1138, size=2, endness=Iend_LE)))));\n
    v44 = v45 | 0xc00;\n
    v53 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v131, 21, v53);\n
    v17 = &v131;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v333 = v133;\n
    *(v333) = *(v333) - 8;\n
    v334 = v134;\n
    *(v334) = &(*(v334))[1].padding_1[2];\n
    v220 = v260;\n
    v219 = a0;\n
    if (*(v219) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v219) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v219);\n
    v218 = v16;\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v217 = cgc_calloc(134);\n
    if (!v217)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v217, &v37[18].padding_0[182]);\n
    cgc_strncpy(v217 + 5, *(v220), v218);\n
    v336 = v220;\n
    *(v336) = &(&*(v336)->field_4)[cgc_strlen(v217)];\n
    v338 = v219;\n
    *(v338) = *(v338) - (cgc_strlen(v217) + -4);\n
    cgc_checkheap();\n
    cgc_free(v217);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v116 = v260;\n
    v115 = a0;\n
    if (*(v115) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(v116)->field_0;\n
    v339 = v115;\n
    *(v339) = *(v339) - 1;\n
    v340 = v116;\n
    *(v340) = &*(v340)->padding_1;\n
    if (v114 <= *(v115) && !(!v114))\n
        goto LABEL_41c3fb;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41c3fb:\n
    v113 = cgc_calloc(v114);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v113, *(v116), v114);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v341 = v116;\n
    *(v341) = &(&*(v341)->field_0)[v114];\n
    v342 = v115;\n
    *(v342) = *(v342) - v114;\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    v76 = v260;\n
    v75 = a0;\n
    v73 = &*(v76)->field_0;\n
    memset(&v72, 0, 6);\n
    if (*(v75) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (*(v73) << 8)\n
        v15 = v73[1];\n
    v74 = v15 & 1;\n
    cgc_uint2str(&v72, 6, v74);\n
    v14 = &v72;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v343 = v75;\n
    *(v343) = *(v343) - 2;\n
    v344 = v76;\n
    *(v344) = &*(v344)->padding_1[1];\n
    v250 = v260;\n
    v249 = a0;\n
    if (*(v249) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v248 = *(v250)->field_0;\n
    v345 = v249;\n
    *(v345) = *(v345) - 1;\n
    v346 = v250;\n
    *(v346) = &*(v346)->padding_1;\n
    if (v248 <= *(v249) && !(!v248))\n
        goto LABEL_41c79c;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41c79c:\n
    v247 = cgc_calloc(v248);\n
    if (!v247)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v247, *(v250), v248);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v347 = v250;\n
    *(v347) = &(&*(v347)->field_0)[v248];\n
    v348 = v249;\n
    *(v348) = *(v348) - v248;\n
    cgc_checkheap();\n
    cgc_free(v247);\n
    v71 = v260;\n
    v70 = a0;\n
    v68 = &*(v71)->field_0;\n
    memset(&v67, 0, 6);\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (*(v68) << 8)\n
        v13 = v68[1];\n
    v69 = v13 & 1;\n
    cgc_uint2str(&v67, 6, v69);\n
    v12 = &v67;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v349 = v70;\n
    *(v349) = *(v349) - 2;\n
    v350 = v71;\n
    *(v350) = &*(v350)->padding_1[1];\n
    v216 = v260;\n
    v215 = a0;\n
    if (*(v215) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v215) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v215);\n
    v214 = v11;\n
    if (!v214)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v213 = cgc_calloc(134);\n
    if (!v213)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v213, &v37[18].padding_0[182]);\n
    cgc_strncpy(v213 + 5, *(v216), v214);\n
    v352 = v216;\n
    *(v352) = &(&*(v352)->field_4)[cgc_strlen(v213)];\n
    v354 = v215;\n
    *(v354) = *(v354) - (cgc_strlen(v213) + -4);\n
    cgc_checkheap();\n
    cgc_free(v213);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v162 = v260;\n
    v161 = a0;\n
    memset(&v159, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v160 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1142, size=2, endness=Iend_LE)))));\n
    v42 = v43 | 0xc00;\n
    v52 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v159, 12, v52);\n
    v10 = &v159;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v159)) < 0)\n
        cgc__terminate();\n
    v355 = v161;\n
    *(v355) = *(v355) - 4;\n
    v356 = v162;\n
    *(v356) = &*(v356)->field_4;\n
    v246 = v260;\n
    v245 = a0;\n
    if (*(v245) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v244 = *(v246)->field_0;\n
    v357 = v245;\n
    *(v357) = *(v357) - 1;\n
    v358 = v246;\n
    *(v358) = &*(v358)->padding_1;\n
    if (v244 <= *(v245) && !(!v244))\n
        goto LABEL_41cf11;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41cf11:\n
    v243 = cgc_calloc(v244);\n
    if (!v243)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v243, *(v246), v244);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v359 = v246;\n
    *(v359) = &(&*(v359)->field_0)[v244];\n
    v360 = v245;\n
    *(v360) = *(v360) - v244;\n
    cgc_checkheap();\n
    cgc_free(v243);\n
    v242 = v260;\n
    v241 = a0;\n
    if (*(v241) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v240 = *(v242)->field_0;\n
    v361 = v241;\n
    *(v361) = *(v361) - 1;\n
    v362 = v242;\n
    *(v362) = &*(v362)->padding_1;\n
    if (v240 <= *(v241) && !(!v240))\n
        goto LABEL_41d10a;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41d10a:\n
    v239 = cgc_calloc(v240);\n
    if (!v239)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v239, *(v242), v240);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v363 = v242;\n
    *(v363) = &(&*(v363)->field_0)[v240];\n
    v364 = v241;\n
    *(v364) = *(v364) - v240;\n
    cgc_checkheap();\n
    cgc_free(v239);\n
    v166 = v260;\n
    v165 = a0;\n
    if (*(v165) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v164 = *(&*(v166)->field_0);\n
    v365 = v165;\n
    *(v365) = *(v365) - 2;\n
    v366 = v166;\n
    *(v366) = &*(v366)->padding_1[1];\n
    if (v164 <= *(v165) && !(!v164))\n
        goto LABEL_41d323;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41d323:\n
    v163 = cgc_calloc(v164);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v163, *(v166), v164);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v367 = v165;\n
    *(v367) = *(v367) - v164;\n
    v368 = v166;\n
    *(v368) = &(&*(v368)->field_0)[v164];\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    v112 = v260;\n
    v111 = a0;\n
    if (*(v111) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(v112)->field_0;\n
    v369 = v111;\n
    *(v369) = *(v369) - 1;\n
    v370 = v112;\n
    *(v370) = &*(v370)->padding_1;\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_41d55b;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41d55b:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v371 = v112;\n
    *(v371) = &(&*(v371)->field_0)[v110];\n
    v372 = v111;\n
    *(v372) = *(v372) - v110;\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v212 = v260;\n
    v211 = a0;\n
    if (*(v211) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v211) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v211);\n
    v210 = v9;\n
    if (!v210)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v209 = cgc_calloc(134);\n
    if (!v209)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v209, &v37[18].padding_0[182]);\n
    cgc_strncpy(v209 + 5, *(v212), v210);\n
    v374 = v212;\n
    *(v374) = &(&*(v374)->field_4)[cgc_strlen(v209)];\n
    v376 = v211;\n
    *(v376) = *(v376) - (cgc_strlen(v209) + -4);\n
    cgc_checkheap();\n
    cgc_free(v209);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v208 = v260;\n
    v207 = a0;\n
    if (*(v207) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v207) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v207);\n
    v206 = v8;\n
    if (!v206)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v205 = cgc_calloc(134);\n
    if (!v205)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v205, &v37[18].padding_0[182]);\n
    cgc_strncpy(v205 + 5, *(v208), v206);\n
    v378 = v208;\n
    *(v378) = &(&*(v378)->field_4)[cgc_strlen(v205)];\n
    v380 = v207;\n
    *(v380) = *(v380) - (cgc_strlen(v205) + -4);\n
    cgc_checkheap();\n
    cgc_free(v205);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v92 = v260;\n
    v91 = a0;\n
    *(&v88[0]) = *(v92);\n
    memset(&v87, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v88[0])\n
    {\n
        v7 = 0;\n
        if (v88[1])\n
        {\n
            v7 = 0;\n
            if (v88[2])\n
            {\n
                v7 = 0;\n
                if (v88[3])\n
                {\n
                    v7 = 0;\n
                    if (v88[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v88[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v88[6] << 8)\n
                                v7 = v88[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v89 = v7 & 1;\n
    v90 = 0;\n
    cgc_uint2str(&v87, 21, v89);\n
    v6 = &v87;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v381 = v91;\n
    *(v381) = *(v381) - 8;\n
    v382 = v92;\n
    *(v382) = &(*(v382))[1].padding_1[2];\n
    v66 = v260;\n
    v65 = a0;\n
    *(&v63) = *(v66);\n
    memset(&v62, 0, 6);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v63[0] << 8)\n
        v5 = v63[1];\n
    v64 = v5 & 1;\n
    cgc_uint2str(&v62, 6, v64);\n
    v4 = &v62;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v383 = v65;\n
    *(v383) = *(v383) - 2;\n
    v384 = v66;\n
    *(v384) = &*(v384)->padding_1[1];\n
    v178 = v260;\n
    v177 = a0;\n
    if (*(v177) < 2)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = *(&*(v178)->field_0);\n
    v385 = v177;\n
    *(v385) = *(v385) - 2;\n
    v386 = v178;\n
    *(v386) = &*(v386)->padding_1[1];\n
    if (v176 <= *(v177) && !(!v176))\n
        goto LABEL_41e066;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41e066:\n
    v175 = cgc_calloc(v176);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v175, *(v178), v176);\n
    if (cgc_sendline(1, &v37[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v387 = v177;\n
    *(v387) = *(v387) - v176;\n
    v388 = v178;\n
    *(v388) = &(&*(v388)->field_0)[v176];\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    v204 = v260;\n
    v203 = a0;\n
    if (*(v203) <= 0)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v203) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v203);\n
    v202 = v3;\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v201 = cgc_calloc(134);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v201, &v37[18].padding_0[182]);\n
    cgc_strncpy(v201 + 5, *(v204), v202);\n
    v390 = v204;\n
    *(v390) = &(&*(v390)->field_4)[cgc_strlen(v201)];\n
    v392 = v203;\n
    *(v392) = *(v392) - (cgc_strlen(v201) + -4);\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    if (cgc_sendline(1, &v37[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v233 = v260;\n
    v232 = a0;\n
    memset(&v229, 0, 21);\n
    if (*(v232) < 8)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v393 = *(v233);\n
    v231 = v393[1];\n
    v230 = v393[0];\n
    cgc_uint2str(&v229, 21, v230);\n
    v2 = &v229;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v229)) < 0)\n
        cgc__terminate();\n
    v394 = v232;\n
    *(v394) = *(v394) - 8;\n
    v395 = v233;\n
    *(v395) = &(*(v395))[1].padding_1[2];\n
    v108 = v260;\n
    v107 = a0;\n
    if (*(v107) < 1)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(v108)->field_0;\n
    v396 = v107;\n
    *(v396) = *(v396) - 1;\n
    v397 = v108;\n
    *(v397) = &*(v397)->padding_1;\n
    if (v106 <= *(v107) && !(!v106))\n
        goto LABEL_41e66b;\n
    if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41e66b:\n
    v105 = cgc_calloc(v106);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v105, *(v108), v106);\n
    if (cgc_sendline(1, &v37[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v398 = v108;\n
    *(v398) = &(&*(v398)->field_0)[v106];\n
    v399 = v107;\n
    *(v399) = *(v399) - v106;\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    v158 = v260;\n
    v157 = a0;\n
    memset(&v155, 0, 12);\n
    if (*(v157) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v156 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1146, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v51 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v155, 12, v51);\n
    v1 = &v155;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v400 = v157;\n
    *(v400) = *(v400) - 4;\n
    v401 = v158;\n
    *(v401) = &*(v401)->field_4;\n
    v154 = v260;\n
    v153 = a0;\n
    memset(&v151, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, &v37[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v152 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1150, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v151, 12, v50);\n
    v0 = &v151;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v151)) < 0)\n
        cgc__terminate();\n
    v402 = v153;\n
    *(v402) = *(v402) - 4;\n
    v403 = v154;\n
    *(v403) = &*(v403)->field_4;\n
    v57 ^= v37->field_260;\n
    if (v57)\n
        cgc___stack_cookie_fail();\n
    v404 = a0;\n
    if (*(v404) > 0 && v56 >= 0 && v56 < 4)\n
        v404 = (&v58)[v56](v260);\n
    v405 = v259;\n
    return v404;\n
}\n
", "4319992:sub_41eaf8": null, "4320000:cgc_process_llamacarbonator": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamacarbonator(struct struct_1 **v142, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x314]\n
    char v1;  // [bp-0x30d]\n
    struct_0 *v2;  // [bp-0x30c]\n
    struct_0 *v3;  // [bp-0x308]\n
    struct_0 *v4;  // [bp-0x304]\n
    struct_0 *v5;  // [bp-0x300]\n
    char v6;  // [bp-0x2f9]\n
    unsigned int v7;  // [bp-0x2f8]\n
    struct_0 *v8;  // [bp-0x2f4]\n
    struct_0 *v9;  // [bp-0x2f0]\n
    struct_0 *v10;  // [bp-0x2ec]\n
    unsigned int v11;  // [bp-0x2e8]\n
    struct_0 *v12;  // [bp-0x2e4]\n
    struct_0 *v13;  // [bp-0x2e0]\n
    char v14;  // [bp-0x2d9]\n
    struct_0 *v15;  // [bp-0x2d8]\n
    struct_0 *v16;  // [bp-0x2d4]\n
    char v17;  // [bp-0x2cd]\n
    struct_0 *v18;  // [bp-0x2cc]\n
    struct_0 *v19;  // [bp-0x2c8]\n
    unsigned int v20;  // [bp-0x2c4]\n
    struct_0 *v21;  // [bp-0x2c0]\n
    struct_0 *v22;  // [bp-0x2bc]\n
    struct_2 *v23;  // [bp-0x2b8]\n
    unsigned short v24;  // [bp-0x2b4]\n
    unsigned short v25;  // [bp-0x2b2]\n
    unsigned short v26;  // [bp-0x2b0]\n
    unsigned short v27;  // [bp-0x2ae]\n
    unsigned short v28;  // [bp-0x2ac]\n
    unsigned short v29;  // [bp-0x2aa]\n
    unsigned short v30;  // [bp-0x2a8]\n
    unsigned short v31;  // [bp-0x2a6]\n
    unsigned short v32;  // [bp-0x2a4]\n
    unsigned short v33;  // [bp-0x2a2]\n
    unsigned short v34;  // [bp-0x2a0]\n
    unsigned short v35;  // [bp-0x29e]\n
    unsigned short v36;  // [bp-0x29c]\n
    unsigned short v37;  // [bp-0x29a]\n
    unsigned short v38;  // [bp-0x298]\n
    unsigned short v39;  // [bp-0x296]\n
    unsigned long v40;  // [bp-0x294]\n
    unsigned long v41;  // [bp-0x28c]\n
    unsigned long v42;  // [bp-0x284]\n
    unsigned long v43;  // [bp-0x27c]\n
    unsigned long v44;  // [bp-0x274]\n
    unsigned long v45;  // [bp-0x26c]\n
    unsigned long v46;  // [bp-0x264]\n
    unsigned long v47;  // [bp-0x25c]\n
    struct struct_3 **v48;  // [bp-0x250]\n
    unsigned int v49;  // [bp-0x24c]\n
    char v50;  // [bp-0x248]\n
    char v51;  // [bp-0x246]\n
    char v52[2];  // [bp-0x240]\n
    unsigned short v53;  // [bp-0x23a]\n
    unsigned int *v54;  // [bp-0x238]\n
    struct struct_1 **v55;  // [bp-0x234]\n
    char v56;  // [bp-0x22d]\n
    char v57[8];  // [bp-0x218]\n
    unsigned int v58;  // [bp-0x214]\n
    void* v59;  // [bp-0x210]\n
    unsigned int *v60;  // [bp-0x208]\n
    struct struct_1 **v61;  // [bp-0x204]\n
    char v62;  // [bp-0x1fd]\n
    char v63[8];  // [bp-0x1e8]\n
    unsigned int v64;  // [bp-0x1e4]\n
    void* v65;  // [bp-0x1e0]\n
    unsigned int *v66;  // [bp-0x1dc]\n
    struct struct_1 **v67;  // [bp-0x1d8]\n
    unsigned int v68;  // [bp-0x1d4]\n
    char v69;  // [bp-0x1cd]\n
    unsigned int *v70;  // [bp-0x1cc]\n
    struct struct_1 **v71;  // [bp-0x1c8]\n
    char *v72;  // [bp-0x1c4]\n
    unsigned int v73;  // [bp-0x1c0]\n
    unsigned int *v74;  // [bp-0x1bc]\n
    struct struct_1 **v75;  // [bp-0x1b8]\n
    char *v76;  // [bp-0x1b4]\n
    unsigned int v77;  // [bp-0x1b0]\n
    unsigned int *v78;  // [bp-0x1ac]\n
    struct struct_1 **v79;  // [bp-0x1a8]\n
    char v80;  // [bp-0x1a4]\n
    unsigned short v81;  // [bp-0x19e]\n
    unsigned int *v82;  // [bp-0x19c]\n
    struct struct_1 **v83;  // [bp-0x198]\n
    char v84;  // [bp-0x191]\n
    char v85;  // [bp-0x18d]\n
    unsigned int *v86;  // [bp-0x18c]\n
    struct struct_1 **v87;  // [bp-0x188]\n
    char v88;  // [bp-0x181]\n
    char v89;  // [bp-0x17d]\n
    unsigned int *v90;  // [bp-0x17c]\n
    struct struct_1 **v91;  // [bp-0x178]\n
    char v92;  // [bp-0x171]\n
    char v93;  // [bp-0x16d]\n
    unsigned int *v94;  // [bp-0x16c]\n
    struct struct_1 **v95;  // [bp-0x168]\n
    char v96;  // [bp-0x161]\n
    unsigned long v97;  // [bp-0x14c]\n
    unsigned int *v98;  // [bp-0x144]\n
    struct struct_1 **v99;  // [bp-0x140]\n
    char v100;  // [bp-0x139]\n
    unsigned long v101;  // [bp-0x124]\n
    unsigned int *v102;  // [bp-0x11c]\n
    struct struct_1 **v103;  // [bp-0x118]\n
    char v104;  // [bp-0x111]\n
    unsigned long v105;  // [bp-0xfc]\n
    unsigned int *v106;  // [bp-0xf4]\n
    struct struct_1 **v107;  // [bp-0xf0]\n
    char v108;  // [bp-0xe9]\n
    unsigned long v109;  // [bp-0xd4]\n
    unsigned int *v110;  // [bp-0xcc]\n
    struct struct_1 **v111;  // [bp-0xc8]\n
    char v112;  // [bp-0xc1]\n
    unsigned long v113;  // [bp-0xac]\n
    unsigned int *v114;  // [bp-0xa4]\n
    struct struct_1 **v115;  // [bp-0xa0]\n
    char v116;  // [bp-0x99]\n
    unsigned long v117;  // [bp-0x84]\n
    unsigned int *v118;  // [bp-0x7c]\n
    struct struct_1 **v119;  // [bp-0x78]\n
    char v120;  // [bp-0x74]\n
    unsigned int v121;  // [bp-0x68]\n
    unsigned int *v122;  // [bp-0x64]\n
    struct struct_1 **v123;  // [bp-0x60]\n
    char v124;  // [bp-0x5c]\n
    unsigned int v125;  // [bp-0x50]\n
    unsigned int *v126;  // [bp-0x4c]\n
    struct struct_1 **v127;  // [bp-0x48]\n
    char v128;  // [bp-0x44]\n
    char v129[4];  // [bp-0x38]\n
    unsigned int v130;  // [bp-0x34]\n
    unsigned int *v131;  // [bp-0x30]\n
    struct struct_1 **v132;  // [bp-0x2c]\n
    char *v133;  // [bp-0x28]\n
    unsigned int v134;  // [bp-0x24]\n
    unsigned int *v135;  // [bp-0x20]\n
    struct struct_1 **v136;  // [bp-0x1c]\n
    unsigned int v137;  // [bp-0x18]\n
    char v138;  // [bp-0x11]\n
    unsigned int *v139;  // [bp-0x10]\n
    struct struct_1 **v140;  // [bp-0xc]\n
    unsigned int v141;  // [bp-0x8]\n
    unsigned int v143;  // ebx\n
    unsigned int *v144;  // eax\n
    struct struct_1 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_1 **v147;  // eax\n
    struct struct_1 **v149;  // eax\n
    unsigned int *v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_1 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_1 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_1 **v157;  // eax\n
    struct struct_1 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_1 **v161;  // eax\n
    unsigned int *v162;  // eax\n
    struct struct_1 **v163;  // eax\n
    unsigned int *v164;  // eax\n
    struct struct_1 **v165;  // eax\n
    struct struct_1 **v166;  // eax\n
    unsigned int *v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_1 **v169;  // eax\n
    unsigned int *v170;  // eax\n
    struct struct_1 **v171;  // eax\n
    struct struct_1 **v173;  // eax\n
    unsigned int *v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_1 **v177;  // eax\n
    unsigned int *v178;  // eax\n
    struct struct_1 **v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_1 **v181;  // eax\n
    struct struct_1 **v183;  // eax\n
    unsigned int *v185;  // eax\n
    unsigned int *v186;  // eax\n
    struct struct_1 **v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_1 **v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_1 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_1 **v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_1 **v195;  // eax\n
    unsigned int *v196;  // eax, Other Possible Types: unsigned int\n
    unsigned int v197;  // ebx\n
\n
    v141 = v143;\n
    v23 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v49 = cgc__cookie;\n
    v48 = -1;\n
    if (cgc_sendline(1, \"===llamacarbonator===\", 21) < 0)\n
        cgc__terminate();\n
    v119 = v142;\n
    v118 = a0;\n
    memset(&v116, 0, 21);\n
    if (*(v118) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v117 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(fpround<4>);\n
    v38 = v39 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v116, 21, v47);\n
    v22 = &v116;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v116)) < 0)\n
        cgc__terminate();\n
    v144 = v118;\n
    *(v144) = *(v144) - 8;\n
    v145 = v119;\n
    *(v145) = *(v145) + 1;\n
    v127 = v142;\n
    v126 = a0;\n
    memset(&v124, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v125 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-662, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v124, 12, v46);\n
    v21 = &v124;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v146 = v126;\n
    *(v146) = *(v146) - 4;\n
    v147 = v127;\n
    *(v147) = &*(v147)->field_4;\n
    v79 = v142;\n
    v78 = a0;\n
    if (*(v78) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v78) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v78);\n
    v77 = v20;\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = cgc_calloc(134);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v76, &v23[18].padding_0[182]);\n
    cgc_strncpy(v76 + 5, *(v79), v77);\n
    v149 = v79;\n
    *(v149) = &(&*(v149)->field_4)[cgc_strlen(v76)];\n
    v151 = v78;\n
    *(v151) = *(v151) - (cgc_strlen(v76) + -4);\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v115 = v142;\n
    v114 = a0;\n
    memset(&v112, 0, 21);\n
    if (*(v114) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v113 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-666, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v112, 21, v45);\n
    v19 = &v112;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v152 = v114;\n
    *(v152) = *(v152) - 8;\n
    v153 = v115;\n
    *(v153) = *(v153) + 1;\n
    v95 = v142;\n
    v94 = a0;\n
    memset(&v92, 0, 4);\n
    if (*(v94) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = *(v95)->field_0;\n
    cgc_uint2str(&v92, 4, v93);\n
    v18 = &v92;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v154 = v94;\n
    *(v154) = *(v154) - 1;\n
    v155 = v95;\n
    *(v155) = &*(v155)->padding_1;\n
    v71 = v142;\n
    v70 = a0;\n
    if (*(v70) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v69 = *(v71)->field_0;\n
    v156 = v70;\n
    *(v156) = *(v156) - 1;\n
    v157 = v71;\n
    *(v157) = &*(v157)->padding_1;\n
    if (v69 <= *(v70) && !(!v69))\n
        goto LABEL_41f470;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41f470:\n
    v68 = cgc_calloc(v69);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v68, *(v71), v69);\n
    if (cgc_sendline(1, &v23[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v158 = v71;\n
    *(v158) = &(&*(v158)->field_0)[v69];\n
    v159 = v70;\n
    *(v159) = *(v159) - v69;\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    v67 = v142;\n
    v66 = a0;\n
    *(&v63[0]) = *(v67);\n
    memset(&v62, 0, 21);\n
    if (*(v66) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v63[0])\n
    {\n
        v17 = 0;\n
        if (v63[1])\n
        {\n
            v17 = 0;\n
            if (v63[2])\n
            {\n
                v17 = 0;\n
                if (v63[3])\n
                {\n
                    v17 = 0;\n
                    if (v63[4] << 24)\n
                    {\n
                        v17 = 0;\n
                        if (v63[5] << 16)\n
                        {\n
                            v17 = 0;\n
                            if (v63[6] << 8)\n
                                v17 = v63[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v64 = v17 & 1;\n
    v65 = 0;\n
    cgc_uint2str(&v62, 21, v64);\n
    v16 = &v62;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v160 = v66;\n
    *(v160) = *(v160) - 8;\n
    v161 = v67;\n
    *(v161) = *(v161) + 1;\n
    v111 = v142;\n
    v110 = a0;\n
    memset(&v108, 0, 21);\n
    if (*(v110) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v109 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-670, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v108, 21, v44);\n
    v15 = &v108;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v108)) < 0)\n
        cgc__terminate();\n
    v162 = v110;\n
    *(v162) = *(v162) - 8;\n
    v163 = v111;\n
    *(v163) = *(v163) + 1;\n
    v140 = v142;\n
    v139 = a0;\n
    if (*(v139) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v138 = *(v140)->field_0;\n
    v164 = v139;\n
    *(v164) = *(v164) - 1;\n
    v165 = v140;\n
    *(v165) = &*(v165)->padding_1;\n
    if (v138 <= *(v139) && !(!v138))\n
        goto LABEL_41fa46;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_41fa46:\n
    v137 = cgc_calloc(v138);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v137, *(v140), v138);\n
    if (cgc_sendline(1, &v23[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v166 = v140;\n
    *(v166) = &(&*(v166)->field_0)[v138];\n
    v167 = v139;\n
    *(v167) = *(v167) - v138;\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    v61 = v142;\n
    v60 = a0;\n
    *(&v57[0]) = *(v61);\n
    memset(&v56, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v57[0])\n
    {\n
        v14 = 0;\n
        if (v57[1])\n
        {\n
            v14 = 0;\n
            if (v57[2])\n
            {\n
                v14 = 0;\n
                if (v57[3])\n
                {\n
                    v14 = 0;\n
                    if (v57[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v57[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v57[6] << 8)\n
                                v14 = v57[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v58 = v14 & 1;\n
    v59 = 0;\n
    cgc_uint2str(&v56, 21, v58);\n
    v13 = &v56;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v168 = v60;\n
    *(v168) = *(v168) - 8;\n
    v169 = v61;\n
    *(v169) = *(v169) + 1;\n
    v83 = v142;\n
    v82 = a0;\n
    memset(&v80, 0, 6);\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v81 = *(&*(v83)->field_0);\n
    cgc_uint2str(&v80, 6, v81);\n
    v12 = &v80;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v80)) < 0)\n
        cgc__terminate();\n
    v170 = v82;\n
    *(v170) = *(v170) - 2;\n
    v171 = v83;\n
    *(v171) = &*(v171)->field_2;\n
    v136 = v142;\n
    v135 = a0;\n
    if (*(v135) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v135) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v135);\n
    v134 = v11;\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = cgc_calloc(134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v133, &v23[18].padding_0[182]);\n
    cgc_strncpy(v133 + 5, *(v136), v134);\n
    v173 = v136;\n
    *(v173) = &(&*(v173)->field_4)[cgc_strlen(v133)];\n
    v175 = v135;\n
    *(v175) = *(v175) - (cgc_strlen(v133) + -4);\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v107 = v142;\n
    v106 = a0;\n
    memset(&v104, 0, 21);\n
    if (*(v106) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v105 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v31 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-674, size=2, endness=Iend_LE)))));\n
    v30 = v31 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v104, 21, v43);\n
    v10 = &v104;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v104)) < 0)\n
        cgc__terminate();\n
    v176 = v106;\n
    *(v176) = *(v176) - 8;\n
    v177 = v107;\n
    *(v177) = *(v177) + 1;\n
    v91 = v142;\n
    v90 = a0;\n
    memset(&v88, 0, 4);\n
    if (*(v90) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = *(v91)->field_0;\n
    cgc_uint2str(&v88, 4, v89);\n
    v9 = &v88;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v88)) < 0)\n
        cgc__terminate();\n
    v178 = v90;\n
    *(v178) = *(v178) - 1;\n
    v179 = v91;\n
    *(v179) = &*(v179)->padding_1;\n
    v123 = v142;\n
    v122 = a0;\n
    memset(&v120, 0, 12);\n
    if (*(v122) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v121 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v29 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-678, size=2, endness=Iend_LE)))));\n
    v28 = v29 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v120, 12, v42);\n
    v8 = &v120;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v120)) < 0)\n
        cgc__terminate();\n
    v180 = v122;\n
    *(v180) = *(v180) - 4;\n
    v181 = v123;\n
    *(v181) = &*(v181)->field_4;\n
    v75 = v142;\n
    v74 = a0;\n
    if (*(v74) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v74) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v74);\n
    v73 = v7;\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = cgc_calloc(134);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v72, &v23[18].padding_0[182]);\n
    cgc_strncpy(v72 + 5, *(v75), v73);\n
    v183 = v75;\n
    *(v183) = &(&*(v183)->field_4)[cgc_strlen(v72)];\n
    v185 = v74;\n
    *(v185) = *(v185) - (cgc_strlen(v72) + -4);\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v55 = v142;\n
    v54 = a0;\n
    *(&v52) = *(v55);\n
    memset(&v51, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v52[0] << 8)\n
        v6 = v52[1];\n
    v53 = v6 & 1;\n
    cgc_uint2str(&v51, 6, v53);\n
    v5 = &v51;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v186 = v54;\n
    *(v186) = *(v186) - 2;\n
    v187 = v55;\n
    *(v187) = &*(v187)->field_2;\n
    v103 = v142;\n
    v102 = a0;\n
    memset(&v100, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v101 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v27 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-682, size=2, endness=Iend_LE)))));\n
    v26 = v27 | 0xc00;\n
    v41 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v100, 21, v41);\n
    v4 = &v100;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v100)) < 0)\n
        cgc__terminate();\n
    v188 = v102;\n
    *(v188) = *(v188) - 8;\n
    v189 = v103;\n
    *(v189) = *(v189) + 1;\n
    v87 = v142;\n
    v86 = a0;\n
    memset(&v84, 0, 4);\n
    if (*(v86) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v85 = *(v87)->field_0;\n
    cgc_uint2str(&v84, 4, v85);\n
    v3 = &v84;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v84)) < 0)\n
        cgc__terminate();\n
    v190 = v86;\n
    *(v190) = *(v190) - 1;\n
    v191 = v87;\n
    *(v191) = &*(v191)->padding_1;\n
    v99 = v142;\n
    v98 = a0;\n
    memset(&v96, 0, 21);\n
    if (*(v98) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v97 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v25 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-686, size=2, endness=Iend_LE)))));\n
    v24 = v25 | 0xc00;\n
    v40 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v96, 21, v40);\n
    v2 = &v96;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v96)) < 0)\n
        cgc__terminate();\n
    v192 = v98;\n
    *(v192) = *(v192) - 8;\n
    v193 = v99;\n
    *(v193) = *(v193) + 1;\n
    v132 = v142;\n
    v131 = a0;\n
    *(&v129[0]) = *(v132);\n
    memset(&v128, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v129[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v129[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v129[2] << 8)\n
                v1 = v129[3];\n
        }\n
    }\n
    v130 = v1 & 1;\n
    cgc_uint2str(&v128, 12, v130);\n
    v0 = &v128;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v194 = v131;\n
    *(v194) = *(v194) - 4;\n
    v195 = v132;\n
    *(v195) = &*(v195)->field_4;\n
    v49 ^= v23->field_260;\n
    if (v49)\n
        cgc___stack_cookie_fail();\n
    v196 = a0;\n
    if (*(v196) > 0 && v48 >= 0 && v48 < 0)\n
        v196 = *((&v50 + 0x4 * v48))(v142);\n
    v197 = v141;\n
    return v196;\n
}\n
", "4329325:sub_420f6d": null, "4329328:cgc_process_llamapoorness": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f031c;\n
extern unsigned int g_4f0320;\n
extern unsigned int g_4f0324;\n
\n
int cgc_process_llamapoorness(struct struct_1 **v87, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1bc]\n
    struct_0 *v1;  // [bp-0x1b8]\n
    struct_0 *v2;  // [bp-0x1b4]\n
    char v3;  // [bp-0x1ad]\n
    struct_0 *v4;  // [bp-0x1ac]\n
    struct_0 *v5;  // [bp-0x1a8]\n
    struct_0 *v6;  // [bp-0x1a4]\n
    struct_0 *v7;  // [bp-0x1a0]\n
    char v8;  // [bp-0x199]\n
    struct_0 *v9;  // [bp-0x198]\n
    struct_0 *v10;  // [bp-0x194]\n
    struct_0 *v11;  // [bp-0x190]\n
    char v12;  // [bp-0x189]\n
    struct_0 *v13;  // [bp-0x188]\n
    struct_3 *v14;  // [bp-0x184]\n
    unsigned short v15;  // [bp-0x180]\n
    unsigned short v16;  // [bp-0x17e]\n
    unsigned short v17;  // [bp-0x17c]\n
    unsigned short v18;  // [bp-0x17a]\n
    unsigned short v19;  // [bp-0x178]\n
    unsigned short v20;  // [bp-0x176]\n
    unsigned short v21;  // [bp-0x174]\n
    unsigned short v22;  // [bp-0x172]\n
    unsigned short v23;  // [bp-0x170]\n
    unsigned short v24;  // [bp-0x16e]\n
    unsigned long v25;  // [bp-0x16c]\n
    unsigned long v26;  // [bp-0x164]\n
    unsigned long v27;  // [bp-0x15c]\n
    unsigned long v28;  // [bp-0x154]\n
    unsigned long v29;  // [bp-0x14c]\n
    struct struct_2 **v30;  // [bp-0x144], Other Possible Types: unsigned int\n
    unsigned int v31;  // [bp-0x140]\n
    unsigned int v32;  // [bp-0x13c]\n
    unsigned int v33;  // [bp-0x138]\n
    unsigned int v34;  // [bp-0x134]\n
    char v35;  // [bp-0x12e]\n
    char v36[2];  // [bp-0x128]\n
    unsigned short v37;  // [bp-0x122]\n
    unsigned int *v38;  // [bp-0x120]\n
    struct struct_1 **v39;  // [bp-0x11c]\n
    char v40;  // [bp-0x116]\n
    char v41[2];  // [bp-0x110]\n
    unsigned short v42;  // [bp-0x10a]\n
    unsigned int *v43;  // [bp-0x108]\n
    struct struct_1 **v44;  // [bp-0x104]\n
    char v45;  // [bp-0xfe]\n
    char v46[2];  // [bp-0xf8]\n
    unsigned short v47;  // [bp-0xf2]\n
    unsigned int *v48;  // [bp-0xf0]\n
    struct struct_1 **v49;  // [bp-0xec]\n
    char *v50;  // [bp-0xe8]\n
    unsigned int v51;  // [bp-0xe4]\n
    unsigned int *v52;  // [bp-0xe0]\n
    struct struct_1 **v53;  // [bp-0xdc]\n
    char v54;  // [bp-0xd8]\n
    unsigned short v55;  // [bp-0xd2]\n
    unsigned int *v56;  // [bp-0xd0]\n
    struct struct_1 **v57;  // [bp-0xcc]\n
    unsigned short *v58;  // [bp-0xc8]\n
    unsigned int *v59;  // [bp-0xc4]\n
    struct struct_1 **v60;  // [bp-0xc0]\n
    char v61;  // [bp-0xb9]\n
    unsigned long v62;  // [bp-0xa4]\n
    unsigned int *v63;  // [bp-0x9c]\n
    struct struct_1 **v64;  // [bp-0x98]\n
    char v65;  // [bp-0x94]\n
    unsigned int v66;  // [bp-0x88]\n
    unsigned int *v67;  // [bp-0x84]\n
    struct struct_1 **v68;  // [bp-0x80]\n
    char v69;  // [bp-0x7c]\n
    unsigned int v70;  // [bp-0x70]\n
    unsigned int *v71;  // [bp-0x6c]\n
    struct struct_1 **v72;  // [bp-0x68]\n
    char v73;  // [bp-0x64]\n
    unsigned int v74;  // [bp-0x58]\n
    unsigned int *v75;  // [bp-0x54]\n
    struct struct_1 **v76;  // [bp-0x50]\n
    char v77;  // [bp-0x4c]\n
    unsigned int v78;  // [bp-0x40]\n
    unsigned int *v79;  // [bp-0x3c]\n
    struct struct_1 **v80;  // [bp-0x38]\n
    char v81;  // [bp-0x31]\n
    unsigned int v82;  // [bp-0x1c]\n
    unsigned int v83;  // [bp-0x18]\n
    unsigned int *v84;  // [bp-0x10]\n
    struct struct_1 **v85;  // [bp-0xc]\n
    unsigned int v86;  // [bp-0x8]\n
    unsigned int v88;  // ebx\n
    unsigned int *v89;  // eax\n
    struct struct_1 **v90;  // eax\n
    unsigned int v91[2];  // ecx\n
    unsigned int *v92;  // eax\n
    struct struct_1 **v93;  // eax\n
    unsigned int *v94;  // eax\n
    struct struct_1 **v95;  // eax\n
    unsigned int *v96;  // eax\n
    struct struct_1 **v97;  // eax\n
    unsigned int *v98;  // eax\n
    struct struct_1 **v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_1 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_1 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_1 **v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_1 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_1 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_1 **v111;  // eax\n
    struct struct_1 **v113;  // eax\n
    unsigned int *v115;  // eax\n
    unsigned int *v116;  // eax, Other Possible Types: unsigned int\n
    unsigned int v117;  // ebx\n
\n
    v86 = v88;\n
    v14 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v32 = g_4f031c;\n
    v33 = g_4f0320;\n
    v34 = g_4f0324;\n
    v31 = cgc__cookie;\n
    v30 = -1;\n
    if (cgc_sendline(1, \"===llamapoorness===\", 19) < 0)\n
        cgc__terminate();\n
    v60 = v87;\n
    v59 = a0;\n
    v58 = &*(v60)->field_0;\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = v59;\n
    *(v89) = *(v89) - 2;\n
    v90 = v60;\n
    *(v90) = &*(v90)->padding_1[1];\n
    v30 = *(v58);\n
    v85 = v87;\n
    v84 = a0;\n
    memset(&v81, 0, 21);\n
    if (*(v84) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(v85);\n
    v83 = v91[1];\n
    v82 = v91[0];\n
    cgc_uint2str(&v81, 21, v82);\n
    v13 = &v81;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v81)) < 0)\n
        cgc__terminate();\n
    v92 = v84;\n
    *(v92) = *(v92) - 8;\n
    v93 = v85;\n
    *(v93) = *(v93) + 1;\n
    v49 = v87;\n
    v48 = a0;\n
    *(&v46) = *(v49);\n
    memset(&v45, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v46[0] << 8)\n
        v12 = v46[1];\n
    v47 = v12 & 1;\n
    cgc_uint2str(&v45, 6, v47);\n
    v11 = &v45;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v45)) < 0)\n
        cgc__terminate();\n
    v94 = v48;\n
    *(v94) = *(v94) - 2;\n
    v95 = v49;\n
    *(v95) = &*(v95)->padding_1[1];\n
    v80 = v87;\n
    v79 = a0;\n
    memset(&v77, 0, 12);\n
    if (*(v79) < 4)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v78 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v24 = [D] x86g_create_fpucw(fpround<4>);\n
    v23 = v24 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v77, 12, v29);\n
    v10 = &v77;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v96 = v79;\n
    *(v96) = *(v96) - 4;\n
    v97 = v80;\n
    *(v97) = &*(v97)->field_4;\n
    v64 = v87;\n
    v63 = a0;\n
    memset(&v61, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v62 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v22 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-366, size=2, endness=Iend_LE)))));\n
    v21 = v22 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v61, 21, v28);\n
    v9 = &v61;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v98 = v63;\n
    *(v98) = *(v98) - 8;\n
    v99 = v64;\n
    *(v99) = *(v99) + 1;\n
    v44 = v87;\n
    v43 = a0;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v41[0] << 8)\n
        v8 = v41[1];\n
    v42 = v8 & 1;\n
    cgc_uint2str(&v40, 6, v42);\n
    v7 = &v40;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v100 = v43;\n
    *(v100) = *(v100) - 2;\n
    v101 = v44;\n
    *(v101) = &*(v101)->padding_1[1];\n
    v76 = v87;\n
    v75 = a0;\n
    memset(&v73, 0, 12);\n
    if (*(v75) < 4)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v74 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v20 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-370, size=2, endness=Iend_LE)))));\n
    v19 = v20 | 0xc00;\n
    v27 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v73, 12, v27);\n
    v6 = &v73;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v102 = v75;\n
    *(v102) = *(v102) - 4;\n
    v103 = v76;\n
    *(v103) = &*(v103)->field_4;\n
    v72 = v87;\n
    v71 = a0;\n
    memset(&v69, 0, 12);\n
    if (*(v71) < 4)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v70 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v18 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-374, size=2, endness=Iend_LE)))));\n
    v17 = v18 | 0xc00;\n
    v26 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v69, 12, v26);\n
    v5 = &v69;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v104 = v71;\n
    *(v104) = *(v104) - 4;\n
    v105 = v72;\n
    *(v105) = &*(v105)->field_4;\n
    v57 = v87;\n
    v56 = a0;\n
    memset(&v54, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = *(&*(v57)->field_0);\n
    cgc_uint2str(&v54, 6, v55);\n
    v4 = &v54;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v106 = v56;\n
    *(v106) = *(v106) - 2;\n
    v107 = v57;\n
    *(v107) = &*(v107)->padding_1[1];\n
    v39 = v87;\n
    v38 = a0;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v36[0] << 8)\n
        v3 = v36[1];\n
    v37 = v3 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v2 = &v35;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v108 = v38;\n
    *(v108) = *(v108) - 2;\n
    v109 = v39;\n
    *(v109) = &*(v109)->padding_1[1];\n
    v68 = v87;\n
    v67 = a0;\n
    memset(&v65, 0, 12);\n
    if (*(v67) < 4)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v66 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v16 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-378, size=2, endness=Iend_LE)))));\n
    v15 = v16 | 0xc00;\n
    v25 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v65, 12, v25);\n
    v1 = &v65;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v110 = v67;\n
    *(v110) = *(v110) - 4;\n
    v111 = v68;\n
    *(v111) = &*(v111)->field_4;\n
    v53 = v87;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v52);\n
    v51 = v0;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v14[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v113 = v53;\n
    *(v113) = -4 + cgc_strlen(v50) + *(v113);\n
    v115 = v52;\n
    *(v115) = *(v115) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v14[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v31 ^= v14->field_260;\n
    if (v31)\n
        cgc___stack_cookie_fail();\n
    v116 = a0;\n
    if (*(v116) > 0 && v30 >= 0 && v30 < 3)\n
        v116 = (&v32)[v30](v87);\n
    v117 = v86;\n
    return v116;\n
}\n
", "4333948:sub_42217c": null, "4333952:cgc_process_llamaforebridge": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaforebridge(struct struct_1 **v208, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x474]\n
    struct_0 *v1;  // [bp-0x470]\n
    struct_0 *v2;  // [bp-0x46c]\n
    struct_0 *v3;  // [bp-0x468]\n
    char v4;  // [bp-0x461]\n
    struct_0 *v5;  // [bp-0x460]\n
    struct_0 *v6;  // [bp-0x45c]\n
    char v7;  // [bp-0x455]\n
    unsigned int v8;  // [bp-0x454]\n
    struct_0 *v9;  // [bp-0x450]\n
    struct_0 *v10;  // [bp-0x44c]\n
    struct_0 *v11;  // [bp-0x448]\n
    struct_0 *v12;  // [bp-0x444]\n
    struct_0 *v13;  // [bp-0x440]\n
    char v14;  // [bp-0x439]\n
    struct_0 *v15;  // [bp-0x438]\n
    char v16;  // [bp-0x431]\n
    struct_0 *v17;  // [bp-0x430]\n
    struct_0 *v18;  // [bp-0x42c]\n
    struct_0 *v19;  // [bp-0x428]\n
    struct_0 *v20;  // [bp-0x424]\n
    struct_0 *v21;  // [bp-0x420]\n
    struct_0 *v22;  // [bp-0x41c]\n
    char v23;  // [bp-0x415]\n
    unsigned int v24;  // [bp-0x414]\n
    struct_0 *v25;  // [bp-0x410]\n
    char v26;  // [bp-0x409]\n
    struct_0 *v27;  // [bp-0x408]\n
    unsigned int v28;  // [bp-0x404]\n
    struct_0 *v29;  // [bp-0x400]\n
    unsigned int v30;  // [bp-0x3fc]\n
    struct_0 *v31;  // [bp-0x3f8]\n
    struct_0 *v32;  // [bp-0x3f4]\n
    unsigned int v33;  // [bp-0x3f0]\n
    struct_3 *v34;  // [bp-0x3ec]\n
    unsigned short v35;  // [bp-0x3e8]\n
    unsigned short v36;  // [bp-0x3e6]\n
    unsigned short v37;  // [bp-0x3e4]\n
    unsigned short v38;  // [bp-0x3e2]\n
    unsigned short v39;  // [bp-0x3e0]\n
    unsigned short v40;  // [bp-0x3de]\n
    unsigned short v41;  // [bp-0x3dc]\n
    unsigned short v42;  // [bp-0x3da]\n
    unsigned short v43;  // [bp-0x3d8]\n
    unsigned short v44;  // [bp-0x3d6]\n
    unsigned long v45;  // [bp-0x3d4]\n
    unsigned long v46;  // [bp-0x3cc]\n
    unsigned long v47;  // [bp-0x3c4]\n
    unsigned long v48;  // [bp-0x3bc]\n
    unsigned long v49;  // [bp-0x3b4]\n
    struct struct_2 **v50;  // [bp-0x3a8]\n
    unsigned int v51;  // [bp-0x3a4]\n
    char v52;  // [bp-0x3a0]\n
    char v53;  // [bp-0x39d]\n
    char v54[8];  // [bp-0x388]\n
    unsigned int v55;  // [bp-0x384]\n
    void* v56;  // [bp-0x380]\n
    unsigned int *v57;  // [bp-0x378]\n
    struct struct_1 **v58;  // [bp-0x374]\n
    char v59;  // [bp-0x36d]\n
    char v60[8];  // [bp-0x358]\n
    unsigned int v61;  // [bp-0x354]\n
    void* v62;  // [bp-0x350]\n
    unsigned int *v63;  // [bp-0x348]\n
    struct struct_1 **v64;  // [bp-0x344]\n
    char v65;  // [bp-0x33d]\n
    char v66[8];  // [bp-0x328]\n
    unsigned int v67;  // [bp-0x324]\n
    void* v68;  // [bp-0x320]\n
    unsigned int *v69;  // [bp-0x318]\n
    struct struct_1 **v70;  // [bp-0x314]\n
    char v71;  // [bp-0x30d]\n
    char v72[5];  // [bp-0x2f8]\n
    unsigned int v73;  // [bp-0x2f4]\n
    void* v74;  // [bp-0x2f0]\n
    unsigned int *v75;  // [bp-0x2ec]\n
    struct struct_1 **v76;  // [bp-0x2e8]\n
    unsigned int v77;  // [bp-0x2e4]\n
    char v78;  // [bp-0x2dd]\n
    unsigned int *v79;  // [bp-0x2dc]\n
    struct struct_1 **v80;  // [bp-0x2d8]\n
    unsigned int v81;  // [bp-0x2d4]\n
    char v82;  // [bp-0x2cd]\n
    unsigned int *v83;  // [bp-0x2cc]\n
    struct struct_1 **v84;  // [bp-0x2c8]\n
    unsigned int v85;  // [bp-0x2c4]\n
    char v86;  // [bp-0x2bd]\n
    unsigned int *v87;  // [bp-0x2bc]\n
    struct struct_1 **v88;  // [bp-0x2b8]\n
    unsigned int v89;  // [bp-0x2b4]\n
    char v90;  // [bp-0x2ad]\n
    unsigned int *v91;  // [bp-0x2ac]\n
    struct struct_1 **v92;  // [bp-0x2a8]\n
    char *v93;  // [bp-0x2a4]\n
    unsigned int v94;  // [bp-0x2a0]\n
    unsigned int *v95;  // [bp-0x29c]\n
    struct struct_1 **v96;  // [bp-0x298]\n
    char *v97;  // [bp-0x294]\n
    unsigned int v98;  // [bp-0x290]\n
    unsigned int *v99;  // [bp-0x28c]\n
    struct struct_1 **v100;  // [bp-0x288]\n
    char *v101;  // [bp-0x284]\n
    unsigned int v102;  // [bp-0x280]\n
    unsigned int *v103;  // [bp-0x27c]\n
    struct struct_1 **v104;  // [bp-0x278]\n
    char v105;  // [bp-0x274]\n
    unsigned short v106;  // [bp-0x26e]\n
    unsigned int *v107;  // [bp-0x26c]\n
    struct struct_1 **v108;  // [bp-0x268]\n
    char v109;  // [bp-0x264]\n
    unsigned short v110;  // [bp-0x25e]\n
    unsigned int *v111;  // [bp-0x25c]\n
    struct struct_1 **v112;  // [bp-0x258]\n
    char v113;  // [bp-0x251]\n
    char v114;  // [bp-0x24d]\n
    unsigned int *v115;  // [bp-0x24c]\n
    struct struct_1 **v116;  // [bp-0x248]\n
    char v117;  // [bp-0x241]\n
    unsigned long v118;  // [bp-0x22c]\n
    unsigned int *v119;  // [bp-0x224]\n
    struct struct_1 **v120;  // [bp-0x220]\n
    char v121;  // [bp-0x219]\n
    unsigned long v122;  // [bp-0x204]\n
    unsigned int *v123;  // [bp-0x1fc]\n
    struct struct_1 **v124;  // [bp-0x1f8]\n
    char v125;  // [bp-0x1f4]\n
    unsigned int v126;  // [bp-0x1e8]\n
    unsigned int *v127;  // [bp-0x1e4]\n
    struct struct_1 **v128;  // [bp-0x1e0]\n
    char v129;  // [bp-0x1dc]\n
    unsigned int v130;  // [bp-0x1d0]\n
    unsigned int *v131;  // [bp-0x1cc]\n
    struct struct_1 **v132;  // [bp-0x1c8]\n
    char v133;  // [bp-0x1c4]\n
    unsigned int v134;  // [bp-0x1b8]\n
    unsigned int *v135;  // [bp-0x1b4]\n
    struct struct_1 **v136;  // [bp-0x1b0]\n
    char v137;  // [bp-0x1ac]\n
    unsigned int v138;  // [bp-0x1a0]\n
    unsigned int *v139;  // [bp-0x19c]\n
    struct struct_1 **v140;  // [bp-0x198]\n
    char v141;  // [bp-0x194]\n
    unsigned int v142;  // [bp-0x188]\n
    unsigned int *v143;  // [bp-0x184]\n
    struct struct_1 **v144;  // [bp-0x180]\n
    char v145;  // [bp-0x17c]\n
    unsigned int v146;  // [bp-0x170]\n
    unsigned int *v147;  // [bp-0x16c]\n
    struct struct_1 **v148;  // [bp-0x168]\n
    char v149;  // [bp-0x164]\n
    unsigned int v150;  // [bp-0x158]\n
    unsigned int *v151;  // [bp-0x154]\n
    struct struct_1 **v152;  // [bp-0x150]\n
    char v153;  // [bp-0x14c]\n
    unsigned int v154;  // [bp-0x140]\n
    unsigned int *v155;  // [bp-0x13c]\n
    struct struct_1 **v156;  // [bp-0x138]\n
    unsigned int v157;  // [bp-0x134]\n
    unsigned short v158;  // [bp-0x12e]\n
    unsigned int *v159;  // [bp-0x12c]\n
    struct struct_1 **v160;  // [bp-0x128]\n
    unsigned int v161;  // [bp-0x124]\n
    unsigned short v162;  // [bp-0x11e]\n
    unsigned int *v163;  // [bp-0x11c]\n
    struct struct_1 **v164;  // [bp-0x118]\n
    char v165;  // [bp-0x114]\n
    char v166[4];  // [bp-0x108]\n
    unsigned int v167;  // [bp-0x104]\n
    unsigned int *v168;  // [bp-0x100]\n
    struct struct_1 **v169;  // [bp-0xfc]\n
    char v170;  // [bp-0xf8]\n
    char v171[4];  // [bp-0xec]\n
    unsigned int v172;  // [bp-0xe8]\n
    unsigned int *v173;  // [bp-0xe4]\n
    struct struct_1 **v174;  // [bp-0xe0]\n
    char *v175;  // [bp-0xdc]\n
    unsigned int v176;  // [bp-0xd8]\n
    unsigned int *v177;  // [bp-0xd4]\n
    struct struct_1 **v178;  // [bp-0xd0]\n
    char *v179;  // [bp-0xcc]\n
    unsigned int v180;  // [bp-0xc8]\n
    unsigned int *v181;  // [bp-0xc4]\n
    struct struct_1 **v182;  // [bp-0xc0]\n
    char v183;  // [bp-0xb9]\n
    unsigned int v184;  // [bp-0xa4]\n
    unsigned int v185;  // [bp-0xa0]\n
    unsigned int *v186;  // [bp-0x9c]\n
    struct struct_1 **v187;  // [bp-0x98]\n
    char v188;  // [bp-0x91]\n
    unsigned int v189;  // [bp-0x7c]\n
    unsigned int v190;  // [bp-0x78]\n
    unsigned int *v191;  // [bp-0x74]\n
    struct struct_1 **v192;  // [bp-0x70]\n
    char v193;  // [bp-0x69]\n
    unsigned int v194;  // [bp-0x54]\n
    unsigned int v195;  // [bp-0x50]\n
    unsigned int *v196;  // [bp-0x4c]\n
    struct struct_1 **v197;  // [bp-0x48]\n
    char v198;  // [bp-0x41]\n
    unsigned int v199;  // [bp-0x2c]\n
    unsigned int v200;  // [bp-0x28]\n
    unsigned int *v201;  // [bp-0x20]\n
    struct struct_1 **v202;  // [bp-0x1c]\n
    unsigned int v203;  // [bp-0x18]\n
    char v204;  // [bp-0x11]\n
    unsigned int *v205;  // [bp-0x10]\n
    struct struct_1 **v206;  // [bp-0xc]\n
    unsigned int v207;  // [bp-0x8]\n
    unsigned int v209;  // ebx\n
    struct struct_1 **v211;  // eax\n
    unsigned int *v213;  // eax\n
    unsigned int *v214;  // eax\n
    struct struct_1 **v215;  // eax\n
    struct struct_1 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_1 **v219;  // eax\n
    struct struct_1 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_1 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_1 **v225;  // eax\n
    struct struct_1 **v227;  // eax\n
    unsigned int *v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_1 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_1 **v233;  // eax\n
    struct struct_1 **v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_1 **v237;  // eax\n
    unsigned int *v239;  // eax\n
    char v240[5];  // ecx\n
    unsigned int *v241;  // eax\n
    struct struct_1 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_1 **v244;  // eax\n
    struct struct_1 **v246;  // eax\n
    unsigned int *v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_1 **v250;  // eax\n
    unsigned int v251[2];  // ecx\n
    unsigned int *v252;  // eax\n
    struct struct_1 **v253;  // eax\n
    unsigned int v254[2];  // ecx\n
    unsigned int *v255;  // eax\n
    struct struct_1 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_1 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_1 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_1 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_1 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_1 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_1 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_1 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_1 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_1 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_1 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_1 **v278;  // eax\n
    struct struct_1 **v280;  // eax\n
    unsigned int *v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_1 **v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_1 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_1 **v288;  // eax\n
    struct struct_1 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_1 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_1 **v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_1 **v296;  // eax\n
    unsigned int v297[2];  // ecx\n
    unsigned int *v298;  // eax\n
    struct struct_1 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_1 **v301;  // eax\n
    struct struct_1 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_1 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_1 **v307;  // eax\n
    unsigned int *v308;  // eax, Other Possible Types: unsigned int\n
    unsigned int v309;  // ebx\n
\n
    v207 = v209;\n
    v34 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v51 = cgc__cookie;\n
    v50 = -1;\n
    if (cgc_sendline(1, \"===llamaforebridge===\", 21) < 0)\n
        cgc__terminate();\n
    v104 = v208;\n
    v103 = a0;\n
    if (*(v103) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v103) >= 128)\n
        v33 = 128;\n
    else\n
        v33 = *(v103);\n
    v102 = v33;\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v101 = cgc_calloc(134);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v101, &v34[18].padding_0[182]);\n
    cgc_strncpy(v101 + 5, *(v104), v102);\n
    v211 = v104;\n
    *(v211) = &(&*(v211)->field_4)[cgc_strlen(v101)];\n
    v213 = v103;\n
    *(v213) = *(v213) - (cgc_strlen(v101) + -4);\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v92 = v208;\n
    v91 = a0;\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = *(v92)->field_0;\n
    v214 = v91;\n
    *(v214) = *(v214) - 1;\n
    v215 = v92;\n
    *(v215) = &*(v215)->padding_1;\n
    if (v90 <= *(v91) && !(!v90))\n
        goto LABEL_42258c;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42258c:\n
    v89 = cgc_calloc(v90);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v89, *(v92), v90);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v216 = v92;\n
    *(v216) = &(&*(v216)->field_0)[v90];\n
    v217 = v91;\n
    *(v217) = *(v217) - v90;\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    v206 = v208;\n
    v205 = a0;\n
    if (*(v205) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = *(v206)->field_0;\n
    v218 = v205;\n
    *(v218) = *(v218) - 1;\n
    v219 = v206;\n
    *(v219) = &*(v219)->padding_1;\n
    if (v204 <= *(v205) && !(!v204))\n
        goto LABEL_4227a6;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4227a6:\n
    v203 = cgc_calloc(v204);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v203, *(v206), v204);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v220 = v206;\n
    *(v220) = &(&*(v220)->field_0)[v204];\n
    v221 = v205;\n
    *(v221) = *(v221) - v204;\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    v144 = v208;\n
    v143 = a0;\n
    memset(&v141, 0, 12);\n
    if (*(v143) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v142 = *(&*(v144)->field_0);\n
    cgc_uint2str(&v141, 12, v142);\n
    v32 = &v141;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v141)) < 0)\n
        cgc__terminate();\n
    v222 = v143;\n
    *(v222) = *(v222) - 4;\n
    v223 = v144;\n
    *(v223) = &*(v223)->field_4;\n
    v140 = v208;\n
    v139 = a0;\n
    memset(&v137, 0, 12);\n
    if (*(v139) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v138 = *(&*(v140)->field_0);\n
    cgc_uint2str(&v137, 12, v138);\n
    v31 = &v137;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v137)) < 0)\n
        cgc__terminate();\n
    v224 = v139;\n
    *(v224) = *(v224) - 4;\n
    v225 = v140;\n
    *(v225) = &*(v225)->field_4;\n
    v100 = v208;\n
    v99 = a0;\n
    if (*(v99) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v99) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v99);\n
    v98 = v30;\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v97 = cgc_calloc(134);\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v97, &v34[18].padding_0[182]);\n
    cgc_strncpy(v97 + 5, *(v100), v98);\n
    v227 = v100;\n
    *(v227) = &(&*(v227)->field_4)[cgc_strlen(v97)];\n
    v229 = v99;\n
    *(v229) = *(v229) - (cgc_strlen(v97) + -4);\n
    cgc_checkheap();\n
    cgc_free(v97);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v112 = v208;\n
    v111 = a0;\n
    memset(&v109, 0, 6);\n
    if (*(v111) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(&*(v112)->field_0);\n
    cgc_uint2str(&v109, 6, v110);\n
    v29 = &v109;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v230 = v111;\n
    *(v230) = *(v230) - 2;\n
    v231 = v112;\n
    *(v231) = &*(v231)->padding_1[1];\n
    v88 = v208;\n
    v87 = a0;\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = *(v88)->field_0;\n
    v232 = v87;\n
    *(v232) = *(v232) - 1;\n
    v233 = v88;\n
    *(v233) = &*(v233)->padding_1;\n
    if (v86 <= *(v87) && !(!v86))\n
        goto LABEL_42300a;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42300a:\n
    v85 = cgc_calloc(v86);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v85, *(v88), v86);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v234 = v88;\n
    *(v234) = &(&*(v234)->field_0)[v86];\n
    v235 = v87;\n
    *(v235) = *(v235) - v86;\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    v96 = v208;\n
    v95 = a0;\n
    if (*(v95) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v95) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v95);\n
    v94 = v28;\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = cgc_calloc(134);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v93, &v34[18].padding_0[182]);\n
    cgc_strncpy(v93 + 5, *(v96), v94);\n
    v237 = v96;\n
    *(v237) = &(&*(v237)->field_4)[cgc_strlen(v93)];\n
    v239 = v95;\n
    *(v239) = *(v239) - (cgc_strlen(v93) + -4);\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v202 = v208;\n
    v201 = a0;\n
    memset(&v198, 0, 21);\n
    if (*(v201) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v240 = *(v202);\n
    v200 = *(&v240[4]);\n
    v199 = *(&v240[0]);\n
    cgc_uint2str(&v198, 21, v199);\n
    v27 = &v198;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v198)) < 0)\n
        cgc__terminate();\n
    v241 = v201;\n
    *(v241) = *(v241) - 8;\n
    v242 = v202;\n
    *(v242) = &(*(v242))[1].padding_1[2];\n
    v76 = v208;\n
    v75 = a0;\n
    *(&v72[0]) = *(v76);\n
    memset(&v71, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v72[0])\n
    {\n
        v26 = 0;\n
        if (v72[1])\n
        {\n
            v26 = 0;\n
            if (v72[2])\n
            {\n
                v26 = 0;\n
                if (v72[3])\n
                {\n
                    v26 = 0;\n
                    if (v72[4] << 24)\n
                    {\n
                        v26 = 0;\n
                        if (v72[1] << 16)\n
                        {\n
                            v26 = 0;\n
                            if (v72[1 + 1] << 8)\n
                                v26 = v72[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v73 = v26 & 1;\n
    v74 = 0;\n
    cgc_uint2str(&v71, 21, v73);\n
    v25 = &v71;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v243 = v75;\n
    *(v243) = *(v243) - 8;\n
    v244 = v76;\n
    *(v244) = &(*(v244))[1].padding_1[2];\n
    v182 = v208;\n
    v181 = a0;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v181) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v181);\n
    v180 = v24;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v179, &v34[18].padding_0[182]);\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v246 = v182;\n
    *(v246) = &(&*(v246)->field_4)[cgc_strlen(v179)];\n
    v248 = v181;\n
    *(v248) = *(v248) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v174 = v208;\n
    v173 = a0;\n
    *(&v171[0]) = *(v174);\n
    memset(&v170, 0, 12);\n
    if (*(v173) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = 0;\n
    if (v171[0] << 24)\n
    {\n
        v23 = 0;\n
        if (v171[1] << 16)\n
        {\n
            v23 = 0;\n
            if (v171[2] << 8)\n
                v23 = v171[3];\n
        }\n
    }\n
    v172 = v23 & 1;\n
    cgc_uint2str(&v170, 12, v172);\n
    v22 = &v170;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v249 = v173;\n
    *(v249) = *(v249) - 4;\n
    v250 = v174;\n
    *(v250) = &*(v250)->field_4;\n
    v197 = v208;\n
    v196 = a0;\n
    memset(&v193, 0, 21);\n
    if (*(v196) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v251 = *(v197);\n
    v195 = v251[1];\n
    v194 = v251[0];\n
    cgc_uint2str(&v193, 21, v194);\n
    v21 = &v193;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v252 = v196;\n
    *(v252) = *(v252) - 8;\n
    v253 = v197;\n
    *(v253) = &(*(v253))[1].padding_1[2];\n
    v192 = v208;\n
    v191 = a0;\n
    memset(&v188, 0, 21);\n
    if (*(v191) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v254 = *(v192);\n
    v190 = v254[1];\n
    v189 = v254[0];\n
    cgc_uint2str(&v188, 21, v189);\n
    v20 = &v188;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v188)) < 0)\n
        cgc__terminate();\n
    v255 = v191;\n
    *(v255) = *(v255) - 8;\n
    v256 = v192;\n
    *(v256) = &(*(v256))[1].padding_1[2];\n
    v160 = v208;\n
    v159 = a0;\n
    if (*(v159) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v158 = *(&*(v160)->field_0);\n
    v257 = v159;\n
    *(v257) = *(v257) - 2;\n
    v258 = v160;\n
    *(v258) = &*(v258)->padding_1[1];\n
    if (v158 <= *(v159) && !(!v158))\n
        goto LABEL_423eca;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_423eca:\n
    v157 = cgc_calloc(v158);\n
    if (!v157)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v157, *(v160), v158);\n
    if (cgc_sendline(1, &v34[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v259 = v159;\n
    *(v259) = *(v259) - v158;\n
    v260 = v160;\n
    *(v260) = &(&*(v260)->field_0)[v158];\n
    cgc_checkheap();\n
    cgc_free(v157);\n
    v124 = v208;\n
    v123 = a0;\n
    memset(&v121, 0, 21);\n
    if (*(v123) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v122 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(fpround<4>);\n
    v43 = v44 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v121, 21, v49);\n
    v19 = &v121;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v121)) < 0)\n
        cgc__terminate();\n
    v261 = v123;\n
    *(v261) = *(v261) - 8;\n
    v262 = v124;\n
    *(v262) = &(*(v262))[1].padding_1[2];\n
    v156 = v208;\n
    v155 = a0;\n
    memset(&v153, 0, 12);\n
    if (*(v155) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v154 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-982, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v153, 12, v48);\n
    v18 = &v153;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v153)) < 0)\n
        cgc__terminate();\n
    v263 = v155;\n
    *(v263) = *(v263) - 4;\n
    v264 = v156;\n
    *(v264) = &*(v264)->field_4;\n
    v108 = v208;\n
    v107 = a0;\n
    memset(&v105, 0, 6);\n
    if (*(v107) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(&*(v108)->field_0);\n
    cgc_uint2str(&v105, 6, v106);\n
    v17 = &v105;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v105)) < 0)\n
        cgc__terminate();\n
    v265 = v107;\n
    *(v265) = *(v265) - 2;\n
    v266 = v108;\n
    *(v266) = &*(v266)->padding_1[1];\n
    v169 = v208;\n
    v168 = a0;\n
    *(&v166[0]) = *(v169);\n
    memset(&v165, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v166[0] << 24)\n
    {\n
        v16 = 0;\n
        if (v166[1] << 16)\n
        {\n
            v16 = 0;\n
            if (v166[2] << 8)\n
                v16 = v166[3];\n
        }\n
    }\n
    v167 = v16 & 1;\n
    cgc_uint2str(&v165, 12, v167);\n
    v15 = &v165;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v165)) < 0)\n
        cgc__terminate();\n
    v267 = v168;\n
    *(v267) = *(v267) - 4;\n
    v268 = v169;\n
    *(v268) = &*(v268)->field_4;\n
    v70 = v208;\n
    v69 = a0;\n
    *(&v66[0]) = *(v70);\n
    memset(&v65, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v66[0])\n
    {\n
        v14 = 0;\n
        if (v66[1])\n
        {\n
            v14 = 0;\n
            if (v66[2])\n
            {\n
                v14 = 0;\n
                if (v66[3])\n
                {\n
                    v14 = 0;\n
                    if (v66[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v66[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v66[6] << 8)\n
                                v14 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v67 = v14 & 1;\n
    v68 = 0;\n
    cgc_uint2str(&v65, 21, v67);\n
    v13 = &v65;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v269 = v69;\n
    *(v269) = *(v269) - 8;\n
    v270 = v70;\n
    *(v270) = &(*(v270))[1].padding_1[2];\n
    v120 = v208;\n
    v119 = a0;\n
    memset(&v117, 0, 21);\n
    if (*(v119) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v118 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-986, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v117, 21, v47);\n
    v12 = &v117;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v117)) < 0)\n
        cgc__terminate();\n
    v271 = v119;\n
    *(v271) = *(v271) - 8;\n
    v272 = v120;\n
    *(v272) = &(*(v272))[1].padding_1[2];\n
    v152 = v208;\n
    v151 = a0;\n
    memset(&v149, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v150 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-990, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v149, 12, v46);\n
    v11 = &v149;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v149)) < 0)\n
        cgc__terminate();\n
    v273 = v151;\n
    *(v273) = *(v273) - 4;\n
    v274 = v152;\n
    *(v274) = &*(v274)->field_4;\n
    v136 = v208;\n
    v135 = a0;\n
    memset(&v133, 0, 12);\n
    if (*(v135) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v134 = *(&*(v136)->field_0);\n
    cgc_uint2str(&v133, 12, v134);\n
    v10 = &v133;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v133)) < 0)\n
        cgc__terminate();\n
    v275 = v135;\n
    *(v275) = *(v275) - 4;\n
    v276 = v136;\n
    *(v276) = &*(v276)->field_4;\n
    v148 = v208;\n
    v147 = a0;\n
    memset(&v145, 0, 12);\n
    if (*(v147) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v146 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-994, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v145, 12, v45);\n
    v9 = &v145;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v145)) < 0)\n
        cgc__terminate();\n
    v277 = v147;\n
    *(v277) = *(v277) - 4;\n
    v278 = v148;\n
    *(v278) = &*(v278)->field_4;\n
    v178 = v208;\n
    v177 = a0;\n
    if (*(v177) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v177) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v177);\n
    v176 = v8;\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v175 = cgc_calloc(134);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v175, &v34[18].padding_0[182]);\n
    cgc_strncpy(v175 + 5, *(v178), v176);\n
    v280 = v178;\n
    *(v280) = &(&*(v280)->field_4)[cgc_strlen(v175)];\n
    v282 = v177;\n
    *(v282) = *(v282) - (cgc_strlen(v175) + -4);\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v64 = v208;\n
    v63 = a0;\n
    *(&v60[0]) = *(v64);\n
    memset(&v59, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v60[0])\n
    {\n
        v7 = 0;\n
        if (v60[1])\n
        {\n
            v7 = 0;\n
            if (v60[2])\n
            {\n
                v7 = 0;\n
                if (v60[3])\n
                {\n
                    v7 = 0;\n
                    if (v60[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v60[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v60[6] << 8)\n
                                v7 = v60[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v61 = v7 & 1;\n
    v62 = 0;\n
    cgc_uint2str(&v59, 21, v61);\n
    v6 = &v59;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v283 = v63;\n
    *(v283) = *(v283) - 8;\n
    v284 = v64;\n
    *(v284) = &(*(v284))[1].padding_1[2];\n
    v132 = v208;\n
    v131 = a0;\n
    memset(&v129, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v130 = *(&*(v132)->field_0);\n
    cgc_uint2str(&v129, 12, v130);\n
    v5 = &v129;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v129)) < 0)\n
        cgc__terminate();\n
    v285 = v131;\n
    *(v285) = *(v285) - 4;\n
    v286 = v132;\n
    *(v286) = &*(v286)->field_4;\n
    v84 = v208;\n
    v83 = a0;\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v82 = *(v84)->field_0;\n
    v287 = v83;\n
    *(v287) = *(v287) - 1;\n
    v288 = v84;\n
    *(v288) = &*(v288)->padding_1;\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_4254e4;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4254e4:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v289 = v84;\n
    *(v289) = &(&*(v289)->field_0)[v82];\n
    v290 = v83;\n
    *(v290) = *(v290) - v82;\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v58 = v208;\n
    v57 = a0;\n
    *(&v54[0]) = *(v58);\n
    memset(&v53, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v54[0])\n
    {\n
        v4 = 0;\n
        if (v54[1])\n
        {\n
            v4 = 0;\n
            if (v54[2])\n
            {\n
                v4 = 0;\n
                if (v54[3])\n
                {\n
                    v4 = 0;\n
                    if (v54[4] << 24)\n
                    {\n
                        v4 = 0;\n
                        if (v54[5] << 16)\n
                        {\n
                            v4 = 0;\n
                            if (v54[6] << 8)\n
                                v4 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v55 = v4 & 1;\n
    v56 = 0;\n
    cgc_uint2str(&v53, 21, v55);\n
    v3 = &v53;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v291 = v57;\n
    *(v291) = *(v291) - 8;\n
    v292 = v58;\n
    *(v292) = &(*(v292))[1].padding_1[2];\n
    v128 = v208;\n
    v127 = a0;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v126 = *(&*(v128)->field_0);\n
    cgc_uint2str(&v125, 12, v126);\n
    v2 = &v125;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v125)) < 0)\n
        cgc__terminate();\n
    v293 = v127;\n
    *(v293) = *(v293) - 4;\n
    v294 = v128;\n
    *(v294) = &*(v294)->field_4;\n
    v116 = v208;\n
    v115 = a0;\n
    memset(&v113, 0, 4);\n
    if (*(v115) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(v116)->field_0;\n
    cgc_uint2str(&v113, 4, v114);\n
    v1 = &v113;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v113)) < 0)\n
        cgc__terminate();\n
    v295 = v115;\n
    *(v295) = *(v295) - 1;\n
    v296 = v116;\n
    *(v296) = &*(v296)->padding_1;\n
    v187 = v208;\n
    v186 = a0;\n
    memset(&v183, 0, 21);\n
    if (*(v186) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v297 = *(v187);\n
    v185 = v297[1];\n
    v184 = v297[0];\n
    cgc_uint2str(&v183, 21, v184);\n
    v0 = &v183;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v183)) < 0)\n
        cgc__terminate();\n
    v298 = v186;\n
    *(v298) = *(v298) - 8;\n
    v299 = v187;\n
    *(v299) = &(*(v299))[1].padding_1[2];\n
    v80 = v208;\n
    v79 = a0;\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v78 = *(v80)->field_0;\n
    v300 = v79;\n
    *(v300) = *(v300) - 1;\n
    v301 = v80;\n
    *(v301) = &*(v301)->padding_1;\n
    if (v78 <= *(v79) && !(!v78))\n
        goto LABEL_425d37;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_425d37:\n
    v77 = cgc_calloc(v78);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v77, *(v80), v78);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v302 = v80;\n
    *(v302) = &(&*(v302)->field_0)[v78];\n
    v303 = v79;\n
    *(v303) = *(v303) - v78;\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    v164 = v208;\n
    v163 = a0;\n
    if (*(v163) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v162 = *(&*(v164)->field_0);\n
    v304 = v163;\n
    *(v304) = *(v304) - 2;\n
    v305 = v164;\n
    *(v305) = &*(v305)->padding_1[1];\n
    if (v162 <= *(v163) && !(!v162))\n
        goto LABEL_425f71;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_425f71:\n
    v161 = cgc_calloc(v162);\n
    if (!v161)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v161, *(v164), v162);\n
    if (cgc_sendline(1, &v34[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v306 = v163;\n
    *(v306) = *(v306) - v162;\n
    v307 = v164;\n
    *(v307) = &(&*(v307)->field_0)[v162];\n
    cgc_checkheap();\n
    cgc_free(v161);\n
    v51 ^= v34->field_260;\n
    if (v51)\n
        cgc___stack_cookie_fail();\n
    v308 = a0;\n
    if (*(v308) > 0 && v50 >= 0 && v50 < 0)\n
        v308 = *((&v52 + 0x4 * v50))(v208);\n
    v309 = v207;\n
    return v308;\n
}\n
", "4350230:sub_426116": null, "4350240:cgc_process_llamaunquarrelled": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaunquarrelled(struct struct_0 **v64, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x140]\n
    char v1;  // [bp-0x139]\n
    struct_1 *v2;  // [bp-0x138]\n
    struct_1 *v3;  // [bp-0x134]\n
    struct_1 *v4;  // [bp-0x130]\n
    char v5;  // [bp-0x129]\n
    struct_1 *v6;  // [bp-0x128]\n
    struct_1 *v7;  // [bp-0x124]\n
    struct_1 *v8;  // [bp-0x120]\n
    struct_2 *v9;  // [bp-0x11c]\n
    unsigned short v10;  // [bp-0x118]\n
    unsigned short v11;  // [bp-0x116]\n
    unsigned long v12;  // [bp-0x114]\n
    struct struct_3 **v13;  // [bp-0x108]\n
    unsigned int v14;  // [bp-0x104]\n
    char v15;  // [bp-0x100]\n
    unsigned int v16;  // [bp-0xfc]\n
    char v17;  // [bp-0xf5]\n
    unsigned int *v18;  // [bp-0xf4]\n
    struct struct_0 **v19;  // [bp-0xf0]\n
    char v20;  // [bp-0xec]\n
    unsigned short v21;  // [bp-0xe6]\n
    unsigned int *v22;  // [bp-0xe4]\n
    struct struct_0 **v23;  // [bp-0xe0]\n
    char v24;  // [bp-0xd9]\n
    char v25;  // [bp-0xd5]\n
    unsigned int *v26;  // [bp-0xd4]\n
    struct struct_0 **v27;  // [bp-0xd0]\n
    char v28;  // [bp-0xcc]\n
    unsigned int v29;  // [bp-0xc0]\n
    unsigned int *v30;  // [bp-0xbc]\n
    struct struct_0 **v31;  // [bp-0xb8]\n
    char v32;  // [bp-0xb4]\n
    unsigned int v33;  // [bp-0xa8]\n
    unsigned int *v34;  // [bp-0xa4]\n
    struct struct_0 **v35;  // [bp-0xa0]\n
    unsigned int v36;  // [bp-0x9c]\n
    unsigned short v37;  // [bp-0x96]\n
    unsigned int *v38;  // [bp-0x94]\n
    struct struct_0 **v39;  // [bp-0x90]\n
    unsigned int v40;  // [bp-0x8c]\n
    unsigned short v41;  // [bp-0x86]\n
    unsigned int *v42;  // [bp-0x84]\n
    struct struct_0 **v43;  // [bp-0x80]\n
    char v44;  // [bp-0x7c]\n
    char v45[4];  // [bp-0x70]\n
    unsigned int v46;  // [bp-0x6c]\n
    unsigned int *v47;  // [bp-0x68]\n
    struct struct_0 **v48;  // [bp-0x64]\n
    char v49;  // [bp-0x60]\n
    char v50[4];  // [bp-0x54]\n
    unsigned int v51;  // [bp-0x50]\n
    unsigned int *v52;  // [bp-0x4c]\n
    struct struct_0 **v53;  // [bp-0x48]\n
    char v54;  // [bp-0x41]\n
    unsigned int v55;  // [bp-0x2c]\n
    unsigned int v56;  // [bp-0x28]\n
    unsigned int *v57;  // [bp-0x20]\n
    struct struct_0 **v58;  // [bp-0x1c]\n
    unsigned int v59;  // [bp-0x18]\n
    char v60;  // [bp-0x11]\n
    unsigned int *v61;  // [bp-0x10]\n
    struct struct_0 **v62;  // [bp-0xc]\n
    unsigned int v63;  // [bp-0x8]\n
    unsigned int v65;  // ebx\n
    unsigned int *v66;  // eax\n
    struct struct_0 **v67;  // eax\n
    unsigned int *v68;  // eax\n
    struct struct_0 **v69;  // eax\n
    unsigned int *v70;  // eax\n
    struct struct_0 **v71;  // eax\n
    unsigned int *v72;  // eax\n
    struct struct_0 **v73;  // eax\n
    unsigned int *v74;  // eax\n
    struct struct_0 **v75;  // eax\n
    unsigned int *v76;  // eax\n
    struct struct_0 **v77;  // eax\n
    unsigned int *v78;  // eax\n
    struct struct_0 **v79;  // eax\n
    unsigned int *v80;  // eax\n
    struct struct_0 **v81;  // eax\n
    struct struct_0 **v82;  // eax\n
    unsigned int *v83;  // eax\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    struct struct_0 **v86;  // eax\n
    unsigned int *v87;  // eax\n
    struct_0 *v88;  // ecx\n
    unsigned int *v89;  // eax\n
    struct struct_0 **v90;  // eax\n
    unsigned int *v91;  // eax\n
    struct struct_0 **v92;  // eax\n
    unsigned int *v93;  // eax\n
    struct struct_0 **v94;  // eax\n
    unsigned int *v95;  // eax\n
    struct struct_0 **v96;  // eax\n
    unsigned int *v97;  // eax, Other Possible Types: unsigned int\n
    unsigned int v98;  // ebx\n
\n
    v63 = v65;\n
    v9 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v14 = cgc__cookie;\n
    v13 = -1;\n
    if (cgc_sendline(1, \"===llamaunquarrelled===\", 23) < 0)\n
        cgc__terminate();\n
    v23 = v64;\n
    v22 = a0;\n
    memset(&v20, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = *(&*(v23)->field_0);\n
    cgc_uint2str(&v20, 6, v21);\n
    v8 = &v20;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v20)) < 0)\n
        cgc__terminate();\n
    v66 = v22;\n
    *(v66) = *(v66) - 2;\n
    v67 = v23;\n
    *(v67) = &*(v67)->padding_1[1];\n
    v31 = v64;\n
    v30 = a0;\n
    memset(&v28, 0, 12);\n
    if (*(v30) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = *(&*(v31)->field_0);\n
    cgc_uint2str(&v28, 12, v29);\n
    v7 = &v28;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v28)) < 0)\n
        cgc__terminate();\n
    v68 = v30;\n
    *(v68) = *(v68) - 4;\n
    v69 = v31;\n
    *(v69) = &*(v69)->field_4;\n
    v35 = v64;\n
    v34 = a0;\n
    memset(&v32, 0, 12);\n
    if (*(v34) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v33 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v11 = [D] x86g_create_fpucw(fpround<4>);\n
    v10 = v11 | 0xc00;\n
    v12 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v32, 12, v12);\n
    v6 = &v32;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v70 = v34;\n
    *(v70) = *(v70) - 4;\n
    v71 = v35;\n
    *(v71) = &*(v71)->field_4;\n
    v53 = v64;\n
    v52 = a0;\n
    *(&v50[0]) = *(v53);\n
    memset(&v49, 0, 12);\n
    if (*(v52) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v50[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v50[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v50[2] << 8)\n
                v5 = v50[3];\n
        }\n
    }\n
    v51 = v5 & 1;\n
    cgc_uint2str(&v49, 12, v51);\n
    v4 = &v49;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v72 = v52;\n
    *(v72) = *(v72) - 4;\n
    v73 = v53;\n
    *(v73) = &*(v73)->field_4;\n
    v43 = v64;\n
    v42 = a0;\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = *(&*(v43)->field_0);\n
    v74 = v42;\n
    *(v74) = *(v74) - 2;\n
    v75 = v43;\n
    *(v75) = &*(v75)->padding_1[1];\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_426823;\n
    if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_426823:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, &v9[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v76 = v42;\n
    *(v76) = *(v76) - v41;\n
    v77 = v43;\n
    *(v77) = &(&*(v77)->field_0)[v41];\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v27 = v64;\n
    v26 = a0;\n
    memset(&v24, 0, 4);\n
    if (*(v26) < 1)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = *(v27)->field_0;\n
    cgc_uint2str(&v24, 4, v25);\n
    v3 = &v24;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v78 = v26;\n
    *(v78) = *(v78) - 1;\n
    v79 = v27;\n
    *(v79) = &*(v79)->padding_1;\n
    v19 = v64;\n
    v18 = a0;\n
    if (*(v18) < 1)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = *(v19)->field_0;\n
    v80 = v18;\n
    *(v80) = *(v80) - 1;\n
    v81 = v19;\n
    *(v81) = &*(v81)->padding_1;\n
    if (v17 <= *(v18) && !(!v17))\n
        goto LABEL_426b96;\n
    if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_426b96:\n
    v16 = cgc_calloc(v17);\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v16, *(v19), v17);\n
    if (cgc_sendline(1, &v9[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v82 = v19;\n
    *(v82) = &(&*(v82)->field_0)[v17];\n
    v83 = v18;\n
    *(v83) = *(v83) - v17;\n
    cgc_checkheap();\n
    cgc_free(v16);\n
    v62 = v64;\n
    v61 = a0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(v62)->field_0;\n
    v84 = v61;\n
    *(v84) = *(v84) - 1;\n
    v85 = v62;\n
    *(v85) = &*(v85)->padding_1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_426db0;\n
    if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_426db0:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, &v9[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v86 = v62;\n
    *(v86) = &(&*(v86)->field_0)[v60];\n
    v87 = v61;\n
    *(v87) = *(v87) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v58 = v64;\n
    v57 = a0;\n
    memset(&v54, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(v58);\n
    v56 = v88->field_4;\n
    v55 = *(&v88->field_0);\n
    cgc_uint2str(&v54, 21, v55);\n
    v2 = &v54;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v89 = v57;\n
    *(v89) = *(v89) - 8;\n
    v90 = v58;\n
    *(v90) = *(v90) + 1;\n
    v39 = v64;\n
    v38 = a0;\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v37 = *(&*(v39)->field_0);\n
    v91 = v38;\n
    *(v91) = *(v91) - 2;\n
    v92 = v39;\n
    *(v92) = &*(v92)->padding_1[1];\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_4270ee;\n
    if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4270ee:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, &v9[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v93 = v38;\n
    *(v93) = *(v93) - v37;\n
    v94 = v39;\n
    *(v94) = &(&*(v94)->field_0)[v37];\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v48 = v64;\n
    v47 = a0;\n
    *(&v45[0]) = *(v48);\n
    memset(&v44, 0, 12);\n
    if (*(v47) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v45[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v45[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v45[2] << 8)\n
                v1 = v45[3];\n
        }\n
    }\n
    v46 = v1 & 1;\n
    cgc_uint2str(&v44, 12, v46);\n
    v0 = &v44;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v95 = v47;\n
    *(v95) = *(v95) - 4;\n
    v96 = v48;\n
    *(v96) = &*(v96)->field_4;\n
    v14 ^= v9->field_260;\n
    if (v14)\n
        cgc___stack_cookie_fail();\n
    v97 = a0;\n
    if (*(v97) > 0 && v13 >= 0 && v13 < 0)\n
        v97 = *((&v15 + 0x4 * v13))(v64);\n
    v98 = v63;\n
    return v97;\n
}\n
", "4355105:sub_427421": null, "4355120:cgc_process_llamaundignifiedly": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaundignifiedly(struct struct_1 **v27, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x98]\n
    struct_0 *v1;  // [bp-0x94]\n
    struct_0 *v2;  // [bp-0x90]\n
    struct_2 *v3;  // [bp-0x8c]\n
    unsigned short v4;  // [bp-0x88]\n
    unsigned short v5;  // [bp-0x86]\n
    unsigned long v6;  // [bp-0x84]\n
    struct struct_3 **v7;  // [bp-0x78]\n
    unsigned int v8;  // [bp-0x74]\n
    char v9;  // [bp-0x70]\n
    char v10;  // [bp-0x6c]\n
    unsigned short v11;  // [bp-0x66]\n
    unsigned int *v12;  // [bp-0x64]\n
    struct struct_1 **v13;  // [bp-0x60]\n
    char v14;  // [bp-0x59]\n
    unsigned long v15;  // [bp-0x44]\n
    unsigned int *v16;  // [bp-0x38]\n
    struct struct_1 **v17;  // [bp-0x34]\n
    char v18;  // [bp-0x30]\n
    unsigned int v19;  // [bp-0x24]\n
    unsigned int *v20;  // [bp-0x20]\n
    struct struct_1 **v21;  // [bp-0x1c]\n
    unsigned int v22;  // [bp-0x18]\n
    char v23;  // [bp-0x11]\n
    unsigned int *v24;  // [bp-0x10]\n
    struct struct_1 **v25;  // [bp-0xc]\n
    unsigned int v26;  // [bp-0x8]\n
    unsigned int v28;  // ebx\n
    unsigned int *v29;  // eax\n
    struct struct_1 **v30;  // eax\n
    unsigned int *v31;  // eax\n
    struct struct_1 **v32;  // eax\n
    unsigned int *v33;  // eax\n
    struct struct_1 **v34;  // eax\n
    unsigned int *v35;  // eax\n
    struct struct_1 **v36;  // eax\n
    struct struct_1 **v37;  // eax\n
    unsigned int *v38;  // eax\n
    unsigned int *v39;  // eax, Other Possible Types: unsigned int\n
    unsigned int v40;  // ebx\n
\n
    v26 = v28;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc__cookie;\n
    v7 = -1;\n
    if (cgc_sendline(1, \"===llamaundignifiedly===\", 24) < 0)\n
        cgc__terminate();\n
    v21 = v27;\n
    v20 = a0;\n
    memset(&v18, 0, 12);\n
    if (*(v20) < 4)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = *(&*(v21));\n
    cgc_uint2str(&v18, 12, v19);\n
    v2 = &v18;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v18)) < 0)\n
        cgc__terminate();\n
    v29 = v20;\n
    *(v29) = *(v29) - 4;\n
    v30 = v21;\n
    *(v30) = *(v30) + 4;\n
    v13 = v27;\n
    v12 = a0;\n
    memset(&v10, 0, 6);\n
    if (*(v12) < 2)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = *(&*(v13));\n
    cgc_uint2str(&v10, 6, v11);\n
    v1 = &v10;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v10)) < 0)\n
        cgc__terminate();\n
    v31 = v12;\n
    *(v31) = *(v31) - 2;\n
    v32 = v13;\n
    *(v32) = *(v32) + 2;\n
    v17 = v27;\n
    v16 = a0;\n
    memset(&v14, 0, 21);\n
    if (*(v16) < 8)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v15 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v5 = [D] x86g_create_fpucw(fpround<4>);\n
    v4 = v5 | 0xc00;\n
    v6 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v14, 21, v6);\n
    v0 = &v14;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v14)) < 0)\n
        cgc__terminate();\n
    v33 = v16;\n
    *(v33) = *(v33) - 8;\n
    v34 = v17;\n
    *(v34) = *(v34) + 8;\n
    v25 = v27;\n
    v24 = a0;\n
    if (*(v24) < 1)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = *(v25)->field_0;\n
    v35 = v24;\n
    *(v35) = *(v35) - 1;\n
    v36 = v25;\n
    *(v36) = *(v36) + 1;\n
    if (v23 <= *(v24) && !(!v23))\n
        goto LABEL_427922;\n
    if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_427922:\n
    v22 = cgc_calloc(v23);\n
    if (!v22)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v22, *(v25), v23);\n
    if (cgc_sendline(1, &v3[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v37 = v25;\n
    *(v37) = &(*(v37))[v23];\n
    v38 = v24;\n
    *(v38) = *(v38) - v23;\n
    cgc_checkheap();\n
    cgc_free(v22);\n
    v8 ^= v3->field_260;\n
    if (v8)\n
        cgc___stack_cookie_fail();\n
    v39 = a0;\n
    if (*(v39) > 0 && v7 >= 0 && v7 < 0)\n
        v39 = *((&v9 + 0x4 * v7))(v27);\n
    v40 = v26;\n
    return v39;\n
}\n
", "4356756:sub_427a94": null, "4356768:cgc_process_llamaambulacriform": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0328;\n
extern unsigned int g_4f032c;\n
\n
int cgc_process_llamaambulacriform(struct struct_0 **v84, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x1d0]\n
    char v1;  // [bp-0x1c9]\n
    struct_1 *v2;  // [bp-0x1c8]\n
    struct_1 *v3;  // [bp-0x1c4]\n
    char v4;  // [bp-0x1bd]\n
    struct_1 *v5;  // [bp-0x1bc]\n
    char v6;  // [bp-0x1b5]\n
    unsigned int v7;  // [bp-0x1b4]\n
    struct_1 *v8;  // [bp-0x1b0]\n
    char v9;  // [bp-0x1a9]\n
    struct_1 *v10;  // [bp-0x1a8]\n
    struct_1 *v11;  // [bp-0x1a4]\n
    struct_1 *v12;  // [bp-0x1a0]\n
    struct_2 *v13;  // [bp-0x19c]\n
    unsigned short v14;  // [bp-0x198]\n
    unsigned short v15;  // [bp-0x196]\n
    unsigned short v16;  // [bp-0x194]\n
    unsigned short v17;  // [bp-0x192]\n
    unsigned short v18;  // [bp-0x190]\n
    unsigned short v19;  // [bp-0x18e]\n
    unsigned long v20;  // [bp-0x18c]\n
    unsigned long v21;  // [bp-0x184]\n
    unsigned long v22;  // [bp-0x17c]\n
    struct struct_3 **v23;  // [bp-0x170], Other Possible Types: unsigned int\n
    unsigned int v24;  // [bp-0x16c]\n
    unsigned int v25;  // [bp-0x168]\n
    unsigned int v26;  // [bp-0x164]\n
    char v27;  // [bp-0x15e]\n
    char v28[2];  // [bp-0x158]\n
    unsigned short v29;  // [bp-0x152]\n
    unsigned int *v30;  // [bp-0x150]\n
    struct struct_0 **v31;  // [bp-0x14c]\n
    char v32;  // [bp-0x145]\n
    char v33[8];  // [bp-0x130]\n
    unsigned int v34;  // [bp-0x12c]\n
    void* v35;  // [bp-0x128]\n
    unsigned int *v36;  // [bp-0x120]\n
    struct struct_0 **v37;  // [bp-0x11c]\n
    char v38;  // [bp-0x115]\n
    char v39[8];  // [bp-0x100]\n
    unsigned int v40;  // [bp-0xfc]\n
    void* v41;  // [bp-0xf8]\n
    unsigned int *v42;  // [bp-0xf4]\n
    struct struct_0 **v43;  // [bp-0xf0]\n
    char *v44;  // [bp-0xec]\n
    unsigned int *v45;  // [bp-0xe8]\n
    struct struct_0 **v46;  // [bp-0xe4]\n
    char v47[4];  // [bp-0xe0]\n
    unsigned int *v48;  // [bp-0xdc]\n
    struct struct_0 **v49;  // [bp-0xd8]\n
    char *v50;  // [bp-0xd4]\n
    unsigned int v51;  // [bp-0xd0]\n
    unsigned int *v52;  // [bp-0xcc]\n
    struct struct_0 **v53;  // [bp-0xc8]\n
    char v54;  // [bp-0xc1]\n
    unsigned long v55;  // [bp-0xac]\n
    unsigned int *v56;  // [bp-0xa4]\n
    struct struct_0 **v57;  // [bp-0xa0]\n
    char v58;  // [bp-0x99]\n
    unsigned long v59;  // [bp-0x84]\n
    unsigned int *v60;  // [bp-0x7c]\n
    struct struct_0 **v61;  // [bp-0x78]\n
    char v62;  // [bp-0x74]\n
    unsigned int v63;  // [bp-0x68]\n
    unsigned int *v64;  // [bp-0x64]\n
    struct struct_0 **v65;  // [bp-0x60]\n
    char v66;  // [bp-0x5c]\n
    unsigned int v67;  // [bp-0x50]\n
    unsigned int *v68;  // [bp-0x4c]\n
    struct struct_0 **v69;  // [bp-0x48]\n
    unsigned int v70;  // [bp-0x44]\n
    unsigned short v71;  // [bp-0x3e]\n
    unsigned int *v72;  // [bp-0x3c]\n
    struct struct_0 **v73;  // [bp-0x38]\n
    unsigned int v74;  // [bp-0x34]\n
    unsigned short v75;  // [bp-0x2e]\n
    unsigned int *v76;  // [bp-0x2c]\n
    struct struct_0 **v77;  // [bp-0x28]\n
    char v78;  // [bp-0x24]\n
    char v79[4];  // [bp-0x18]\n
    unsigned int v80;  // [bp-0x14]\n
    unsigned int *v81;  // [bp-0x10]\n
    struct struct_0 **v82;  // [bp-0xc]\n
    unsigned int v83;  // [bp-0x8]\n
    unsigned int v85;  // ebx\n
    unsigned int *v86;  // eax\n
    struct struct_0 **v87;  // eax\n
    unsigned int *v88;  // eax\n
    struct struct_0 **v89;  // eax\n
    unsigned int *v90;  // eax\n
    struct struct_0 **v91;  // eax\n
    unsigned int *v92;  // eax\n
    struct struct_0 **v93;  // eax\n
    unsigned int *v94;  // eax\n
    struct struct_0 **v95;  // eax\n
    unsigned int *v96;  // eax\n
    struct struct_0 **v97;  // eax\n
    unsigned int *v98;  // eax\n
    struct struct_0 **v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_0 **v101;  // eax\n
    struct struct_0 **v103;  // eax\n
    unsigned int *v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_0 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    unsigned int *v114;  // eax\n
    struct struct_0 **v115;  // eax\n
    unsigned int *v116;  // eax\n
    struct struct_0 **v117;  // eax\n
    unsigned int *v118;  // eax, Other Possible Types: unsigned int\n
    unsigned int v119;  // ebx\n
\n
    v83 = v85;\n
    v13 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v25 = g_4f0328;\n
    v26 = g_4f032c;\n
    v24 = cgc__cookie;\n
    v23 = -1;\n
    if (cgc_sendline(1, \"===llamaambulacriform===\", 24) < 0)\n
        cgc__terminate();\n
    v49 = v84;\n
    v48 = a0;\n
    *(&v47[0]) = *(v49);\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = v48;\n
    *(v86) = *(v86) - 1;\n
    v87 = v49;\n
    *(v87) = &*(v87)->padding_1;\n
    v23 = v47[0];\n
    v61 = v84;\n
    v60 = a0;\n
    memset(&v58, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v59 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v22 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v58, 21, v22);\n
    v12 = &v58;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v88 = v60;\n
    *(v88) = *(v88) - 8;\n
    v89 = v61;\n
    *(v89) = *(v89) + 1;\n
    v57 = v84;\n
    v56 = a0;\n
    memset(&v54, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v55 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v17 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-398, size=2, endness=Iend_LE)))));\n
    v16 = v17 | 0xc00;\n
    v21 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v54, 21, v21);\n
    v11 = &v54;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v90 = v56;\n
    *(v90) = *(v90) - 8;\n
    v91 = v57;\n
    *(v91) = *(v91) + 1;\n
    v65 = v84;\n
    v64 = a0;\n
    memset(&v62, 0, 12);\n
    if (*(v64) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(&*(v65)->field_0);\n
    cgc_uint2str(&v62, 12, v63);\n
    v10 = &v62;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v92 = v64;\n
    *(v92) = *(v92) - 4;\n
    v93 = v65;\n
    *(v93) = &*(v93)->field_4;\n
    v31 = v84;\n
    v30 = a0;\n
    *(&v28) = *(v31);\n
    memset(&v27, 0, 6);\n
    if (*(v30) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v28[0] << 8)\n
        v9 = v28[1];\n
    v29 = v9 & 1;\n
    cgc_uint2str(&v27, 6, v29);\n
    v8 = &v27;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v27)) < 0)\n
        cgc__terminate();\n
    v94 = v30;\n
    *(v94) = *(v94) - 2;\n
    v95 = v31;\n
    *(v95) = &*(v95)->padding_1[1];\n
    v77 = v84;\n
    v76 = a0;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    v96 = v76;\n
    *(v96) = *(v96) - 2;\n
    v97 = v77;\n
    *(v97) = &*(v97)->padding_1[1];\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_428246;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_428246:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, &v13[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v98 = v76;\n
    *(v98) = *(v98) - v75;\n
    v99 = v77;\n
    *(v99) = &(&*(v99)->field_0)[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v46 = v84;\n
    v45 = a0;\n
    v44 = &*(v46)->field_0;\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = v45;\n
    *(v100) = *(v100) - 1;\n
    v101 = v46;\n
    *(v101) = &*(v101)->padding_1;\n
    v23 = *(v44);\n
    v53 = v84;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v52);\n
    v51 = v7;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v13[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v103 = v53;\n
    *(v103) = &(&*(v103)->field_4)[cgc_strlen(v50)];\n
    v105 = v52;\n
    *(v105) = *(v105) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v13[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v43 = v84;\n
    v42 = a0;\n
    *(&v39[0]) = *(v43);\n
    memset(&v38, 0, 21);\n
    if (*(v42) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v39[0])\n
    {\n
        v6 = 0;\n
        if (v39[1])\n
        {\n
            v6 = 0;\n
            if (v39[2])\n
            {\n
                v6 = 0;\n
                if (v39[3])\n
                {\n
                    v6 = 0;\n
                    if (v39[4] << 24)\n
                    {\n
                        v6 = 0;\n
                        if (v39[5] << 16)\n
                        {\n
                            v6 = 0;\n
                            if (v39[6] << 8)\n
                                v6 = v39[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v40 = v6 & 1;\n
    v41 = 0;\n
    cgc_uint2str(&v38, 21, v40);\n
    v5 = &v38;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v106 = v42;\n
    *(v106) = *(v106) - 8;\n
    v107 = v43;\n
    *(v107) = *(v107) + 1;\n
    v82 = v84;\n
    v81 = a0;\n
    *(&v79[0]) = *(v82);\n
    memset(&v78, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v79[0] << 24)\n
    {\n
        v4 = 0;\n
        if (v79[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v79[2] << 8)\n
                v4 = v79[3];\n
        }\n
    }\n
    v80 = v4 & 1;\n
    cgc_uint2str(&v78, 12, v80);\n
    v3 = &v78;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v108 = v81;\n
    *(v108) = *(v108) - 4;\n
    v109 = v82;\n
    *(v109) = &*(v109)->field_4;\n
    v69 = v84;\n
    v68 = a0;\n
    memset(&v66, 0, 12);\n
    if (*(v68) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v67 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v15 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-402, size=2, endness=Iend_LE)))));\n
    v14 = v15 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v66, 12, v20);\n
    v2 = &v66;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v110 = v68;\n
    *(v110) = *(v110) - 4;\n
    v111 = v69;\n
    *(v111) = &*(v111)->field_4;\n
    v73 = v84;\n
    v72 = a0;\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(&*(v73)->field_0);\n
    v112 = v72;\n
    *(v112) = *(v112) - 2;\n
    v113 = v73;\n
    *(v113) = &*(v113)->padding_1[1];\n
    if (v71 <= *(v72) && !(!v71))\n
        goto LABEL_428c91;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_428c91:\n
    v70 = cgc_calloc(v71);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v70, *(v73), v71);\n
    if (cgc_sendline(1, &v13[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v114 = v72;\n
    *(v114) = *(v114) - v71;\n
    v115 = v73;\n
    *(v115) = &(&*(v115)->field_0)[v71];\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    v37 = v84;\n
    v36 = a0;\n
    *(&v33[0]) = *(v37);\n
    memset(&v32, 0, 21);\n
    if (*(v36) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v33[0])\n
    {\n
        v1 = 0;\n
        if (v33[1])\n
        {\n
            v1 = 0;\n
            if (v33[2])\n
            {\n
                v1 = 0;\n
                if (v33[3])\n
                {\n
                    v1 = 0;\n
                    if (v33[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v33[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v33[6] << 8)\n
                                v1 = v33[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v34 = v1 & 1;\n
    v35 = 0;\n
    cgc_uint2str(&v32, 21, v34);\n
    v0 = &v32;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v116 = v36;\n
    *(v116) = *(v116) - 8;\n
    v117 = v37;\n
    *(v117) = *(v117) + 1;\n
    v24 ^= v13->field_260;\n
    if (v24)\n
        cgc___stack_cookie_fail();\n
    v118 = a0;\n
    if (*(v118) > 0 && v23 >= 0 && v23 < 2)\n
        v118 = (&v25)[v23](v84);\n
    v119 = v83;\n
    return v118;\n
}\n
", "4362333:sub_42905d": null, "4362336:cgc_process_llamamyringotomy": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamamyringotomy(struct struct_1 **v18, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x68]\n
    char v1;  // [bp-0x61]\n
    struct_0 *v2;  // [bp-0x60]\n
    struct_2 *v3;  // [bp-0x5c]\n
    struct struct_3 **v4;  // [bp-0x58]\n
    unsigned int v5;  // [bp-0x54]\n
    char v6;  // [bp-0x50]\n
    char v7;  // [bp-0x4d]\n
    char v8[8];  // [bp-0x38]\n
    unsigned int v9;  // [bp-0x34]\n
    void* v10;  // [bp-0x30]\n
    unsigned int *v11;  // [bp-0x28]\n
    struct struct_1 **v12;  // [bp-0x24]\n
    char v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x14]\n
    unsigned int *v15;  // [bp-0x10]\n
    struct struct_1 **v16;  // [bp-0xc]\n
    unsigned int v17;  // [bp-0x8]\n
    unsigned int v19;  // ebx\n
    unsigned int *v20;  // eax\n
    struct struct_1 **v21;  // eax\n
    unsigned int *v22;  // eax\n
    struct struct_1 **v23;  // eax\n
    unsigned int *v24;  // eax, Other Possible Types: unsigned int\n
    unsigned int v25;  // ebx\n
\n
    v17 = v19;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = cgc__cookie;\n
    v4 = -1;\n
    if (cgc_sendline(1, \"===llamamyringotomy===\", 22) < 0)\n
        cgc__terminate();\n
    v16 = v18;\n
    v15 = a0;\n
    memset(&v13, 0, 12);\n
    if (*(v15) < 4)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = *(&*(v16)->field_0);\n
    cgc_uint2str(&v13, 12, v14);\n
    v2 = &v13;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v13)) < 0)\n
        cgc__terminate();\n
    v20 = v15;\n
    *(v20) = *(v20) - 4;\n
    v21 = v16;\n
    *(v21) = &*(v21)->field_4;\n
    v12 = v18;\n
    v11 = a0;\n
    *(&v8[0]) = *(v12);\n
    memset(&v7, 0, 21);\n
    if (*(v11) < 8)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v8[0])\n
    {\n
        v1 = 0;\n
        if (v8[1])\n
        {\n
            v1 = 0;\n
            if (v8[2])\n
            {\n
                v1 = 0;\n
                if (v8[3])\n
                {\n
                    v1 = 0;\n
                    if (v8[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v8[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v8[6] << 8)\n
                                v1 = v8[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v9 = v1 & 1;\n
    v10 = 0;\n
    cgc_uint2str(&v7, 21, v9);\n
    v0 = &v7;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v7)) < 0)\n
        cgc__terminate();\n
    v22 = v11;\n
    *(v22) = *(v22) - 8;\n
    v23 = v12;\n
    *(v23) = *(v23) + 1;\n
    v5 ^= v3->field_260;\n
    if (v5)\n
        cgc___stack_cookie_fail();\n
    v24 = a0;\n
    if (*(v24) > 0 && v4 >= 0 && v4 < 0)\n
        v24 = *((&v6 + 0x4 * v4))(v18);\n
    v25 = v17;\n
    return v24;\n
}\n
", "4363257:sub_4293f9": null, "4363264:cgc_process_llamaskewed": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaskewed(struct struct_0 **v63, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x164]\n
    struct_1 *v1;  // [bp-0x160]\n
    struct_1 *v2;  // [bp-0x15c]\n
    struct_1 *v3;  // [bp-0x158]\n
    struct_1 *v4;  // [bp-0x154]\n
    char v5;  // [bp-0x14d]\n
    unsigned int v6;  // [bp-0x14c]\n
    struct_1 *v7;  // [bp-0x148]\n
    struct_1 *v8;  // [bp-0x144]\n
    char v9;  // [bp-0x13d]\n
    struct_2 *v10;  // [bp-0x13c]\n
    unsigned short v11;  // [bp-0x138]\n
    unsigned short v12;  // [bp-0x136]\n
    unsigned long v13;  // [bp-0x134]\n
    struct struct_3 **v14;  // [bp-0x128]\n
    unsigned int v15;  // [bp-0x124]\n
    char v16;  // [bp-0x120]\n
    char v17;  // [bp-0x11d]\n
    char v18[5];  // [bp-0x108]\n
    unsigned int v19;  // [bp-0x104]\n
    void* v20;  // [bp-0x100]\n
    unsigned int *v21;  // [bp-0xfc]\n
    struct struct_0 **v22;  // [bp-0xf8]\n
    char v23;  // [bp-0xf4]\n
    unsigned short v24;  // [bp-0xee]\n
    unsigned int *v25;  // [bp-0xec]\n
    struct struct_0 **v26;  // [bp-0xe8]\n
    char v27;  // [bp-0xe4]\n
    unsigned short v28;  // [bp-0xde]\n
    unsigned int *v29;  // [bp-0xdc]\n
    struct struct_0 **v30;  // [bp-0xd8]\n
    char v31;  // [bp-0xd1]\n
    unsigned long v32;  // [bp-0xbc]\n
    unsigned int *v33;  // [bp-0xb0]\n
    struct struct_0 **v34;  // [bp-0xac]\n
    char v35;  // [bp-0xa8]\n
    char v36[5];  // [bp-0x9c]\n
    unsigned int v37;  // [bp-0x98]\n
    unsigned int *v38;  // [bp-0x94]\n
    struct struct_0 **v39;  // [bp-0x90]\n
    char *v40;  // [bp-0x8c]\n
    unsigned int v41;  // [bp-0x88]\n
    unsigned int *v42;  // [bp-0x84]\n
    struct struct_0 **v43;  // [bp-0x80]\n
    char v44;  // [bp-0x79]\n
    unsigned int v45;  // [bp-0x64]\n
    unsigned int v46;  // [bp-0x60]\n
    unsigned int *v47;  // [bp-0x5c]\n
    struct struct_0 **v48;  // [bp-0x58]\n
    char v49;  // [bp-0x51]\n
    unsigned int v50;  // [bp-0x3c]\n
    unsigned int v51;  // [bp-0x38]\n
    unsigned int *v52;  // [bp-0x30]\n
    struct struct_0 **v53;  // [bp-0x2c]\n
    unsigned int v54;  // [bp-0x28]\n
    char v55;  // [bp-0x21]\n
    unsigned int *v56;  // [bp-0x20]\n
    struct struct_0 **v57;  // [bp-0x1c]\n
    unsigned int v58;  // [bp-0x18]\n
    char v59;  // [bp-0x11]\n
    unsigned int *v60;  // [bp-0x10]\n
    struct struct_0 **v61;  // [bp-0xc]\n
    unsigned int v62;  // [bp-0x8]\n
    unsigned int v64;  // ebx\n
    unsigned int *v65;  // eax\n
    struct struct_0 **v66;  // eax\n
    struct struct_0 **v67;  // eax\n
    unsigned int *v68;  // eax\n
    unsigned int *v69;  // eax\n
    struct struct_0 **v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_0 **v72;  // eax\n
    struct struct_0 **v73;  // eax\n
    unsigned int *v74;  // eax\n
    unsigned int *v75;  // eax\n
    struct struct_0 **v76;  // eax\n
    struct struct_0 **v78;  // eax\n
    unsigned int *v80;  // eax\n
    unsigned int *v81;  // eax\n
    struct struct_0 **v82;  // eax\n
    unsigned int v83[2];  // ecx\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    unsigned int *v86;  // eax\n
    struct struct_0 **v87;  // eax\n
    char v88[5];  // ecx\n
    unsigned int *v89;  // eax\n
    struct struct_0 **v90;  // eax\n
    unsigned int *v91;  // eax\n
    struct struct_0 **v92;  // eax\n
    unsigned int *v93;  // eax, Other Possible Types: unsigned int\n
    unsigned int v94;  // ebx\n
\n
    v62 = v64;\n
    v10 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamaskewed===\", 17) < 0)\n
        cgc__terminate();\n
    v61 = v63;\n
    v60 = a0;\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(v61)->field_0;\n
    v65 = v60;\n
    *(v65) = *(v65) - 1;\n
    v66 = v61;\n
    *(v66) = &*(v66)->padding_1;\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_42956d;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42956d:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v67 = v61;\n
    *(v67) = &(&*(v67)->field_0)[v59];\n
    v68 = v60;\n
    *(v68) = *(v68) - v59;\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v39 = v63;\n
    v38 = a0;\n
    *(&v36[0]) = *(v39);\n
    memset(&v35, 0, 12);\n
    if (*(v38) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v36[0] << 24)\n
    {\n
        v9 = 0;\n
        if (v36[1] << 16)\n
        {\n
            v9 = 0;\n
            if (v36[2] << 8)\n
                v9 = v36[3];\n
        }\n
    }\n
    v37 = v9 & 1;\n
    cgc_uint2str(&v35, 12, v37);\n
    v8 = &v35;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v69 = v38;\n
    *(v69) = *(v69) - 4;\n
    v70 = v39;\n
    *(v70) = &*(v70)->field_4;\n
    v57 = v63;\n
    v56 = a0;\n
    if (*(v56) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = *(v57)->field_0;\n
    v71 = v56;\n
    *(v71) = *(v71) - 1;\n
    v72 = v57;\n
    *(v72) = &*(v72)->padding_1;\n
    if (v55 <= *(v56) && !(!v55))\n
        goto LABEL_429927;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_429927:\n
    v54 = cgc_calloc(v55);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v54, *(v57), v55);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v73 = v57;\n
    *(v73) = &(&*(v73)->field_0)[v55];\n
    v74 = v56;\n
    *(v74) = *(v74) - v55;\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    v30 = v63;\n
    v29 = a0;\n
    memset(&v27, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = *(&*(v30)->field_0);\n
    cgc_uint2str(&v27, 6, v28);\n
    v7 = &v27;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v27)) < 0)\n
        cgc__terminate();\n
    v75 = v29;\n
    *(v75) = *(v75) - 2;\n
    v76 = v30;\n
    *(v76) = &*(v76)->padding_1[1];\n
    v43 = v63;\n
    v42 = a0;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v42) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v42);\n
    v41 = v6;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v40, &v10[18].padding_0[182]);\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v78 = v43;\n
    *(v78) = &(&*(v78)->field_4)[cgc_strlen(v40)];\n
    v80 = v42;\n
    *(v80) = *(v80) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, &v10[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v22 = v63;\n
    v21 = a0;\n
    *(&v18[0]) = *(v22);\n
    memset(&v17, 0, 21);\n
    if (*(v21) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v18[0])\n
    {\n
        v5 = 0;\n
        if (v18[1])\n
        {\n
            v5 = 0;\n
            if (v18[2])\n
            {\n
                v5 = 0;\n
                if (v18[3])\n
                {\n
                    v5 = 0;\n
                    if (v18[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v18[1] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v18[1 + 1] << 8)\n
                                v5 = v18[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v19 = v5 & 1;\n
    v20 = 0;\n
    cgc_uint2str(&v17, 21, v19);\n
    v4 = &v17;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v17)) < 0)\n
        cgc__terminate();\n
    v81 = v21;\n
    *(v81) = *(v81) - 8;\n
    v82 = v22;\n
    *(v82) = &(*(v82))[1].padding_1[2];\n
    v53 = v63;\n
    v52 = a0;\n
    memset(&v49, 0, 21);\n
    if (*(v52) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(v53);\n
    v51 = v83[1];\n
    v50 = v83[0];\n
    cgc_uint2str(&v49, 21, v50);\n
    v3 = &v49;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v84 = v52;\n
    *(v84) = *(v84) - 8;\n
    v85 = v53;\n
    *(v85) = &(*(v85))[1].padding_1[2];\n
    v26 = v63;\n
    v25 = a0;\n
    memset(&v23, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = *(&*(v26)->field_0);\n
    cgc_uint2str(&v23, 6, v24);\n
    v2 = &v23;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v23)) < 0)\n
        cgc__terminate();\n
    v86 = v25;\n
    *(v86) = *(v86) - 2;\n
    v87 = v26;\n
    *(v87) = &*(v87)->padding_1[1];\n
    v48 = v63;\n
    v47 = a0;\n
    memset(&v44, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(v48);\n
    v46 = *(&v88[4]);\n
    v45 = *(&v88[0]);\n
    cgc_uint2str(&v44, 21, v45);\n
    v1 = &v44;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v89 = v47;\n
    *(v89) = *(v89) - 8;\n
    v90 = v48;\n
    *(v90) = &(*(v90))[1].padding_1[2];\n
    v34 = v63;\n
    v33 = a0;\n
    memset(&v31, 0, 21);\n
    if (*(v33) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v32 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v12 = [D] x86g_create_fpucw(fpround<4>);\n
    v11 = v12 | 0xc00;\n
    v13 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v31, 21, v13);\n
    v0 = &v31;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v31)) < 0)\n
        cgc__terminate();\n
    v91 = v33;\n
    *(v91) = *(v91) - 8;\n
    v92 = v34;\n
    *(v92) = &(*(v92))[1].padding_1[2];\n
    v15 ^= v10->field_260;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v93 = a0;\n
    if (*(v93) > 0 && v14 >= 0 && v14 < 0)\n
        v93 = *((&v16 + 0x4 * v14))(v63);\n
    v94 = v62;\n
    return v93;\n
}\n
", "4367782:sub_42a5a6": null, "4367792:cgc_process_llamaJaina": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0330;\n
extern unsigned int g_4f0334;\n
\n
int cgc_process_llamaJaina(struct struct_0 **v136, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x270]\n
    char v1;  // [bp-0x269]\n
    struct_1 *v2;  // [bp-0x268]\n
    char v3;  // [bp-0x261]\n
    unsigned int v4;  // [bp-0x260]\n
    struct_1 *v5;  // [bp-0x25c]\n
    char v6;  // [bp-0x255]\n
    struct_1 *v7;  // [bp-0x254]\n
    char v8;  // [bp-0x24d]\n
    struct_1 *v9;  // [bp-0x24c]\n
    unsigned int v10;  // [bp-0x248]\n
    struct_1 *v11;  // [bp-0x244]\n
    unsigned int v12;  // [bp-0x240]\n
    struct_1 *v13;  // [bp-0x23c]\n
    char v14;  // [bp-0x235]\n
    unsigned int v15;  // [bp-0x234]\n
    struct_1 *v16;  // [bp-0x230]\n
    struct_1 *v17;  // [bp-0x22c]\n
    struct_1 *v18;  // [bp-0x228]\n
    char v19;  // [bp-0x221]\n
    unsigned int v20;  // [bp-0x220]\n
    struct_3 *v21;  // [bp-0x21c]\n
    struct struct_2 **v22;  // [bp-0x218], Other Possible Types: unsigned int\n
    unsigned int v23;  // [bp-0x214]\n
    unsigned int v24;  // [bp-0x210]\n
    unsigned int v25;  // [bp-0x20c]\n
    char v26;  // [bp-0x206]\n
    char v27[2];  // [bp-0x200]\n
    unsigned short v28;  // [bp-0x1fa]\n
    unsigned int *v29;  // [bp-0x1f8]\n
    struct struct_0 **v30;  // [bp-0x1f4]\n
    char v31;  // [bp-0x1ee]\n
    char v32[2];  // [bp-0x1e8]\n
    unsigned short v33;  // [bp-0x1e2]\n
    unsigned int *v34;  // [bp-0x1e0]\n
    struct struct_0 **v35;  // [bp-0x1dc]\n
    char v36;  // [bp-0x1d6]\n
    char *v37;  // [bp-0x1d0]\n
    unsigned short v38;  // [bp-0x1ca]\n
    unsigned int *v39;  // [bp-0x1c8]\n
    struct struct_0 **v40;  // [bp-0x1c4]\n
    char v41;  // [bp-0x1bd]\n
    char v42[8];  // [bp-0x1a8]\n
    unsigned int v43;  // [bp-0x1a4]\n
    void* v44;  // [bp-0x1a0]\n
    unsigned int *v45;  // [bp-0x198]\n
    struct struct_0 **v46;  // [bp-0x194]\n
    char v47;  // [bp-0x18d]\n
    char v48[8];  // [bp-0x178]\n
    unsigned int v49;  // [bp-0x174]\n
    void* v50;  // [bp-0x170]\n
    unsigned int *v51;  // [bp-0x168]\n
    struct struct_0 **v52;  // [bp-0x164]\n
    unsigned int v53;  // [bp-0x160]\n
    char v54;  // [bp-0x159]\n
    unsigned int *v55;  // [bp-0x158]\n
    struct struct_0 **v56;  // [bp-0x154]\n
    char *v57;  // [bp-0x150]\n
    unsigned int *v58;  // [bp-0x14c]\n
    struct struct_0 **v59;  // [bp-0x148]\n
    char v60[8];  // [bp-0x144]\n
    unsigned int *v61;  // [bp-0x140]\n
    struct struct_0 **v62;  // [bp-0x13c]\n
    char *v63;  // [bp-0x138]\n
    unsigned int *v64;  // [bp-0x134]\n
    struct struct_0 **v65;  // [bp-0x130]\n
    char v66;  // [bp-0x129]\n
    char v67;  // [bp-0x125]\n
    unsigned int *v68;  // [bp-0x124]\n
    struct struct_0 **v69;  // [bp-0x120]\n
    char v70;  // [bp-0x119]\n
    char v71;  // [bp-0x115]\n
    unsigned int *v72;  // [bp-0x114]\n
    struct struct_0 **v73;  // [bp-0x110]\n
    char v74;  // [bp-0x109]\n
    char v75;  // [bp-0x105]\n
    unsigned int *v76;  // [bp-0x104]\n
    struct struct_0 **v77;  // [bp-0x100]\n
    unsigned short *v78;  // [bp-0xfc]\n
    unsigned int *v79;  // [bp-0xf8]\n
    struct struct_0 **v80;  // [bp-0xf4]\n
    unsigned short *v81;  // [bp-0xf0]\n
    unsigned int *v82;  // [bp-0xec]\n
    struct struct_0 **v83;  // [bp-0xe8]\n
    char *v84;  // [bp-0xe4]\n
    unsigned int *v85;  // [bp-0xe0]\n
    struct struct_0 **v86;  // [bp-0xdc]\n
    unsigned short *v87;  // [bp-0xd8]\n
    unsigned int *v88;  // [bp-0xd4]\n
    struct struct_0 **v89;  // [bp-0xd0]\n
    char v90;  // [bp-0xcc]\n
    unsigned int v91;  // [bp-0xc0]\n
    unsigned int *v92;  // [bp-0xbc]\n
    struct struct_0 **v93;  // [bp-0xb8]\n
    unsigned int v94;  // [bp-0xb4]\n
    unsigned short v95;  // [bp-0xae]\n
    unsigned int *v96;  // [bp-0xac]\n
    struct struct_0 **v97;  // [bp-0xa8]\n
    unsigned int v98;  // [bp-0xa4]\n
    unsigned short v99;  // [bp-0x9e]\n
    unsigned int *v100;  // [bp-0x9c]\n
    struct struct_0 **v101;  // [bp-0x98]\n
    unsigned int v102;  // [bp-0x94]\n
    unsigned short v103;  // [bp-0x8e]\n
    unsigned int *v104;  // [bp-0x8c]\n
    struct struct_0 **v105;  // [bp-0x88]\n
    char v106;  // [bp-0x84]\n
    char v107[4];  // [bp-0x78]\n
    unsigned int v108;  // [bp-0x74]\n
    unsigned int *v109;  // [bp-0x70]\n
    struct struct_0 **v110;  // [bp-0x6c]\n
    char *v111;  // [bp-0x68]\n
    unsigned int v112;  // [bp-0x64]\n
    unsigned int *v113;  // [bp-0x60]\n
    struct struct_0 **v114;  // [bp-0x5c]\n
    char *v115;  // [bp-0x58]\n
    unsigned int v116;  // [bp-0x54]\n
    unsigned int *v117;  // [bp-0x50]\n
    struct struct_0 **v118;  // [bp-0x4c]\n
    char *v119;  // [bp-0x48]\n
    unsigned int v120;  // [bp-0x44]\n
    unsigned int *v121;  // [bp-0x40]\n
    struct struct_0 **v122;  // [bp-0x3c]\n
    char *v123;  // [bp-0x38]\n
    unsigned int v124;  // [bp-0x34]\n
    unsigned int *v125;  // [bp-0x30]\n
    struct struct_0 **v126;  // [bp-0x2c]\n
    char *v127;  // [bp-0x28]\n
    unsigned int v128;  // [bp-0x24]\n
    unsigned int *v129;  // [bp-0x20]\n
    struct struct_0 **v130;  // [bp-0x1c]\n
    unsigned int v131;  // [bp-0x18]\n
    char v132;  // [bp-0x11]\n
    unsigned int *v133;  // [bp-0x10]\n
    struct struct_0 **v134;  // [bp-0xc]\n
    unsigned int v135;  // [bp-0x8]\n
    unsigned int v137;  // ebx\n
    struct struct_0 **v139;  // eax\n
    unsigned int *v141;  // eax\n
    unsigned int *v142;  // eax\n
    struct struct_0 **v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_0 **v149;  // eax\n
    unsigned int *v150;  // eax\n
    struct struct_0 **v151;  // eax\n
    struct struct_0 **v152;  // eax\n
    unsigned int *v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_0 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_0 **v157;  // eax\n
    unsigned int *v158;  // eax\n
    struct struct_0 **v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_0 **v161;  // eax\n
    struct struct_0 **v163;  // eax\n
    unsigned int *v165;  // eax\n
    unsigned int *v166;  // eax\n
    struct struct_0 **v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_0 **v169;  // eax\n
    unsigned int *v170;  // eax\n
    struct struct_0 **v171;  // eax\n
    unsigned int *v172;  // eax\n
    struct struct_0 **v173;  // eax\n
    struct struct_0 **v175;  // eax\n
    unsigned int *v177;  // eax\n
    unsigned int *v178;  // eax\n
    struct struct_0 **v179;  // eax\n
    struct struct_0 **v181;  // eax\n
    unsigned int *v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    unsigned int *v186;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_0 **v189;  // eax\n
    struct struct_0 **v191;  // eax\n
    unsigned int *v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_0 **v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_0 **v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_0 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int *v204;  // eax\n
    struct struct_0 **v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_0 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    unsigned int *v212;  // eax, Other Possible Types: unsigned int\n
    unsigned int v213;  // ebx\n
\n
    v135 = v137;\n
    v21 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v24 = g_4f0330;\n
    v25 = g_4f0334;\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamaJaina===\", 16) < 0)\n
        cgc__terminate();\n
    v130 = v136;\n
    v129 = a0;\n
    if (*(v129) <= 0)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v129) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v129);\n
    v128 = v20;\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = cgc_calloc(134);\n
    if (!v127)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v127, &v21[18].padding_0[182]);\n
    cgc_strncpy(v127 + 5, *(v130), v128);\n
    v139 = v130;\n
    *(v139) = &(&*(v139)->field_4)[cgc_strlen(v127)];\n
    v141 = v129;\n
    *(v141) = *(v141) - (cgc_strlen(v127) + -4);\n
    cgc_checkheap();\n
    cgc_free(v127);\n
    if (cgc_sendline(1, &v21[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v40 = v136;\n
    v39 = a0;\n
    v37 = &*(v40)->field_0;\n
    memset(&v36, 0, 6);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (*(v37) << 8)\n
        v19 = v37[1];\n
    v38 = v19 & 1;\n
    cgc_uint2str(&v36, 6, v38);\n
    v18 = &v36;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v36)) < 0)\n
        cgc__terminate();\n
    v142 = v39;\n
    *(v142) = *(v142) - 2;\n
    v143 = v40;\n
    *(v143) = &*(v143)->padding_1[1];\n
    v89 = v136;\n
    v88 = a0;\n
    v87 = &*(v89)->field_0;\n
    if (*(v88) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = v88;\n
    *(v144) = *(v144) - 2;\n
    v145 = v89;\n
    *(v145) = &*(v145)->padding_1[1];\n
    v22 = *(v87);\n
    v93 = v136;\n
    v92 = a0;\n
    memset(&v90, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(&*(v93)->field_0);\n
    cgc_uint2str(&v90, 12, v91);\n
    v17 = &v90;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v146 = v92;\n
    *(v146) = *(v146) - 4;\n
    v147 = v93;\n
    *(v147) = &*(v147)->field_4;\n
    v86 = v136;\n
    v85 = a0;\n
    v84 = &*(v86)->field_0;\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = v85;\n
    *(v148) = *(v148) - 2;\n
    v149 = v86;\n
    *(v149) = &*(v149)->padding_1[1];\n
    v22 = *(&v84);\n
    v56 = v136;\n
    v55 = a0;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = *(v56)->field_0;\n
    v150 = v55;\n
    *(v150) = *(v150) - 1;\n
    v151 = v56;\n
    *(v151) = &*(v151)->padding_1;\n
    if (v54 <= *(v55) && !(!v54))\n
        goto LABEL_42adba;\n
    if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42adba:\n
    v53 = cgc_calloc(v54);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v53, *(v56), v54);\n
    if (cgc_sendline(1, &v21[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v152 = v56;\n
    *(v152) = &(&*(v152)->field_0)[v54];\n
    v153 = v55;\n
    *(v153) = *(v153) - v54;\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    v65 = v136;\n
    v64 = a0;\n
    v63 = &*(v65)->field_0;\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v154 = v64;\n
    *(v154) = *(v154) - 1;\n
    v155 = v65;\n
    *(v155) = &*(v155)->padding_1;\n
    v22 = *(v63);\n
    v77 = v136;\n
    v76 = a0;\n
    memset(&v74, 0, 4);\n
    if (*(v76) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(v77)->field_0;\n
    cgc_uint2str(&v74, 4, v75);\n
    v16 = &v74;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v156 = v76;\n
    *(v156) = *(v156) - 1;\n
    v157 = v77;\n
    *(v157) = &*(v157)->padding_1;\n
    v105 = v136;\n
    v104 = a0;\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(&*(v105)->field_0);\n
    v158 = v104;\n
    *(v158) = *(v158) - 2;\n
    v159 = v105;\n
    *(v159) = &*(v159)->padding_1[1];\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_42b1e1;\n
    if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42b1e1:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, &v21[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v160 = v104;\n
    *(v160) = *(v160) - v103;\n
    v161 = v105;\n
    *(v161) = &(&*(v161)->field_0)[v103];\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v126 = v136;\n
    v125 = a0;\n
    if (*(v125) <= 0)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v125) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v125);\n
    v124 = v15;\n
    if (!v124)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = cgc_calloc(134);\n
    if (!v123)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v123, &v21[18].padding_0[182]);\n
    cgc_strncpy(v123 + 5, *(v126), v124);\n
    v163 = v126;\n
    *(v163) = &(&*(v163)->field_4)[cgc_strlen(v123)];\n
    v165 = v125;\n
    *(v165) = *(v165) - (cgc_strlen(v123) + -4);\n
    cgc_checkheap();\n
    cgc_free(v123);\n
    if (cgc_sendline(1, &v21[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v62 = v136;\n
    v61 = a0;\n
    *(&v60[0]) = *(v62);\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v166 = v61;\n
    *(v166) = *(v166) - 1;\n
    v167 = v62;\n
    *(v167) = &*(v167)->padding_1;\n
    v22 = v60[0];\n
    v52 = v136;\n
    v51 = a0;\n
    *(&v48[0]) = *(v52);\n
    memset(&v47, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v48[0])\n
    {\n
        v14 = 0;\n
        if (v48[1])\n
        {\n
            v14 = 0;\n
            if (v48[2])\n
            {\n
                v14 = 0;\n
                if (v48[3])\n
                {\n
                    v14 = 0;\n
                    if (v48[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v48[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v48[6] << 8)\n
                                v14 = v48[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v49 = v14 & 1;\n
    v50 = 0;\n
    cgc_uint2str(&v47, 21, v49);\n
    v13 = &v47;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v168 = v51;\n
    *(v168) = *(v168) - 8;\n
    v169 = v52;\n
    *(v169) = *(v169) + 1;\n
    v97 = v136;\n
    v96 = a0;\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(&*(v97)->field_0);\n
    v170 = v96;\n
    *(v170) = *(v170) - 2;\n
    v171 = v97;\n
    *(v171) = &*(v171)->padding_1[1];\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_42b957;\n
    if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42b957:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, &v21[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v172 = v96;\n
    *(v172) = *(v172) - v95;\n
    v173 = v97;\n
    *(v173) = &(&*(v173)->field_0)[v95];\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v122 = v136;\n
    v121 = a0;\n
    if (*(v121) <= 0)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v121) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v121);\n
    v120 = v12;\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = cgc_calloc(134);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v119, &v21[18].padding_0[182]);\n
    cgc_strncpy(v119 + 5, *(v122), v120);\n
    v175 = v122;\n
    *(v175) = &(&*(v175)->field_4)[cgc_strlen(v119)];\n
    v177 = v121;\n
    *(v177) = *(v177) - (cgc_strlen(v119) + -4);\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    if (cgc_sendline(1, &v21[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v73 = v136;\n
    v72 = a0;\n
    memset(&v70, 0, 4);\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(v73)->field_0;\n
    cgc_uint2str(&v70, 4, v71);\n
    v11 = &v70;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v178 = v72;\n
    *(v178) = *(v178) - 1;\n
    v179 = v73;\n
    *(v179) = &*(v179)->padding_1;\n
    v118 = v136;\n
    v117 = a0;\n
    if (*(v117) <= 0)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v117) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v117);\n
    v116 = v10;\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = cgc_calloc(134);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v115, &v21[18].padding_0[182]);\n
    cgc_strncpy(v115 + 5, *(v118), v116);\n
    v181 = v118;\n
    *(v181) = &(&*(v181)->field_4)[cgc_strlen(v115)];\n
    v183 = v117;\n
    *(v183) = *(v183) - (cgc_strlen(v115) + -4);\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    if (cgc_sendline(1, &v21[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v69 = v136;\n
    v68 = a0;\n
    memset(&v66, 0, 4);\n
    if (*(v68) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(v69)->field_0;\n
    cgc_uint2str(&v66, 4, v67);\n
    v9 = &v66;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v184 = v68;\n
    *(v184) = *(v184) - 1;\n
    v185 = v69;\n
    *(v185) = &*(v185)->padding_1;\n
    v35 = v136;\n
    v34 = a0;\n
    *(&v32) = *(v35);\n
    memset(&v31, 0, 6);\n
    if (*(v34) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v32[0] << 8)\n
        v8 = v32[1];\n
    v33 = v8 & 1;\n
    cgc_uint2str(&v31, 6, v33);\n
    v7 = &v31;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v31)) < 0)\n
        cgc__terminate();\n
    v186 = v34;\n
    *(v186) = *(v186) - 2;\n
    v187 = v35;\n
    *(v187) = &*(v187)->padding_1[1];\n
    v30 = v136;\n
    v29 = a0;\n
    *(&v27) = *(v30);\n
    memset(&v26, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v27[0] << 8)\n
        v6 = v27[1];\n
    v28 = v6 & 1;\n
    cgc_uint2str(&v26, 6, v28);\n
    v5 = &v26;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v26)) < 0)\n
        cgc__terminate();\n
    v188 = v29;\n
    *(v188) = *(v188) - 2;\n
    v189 = v30;\n
    *(v189) = &*(v189)->padding_1[1];\n
    v114 = v136;\n
    v113 = a0;\n
    if (*(v113) <= 0)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v113) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v113);\n
    v112 = v4;\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = cgc_calloc(134);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v111, &v21[18].padding_0[182]);\n
    cgc_strncpy(v111 + 5, *(v114), v112);\n
    v191 = v114;\n
    *(v191) = &(&*(v191)->field_4)[cgc_strlen(v111)];\n
    v193 = v113;\n
    *(v193) = *(v193) - (cgc_strlen(v111) + -4);\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    if (cgc_sendline(1, &v21[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v110 = v136;\n
    v109 = a0;\n
    *(&v107[0]) = *(v110);\n
    memset(&v106, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v107[0] << 24)\n
    {\n
        v3 = 0;\n
        if (v107[1] << 16)\n
        {\n
            v3 = 0;\n
            if (v107[2] << 8)\n
                v3 = v107[3];\n
        }\n
    }\n
    v108 = v3 & 1;\n
    cgc_uint2str(&v106, 12, v108);\n
    v2 = &v106;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v194 = v109;\n
    *(v194) = *(v194) - 4;\n
    v195 = v110;\n
    *(v195) = &*(v195)->field_4;\n
    v101 = v136;\n
    v100 = a0;\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(&*(v101)->field_0);\n
    v196 = v100;\n
    *(v196) = *(v196) - 2;\n
    v197 = v101;\n
    *(v197) = &*(v197)->padding_1[1];\n
    if (v99 <= *(v100) && !(!v99))\n
        goto LABEL_42c996;\n
    if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42c996:\n
    v98 = cgc_calloc(v99);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v98, *(v101), v99);\n
    if (cgc_sendline(1, &v21[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v198 = v100;\n
    *(v198) = *(v198) - v99;\n
    v199 = v101;\n
    *(v199) = &(&*(v199)->field_0)[v99];\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    v59 = v136;\n
    v58 = a0;\n
    v57 = &*(v59)->field_0;\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v200 = v58;\n
    *(v200) = *(v200) - 1;\n
    v201 = v59;\n
    *(v201) = &*(v201)->padding_1;\n
    v22 = *(v57);\n
    v83 = v136;\n
    v82 = a0;\n
    v81 = &*(v83)->field_0;\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = v82;\n
    *(v202) = *(v202) - 2;\n
    v203 = v83;\n
    *(v203) = &*(v203)->padding_1[1];\n
    v22 = *(v81);\n
    v80 = v136;\n
    v79 = a0;\n
    v78 = &*(v80)->field_0;\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = v79;\n
    *(v204) = *(v204) - 2;\n
    v205 = v80;\n
    *(v205) = &*(v205)->padding_1[1];\n
    v22 = *(v78);\n
    v46 = v136;\n
    v45 = a0;\n
    *(&v42[0]) = *(v46);\n
    memset(&v41, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v42[0])\n
    {\n
        v1 = 0;\n
        if (v42[1])\n
        {\n
            v1 = 0;\n
            if (v42[2])\n
            {\n
                v1 = 0;\n
                if (v42[3])\n
                {\n
                    v1 = 0;\n
                    if (v42[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v42[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v42[6] << 8)\n
                                v1 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v43 = v1 & 1;\n
    v44 = 0;\n
    cgc_uint2str(&v41, 21, v43);\n
    v0 = &v41;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v41)) < 0)\n
        cgc__terminate();\n
    v206 = v45;\n
    *(v206) = *(v206) - 8;\n
    v207 = v46;\n
    *(v207) = *(v207) + 1;\n
    v134 = v136;\n
    v133 = a0;\n
    if (*(v133) < 1)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(v134)->field_0;\n
    v208 = v133;\n
    *(v208) = *(v208) - 1;\n
    v209 = v134;\n
    *(v209) = &*(v209)->padding_1;\n
    if (v132 <= *(v133) && !(!v132))\n
        goto LABEL_42cff3;\n
    if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42cff3:\n
    v131 = cgc_calloc(v132);\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, &v21[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v131, *(v134), v132);\n
    if (cgc_sendline(1, &v21[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v210 = v134;\n
    *(v210) = &(&*(v210)->field_0)[v132];\n
    v211 = v133;\n
    *(v211) = *(v211) - v132;\n
    cgc_checkheap();\n
    cgc_free(v131);\n
    v23 ^= v21->field_260;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v212 = a0;\n
    if (*(v212) > 0 && v22 >= 0 && v22 < 2)\n
        v212 = (&v24)[v22](v136);\n
    v213 = v135;\n
    return v212;\n
}\n
", "4378999:sub_42d177": null, "4379008:cgc_process_llamaPantagruelistic": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaPantagruelistic(struct struct_1 **v119, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x25c]\n
    struct_0 *v1;  // [bp-0x258]\n
    struct_0 *v2;  // [bp-0x254]\n
    struct_0 *v3;  // [bp-0x250]\n
    struct_0 *v4;  // [bp-0x24c]\n
    struct_0 *v5;  // [bp-0x248]\n
    char v6;  // [bp-0x241]\n
    struct_0 *v7;  // [bp-0x240]\n
    char v8;  // [bp-0x239]\n
    struct_0 *v9;  // [bp-0x238]\n
    struct_0 *v10;  // [bp-0x234]\n
    struct_0 *v11;  // [bp-0x230]\n
    char v12;  // [bp-0x229]\n
    struct_0 *v13;  // [bp-0x228]\n
    struct_0 *v14;  // [bp-0x224]\n
    char v15;  // [bp-0x21d]\n
    struct_0 *v16;  // [bp-0x21c]\n
    struct_2 *v17;  // [bp-0x218]\n
    unsigned short v18;  // [bp-0x214]\n
    unsigned short v19;  // [bp-0x212]\n
    unsigned short v20;  // [bp-0x210]\n
    unsigned short v21;  // [bp-0x20e]\n
    unsigned short v22;  // [bp-0x20c]\n
    unsigned short v23;  // [bp-0x20a]\n
    unsigned short v24;  // [bp-0x208]\n
    unsigned short v25;  // [bp-0x206]\n
    unsigned long v26;  // [bp-0x204]\n
    unsigned long v27;  // [bp-0x1fc]\n
    unsigned long v28;  // [bp-0x1f4]\n
    unsigned long v29;  // [bp-0x1ec]\n
    struct struct_3 **v30;  // [bp-0x1e4]\n
    unsigned int v31;  // [bp-0x1e0]\n
    char v32;  // [bp-0x1dc]\n
    char v33;  // [bp-0x1da]\n
    char v34[2];  // [bp-0x1d4]\n
    unsigned short v35;  // [bp-0x1ce]\n
    unsigned int *v36;  // [bp-0x1cc]\n
    struct struct_1 **v37;  // [bp-0x1c8]\n
    char v38;  // [bp-0x1c2]\n
    char v39[2];  // [bp-0x1bc]\n
    unsigned short v40;  // [bp-0x1b6]\n
    unsigned int *v41;  // [bp-0x1b4]\n
    struct struct_1 **v42;  // [bp-0x1b0]\n
    unsigned int v43;  // [bp-0x1ac]\n
    char v44;  // [bp-0x1a5]\n
    unsigned int *v45;  // [bp-0x1a4]\n
    struct struct_1 **v46;  // [bp-0x1a0]\n
    unsigned int v47;  // [bp-0x19c]\n
    char v48;  // [bp-0x195]\n
    unsigned int *v49;  // [bp-0x194]\n
    struct struct_1 **v50;  // [bp-0x190]\n
    unsigned int v51;  // [bp-0x18c]\n
    char v52;  // [bp-0x185]\n
    unsigned int *v53;  // [bp-0x184]\n
    struct struct_1 **v54;  // [bp-0x180]\n
    char v55;  // [bp-0x179]\n
    char v56;  // [bp-0x175]\n
    unsigned int *v57;  // [bp-0x174]\n
    struct struct_1 **v58;  // [bp-0x170]\n
    char v59;  // [bp-0x169]\n
    char v60;  // [bp-0x165]\n
    unsigned int *v61;  // [bp-0x164]\n
    struct struct_1 **v62;  // [bp-0x160]\n
    char v63;  // [bp-0x159]\n
    unsigned long v64;  // [bp-0x144]\n
    unsigned int *v65;  // [bp-0x13c]\n
    struct struct_1 **v66;  // [bp-0x138]\n
    char v67;  // [bp-0x131]\n
    unsigned long v68;  // [bp-0x11c]\n
    unsigned int *v69;  // [bp-0x114]\n
    struct struct_1 **v70;  // [bp-0x110]\n
    char v71;  // [bp-0x10c]\n
    unsigned int v72;  // [bp-0x100]\n
    unsigned int *v73;  // [bp-0xfc]\n
    struct struct_1 **v74;  // [bp-0xf8]\n
    char v75;  // [bp-0xf4]\n
    unsigned int v76;  // [bp-0xe8]\n
    unsigned int *v77;  // [bp-0xe4]\n
    struct struct_1 **v78;  // [bp-0xe0]\n
    char v79;  // [bp-0xdc]\n
    unsigned int v80;  // [bp-0xd0]\n
    unsigned int *v81;  // [bp-0xcc]\n
    struct struct_1 **v82;  // [bp-0xc8]\n
    char v83;  // [bp-0xc4]\n
    unsigned int v84;  // [bp-0xb8]\n
    unsigned int *v85;  // [bp-0xb4]\n
    struct struct_1 **v86;  // [bp-0xb0]\n
    unsigned int v87;  // [bp-0xac]\n
    unsigned short v88;  // [bp-0xa6]\n
    unsigned int *v89;  // [bp-0xa4]\n
    struct struct_1 **v90;  // [bp-0xa0]\n
    unsigned int v91;  // [bp-0x9c]\n
    unsigned short v92;  // [bp-0x96]\n
    unsigned int *v93;  // [bp-0x94]\n
    struct struct_1 **v94;  // [bp-0x90]\n
    unsigned int v95;  // [bp-0x8c]\n
    unsigned short v96;  // [bp-0x86]\n
    unsigned int *v97;  // [bp-0x84]\n
    struct struct_1 **v98;  // [bp-0x80]\n
    char v99;  // [bp-0x7c]\n
    struct_1 *v100;  // [bp-0x70]\n
    unsigned int v101;  // [bp-0x6c]\n
    unsigned int *v102;  // [bp-0x68]\n
    struct struct_1 **v103;  // [bp-0x64]\n
    char v104;  // [bp-0x60]\n
    char v105[4];  // [bp-0x54]\n
    unsigned int v106;  // [bp-0x50]\n
    unsigned int *v107;  // [bp-0x4c]\n
    struct struct_1 **v108;  // [bp-0x48]\n
    char v109;  // [bp-0x41]\n
    unsigned int v110;  // [bp-0x2c]\n
    unsigned int v111;  // [bp-0x28]\n
    unsigned int *v112;  // [bp-0x20]\n
    struct struct_1 **v113;  // [bp-0x1c]\n
    unsigned int v114;  // [bp-0x18]\n
    char v115;  // [bp-0x11]\n
    unsigned int *v116;  // [bp-0x10]\n
    struct struct_1 **v117;  // [bp-0xc]\n
    unsigned int v118;  // [bp-0x8]\n
    unsigned int v120;  // ebx\n
    unsigned int *v121;  // eax\n
    struct struct_1 **v122;  // eax\n
    unsigned int *v123;  // eax\n
    struct struct_1 **v124;  // eax\n
    unsigned int *v125;  // eax\n
    struct struct_1 **v126;  // eax\n
    unsigned int *v127;  // eax\n
    struct struct_1 **v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_1 **v130;  // eax\n
    unsigned int *v131;  // eax\n
    struct struct_1 **v132;  // eax\n
    unsigned int *v133;  // eax\n
    struct struct_1 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_1 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_1 **v138;  // eax\n
    unsigned int *v139;  // eax\n
    struct struct_1 **v140;  // eax\n
    unsigned int *v141;  // eax\n
    struct struct_1 **v142;  // eax\n
    unsigned int *v143;  // eax\n
    struct struct_1 **v144;  // eax\n
    unsigned int *v145;  // eax\n
    struct struct_1 **v146;  // eax\n
    unsigned int *v147;  // eax\n
    struct struct_1 **v148;  // eax\n
    unsigned int *v149;  // eax\n
    struct struct_1 **v150;  // eax\n
    struct struct_1 **v151;  // eax\n
    unsigned int *v152;  // eax\n
    unsigned int *v153;  // eax\n
    struct struct_1 **v154;  // eax\n
    struct struct_1 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    unsigned int *v157;  // eax\n
    struct struct_1 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    struct struct_1 **v160;  // eax\n
    struct struct_1 **v161;  // eax\n
    unsigned int *v162;  // eax\n
    struct_1 *v163;  // ecx\n
    unsigned int *v164;  // eax\n
    struct struct_1 **v165;  // eax\n
    unsigned int *v166;  // eax\n
    struct struct_1 **v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_1 **v169;  // eax\n
    unsigned int *v170;  // eax\n
    struct struct_1 **v171;  // eax\n
    unsigned int *v172;  // eax\n
    struct struct_1 **v173;  // eax\n
    struct struct_1 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    unsigned int *v176;  // eax, Other Possible Types: unsigned int\n
    unsigned int v177;  // ebx\n
\n
    v118 = v120;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v31 = cgc__cookie;\n
    v30 = -1;\n
    if (cgc_sendline(1, \"===llamaPantagruelistic===\", 26) < 0)\n
        cgc__terminate();\n
    v86 = v119;\n
    v85 = a0;\n
    memset(&v83, 0, 12);\n
    if (*(v85) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v84 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v25 = [D] x86g_create_fpucw(fpround<4>);\n
    v24 = v25 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v83, 12, v29);\n
    v16 = &v83;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v121 = v85;\n
    *(v121) = *(v121) - 4;\n
    v122 = v86;\n
    *(v122) = &*(v122)->field_4;\n
    v42 = v119;\n
    v41 = a0;\n
    *(&v39) = *(v42);\n
    memset(&v38, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v39[0] << 8)\n
        v15 = v39[1];\n
    v40 = v15 & 1;\n
    cgc_uint2str(&v38, 6, v40);\n
    v14 = &v38;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v123 = v41;\n
    *(v123) = *(v123) - 2;\n
    v124 = v42;\n
    *(v124) = &*(v124)->padding_1[1];\n
    v62 = v119;\n
    v61 = a0;\n
    memset(&v59, 0, 4);\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(v62)->field_0;\n
    cgc_uint2str(&v59, 4, v60);\n
    v13 = &v59;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v125 = v61;\n
    *(v125) = *(v125) - 1;\n
    v126 = v62;\n
    *(v126) = &*(v126)->padding_1;\n
    v37 = v119;\n
    v36 = a0;\n
    *(&v34) = *(v37);\n
    memset(&v33, 0, 6);\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v34[0] << 8)\n
        v12 = v34[1];\n
    v35 = v12 & 1;\n
    cgc_uint2str(&v33, 6, v35);\n
    v11 = &v33;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v33)) < 0)\n
        cgc__terminate();\n
    v127 = v36;\n
    *(v127) = *(v127) - 2;\n
    v128 = v37;\n
    *(v128) = &*(v128)->padding_1[1];\n
    v98 = v119;\n
    v97 = a0;\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    v129 = v97;\n
    *(v129) = *(v129) - 2;\n
    v130 = v98;\n
    *(v130) = &*(v130)->padding_1[1];\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_42d8be;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42d8be:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v131 = v97;\n
    *(v131) = *(v131) - v96;\n
    v132 = v98;\n
    *(v132) = &(&*(v132)->field_0)[v96];\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v78 = v119;\n
    v77 = a0;\n
    memset(&v75, 0, 12);\n
    if (*(v77) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(&*(v78)->field_0);\n
    cgc_uint2str(&v75, 12, v76);\n
    v10 = &v75;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v133 = v77;\n
    *(v133) = *(v133) - 4;\n
    v134 = v78;\n
    *(v134) = &*(v134)->field_4;\n
    v82 = v119;\n
    v81 = a0;\n
    memset(&v79, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v23 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-518, size=2, endness=Iend_LE)))));\n
    v22 = v23 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v79, 12, v28);\n
    v9 = &v79;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v135 = v81;\n
    *(v135) = *(v135) - 4;\n
    v136 = v82;\n
    *(v136) = &*(v136)->field_4;\n
    v94 = v119;\n
    v93 = a0;\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    v137 = v93;\n
    *(v137) = *(v137) - 2;\n
    v138 = v94;\n
    *(v138) = &*(v138)->padding_1[1];\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_42dda6;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42dda6:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v139 = v93;\n
    *(v139) = *(v139) - v92;\n
    v140 = v94;\n
    *(v140) = &(&*(v140)->field_0)[v92];\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v108 = v119;\n
    v107 = a0;\n
    *(&v105[0]) = *(v108);\n
    memset(&v104, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v105[0] << 24)\n
    {\n
        v8 = 0;\n
        if (v105[1] << 16)\n
        {\n
            v8 = 0;\n
            if (v105[2] << 8)\n
                v8 = v105[3];\n
        }\n
    }\n
    v106 = v8 & 1;\n
    cgc_uint2str(&v104, 12, v106);\n
    v7 = &v104;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v104)) < 0)\n
        cgc__terminate();\n
    v141 = v107;\n
    *(v141) = *(v141) - 4;\n
    v142 = v108;\n
    *(v142) = &*(v142)->field_4;\n
    v103 = v119;\n
    v102 = a0;\n
    v100 = *(v103);\n
    memset(&v99, 0, 12);\n
    if (*(v102) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v100->field_0 << 24)\n
    {\n
        v6 = 0;\n
        if (v100->padding_1[0] << 16)\n
        {\n
            v6 = 0;\n
            if (v100->padding_1[1] << 8)\n
                v6 = v100->padding_1[2];\n
        }\n
    }\n
    v101 = v6 & 1;\n
    cgc_uint2str(&v99, 12, v101);\n
    v5 = &v99;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v143 = v102;\n
    *(v143) = *(v143) - 4;\n
    v144 = v103;\n
    *(v144) = &*(v144)->field_4;\n
    v90 = v119;\n
    v89 = a0;\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    v145 = v89;\n
    *(v145) = *(v145) - 2;\n
    v146 = v90;\n
    *(v146) = &*(v146)->padding_1[1];\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_42e2fc;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42e2fc:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v147 = v89;\n
    *(v147) = *(v147) - v88;\n
    v148 = v90;\n
    *(v148) = &(&*(v148)->field_0)[v88];\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v54 = v119;\n
    v53 = a0;\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = *(v54)->field_0;\n
    v149 = v53;\n
    *(v149) = *(v149) - 1;\n
    v150 = v54;\n
    *(v150) = &*(v150)->padding_1;\n
    if (v52 <= *(v53) && !(!v52))\n
        goto LABEL_42e534;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42e534:\n
    v51 = cgc_calloc(v52);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v51, *(v54), v52);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v151 = v54;\n
    *(v151) = &(&*(v151)->field_0)[v52];\n
    v152 = v53;\n
    *(v152) = *(v152) - v52;\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    v50 = v119;\n
    v49 = a0;\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v48 = *(v50)->field_0;\n
    v153 = v49;\n
    *(v153) = *(v153) - 1;\n
    v154 = v50;\n
    *(v154) = &*(v154)->padding_1;\n
    if (v48 <= *(v49) && !(!v48))\n
        goto LABEL_42e76c;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42e76c:\n
    v47 = cgc_calloc(v48);\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v47, *(v50), v48);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v155 = v50;\n
    *(v155) = &(&*(v155)->field_0)[v48];\n
    v156 = v49;\n
    *(v156) = *(v156) - v48;\n
    cgc_checkheap();\n
    cgc_free(v47);\n
    v70 = v119;\n
    v69 = a0;\n
    memset(&v67, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v68 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-522, size=2, endness=Iend_LE)))));\n
    v20 = v21 | 0xc00;\n
    v27 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v67, 21, v27);\n
    v4 = &v67;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v157 = v69;\n
    *(v157) = *(v157) - 8;\n
    v158 = v70;\n
    *(v158) = *(v158) + 1;\n
    v46 = v119;\n
    v45 = a0;\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v44 = *(v46)->field_0;\n
    v159 = v45;\n
    *(v159) = *(v159) - 1;\n
    v160 = v46;\n
    *(v160) = &*(v160)->padding_1;\n
    if (v44 <= *(v45) && !(!v44))\n
        goto LABEL_42eb18;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42eb18:\n
    v43 = cgc_calloc(v44);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v43, *(v46), v44);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v161 = v46;\n
    *(v161) = &(&*(v161)->field_0)[v44];\n
    v162 = v45;\n
    *(v162) = *(v162) - v44;\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    v113 = v119;\n
    v112 = a0;\n
    memset(&v109, 0, 21);\n
    if (*(v112) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = *(v113);\n
    v111 = v163->field_4;\n
    v110 = *(&v163->field_0);\n
    cgc_uint2str(&v109, 21, v110);\n
    v3 = &v109;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v164 = v112;\n
    *(v164) = *(v164) - 8;\n
    v165 = v113;\n
    *(v165) = *(v165) + 1;\n
    v74 = v119;\n
    v73 = a0;\n
    memset(&v71, 0, 12);\n
    if (*(v73) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(&*(v74)->field_0);\n
    cgc_uint2str(&v71, 12, v72);\n
    v2 = &v71;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v166 = v73;\n
    *(v166) = *(v166) - 4;\n
    v167 = v74;\n
    *(v167) = &*(v167)->field_4;\n
    v66 = v119;\n
    v65 = a0;\n
    memset(&v63, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v64 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-526, size=2, endness=Iend_LE)))));\n
    v18 = v19 | 0xc00;\n
    v26 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v63, 21, v26);\n
    v1 = &v63;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v168 = v65;\n
    *(v168) = *(v168) - 8;\n
    v169 = v66;\n
    *(v169) = *(v169) + 1;\n
    v58 = v119;\n
    v57 = a0;\n
    memset(&v55, 0, 4);\n
    if (*(v57) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(v58)->field_0;\n
    cgc_uint2str(&v55, 4, v56);\n
    v0 = &v55;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v170 = v57;\n
    *(v170) = *(v170) - 1;\n
    v171 = v58;\n
    *(v171) = &*(v171)->padding_1;\n
    v117 = v119;\n
    v116 = a0;\n
    if (*(v116) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = *(v117)->field_0;\n
    v172 = v116;\n
    *(v172) = *(v172) - 1;\n
    v173 = v117;\n
    *(v173) = &*(v173)->padding_1;\n
    if (v115 <= *(v116) && !(!v115))\n
        goto LABEL_42f252;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42f252:\n
    v114 = cgc_calloc(v115);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v114, *(v117), v115);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v174 = v117;\n
    *(v174) = &(&*(v174)->field_0)[v115];\n
    v175 = v116;\n
    *(v175) = *(v175) - v115;\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    v31 ^= v17->field_260;\n
    if (v31)\n
        cgc___stack_cookie_fail();\n
    v176 = a0;\n
    if (*(v176) > 0 && v30 >= 0 && v30 < 0)\n
        v176 = *((&v32 + 0x4 * v30))(v119);\n
    v177 = v118;\n
    return v176;\n
}\n
", "4387798:sub_42f3d6": null, "4387808:cgc_process_llamafolliculin": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamafolliculin(struct struct_0 **v82, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c4]\n
    struct_1 *v1;  // [bp-0x1c0]\n
    struct_1 *v2;  // [bp-0x1bc]\n
    char v3;  // [bp-0x1b5]\n
    struct_1 *v4;  // [bp-0x1b4]\n
    struct_1 *v5;  // [bp-0x1b0]\n
    struct_1 *v6;  // [bp-0x1ac]\n
    struct_1 *v7;  // [bp-0x1a8]\n
    unsigned int v8;  // [bp-0x1a4]\n
    struct_1 *v9;  // [bp-0x1a0]\n
    struct_1 *v10;  // [bp-0x19c]\n
    char v11;  // [bp-0x195]\n
    struct_3 *v12;  // [bp-0x194]\n
    unsigned short v13;  // [bp-0x190]\n
    unsigned short v14;  // [bp-0x18e]\n
    unsigned short v15;  // [bp-0x18c]\n
    unsigned short v16;  // [bp-0x18a]\n
    unsigned short v17;  // [bp-0x188]\n
    unsigned short v18;  // [bp-0x186]\n
    unsigned long v19;  // [bp-0x184]\n
    unsigned long v20;  // [bp-0x17c]\n
    unsigned long v21;  // [bp-0x174]\n
    struct struct_2 **v22;  // [bp-0x168]\n
    unsigned int v23;  // [bp-0x164]\n
    char v24;  // [bp-0x160]\n
    char v25;  // [bp-0x15d]\n
    char v26[8];  // [bp-0x148]\n
    unsigned int v27;  // [bp-0x144]\n
    void* v28;  // [bp-0x140]\n
    unsigned int *v29;  // [bp-0x13c]\n
    struct struct_0 **v30;  // [bp-0x138]\n
    char *v31;  // [bp-0x134]\n
    unsigned int v32;  // [bp-0x130]\n
    unsigned int *v33;  // [bp-0x12c]\n
    struct struct_0 **v34;  // [bp-0x128]\n
    char v35;  // [bp-0x124]\n
    unsigned short v36;  // [bp-0x11e]\n
    unsigned int *v37;  // [bp-0x11c]\n
    struct struct_0 **v38;  // [bp-0x118]\n
    char v39;  // [bp-0x114]\n
    unsigned short v40;  // [bp-0x10e]\n
    unsigned int *v41;  // [bp-0x10c]\n
    struct struct_0 **v42;  // [bp-0x108]\n
    char v43;  // [bp-0x101]\n
    unsigned long v44;  // [bp-0xec]\n
    unsigned int *v45;  // [bp-0xe4]\n
    struct struct_0 **v46;  // [bp-0xe0]\n
    char v47;  // [bp-0xd9]\n
    unsigned long v48;  // [bp-0xc4]\n
    unsigned int *v49;  // [bp-0xb8]\n
    struct struct_0 **v50;  // [bp-0xb4]\n
    char v51;  // [bp-0xb0]\n
    unsigned int v52;  // [bp-0xa4]\n
    unsigned int *v53;  // [bp-0xa0]\n
    struct struct_0 **v54;  // [bp-0x9c]\n
    char v55;  // [bp-0x98]\n
    unsigned int v56;  // [bp-0x8c]\n
    unsigned int *v57;  // [bp-0x88]\n
    struct struct_0 **v58;  // [bp-0x84]\n
    unsigned int v59;  // [bp-0x80]\n
    unsigned short v60;  // [bp-0x7a]\n
    unsigned int *v61;  // [bp-0x78]\n
    struct struct_0 **v62;  // [bp-0x74]\n
    unsigned int v63;  // [bp-0x70]\n
    unsigned short v64;  // [bp-0x6a]\n
    unsigned int *v65;  // [bp-0x68]\n
    struct struct_0 **v66;  // [bp-0x64]\n
    char v67;  // [bp-0x60]\n
    struct_4 *v68;  // [bp-0x54]\n
    unsigned int v69;  // [bp-0x50]\n
    unsigned int *v70;  // [bp-0x4c]\n
    struct struct_0 **v71;  // [bp-0x48]\n
    char v72;  // [bp-0x41]\n
    unsigned int v73;  // [bp-0x2c]\n
    unsigned int v74;  // [bp-0x28]\n
    unsigned int *v75;  // [bp-0x20]\n
    struct struct_0 **v76;  // [bp-0x1c]\n
    unsigned int v77;  // [bp-0x18]\n
    char v78;  // [bp-0x11]\n
    unsigned int *v79;  // [bp-0x10]\n
    struct struct_0 **v80;  // [bp-0xc]\n
    unsigned int v81;  // [bp-0x8]\n
    unsigned int v83;  // ebx\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    unsigned int *v86;  // eax\n
    struct struct_0 **v87;  // eax\n
    unsigned int *v88;  // eax\n
    struct struct_0 **v89;  // eax\n
    unsigned int *v90;  // eax\n
    struct struct_0 **v91;  // eax\n
    unsigned int *v92;  // eax\n
    struct struct_0 **v93;  // eax\n
    unsigned int *v94;  // eax\n
    struct struct_0 **v95;  // eax\n
    struct struct_0 **v96;  // eax\n
    unsigned int *v97;  // eax\n
    unsigned int *v98;  // eax\n
    struct struct_0 **v99;  // eax\n
    struct struct_0 **v101;  // eax\n
    unsigned int *v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_0 **v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_0 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    struct_4 *v114;  // ecx\n
    unsigned int *v115;  // eax\n
    struct struct_0 **v116;  // eax\n
    unsigned int *v117;  // eax\n
    struct struct_0 **v118;  // eax\n
    unsigned int *v119;  // eax, Other Possible Types: unsigned int\n
    unsigned int v120;  // ebx\n
\n
    v81 = v83;\n
    v12 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamafolliculin===\", 21) < 0)\n
        cgc__terminate();\n
    v30 = v82;\n
    v29 = a0;\n
    *(&v26[0]) = *(v30);\n
    memset(&v25, 0, 21);\n
    if (*(v29) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v26[0])\n
    {\n
        v11 = 0;\n
        if (v26[1])\n
        {\n
            v11 = 0;\n
            if (v26[2])\n
            {\n
                v11 = 0;\n
                if (v26[3])\n
                {\n
                    v11 = 0;\n
                    if (v26[4] << 24)\n
                    {\n
                        v11 = 0;\n
                        if (v26[5] << 16)\n
                        {\n
                            v11 = 0;\n
                            if (v26[6] << 8)\n
                                v11 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v27 = v11 & 1;\n
    v28 = 0;\n
    cgc_uint2str(&v25, 21, v27);\n
    v10 = &v25;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v84 = v29;\n
    *(v84) = *(v84) - 8;\n
    v85 = v30;\n
    *(v85) = &(*(v85))[1].padding_1[2];\n
    v66 = v82;\n
    v65 = a0;\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    v86 = v65;\n
    *(v86) = *(v86) - 2;\n
    v87 = v66;\n
    *(v87) = &*(v87)->padding_1[1];\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_42f797;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42f797:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, &v12[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v88 = v65;\n
    *(v88) = *(v88) - v64;\n
    v89 = v66;\n
    *(v89) = &(&*(v89)->field_0)[v64];\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v62 = v82;\n
    v61 = a0;\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(&*(v62)->field_0);\n
    v90 = v61;\n
    *(v90) = *(v90) - 2;\n
    v91 = v62;\n
    *(v91) = &*(v91)->padding_1[1];\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_42f992;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42f992:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, &v12[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v92 = v61;\n
    *(v92) = *(v92) - v60;\n
    v93 = v62;\n
    *(v93) = &(&*(v93)->field_0)[v60];\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v80 = v82;\n
    v79 = a0;\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v78 = *(v80)->field_0;\n
    v94 = v79;\n
    *(v94) = *(v94) - 1;\n
    v95 = v80;\n
    *(v95) = &*(v95)->padding_1;\n
    if (v78 <= *(v79) && !(!v78))\n
        goto LABEL_42fb8b;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_42fb8b:\n
    v77 = cgc_calloc(v78);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v77, *(v80), v78);\n
    if (cgc_sendline(1, &v12[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v96 = v80;\n
    *(v96) = &(&*(v96)->field_0)[v78];\n
    v97 = v79;\n
    *(v97) = *(v97) - v78;\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    v42 = v82;\n
    v41 = a0;\n
    memset(&v39, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = *(&*(v42)->field_0);\n
    cgc_uint2str(&v39, 6, v40);\n
    v9 = &v39;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v98 = v41;\n
    *(v98) = *(v98) - 2;\n
    v99 = v42;\n
    *(v99) = &*(v99)->padding_1[1];\n
    v34 = v82;\n
    v33 = a0;\n
    if (*(v33) <= 0)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v33) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v33);\n
    v32 = v8;\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = cgc_calloc(134);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v31, &v12[18].padding_0[182]);\n
    cgc_strncpy(v31 + 5, *(v34), v32);\n
    v101 = v34;\n
    *(v101) = &(&*(v101)->field_4)[cgc_strlen(v31)];\n
    v103 = v33;\n
    *(v103) = *(v103) - (cgc_strlen(v31) + -4);\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    if (cgc_sendline(1, &v12[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v58 = v82;\n
    v57 = a0;\n
    memset(&v55, 0, 12);\n
    if (*(v57) < 4)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v56 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v18 = [D] x86g_create_fpucw(fpround<4>);\n
    v17 = v18 | 0xc00;\n
    v21 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v55, 12, v21);\n
    v7 = &v55;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v104 = v57;\n
    *(v104) = *(v104) - 4;\n
    v105 = v58;\n
    *(v105) = &*(v105)->field_4;\n
    v50 = v82;\n
    v49 = a0;\n
    memset(&v47, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v48 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v16 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-390, size=2, endness=Iend_LE)))));\n
    v15 = v16 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v47, 21, v20);\n
    v6 = &v47;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v106 = v49;\n
    *(v106) = *(v106) - 8;\n
    v107 = v50;\n
    *(v107) = &(*(v107))[1].padding_1[2];\n
    v46 = v82;\n
    v45 = a0;\n
    memset(&v43, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v44 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v14 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-394, size=2, endness=Iend_LE)))));\n
    v13 = v14 | 0xc00;\n
    v19 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v43, 21, v19);\n
    v5 = &v43;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v43)) < 0)\n
        cgc__terminate();\n
    v108 = v45;\n
    *(v108) = *(v108) - 8;\n
    v109 = v46;\n
    *(v109) = &(*(v109))[1].padding_1[2];\n
    v54 = v82;\n
    v53 = a0;\n
    memset(&v51, 0, 12);\n
    if (*(v53) < 4)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = *(&*(v54)->field_0);\n
    cgc_uint2str(&v51, 12, v52);\n
    v4 = &v51;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v110 = v53;\n
    *(v110) = *(v110) - 4;\n
    v111 = v54;\n
    *(v111) = &*(v111)->field_4;\n
    v71 = v82;\n
    v70 = a0;\n
    v68 = &*(v71);\n
    memset(&v67, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v68->field_0 << 24)\n
    {\n
        v3 = 0;\n
        if (v68->padding_1[0] << 16)\n
        {\n
            v3 = 0;\n
            if (v68->padding_1[1] << 8)\n
                v3 = v68->padding_1[2];\n
        }\n
    }\n
    v69 = v3 & 1;\n
    cgc_uint2str(&v67, 12, v69);\n
    v2 = &v67;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v112 = v70;\n
    *(v112) = *(v112) - 4;\n
    v113 = v71;\n
    *(v113) = &*(v113)->field_4;\n
    v76 = v82;\n
    v75 = a0;\n
    memset(&v72, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(v76);\n
    v74 = v114->field_4;\n
    v73 = *(&v114->field_0);\n
    cgc_uint2str(&v72, 21, v73);\n
    v1 = &v72;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v115 = v75;\n
    *(v115) = *(v115) - 8;\n
    v116 = v76;\n
    *(v116) = &(*(v116))[1].padding_1[2];\n
    v38 = v82;\n
    v37 = a0;\n
    memset(&v35, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = *(&*(v38)->field_0);\n
    cgc_uint2str(&v35, 6, v36);\n
    v0 = &v35;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v117 = v37;\n
    *(v117) = *(v117) - 2;\n
    v118 = v38;\n
    *(v118) = &*(v118)->padding_1[1];\n
    v23 ^= v12->field_260;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v119 = a0;\n
    if (*(v119) > 0 && v22 >= 0 && v22 < 0)\n
        v119 = *((&v24 + 0x4 * v22))(v82);\n
    v120 = v81;\n
    return v119;\n
}\n
", "4393573:sub_430a65": null, "4393584:cgc_process_llamadoldrums": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadoldrums(struct struct_0 **v204, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x3f0]\n
    unsigned int v1;  // [bp-0x3ec]\n
    struct_1 *v2;  // [bp-0x3e8]\n
    char v3;  // [bp-0x3e1]\n
    struct_1 *v4;  // [bp-0x3e0]\n
    struct_1 *v5;  // [bp-0x3dc]\n
    char v6;  // [bp-0x3d5]\n
    struct_1 *v7;  // [bp-0x3d4]\n
    unsigned int v8;  // [bp-0x3d0]\n
    struct_1 *v9;  // [bp-0x3cc]\n
    unsigned int v10;  // [bp-0x3c8]\n
    struct_1 *v11;  // [bp-0x3c4]\n
    unsigned int v12;  // [bp-0x3c0]\n
    struct_1 *v13;  // [bp-0x3bc]\n
    unsigned int v14;  // [bp-0x3b8]\n
    struct_1 *v15;  // [bp-0x3b4]\n
    struct_1 *v16;  // [bp-0x3b0]\n
    struct_1 *v17;  // [bp-0x3ac]\n
    char v18;  // [bp-0x3a5]\n
    struct_1 *v19;  // [bp-0x3a4]\n
    char v20;  // [bp-0x39d]\n
    struct_1 *v21;  // [bp-0x39c]\n
    struct_1 *v22;  // [bp-0x398]\n
    struct_1 *v23;  // [bp-0x394]\n
    unsigned int v24;  // [bp-0x390]\n
    struct_1 *v25;  // [bp-0x38c]\n
    struct_1 *v26;  // [bp-0x388]\n
    char v27;  // [bp-0x381]\n
    struct_1 *v28;  // [bp-0x380]\n
    struct_1 *v29;  // [bp-0x37c]\n
    struct_1 *v30;  // [bp-0x378]\n
    struct_1 *v31;  // [bp-0x374]\n
    char v32;  // [bp-0x36d]\n
    struct_2 *v33;  // [bp-0x36c]\n
    unsigned short v34;  // [bp-0x368]\n
    unsigned short v35;  // [bp-0x366]\n
    unsigned short v36;  // [bp-0x364]\n
    unsigned short v37;  // [bp-0x362]\n
    unsigned short v38;  // [bp-0x360]\n
    unsigned short v39;  // [bp-0x35e]\n
    unsigned short v40;  // [bp-0x35c]\n
    unsigned short v41;  // [bp-0x35a]\n
    unsigned short v42;  // [bp-0x358]\n
    unsigned short v43;  // [bp-0x356]\n
    unsigned long v44;  // [bp-0x354]\n
    unsigned long v45;  // [bp-0x34c]\n
    unsigned long v46;  // [bp-0x344]\n
    unsigned long v47;  // [bp-0x33c]\n
    unsigned long v48;  // [bp-0x334]\n
    struct struct_3 **v49;  // [bp-0x32c]\n
    unsigned int v50;  // [bp-0x328]\n
    char v51;  // [bp-0x324]\n
    char v52;  // [bp-0x322]\n
    char *v53;  // [bp-0x31c]\n
    unsigned short v54;  // [bp-0x316]\n
    unsigned int *v55;  // [bp-0x314]\n
    struct struct_0 **v56;  // [bp-0x310]\n
    char v57;  // [bp-0x30a]\n
    char v58[2];  // [bp-0x304]\n
    unsigned short v59;  // [bp-0x2fe]\n
    unsigned int *v60;  // [bp-0x2fc]\n
    struct struct_0 **v61;  // [bp-0x2f8]\n
    char v62;  // [bp-0x2f2]\n
    char v63[2];  // [bp-0x2ec]\n
    unsigned short v64;  // [bp-0x2e6]\n
    unsigned int *v65;  // [bp-0x2e4]\n
    struct struct_0 **v66;  // [bp-0x2e0]\n
    char v67;  // [bp-0x2da]\n
    char v68[2];  // [bp-0x2d4]\n
    unsigned short v69;  // [bp-0x2ce]\n
    unsigned int *v70;  // [bp-0x2cc]\n
    struct struct_0 **v71;  // [bp-0x2c8]\n
    unsigned int v72;  // [bp-0x2c4]\n
    char v73;  // [bp-0x2bd]\n
    unsigned int *v74;  // [bp-0x2bc]\n
    struct struct_0 **v75;  // [bp-0x2b8]\n
    unsigned int v76;  // [bp-0x2b4]\n
    char v77;  // [bp-0x2ad]\n
    unsigned int *v78;  // [bp-0x2ac]\n
    struct struct_0 **v79;  // [bp-0x2a8]\n
    char *v80;  // [bp-0x2a4]\n
    unsigned int v81;  // [bp-0x2a0]\n
    unsigned int *v82;  // [bp-0x29c]\n
    struct struct_0 **v83;  // [bp-0x298]\n
    char v84;  // [bp-0x294]\n
    unsigned short v85;  // [bp-0x28e]\n
    unsigned int *v86;  // [bp-0x28c]\n
    struct struct_0 **v87;  // [bp-0x288]\n
    char v88;  // [bp-0x284]\n
    unsigned short v89;  // [bp-0x27e]\n
    unsigned int *v90;  // [bp-0x27c]\n
    struct struct_0 **v91;  // [bp-0x278]\n
    char v92;  // [bp-0x271]\n
    char v93;  // [bp-0x26d]\n
    unsigned int *v94;  // [bp-0x26c]\n
    struct struct_0 **v95;  // [bp-0x268]\n
    char v96;  // [bp-0x261]\n
    unsigned long v97;  // [bp-0x24c]\n
    unsigned int *v98;  // [bp-0x244]\n
    struct struct_0 **v99;  // [bp-0x240]\n
    char v100;  // [bp-0x239]\n
    unsigned long v101;  // [bp-0x224]\n
    unsigned int *v102;  // [bp-0x21c]\n
    struct struct_0 **v103;  // [bp-0x218]\n
    char v104;  // [bp-0x211]\n
    unsigned long v105;  // [bp-0x1fc]\n
    unsigned int *v106;  // [bp-0x1f4]\n
    struct struct_0 **v107;  // [bp-0x1f0]\n
    char v108;  // [bp-0x1ec]\n
    unsigned int v109;  // [bp-0x1e0]\n
    unsigned int *v110;  // [bp-0x1dc]\n
    struct struct_0 **v111;  // [bp-0x1d8]\n
    char v112;  // [bp-0x1d4]\n
    unsigned int v113;  // [bp-0x1c8]\n
    unsigned int *v114;  // [bp-0x1c4]\n
    struct struct_0 **v115;  // [bp-0x1c0]\n
    char v116;  // [bp-0x1bc]\n
    unsigned int v117;  // [bp-0x1b0]\n
    unsigned int *v118;  // [bp-0x1ac]\n
    struct struct_0 **v119;  // [bp-0x1a8]\n
    char v120;  // [bp-0x1a4]\n
    unsigned int v121;  // [bp-0x198]\n
    unsigned int *v122;  // [bp-0x194]\n
    struct struct_0 **v123;  // [bp-0x190]\n
    char v124;  // [bp-0x18c]\n
    unsigned int v125;  // [bp-0x180]\n
    unsigned int *v126;  // [bp-0x17c]\n
    struct struct_0 **v127;  // [bp-0x178]\n
    char v128;  // [bp-0x174]\n
    unsigned int v129;  // [bp-0x168]\n
    unsigned int *v130;  // [bp-0x164]\n
    struct struct_0 **v131;  // [bp-0x160]\n
    char v132;  // [bp-0x15c]\n
    unsigned int v133;  // [bp-0x150]\n
    unsigned int *v134;  // [bp-0x14c]\n
    struct struct_0 **v135;  // [bp-0x148]\n
    char v136;  // [bp-0x144]\n
    unsigned int v137;  // [bp-0x138]\n
    unsigned int *v138;  // [bp-0x134]\n
    struct struct_0 **v139;  // [bp-0x130]\n
    unsigned int v140;  // [bp-0x12c]\n
    unsigned short v141;  // [bp-0x126]\n
    unsigned int *v142;  // [bp-0x124]\n
    struct struct_0 **v143;  // [bp-0x120]\n
    unsigned int v144;  // [bp-0x11c]\n
    unsigned short v145;  // [bp-0x116]\n
    unsigned int *v146;  // [bp-0x114]\n
    struct struct_0 **v147;  // [bp-0x110]\n
    unsigned int v148;  // [bp-0x10c]\n
    unsigned short v149;  // [bp-0x106]\n
    unsigned int *v150;  // [bp-0x104]\n
    struct struct_0 **v151;  // [bp-0x100]\n
    unsigned int v152;  // [bp-0xfc]\n
    unsigned short v153;  // [bp-0xf6]\n
    unsigned int *v154;  // [bp-0xf4]\n
    struct struct_0 **v155;  // [bp-0xf0]\n
    unsigned int v156;  // [bp-0xec]\n
    unsigned short v157;  // [bp-0xe6]\n
    unsigned int *v158;  // [bp-0xe4]\n
    struct struct_0 **v159;  // [bp-0xe0]\n
    unsigned int v160;  // [bp-0xdc]\n
    unsigned short v161;  // [bp-0xd6]\n
    unsigned int *v162;  // [bp-0xd4]\n
    struct struct_0 **v163;  // [bp-0xd0]\n
    unsigned int v164;  // [bp-0xcc]\n
    unsigned short v165;  // [bp-0xc6]\n
    unsigned int *v166;  // [bp-0xc4]\n
    struct struct_0 **v167;  // [bp-0xc0]\n
    char v168;  // [bp-0xbc]\n
    char v169[4];  // [bp-0xb0]\n
    unsigned int v170;  // [bp-0xac]\n
    unsigned int *v171;  // [bp-0xa8]\n
    struct struct_0 **v172;  // [bp-0xa4]\n
    char v173;  // [bp-0xa0]\n
    char v174[4];  // [bp-0x94]\n
    unsigned int v175;  // [bp-0x90]\n
    unsigned int *v176;  // [bp-0x8c]\n
    struct struct_0 **v177;  // [bp-0x88]\n
    char *v178;  // [bp-0x84]\n
    unsigned int v179;  // [bp-0x80]\n
    unsigned int *v180;  // [bp-0x7c]\n
    struct struct_0 **v181;  // [bp-0x78]\n
    char *v182;  // [bp-0x74]\n
    unsigned int v183;  // [bp-0x70]\n
    unsigned int *v184;  // [bp-0x6c]\n
    struct struct_0 **v185;  // [bp-0x68]\n
    char *v186;  // [bp-0x64]\n
    unsigned int v187;  // [bp-0x60]\n
    unsigned int *v188;  // [bp-0x5c]\n
    struct struct_0 **v189;  // [bp-0x58]\n
    char *v190;  // [bp-0x54]\n
    unsigned int v191;  // [bp-0x50]\n
    unsigned int *v192;  // [bp-0x4c]\n
    struct struct_0 **v193;  // [bp-0x48]\n
    char *v194;  // [bp-0x44]\n
    unsigned int v195;  // [bp-0x40]\n
    unsigned int *v196;  // [bp-0x3c]\n
    struct struct_0 **v197;  // [bp-0x38]\n
    char v198;  // [bp-0x31]\n
    unsigned int v199;  // [bp-0x1c]\n
    unsigned int v200;  // [bp-0x18]\n
    unsigned int *v201;  // [bp-0x10]\n
    struct struct_0 **v202;  // [bp-0xc]\n
    unsigned int v203;  // [bp-0x8]\n
    unsigned int v205;  // ebx\n
    unsigned int *v206;  // eax\n
    struct struct_0 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    unsigned int v210[2];  // ecx\n
    unsigned int *v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    unsigned int *v215;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    unsigned int *v225;  // eax\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    struct struct_0 **v232;  // eax\n
    unsigned int *v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    unsigned int *v247;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_0 **v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_0 **v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax, Other Possible Types: unsigned int\n
    unsigned int v310;  // ebx\n
\n
    v203 = v205;\n
    v33 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v50 = cgc__cookie;\n
    v49 = -1;\n
    if (cgc_sendline(1, \"===llamadoldrums===\", 19) < 0)\n
        cgc__terminate();\n
    v177 = v204;\n
    v176 = a0;\n
    *(&v174[0]) = *(v177);\n
    memset(&v173, 0, 12);\n
    if (*(v176) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v174[0] << 24)\n
    {\n
        v32 = 0;\n
        if (v174[1] << 16)\n
        {\n
            v32 = 0;\n
            if (v174[2] << 8)\n
                v32 = v174[3];\n
        }\n
    }\n
    v175 = v32 & 1;\n
    cgc_uint2str(&v173, 12, v175);\n
    v31 = &v173;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v173)) < 0)\n
        cgc__terminate();\n
    v206 = v176;\n
    *(v206) = *(v206) - 4;\n
    v207 = v177;\n
    *(v207) = &*(v207)->field_4;\n
    v139 = v204;\n
    v138 = a0;\n
    memset(&v136, 0, 12);\n
    if (*(v138) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v137 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(fpround<4>);\n
    v42 = v43 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v136, 12, v48);\n
    v30 = &v136;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v136)) < 0)\n
        cgc__terminate();\n
    v208 = v138;\n
    *(v208) = *(v208) - 4;\n
    v209 = v139;\n
    *(v209) = &*(v209)->field_4;\n
    v202 = v204;\n
    v201 = a0;\n
    memset(&v198, 0, 21);\n
    if (*(v201) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v210 = *(v202);\n
    v200 = v210[1];\n
    v199 = v210[0];\n
    cgc_uint2str(&v198, 21, v199);\n
    v29 = &v198;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v198)) < 0)\n
        cgc__terminate();\n
    v211 = v201;\n
    *(v211) = *(v211) - 8;\n
    v212 = v202;\n
    *(v212) = *(v212) + 1;\n
    v91 = v204;\n
    v90 = a0;\n
    memset(&v88, 0, 6);\n
    if (*(v90) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = *(&*(v91)->field_0);\n
    cgc_uint2str(&v88, 6, v89);\n
    v28 = &v88;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v88)) < 0)\n
        cgc__terminate();\n
    v213 = v90;\n
    *(v213) = *(v213) - 2;\n
    v214 = v91;\n
    *(v214) = &*(v214)->padding_1[1];\n
    v71 = v204;\n
    v70 = a0;\n
    *(&v68) = *(v71);\n
    memset(&v67, 0, 6);\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v68[0] << 8)\n
        v27 = v68[1];\n
    v69 = v27 & 1;\n
    cgc_uint2str(&v67, 6, v69);\n
    v26 = &v67;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v215 = v70;\n
    *(v215) = *(v215) - 2;\n
    v216 = v71;\n
    *(v216) = &*(v216)->padding_1[1];\n
    v155 = v204;\n
    v154 = a0;\n
    if (*(v154) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v153 = *(&*(v155)->field_0);\n
    v217 = v154;\n
    *(v217) = *(v217) - 2;\n
    v218 = v155;\n
    *(v218) = &*(v218)->padding_1[1];\n
    if (v153 <= *(v154) && !(!v153))\n
        goto LABEL_431324;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_431324:\n
    v152 = cgc_calloc(v153);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v152, *(v155), v153);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v219 = v154;\n
    *(v219) = *(v219) - v153;\n
    v220 = v155;\n
    *(v220) = &(&*(v220)->field_0)[v153];\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    v79 = v204;\n
    v78 = a0;\n
    if (*(v78) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v77 = *(v79)->field_0;\n
    v221 = v78;\n
    *(v221) = *(v221) - 1;\n
    v222 = v79;\n
    *(v222) = &*(v222)->padding_1;\n
    if (v77 <= *(v78) && !(!v77))\n
        goto LABEL_43155c;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43155c:\n
    v76 = cgc_calloc(v77);\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v76, *(v79), v77);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v223 = v79;\n
    *(v223) = &(&*(v223)->field_0)[v77];\n
    v224 = v78;\n
    *(v224) = *(v224) - v77;\n
    cgc_checkheap();\n
    cgc_free(v76);\n
    v107 = v204;\n
    v106 = a0;\n
    memset(&v104, 0, 21);\n
    if (*(v106) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v105 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-854, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v104, 21, v47);\n
    v25 = &v104;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v104)) < 0)\n
        cgc__terminate();\n
    v225 = v106;\n
    *(v225) = *(v225) - 8;\n
    v226 = v107;\n
    *(v226) = *(v226) + 1;\n
    v167 = v204;\n
    v166 = a0;\n
    if (*(v166) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v165 = *(&*(v167)->field_0);\n
    v227 = v166;\n
    *(v227) = *(v227) - 2;\n
    v228 = v167;\n
    *(v228) = &*(v228)->padding_1[1];\n
    if (v165 <= *(v166) && !(!v165))\n
        goto LABEL_43190a;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43190a:\n
    v164 = cgc_calloc(v165);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v164, *(v167), v165);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v229 = v166;\n
    *(v229) = *(v229) - v165;\n
    v230 = v167;\n
    *(v230) = &(&*(v230)->field_0)[v165];\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    v197 = v204;\n
    v196 = a0;\n
    if (*(v196) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v196) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v196);\n
    v195 = v24;\n
    if (!v195)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v194 = cgc_calloc(134);\n
    if (!v194)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v194, &v33[18].padding_0[182]);\n
    cgc_strncpy(v194 + 5, *(v197), v195);\n
    v232 = v197;\n
    *(v232) = -4 + cgc_strlen(v194) + *(v232);\n
    v234 = v196;\n
    *(v234) = *(v234) - (cgc_strlen(v194) + -4);\n
    cgc_checkheap();\n
    cgc_free(v194);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v87 = v204;\n
    v86 = a0;\n
    memset(&v84, 0, 6);\n
    if (*(v86) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v85 = *(&*(v87)->field_0);\n
    cgc_uint2str(&v84, 6, v85);\n
    v23 = &v84;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v84)) < 0)\n
        cgc__terminate();\n
    v235 = v86;\n
    *(v235) = *(v235) - 2;\n
    v236 = v87;\n
    *(v236) = &*(v236)->padding_1[1];\n
    v131 = v204;\n
    v130 = a0;\n
    memset(&v128, 0, 12);\n
    if (*(v130) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = *(&*(v131)->field_0);\n
    cgc_uint2str(&v128, 12, v129);\n
    v22 = &v128;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v237 = v130;\n
    *(v237) = *(v237) - 4;\n
    v238 = v131;\n
    *(v238) = &*(v238)->field_4;\n
    v163 = v204;\n
    v162 = a0;\n
    if (*(v162) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v161 = *(&*(v163)->field_0);\n
    v239 = v162;\n
    *(v239) = *(v239) - 2;\n
    v240 = v163;\n
    *(v240) = &*(v240)->padding_1[1];\n
    if (v161 <= *(v162) && !(!v161))\n
        goto LABEL_432018;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_432018:\n
    v160 = cgc_calloc(v161);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v160, *(v163), v161);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v241 = v162;\n
    *(v241) = *(v241) - v161;\n
    v242 = v163;\n
    *(v242) = &(&*(v242)->field_0)[v161];\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    v127 = v204;\n
    v126 = a0;\n
    memset(&v124, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v125 = *(&*(v127)->field_0);\n
    cgc_uint2str(&v124, 12, v125);\n
    v21 = &v124;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v243 = v126;\n
    *(v243) = *(v243) - 4;\n
    v244 = v127;\n
    *(v244) = &*(v244)->field_4;\n
    v66 = v204;\n
    v65 = a0;\n
    *(&v63) = *(v66);\n
    memset(&v62, 0, 6);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v63[0] << 8)\n
        v20 = v63[1];\n
    v64 = v20 & 1;\n
    cgc_uint2str(&v62, 6, v64);\n
    v19 = &v62;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v245 = v65;\n
    *(v245) = *(v245) - 2;\n
    v246 = v66;\n
    *(v246) = &*(v246)->padding_1[1];\n
    v172 = v204;\n
    v171 = a0;\n
    *(&v169[0]) = *(v172);\n
    memset(&v168, 0, 12);\n
    if (*(v171) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v169[0] << 24)\n
    {\n
        v18 = 0;\n
        if (v169[1] << 16)\n
        {\n
            v18 = 0;\n
            if (v169[2] << 8)\n
                v18 = v169[3];\n
        }\n
    }\n
    v170 = v18 & 1;\n
    cgc_uint2str(&v168, 12, v170);\n
    v17 = &v168;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v168)) < 0)\n
        cgc__terminate();\n
    v247 = v171;\n
    *(v247) = *(v247) - 4;\n
    v248 = v172;\n
    *(v248) = &*(v248)->field_4;\n
    v123 = v204;\n
    v122 = a0;\n
    memset(&v120, 0, 12);\n
    if (*(v122) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v121 = *(&*(v123)->field_0);\n
    cgc_uint2str(&v120, 12, v121);\n
    v16 = &v120;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v120)) < 0)\n
        cgc__terminate();\n
    v249 = v122;\n
    *(v249) = *(v249) - 4;\n
    v250 = v123;\n
    *(v250) = &*(v250)->field_4;\n
    v75 = v204;\n
    v74 = a0;\n
    if (*(v74) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v73 = *(v75)->field_0;\n
    v251 = v74;\n
    *(v251) = *(v251) - 1;\n
    v252 = v75;\n
    *(v252) = &*(v252)->padding_1;\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_43281e;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43281e:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v253 = v75;\n
    *(v253) = &(&*(v253)->field_0)[v73];\n
    v254 = v74;\n
    *(v254) = *(v254) - v73;\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v119 = v204;\n
    v118 = a0;\n
    memset(&v116, 0, 12);\n
    if (*(v118) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v117 = *(&*(v119)->field_0);\n
    cgc_uint2str(&v116, 12, v117);\n
    v15 = &v116;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v116)) < 0)\n
        cgc__terminate();\n
    v255 = v118;\n
    *(v255) = *(v255) - 4;\n
    v256 = v119;\n
    *(v256) = &*(v256)->field_4;\n
    v193 = v204;\n
    v192 = a0;\n
    if (*(v192) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v192) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v192);\n
    v191 = v14;\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v190 = cgc_calloc(134);\n
    if (!v190)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v190, &v33[18].padding_0[182]);\n
    cgc_strncpy(v190 + 5, *(v193), v191);\n
    v258 = v193;\n
    *(v258) = -4 + cgc_strlen(v190) + *(v258);\n
    v260 = v192;\n
    *(v260) = *(v260) - (cgc_strlen(v190) + -4);\n
    cgc_checkheap();\n
    cgc_free(v190);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v115 = v204;\n
    v114 = a0;\n
    memset(&v112, 0, 12);\n
    if (*(v114) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v113 = *(&*(v115)->field_0);\n
    cgc_uint2str(&v112, 12, v113);\n
    v13 = &v112;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v261 = v114;\n
    *(v261) = *(v261) - 4;\n
    v262 = v115;\n
    *(v262) = &*(v262)->field_4;\n
    v83 = v204;\n
    v82 = a0;\n
    if (*(v82) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v82) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v82);\n
    v81 = v12;\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = cgc_calloc(134);\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v80, &v33[18].padding_0[182]);\n
    cgc_strncpy(v80 + 5, *(v83), v81);\n
    v264 = v83;\n
    *(v264) = -4 + cgc_strlen(v80) + *(v264);\n
    v266 = v82;\n
    *(v266) = *(v266) - (cgc_strlen(v80) + -4);\n
    cgc_checkheap();\n
    cgc_free(v80);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v111 = v204;\n
    v110 = a0;\n
    memset(&v108, 0, 12);\n
    if (*(v110) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v109 = *(&*(v111)->field_0);\n
    cgc_uint2str(&v108, 12, v109);\n
    v11 = &v108;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v108)) < 0)\n
        cgc__terminate();\n
    v267 = v110;\n
    *(v267) = *(v267) - 4;\n
    v268 = v111;\n
    *(v268) = &*(v268)->field_4;\n
    v189 = v204;\n
    v188 = a0;\n
    if (*(v188) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v188) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v188);\n
    v187 = v10;\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v186 = cgc_calloc(134);\n
    if (!v186)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v186, &v33[18].padding_0[182]);\n
    cgc_strncpy(v186 + 5, *(v189), v187);\n
    v270 = v189;\n
    *(v270) = -4 + cgc_strlen(v186) + *(v270);\n
    v272 = v188;\n
    *(v272) = *(v272) - (cgc_strlen(v186) + -4);\n
    cgc_checkheap();\n
    cgc_free(v186);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v103 = v204;\n
    v102 = a0;\n
    memset(&v100, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v101 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-858, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v100, 21, v46);\n
    v9 = &v100;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v100)) < 0)\n
        cgc__terminate();\n
    v273 = v102;\n
    *(v273) = *(v273) - 8;\n
    v274 = v103;\n
    *(v274) = *(v274) + 1;\n
    v185 = v204;\n
    v184 = a0;\n
    if (*(v184) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v184) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v184);\n
    v183 = v8;\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = cgc_calloc(134);\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v182, &v33[18].padding_0[182]);\n
    cgc_strncpy(v182 + 5, *(v185), v183);\n
    v276 = v185;\n
    *(v276) = -4 + cgc_strlen(v182) + *(v276);\n
    v278 = v184;\n
    *(v278) = *(v278) - (cgc_strlen(v182) + -4);\n
    cgc_checkheap();\n
    cgc_free(v182);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v151 = v204;\n
    v150 = a0;\n
    if (*(v150) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v149 = *(&*(v151)->field_0);\n
    v279 = v150;\n
    *(v279) = *(v279) - 2;\n
    v280 = v151;\n
    *(v280) = &*(v280)->padding_1[1];\n
    if (v149 <= *(v150) && !(!v149))\n
        goto LABEL_4338f7;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4338f7:\n
    v148 = cgc_calloc(v149);\n
    if (!v148)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v148, *(v151), v149);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v281 = v150;\n
    *(v281) = *(v281) - v149;\n
    v282 = v151;\n
    *(v282) = &(&*(v282)->field_0)[v149];\n
    cgc_checkheap();\n
    cgc_free(v148);\n
    v147 = v204;\n
    v146 = a0;\n
    if (*(v146) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v145 = *(&*(v147)->field_0);\n
    v283 = v146;\n
    *(v283) = *(v283) - 2;\n
    v284 = v147;\n
    *(v284) = &*(v284)->padding_1[1];\n
    if (v145 <= *(v146) && !(!v145))\n
        goto LABEL_433b31;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_433b31:\n
    v144 = cgc_calloc(v145);\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v144, *(v147), v145);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v285 = v146;\n
    *(v285) = *(v285) - v145;\n
    v286 = v147;\n
    *(v286) = &(&*(v286)->field_0)[v145];\n
    cgc_checkheap();\n
    cgc_free(v144);\n
    v143 = v204;\n
    v142 = a0;\n
    if (*(v142) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = *(&*(v143)->field_0);\n
    v287 = v142;\n
    *(v287) = *(v287) - 2;\n
    v288 = v143;\n
    *(v288) = &*(v288)->padding_1[1];\n
    if (v141 <= *(v142) && !(!v141))\n
        goto LABEL_433d6b;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_433d6b:\n
    v140 = cgc_calloc(v141);\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v140, *(v143), v141);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v289 = v142;\n
    *(v289) = *(v289) - v141;\n
    v290 = v143;\n
    *(v290) = &(&*(v290)->field_0)[v141];\n
    cgc_checkheap();\n
    cgc_free(v140);\n
    v135 = v204;\n
    v134 = a0;\n
    memset(&v132, 0, 12);\n
    if (*(v134) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v133 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-862, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v132, 12, v45);\n
    v7 = &v132;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v291 = v134;\n
    *(v291) = *(v291) - 4;\n
    v292 = v135;\n
    *(v292) = &*(v292)->field_4;\n
    v159 = v204;\n
    v158 = a0;\n
    if (*(v158) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v157 = *(&*(v159)->field_0);\n
    v293 = v158;\n
    *(v293) = *(v293) - 2;\n
    v294 = v159;\n
    *(v294) = &*(v294)->padding_1[1];\n
    if (v157 <= *(v158) && !(!v157))\n
        goto LABEL_434119;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_434119:\n
    v156 = cgc_calloc(v157);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v156, *(v159), v157);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v295 = v158;\n
    *(v295) = *(v295) - v157;\n
    v296 = v159;\n
    *(v296) = &(&*(v296)->field_0)[v157];\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    v61 = v204;\n
    v60 = a0;\n
    *(&v58) = *(v61);\n
    memset(&v57, 0, 6);\n
    if (*(v60) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v58[0] << 8)\n
        v6 = v58[1];\n
    v59 = v6 & 1;\n
    cgc_uint2str(&v57, 6, v59);\n
    v5 = &v57;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v57)) < 0)\n
        cgc__terminate();\n
    v297 = v60;\n
    *(v297) = *(v297) - 2;\n
    v298 = v61;\n
    *(v298) = &*(v298)->padding_1[1];\n
    v95 = v204;\n
    v94 = a0;\n
    memset(&v92, 0, 4);\n
    if (*(v94) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = *(v95)->field_0;\n
    cgc_uint2str(&v92, 4, v93);\n
    v4 = &v92;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v299 = v94;\n
    *(v299) = *(v299) - 1;\n
    v300 = v95;\n
    *(v300) = &*(v300)->padding_1;\n
    v56 = v204;\n
    v55 = a0;\n
    v53 = &*(v56)->field_0;\n
    memset(&v52, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (*(v53) << 8)\n
        v3 = v53[1];\n
    v54 = v3 & 1;\n
    cgc_uint2str(&v52, 6, v54);\n
    v2 = &v52;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v301 = v55;\n
    *(v301) = *(v301) - 2;\n
    v302 = v56;\n
    *(v302) = &*(v302)->padding_1[1];\n
    v181 = v204;\n
    v180 = a0;\n
    if (*(v180) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v180) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v180);\n
    v179 = v1;\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = cgc_calloc(134);\n
    if (!v178)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v178, &v33[18].padding_0[182]);\n
    cgc_strncpy(v178 + 5, *(v181), v179);\n
    v304 = v181;\n
    *(v304) = -4 + cgc_strlen(v178) + *(v304);\n
    v306 = v180;\n
    *(v306) = *(v306) - (cgc_strlen(v178) + -4);\n
    cgc_checkheap();\n
    cgc_free(v178);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v99 = v204;\n
    v98 = a0;\n
    memset(&v96, 0, 21);\n
    if (*(v98) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v97 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-866, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v96, 21, v44);\n
    v0 = &v96;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v96)) < 0)\n
        cgc__terminate();\n
    v307 = v98;\n
    *(v307) = *(v307) - 8;\n
    v308 = v99;\n
    *(v308) = *(v308) + 1;\n
    v50 ^= v33->field_260;\n
    if (v50)\n
        cgc___stack_cookie_fail();\n
    v309 = a0;\n
    if (*(v309) > 0 && v49 >= 0 && v49 < 0)\n
        v309 = *((&v51 + 0x4 * v49))(v204);\n
    v310 = v203;\n
    return v309;\n
}\n
", "4410063:sub_434acf": null, "4410064:cgc_process_llamatelodendron": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamatelodendron(struct struct_1 **v173, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x3ac]\n
    char v1;  // [bp-0x3a5]\n
    struct_2 *v2;  // [bp-0x3a4]\n
    char v3;  // [bp-0x39d]\n
    struct_2 *v4;  // [bp-0x39c]\n
    char v5;  // [bp-0x395]\n
    struct_2 *v6;  // [bp-0x394]\n
    struct_2 *v7;  // [bp-0x390]\n
    struct_2 *v8;  // [bp-0x38c]\n
    char v9;  // [bp-0x385]\n
    unsigned int v10;  // [bp-0x384]\n
    struct_2 *v11;  // [bp-0x380]\n
    struct_2 *v12;  // [bp-0x37c]\n
    struct_2 *v13;  // [bp-0x378]\n
    char v14;  // [bp-0x371]\n
    struct_2 *v15;  // [bp-0x370]\n
    char v16;  // [bp-0x369]\n
    struct_2 *v17;  // [bp-0x368]\n
    char v18;  // [bp-0x361]\n
    struct_2 *v19;  // [bp-0x360]\n
    char v20;  // [bp-0x359]\n
    struct_2 *v21;  // [bp-0x358]\n
    struct_2 *v22;  // [bp-0x354]\n
    struct_2 *v23;  // [bp-0x350]\n
    unsigned int v24;  // [bp-0x34c]\n
    struct_2 *v25;  // [bp-0x348]\n
    struct_2 *v26;  // [bp-0x344]\n
    unsigned int v27;  // [bp-0x340]\n
    struct_0 *v28;  // [bp-0x33c]\n
    unsigned short v29;  // [bp-0x338]\n
    unsigned short v30;  // [bp-0x336]\n
    unsigned short v31;  // [bp-0x334]\n
    unsigned short v32;  // [bp-0x332]\n
    unsigned short v33;  // [bp-0x330]\n
    unsigned short v34;  // [bp-0x32e]\n
    unsigned short v35;  // [bp-0x32c]\n
    unsigned short v36;  // [bp-0x32a]\n
    unsigned short v37;  // [bp-0x328]\n
    unsigned short v38;  // [bp-0x326]\n
    unsigned long v39;  // [bp-0x324]\n
    unsigned long v40;  // [bp-0x31c]\n
    unsigned long v41;  // [bp-0x314]\n
    unsigned long v42;  // [bp-0x30c]\n
    unsigned long v43;  // [bp-0x304]\n
    struct struct_3 **v44;  // [bp-0x2f8]\n
    unsigned int v45;  // [bp-0x2f4]\n
    char v46;  // [bp-0x2f0]\n
    char v47;  // [bp-0x2ee]\n
    char v48[2];  // [bp-0x2e8]\n
    unsigned short v49;  // [bp-0x2e2]\n
    unsigned int *v50;  // [bp-0x2e0]\n
    struct struct_1 **v51;  // [bp-0x2dc]\n
    char v52;  // [bp-0x2d5]\n
    char v53[8];  // [bp-0x2c0]\n
    unsigned int v54;  // [bp-0x2bc]\n
    void* v55;  // [bp-0x2b8]\n
    unsigned int *v56;  // [bp-0x2b0]\n
    struct struct_1 **v57;  // [bp-0x2ac]\n
    char v58;  // [bp-0x2a5]\n
    char v59[8];  // [bp-0x290]\n
    unsigned int v60;  // [bp-0x28c]\n
    void* v61;  // [bp-0x288]\n
    unsigned int *v62;  // [bp-0x280]\n
    struct struct_1 **v63;  // [bp-0x27c]\n
    char v64;  // [bp-0x275]\n
    char v65[8];  // [bp-0x260]\n
    unsigned int v66;  // [bp-0x25c]\n
    void* v67;  // [bp-0x258]\n
    unsigned int *v68;  // [bp-0x250]\n
    struct struct_1 **v69;  // [bp-0x24c]\n
    char v70;  // [bp-0x245]\n
    char v71[8];  // [bp-0x230]\n
    unsigned int v72;  // [bp-0x22c]\n
    void* v73;  // [bp-0x228]\n
    unsigned int *v74;  // [bp-0x220]\n
    struct struct_1 **v75;  // [bp-0x21c]\n
    char v76;  // [bp-0x215]\n
    char v77[8];  // [bp-0x200]\n
    unsigned int v78;  // [bp-0x1fc]\n
    void* v79;  // [bp-0x1f8]\n
    unsigned int *v80;  // [bp-0x1f4]\n
    struct struct_1 **v81;  // [bp-0x1f0]\n
    unsigned int v82;  // [bp-0x1ec]\n
    char v83;  // [bp-0x1e5]\n
    unsigned int *v84;  // [bp-0x1e4]\n
    struct struct_1 **v85;  // [bp-0x1e0]\n
    unsigned int v86;  // [bp-0x1dc]\n
    char v87;  // [bp-0x1d5]\n
    unsigned int *v88;  // [bp-0x1d4]\n
    struct struct_1 **v89;  // [bp-0x1d0]\n
    unsigned int v90;  // [bp-0x1cc]\n
    char v91;  // [bp-0x1c5]\n
    unsigned int *v92;  // [bp-0x1c4]\n
    struct struct_1 **v93;  // [bp-0x1c0]\n
    unsigned int v94;  // [bp-0x1bc]\n
    char v95;  // [bp-0x1b5]\n
    unsigned int *v96;  // [bp-0x1b4]\n
    struct struct_1 **v97;  // [bp-0x1b0]\n
    unsigned int v98;  // [bp-0x1ac]\n
    char v99;  // [bp-0x1a5]\n
    unsigned int *v100;  // [bp-0x1a4]\n
    struct struct_1 **v101;  // [bp-0x1a0]\n
    unsigned int v102;  // [bp-0x19c]\n
    char v103;  // [bp-0x195]\n
    unsigned int *v104;  // [bp-0x194]\n
    struct struct_1 **v105;  // [bp-0x190]\n
    char *v106;  // [bp-0x18c]\n
    unsigned int v107;  // [bp-0x188]\n
    unsigned int *v108;  // [bp-0x184]\n
    struct struct_1 **v109;  // [bp-0x180]\n
    char *v110;  // [bp-0x17c]\n
    unsigned int v111;  // [bp-0x178]\n
    unsigned int *v112;  // [bp-0x174]\n
    struct struct_1 **v113;  // [bp-0x170]\n
    char *v114;  // [bp-0x16c]\n
    unsigned int v115;  // [bp-0x168]\n
    unsigned int *v116;  // [bp-0x164]\n
    struct struct_1 **v117;  // [bp-0x160]\n
    char v118;  // [bp-0x15c]\n
    unsigned short v119;  // [bp-0x156]\n
    unsigned int *v120;  // [bp-0x154]\n
    struct struct_1 **v121;  // [bp-0x150]\n
    char v122;  // [bp-0x14c]\n
    unsigned short v123;  // [bp-0x146]\n
    unsigned int *v124;  // [bp-0x144]\n
    struct struct_1 **v125;  // [bp-0x140]\n
    char v126;  // [bp-0x139]\n
    char v127;  // [bp-0x135]\n
    unsigned int *v128;  // [bp-0x134]\n
    struct struct_1 **v129;  // [bp-0x130]\n
    char v130;  // [bp-0x129]\n
    char v131;  // [bp-0x125]\n
    unsigned int *v132;  // [bp-0x124]\n
    struct struct_1 **v133;  // [bp-0x120]\n
    char v134;  // [bp-0x119]\n
    unsigned long v135;  // [bp-0x104]\n
    unsigned int *v136;  // [bp-0xfc]\n
    struct struct_1 **v137;  // [bp-0xf8]\n
    char v138;  // [bp-0xf1]\n
    unsigned long v139;  // [bp-0xdc]\n
    unsigned int *v140;  // [bp-0xd4]\n
    struct struct_1 **v141;  // [bp-0xd0]\n
    char v142;  // [bp-0xc9]\n
    unsigned long v143;  // [bp-0xb4]\n
    unsigned int *v144;  // [bp-0xac]\n
    struct struct_1 **v145;  // [bp-0xa8]\n
    char v146;  // [bp-0xa1]\n
    unsigned long v147;  // [bp-0x8c]\n
    unsigned int *v148;  // [bp-0x80]\n
    struct struct_1 **v149;  // [bp-0x7c]\n
    char v150;  // [bp-0x78]\n
    unsigned int v151;  // [bp-0x6c]\n
    unsigned int *v152;  // [bp-0x68]\n
    struct struct_1 **v153;  // [bp-0x64]\n
    unsigned int v154;  // [bp-0x60]\n
    unsigned short v155;  // [bp-0x5a]\n
    unsigned int *v156;  // [bp-0x58]\n
    struct struct_1 **v157;  // [bp-0x54]\n
    unsigned int v158;  // [bp-0x50]\n
    unsigned short v159;  // [bp-0x4a]\n
    unsigned int *v160;  // [bp-0x48]\n
    struct struct_1 **v161;  // [bp-0x44]\n
    char v162;  // [bp-0x40]\n
    char v163[4];  // [bp-0x34]\n
    unsigned int v164;  // [bp-0x30]\n
    unsigned int *v165;  // [bp-0x2c]\n
    struct struct_1 **v166;  // [bp-0x28]\n
    char v167;  // [bp-0x24]\n
    char v168[4];  // [bp-0x18]\n
    unsigned int v169;  // [bp-0x14]\n
    unsigned int *v170;  // [bp-0x10]\n
    struct struct_1 **v171;  // [bp-0xc]\n
    unsigned int v172;  // [bp-0x8]\n
    unsigned int v174;  // ebx\n
    struct struct_1 **v176;  // eax\n
    unsigned int *v178;  // eax\n
    unsigned int *v179;  // eax\n
    struct struct_1 **v180;  // eax\n
    struct struct_1 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    unsigned int *v183;  // eax\n
    struct struct_1 **v184;  // eax\n
    unsigned int *v185;  // eax\n
    struct struct_1 **v186;  // eax\n
    unsigned int *v187;  // eax\n
    struct struct_1 **v188;  // eax\n
    struct struct_1 **v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_1 **v192;  // eax\n
    unsigned int *v194;  // eax\n
    unsigned int *v195;  // eax\n
    struct struct_1 **v196;  // eax\n
    unsigned int *v197;  // eax\n
    struct struct_1 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_1 **v200;  // eax\n
    struct struct_1 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    unsigned int *v203;  // eax\n
    struct struct_1 **v204;  // eax\n
    unsigned int *v205;  // eax\n
    struct struct_1 **v206;  // eax\n
    struct struct_1 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_1 **v210;  // eax\n
    struct struct_1 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_1 **v214;  // eax\n
    struct struct_1 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_1 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_1 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_1 **v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_1 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    struct struct_1 **v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_1 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_1 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_1 **v232;  // eax\n
    struct struct_1 **v234;  // eax\n
    unsigned int *v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_1 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_1 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_1 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_1 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_1 **v246;  // eax\n
    unsigned int *v247;  // eax\n
    struct struct_1 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_1 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_1 **v252;  // eax\n
    unsigned int *v253;  // eax, Other Possible Types: unsigned int\n
    unsigned int v254;  // ebx\n
\n
    v172 = v174;\n
    v28 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v45 = cgc__cookie;\n
    v44 = -1;\n
    if (cgc_sendline(1, \"===llamatelodendron===\", 22) < 0)\n
        cgc__terminate();\n
    v117 = v173;\n
    v116 = a0;\n
    if (*(v116) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v116) >= 128)\n
        v27 = 128;\n
    else\n
        v27 = *(v116);\n
    v115 = v27;\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = cgc_calloc(134);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v114, &v28[18].padding_0[182]);\n
    cgc_strncpy(v114 + 5, *(v117), v115);\n
    v176 = v117;\n
    *(v176) = &(&*(v176)->field_4)[cgc_strlen(v114)];\n
    v178 = v116;\n
    *(v178) = *(v178) - (cgc_strlen(v114) + -4);\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v105 = v173;\n
    v104 = a0;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(v105)->field_0;\n
    v179 = v104;\n
    *(v179) = *(v179) - 1;\n
    v180 = v105;\n
    *(v180) = &*(v180)->padding_1;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_434edc;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_434edc:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v181 = v105;\n
    *(v181) = &(&*(v181)->field_0)[v103];\n
    v182 = v104;\n
    *(v182) = *(v182) - v103;\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v149 = v173;\n
    v148 = a0;\n
    memset(&v146, 0, 21);\n
    if (*(v148) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v147 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(fpround<4>);\n
    v37 = v38 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v146, 21, v43);\n
    v26 = &v146;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v183 = v148;\n
    *(v183) = *(v183) - 8;\n
    v184 = v149;\n
    *(v184) = *(v184) + 1;\n
    v145 = v173;\n
    v144 = a0;\n
    memset(&v142, 0, 21);\n
    if (*(v144) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v143 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-806, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v142, 21, v42);\n
    v25 = &v142;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v185 = v144;\n
    *(v185) = *(v185) - 8;\n
    v186 = v145;\n
    *(v186) = *(v186) + 1;\n
    v101 = v173;\n
    v100 = a0;\n
    if (*(v100) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(v101)->field_0;\n
    v187 = v100;\n
    *(v187) = *(v187) - 1;\n
    v188 = v101;\n
    *(v188) = &*(v188)->padding_1;\n
    if (v99 <= *(v100) && !(!v99))\n
        goto LABEL_4353ea;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4353ea:\n
    v98 = cgc_calloc(v99);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v98, *(v101), v99);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v189 = v101;\n
    *(v189) = &(&*(v189)->field_0)[v99];\n
    v190 = v100;\n
    *(v190) = *(v190) - v99;\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    v113 = v173;\n
    v112 = a0;\n
    if (*(v112) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v112) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v112);\n
    v111 = v24;\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = cgc_calloc(134);\n
    if (!v110)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v110, &v28[18].padding_0[182]);\n
    cgc_strncpy(v110 + 5, *(v113), v111);\n
    v192 = v113;\n
    *(v192) = &(&*(v192)->field_4)[cgc_strlen(v110)];\n
    v194 = v112;\n
    *(v194) = *(v194) - (cgc_strlen(v110) + -4);\n
    cgc_checkheap();\n
    cgc_free(v110);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v133 = v173;\n
    v132 = a0;\n
    memset(&v130, 0, 4);\n
    if (*(v132) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(v133)->field_0;\n
    cgc_uint2str(&v130, 4, v131);\n
    v23 = &v130;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v195 = v132;\n
    *(v195) = *(v195) - 1;\n
    v196 = v133;\n
    *(v196) = &*(v196)->padding_1;\n
    v125 = v173;\n
    v124 = a0;\n
    memset(&v122, 0, 6);\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    cgc_uint2str(&v122, 6, v123);\n
    v22 = &v122;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v197 = v124;\n
    *(v197) = *(v197) - 2;\n
    v198 = v125;\n
    *(v198) = &*(v198)->field_2;\n
    v97 = v173;\n
    v96 = a0;\n
    if (*(v96) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(v97)->field_0;\n
    v199 = v96;\n
    *(v199) = *(v199) - 1;\n
    v200 = v97;\n
    *(v200) = &*(v200)->padding_1;\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_435b2d;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_435b2d:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v201 = v97;\n
    *(v201) = &(&*(v201)->field_0)[v95];\n
    v202 = v96;\n
    *(v202) = *(v202) - v95;\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v141 = v173;\n
    v140 = a0;\n
    memset(&v138, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v139 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-810, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v41 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v138, 21, v41);\n
    v21 = &v138;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v203 = v140;\n
    *(v203) = *(v203) - 8;\n
    v204 = v141;\n
    *(v204) = *(v204) + 1;\n
    v93 = v173;\n
    v92 = a0;\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(v93)->field_0;\n
    v205 = v92;\n
    *(v205) = *(v205) - 1;\n
    v206 = v93;\n
    *(v206) = &*(v206)->padding_1;\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_435ed9;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_435ed9:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v207 = v93;\n
    *(v207) = &(&*(v207)->field_0)[v91];\n
    v208 = v92;\n
    *(v208) = *(v208) - v91;\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v89 = v173;\n
    v88 = a0;\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(v89)->field_0;\n
    v209 = v88;\n
    *(v209) = *(v209) - 1;\n
    v210 = v89;\n
    *(v210) = &*(v210)->padding_1;\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_436111;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_436111:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v211 = v89;\n
    *(v211) = &(&*(v211)->field_0)[v87];\n
    v212 = v88;\n
    *(v212) = *(v212) - v87;\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v85 = v173;\n
    v84 = a0;\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(v85)->field_0;\n
    v213 = v84;\n
    *(v213) = *(v213) - 1;\n
    v214 = v85;\n
    *(v214) = &*(v214)->padding_1;\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_436349;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_436349:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v215 = v85;\n
    *(v215) = &(&*(v215)->field_0)[v83];\n
    v216 = v84;\n
    *(v216) = *(v216) - v83;\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v161 = v173;\n
    v160 = a0;\n
    if (*(v160) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v159 = *(&*(v161)->field_0);\n
    v217 = v160;\n
    *(v217) = *(v217) - 2;\n
    v218 = v161;\n
    *(v218) = &*(v218)->field_2;\n
    if (v159 <= *(v160) && !(!v159))\n
        goto LABEL_436565;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_436565:\n
    v158 = cgc_calloc(v159);\n
    if (!v158)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v158, *(v161), v159);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v219 = v160;\n
    *(v219) = *(v219) - v159;\n
    v220 = v161;\n
    *(v220) = &(&*(v220)->field_0)[v159];\n
    cgc_checkheap();\n
    cgc_free(v158);\n
    v51 = v173;\n
    v50 = a0;\n
    *(&v48) = *(v51);\n
    memset(&v47, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v48[0] << 8)\n
        v20 = v48[1];\n
    v49 = v20 & 1;\n
    cgc_uint2str(&v47, 6, v49);\n
    v19 = &v47;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v221 = v50;\n
    *(v221) = *(v221) - 2;\n
    v222 = v51;\n
    *(v222) = &*(v222)->field_2;\n
    v81 = v173;\n
    v80 = a0;\n
    *(&v77[0]) = *(v81);\n
    memset(&v76, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v77[0])\n
    {\n
        v18 = 0;\n
        if (v77[1])\n
        {\n
            v18 = 0;\n
            if (v77[2])\n
            {\n
                v18 = 0;\n
                if (v77[3])\n
                {\n
                    v18 = 0;\n
                    if (v77[4] << 24)\n
                    {\n
                        v18 = 0;\n
                        if (v77[5] << 16)\n
                        {\n
                            v18 = 0;\n
                            if (v77[6] << 8)\n
                                v18 = v77[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v78 = v18 & 1;\n
    v79 = 0;\n
    cgc_uint2str(&v76, 21, v78);\n
    v17 = &v76;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v223 = v80;\n
    *(v223) = *(v223) - 8;\n
    v224 = v81;\n
    *(v224) = *(v224) + 1;\n
    v75 = v173;\n
    v74 = a0;\n
    *(&v71[0]) = *(v75);\n
    memset(&v70, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v71[0])\n
    {\n
        v16 = 0;\n
        if (v71[1])\n
        {\n
            v16 = 0;\n
            if (v71[2])\n
            {\n
                v16 = 0;\n
                if (v71[3])\n
                {\n
                    v16 = 0;\n
                    if (v71[4] << 24)\n
                    {\n
                        v16 = 0;\n
                        if (v71[5] << 16)\n
                        {\n
                            v16 = 0;\n
                            if (v71[6] << 8)\n
                                v16 = v71[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v72 = v16 & 1;\n
    v73 = 0;\n
    cgc_uint2str(&v70, 21, v72);\n
    v15 = &v70;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v225 = v74;\n
    *(v225) = *(v225) - 8;\n
    v226 = v75;\n
    *(v226) = *(v226) + 1;\n
    v69 = v173;\n
    v68 = a0;\n
    *(&v65[0]) = *(v69);\n
    memset(&v64, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v65[0])\n
    {\n
        v14 = 0;\n
        if (v65[1])\n
        {\n
            v14 = 0;\n
            if (v65[2])\n
            {\n
                v14 = 0;\n
                if (v65[3])\n
                {\n
                    v14 = 0;\n
                    if (v65[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v65[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v65[6] << 8)\n
                                v14 = v65[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v66 = v14 & 1;\n
    v67 = 0;\n
    cgc_uint2str(&v64, 21, v66);\n
    v13 = &v64;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v227 = v68;\n
    *(v227) = *(v227) - 8;\n
    v228 = v69;\n
    *(v228) = *(v228) + 1;\n
    v121 = v173;\n
    v120 = a0;\n
    memset(&v118, 0, 6);\n
    if (*(v120) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = *(&*(v121)->field_0);\n
    cgc_uint2str(&v118, 6, v119);\n
    v12 = &v118;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v229 = v120;\n
    *(v229) = *(v229) - 2;\n
    v230 = v121;\n
    *(v230) = &*(v230)->field_2;\n
    v153 = v173;\n
    v152 = a0;\n
    memset(&v150, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v151 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-814, size=2, endness=Iend_LE)))));\n
    v31 = v32 | 0xc00;\n
    v40 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v150, 12, v40);\n
    v11 = &v150;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v231 = v152;\n
    *(v231) = *(v231) - 4;\n
    v232 = v153;\n
    *(v232) = &*(v232)->field_4;\n
    v109 = v173;\n
    v108 = a0;\n
    if (*(v108) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v108) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v108);\n
    v107 = v10;\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = cgc_calloc(134);\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v106, &v28[18].padding_0[182]);\n
    cgc_strncpy(v106 + 5, *(v109), v107);\n
    v234 = v109;\n
    *(v234) = &(&*(v234)->field_4)[cgc_strlen(v106)];\n
    v236 = v108;\n
    *(v236) = *(v236) - (cgc_strlen(v106) + -4);\n
    cgc_checkheap();\n
    cgc_free(v106);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v63 = v173;\n
    v62 = a0;\n
    *(&v59[0]) = *(v63);\n
    memset(&v58, 0, 21);\n
    if (*(v62) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v59[0])\n
    {\n
        v9 = 0;\n
        if (v59[1])\n
        {\n
            v9 = 0;\n
            if (v59[2])\n
            {\n
                v9 = 0;\n
                if (v59[3])\n
                {\n
                    v9 = 0;\n
                    if (v59[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v59[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v59[6] << 8)\n
                                v9 = v59[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v60 = v9 & 1;\n
    v61 = 0;\n
    cgc_uint2str(&v58, 21, v60);\n
    v8 = &v58;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v237 = v62;\n
    *(v237) = *(v237) - 8;\n
    v238 = v63;\n
    *(v238) = *(v238) + 1;\n
    v137 = v173;\n
    v136 = a0;\n
    memset(&v134, 0, 21);\n
    if (*(v136) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v135 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v30 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-818, size=2, endness=Iend_LE)))));\n
    v29 = v30 | 0xc00;\n
    v39 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v134, 21, v39);\n
    v7 = &v134;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v239 = v136;\n
    *(v239) = *(v239) - 8;\n
    v240 = v137;\n
    *(v240) = *(v240) + 1;\n
    v129 = v173;\n
    v128 = a0;\n
    memset(&v126, 0, 4);\n
    if (*(v128) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(v129)->field_0;\n
    cgc_uint2str(&v126, 4, v127);\n
    v6 = &v126;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v241 = v128;\n
    *(v241) = *(v241) - 1;\n
    v242 = v129;\n
    *(v242) = &*(v242)->padding_1;\n
    v171 = v173;\n
    v170 = a0;\n
    *(&v168[0]) = *(v171);\n
    memset(&v167, 0, 12);\n
    if (*(v170) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v168[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v168[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v168[2] << 8)\n
                v5 = v168[3];\n
        }\n
    }\n
    v169 = v5 & 1;\n
    cgc_uint2str(&v167, 12, v169);\n
    v4 = &v167;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v167)) < 0)\n
        cgc__terminate();\n
    v243 = v170;\n
    *(v243) = *(v243) - 4;\n
    v244 = v171;\n
    *(v244) = &*(v244)->field_4;\n
    v57 = v173;\n
    v56 = a0;\n
    *(&v53[0]) = *(v57);\n
    memset(&v52, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v53[0])\n
    {\n
        v3 = 0;\n
        if (v53[1])\n
        {\n
            v3 = 0;\n
            if (v53[2])\n
            {\n
                v3 = 0;\n
                if (v53[3])\n
                {\n
                    v3 = 0;\n
                    if (v53[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v53[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v53[6] << 8)\n
                                v3 = v53[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v54 = v3 & 1;\n
    v55 = 0;\n
    cgc_uint2str(&v52, 21, v54);\n
    v2 = &v52;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v245 = v56;\n
    *(v245) = *(v245) - 8;\n
    v246 = v57;\n
    *(v246) = *(v246) + 1;\n
    v157 = v173;\n
    v156 = a0;\n
    if (*(v156) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v155 = *(&*(v157)->field_0);\n
    v247 = v156;\n
    *(v247) = *(v247) - 2;\n
    v248 = v157;\n
    *(v248) = &*(v248)->field_2;\n
    if (v155 <= *(v156) && !(!v155))\n
        goto LABEL_437dac;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_437dac:\n
    v154 = cgc_calloc(v155);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v154, *(v157), v155);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v249 = v156;\n
    *(v249) = *(v249) - v155;\n
    v250 = v157;\n
    *(v250) = &(&*(v250)->field_0)[v155];\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    v166 = v173;\n
    v165 = a0;\n
    *(&v163[0]) = *(v166);\n
    memset(&v162, 0, 12);\n
    if (*(v165) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v163[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v163[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v163[2] << 8)\n
                v1 = v163[3];\n
        }\n
    }\n
    v164 = v1 & 1;\n
    cgc_uint2str(&v162, 12, v164);\n
    v0 = &v162;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v162)) < 0)\n
        cgc__terminate();\n
    v251 = v165;\n
    *(v251) = *(v251) - 4;\n
    v252 = v166;\n
    *(v252) = &*(v252)->field_4;\n
    v45 ^= v28->field_260;\n
    if (v45)\n
        cgc___stack_cookie_fail();\n
    v253 = a0;\n
    if (*(v253) > 0 && v44 >= 0 && v44 < 0)\n
        v253 = *((&v46 + 0x4 * v44))(v173);\n
    v254 = v172;\n
    return v253;\n
}\n
", "4423870:sub_4380be": null, "4423872:cgc_process_llamajibi": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0338;\n
extern unsigned int g_4f033c;\n
\n
int cgc_process_llamajibi(struct struct_0 **v57, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x114]\n
    char v1;  // [bp-0x10d]\n
    struct_1 *v2;  // [bp-0x10c]\n
    char v3;  // [bp-0x105]\n
    struct_1 *v4;  // [bp-0x104]\n
    unsigned int v5;  // [bp-0x100]\n
    struct_1 *v6;  // [bp-0xfc]\n
    struct_2 *v7;  // [bp-0xf8]\n
    unsigned short v8;  // [bp-0xf4]\n
    unsigned short v9;  // [bp-0xf2]\n
    unsigned short v10;  // [bp-0xf0]\n
    unsigned short v11;  // [bp-0xee]\n
    unsigned long v12;  // [bp-0xec]\n
    unsigned long v13;  // [bp-0xe4]\n
    struct struct_3 **v14;  // [bp-0xd8], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0xd4]\n
    unsigned int v16;  // [bp-0xd0]\n
    unsigned int v17;  // [bp-0xcc]\n
    char v18;  // [bp-0xc6]\n
    char v19[2];  // [bp-0xc0]\n
    unsigned short v20;  // [bp-0xba]\n
    unsigned int *v21;  // [bp-0xb8]\n
    struct struct_0 **v22;  // [bp-0xb4]\n
    char v23;  // [bp-0xad]\n
    char v24[8];  // [bp-0x98]\n
    unsigned int v25;  // [bp-0x94]\n
    void* v26;  // [bp-0x90]\n
    unsigned int *v27;  // [bp-0x8c]\n
    struct struct_0 **v28;  // [bp-0x88]\n
    unsigned int v29;  // [bp-0x84]\n
    char v30;  // [bp-0x7d]\n
    unsigned int *v31;  // [bp-0x7c]\n
    struct struct_0 **v32;  // [bp-0x78]\n
    char *v33;  // [bp-0x74]\n
    unsigned int v34;  // [bp-0x70]\n
    unsigned int *v35;  // [bp-0x6c]\n
    struct struct_0 **v36;  // [bp-0x68]\n
    unsigned short *v37;  // [bp-0x64]\n
    unsigned int *v38;  // [bp-0x60]\n
    struct struct_0 **v39;  // [bp-0x5c]\n
    char v40;  // [bp-0x58]\n
    unsigned int v41;  // [bp-0x4c]\n
    unsigned int *v42;  // [bp-0x48]\n
    struct struct_0 **v43;  // [bp-0x44]\n
    char v44;  // [bp-0x40]\n
    unsigned int v45;  // [bp-0x34]\n
    unsigned int *v46;  // [bp-0x30]\n
    struct struct_0 **v47;  // [bp-0x2c]\n
    unsigned int v48;  // [bp-0x28]\n
    unsigned short v49;  // [bp-0x22]\n
    unsigned int *v50;  // [bp-0x20]\n
    struct struct_0 **v51;  // [bp-0x1c]\n
    unsigned int v52;  // [bp-0x18]\n
    unsigned short v53;  // [bp-0x12]\n
    unsigned int *v54;  // [bp-0x10]\n
    struct struct_0 **v55;  // [bp-0xc]\n
    unsigned int v56;  // [bp-0x8]\n
    unsigned int v58;  // ebx\n
    unsigned int *v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    struct struct_0 **v61;  // eax\n
    unsigned int *v62;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v64;  // eax\n
    unsigned int *v65;  // eax\n
    struct struct_0 **v66;  // eax\n
    struct struct_0 **v68;  // eax\n
    unsigned int *v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_0 **v72;  // eax\n
    unsigned int *v73;  // eax\n
    struct struct_0 **v74;  // eax\n
    unsigned int *v75;  // eax\n
    struct struct_0 **v76;  // eax\n
    unsigned int *v77;  // eax\n
    struct struct_0 **v78;  // eax\n
    unsigned int *v79;  // eax\n
    struct struct_0 **v80;  // eax\n
    unsigned int *v81;  // eax\n
    struct struct_0 **v82;  // eax\n
    unsigned int *v83;  // eax\n
    struct struct_0 **v84;  // eax\n
    unsigned int *v85;  // eax, Other Possible Types: unsigned int\n
    unsigned int v86;  // ebx\n
\n
    v56 = v58;\n
    v7 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v16 = g_4f0338;\n
    v17 = g_4f033c;\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamajibi===\", 15) < 0)\n
        cgc__terminate();\n
    v32 = v57;\n
    v31 = a0;\n
    if (*(v31) < 1)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = *(v32)->field_0;\n
    v59 = v31;\n
    *(v59) = *(v59) - 1;\n
    v60 = v32;\n
    *(v60) = &*(v60)->padding_1;\n
    if (v30 <= *(v31) && !(!v30))\n
        goto LABEL_438245;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_438245:\n
    v29 = cgc_calloc(v30);\n
    if (!v29)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v29, *(v32), v30);\n
    if (cgc_sendline(1, &v7[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v61 = v32;\n
    *(v61) = &(&*(v61)->field_0)[v30];\n
    v62 = v31;\n
    *(v62) = *(v62) - v30;\n
    cgc_checkheap();\n
    cgc_free(v29);\n
    v47 = v57;\n
    v46 = a0;\n
    memset(&v44, 0, 12);\n
    if (*(v46) < 4)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v45 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v11 = [D] x86g_create_fpucw(fpround<4>);\n
    v10 = v11 | 0xc00;\n
    v13 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v44, 12, v13);\n
    v6 = &v44;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v63 = v46;\n
    *(v63) = *(v63) - 4;\n
    v64 = v47;\n
    *(v64) = &*(v64)->field_4;\n
    v39 = v57;\n
    v38 = a0;\n
    v37 = &*(v39)->field_0;\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v65 = v38;\n
    *(v65) = *(v65) - 2;\n
    v66 = v39;\n
    *(v66) = &*(v66)->field_2;\n
    v14 = *(v37);\n
    v36 = v57;\n
    v35 = a0;\n
    if (*(v35) <= 0)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v35) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v35);\n
    v34 = v5;\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = cgc_calloc(134);\n
    if (!v33)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v33, &v7[18].padding_0[182]);\n
    cgc_strncpy(v33 + 5, *(v36), v34);\n
    v68 = v36;\n
    *(v68) = &(&*(v68)->field_4)[cgc_strlen(v33)];\n
    v70 = v35;\n
    *(v70) = *(v70) - (cgc_strlen(v33) + -4);\n
    cgc_checkheap();\n
    cgc_free(v33);\n
    if (cgc_sendline(1, &v7[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v43 = v57;\n
    v42 = a0;\n
    memset(&v40, 0, 12);\n
    if (*(v42) < 4)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v41 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v9 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-238, size=2, endness=Iend_LE)))));\n
    v8 = v9 | 0xc00;\n
    v12 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v40, 12, v12);\n
    v4 = &v40;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v71 = v42;\n
    *(v71) = *(v71) - 4;\n
    v72 = v43;\n
    *(v72) = &*(v72)->field_4;\n
    v28 = v57;\n
    v27 = a0;\n
    *(&v24[0]) = *(v28);\n
    memset(&v23, 0, 21);\n
    if (*(v27) < 8)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v24[0])\n
    {\n
        v3 = 0;\n
        if (v24[1])\n
        {\n
            v3 = 0;\n
            if (v24[2])\n
            {\n
                v3 = 0;\n
                if (v24[3])\n
                {\n
                    v3 = 0;\n
                    if (v24[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v24[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v24[6] << 8)\n
                                v3 = v24[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v25 = v3 & 1;\n
    v26 = 0;\n
    cgc_uint2str(&v23, 21, v25);\n
    v2 = &v23;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v23)) < 0)\n
        cgc__terminate();\n
    v73 = v27;\n
    *(v73) = *(v73) - 8;\n
    v74 = v28;\n
    *(v74) = *(v74) + 1;\n
    v55 = v57;\n
    v54 = a0;\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v53 = *(&*(v55)->field_0);\n
    v75 = v54;\n
    *(v75) = *(v75) - 2;\n
    v76 = v55;\n
    *(v76) = &*(v76)->field_2;\n
    if (v53 <= *(v54) && !(!v53))\n
        goto LABEL_438c04;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_438c04:\n
    v52 = cgc_calloc(v53);\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v52, *(v55), v53);\n
    if (cgc_sendline(1, &v7[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v77 = v54;\n
    *(v77) = *(v77) - v53;\n
    v78 = v55;\n
    *(v78) = &(&*(v78)->field_0)[v53];\n
    cgc_checkheap();\n
    cgc_free(v52);\n
    v51 = v57;\n
    v50 = a0;\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = *(&*(v51)->field_0);\n
    v79 = v50;\n
    *(v79) = *(v79) - 2;\n
    v80 = v51;\n
    *(v80) = &*(v80)->field_2;\n
    if (v49 <= *(v50) && !(!v49))\n
        goto LABEL_438dff;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_438dff:\n
    v48 = cgc_calloc(v49);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v48, *(v51), v49);\n
    if (cgc_sendline(1, &v7[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v81 = v50;\n
    *(v81) = *(v81) - v49;\n
    v82 = v51;\n
    *(v82) = &(&*(v82)->field_0)[v49];\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    v22 = v57;\n
    v21 = a0;\n
    *(&v19) = *(v22);\n
    memset(&v18, 0, 6);\n
    if (*(v21) < 2)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v19[0] << 8)\n
        v1 = v19[1];\n
    v20 = v1 & 1;\n
    cgc_uint2str(&v18, 6, v20);\n
    v0 = &v18;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v18)) < 0)\n
        cgc__terminate();\n
    v83 = v21;\n
    *(v83) = *(v83) - 2;\n
    v84 = v22;\n
    *(v84) = &*(v84)->field_2;\n
    v15 ^= v7->field_260;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v85 = a0;\n
    if (*(v85) > 0 && v14 >= 0 && v14 < 2)\n
        v85 = (&v16)[v14](v57);\n
    v86 = v56;\n
    return v85;\n
}\n
", "4428042:sub_43910a": null, "4428048:cgc_process_llamafootpad": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f037c;\n
\n
int cgc_process_llamafootpad(struct struct_0 **v278, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x5a4]\n
    char v1;  // [bp-0x59d]\n
    unsigned int v2;  // [bp-0x59c]\n
    struct_1 *v3;  // [bp-0x598]\n
    struct_1 *v4;  // [bp-0x594]\n
    struct_1 *v5;  // [bp-0x590]\n
    unsigned int v6;  // [bp-0x58c]\n
    struct_1 *v7;  // [bp-0x588]\n
    struct_1 *v8;  // [bp-0x584]\n
    struct_1 *v9;  // [bp-0x580]\n
    char v10;  // [bp-0x579]\n
    struct_1 *v11;  // [bp-0x578]\n
    struct_1 *v12;  // [bp-0x574]\n
    char v13;  // [bp-0x56d]\n
    struct_1 *v14;  // [bp-0x56c]\n
    struct_1 *v15;  // [bp-0x568]\n
    unsigned int v16;  // [bp-0x564]\n
    struct_1 *v17;  // [bp-0x560]\n
    char v18;  // [bp-0x559]\n
    struct_1 *v19;  // [bp-0x558]\n
    unsigned int v20;  // [bp-0x554]\n
    struct_1 *v21;  // [bp-0x550]\n
    struct_1 *v22;  // [bp-0x54c]\n
    struct_1 *v23;  // [bp-0x548]\n
    struct_1 *v24;  // [bp-0x544]\n
    struct_1 *v25;  // [bp-0x540]\n
    struct_1 *v26;  // [bp-0x53c]\n
    struct_1 *v27;  // [bp-0x538]\n
    unsigned int v28;  // [bp-0x534]\n
    struct_1 *v29;  // [bp-0x530]\n
    struct_1 *v30;  // [bp-0x52c]\n
    char v31;  // [bp-0x525]\n
    struct_1 *v32;  // [bp-0x524]\n
    char v33;  // [bp-0x51d]\n
    unsigned int v34;  // [bp-0x51c]\n
    struct_1 *v35;  // [bp-0x518]\n
    char v36;  // [bp-0x511]\n
    unsigned int v37;  // [bp-0x510]\n
    struct_1 *v38;  // [bp-0x50c]\n
    char v39;  // [bp-0x505]\n
    struct_2 *v40;  // [bp-0x504]\n
    unsigned short v41;  // [bp-0x500]\n
    unsigned short v42;  // [bp-0x4fe]\n
    unsigned short v43;  // [bp-0x4fc]\n
    unsigned short v44;  // [bp-0x4fa]\n
    unsigned short v45;  // [bp-0x4f8]\n
    unsigned short v46;  // [bp-0x4f6]\n
    unsigned short v47;  // [bp-0x4f4]\n
    unsigned short v48;  // [bp-0x4f2]\n
    unsigned short v49;  // [bp-0x4f0]\n
    unsigned short v50;  // [bp-0x4ee]\n
    unsigned short v51;  // [bp-0x4ec]\n
    unsigned short v52;  // [bp-0x4ea]\n
    unsigned short v53;  // [bp-0x4e8]\n
    unsigned short v54;  // [bp-0x4e6]\n
    unsigned long v55;  // [bp-0x4e4]\n
    unsigned long v56;  // [bp-0x4dc]\n
    unsigned long v57;  // [bp-0x4d4]\n
    unsigned long v58;  // [bp-0x4cc]\n
    unsigned long v59;  // [bp-0x4c4]\n
    unsigned long v60;  // [bp-0x4bc]\n
    unsigned long v61;  // [bp-0x4b4]\n
    struct struct_3 **v62;  // [bp-0x4ac], Other Possible Types: unsigned int\n
    unsigned int v63;  // [bp-0x4a8]\n
    unsigned int v64;  // [bp-0x4a4]\n
    char v65;  // [bp-0x49d]\n
    char v66[8];  // [bp-0x488]\n
    unsigned int v67;  // [bp-0x484]\n
    void* v68;  // [bp-0x480]\n
    unsigned int *v69;  // [bp-0x478]\n
    struct struct_0 **v70;  // [bp-0x474]\n
    char v71;  // [bp-0x46d]\n
    char v72[8];  // [bp-0x458]\n
    unsigned int v73;  // [bp-0x454]\n
    void* v74;  // [bp-0x450]\n
    unsigned int *v75;  // [bp-0x448]\n
    struct struct_0 **v76;  // [bp-0x444]\n
    char v77;  // [bp-0x43d]\n
    char v78[8];  // [bp-0x428]\n
    unsigned int v79;  // [bp-0x424]\n
    void* v80;  // [bp-0x420]\n
    unsigned int *v81;  // [bp-0x418]\n
    struct struct_0 **v82;  // [bp-0x414]\n
    char v83;  // [bp-0x40d]\n
    char v84[8];  // [bp-0x3f8]\n
    unsigned int v85;  // [bp-0x3f4]\n
    void* v86;  // [bp-0x3f0]\n
    unsigned int *v87;  // [bp-0x3ec]\n
    struct struct_0 **v88;  // [bp-0x3e8]\n
    unsigned int v89;  // [bp-0x3e4]\n
    char v90;  // [bp-0x3dd]\n
    unsigned int *v91;  // [bp-0x3dc]\n
    struct struct_0 **v92;  // [bp-0x3d8]\n
    unsigned int v93;  // [bp-0x3d4]\n
    char v94;  // [bp-0x3cd]\n
    unsigned int *v95;  // [bp-0x3cc]\n
    struct struct_0 **v96;  // [bp-0x3c8]\n
    char *v97;  // [bp-0x3c4]\n
    unsigned int *v98;  // [bp-0x3c0]\n
    struct struct_0 **v99;  // [bp-0x3bc]\n
    char *v100;  // [bp-0x3b8]\n
    unsigned int v101;  // [bp-0x3b4]\n
    unsigned int *v102;  // [bp-0x3b0]\n
    struct struct_0 **v103;  // [bp-0x3ac]\n
    char *v104;  // [bp-0x3a8]\n
    unsigned int v105;  // [bp-0x3a4]\n
    unsigned int *v106;  // [bp-0x3a0]\n
    struct struct_0 **v107;  // [bp-0x39c]\n
    char *v108;  // [bp-0x398]\n
    unsigned int v109;  // [bp-0x394]\n
    unsigned int *v110;  // [bp-0x390]\n
    struct struct_0 **v111;  // [bp-0x38c]\n
    char *v112;  // [bp-0x388]\n
    unsigned int v113;  // [bp-0x384]\n
    unsigned int *v114;  // [bp-0x380]\n
    struct struct_0 **v115;  // [bp-0x37c]\n
    char *v116;  // [bp-0x378]\n
    unsigned int v117;  // [bp-0x374]\n
    unsigned int *v118;  // [bp-0x370]\n
    struct struct_0 **v119;  // [bp-0x36c]\n
    char *v120;  // [bp-0x368]\n
    unsigned int v121;  // [bp-0x364]\n
    unsigned int *v122;  // [bp-0x360]\n
    struct struct_0 **v123;  // [bp-0x35c]\n
    char v124;  // [bp-0x358]\n
    unsigned short v125;  // [bp-0x352]\n
    unsigned int *v126;  // [bp-0x350]\n
    struct struct_0 **v127;  // [bp-0x34c]\n
    char v128;  // [bp-0x348]\n
    unsigned short v129;  // [bp-0x342]\n
    unsigned int *v130;  // [bp-0x340]\n
    struct struct_0 **v131;  // [bp-0x33c]\n
    char v132;  // [bp-0x335]\n
    char v133;  // [bp-0x331]\n
    unsigned int *v134;  // [bp-0x330]\n
    struct struct_0 **v135;  // [bp-0x32c]\n
    char v136;  // [bp-0x325]\n
    char v137;  // [bp-0x321]\n
    unsigned int *v138;  // [bp-0x320]\n
    struct struct_0 **v139;  // [bp-0x31c]\n
    char v140;  // [bp-0x315]\n
    char v141;  // [bp-0x311]\n
    unsigned int *v142;  // [bp-0x310]\n
    struct struct_0 **v143;  // [bp-0x30c]\n
    char v144[4];  // [bp-0x308]\n
    unsigned int *v145;  // [bp-0x304]\n
    struct struct_0 **v146;  // [bp-0x300]\n
    char v147;  // [bp-0x2f9]\n
    unsigned long v148;  // [bp-0x2e4]\n
    unsigned int *v149;  // [bp-0x2dc]\n
    struct struct_0 **v150;  // [bp-0x2d8]\n
    char v151;  // [bp-0x2d1]\n
    unsigned long v152;  // [bp-0x2bc]\n
    unsigned int *v153;  // [bp-0x2b4]\n
    struct struct_0 **v154;  // [bp-0x2b0]\n
    char v155;  // [bp-0x2a9]\n
    unsigned long v156;  // [bp-0x294]\n
    unsigned int *v157;  // [bp-0x28c]\n
    struct struct_0 **v158;  // [bp-0x288]\n
    char v159;  // [bp-0x281]\n
    unsigned long v160;  // [bp-0x26c]\n
    unsigned int *v161;  // [bp-0x264]\n
    struct struct_0 **v162;  // [bp-0x260]\n
    char v163;  // [bp-0x259]\n
    unsigned long v164;  // [bp-0x244]\n
    unsigned int *v165;  // [bp-0x23c]\n
    struct struct_0 **v166;  // [bp-0x238]\n
    char v167;  // [bp-0x234]\n
    unsigned int v168;  // [bp-0x228]\n
    unsigned int *v169;  // [bp-0x224]\n
    struct struct_0 **v170;  // [bp-0x220]\n
    char v171;  // [bp-0x21c]\n
    unsigned int v172;  // [bp-0x210]\n
    unsigned int *v173;  // [bp-0x20c]\n
    struct struct_0 **v174;  // [bp-0x208]\n
    char v175;  // [bp-0x204]\n
    unsigned int v176;  // [bp-0x1f8]\n
    unsigned int *v177;  // [bp-0x1f4]\n
    struct struct_0 **v178;  // [bp-0x1f0]\n
    char v179;  // [bp-0x1ec]\n
    unsigned int v180;  // [bp-0x1e0]\n
    unsigned int *v181;  // [bp-0x1dc]\n
    struct struct_0 **v182;  // [bp-0x1d8]\n
    char v183;  // [bp-0x1d4]\n
    unsigned int v184;  // [bp-0x1c8]\n
    unsigned int *v185;  // [bp-0x1c4]\n
    struct struct_0 **v186;  // [bp-0x1c0]\n
    unsigned int v187;  // [bp-0x1bc]\n
    unsigned short v188;  // [bp-0x1b6]\n
    unsigned int *v189;  // [bp-0x1b4]\n
    struct struct_0 **v190;  // [bp-0x1b0]\n
    unsigned int v191;  // [bp-0x1ac]\n
    unsigned short v192;  // [bp-0x1a6]\n
    unsigned int *v193;  // [bp-0x1a4]\n
    struct struct_0 **v194;  // [bp-0x1a0]\n
    unsigned int v195;  // [bp-0x19c]\n
    unsigned short v196;  // [bp-0x196]\n
    unsigned int *v197;  // [bp-0x194]\n
    struct struct_0 **v198;  // [bp-0x190]\n
    unsigned int v199;  // [bp-0x18c]\n
    unsigned short v200;  // [bp-0x186]\n
    unsigned int *v201;  // [bp-0x184]\n
    struct struct_0 **v202;  // [bp-0x180]\n
    unsigned int v203;  // [bp-0x17c]\n
    unsigned short v204;  // [bp-0x176]\n
    unsigned int *v205;  // [bp-0x174]\n
    struct struct_0 **v206;  // [bp-0x170]\n
    unsigned int v207;  // [bp-0x16c]\n
    unsigned short v208;  // [bp-0x166]\n
    unsigned int *v209;  // [bp-0x164]\n
    struct struct_0 **v210;  // [bp-0x160]\n
    unsigned int v211;  // [bp-0x15c]\n
    unsigned short v212;  // [bp-0x156]\n
    unsigned int *v213;  // [bp-0x154]\n
    struct struct_0 **v214;  // [bp-0x150]\n
    unsigned int v215;  // [bp-0x14c]\n
    unsigned short v216;  // [bp-0x146]\n
    unsigned int *v217;  // [bp-0x144]\n
    struct struct_0 **v218;  // [bp-0x140]\n
    unsigned int v219;  // [bp-0x13c]\n
    unsigned short v220;  // [bp-0x136]\n
    unsigned int *v221;  // [bp-0x134]\n
    struct struct_0 **v222;  // [bp-0x130]\n
    char v223;  // [bp-0x12c]\n
    char v224[4];  // [bp-0x120]\n
    unsigned int v225;  // [bp-0x11c]\n
    unsigned int *v226;  // [bp-0x118]\n
    struct struct_0 **v227;  // [bp-0x114]\n
    char v228;  // [bp-0x110]\n
    char v229[4];  // [bp-0x104]\n
    unsigned int v230;  // [bp-0x100]\n
    unsigned int *v231;  // [bp-0xfc]\n
    struct struct_0 **v232;  // [bp-0xf8]\n
    char v233;  // [bp-0xf4]\n
    char v234[4];  // [bp-0xe8]\n
    unsigned int v235;  // [bp-0xe4]\n
    unsigned int *v236;  // [bp-0xe0]\n
    struct struct_0 **v237;  // [bp-0xdc]\n
    char v238;  // [bp-0xd8]\n
    char v239[4];  // [bp-0xcc]\n
    unsigned int v240;  // [bp-0xc8]\n
    unsigned int *v241;  // [bp-0xc4]\n
    struct struct_0 **v242;  // [bp-0xc0]\n
    char *v243;  // [bp-0xbc]\n
    unsigned int v244;  // [bp-0xb8]\n
    unsigned int *v245;  // [bp-0xb4]\n
    struct struct_0 **v246;  // [bp-0xb0]\n
    char v247;  // [bp-0xa9]\n
    unsigned int v248;  // [bp-0x94]\n
    unsigned int v249;  // [bp-0x90]\n
    unsigned int *v250;  // [bp-0x8c]\n
    struct struct_0 **v251;  // [bp-0x88]\n
    char v252;  // [bp-0x81]\n
    unsigned int v253;  // [bp-0x6c]\n
    unsigned int v254;  // [bp-0x68]\n
    unsigned int *v255;  // [bp-0x60]\n
    struct struct_0 **v256;  // [bp-0x5c]\n
    unsigned int v257;  // [bp-0x58]\n
    char v258;  // [bp-0x51]\n
    unsigned int *v259;  // [bp-0x50]\n
    struct struct_0 **v260;  // [bp-0x4c]\n
    unsigned int v261;  // [bp-0x48]\n
    char v262;  // [bp-0x41]\n
    unsigned int *v263;  // [bp-0x40]\n
    struct struct_0 **v264;  // [bp-0x3c]\n
    unsigned int v265;  // [bp-0x38]\n
    char v266;  // [bp-0x31]\n
    unsigned int *v267;  // [bp-0x30]\n
    struct struct_0 **v268;  // [bp-0x2c]\n
    unsigned int v269;  // [bp-0x28]\n
    char v270;  // [bp-0x21]\n
    unsigned int *v271;  // [bp-0x20]\n
    struct struct_0 **v272;  // [bp-0x1c]\n
    unsigned int v273;  // [bp-0x18]\n
    char v274;  // [bp-0x11]\n
    unsigned int *v275;  // [bp-0x10]\n
    struct struct_0 **v276;  // [bp-0xc]\n
    unsigned int v277;  // [bp-0x8]\n
    unsigned int v279;  // ebx\n
    unsigned int *v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    struct struct_0 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_0 **v285;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v289;  // eax\n
    unsigned int *v290;  // eax\n
    struct struct_0 **v291;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v295;  // eax\n
    unsigned int *v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    struct struct_0 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_0 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_0 **v307;  // eax\n
    struct struct_0 **v309;  // eax\n
    unsigned int *v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_0 **v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_0 **v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int v318[2];  // ecx\n
    unsigned int *v319;  // eax\n
    struct struct_0 **v320;  // eax\n
    unsigned int *v321;  // eax\n
    struct struct_0 **v322;  // eax\n
    unsigned int *v323;  // eax\n
    struct struct_0 **v324;  // eax\n
    unsigned int *v325;  // eax\n
    struct struct_0 **v326;  // eax\n
    unsigned int *v327;  // eax\n
    struct struct_0 **v328;  // eax\n
    unsigned int *v329;  // eax\n
    struct struct_0 **v330;  // eax\n
    struct struct_0 **v331;  // eax\n
    unsigned int *v332;  // eax\n
    unsigned int *v333;  // eax\n
    struct struct_0 **v334;  // eax\n
    struct struct_0 **v336;  // eax\n
    unsigned int *v338;  // eax\n
    unsigned int v339[2];  // ecx\n
    unsigned int *v340;  // eax\n
    struct struct_0 **v341;  // eax\n
    unsigned int *v342;  // eax\n
    struct struct_0 **v343;  // eax\n
    unsigned int *v344;  // eax\n
    struct struct_0 **v345;  // eax\n
    unsigned int *v346;  // eax\n
    struct struct_0 **v347;  // eax\n
    struct struct_0 **v349;  // eax\n
    unsigned int *v351;  // eax\n
    unsigned int *v352;  // eax\n
    struct struct_0 **v353;  // eax\n
    struct struct_0 **v354;  // eax\n
    unsigned int *v355;  // eax\n
    unsigned int *v356;  // eax\n
    struct struct_0 **v357;  // eax\n
    unsigned int *v358;  // eax\n
    struct struct_0 **v359;  // eax\n
    unsigned int *v360;  // eax\n
    struct struct_0 **v361;  // eax\n
    unsigned int *v362;  // eax\n
    struct struct_0 **v363;  // eax\n
    struct struct_0 **v364;  // eax\n
    unsigned int *v365;  // eax\n
    unsigned int *v366;  // eax\n
    struct struct_0 **v367;  // eax\n
    unsigned int *v368;  // eax\n
    struct struct_0 **v369;  // eax\n
    unsigned int *v370;  // eax\n
    struct struct_0 **v371;  // eax\n
    unsigned int *v372;  // eax\n
    struct struct_0 **v373;  // eax\n
    unsigned int *v374;  // eax\n
    struct struct_0 **v375;  // eax\n
    unsigned int *v376;  // eax\n
    struct struct_0 **v377;  // eax\n
    unsigned int *v378;  // eax\n
    struct struct_0 **v379;  // eax\n
    unsigned int *v380;  // eax\n
    struct struct_0 **v381;  // eax\n
    unsigned int *v382;  // eax\n
    struct struct_0 **v383;  // eax\n
    unsigned int *v384;  // eax\n
    struct struct_0 **v385;  // eax\n
    struct struct_0 **v386;  // eax\n
    unsigned int *v387;  // eax\n
    unsigned int *v388;  // eax\n
    struct struct_0 **v389;  // eax\n
    unsigned int *v390;  // eax\n
    struct struct_0 **v391;  // eax\n
    unsigned int *v392;  // eax\n
    struct struct_0 **v393;  // eax\n
    unsigned int *v394;  // eax\n
    struct struct_0 **v395;  // eax\n
    struct struct_0 **v396;  // eax\n
    unsigned int *v397;  // eax\n
    unsigned int *v398;  // eax\n
    struct struct_0 **v399;  // eax\n
    unsigned int *v400;  // eax\n
    struct struct_0 **v401;  // eax\n
    unsigned int *v402;  // eax\n
    struct struct_0 **v403;  // eax\n
    struct struct_0 **v404;  // eax\n
    unsigned int *v405;  // eax\n
    unsigned int *v406;  // eax\n
    struct struct_0 **v407;  // eax\n
    struct struct_0 **v409;  // eax\n
    unsigned int *v411;  // eax\n
    unsigned int *v412;  // eax\n
    struct struct_0 **v413;  // eax\n
    unsigned int *v414;  // eax\n
    struct struct_0 **v415;  // eax\n
    unsigned int *v416;  // eax\n
    struct struct_0 **v417;  // eax\n
    unsigned int *v418;  // eax\n
    struct struct_0 **v419;  // eax\n
    struct struct_0 **v420;  // eax\n
    unsigned int *v421;  // eax\n
    struct struct_0 **v423;  // eax\n
    unsigned int *v425;  // eax\n
    unsigned int *v426;  // eax\n
    struct struct_0 **v427;  // eax\n
    unsigned int *v428;  // eax, Other Possible Types: unsigned int\n
    unsigned int v429;  // ebx\n
\n
    v277 = v279;\n
    v40 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v64 = g_4f037c;\n
    v63 = cgc__cookie;\n
    v62 = -1;\n
    if (cgc_sendline(1, \"===llamafootpad===\", 18) < 0)\n
        cgc__terminate();\n
    v88 = v278;\n
    v87 = a0;\n
    *(&v84[0]) = *(v88);\n
    memset(&v83, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = 0;\n
    if (v84[0])\n
    {\n
        v39 = 0;\n
        if (v84[1])\n
        {\n
            v39 = 0;\n
            if (v84[2])\n
            {\n
                v39 = 0;\n
                if (v84[3])\n
                {\n
                    v39 = 0;\n
                    if (v84[4] << 24)\n
                    {\n
                        v39 = 0;\n
                        if (v84[5] << 16)\n
                        {\n
                            v39 = 0;\n
                            if (v84[6] << 8)\n
                                v39 = v84[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v85 = v39 & 1;\n
    v86 = 0;\n
    cgc_uint2str(&v83, 21, v85);\n
    v38 = &v83;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v280 = v87;\n
    *(v280) = *(v280) - 8;\n
    v281 = v88;\n
    *(v281) = &(*(v281))[1].padding_1[2];\n
    v206 = v278;\n
    v205 = a0;\n
    if (*(v205) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = *(&*(v206)->field_0);\n
    v282 = v205;\n
    *(v282) = *(v282) - 2;\n
    v283 = v206;\n
    *(v283) = &*(v283)->padding_1[1];\n
    if (v204 <= *(v205) && !(!v204))\n
        goto LABEL_4394f1;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4394f1:\n
    v203 = cgc_calloc(v204);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v203, *(v206), v204);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v284 = v205;\n
    *(v284) = *(v284) - v204;\n
    v285 = v206;\n
    *(v285) = &(&*(v285)->field_0)[v204];\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    v123 = v278;\n
    v122 = a0;\n
    if (*(v122) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v122) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v122);\n
    v121 = v37;\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = cgc_calloc(134);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v120, &v40[18].padding_0[182]);\n
    cgc_strncpy(v120 + 5, *(v123), v121);\n
    v287 = v123;\n
    *(v287) = &(&*(v287)->field_4)[cgc_strlen(v120)];\n
    v289 = v122;\n
    *(v289) = *(v289) - (cgc_strlen(v120) + -4);\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v82 = v278;\n
    v81 = a0;\n
    *(&v78[0]) = *(v82);\n
    memset(&v77, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = 0;\n
    if (v78[0])\n
    {\n
        v36 = 0;\n
        if (v78[1])\n
        {\n
            v36 = 0;\n
            if (v78[2])\n
            {\n
                v36 = 0;\n
                if (v78[3])\n
                {\n
                    v36 = 0;\n
                    if (v78[4] << 24)\n
                    {\n
                        v36 = 0;\n
                        if (v78[5] << 16)\n
                        {\n
                            v36 = 0;\n
                            if (v78[6] << 8)\n
                                v36 = v78[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v79 = v36 & 1;\n
    v80 = 0;\n
    cgc_uint2str(&v77, 21, v79);\n
    v35 = &v77;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v290 = v81;\n
    *(v290) = *(v290) - 8;\n
    v291 = v82;\n
    *(v291) = &(*(v291))[1].padding_1[2];\n
    v119 = v278;\n
    v118 = a0;\n
    if (*(v118) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v118) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v118);\n
    v117 = v34;\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = cgc_calloc(134);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v116, &v40[18].padding_0[182]);\n
    cgc_strncpy(v116 + 5, *(v119), v117);\n
    v293 = v119;\n
    *(v293) = &(&*(v293)->field_4)[cgc_strlen(v116)];\n
    v295 = v118;\n
    *(v295) = *(v295) - (cgc_strlen(v116) + -4);\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v76 = v278;\n
    v75 = a0;\n
    *(&v72[0]) = *(v76);\n
    memset(&v71, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = 0;\n
    if (v72[0])\n
    {\n
        v33 = 0;\n
        if (v72[1])\n
        {\n
            v33 = 0;\n
            if (v72[2])\n
            {\n
                v33 = 0;\n
                if (v72[3])\n
                {\n
                    v33 = 0;\n
                    if (v72[4] << 24)\n
                    {\n
                        v33 = 0;\n
                        if (v72[5] << 16)\n
                        {\n
                            v33 = 0;\n
                            if (v72[6] << 8)\n
                                v33 = v72[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v73 = v33 & 1;\n
    v74 = 0;\n
    cgc_uint2str(&v71, 21, v73);\n
    v32 = &v71;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v296 = v75;\n
    *(v296) = *(v296) - 8;\n
    v297 = v76;\n
    *(v297) = &(*(v297))[1].padding_1[2];\n
    v242 = v278;\n
    v241 = a0;\n
    *(&v239[0]) = *(v242);\n
    memset(&v238, 0, 12);\n
    if (*(v241) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (v239[0] << 24)\n
    {\n
        v31 = 0;\n
        if (v239[1] << 16)\n
        {\n
            v31 = 0;\n
            if (v239[2] << 8)\n
                v31 = v239[3];\n
        }\n
    }\n
    v240 = v31 & 1;\n
    cgc_uint2str(&v238, 12, v240);\n
    v30 = &v238;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v238)) < 0)\n
        cgc__terminate();\n
    v298 = v241;\n
    *(v298) = *(v298) - 4;\n
    v299 = v242;\n
    *(v299) = &*(v299)->field_4;\n
    v202 = v278;\n
    v201 = a0;\n
    if (*(v201) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v200 = *(&*(v202)->field_0);\n
    v300 = v201;\n
    *(v300) = *(v300) - 2;\n
    v301 = v202;\n
    *(v301) = &*(v301)->padding_1[1];\n
    if (v200 <= *(v201) && !(!v200))\n
        goto LABEL_43a27e;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43a27e:\n
    v199 = cgc_calloc(v200);\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v199, *(v202), v200);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v302 = v201;\n
    *(v302) = *(v302) - v200;\n
    v303 = v202;\n
    *(v303) = &(&*(v303)->field_0)[v200];\n
    cgc_checkheap();\n
    cgc_free(v199);\n
    v146 = v278;\n
    v145 = a0;\n
    *(&v144[0]) = *(v146);\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v304 = v145;\n
    *(v304) = *(v304) - 2;\n
    v305 = v146;\n
    *(v305) = &*(v305)->padding_1[1];\n
    v62 = *(&v144[0]);\n
    v186 = v278;\n
    v185 = a0;\n
    memset(&v183, 0, 12);\n
    if (*(v185) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v184 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v54 = [D] x86g_create_fpucw(fpround<4>);\n
    v53 = v54 | 0xc00;\n
    v61 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v183, 12, v61);\n
    v29 = &v183;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v183)) < 0)\n
        cgc__terminate();\n
    v306 = v185;\n
    *(v306) = *(v306) - 4;\n
    v307 = v186;\n
    *(v307) = &*(v307)->field_4;\n
    v115 = v278;\n
    v114 = a0;\n
    if (*(v114) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v114) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v114);\n
    v113 = v28;\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = cgc_calloc(134);\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v112, &v40[18].padding_0[182]);\n
    cgc_strncpy(v112 + 5, *(v115), v113);\n
    v309 = v115;\n
    *(v309) = &(&*(v309)->field_4)[cgc_strlen(v112)];\n
    v311 = v114;\n
    *(v311) = *(v311) - (cgc_strlen(v112) + -4);\n
    cgc_checkheap();\n
    cgc_free(v112);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v222 = v278;\n
    v221 = a0;\n
    if (*(v221) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v220 = *(&*(v222)->field_0);\n
    v312 = v221;\n
    *(v312) = *(v312) - 2;\n
    v313 = v222;\n
    *(v313) = &*(v313)->padding_1[1];\n
    if (v220 <= *(v221) && !(!v220))\n
        goto LABEL_43a956;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43a956:\n
    v219 = cgc_calloc(v220);\n
    if (!v219)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v219, *(v222), v220);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v314 = v221;\n
    *(v314) = *(v314) - v220;\n
    v315 = v222;\n
    *(v315) = &(&*(v315)->field_0)[v220];\n
    cgc_checkheap();\n
    cgc_free(v219);\n
    v143 = v278;\n
    v142 = a0;\n
    memset(&v140, 0, 4);\n
    if (*(v142) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = *(v143)->field_0;\n
    cgc_uint2str(&v140, 4, v141);\n
    v27 = &v140;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v140)) < 0)\n
        cgc__terminate();\n
    v316 = v142;\n
    *(v316) = *(v316) - 1;\n
    v317 = v143;\n
    *(v317) = &*(v317)->padding_1;\n
    v256 = v278;\n
    v255 = a0;\n
    memset(&v252, 0, 21);\n
    if (*(v255) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v318 = *(v256);\n
    v254 = v318[1];\n
    v253 = v318[0];\n
    cgc_uint2str(&v252, 21, v253);\n
    v26 = &v252;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v252)) < 0)\n
        cgc__terminate();\n
    v319 = v255;\n
    *(v319) = *(v319) - 8;\n
    v320 = v256;\n
    *(v320) = &(*(v320))[1].padding_1[2];\n
    v166 = v278;\n
    v165 = a0;\n
    memset(&v163, 0, 21);\n
    if (*(v165) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v164 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v52 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1254, size=2, endness=Iend_LE)))));\n
    v51 = v52 | 0xc00;\n
    v60 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v163, 21, v60);\n
    v25 = &v163;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v163)) < 0)\n
        cgc__terminate();\n
    v321 = v165;\n
    *(v321) = *(v321) - 8;\n
    v322 = v166;\n
    *(v322) = &(*(v322))[1].padding_1[2];\n
    v139 = v278;\n
    v138 = a0;\n
    memset(&v136, 0, 4);\n
    if (*(v138) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v137 = *(v139)->field_0;\n
    cgc_uint2str(&v136, 4, v137);\n
    v24 = &v136;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v136)) < 0)\n
        cgc__terminate();\n
    v323 = v138;\n
    *(v323) = *(v323) - 1;\n
    v324 = v139;\n
    *(v324) = &*(v324)->padding_1;\n
    v178 = v278;\n
    v177 = a0;\n
    memset(&v175, 0, 12);\n
    if (*(v177) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = *(&*(v178)->field_0);\n
    cgc_uint2str(&v175, 12, v176);\n
    v23 = &v175;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v175)) < 0)\n
        cgc__terminate();\n
    v325 = v177;\n
    *(v325) = *(v325) - 4;\n
    v326 = v178;\n
    *(v326) = &*(v326)->field_4;\n
    v174 = v278;\n
    v173 = a0;\n
    memset(&v171, 0, 12);\n
    if (*(v173) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(&*(v174)->field_0);\n
    cgc_uint2str(&v171, 12, v172);\n
    v22 = &v171;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v171)) < 0)\n
        cgc__terminate();\n
    v327 = v173;\n
    *(v327) = *(v327) - 4;\n
    v328 = v174;\n
    *(v328) = &*(v328)->field_4;\n
    v276 = v278;\n
    v275 = a0;\n
    if (*(v275) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v274 = *(v276)->field_0;\n
    v329 = v275;\n
    *(v329) = *(v329) - 1;\n
    v330 = v276;\n
    *(v330) = &*(v330)->padding_1;\n
    if (v274 <= *(v275) && !(!v274))\n
        goto LABEL_43b317;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43b317:\n
    v273 = cgc_calloc(v274);\n
    if (!v273)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v273, *(v276), v274);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v331 = v276;\n
    *(v331) = &(&*(v331)->field_0)[v274];\n
    v332 = v275;\n
    *(v332) = *(v332) - v274;\n
    cgc_checkheap();\n
    cgc_free(v273);\n
    v131 = v278;\n
    v130 = a0;\n
    memset(&v128, 0, 6);\n
    if (*(v130) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = *(&*(v131)->field_0);\n
    cgc_uint2str(&v128, 6, v129);\n
    v21 = &v128;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v333 = v130;\n
    *(v333) = *(v333) - 2;\n
    v334 = v131;\n
    *(v334) = &*(v334)->padding_1[1];\n
    v111 = v278;\n
    v110 = a0;\n
    if (*(v110) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v110) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v110);\n
    v109 = v20;\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = cgc_calloc(134);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v108, &v40[18].padding_0[182]);\n
    cgc_strncpy(v108 + 5, *(v111), v109);\n
    v336 = v111;\n
    *(v336) = &(&*(v336)->field_4)[cgc_strlen(v108)];\n
    v338 = v110;\n
    *(v338) = *(v338) - (cgc_strlen(v108) + -4);\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v251 = v278;\n
    v250 = a0;\n
    memset(&v247, 0, 21);\n
    if (*(v250) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v339 = *(v251);\n
    v249 = v339[1];\n
    v248 = v339[0];\n
    cgc_uint2str(&v247, 21, v248);\n
    v19 = &v247;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v247)) < 0)\n
        cgc__terminate();\n
    v340 = v250;\n
    *(v340) = *(v340) - 8;\n
    v341 = v251;\n
    *(v341) = &(*(v341))[1].padding_1[2];\n
    v198 = v278;\n
    v197 = a0;\n
    if (*(v197) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v196 = *(&*(v198)->field_0);\n
    v342 = v197;\n
    *(v342) = *(v342) - 2;\n
    v343 = v198;\n
    *(v343) = &*(v343)->padding_1[1];\n
    if (v196 <= *(v197) && !(!v196))\n
        goto LABEL_43ba43;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43ba43:\n
    v195 = cgc_calloc(v196);\n
    if (!v195)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v195, *(v198), v196);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v344 = v197;\n
    *(v344) = *(v344) - v196;\n
    v345 = v198;\n
    *(v345) = &(&*(v345)->field_0)[v196];\n
    cgc_checkheap();\n
    cgc_free(v195);\n
    v237 = v278;\n
    v236 = a0;\n
    *(&v234[0]) = *(v237);\n
    memset(&v233, 0, 12);\n
    if (*(v236) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v234[0] << 24)\n
    {\n
        v18 = 0;\n
        if (v234[1] << 16)\n
        {\n
            v18 = 0;\n
            if (v234[2] << 8)\n
                v18 = v234[3];\n
        }\n
    }\n
    v235 = v18 & 1;\n
    cgc_uint2str(&v233, 12, v235);\n
    v17 = &v233;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v233)) < 0)\n
        cgc__terminate();\n
    v346 = v236;\n
    *(v346) = *(v346) - 4;\n
    v347 = v237;\n
    *(v347) = &*(v347)->field_4;\n
    v107 = v278;\n
    v106 = a0;\n
    if (*(v106) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v106) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v106);\n
    v105 = v16;\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = cgc_calloc(134);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v104, &v40[18].padding_0[182]);\n
    cgc_strncpy(v104 + 5, *(v107), v105);\n
    v349 = v107;\n
    *(v349) = &(&*(v349)->field_4)[cgc_strlen(v104)];\n
    v351 = v106;\n
    *(v351) = *(v351) - (cgc_strlen(v104) + -4);\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v96 = v278;\n
    v95 = a0;\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = *(v96)->field_0;\n
    v352 = v95;\n
    *(v352) = *(v352) - 1;\n
    v353 = v96;\n
    *(v353) = &*(v353)->padding_1;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_43c0bd;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43c0bd:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v354 = v96;\n
    *(v354) = &(&*(v354)->field_0)[v94];\n
    v355 = v95;\n
    *(v355) = *(v355) - v94;\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v162 = v278;\n
    v161 = a0;\n
    memset(&v159, 0, 21);\n
    if (*(v161) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v160 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v50 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1258, size=2, endness=Iend_LE)))));\n
    v49 = v50 | 0xc00;\n
    v59 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v159, 21, v59);\n
    v15 = &v159;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v159)) < 0)\n
        cgc__terminate();\n
    v356 = v161;\n
    *(v356) = *(v356) - 8;\n
    v357 = v162;\n
    *(v357) = &(*(v357))[1].padding_1[2];\n
    v158 = v278;\n
    v157 = a0;\n
    memset(&v155, 0, 21);\n
    if (*(v157) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v156 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1262, size=2, endness=Iend_LE)))));\n
    v47 = v48 | 0xc00;\n
    v58 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v155, 21, v58);\n
    v14 = &v155;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v358 = v157;\n
    *(v358) = *(v358) - 8;\n
    v359 = v158;\n
    *(v359) = &(*(v359))[1].padding_1[2];\n
    v70 = v278;\n
    v69 = a0;\n
    *(&v66[0]) = *(v70);\n
    memset(&v65, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v66[0])\n
    {\n
        v13 = 0;\n
        if (v66[1])\n
        {\n
            v13 = 0;\n
            if (v66[2])\n
            {\n
                v13 = 0;\n
                if (v66[3])\n
                {\n
                    v13 = 0;\n
                    if (v66[4] << 24)\n
                    {\n
                        v13 = 0;\n
                        if (v66[5] << 16)\n
                        {\n
                            v13 = 0;\n
                            if (v66[6] << 8)\n
                                v13 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v67 = v13 & 1;\n
    v68 = 0;\n
    cgc_uint2str(&v65, 21, v67);\n
    v12 = &v65;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v360 = v69;\n
    *(v360) = *(v360) - 8;\n
    v361 = v70;\n
    *(v361) = &(*(v361))[1].padding_1[2];\n
    v272 = v278;\n
    v271 = a0;\n
    if (*(v271) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v270 = *(v272)->field_0;\n
    v362 = v271;\n
    *(v362) = *(v362) - 1;\n
    v363 = v272;\n
    *(v363) = &*(v363)->padding_1;\n
    if (v270 <= *(v271) && !(!v270))\n
        goto LABEL_43c807;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43c807:\n
    v269 = cgc_calloc(v270);\n
    if (!v269)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v269, *(v272), v270);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v364 = v272;\n
    *(v364) = &(&*(v364)->field_0)[v270];\n
    v365 = v271;\n
    *(v365) = *(v365) - v270;\n
    cgc_checkheap();\n
    cgc_free(v269);\n
    v218 = v278;\n
    v217 = a0;\n
    if (*(v217) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v216 = *(&*(v218)->field_0);\n
    v366 = v217;\n
    *(v366) = *(v366) - 2;\n
    v367 = v218;\n
    *(v367) = &*(v367)->padding_1[1];\n
    if (v216 <= *(v217) && !(!v216))\n
        goto LABEL_43ca20;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43ca20:\n
    v215 = cgc_calloc(v216);\n
    if (!v215)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v215, *(v218), v216);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v368 = v217;\n
    *(v368) = *(v368) - v216;\n
    v369 = v218;\n
    *(v369) = &(&*(v369)->field_0)[v216];\n
    cgc_checkheap();\n
    cgc_free(v215);\n
    v214 = v278;\n
    v213 = a0;\n
    if (*(v213) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v212 = *(&*(v214)->field_0);\n
    v370 = v213;\n
    *(v370) = *(v370) - 2;\n
    v371 = v214;\n
    *(v371) = &*(v371)->padding_1[1];\n
    if (v212 <= *(v213) && !(!v212))\n
        goto LABEL_43cc5a;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43cc5a:\n
    v211 = cgc_calloc(v212);\n
    if (!v211)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v211, *(v214), v212);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v372 = v213;\n
    *(v372) = *(v372) - v212;\n
    v373 = v214;\n
    *(v373) = &(&*(v373)->field_0)[v212];\n
    cgc_checkheap();\n
    cgc_free(v211);\n
    v154 = v278;\n
    v153 = a0;\n
    memset(&v151, 0, 21);\n
    if (*(v153) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v152 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1266, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v57 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v151, 21, v57);\n
    v11 = &v151;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v151)) < 0)\n
        cgc__terminate();\n
    v374 = v153;\n
    *(v374) = *(v374) - 8;\n
    v375 = v154;\n
    *(v375) = &(*(v375))[1].padding_1[2];\n
    v232 = v278;\n
    v231 = a0;\n
    *(&v229[0]) = *(v232);\n
    memset(&v228, 0, 12);\n
    if (*(v231) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v229[0] << 24)\n
    {\n
        v10 = 0;\n
        if (v229[1] << 16)\n
        {\n
            v10 = 0;\n
            if (v229[2] << 8)\n
                v10 = v229[3];\n
        }\n
    }\n
    v230 = v10 & 1;\n
    cgc_uint2str(&v228, 12, v230);\n
    v9 = &v228;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v228)) < 0)\n
        cgc__terminate();\n
    v376 = v231;\n
    *(v376) = *(v376) - 4;\n
    v377 = v232;\n
    *(v377) = &*(v377)->field_4;\n
    v182 = v278;\n
    v181 = a0;\n
    memset(&v179, 0, 12);\n
    if (*(v181) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v180 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1270, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v179, 12, v56);\n
    v8 = &v179;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v179)) < 0)\n
        cgc__terminate();\n
    v378 = v181;\n
    *(v378) = *(v378) - 4;\n
    v379 = v182;\n
    *(v379) = &*(v379)->field_4;\n
    v210 = v278;\n
    v209 = a0;\n
    if (*(v209) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v208 = *(&*(v210)->field_0);\n
    v380 = v209;\n
    *(v380) = *(v380) - 2;\n
    v381 = v210;\n
    *(v381) = &*(v381)->padding_1[1];\n
    if (v208 <= *(v209) && !(!v208))\n
        goto LABEL_43d33d;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43d33d:\n
    v207 = cgc_calloc(v208);\n
    if (!v207)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v207, *(v210), v208);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v382 = v209;\n
    *(v382) = *(v382) - v208;\n
    v383 = v210;\n
    *(v383) = &(&*(v383)->field_0)[v208];\n
    cgc_checkheap();\n
    cgc_free(v207);\n
    v268 = v278;\n
    v267 = a0;\n
    if (*(v267) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v266 = *(v268)->field_0;\n
    v384 = v267;\n
    *(v384) = *(v384) - 1;\n
    v385 = v268;\n
    *(v385) = &*(v385)->padding_1;\n
    if (v266 <= *(v267) && !(!v266))\n
        goto LABEL_43d557;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43d557:\n
    v265 = cgc_calloc(v266);\n
    if (!v265)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v265, *(v268), v266);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v386 = v268;\n
    *(v386) = &(&*(v386)->field_0)[v266];\n
    v387 = v267;\n
    *(v387) = *(v387) - v266;\n
    cgc_checkheap();\n
    cgc_free(v265);\n
    v135 = v278;\n
    v134 = a0;\n
    memset(&v132, 0, 4);\n
    if (*(v134) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = *(v135)->field_0;\n
    cgc_uint2str(&v132, 4, v133);\n
    v7 = &v132;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v388 = v134;\n
    *(v388) = *(v388) - 1;\n
    v389 = v135;\n
    *(v389) = &*(v389)->padding_1;\n
    v194 = v278;\n
    v193 = a0;\n
    if (*(v193) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v192 = *(&*(v194)->field_0);\n
    v390 = v193;\n
    *(v390) = *(v390) - 2;\n
    v391 = v194;\n
    *(v391) = &*(v391)->padding_1[1];\n
    if (v192 <= *(v193) && !(!v192))\n
        goto LABEL_43d8b4;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43d8b4:\n
    v191 = cgc_calloc(v192);\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v191, *(v194), v192);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v392 = v193;\n
    *(v392) = *(v392) - v192;\n
    v393 = v194;\n
    *(v393) = &(&*(v393)->field_0)[v192];\n
    cgc_checkheap();\n
    cgc_free(v191);\n
    v264 = v278;\n
    v263 = a0;\n
    if (*(v263) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v262 = *(v264)->field_0;\n
    v394 = v263;\n
    *(v394) = *(v394) - 1;\n
    v395 = v264;\n
    *(v395) = &*(v395)->padding_1;\n
    if (v262 <= *(v263) && !(!v262))\n
        goto LABEL_43dace;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43dace:\n
    v261 = cgc_calloc(v262);\n
    if (!v261)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v261, *(v264), v262);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v396 = v264;\n
    *(v396) = &(&*(v396)->field_0)[v262];\n
    v397 = v263;\n
    *(v397) = *(v397) - v262;\n
    cgc_checkheap();\n
    cgc_free(v261);\n
    v190 = v278;\n
    v189 = a0;\n
    if (*(v189) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v188 = *(&*(v190)->field_0);\n
    v398 = v189;\n
    *(v398) = *(v398) - 2;\n
    v399 = v190;\n
    *(v399) = &*(v399)->padding_1[1];\n
    if (v188 <= *(v189) && !(!v188))\n
        goto LABEL_43dce7;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43dce7:\n
    v187 = cgc_calloc(v188);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v187, *(v190), v188);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v400 = v189;\n
    *(v400) = *(v400) - v188;\n
    v401 = v190;\n
    *(v401) = &(&*(v401)->field_0)[v188];\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    v92 = v278;\n
    v91 = a0;\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = *(v92)->field_0;\n
    v402 = v91;\n
    *(v402) = *(v402) - 1;\n
    v403 = v92;\n
    *(v403) = &*(v403)->padding_1;\n
    if (v90 <= *(v91) && !(!v90))\n
        goto LABEL_43df1f;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43df1f:\n
    v89 = cgc_calloc(v90);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v89, *(v92), v90);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v404 = v92;\n
    *(v404) = &(&*(v404)->field_0)[v90];\n
    v405 = v91;\n
    *(v405) = *(v405) - v90;\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    v99 = v278;\n
    v98 = a0;\n
    v97 = &*(v99)->field_0;\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v406 = v98;\n
    *(v406) = *(v406) - 1;\n
    v407 = v99;\n
    *(v407) = &*(v407)->padding_1;\n
    v62 = *(v97);\n
    v246 = v278;\n
    v245 = a0;\n
    if (*(v245) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v245) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v245);\n
    v244 = v6;\n
    if (!v244)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v243 = cgc_calloc(134);\n
    if (!v243)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v243, &v40[18].padding_0[182]);\n
    cgc_strncpy(v243 + 5, *(v246), v244);\n
    v409 = v246;\n
    *(v409) = &(&*(v409)->field_4)[cgc_strlen(v243)];\n
    v411 = v245;\n
    *(v411) = *(v411) - (cgc_strlen(v243) + -4);\n
    cgc_checkheap();\n
    cgc_free(v243);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v127 = v278;\n
    v126 = a0;\n
    memset(&v124, 0, 6);\n
    if (*(v126) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v125 = *(&*(v127)->field_0);\n
    cgc_uint2str(&v124, 6, v125);\n
    v5 = &v124;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v412 = v126;\n
    *(v412) = *(v412) - 2;\n
    v413 = v127;\n
    *(v413) = &*(v413)->padding_1[1];\n
    v150 = v278;\n
    v149 = a0;\n
    memset(&v147, 0, 21);\n
    if (*(v149) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v148 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1274, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v147, 21, v55);\n
    v4 = &v147;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v414 = v149;\n
    *(v414) = *(v414) - 8;\n
    v415 = v150;\n
    *(v415) = &(*(v415))[1].padding_1[2];\n
    v170 = v278;\n
    v169 = a0;\n
    memset(&v167, 0, 12);\n
    if (*(v169) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v168 = *(&*(v170)->field_0);\n
    cgc_uint2str(&v167, 12, v168);\n
    v3 = &v167;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v167)) < 0)\n
        cgc__terminate();\n
    v416 = v169;\n
    *(v416) = *(v416) - 4;\n
    v417 = v170;\n
    *(v417) = &*(v417)->field_4;\n
    v260 = v278;\n
    v259 = a0;\n
    if (*(v259) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v258 = *(v260)->field_0;\n
    v418 = v259;\n
    *(v418) = *(v418) - 1;\n
    v419 = v260;\n
    *(v419) = &*(v419)->padding_1;\n
    if (v258 <= *(v259) && !(!v258))\n
        goto LABEL_43e860;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43e860:\n
    v257 = cgc_calloc(v258);\n
    if (!v257)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v257, *(v260), v258);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v420 = v260;\n
    *(v420) = &(&*(v420)->field_0)[v258];\n
    v421 = v259;\n
    *(v421) = *(v421) - v258;\n
    cgc_checkheap();\n
    cgc_free(v257);\n
    v103 = v278;\n
    v102 = a0;\n
    if (*(v102) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v102) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v102);\n
    v101 = v2;\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = cgc_calloc(134);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v100, &v40[18].padding_0[182]);\n
    cgc_strncpy(v100 + 5, *(v103), v101);\n
    v423 = v103;\n
    *(v423) = &(&*(v423)->field_4)[cgc_strlen(v100)];\n
    v425 = v102;\n
    *(v425) = *(v425) - (cgc_strlen(v100) + -4);\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v227 = v278;\n
    v226 = a0;\n
    *(&v224[0]) = *(v227);\n
    memset(&v223, 0, 12);\n
    if (*(v226) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v224[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v224[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v224[2] << 8)\n
                v1 = v224[3];\n
        }\n
    }\n
    v225 = v1 & 1;\n
    cgc_uint2str(&v223, 12, v225);\n
    v0 = &v223;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v223)) < 0)\n
        cgc__terminate();\n
    v426 = v226;\n
    *(v426) = *(v426) - 4;\n
    v427 = v227;\n
    *(v427) = &*(v427)->field_4;\n
    v63 ^= v40->field_260;\n
    if (v63)\n
        cgc___stack_cookie_fail();\n
    v428 = a0;\n
    if (*(v428) > 0 && v62 >= 0 && v62 < 1)\n
        v428 = (&v64)[v62](v278);\n
    v429 = v277;\n
    return v428;\n
}\n
", "4451878:sub_43ee26": null, "4451888:cgc_process_llamapycnite": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamapycnite(struct struct_0 **v102, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x21c]\n
    struct_1 *v1;  // [bp-0x218]\n
    char v2;  // [bp-0x211]\n
    struct_1 *v3;  // [bp-0x210]\n
    char v4;  // [bp-0x209]\n
    struct_1 *v5;  // [bp-0x208]\n
    struct_1 *v6;  // [bp-0x204]\n
    struct_1 *v7;  // [bp-0x200]\n
    struct_1 *v8;  // [bp-0x1fc]\n
    char v9;  // [bp-0x1f5]\n
    struct_1 *v10;  // [bp-0x1f4]\n
    char v11;  // [bp-0x1ed]\n
    struct_1 *v12;  // [bp-0x1ec]\n
    char v13;  // [bp-0x1e5]\n
    struct_1 *v14;  // [bp-0x1e4]\n
    struct_1 *v15;  // [bp-0x1e0]\n
    struct_2 *v16;  // [bp-0x1dc]\n
    struct struct_3 **v17;  // [bp-0x1d8]\n
    unsigned int v18;  // [bp-0x1d4]\n
    char v19;  // [bp-0x1d0]\n
    char v20;  // [bp-0x1ce]\n
    char *v21;  // [bp-0x1c8]\n
    unsigned short v22;  // [bp-0x1c2]\n
    unsigned int *v23;  // [bp-0x1c0]\n
    struct struct_0 **v24;  // [bp-0x1bc]\n
    char v25;  // [bp-0x1b6]\n
    char v26[2];  // [bp-0x1b0]\n
    unsigned short v27;  // [bp-0x1aa]\n
    unsigned int *v28;  // [bp-0x1a8]\n
    struct struct_0 **v29;  // [bp-0x1a4]\n
    char v30;  // [bp-0x19d]\n
    char v31[8];  // [bp-0x188]\n
    unsigned int v32;  // [bp-0x184]\n
    void* v33;  // [bp-0x180]\n
    unsigned int *v34;  // [bp-0x178]\n
    struct struct_0 **v35;  // [bp-0x174]\n
    char v36;  // [bp-0x16d]\n
    char v37[8];  // [bp-0x158]\n
    unsigned int v38;  // [bp-0x154]\n
    void* v39;  // [bp-0x150]\n
    unsigned int *v40;  // [bp-0x148]\n
    struct struct_0 **v41;  // [bp-0x144]\n
    unsigned int v42;  // [bp-0x140]\n
    char v43;  // [bp-0x139]\n
    unsigned int *v44;  // [bp-0x138]\n
    struct struct_0 **v45;  // [bp-0x134]\n
    char v46;  // [bp-0x130]\n
    unsigned int v47;  // [bp-0x124]\n
    unsigned int *v48;  // [bp-0x120]\n
    struct struct_0 **v49;  // [bp-0x11c]\n
    char v50;  // [bp-0x118]\n
    unsigned int v51;  // [bp-0x10c]\n
    unsigned int *v52;  // [bp-0x108]\n
    struct struct_0 **v53;  // [bp-0x104]\n
    char v54;  // [bp-0x100]\n
    unsigned int v55;  // [bp-0xf4]\n
    unsigned int *v56;  // [bp-0xf0]\n
    struct struct_0 **v57;  // [bp-0xec]\n
    unsigned int v58;  // [bp-0xe8]\n
    unsigned short v59;  // [bp-0xe2]\n
    unsigned int *v60;  // [bp-0xe0]\n
    struct struct_0 **v61;  // [bp-0xdc]\n
    unsigned int v62;  // [bp-0xd8]\n
    unsigned short v63;  // [bp-0xd2]\n
    unsigned int *v64;  // [bp-0xd0]\n
    struct struct_0 **v65;  // [bp-0xcc]\n
    unsigned int v66;  // [bp-0xc8]\n
    unsigned short v67;  // [bp-0xc2]\n
    unsigned int *v68;  // [bp-0xc0]\n
    struct struct_0 **v69;  // [bp-0xbc]\n
    unsigned int v70;  // [bp-0xb8]\n
    unsigned short v71;  // [bp-0xb2]\n
    unsigned int *v72;  // [bp-0xb0]\n
    struct struct_0 **v73;  // [bp-0xac]\n
    unsigned int v74;  // [bp-0xa8]\n
    unsigned short v75;  // [bp-0xa2]\n
    unsigned int *v76;  // [bp-0xa0]\n
    struct struct_0 **v77;  // [bp-0x9c]\n
    char v78;  // [bp-0x98]\n
    char v79[4];  // [bp-0x8c]\n
    unsigned int v80;  // [bp-0x88]\n
    unsigned int *v81;  // [bp-0x84]\n
    struct struct_0 **v82;  // [bp-0x80]\n
    char *v83;  // [bp-0x7c]\n
    unsigned int v84;  // [bp-0x78]\n
    unsigned int *v85;  // [bp-0x74]\n
    struct struct_0 **v86;  // [bp-0x70]\n
    char v87;  // [bp-0x69]\n
    unsigned int v88;  // [bp-0x54]\n
    unsigned int v89;  // [bp-0x50]\n
    unsigned int *v90;  // [bp-0x4c]\n
    struct struct_0 **v91;  // [bp-0x48]\n
    char v92;  // [bp-0x41]\n
    unsigned int v93;  // [bp-0x2c]\n
    unsigned int v94;  // [bp-0x28]\n
    unsigned int *v95;  // [bp-0x20]\n
    struct struct_0 **v96;  // [bp-0x1c]\n
    unsigned int v97;  // [bp-0x18]\n
    char v98;  // [bp-0x11]\n
    unsigned int *v99;  // [bp-0x10]\n
    struct struct_0 **v100;  // [bp-0xc]\n
    unsigned int v101;  // [bp-0x8]\n
    unsigned int v103;  // ebx\n
    unsigned int *v104;  // eax\n
    struct struct_0 **v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_0 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    unsigned int *v114;  // eax\n
    struct struct_0 **v115;  // eax\n
    unsigned int v116[2];  // ecx\n
    unsigned int *v117;  // eax\n
    struct struct_0 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    struct struct_0 **v120;  // eax\n
    unsigned int *v121;  // eax\n
    struct struct_0 **v122;  // eax\n
    unsigned int *v123;  // eax\n
    struct struct_0 **v124;  // eax\n
    unsigned int *v125;  // eax\n
    struct struct_0 **v126;  // eax\n
    unsigned int *v127;  // eax\n
    struct struct_0 **v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_0 **v130;  // eax\n
    unsigned int *v131;  // eax\n
    struct struct_0 **v132;  // eax\n
    unsigned int *v133;  // eax\n
    struct struct_0 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_0 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_0 **v138;  // eax\n
    unsigned int v139[2];  // ecx\n
    unsigned int *v140;  // eax\n
    struct struct_0 **v141;  // eax\n
    unsigned int *v142;  // eax\n
    struct struct_0 **v143;  // eax\n
    struct struct_0 **v144;  // eax\n
    unsigned int *v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_0 **v149;  // eax\n
    struct struct_0 **v151;  // eax\n
    unsigned int *v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_0 **v155;  // eax\n
    struct struct_0 **v156;  // eax\n
    unsigned int *v157;  // eax\n
    unsigned int *v158;  // eax, Other Possible Types: unsigned int\n
    unsigned int v159;  // ebx\n
\n
    v101 = v103;\n
    v16 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamapycnite===\", 18) < 0)\n
        cgc__terminate();\n
    v69 = v102;\n
    v68 = a0;\n
    if (*(v68) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(&*(v69)->field_0);\n
    v104 = v68;\n
    *(v104) = *(v104) - 2;\n
    v105 = v69;\n
    *(v105) = &*(v105)->padding_1[1];\n
    if (v67 <= *(v68) && !(!v67))\n
        goto LABEL_43efbd;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43efbd:\n
    v66 = cgc_calloc(v67);\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v66, *(v69), v67);\n
    if (cgc_sendline(1, &v16[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v106 = v68;\n
    *(v106) = *(v106) - v67;\n
    v107 = v69;\n
    *(v107) = &(&*(v107)->field_0)[v67];\n
    cgc_checkheap();\n
    cgc_free(v66);\n
    v65 = v102;\n
    v64 = a0;\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(&*(v65)->field_0);\n
    v108 = v64;\n
    *(v108) = *(v108) - 2;\n
    v109 = v65;\n
    *(v109) = &*(v109)->padding_1[1];\n
    if (v63 <= *(v64) && !(!v63))\n
        goto LABEL_43f1f7;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43f1f7:\n
    v62 = cgc_calloc(v63);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v62, *(v65), v63);\n
    if (cgc_sendline(1, &v16[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v110 = v64;\n
    *(v110) = *(v110) - v63;\n
    v111 = v65;\n
    *(v111) = &(&*(v111)->field_0)[v63];\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    v77 = v102;\n
    v76 = a0;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    v112 = v76;\n
    *(v112) = *(v112) - 2;\n
    v113 = v77;\n
    *(v113) = &*(v113)->padding_1[1];\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_43f431;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43f431:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, &v16[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v114 = v76;\n
    *(v114) = *(v114) - v75;\n
    v115 = v77;\n
    *(v115) = &(&*(v115)->field_0)[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v96 = v102;\n
    v95 = a0;\n
    memset(&v92, 0, 21);\n
    if (*(v95) < 8)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(v96);\n
    v94 = v116[1];\n
    v93 = v116[0];\n
    cgc_uint2str(&v92, 21, v93);\n
    v15 = &v92;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v117 = v95;\n
    *(v117) = *(v117) - 8;\n
    v118 = v96;\n
    *(v118) = &(*(v118))[1].padding_1[2];\n
    v57 = v102;\n
    v56 = a0;\n
    memset(&v54, 0, 12);\n
    if (*(v56) < 4)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = *(&*(v57)->field_0);\n
    cgc_uint2str(&v54, 12, v55);\n
    v14 = &v54;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v119 = v56;\n
    *(v119) = *(v119) - 4;\n
    v120 = v57;\n
    *(v120) = &*(v120)->field_4;\n
    v29 = v102;\n
    v28 = a0;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v26[0] << 8)\n
        v13 = v26[1];\n
    v27 = v13 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v12 = &v25;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v121 = v28;\n
    *(v121) = *(v121) - 2;\n
    v122 = v29;\n
    *(v122) = &*(v122)->padding_1[1];\n
    v24 = v102;\n
    v23 = a0;\n
    v21 = &*(v24)->field_0;\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (*(v21) << 8)\n
        v11 = v21[1];\n
    v22 = v11 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v10 = &v20;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v20)) < 0)\n
        cgc__terminate();\n
    v123 = v23;\n
    *(v123) = *(v123) - 2;\n
    v124 = v24;\n
    *(v124) = &*(v124)->padding_1[1];\n
    v61 = v102;\n
    v60 = a0;\n
    if (*(v60) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(&*(v61)->field_0);\n
    v125 = v60;\n
    *(v125) = *(v125) - 2;\n
    v126 = v61;\n
    *(v126) = &*(v126)->padding_1[1];\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_43fbe1;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_43fbe1:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, &v16[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v127 = v60;\n
    *(v127) = *(v127) - v59;\n
    v128 = v61;\n
    *(v128) = &(&*(v128)->field_0)[v59];\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v41 = v102;\n
    v40 = a0;\n
    *(&v37[0]) = *(v41);\n
    memset(&v36, 0, 21);\n
    if (*(v40) < 8)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v37[0])\n
    {\n
        v9 = 0;\n
        if (v37[1])\n
        {\n
            v9 = 0;\n
            if (v37[2])\n
            {\n
                v9 = 0;\n
                if (v37[3])\n
                {\n
                    v9 = 0;\n
                    if (v37[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v37[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v37[6] << 8)\n
                                v9 = v37[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v38 = v9 & 1;\n
    v39 = 0;\n
    cgc_uint2str(&v36, 21, v38);\n
    v8 = &v36;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v36)) < 0)\n
        cgc__terminate();\n
    v129 = v40;\n
    *(v129) = *(v129) - 8;\n
    v130 = v41;\n
    *(v130) = &(*(v130))[1].padding_1[2];\n
    v53 = v102;\n
    v52 = a0;\n
    memset(&v50, 0, 12);\n
    if (*(v52) < 4)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v51 = *(&*(v53)->field_0);\n
    cgc_uint2str(&v50, 12, v51);\n
    v7 = &v50;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v50)) < 0)\n
        cgc__terminate();\n
    v131 = v52;\n
    *(v131) = *(v131) - 4;\n
    v132 = v53;\n
    *(v132) = &*(v132)->field_4;\n
    v73 = v102;\n
    v72 = a0;\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(&*(v73)->field_0);\n
    v133 = v72;\n
    *(v133) = *(v133) - 2;\n
    v134 = v73;\n
    *(v134) = &*(v134)->padding_1[1];\n
    if (v71 <= *(v72) && !(!v71))\n
        goto LABEL_4401a6;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4401a6:\n
    v70 = cgc_calloc(v71);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v70, *(v73), v71);\n
    if (cgc_sendline(1, &v16[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v135 = v72;\n
    *(v135) = *(v135) - v71;\n
    v136 = v73;\n
    *(v136) = &(&*(v136)->field_0)[v71];\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    v49 = v102;\n
    v48 = a0;\n
    memset(&v46, 0, 12);\n
    if (*(v48) < 4)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v47 = *(&*(v49)->field_0);\n
    cgc_uint2str(&v46, 12, v47);\n
    v6 = &v46;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v137 = v48;\n
    *(v137) = *(v137) - 4;\n
    v138 = v49;\n
    *(v138) = &*(v138)->field_4;\n
    v91 = v102;\n
    v90 = a0;\n
    memset(&v87, 0, 21);\n
    if (*(v90) < 8)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(v91);\n
    v89 = v139[1];\n
    v88 = v139[0];\n
    cgc_uint2str(&v87, 21, v88);\n
    v5 = &v87;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v140 = v90;\n
    *(v140) = *(v140) - 8;\n
    v141 = v91;\n
    *(v141) = &(*(v141))[1].padding_1[2];\n
    v100 = v102;\n
    v99 = a0;\n
    if (*(v99) < 1)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v98 = *(v100)->field_0;\n
    v142 = v99;\n
    *(v142) = *(v142) - 1;\n
    v143 = v100;\n
    *(v143) = &*(v143)->padding_1;\n
    if (v98 <= *(v99) && !(!v98))\n
        goto LABEL_440628;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_440628:\n
    v97 = cgc_calloc(v98);\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v97, *(v100), v98);\n
    if (cgc_sendline(1, &v16[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v144 = v100;\n
    *(v144) = &(&*(v144)->field_0)[v98];\n
    v145 = v99;\n
    *(v145) = *(v145) - v98;\n
    cgc_checkheap();\n
    cgc_free(v97);\n
    v82 = v102;\n
    v81 = a0;\n
    *(&v79[0]) = *(v82);\n
    memset(&v78, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v79[0] << 24)\n
    {\n
        v4 = 0;\n
        if (v79[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v79[2] << 8)\n
                v4 = v79[3];\n
        }\n
    }\n
    v80 = v4 & 1;\n
    cgc_uint2str(&v78, 12, v80);\n
    v3 = &v78;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v146 = v81;\n
    *(v146) = *(v146) - 4;\n
    v147 = v82;\n
    *(v147) = &*(v147)->field_4;\n
    v35 = v102;\n
    v34 = a0;\n
    *(&v31[0]) = *(v35);\n
    memset(&v30, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v31[0])\n
    {\n
        v2 = 0;\n
        if (v31[1])\n
        {\n
            v2 = 0;\n
            if (v31[2])\n
            {\n
                v2 = 0;\n
                if (v31[3])\n
                {\n
                    v2 = 0;\n
                    if (v31[4] << 24)\n
                    {\n
                        v2 = 0;\n
                        if (v31[5] << 16)\n
                        {\n
                            v2 = 0;\n
                            if (v31[6] << 8)\n
                                v2 = v31[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v32 = v2 & 1;\n
    v33 = 0;\n
    cgc_uint2str(&v30, 21, v32);\n
    v1 = &v30;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v148 = v34;\n
    *(v148) = *(v148) - 8;\n
    v149 = v35;\n
    *(v149) = &(*(v149))[1].padding_1[2];\n
    v86 = v102;\n
    v85 = a0;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v85) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v85);\n
    v84 = v0;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v83, &v16[18].padding_0[182]);\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v151 = v86;\n
    *(v151) = &(&*(v151)->field_4)[cgc_strlen(v83)];\n
    v153 = v85;\n
    *(v153) = *(v153) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, &v16[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v45 = v102;\n
    v44 = a0;\n
    if (*(v44) < 1)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v43 = *(v45)->field_0;\n
    v154 = v44;\n
    *(v154) = *(v154) - 1;\n
    v155 = v45;\n
    *(v155) = &*(v155)->padding_1;\n
    if (v43 <= *(v44) && !(!v43))\n
        goto LABEL_440e81;\n
    if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_440e81:\n
    v42 = cgc_calloc(v43);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, &v16[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v42, *(v45), v43);\n
    if (cgc_sendline(1, &v16[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v156 = v45;\n
    *(v156) = &(&*(v156)->field_0)[v43];\n
    v157 = v44;\n
    *(v157) = *(v157) - v43;\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    v18 ^= v16->field_260;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v158 = a0;\n
    if (*(v158) > 0 && v17 >= 0 && v17 < 0)\n
        v158 = *((&v19 + 0x4 * v17))(v102);\n
    v159 = v101;\n
    return v158;\n
}\n
", "4460582:sub_441026": null, "4460592:cgc_process_llamaatophan": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaatophan(struct struct_0 **v208, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x418]\n
    struct_1 *v1;  // [bp-0x414]\n
    struct_1 *v2;  // [bp-0x410]\n
    struct_1 *v3;  // [bp-0x40c]\n
    struct_1 *v4;  // [bp-0x408]\n
    struct_1 *v5;  // [bp-0x404]\n
    struct_1 *v6;  // [bp-0x400]\n
    struct_1 *v7;  // [bp-0x3fc]\n
    char v8;  // [bp-0x3f5]\n
    struct_1 *v9;  // [bp-0x3f4]\n
    struct_1 *v10;  // [bp-0x3f0]\n
    struct_1 *v11;  // [bp-0x3ec]\n
    struct_1 *v12;  // [bp-0x3e8]\n
    char v13;  // [bp-0x3e1]\n
    struct_1 *v14;  // [bp-0x3e0]\n
    unsigned int v15;  // [bp-0x3dc]\n
    struct_1 *v16;  // [bp-0x3d8]\n
    char v17;  // [bp-0x3d1]\n
    struct_1 *v18;  // [bp-0x3d0]\n
    unsigned int v19;  // [bp-0x3cc]\n
    unsigned int v20;  // [bp-0x3c8]\n
    struct_1 *v21;  // [bp-0x3c4]\n
    struct_1 *v22;  // [bp-0x3c0]\n
    char v23;  // [bp-0x3b9]\n
    struct_1 *v24;  // [bp-0x3b8]\n
    struct_1 *v25;  // [bp-0x3b4]\n
    char v26;  // [bp-0x3ad]\n
    struct_1 *v27;  // [bp-0x3ac]\n
    struct_1 *v28;  // [bp-0x3a8]\n
    struct_1 *v29;  // [bp-0x3a4]\n
    struct_1 *v30;  // [bp-0x3a0]\n
    struct_1 *v31;  // [bp-0x39c]\n
    char v32;  // [bp-0x395]\n
    unsigned int v33;  // [bp-0x394]\n
    unsigned int v34;  // [bp-0x390]\n
    struct_3 *v35;  // [bp-0x38c]\n
    unsigned short v36;  // [bp-0x388]\n
    unsigned short v37;  // [bp-0x386]\n
    unsigned short v38;  // [bp-0x384]\n
    unsigned short v39;  // [bp-0x382]\n
    unsigned short v40;  // [bp-0x380]\n
    unsigned short v41;  // [bp-0x37e]\n
    unsigned short v42;  // [bp-0x37c]\n
    unsigned short v43;  // [bp-0x37a]\n
    unsigned short v44;  // [bp-0x378]\n
    unsigned short v45;  // [bp-0x376]\n
    unsigned long v46;  // [bp-0x374]\n
    unsigned long v47;  // [bp-0x36c]\n
    unsigned long v48;  // [bp-0x364]\n
    unsigned long v49;  // [bp-0x35c]\n
    unsigned long v50;  // [bp-0x354]\n
    struct struct_2 **v51;  // [bp-0x348]\n
    unsigned int v52;  // [bp-0x344]\n
    char v53;  // [bp-0x340]\n
    char v54;  // [bp-0x33e]\n
    char v55[2];  // [bp-0x338]\n
    unsigned short v56;  // [bp-0x332]\n
    unsigned int *v57;  // [bp-0x330]\n
    struct struct_0 **v58;  // [bp-0x32c]\n
    char v59;  // [bp-0x326]\n
    char v60[2];  // [bp-0x320]\n
    unsigned short v61;  // [bp-0x31a]\n
    unsigned int *v62;  // [bp-0x318]\n
    struct struct_0 **v63;  // [bp-0x314]\n
    char v64;  // [bp-0x30e]\n
    char v65[2];  // [bp-0x308]\n
    unsigned short v66;  // [bp-0x302]\n
    unsigned int *v67;  // [bp-0x300]\n
    struct struct_0 **v68;  // [bp-0x2fc]\n
    char v69;  // [bp-0x2f5]\n
    char v70[8];  // [bp-0x2e0]\n
    unsigned int v71;  // [bp-0x2dc]\n
    void* v72;  // [bp-0x2d8]\n
    unsigned int *v73;  // [bp-0x2d4]\n
    struct struct_0 **v74;  // [bp-0x2d0]\n
    unsigned int v75;  // [bp-0x2cc]\n
    char v76;  // [bp-0x2c5]\n
    unsigned int *v77;  // [bp-0x2c4]\n
    struct struct_0 **v78;  // [bp-0x2c0]\n
    unsigned int v79;  // [bp-0x2bc]\n
    char v80;  // [bp-0x2b5]\n
    unsigned int *v81;  // [bp-0x2b4]\n
    struct struct_0 **v82;  // [bp-0x2b0]\n
    char *v83;  // [bp-0x2ac]\n
    unsigned int v84;  // [bp-0x2a8]\n
    unsigned int *v85;  // [bp-0x2a4]\n
    struct struct_0 **v86;  // [bp-0x2a0]\n
    char v87;  // [bp-0x29c]\n
    unsigned short v88;  // [bp-0x296]\n
    unsigned int *v89;  // [bp-0x294]\n
    struct struct_0 **v90;  // [bp-0x290]\n
    char v91;  // [bp-0x28c]\n
    unsigned short v92;  // [bp-0x286]\n
    unsigned int *v93;  // [bp-0x284]\n
    struct struct_0 **v94;  // [bp-0x280]\n
    char v95;  // [bp-0x27c]\n
    unsigned short v96;  // [bp-0x276]\n
    unsigned int *v97;  // [bp-0x274]\n
    struct struct_0 **v98;  // [bp-0x270]\n
    char v99;  // [bp-0x26c]\n
    unsigned short v100;  // [bp-0x266]\n
    unsigned int *v101;  // [bp-0x264]\n
    struct struct_0 **v102;  // [bp-0x260]\n
    char v103;  // [bp-0x259]\n
    char v104;  // [bp-0x255]\n
    unsigned int *v105;  // [bp-0x254]\n
    struct struct_0 **v106;  // [bp-0x250]\n
    char v107;  // [bp-0x249]\n
    char v108;  // [bp-0x245]\n
    unsigned int *v109;  // [bp-0x244]\n
    struct struct_0 **v110;  // [bp-0x240]\n
    char v111;  // [bp-0x239]\n
    char v112;  // [bp-0x235]\n
    unsigned int *v113;  // [bp-0x234]\n
    struct struct_0 **v114;  // [bp-0x230]\n
    char v115;  // [bp-0x229]\n
    unsigned long v116;  // [bp-0x214]\n
    unsigned int *v117;  // [bp-0x20c]\n
    struct struct_0 **v118;  // [bp-0x208]\n
    char v119;  // [bp-0x201]\n
    unsigned long v120;  // [bp-0x1ec]\n
    unsigned int *v121;  // [bp-0x1e4]\n
    struct struct_0 **v122;  // [bp-0x1e0]\n
    char v123;  // [bp-0x1d9]\n
    unsigned long v124;  // [bp-0x1c4]\n
    unsigned int *v125;  // [bp-0x1bc]\n
    struct struct_0 **v126;  // [bp-0x1b8]\n
    char v127;  // [bp-0x1b4]\n
    unsigned int v128;  // [bp-0x1a8]\n
    unsigned int *v129;  // [bp-0x1a4]\n
    struct struct_0 **v130;  // [bp-0x1a0]\n
    char v131;  // [bp-0x19c]\n
    unsigned int v132;  // [bp-0x190]\n
    unsigned int *v133;  // [bp-0x18c]\n
    struct struct_0 **v134;  // [bp-0x188]\n
    char v135;  // [bp-0x184]\n
    unsigned int v136;  // [bp-0x178]\n
    unsigned int *v137;  // [bp-0x174]\n
    struct struct_0 **v138;  // [bp-0x170]\n
    char v139;  // [bp-0x16c]\n
    unsigned int v140;  // [bp-0x160]\n
    unsigned int *v141;  // [bp-0x15c]\n
    struct struct_0 **v142;  // [bp-0x158]\n
    char v143;  // [bp-0x154]\n
    unsigned int v144;  // [bp-0x148]\n
    unsigned int *v145;  // [bp-0x144]\n
    struct struct_0 **v146;  // [bp-0x140]\n
    char v147;  // [bp-0x13c]\n
    unsigned int v148;  // [bp-0x130]\n
    unsigned int *v149;  // [bp-0x12c]\n
    struct struct_0 **v150;  // [bp-0x128]\n
    unsigned int v151;  // [bp-0x124]\n
    unsigned short v152;  // [bp-0x11e]\n
    unsigned int *v153;  // [bp-0x11c]\n
    struct struct_0 **v154;  // [bp-0x118]\n
    unsigned int v155;  // [bp-0x114]\n
    unsigned short v156;  // [bp-0x10e]\n
    unsigned int *v157;  // [bp-0x10c]\n
    struct struct_0 **v158;  // [bp-0x108]\n
    char v159;  // [bp-0x104]\n
    char v160[4];  // [bp-0xf8]\n
    unsigned int v161;  // [bp-0xf4]\n
    unsigned int *v162;  // [bp-0xf0]\n
    struct struct_0 **v163;  // [bp-0xec]\n
    char v164;  // [bp-0xe8]\n
    char v165[4];  // [bp-0xdc]\n
    unsigned int v166;  // [bp-0xd8]\n
    unsigned int *v167;  // [bp-0xd4]\n
    struct struct_0 **v168;  // [bp-0xd0]\n
    char *v169;  // [bp-0xcc]\n
    unsigned int v170;  // [bp-0xc8]\n
    unsigned int *v171;  // [bp-0xc4]\n
    struct struct_0 **v172;  // [bp-0xc0]\n
    char *v173;  // [bp-0xbc]\n
    unsigned int v174;  // [bp-0xb8]\n
    unsigned int *v175;  // [bp-0xb4]\n
    struct struct_0 **v176;  // [bp-0xb0]\n
    char *v177;  // [bp-0xac]\n
    unsigned int v178;  // [bp-0xa8]\n
    unsigned int *v179;  // [bp-0xa4]\n
    struct struct_0 **v180;  // [bp-0xa0]\n
    char *v181;  // [bp-0x9c]\n
    unsigned int v182;  // [bp-0x98]\n
    unsigned int *v183;  // [bp-0x94]\n
    struct struct_0 **v184;  // [bp-0x90]\n
    char v185;  // [bp-0x89]\n
    unsigned int v186;  // [bp-0x74]\n
    unsigned int v187;  // [bp-0x70]\n
    unsigned int *v188;  // [bp-0x6c]\n
    struct struct_0 **v189;  // [bp-0x68]\n
    char v190;  // [bp-0x61]\n
    unsigned int v191;  // [bp-0x4c]\n
    unsigned int v192;  // [bp-0x48]\n
    unsigned int *v193;  // [bp-0x40]\n
    struct struct_0 **v194;  // [bp-0x3c]\n
    unsigned int v195;  // [bp-0x38]\n
    char v196;  // [bp-0x31]\n
    unsigned int *v197;  // [bp-0x30]\n
    struct struct_0 **v198;  // [bp-0x2c]\n
    unsigned int v199;  // [bp-0x28]\n
    char v200;  // [bp-0x21]\n
    unsigned int *v201;  // [bp-0x20]\n
    struct struct_0 **v202;  // [bp-0x1c]\n
    unsigned int v203;  // [bp-0x18]\n
    char v204;  // [bp-0x11]\n
    unsigned int *v205;  // [bp-0x10]\n
    struct struct_0 **v206;  // [bp-0xc]\n
    unsigned int v207;  // [bp-0x8]\n
    unsigned int v209;  // ebx\n
    struct struct_0 **v211;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v215;  // eax\n
    unsigned int *v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_0 **v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_0 **v239;  // eax\n
    unsigned int *v240;  // eax\n
    struct struct_0 **v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_0 **v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    unsigned int v246[2];  // ecx\n
    unsigned int *v247;  // eax\n
    struct struct_0 **v248;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    struct struct_0 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    unsigned int v295[2];  // ecx\n
    unsigned int *v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    struct struct_0 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_0 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_0 **v307;  // eax\n
    unsigned int *v308;  // eax, Other Possible Types: unsigned int\n
    unsigned int v309;  // ebx\n
\n
    v207 = v209;\n
    v35 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v52 = cgc__cookie;\n
    v51 = -1;\n
    if (cgc_sendline(1, \"===llamaatophan===\", 18) < 0)\n
        cgc__terminate();\n
    v184 = v208;\n
    v183 = a0;\n
    if (*(v183) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v183) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v183);\n
    v182 = v34;\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v181 = cgc_calloc(134);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v181, &v35[18].padding_0[182]);\n
    cgc_strncpy(v181 + 5, *(v184), v182);\n
    v211 = v184;\n
    *(v211) = &(&*(v211)->field_4)[cgc_strlen(v181)];\n
    v213 = v183;\n
    *(v213) = *(v213) - (cgc_strlen(v181) + -4);\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v180 = v208;\n
    v179 = a0;\n
    if (*(v179) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v179) >= 128)\n
        v33 = 128;\n
    else\n
        v33 = *(v179);\n
    v178 = v33;\n
    if (!v178)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v177 = cgc_calloc(134);\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v177, &v35[18].padding_0[182]);\n
    cgc_strncpy(v177 + 5, *(v180), v178);\n
    v215 = v180;\n
    *(v215) = &(&*(v215)->field_4)[cgc_strlen(v177)];\n
    v217 = v179;\n
    *(v217) = *(v217) - (cgc_strlen(v177) + -4);\n
    cgc_checkheap();\n
    cgc_free(v177);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v68 = v208;\n
    v67 = a0;\n
    *(&v65) = *(v68);\n
    memset(&v64, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v65[0] << 8)\n
        v32 = v65[1];\n
    v66 = v32 & 1;\n
    cgc_uint2str(&v64, 6, v66);\n
    v31 = &v64;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v218 = v67;\n
    *(v218) = *(v218) - 2;\n
    v219 = v68;\n
    *(v219) = &*(v219)->padding_1[1];\n
    v142 = v208;\n
    v141 = a0;\n
    memset(&v139, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = *(&*(v142)->field_0);\n
    cgc_uint2str(&v139, 12, v140);\n
    v30 = &v139;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v220 = v141;\n
    *(v220) = *(v220) - 4;\n
    v221 = v142;\n
    *(v221) = &*(v221)->field_4;\n
    v206 = v208;\n
    v205 = a0;\n
    if (*(v205) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = *(v206)->field_0;\n
    v222 = v205;\n
    *(v222) = *(v222) - 1;\n
    v223 = v206;\n
    *(v223) = &*(v223)->padding_1;\n
    if (v204 <= *(v205) && !(!v204))\n
        goto LABEL_441969;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_441969:\n
    v203 = cgc_calloc(v204);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v203, *(v206), v204);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v224 = v206;\n
    *(v224) = &(&*(v224)->field_0)[v204];\n
    v225 = v205;\n
    *(v225) = *(v225) - v204;\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    v102 = v208;\n
    v101 = a0;\n
    memset(&v99, 0, 6);\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(&*(v102)->field_0);\n
    cgc_uint2str(&v99, 6, v100);\n
    v29 = &v99;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v226 = v101;\n
    *(v226) = *(v226) - 2;\n
    v227 = v102;\n
    *(v227) = &*(v227)->padding_1[1];\n
    v138 = v208;\n
    v137 = a0;\n
    memset(&v135, 0, 12);\n
    if (*(v137) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v136 = *(&*(v138)->field_0);\n
    cgc_uint2str(&v135, 12, v136);\n
    v28 = &v135;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v228 = v137;\n
    *(v228) = *(v228) - 4;\n
    v229 = v138;\n
    *(v229) = &*(v229)->field_4;\n
    v98 = v208;\n
    v97 = a0;\n
    memset(&v95, 0, 6);\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    cgc_uint2str(&v95, 6, v96);\n
    v27 = &v95;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v230 = v97;\n
    *(v230) = *(v230) - 2;\n
    v231 = v98;\n
    *(v231) = &*(v231)->padding_1[1];\n
    v202 = v208;\n
    v201 = a0;\n
    if (*(v201) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v200 = *(v202)->field_0;\n
    v232 = v201;\n
    *(v232) = *(v232) - 1;\n
    v233 = v202;\n
    *(v233) = &*(v233)->padding_1;\n
    if (v200 <= *(v201) && !(!v200))\n
        goto LABEL_441f31;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_441f31:\n
    v199 = cgc_calloc(v200);\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v199, *(v202), v200);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v234 = v202;\n
    *(v234) = &(&*(v234)->field_0)[v200];\n
    v235 = v201;\n
    *(v235) = *(v235) - v200;\n
    cgc_checkheap();\n
    cgc_free(v199);\n
    v63 = v208;\n
    v62 = a0;\n
    *(&v60) = *(v63);\n
    memset(&v59, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v60[0] << 8)\n
        v26 = v60[1];\n
    v61 = v26 & 1;\n
    cgc_uint2str(&v59, 6, v61);\n
    v25 = &v59;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v236 = v62;\n
    *(v236) = *(v236) - 2;\n
    v237 = v63;\n
    *(v237) = &*(v237)->padding_1[1];\n
    v126 = v208;\n
    v125 = a0;\n
    memset(&v123, 0, 21);\n
    if (*(v125) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v124 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v45 = [D] x86g_create_fpucw(fpround<4>);\n
    v44 = v45 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v123, 21, v50);\n
    v24 = &v123;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v238 = v125;\n
    *(v238) = *(v238) - 8;\n
    v239 = v126;\n
    *(v239) = &(*(v239))[1].padding_1[2];\n
    v74 = v208;\n
    v73 = a0;\n
    *(&v70[0]) = *(v74);\n
    memset(&v69, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = 0;\n
    if (v70[0])\n
    {\n
        v23 = 0;\n
        if (v70[1])\n
        {\n
            v23 = 0;\n
            if (v70[2])\n
            {\n
                v23 = 0;\n
                if (v70[3])\n
                {\n
                    v23 = 0;\n
                    if (v70[4] << 24)\n
                    {\n
                        v23 = 0;\n
                        if (v70[5] << 16)\n
                        {\n
                            v23 = 0;\n
                            if (v70[6] << 8)\n
                                v23 = v70[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v71 = v23 & 1;\n
    v72 = 0;\n
    cgc_uint2str(&v69, 21, v71);\n
    v22 = &v69;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v240 = v73;\n
    *(v240) = *(v240) - 8;\n
    v241 = v74;\n
    *(v241) = &(*(v241))[1].padding_1[2];\n
    v82 = v208;\n
    v81 = a0;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(v82)->field_0;\n
    v242 = v81;\n
    *(v242) = *(v242) - 1;\n
    v243 = v82;\n
    *(v243) = &*(v243)->padding_1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_44268b;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44268b:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v244 = v82;\n
    *(v244) = &(&*(v244)->field_0)[v80];\n
    v245 = v81;\n
    *(v245) = *(v245) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v194 = v208;\n
    v193 = a0;\n
    memset(&v190, 0, 21);\n
    if (*(v193) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v246 = *(v194);\n
    v192 = v246[1];\n
    v191 = v246[0];\n
    cgc_uint2str(&v190, 21, v191);\n
    v21 = &v190;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v190)) < 0)\n
        cgc__terminate();\n
    v247 = v193;\n
    *(v247) = *(v247) - 8;\n
    v248 = v194;\n
    *(v248) = &(*(v248))[1].padding_1[2];\n
    v176 = v208;\n
    v175 = a0;\n
    if (*(v175) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v175) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v175);\n
    v174 = v20;\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v173 = cgc_calloc(134);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v173, &v35[18].padding_0[182]);\n
    cgc_strncpy(v173 + 5, *(v176), v174);\n
    v250 = v176;\n
    *(v250) = &(&*(v250)->field_4)[cgc_strlen(v173)];\n
    v252 = v175;\n
    *(v252) = *(v252) - (cgc_strlen(v173) + -4);\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v158 = v208;\n
    v157 = a0;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = *(&*(v158)->field_0);\n
    v253 = v157;\n
    *(v253) = *(v253) - 2;\n
    v254 = v158;\n
    *(v254) = &*(v254)->padding_1[1];\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_442c6b;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_442c6b:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v255 = v157;\n
    *(v255) = *(v255) - v156;\n
    v256 = v158;\n
    *(v256) = &(&*(v256)->field_0)[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v172 = v208;\n
    v171 = a0;\n
    if (*(v171) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v171) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v171);\n
    v170 = v19;\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v169 = cgc_calloc(134);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v169, &v35[18].padding_0[182]);\n
    cgc_strncpy(v169 + 5, *(v172), v170);\n
    v258 = v172;\n
    *(v258) = &(&*(v258)->field_4)[cgc_strlen(v169)];\n
    v260 = v171;\n
    *(v260) = *(v260) - (cgc_strlen(v169) + -4);\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v114 = v208;\n
    v113 = a0;\n
    memset(&v111, 0, 4);\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(v114)->field_0;\n
    cgc_uint2str(&v111, 4, v112);\n
    v18 = &v111;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v261 = v113;\n
    *(v261) = *(v261) - 1;\n
    v262 = v114;\n
    *(v262) = &*(v262)->padding_1;\n
    v168 = v208;\n
    v167 = a0;\n
    *(&v165[0]) = *(v168);\n
    memset(&v164, 0, 12);\n
    if (*(v167) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v165[0] << 24)\n
    {\n
        v17 = 0;\n
        if (v165[1] << 16)\n
        {\n
            v17 = 0;\n
            if (v165[2] << 8)\n
                v17 = v165[3];\n
        }\n
    }\n
    v166 = v17 & 1;\n
    cgc_uint2str(&v164, 12, v166);\n
    v16 = &v164;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v164)) < 0)\n
        cgc__terminate();\n
    v263 = v167;\n
    *(v263) = *(v263) - 4;\n
    v264 = v168;\n
    *(v264) = &*(v264)->field_4;\n
    v86 = v208;\n
    v85 = a0;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v85) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v85);\n
    v84 = v15;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v83, &v35[18].padding_0[182]);\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v266 = v86;\n
    *(v266) = &(&*(v266)->field_4)[cgc_strlen(v83)];\n
    v268 = v85;\n
    *(v268) = *(v268) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v94 = v208;\n
    v93 = a0;\n
    memset(&v91, 0, 6);\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 6, v92);\n
    v14 = &v91;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v269 = v93;\n
    *(v269) = *(v269) - 2;\n
    v270 = v94;\n
    *(v270) = &*(v270)->padding_1[1];\n
    v58 = v208;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v55[0] << 8)\n
        v13 = v55[1];\n
    v56 = v13 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v12 = &v54;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v271 = v57;\n
    *(v271) = *(v271) - 2;\n
    v272 = v58;\n
    *(v272) = &*(v272)->padding_1[1];\n
    v154 = v208;\n
    v153 = a0;\n
    if (*(v153) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v152 = *(&*(v154)->field_0);\n
    v273 = v153;\n
    *(v273) = *(v273) - 2;\n
    v274 = v154;\n
    *(v274) = &*(v274)->padding_1[1];\n
    if (v152 <= *(v153) && !(!v152))\n
        goto LABEL_443979;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_443979:\n
    v151 = cgc_calloc(v152);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v151, *(v154), v152);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v275 = v153;\n
    *(v275) = *(v275) - v152;\n
    v276 = v154;\n
    *(v276) = &(&*(v276)->field_0)[v152];\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    v78 = v208;\n
    v77 = a0;\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    v277 = v77;\n
    *(v277) = *(v277) - 1;\n
    v278 = v78;\n
    *(v278) = &*(v278)->padding_1;\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_443bb1;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_443bb1:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v279 = v78;\n
    *(v279) = &(&*(v279)->field_0)[v76];\n
    v280 = v77;\n
    *(v280) = *(v280) - v76;\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v110 = v208;\n
    v109 = a0;\n
    memset(&v107, 0, 4);\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(v110)->field_0;\n
    cgc_uint2str(&v107, 4, v108);\n
    v11 = &v107;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v281 = v109;\n
    *(v281) = *(v281) - 1;\n
    v282 = v110;\n
    *(v282) = &*(v282)->padding_1;\n
    v106 = v208;\n
    v105 = a0;\n
    memset(&v103, 0, 4);\n
    if (*(v105) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(v106)->field_0;\n
    cgc_uint2str(&v103, 4, v104);\n
    v10 = &v103;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v283 = v105;\n
    *(v283) = *(v283) - 1;\n
    v284 = v106;\n
    *(v284) = &*(v284)->padding_1;\n
    v122 = v208;\n
    v121 = a0;\n
    memset(&v119, 0, 21);\n
    if (*(v121) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-886, size=2, endness=Iend_LE)))));\n
    v42 = v43 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v119, 21, v49);\n
    v9 = &v119;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v285 = v121;\n
    *(v285) = *(v285) - 8;\n
    v286 = v122;\n
    *(v286) = &(*(v286))[1].padding_1[2];\n
    v163 = v208;\n
    v162 = a0;\n
    *(&v160[0]) = *(v163);\n
    memset(&v159, 0, 12);\n
    if (*(v162) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v160[0] << 24)\n
    {\n
        v8 = 0;\n
        if (v160[1] << 16)\n
        {\n
            v8 = 0;\n
            if (v160[2] << 8)\n
                v8 = v160[3];\n
        }\n
    }\n
    v161 = v8 & 1;\n
    cgc_uint2str(&v159, 12, v161);\n
    v7 = &v159;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v159)) < 0)\n
        cgc__terminate();\n
    v287 = v162;\n
    *(v287) = *(v287) - 4;\n
    v288 = v163;\n
    *(v288) = &*(v288)->field_4;\n
    v150 = v208;\n
    v149 = a0;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v148 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-890, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v147, 12, v48);\n
    v6 = &v147;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v289 = v149;\n
    *(v289) = *(v289) - 4;\n
    v290 = v150;\n
    *(v290) = &*(v290)->field_4;\n
    v198 = v208;\n
    v197 = a0;\n
    if (*(v197) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v196 = *(v198)->field_0;\n
    v291 = v197;\n
    *(v291) = *(v291) - 1;\n
    v292 = v198;\n
    *(v292) = &*(v292)->padding_1;\n
    if (v196 <= *(v197) && !(!v196))\n
        goto LABEL_4444fc;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4444fc:\n
    v195 = cgc_calloc(v196);\n
    if (!v195)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v195, *(v198), v196);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v293 = v198;\n
    *(v293) = &(&*(v293)->field_0)[v196];\n
    v294 = v197;\n
    *(v294) = *(v294) - v196;\n
    cgc_checkheap();\n
    cgc_free(v195);\n
    v189 = v208;\n
    v188 = a0;\n
    memset(&v185, 0, 21);\n
    if (*(v188) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v295 = *(v189);\n
    v187 = v295[1];\n
    v186 = v295[0];\n
    cgc_uint2str(&v185, 21, v186);\n
    v5 = &v185;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v185)) < 0)\n
        cgc__terminate();\n
    v296 = v188;\n
    *(v296) = *(v296) - 8;\n
    v297 = v189;\n
    *(v297) = &(*(v297))[1].padding_1[2];\n
    v118 = v208;\n
    v117 = a0;\n
    memset(&v115, 0, 21);\n
    if (*(v117) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v116 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-894, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v115, 21, v47);\n
    v4 = &v115;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v298 = v117;\n
    *(v298) = *(v298) - 8;\n
    v299 = v118;\n
    *(v299) = &(*(v299))[1].padding_1[2];\n
    v134 = v208;\n
    v133 = a0;\n
    memset(&v131, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(&*(v134)->field_0);\n
    cgc_uint2str(&v131, 12, v132);\n
    v3 = &v131;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v300 = v133;\n
    *(v300) = *(v300) - 4;\n
    v301 = v134;\n
    *(v301) = &*(v301)->field_4;\n
    v146 = v208;\n
    v145 = a0;\n
    memset(&v143, 0, 12);\n
    if (*(v145) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v144 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-898, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v143, 12, v46);\n
    v2 = &v143;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v143)) < 0)\n
        cgc__terminate();\n
    v302 = v145;\n
    *(v302) = *(v302) - 4;\n
    v303 = v146;\n
    *(v303) = &*(v303)->field_4;\n
    v90 = v208;\n
    v89 = a0;\n
    memset(&v87, 0, 6);\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 6, v88);\n
    v1 = &v87;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v304 = v89;\n
    *(v304) = *(v304) - 2;\n
    v305 = v90;\n
    *(v305) = &*(v305)->padding_1[1];\n
    v130 = v208;\n
    v129 = a0;\n
    memset(&v127, 0, 12);\n
    if (*(v129) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(&*(v130)->field_0);\n
    cgc_uint2str(&v127, 12, v128);\n
    v0 = &v127;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v306 = v129;\n
    *(v306) = *(v306) - 4;\n
    v307 = v130;\n
    *(v307) = &*(v307)->field_4;\n
    v52 ^= v35->field_260;\n
    if (v52)\n
        cgc___stack_cookie_fail();\n
    v308 = a0;\n
    if (*(v308) > 0 && v51 >= 0 && v51 < 0)\n
        v308 = *((&v53 + 0x4 * v51))(v208);\n
    v309 = v207;\n
    return v308;\n
}\n
", "4476517:sub_444e65": null, "4476528:cgc_process_llamaobtrusiveness": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaobtrusiveness(struct struct_0 **v147, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x2f4]\n
    struct_1 *v1;  // [bp-0x2f0]\n
    char v2;  // [bp-0x2e9]\n
    struct_1 *v3;  // [bp-0x2e8]\n
    struct_1 *v4;  // [bp-0x2e4]\n
    struct_1 *v5;  // [bp-0x2e0]\n
    struct_1 *v6;  // [bp-0x2dc]\n
    struct_1 *v7;  // [bp-0x2d8]\n
    char v8;  // [bp-0x2d1]\n
    unsigned int v9;  // [bp-0x2d0]\n
    struct_1 *v10;  // [bp-0x2cc]\n
    struct_1 *v11;  // [bp-0x2c8]\n
    struct_1 *v12;  // [bp-0x2c4]\n
    unsigned int v13;  // [bp-0x2c0]\n
    struct_1 *v14;  // [bp-0x2bc]\n
    struct_1 *v15;  // [bp-0x2b8]\n
    char v16;  // [bp-0x2b1]\n
    struct_1 *v17;  // [bp-0x2b0]\n
    unsigned int v18;  // [bp-0x2ac]\n
    struct_1 *v19;  // [bp-0x2a8]\n
    struct_1 *v20;  // [bp-0x2a4]\n
    struct_1 *v21;  // [bp-0x2a0]\n
    char v22;  // [bp-0x299]\n
    unsigned int v23;  // [bp-0x298]\n
    struct_1 *v24;  // [bp-0x294]\n
    char v25;  // [bp-0x28d]\n
    struct_3 *v26;  // [bp-0x28c]\n
    unsigned short v27;  // [bp-0x288]\n
    unsigned short v28;  // [bp-0x286]\n
    unsigned short v29;  // [bp-0x284]\n
    unsigned short v30;  // [bp-0x282]\n
    unsigned short v31;  // [bp-0x280]\n
    unsigned short v32;  // [bp-0x27e]\n
    unsigned long v33;  // [bp-0x27c]\n
    unsigned long v34;  // [bp-0x274]\n
    unsigned long v35;  // [bp-0x26c]\n
    struct struct_2 **v36;  // [bp-0x264]\n
    unsigned int v37;  // [bp-0x260]\n
    char v38;  // [bp-0x25c]\n
    char v39;  // [bp-0x25a]\n
    struct_0 *v40;  // [bp-0x254]\n
    unsigned short v41;  // [bp-0x24e]\n
    unsigned int *v42;  // [bp-0x24c]\n
    struct struct_0 **v43;  // [bp-0x248]\n
    char v44;  // [bp-0x242]\n
    struct_0 *v45;  // [bp-0x23c]\n
    unsigned short v46;  // [bp-0x236]\n
    unsigned int *v47;  // [bp-0x234]\n
    struct struct_0 **v48;  // [bp-0x230]\n
    char v49;  // [bp-0x22a]\n
    struct_0 *v50;  // [bp-0x224]\n
    unsigned short v51;  // [bp-0x21e]\n
    unsigned int *v52;  // [bp-0x21c]\n
    struct struct_0 **v53;  // [bp-0x218]\n
    char v54;  // [bp-0x212]\n
    char v55[2];  // [bp-0x20c]\n
    unsigned short v56;  // [bp-0x206]\n
    unsigned int *v57;  // [bp-0x204]\n
    struct struct_0 **v58;  // [bp-0x200]\n
    unsigned int v59;  // [bp-0x1fc]\n
    char v60;  // [bp-0x1f5]\n
    unsigned int *v61;  // [bp-0x1f4]\n
    struct struct_0 **v62;  // [bp-0x1f0]\n
    char *v63;  // [bp-0x1ec]\n
    unsigned int v64;  // [bp-0x1e8]\n
    unsigned int *v65;  // [bp-0x1e4]\n
    struct struct_0 **v66;  // [bp-0x1e0]\n
    char *v67;  // [bp-0x1dc]\n
    unsigned int v68;  // [bp-0x1d8]\n
    unsigned int *v69;  // [bp-0x1d4]\n
    struct struct_0 **v70;  // [bp-0x1d0]\n
    char *v71;  // [bp-0x1cc]\n
    unsigned int v72;  // [bp-0x1c8]\n
    unsigned int *v73;  // [bp-0x1c4]\n
    struct struct_0 **v74;  // [bp-0x1c0]\n
    char v75;  // [bp-0x1b9]\n
    char v76;  // [bp-0x1b5]\n
    unsigned int *v77;  // [bp-0x1b4]\n
    struct struct_0 **v78;  // [bp-0x1b0]\n
    char v79;  // [bp-0x1a9]\n
    unsigned long v80;  // [bp-0x194]\n
    unsigned int *v81;  // [bp-0x18c]\n
    struct struct_0 **v82;  // [bp-0x188]\n
    char v83;  // [bp-0x181]\n
    unsigned long v84;  // [bp-0x16c]\n
    unsigned int *v85;  // [bp-0x160]\n
    struct struct_0 **v86;  // [bp-0x15c]\n
    char v87;  // [bp-0x158]\n
    unsigned int v88;  // [bp-0x14c]\n
    unsigned int *v89;  // [bp-0x148]\n
    struct struct_0 **v90;  // [bp-0x144]\n
    char v91;  // [bp-0x140]\n
    unsigned int v92;  // [bp-0x134]\n
    unsigned int *v93;  // [bp-0x130]\n
    struct struct_0 **v94;  // [bp-0x12c]\n
    char v95;  // [bp-0x128]\n
    unsigned int v96;  // [bp-0x11c]\n
    unsigned int *v97;  // [bp-0x118]\n
    struct struct_0 **v98;  // [bp-0x114]\n
    char v99;  // [bp-0x110]\n
    unsigned int v100;  // [bp-0x104]\n
    unsigned int *v101;  // [bp-0x100]\n
    struct struct_0 **v102;  // [bp-0xfc]\n
    char v103;  // [bp-0xf8]\n
    unsigned int v104;  // [bp-0xec]\n
    unsigned int *v105;  // [bp-0xe8]\n
    struct struct_0 **v106;  // [bp-0xe4]\n
    char v107;  // [bp-0xe0]\n
    unsigned int v108;  // [bp-0xd4]\n
    unsigned int *v109;  // [bp-0xd0]\n
    struct struct_0 **v110;  // [bp-0xcc]\n
    unsigned int v111;  // [bp-0xc8]\n
    unsigned short v112;  // [bp-0xc2]\n
    unsigned int *v113;  // [bp-0xc0]\n
    struct struct_0 **v114;  // [bp-0xbc]\n
    unsigned int v115;  // [bp-0xb8]\n
    unsigned short v116;  // [bp-0xb2]\n
    unsigned int *v117;  // [bp-0xb0]\n
    struct struct_0 **v118;  // [bp-0xac]\n
    char v119;  // [bp-0xa8]\n
    char *v120;  // [bp-0x9c]\n
    unsigned int v121;  // [bp-0x98]\n
    unsigned int *v122;  // [bp-0x94]\n
    struct struct_0 **v123;  // [bp-0x90]\n
    char *v124;  // [bp-0x8c]\n
    unsigned int v125;  // [bp-0x88]\n
    unsigned int *v126;  // [bp-0x84]\n
    struct struct_0 **v127;  // [bp-0x80]\n
    char *v128;  // [bp-0x7c]\n
    unsigned int v129;  // [bp-0x78]\n
    unsigned int *v130;  // [bp-0x74]\n
    struct struct_0 **v131;  // [bp-0x70]\n
    char v132;  // [bp-0x69]\n
    unsigned int v133;  // [bp-0x54]\n
    unsigned int v134;  // [bp-0x50]\n
    unsigned int *v135;  // [bp-0x4c]\n
    struct struct_0 **v136;  // [bp-0x48]\n
    char v137;  // [bp-0x41]\n
    unsigned int v138;  // [bp-0x2c]\n
    unsigned int v139;  // [bp-0x28]\n
    unsigned int *v140;  // [bp-0x20]\n
    struct struct_0 **v141;  // [bp-0x1c]\n
    unsigned int v142;  // [bp-0x18]\n
    char v143;  // [bp-0x11]\n
    unsigned int *v144;  // [bp-0x10]\n
    struct struct_0 **v145;  // [bp-0xc]\n
    unsigned int v146;  // [bp-0x8]\n
    unsigned int v148;  // ebx\n
    unsigned int *v149;  // eax\n
    struct struct_0 **v150;  // eax\n
    struct struct_0 **v152;  // eax\n
    unsigned int *v154;  // eax\n
    unsigned int *v155;  // eax\n
    struct struct_0 **v156;  // eax\n
    unsigned int *v157;  // eax\n
    struct struct_0 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    struct struct_0 **v160;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v164;  // eax\n
    unsigned int v165[2];  // ecx\n
    unsigned int *v166;  // eax\n
    struct struct_0 **v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_0 **v169;  // eax\n
    unsigned int *v170;  // eax\n
    struct struct_0 **v171;  // eax\n
    struct struct_0 **v173;  // eax\n
    unsigned int *v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_0 **v177;  // eax\n
    struct struct_0 **v178;  // eax\n
    unsigned int *v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_0 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    struct struct_0 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    unsigned int *v186;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_0 **v189;  // eax\n
    struct_0 *v190;  // ecx\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    struct struct_0 **v196;  // eax\n
    unsigned int *v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_0 **v200;  // eax\n
    unsigned int *v201;  // eax\n
    struct struct_0 **v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int *v204;  // eax\n
    unsigned int *v205;  // eax\n
    struct struct_0 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v218;  // eax\n
    unsigned int *v219;  // eax, Other Possible Types: unsigned int\n
    unsigned int v220;  // ebx\n
\n
    v146 = v148;\n
    v26 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v37 = cgc__cookie;\n
    v36 = -1;\n
    if (cgc_sendline(1, \"===llamaobtrusiveness===\", 24) < 0)\n
        cgc__terminate();\n
    v58 = v147;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v55[0] << 8)\n
        v25 = v55[1];\n
    v56 = v25 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v24 = &v54;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v149 = v57;\n
    *(v149) = *(v149) - 2;\n
    v150 = v58;\n
    *(v150) = &*(v150)->padding_1[1];\n
    v74 = v147;\n
    v73 = a0;\n
    if (*(v73) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v73) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v73);\n
    v72 = v23;\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = cgc_calloc(134);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v71, &v26[18].padding_0[182]);\n
    cgc_strncpy(v71 + 5, *(v74), v72);\n
    v152 = v74;\n
    *(v152) = -4 + cgc_strlen(v71) + *(v152);\n
    v154 = v73;\n
    *(v154) = *(v154) - (cgc_strlen(v71) + -4);\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v123 = v147;\n
    v122 = a0;\n
    v120 = &*(v123)->field_0;\n
    memset(&v119, 0, 12);\n
    if (*(v122) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (*(v120) << 24)\n
    {\n
        v22 = 0;\n
        if (v120[1] << 16)\n
        {\n
            v22 = 0;\n
            if (v120[2] << 8)\n
                v22 = v120[3];\n
        }\n
    }\n
    v121 = v22 & 1;\n
    cgc_uint2str(&v119, 12, v121);\n
    v21 = &v119;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v155 = v122;\n
    *(v155) = *(v155) - 4;\n
    v156 = v123;\n
    *(v156) = &*(v156)->field_4;\n
    v106 = v147;\n
    v105 = a0;\n
    memset(&v103, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(&*(v106)->field_0);\n
    cgc_uint2str(&v103, 12, v104);\n
    v20 = &v103;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v157 = v105;\n
    *(v157) = *(v157) - 4;\n
    v158 = v106;\n
    *(v158) = &*(v158)->field_4;\n
    v110 = v147;\n
    v109 = a0;\n
    memset(&v107, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v108 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(fpround<4>);\n
    v31 = v32 | 0xc00;\n
    v35 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v107, 12, v35);\n
    v19 = &v107;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v159 = v109;\n
    *(v159) = *(v159) - 4;\n
    v160 = v110;\n
    *(v160) = &*(v160)->field_4;\n
    v70 = v147;\n
    v69 = a0;\n
    if (*(v69) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v69) >= 128)\n
        v18 = 128;\n
    else\n
        v18 = *(v69);\n
    v68 = v18;\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = cgc_calloc(134);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v67, &v26[18].padding_0[182]);\n
    cgc_strncpy(v67 + 5, *(v70), v68);\n
    v162 = v70;\n
    *(v162) = -4 + cgc_strlen(v67) + *(v162);\n
    v164 = v69;\n
    *(v164) = *(v164) - (cgc_strlen(v67) + -4);\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v141 = v147;\n
    v140 = a0;\n
    memset(&v137, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v165 = *(v141);\n
    v139 = v165[1];\n
    v138 = v165[0];\n
    cgc_uint2str(&v137, 21, v138);\n
    v17 = &v137;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v137)) < 0)\n
        cgc__terminate();\n
    v166 = v140;\n
    *(v166) = *(v166) - 8;\n
    v167 = v141;\n
    *(v167) = *(v167) + 1;\n
    v53 = v147;\n
    v52 = a0;\n
    v50 = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v50->field_0 << 8)\n
        v16 = v50->padding_1[0];\n
    v51 = v16 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v15 = &v49;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v168 = v52;\n
    *(v168) = *(v168) - 2;\n
    v169 = v53;\n
    *(v169) = &*(v169)->padding_1[1];\n
    v102 = v147;\n
    v101 = a0;\n
    memset(&v99, 0, 12);\n
    if (*(v101) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(&*(v102)->field_0);\n
    cgc_uint2str(&v99, 12, v100);\n
    v14 = &v99;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v170 = v101;\n
    *(v170) = *(v170) - 4;\n
    v171 = v102;\n
    *(v171) = &*(v171)->field_4;\n
    v131 = v147;\n
    v130 = a0;\n
    if (*(v130) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v130) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v130);\n
    v129 = v13;\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = cgc_calloc(134);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v128, &v26[18].padding_0[182]);\n
    cgc_strncpy(v128 + 5, *(v131), v129);\n
    v173 = v131;\n
    *(v173) = -4 + cgc_strlen(v128) + *(v173);\n
    v175 = v130;\n
    *(v175) = *(v175) - (cgc_strlen(v128) + -4);\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v145 = v147;\n
    v144 = a0;\n
    if (*(v144) < 1)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(v145)->field_0;\n
    v176 = v144;\n
    *(v176) = *(v176) - 1;\n
    v177 = v145;\n
    *(v177) = &*(v177)->padding_1;\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_446118;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_446118:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, &v26[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v178 = v145;\n
    *(v178) = &(&*(v178)->field_0)[v143];\n
    v179 = v144;\n
    *(v179) = *(v179) - v143;\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v98 = v147;\n
    v97 = a0;\n
    memset(&v95, 0, 12);\n
    if (*(v97) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    cgc_uint2str(&v95, 12, v96);\n
    v12 = &v95;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v180 = v97;\n
    *(v180) = *(v180) - 4;\n
    v181 = v98;\n
    *(v181) = &*(v181)->field_4;\n
    v114 = v147;\n
    v113 = a0;\n
    if (*(v113) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(&*(v114)->field_0);\n
    v182 = v113;\n
    *(v182) = *(v182) - 2;\n
    v183 = v114;\n
    *(v183) = &*(v183)->padding_1[1];\n
    if (v112 <= *(v113) && !(!v112))\n
        goto LABEL_446474;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_446474:\n
    v111 = cgc_calloc(v112);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v111, *(v114), v112);\n
    if (cgc_sendline(1, &v26[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v184 = v113;\n
    *(v184) = *(v184) - v112;\n
    v185 = v114;\n
    *(v185) = &(&*(v185)->field_0)[v112];\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    v118 = v147;\n
    v117 = a0;\n
    if (*(v117) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(&*(v118)->field_0);\n
    v186 = v117;\n
    *(v186) = *(v186) - 2;\n
    v187 = v118;\n
    *(v187) = &*(v187)->padding_1[1];\n
    if (v116 <= *(v117) && !(!v116))\n
        goto LABEL_4466ae;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4466ae:\n
    v115 = cgc_calloc(v116);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v115, *(v118), v116);\n
    if (cgc_sendline(1, &v26[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v188 = v117;\n
    *(v188) = *(v188) - v116;\n
    v189 = v118;\n
    *(v189) = &(&*(v189)->field_0)[v116];\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    v136 = v147;\n
    v135 = a0;\n
    memset(&v132, 0, 21);\n
    if (*(v135) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v190 = *(v136);\n
    v134 = v190->field_4;\n
    v133 = *(&v190->field_0);\n
    cgc_uint2str(&v132, 21, v133);\n
    v11 = &v132;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v191 = v135;\n
    *(v191) = *(v191) - 8;\n
    v192 = v136;\n
    *(v192) = *(v192) + 1;\n
    v94 = v147;\n
    v93 = a0;\n
    memset(&v91, 0, 12);\n
    if (*(v93) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 12, v92);\n
    v10 = &v91;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v193 = v93;\n
    *(v193) = *(v193) - 4;\n
    v194 = v94;\n
    *(v194) = &*(v194)->field_4;\n
    v127 = v147;\n
    v126 = a0;\n
    if (*(v126) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v126) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v126);\n
    v125 = v9;\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v124 = cgc_calloc(134);\n
    if (!v124)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v124, &v26[18].padding_0[182]);\n
    cgc_strncpy(v124 + 5, *(v127), v125);\n
    v196 = v127;\n
    *(v196) = -4 + cgc_strlen(v124) + *(v196);\n
    v198 = v126;\n
    *(v198) = *(v198) - (cgc_strlen(v124) + -4);\n
    cgc_checkheap();\n
    cgc_free(v124);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v48 = v147;\n
    v47 = a0;\n
    v45 = *(v48);\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v45->field_0 << 8)\n
        v8 = v45->padding_1[0];\n
    v46 = v8 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v7 = &v44;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v199 = v47;\n
    *(v199) = *(v199) - 2;\n
    v200 = v48;\n
    *(v200) = &*(v200)->padding_1[1];\n
    v62 = v147;\n
    v61 = a0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(v62)->field_0;\n
    v201 = v61;\n
    *(v201) = *(v201) - 1;\n
    v202 = v62;\n
    *(v202) = &*(v202)->padding_1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_446f3e;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_446f3e:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, &v26[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v203 = v62;\n
    *(v203) = &(&*(v203)->field_0)[v60];\n
    v204 = v61;\n
    *(v204) = *(v204) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v86 = v147;\n
    v85 = a0;\n
    memset(&v83, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v84 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v30 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-638, size=2, endness=Iend_LE)))));\n
    v29 = v30 | 0xc00;\n
    v34 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v83, 21, v34);\n
    v6 = &v83;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v205 = v85;\n
    *(v205) = *(v205) - 8;\n
    v206 = v86;\n
    *(v206) = *(v206) + 1;\n
    v78 = v147;\n
    v77 = a0;\n
    memset(&v75, 0, 4);\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    cgc_uint2str(&v75, 4, v76);\n
    v5 = &v75;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v207 = v77;\n
    *(v207) = *(v207) - 1;\n
    v208 = v78;\n
    *(v208) = &*(v208)->padding_1;\n
    v90 = v147;\n
    v89 = a0;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 12, v88);\n
    v4 = &v87;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v209 = v89;\n
    *(v209) = *(v209) - 4;\n
    v210 = v90;\n
    *(v210) = &*(v210)->field_4;\n
    v82 = v147;\n
    v81 = a0;\n
    memset(&v79, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v28 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-642, size=2, endness=Iend_LE)))));\n
    v27 = v28 | 0xc00;\n
    v33 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v79, 21, v33);\n
    v3 = &v79;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v211 = v81;\n
    *(v211) = *(v211) - 8;\n
    v212 = v82;\n
    *(v212) = *(v212) + 1;\n
    v43 = v147;\n
    v42 = a0;\n
    v40 = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v40->field_0 << 8)\n
        v2 = v40->padding_1[0];\n
    v41 = v2 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v1 = &v39;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v213 = v42;\n
    *(v213) = *(v213) - 2;\n
    v214 = v43;\n
    *(v214) = &*(v214)->padding_1[1];\n
    v66 = v147;\n
    v65 = a0;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v65) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v65);\n
    v64 = v0;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v63, &v26[18].padding_0[182]);\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v216 = v66;\n
    *(v216) = -4 + cgc_strlen(v63) + *(v216);\n
    v218 = v65;\n
    *(v218) = *(v218) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v37 ^= v26->field_260;\n
    if (v37)\n
        cgc___stack_cookie_fail();\n
    v219 = a0;\n
    if (*(v219) > 0 && v36 >= 0 && v36 < 0)\n
        v219 = *((&v38 + 0x4 * v36))(v147);\n
    v220 = v146;\n
    return v219;\n
}\n
", "4487770:sub_447a5a": null, "4487776:cgc_process_llamachromophotographic": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0340;\n
extern unsigned int g_4f0344;\n
\n
int cgc_process_llamachromophotographic(struct struct_0 **v58, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    struct_2 *v1;  // [bp-0x110]\n
    struct_2 *v2;  // [bp-0x10c]\n
    struct_2 *v3;  // [bp-0x108]\n
    char v4;  // [bp-0x101]\n
    unsigned int v5;  // [bp-0x100]\n
    unsigned int v6;  // [bp-0xfc]\n
    unsigned int v7;  // [bp-0xf8]\n
    struct_1 *v8;  // [bp-0xf4]\n
    unsigned short v9;  // [bp-0xf0]\n
    unsigned short v10;  // [bp-0xee]\n
    unsigned long v11;  // [bp-0xec]\n
    unsigned int v12;  // [bp-0xe4]\n
    unsigned int v13;  // [bp-0xe0]\n
    unsigned int v14;  // [bp-0xdc]\n
    unsigned int v15;  // [bp-0xd8]\n
    char v16;  // [bp-0xd2]\n
    char v17[2];  // [bp-0xcc]\n
    unsigned short v18;  // [bp-0xc6]\n
    unsigned int *v19;  // [bp-0xc4]\n
    struct struct_0 **v20;  // [bp-0xc0]\n
    unsigned int v21;  // [bp-0xbc]\n
    char v22;  // [bp-0xb5]\n
    unsigned int *v23;  // [bp-0xb4]\n
    struct struct_0 **v24;  // [bp-0xb0]\n
    char *v25;  // [bp-0xac]\n
    unsigned int v26;  // [bp-0xa8]\n
    unsigned int *v27;  // [bp-0xa4]\n
    struct struct_0 **v28;  // [bp-0xa0]\n
    char *v29;  // [bp-0x9c]\n
    unsigned int v30;  // [bp-0x98]\n
    unsigned int *v31;  // [bp-0x94]\n
    struct struct_0 **v32;  // [bp-0x90]\n
    char *v33;  // [bp-0x8c]\n
    unsigned int v34;  // [bp-0x88]\n
    unsigned int *v35;  // [bp-0x84]\n
    struct struct_0 **v36;  // [bp-0x80]\n
    char v37;  // [bp-0x79]\n
    unsigned long v38;  // [bp-0x64]\n
    unsigned int *v39;  // [bp-0x58]\n
    struct struct_0 **v40;  // [bp-0x54]\n
    char v41;  // [bp-0x50]\n
    unsigned int v42;  // [bp-0x44]\n
    unsigned int *v43;  // [bp-0x40]\n
    struct struct_0 **v44;  // [bp-0x3c]\n
    unsigned int v45;  // [bp-0x38]\n
    unsigned short v46;  // [bp-0x32]\n
    unsigned int *v47;  // [bp-0x30]\n
    struct struct_0 **v48;  // [bp-0x2c]\n
    char *v49;  // [bp-0x28]\n
    unsigned int v50;  // [bp-0x24]\n
    unsigned int *v51;  // [bp-0x20]\n
    struct struct_0 **v52;  // [bp-0x1c]\n
    unsigned int v53;  // [bp-0x18]\n
    char v54;  // [bp-0x11]\n
    unsigned int *v55;  // [bp-0x10]\n
    struct struct_0 **v56;  // [bp-0xc]\n
    unsigned int v57;  // [bp-0x8]\n
    unsigned int v59;  // ebx\n
    struct struct_0 **v61;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v65;  // eax\n
    unsigned int *v67;  // eax\n
    unsigned int *v68;  // eax\n
    struct struct_0 **v69;  // eax\n
    struct struct_0 **v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_0 **v73;  // eax\n
    unsigned int *v75;  // eax\n
    unsigned int *v76;  // eax\n
    struct struct_0 **v77;  // eax\n
    struct struct_0 **v78;  // eax\n
    unsigned int *v79;  // eax\n
    unsigned int *v80;  // eax\n
    struct struct_0 **v81;  // eax\n
    unsigned int *v82;  // eax\n
    struct struct_0 **v83;  // eax\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    unsigned int *v86;  // eax\n
    struct struct_0 **v87;  // eax\n
    unsigned int *v88;  // eax\n
    struct struct_0 **v89;  // eax\n
    struct struct_0 **v91;  // eax\n
    unsigned int *v93;  // eax\n
    unsigned int *v94;  // eax, Other Possible Types: unsigned int\n
    unsigned int v95;  // ebx\n
\n
    v57 = v59;\n
    v8 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v14 = g_4f0340;\n
    v15 = g_4f0344;\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamachromophotographic===\", 29) < 0)\n
        cgc__terminate();\n
    v36 = v58;\n
    v35 = a0;\n
    if (*(v35) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v35) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v35);\n
    v34 = v7;\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = cgc_calloc(134);\n
    if (!v33)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v33, &v8[18].padding_0[182]);\n
    cgc_strncpy(v33 + 5, *(v36), v34);\n
    v61 = v36;\n
    *(v61) = &(*(v61))[4 + cgc_strlen(v33)];\n
    v63 = v35;\n
    *(v63) = *(v63) - (cgc_strlen(v33) + -4);\n
    cgc_checkheap();\n
    cgc_free(v33);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v52 = v58;\n
    v51 = a0;\n
    if (*(v51) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v51) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v51);\n
    v50 = v6;\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = cgc_calloc(134);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v49, &v8[18].padding_0[182]);\n
    cgc_strncpy(v49 + 5, *(v52), v50);\n
    v65 = v52;\n
    *(v65) = &(*(v65))[4 + cgc_strlen(v49)];\n
    v67 = v51;\n
    *(v67) = *(v67) - (cgc_strlen(v49) + -4);\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v56 = v58;\n
    v55 = a0;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = *(v56)->field_0;\n
    v68 = v55;\n
    *(v68) = *(v68) - 1;\n
    v69 = v56;\n
    *(v69) = *(v69) + 1;\n
    if (v54 <= *(v55) && !(!v54))\n
        goto LABEL_448099;\n
    if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_448099:\n
    v53 = cgc_calloc(v54);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v53, *(v56), v54);\n
    if (cgc_sendline(1, &v8[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v70 = v56;\n
    *(v70) = &(*(v70))[v54];\n
    v71 = v55;\n
    *(v71) = *(v71) - v54;\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    v32 = v58;\n
    v31 = a0;\n
    if (*(v31) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v31) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v31);\n
    v30 = v5;\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = cgc_calloc(134);\n
    if (!v29)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v29, &v8[18].padding_0[182]);\n
    cgc_strncpy(v29 + 5, *(v32), v30);\n
    v73 = v32;\n
    *(v73) = &(*(v73))[4 + cgc_strlen(v29)];\n
    v75 = v31;\n
    *(v75) = *(v75) - (cgc_strlen(v29) + -4);\n
    cgc_checkheap();\n
    cgc_free(v29);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v24 = v58;\n
    v23 = a0;\n
    if (*(v23) < 1)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = *(v24)->field_0;\n
    v76 = v23;\n
    *(v76) = *(v76) - 1;\n
    v77 = v24;\n
    *(v77) = *(v77) + 1;\n
    if (v22 <= *(v23) && !(!v22))\n
        goto LABEL_448531;\n
    if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_448531:\n
    v21 = cgc_calloc(v22);\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v21, *(v24), v22);\n
    if (cgc_sendline(1, &v8[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v78 = v24;\n
    *(v78) = &(*(v78))[v22];\n
    v79 = v23;\n
    *(v79) = *(v79) - v22;\n
    cgc_checkheap();\n
    cgc_free(v21);\n
    v20 = v58;\n
    v19 = a0;\n
    *(&v17) = *(v20);\n
    memset(&v16, 0, 6);\n
    if (*(v19) < 2)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v17[0] << 8)\n
        v4 = v17[1];\n
    v18 = v4 & 1;\n
    cgc_uint2str(&v16, 6, v18);\n
    v3 = &v16;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v16)) < 0)\n
        cgc__terminate();\n
    v80 = v19;\n
    *(v80) = *(v80) - 2;\n
    v81 = v20;\n
    *(v81) = *(v81) + 2;\n
    v48 = v58;\n
    v47 = a0;\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v46 = *(&*(v48));\n
    v82 = v47;\n
    *(v82) = *(v82) - 2;\n
    v83 = v48;\n
    *(v83) = *(v83) + 2;\n
    if (v46 <= *(v47) && !(!v46))\n
        goto LABEL_4488d4;\n
    if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4488d4:\n
    v45 = cgc_calloc(v46);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v45, *(v48), v46);\n
    if (cgc_sendline(1, &v8[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v84 = v47;\n
    *(v84) = *(v84) - v46;\n
    v85 = v48;\n
    *(v85) = &(*(v85))[v46];\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    v44 = v58;\n
    v43 = a0;\n
    memset(&v41, 0, 12);\n
    if (*(v43) < 4)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v42 = *(&*(v44));\n
    cgc_uint2str(&v41, 12, v42);\n
    v2 = &v41;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v41)) < 0)\n
        cgc__terminate();\n
    v86 = v43;\n
    *(v86) = *(v86) - 4;\n
    v87 = v44;\n
    *(v87) = *(v87) + 4;\n
    v40 = v58;\n
    v39 = a0;\n
    memset(&v37, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v38 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v10 = [D] x86g_create_fpucw(fpround<4>);\n
    v9 = v10 | 0xc00;\n
    v11 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v37, 21, v11);\n
    v1 = &v37;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v37)) < 0)\n
        cgc__terminate();\n
    v88 = v39;\n
    *(v88) = *(v88) - 8;\n
    v89 = v40;\n
    *(v89) = *(v89) + 8;\n
    v28 = v58;\n
    v27 = a0;\n
    if (*(v27) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v27) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v27);\n
    v26 = v0;\n
    if (!v26)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = cgc_calloc(134);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v25, &v8[18].padding_0[182]);\n
    cgc_strncpy(v25 + 5, *(v28), v26);\n
    v91 = v28;\n
    *(v91) = &(*(v91))[4 + cgc_strlen(v25)];\n
    v93 = v27;\n
    *(v93) = *(v93) - (cgc_strlen(v25) + -4);\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v13 ^= v8->field_260;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v94 = a0;\n
    if (*(v94) > 0 && v12 >= 0 && v12 < 2)\n
        v94 = (&v14)[v12](v58);\n
    v95 = v57;\n
    return v94;\n
}\n
", "4493128:sub_448f48": null, "4493136:cgc_process_llamaunacceptable": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaunacceptable(struct struct_0 **v42, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc4]\n
    char v1;  // [bp-0xbd]\n
    struct_1 *v2;  // [bp-0xbc]\n
    struct_1 *v3;  // [bp-0xb8]\n
    struct_1 *v4;  // [bp-0xb4]\n
    char v5;  // [bp-0xad]\n
    struct_2 *v6;  // [bp-0xac]\n
    struct struct_3 **v7;  // [bp-0xa8]\n
    unsigned int v8;  // [bp-0xa4]\n
    char v9;  // [bp-0xa0]\n
    char v10;  // [bp-0x9d]\n
    char v11[8];  // [bp-0x88]\n
    unsigned int v12;  // [bp-0x84]\n
    void* v13;  // [bp-0x80]\n
    unsigned int *v14;  // [bp-0x7c]\n
    struct struct_0 **v15;  // [bp-0x78]\n
    unsigned int v16;  // [bp-0x74]\n
    char v17;  // [bp-0x6d]\n
    unsigned int *v18;  // [bp-0x6c]\n
    struct struct_0 **v19;  // [bp-0x68]\n
    char v20;  // [bp-0x64]\n
    unsigned short v21;  // [bp-0x5e]\n
    unsigned int *v22;  // [bp-0x5c]\n
    struct struct_0 **v23;  // [bp-0x58]\n
    char v24;  // [bp-0x51]\n
    char v25;  // [bp-0x4d]\n
    unsigned int *v26;  // [bp-0x4c]\n
    struct struct_0 **v27;  // [bp-0x48]\n
    char v28;  // [bp-0x44]\n
    char v29[8];  // [bp-0x38]\n
    unsigned int v30;  // [bp-0x34]\n
    unsigned int *v31;  // [bp-0x30]\n
    struct struct_0 **v32;  // [bp-0x2c]\n
    unsigned int v33;  // [bp-0x28]\n
    char v34;  // [bp-0x21]\n
    unsigned int *v35;  // [bp-0x20]\n
    struct struct_0 **v36;  // [bp-0x1c]\n
    unsigned int v37;  // [bp-0x18]\n
    char v38;  // [bp-0x11]\n
    unsigned int *v39;  // [bp-0x10]\n
    struct struct_0 **v40;  // [bp-0xc]\n
    unsigned int v41;  // [bp-0x8]\n
    unsigned int v43;  // ebx\n
    unsigned int *v44;  // eax\n
    struct struct_0 **v45;  // eax\n
    struct struct_0 **v46;  // eax\n
    unsigned int *v47;  // eax\n
    unsigned int *v48;  // eax\n
    struct struct_0 **v49;  // eax\n
    unsigned int *v50;  // eax\n
    struct struct_0 **v51;  // eax\n
    struct struct_0 **v52;  // eax\n
    unsigned int *v53;  // eax\n
    unsigned int *v54;  // eax\n
    struct struct_0 **v55;  // eax\n
    unsigned int *v56;  // eax\n
    struct struct_0 **v57;  // eax\n
    struct struct_0 **v58;  // eax\n
    unsigned int *v59;  // eax\n
    unsigned int *v60;  // eax\n
    struct struct_0 **v61;  // eax\n
    unsigned int *v62;  // eax\n
    struct struct_0 **v63;  // eax\n
    unsigned int *v64;  // eax, Other Possible Types: unsigned int\n
    unsigned int v65;  // ebx\n
\n
    v41 = v43;\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc__cookie;\n
    v7 = -1;\n
    if (cgc_sendline(1, \"===llamaunacceptable===\", 23) < 0)\n
        cgc__terminate();\n
    v40 = v42;\n
    v39 = a0;\n
    if (*(v39) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v38 = *(v40)->field_0;\n
    v44 = v39;\n
    *(v44) = *(v44) - 1;\n
    v45 = v40;\n
    *(v45) = &*(v45)->padding_1;\n
    if (v38 <= *(v39) && !(!v38))\n
        goto LABEL_4490bd;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4490bd:\n
    v37 = cgc_calloc(v38);\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v37, *(v40), v38);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v46 = v40;\n
    *(v46) = &(&*(v46)->field_0)[v38];\n
    v47 = v39;\n
    *(v47) = *(v47) - v38;\n
    cgc_checkheap();\n
    cgc_free(v37);\n
    v32 = v42;\n
    v31 = a0;\n
    *(&v29[0]) = *(v32);\n
    memset(&v28, 0, 12);\n
    if (*(v31) < 4)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v29[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v29[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v29[2] << 8)\n
                v5 = v29[3];\n
        }\n
    }\n
    v30 = v5 & 1;\n
    cgc_uint2str(&v28, 12, v30);\n
    v4 = &v28;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v28)) < 0)\n
        cgc__terminate();\n
    v48 = v31;\n
    *(v48) = *(v48) - 4;\n
    v49 = v32;\n
    *(v49) = &*(v49)->field_4;\n
    v19 = v42;\n
    v18 = a0;\n
    if (*(v18) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = *(v19)->field_0;\n
    v50 = v18;\n
    *(v50) = *(v50) - 1;\n
    v51 = v19;\n
    *(v51) = &*(v51)->padding_1;\n
    if (v17 <= *(v18) && !(!v17))\n
        goto LABEL_449444;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_449444:\n
    v16 = cgc_calloc(v17);\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v16, *(v19), v17);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v52 = v19;\n
    *(v52) = &(&*(v52)->field_0)[v17];\n
    v53 = v18;\n
    *(v53) = *(v53) - v17;\n
    cgc_checkheap();\n
    cgc_free(v16);\n
    v23 = v42;\n
    v22 = a0;\n
    memset(&v20, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = *(&*(v23)->field_0);\n
    cgc_uint2str(&v20, 6, v21);\n
    v3 = &v20;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v20)) < 0)\n
        cgc__terminate();\n
    v54 = v22;\n
    *(v54) = *(v54) - 2;\n
    v55 = v23;\n
    *(v55) = &*(v55)->field_2;\n
    v36 = v42;\n
    v35 = a0;\n
    if (*(v35) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v34 = *(v36)->field_0;\n
    v56 = v35;\n
    *(v56) = *(v56) - 1;\n
    v57 = v36;\n
    *(v57) = &*(v57)->padding_1;\n
    if (v34 <= *(v35) && !(!v34))\n
        goto LABEL_44975f;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44975f:\n
    v33 = cgc_calloc(v34);\n
    if (!v33)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v33, *(v36), v34);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v58 = v36;\n
    *(v58) = &(&*(v58)->field_0)[v34];\n
    v59 = v35;\n
    *(v59) = *(v59) - v34;\n
    cgc_checkheap();\n
    cgc_free(v33);\n
    v27 = v42;\n
    v26 = a0;\n
    memset(&v24, 0, 4);\n
    if (*(v26) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = *(v27)->field_0;\n
    cgc_uint2str(&v24, 4, v25);\n
    v2 = &v24;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v60 = v26;\n
    *(v60) = *(v60) - 1;\n
    v61 = v27;\n
    *(v61) = &*(v61)->padding_1;\n
    v15 = v42;\n
    v14 = a0;\n
    *(&v11[0]) = *(v15);\n
    memset(&v10, 0, 21);\n
    if (*(v14) < 8)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v11[0])\n
    {\n
        v1 = 0;\n
        if (v11[1])\n
        {\n
            v1 = 0;\n
            if (v11[2])\n
            {\n
                v1 = 0;\n
                if (v11[3])\n
                {\n
                    v1 = 0;\n
                    if (v11[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v11[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v11[6] << 8)\n
                                v1 = v11[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v12 = v1 & 1;\n
    v13 = 0;\n
    cgc_uint2str(&v10, 21, v12);\n
    v0 = &v10;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v10)) < 0)\n
        cgc__terminate();\n
    v62 = v14;\n
    *(v62) = *(v62) - 8;\n
    v63 = v15;\n
    *(v63) = *(v63) + 1;\n
    v8 ^= v6->field_260;\n
    if (v8)\n
        cgc___stack_cookie_fail();\n
    v64 = a0;\n
    if (*(v64) > 0 && v7 >= 0 && v7 < 0)\n
        v64 = *((&v9 + 0x4 * v7))(v42);\n
    v65 = v41;\n
    return v64;\n
}\n
", "4496432:cgc_process_llamapanse": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamapanse(struct struct_0 **v92, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x1d8]\n
    unsigned int v1;  // [bp-0x1d4]\n
    unsigned int v2;  // [bp-0x1d0]\n
    struct_3 *v3;  // [bp-0x1cc]\n
    struct_3 *v4;  // [bp-0x1c8]\n
    struct_3 *v5;  // [bp-0x1c4]\n
    struct_3 *v6;  // [bp-0x1c0]\n
    char v7;  // [bp-0x1b9]\n
    struct_3 *v8;  // [bp-0x1b8]\n
    struct_3 *v9;  // [bp-0x1b4]\n
    char v10;  // [bp-0x1ad]\n
    struct_3 *v11;  // [bp-0x1ac]\n
    char v12;  // [bp-0x1a5]\n
    struct_2 *v13;  // [bp-0x1a4]\n
    unsigned short v14;  // [bp-0x1a0]\n
    unsigned short v15;  // [bp-0x19e]\n
    unsigned short v16;  // [bp-0x19c]\n
    unsigned short v17;  // [bp-0x19a]\n
    unsigned short v18;  // [bp-0x198]\n
    unsigned short v19;  // [bp-0x196]\n
    unsigned long v20;  // [bp-0x194]\n
    unsigned long v21;  // [bp-0x18c]\n
    unsigned long v22;  // [bp-0x184]\n
    struct struct_4 **v23;  // [bp-0x178]\n
    unsigned int v24;  // [bp-0x174]\n
    char v25;  // [bp-0x170]\n
    char v26;  // [bp-0x16d]\n
    char v27[8];  // [bp-0x158]\n
    unsigned int v28;  // [bp-0x154]\n
    void* v29;  // [bp-0x150]\n
    unsigned int *v30;  // [bp-0x14c]\n
    struct struct_0 **v31;  // [bp-0x148]\n
    char *v32;  // [bp-0x144]\n
    unsigned int v33;  // [bp-0x140]\n
    unsigned int *v34;  // [bp-0x13c]\n
    struct struct_0 **v35;  // [bp-0x138]\n
    char *v36;  // [bp-0x134]\n
    unsigned int v37;  // [bp-0x130]\n
    unsigned int *v38;  // [bp-0x12c]\n
    struct struct_0 **v39;  // [bp-0x128]\n
    char v40;  // [bp-0x121]\n
    char v41;  // [bp-0x11d]\n
    unsigned int *v42;  // [bp-0x11c]\n
    struct struct_0 **v43;  // [bp-0x118]\n
    char v44;  // [bp-0x111]\n
    unsigned long v45;  // [bp-0xfc]\n
    unsigned int *v46;  // [bp-0xf4]\n
    struct struct_0 **v47;  // [bp-0xf0]\n
    char v48;  // [bp-0xec]\n
    unsigned int v49;  // [bp-0xe0]\n
    unsigned int *v50;  // [bp-0xdc]\n
    struct struct_0 **v51;  // [bp-0xd8]\n
    char v52;  // [bp-0xd4]\n
    unsigned int v53;  // [bp-0xc8]\n
    unsigned int *v54;  // [bp-0xc4]\n
    struct struct_0 **v55;  // [bp-0xc0]\n
    unsigned int v56;  // [bp-0xbc]\n
    unsigned short v57;  // [bp-0xb6]\n
    unsigned int *v58;  // [bp-0xb4]\n
    struct struct_0 **v59;  // [bp-0xb0]\n
    unsigned int v60;  // [bp-0xac]\n
    unsigned short v61;  // [bp-0xa6]\n
    unsigned int *v62;  // [bp-0xa4]\n
    struct struct_0 **v63;  // [bp-0xa0]\n
    unsigned int v64;  // [bp-0x9c]\n
    unsigned short v65;  // [bp-0x96]\n
    unsigned int *v66;  // [bp-0x94]\n
    struct struct_0 **v67;  // [bp-0x90]\n
    unsigned int v68;  // [bp-0x8c]\n
    unsigned short v69;  // [bp-0x86]\n
    unsigned int *v70;  // [bp-0x84]\n
    struct struct_0 **v71;  // [bp-0x80]\n
    char v72;  // [bp-0x7c]\n
    char v73[4];  // [bp-0x70]\n
    unsigned int v74;  // [bp-0x6c]\n
    unsigned int *v75;  // [bp-0x68]\n
    struct struct_0 **v76;  // [bp-0x64]\n
    char v77;  // [bp-0x60]\n
    char v78[4];  // [bp-0x54]\n
    unsigned int v79;  // [bp-0x50]\n
    unsigned int *v80;  // [bp-0x4c]\n
    struct struct_0 **v81;  // [bp-0x48]\n
    char v82;  // [bp-0x41]\n
    unsigned int v83;  // [bp-0x2c]\n
    unsigned int v84;  // [bp-0x28]\n
    unsigned int *v85;  // [bp-0x20]\n
    struct struct_0 **v86;  // [bp-0x1c]\n
    unsigned int v87;  // [bp-0x18]\n
    char v88;  // [bp-0x11]\n
    unsigned int *v89;  // [bp-0x10]\n
    struct struct_0 **v90;  // [bp-0xc]\n
    unsigned int v91;  // [bp-0x8]\n
    unsigned int v93;  // ebx\n
    unsigned int *v94;  // eax\n
    struct struct_0 **v95;  // eax\n
    unsigned int *v96;  // eax\n
    struct struct_0 **v97;  // eax\n
    unsigned int *v98;  // eax\n
    struct struct_0 **v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_0 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_0 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_0 **v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_0 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    unsigned int *v114;  // eax\n
    struct struct_0 **v115;  // eax\n
    unsigned int *v116;  // eax\n
    struct struct_0 **v117;  // eax\n
    unsigned int *v118;  // eax\n
    struct struct_0 **v119;  // eax\n
    struct_1 *v120;  // ecx\n
    unsigned int *v121;  // eax\n
    struct struct_0 **v122;  // eax\n
    unsigned int *v123;  // eax\n
    struct struct_0 **v124;  // eax\n
    struct struct_0 **v126;  // eax\n
    unsigned int *v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_0 **v130;  // eax\n
    struct struct_0 **v131;  // eax\n
    unsigned int *v132;  // eax\n
    struct struct_0 **v134;  // eax\n
    unsigned int *v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_0 **v138;  // eax\n
    unsigned int *v139;  // eax, Other Possible Types: unsigned int\n
    unsigned int v140;  // ebx\n
\n
    v91 = v93;\n
    v13 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v24 = cgc__cookie;\n
    v23 = -1;\n
    if (cgc_sendline(1, \"===llamapanse===\", 16) < 0)\n
        cgc__terminate();\n
    v63 = v92;\n
    v62 = a0;\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = *(&*(v63)->field_0);\n
    v94 = v62;\n
    *(v94) = *(v94) - 2;\n
    v95 = v63;\n
    *(v95) = &*(v95)->padding_1[1];\n
    if (v61 <= *(v62) && !(!v61))\n
        goto LABEL_449dbd;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_449dbd:\n
    v60 = cgc_calloc(v61);\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v60, *(v63), v61);\n
    if (cgc_sendline(1, &v13[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v96 = v62;\n
    *(v96) = *(v96) - v61;\n
    v97 = v63;\n
    *(v97) = &(&*(v97)->field_0)[v61];\n
    cgc_checkheap();\n
    cgc_free(v60);\n
    v81 = v92;\n
    v80 = a0;\n
    *(&v78[0]) = *(v81);\n
    memset(&v77, 0, 12);\n
    if (*(v80) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v78[0] << 24)\n
    {\n
        v12 = 0;\n
        if (v78[1] << 16)\n
        {\n
            v12 = 0;\n
            if (v78[2] << 8)\n
                v12 = v78[3];\n
        }\n
    }\n
    v79 = v12 & 1;\n
    cgc_uint2str(&v77, 12, v79);\n
    v11 = &v77;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v98 = v80;\n
    *(v98) = *(v98) - 4;\n
    v99 = v81;\n
    *(v99) = &*(v99)->field_4;\n
    v59 = v92;\n
    v58 = a0;\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v57 = *(&*(v59)->field_0);\n
    v100 = v58;\n
    *(v100) = *(v100) - 2;\n
    v101 = v59;\n
    *(v101) = &*(v101)->padding_1[1];\n
    if (v57 <= *(v58) && !(!v57))\n
        goto LABEL_44a185;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44a185:\n
    v56 = cgc_calloc(v57);\n
    if (!v56)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v56, *(v59), v57);\n
    if (cgc_sendline(1, &v13[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v102 = v58;\n
    *(v102) = *(v102) - v57;\n
    v103 = v59;\n
    *(v103) = &(&*(v103)->field_0)[v57];\n
    cgc_checkheap();\n
    cgc_free(v56);\n
    v71 = v92;\n
    v70 = a0;\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v69 = *(&*(v71)->field_0);\n
    v104 = v70;\n
    *(v104) = *(v104) - 2;\n
    v105 = v71;\n
    *(v105) = &*(v105)->padding_1[1];\n
    if (v69 <= *(v70) && !(!v69))\n
        goto LABEL_44a3aa;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44a3aa:\n
    v68 = cgc_calloc(v69);\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v68, *(v71), v69);\n
    if (cgc_sendline(1, &v13[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v106 = v70;\n
    *(v106) = *(v106) - v69;\n
    v107 = v71;\n
    *(v107) = &(&*(v107)->field_0)[v69];\n
    cgc_checkheap();\n
    cgc_free(v68);\n
    v76 = v92;\n
    v75 = a0;\n
    *(&v73[0]) = *(v76);\n
    memset(&v72, 0, 12);\n
    if (*(v75) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v73[0] << 24)\n
    {\n
        v10 = 0;\n
        if (v73[1] << 16)\n
        {\n
            v10 = 0;\n
            if (v73[2] << 8)\n
                v10 = v73[3];\n
        }\n
    }\n
    v74 = v10 & 1;\n
    cgc_uint2str(&v72, 12, v74);\n
    v9 = &v72;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v108 = v75;\n
    *(v108) = *(v108) - 4;\n
    v109 = v76;\n
    *(v109) = &*(v109)->field_4;\n
    v43 = v92;\n
    v42 = a0;\n
    memset(&v40, 0, 4);\n
    if (*(v42) < 1)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = *(v43)->field_0;\n
    cgc_uint2str(&v40, 4, v41);\n
    v8 = &v40;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v110 = v42;\n
    *(v110) = *(v110) - 1;\n
    v111 = v43;\n
    *(v111) = &*(v111)->padding_1;\n
    v31 = v92;\n
    v30 = a0;\n
    *(&v27[0]) = *(v31);\n
    memset(&v26, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v27[0])\n
    {\n
        v7 = 0;\n
        if (v27[1])\n
        {\n
            v7 = 0;\n
            if (v27[2])\n
            {\n
                v7 = 0;\n
                if (v27[3])\n
                {\n
                    v7 = 0;\n
                    if (v27[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v27[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v27[6] << 8)\n
                                v7 = v27[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v28 = v7 & 1;\n
    v29 = 0;\n
    cgc_uint2str(&v26, 21, v28);\n
    v6 = &v26;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v26)) < 0)\n
        cgc__terminate();\n
    v112 = v30;\n
    *(v112) = *(v112) - 8;\n
    v113 = v31;\n
    *(v113) = &(*(v113))[1].padding_1[2];\n
    v47 = v92;\n
    v46 = a0;\n
    memset(&v44, 0, 21);\n
    if (*(v46) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v45 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v22 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v44, 21, v22);\n
    v5 = &v44;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v114 = v46;\n
    *(v114) = *(v114) - 8;\n
    v115 = v47;\n
    *(v115) = &(*(v115))[1].padding_1[2];\n
    v67 = v92;\n
    v66 = a0;\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v65 = *(&*(v67)->field_0);\n
    v116 = v66;\n
    *(v116) = *(v116) - 2;\n
    v117 = v67;\n
    *(v117) = &*(v117)->padding_1[1];\n
    if (v65 <= *(v66) && !(!v65))\n
        goto LABEL_44ac69;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44ac69:\n
    v64 = cgc_calloc(v65);\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v64, *(v67), v65);\n
    if (cgc_sendline(1, &v13[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v118 = v66;\n
    *(v118) = *(v118) - v65;\n
    v119 = v67;\n
    *(v119) = &(&*(v119)->field_0)[v65];\n
    cgc_checkheap();\n
    cgc_free(v64);\n
    v86 = v92;\n
    v85 = a0;\n
    memset(&v82, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = *(v86);\n
    v84 = v120->field_4;\n
    v83 = *(&v120->field_0);\n
    cgc_uint2str(&v82, 21, v83);\n
    v4 = &v82;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v121 = v85;\n
    *(v121) = *(v121) - 8;\n
    v122 = v86;\n
    *(v122) = &(*(v122))[1].padding_1[2];\n
    v55 = v92;\n
    v54 = a0;\n
    memset(&v52, 0, 12);\n
    if (*(v54) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v53 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v17 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-406, size=2, endness=Iend_LE)))));\n
    v16 = v17 | 0xc00;\n
    v21 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v52, 12, v21);\n
    v3 = &v52;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v123 = v54;\n
    *(v123) = *(v123) - 4;\n
    v124 = v55;\n
    *(v124) = &*(v124)->field_4;\n
    v39 = v92;\n
    v38 = a0;\n
    if (*(v38) <= 0)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v38) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v38);\n
    v37 = v2;\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = cgc_calloc(134);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v36, &v13[18].padding_0[182]);\n
    cgc_strncpy(v36 + 5, *(v39), v37);\n
    v126 = v39;\n
    *(v126) = &(&*(v126)->field_4)[cgc_strlen(v36)];\n
    v128 = v38;\n
    *(v128) = *(v128) - (cgc_strlen(v36) + -4);\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    if (cgc_sendline(1, &v13[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v90 = v92;\n
    v89 = a0;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(v90)->field_0;\n
    v129 = v89;\n
    *(v129) = *(v129) - 1;\n
    v130 = v90;\n
    *(v130) = &*(v130)->padding_1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_44b39d;\n
    if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44b39d:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, &v13[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v131 = v90;\n
    *(v131) = &(&*(v131)->field_0)[v88];\n
    v132 = v89;\n
    *(v132) = *(v132) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v35 = v92;\n
    v34 = a0;\n
    if (*(v34) <= 0)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v34) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v34);\n
    v33 = v1;\n
    if (!v33)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = cgc_calloc(134);\n
    if (!v32)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v32, &v13[18].padding_0[182]);\n
    cgc_strncpy(v32 + 5, *(v35), v33);\n
    v134 = v35;\n
    *(v134) = &(&*(v134)->field_4)[cgc_strlen(v32)];\n
    v136 = v34;\n
    *(v136) = *(v136) - (cgc_strlen(v32) + -4);\n
    cgc_checkheap();\n
    cgc_free(v32);\n
    if (cgc_sendline(1, &v13[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v51 = v92;\n
    v50 = a0;\n
    memset(&v48, 0, 12);\n
    if (*(v50) < 4)\n
    {\n
        if (cgc_sendline(1, &v13[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v49 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v15 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-410, size=2, endness=Iend_LE)))));\n
    v14 = v15 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v48, 12, v20);\n
    v0 = &v48;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v48)) < 0)\n
        cgc__terminate();\n
    v137 = v50;\n
    *(v137) = *(v137) - 4;\n
    v138 = v51;\n
    *(v138) = &*(v138)->field_4;\n
    v24 ^= v13->field_260;\n
    if (v24)\n
        cgc___stack_cookie_fail();\n
    v139 = a0;\n
    if (*(v139) > 0 && v23 >= 0 && v23 < 0)\n
        v139 = *((&v25 + 0x4 * v23))(v92);\n
    v140 = v91;\n
    return v139;\n
}\n
", "4503830:sub_44b916": null, "4503840:cgc_process_llamaAraneiformes": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaAraneiformes(struct struct_0 **v45, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xf4]\n
    struct_1 *v1;  // [bp-0xf0]\n
    struct_1 *v2;  // [bp-0xec]\n
    struct_1 *v3;  // [bp-0xe8]\n
    struct_1 *v4;  // [bp-0xe4]\n
    char v5;  // [bp-0xdd]\n
    struct_3 *v6;  // [bp-0xdc]\n
    unsigned short v7;  // [bp-0xd8]\n
    unsigned short v8;  // [bp-0xd6]\n
    unsigned short v9;  // [bp-0xd4]\n
    unsigned short v10;  // [bp-0xd2]\n
    unsigned short v11;  // [bp-0xd0]\n
    unsigned short v12;  // [bp-0xce]\n
    unsigned long v13;  // [bp-0xcc]\n
    unsigned long v14;  // [bp-0xc4]\n
    unsigned long v15;  // [bp-0xbc]\n
    struct struct_2 **v16;  // [bp-0xb4]\n
    unsigned int v17;  // [bp-0xb0]\n
    char v18;  // [bp-0xac]\n
    char v19;  // [bp-0xaa]\n
    char v20[2];  // [bp-0xa4]\n
    unsigned short v21;  // [bp-0x9e]\n
    unsigned int *v22;  // [bp-0x9c]\n
    struct struct_0 **v23;  // [bp-0x98]\n
    char v24;  // [bp-0x94]\n
    unsigned short v25;  // [bp-0x8e]\n
    unsigned int *v26;  // [bp-0x8c]\n
    struct struct_0 **v27;  // [bp-0x88]\n
    char v28;  // [bp-0x81]\n
    unsigned long v29;  // [bp-0x6c]\n
    unsigned int *v30;  // [bp-0x64]\n
    struct struct_0 **v31;  // [bp-0x60]\n
    char v32;  // [bp-0x59]\n
    unsigned long v33;  // [bp-0x44]\n
    unsigned int *v34;  // [bp-0x38]\n
    struct struct_0 **v35;  // [bp-0x34]\n
    char v36;  // [bp-0x30]\n
    unsigned int v37;  // [bp-0x24]\n
    unsigned int *v38;  // [bp-0x20]\n
    struct struct_0 **v39;  // [bp-0x1c]\n
    unsigned int v40;  // [bp-0x18]\n
    unsigned short v41;  // [bp-0x12]\n
    unsigned int *v42;  // [bp-0x10]\n
    struct struct_0 **v43;  // [bp-0xc]\n
    unsigned int v44;  // [bp-0x8]\n
    unsigned int v46;  // ebx\n
    unsigned int *v47;  // eax\n
    struct struct_0 **v48;  // eax\n
    unsigned int *v49;  // eax\n
    struct struct_0 **v50;  // eax\n
    unsigned int *v51;  // eax\n
    struct struct_0 **v52;  // eax\n
    unsigned int *v53;  // eax\n
    struct struct_0 **v54;  // eax\n
    unsigned int *v55;  // eax\n
    struct struct_0 **v56;  // eax\n
    unsigned int *v57;  // eax\n
    struct struct_0 **v58;  // eax\n
    unsigned int *v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    unsigned int *v61;  // eax, Other Possible Types: unsigned int\n
    unsigned int v62;  // ebx\n
\n
    v44 = v46;\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v17 = cgc__cookie;\n
    v16 = -1;\n
    if (cgc_sendline(1, \"===llamaAraneiformes===\", 23) < 0)\n
        cgc__terminate();\n
    v23 = v45;\n
    v22 = a0;\n
    *(&v20) = *(v23);\n
    memset(&v19, 0, 6);\n
    if (*(v22) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v20[0] << 8)\n
        v5 = v20[1];\n
    v21 = v5 & 1;\n
    cgc_uint2str(&v19, 6, v21);\n
    v4 = &v19;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v19)) < 0)\n
        cgc__terminate();\n
    v47 = v22;\n
    *(v47) = *(v47) - 2;\n
    v48 = v23;\n
    *(v48) = *(v48) + 2;\n
    v27 = v45;\n
    v26 = a0;\n
    memset(&v24, 0, 6);\n
    if (*(v26) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = *(&*(v27));\n
    cgc_uint2str(&v24, 6, v25);\n
    v3 = &v24;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v49 = v26;\n
    *(v49) = *(v49) - 2;\n
    v50 = v27;\n
    *(v50) = *(v50) + 2;\n
    v39 = v45;\n
    v38 = a0;\n
    memset(&v36, 0, 12);\n
    if (*(v38) < 4)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v37 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v12 = [D] x86g_create_fpucw(fpround<4>);\n
    v11 = v12 | 0xc00;\n
    v15 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v36, 12, v15);\n
    v2 = &v36;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v36)) < 0)\n
        cgc__terminate();\n
    v51 = v38;\n
    *(v51) = *(v51) - 4;\n
    v52 = v39;\n
    *(v52) = *(v52) + 4;\n
    v35 = v45;\n
    v34 = a0;\n
    memset(&v32, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v33 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v10 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-206, size=2, endness=Iend_LE)))));\n
    v9 = v10 | 0xc00;\n
    v14 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v32, 21, v14);\n
    v1 = &v32;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v53 = v34;\n
    *(v53) = *(v53) - 8;\n
    v54 = v35;\n
    *(v54) = *(v54) + 8;\n
    v43 = v45;\n
    v42 = a0;\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = *(&*(v43));\n
    v55 = v42;\n
    *(v55) = *(v55) - 2;\n
    v56 = v43;\n
    *(v56) = *(v56) + 2;\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_44bffc;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44bffc:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, &v6[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v57 = v42;\n
    *(v57) = *(v57) - v41;\n
    v58 = v43;\n
    *(v58) = &(*(v58))[v41];\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v31 = v45;\n
    v30 = a0;\n
    memset(&v28, 0, 21);\n
    if (*(v30) < 8)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v29 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v8 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-210, size=2, endness=Iend_LE)))));\n
    v7 = v8 | 0xc00;\n
    v13 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v28, 21, v13);\n
    v0 = &v28;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v28)) < 0)\n
        cgc__terminate();\n
    v59 = v30;\n
    *(v59) = *(v59) - 8;\n
    v60 = v31;\n
    *(v60) = *(v60) + 8;\n
    v17 ^= v6->field_260;\n
    if (v17)\n
        cgc___stack_cookie_fail();\n
    v61 = a0;\n
    if (*(v61) > 0 && v16 >= 0 && v16 < 0)\n
        v61 = *((&v18 + 0x4 * v16))(v45);\n
    v62 = v44;\n
    return v61;\n
}\n
", "4506320:cgc_process_llamascholasticly": "typedef struct struct_4 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamascholasticly(struct struct_0 **v151, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x2f0]\n
    unsigned int v1;  // [bp-0x2ec]\n
    struct_1 *v2;  // [bp-0x2e8]\n
    unsigned int v3;  // [bp-0x2e4]\n
    unsigned int v4;  // [bp-0x2e0]\n
    unsigned int v5;  // [bp-0x2dc]\n
    struct_1 *v6;  // [bp-0x2d8]\n
    char v7;  // [bp-0x2d1]\n
    struct_1 *v8;  // [bp-0x2d0]\n
    struct_1 *v9;  // [bp-0x2cc]\n
    struct_1 *v10;  // [bp-0x2c8]\n
    struct_1 *v11;  // [bp-0x2c4]\n
    struct_1 *v12;  // [bp-0x2c0]\n
    struct_1 *v13;  // [bp-0x2bc]\n
    char v14;  // [bp-0x2b5]\n
    unsigned int v15;  // [bp-0x2b4]\n
    struct_1 *v16;  // [bp-0x2b0]\n
    struct_1 *v17;  // [bp-0x2ac]\n
    struct_1 *v18;  // [bp-0x2a8]\n
    struct_1 *v19;  // [bp-0x2a4]\n
    struct_1 *v20;  // [bp-0x2a0]\n
    unsigned int v21;  // [bp-0x29c]\n
    struct_4 *v22;  // [bp-0x298]\n
    unsigned short v23;  // [bp-0x294]\n
    unsigned short v24;  // [bp-0x292]\n
    unsigned short v25;  // [bp-0x290]\n
    unsigned short v26;  // [bp-0x28e]\n
    unsigned long v27;  // [bp-0x28c]\n
    unsigned long v28;  // [bp-0x284]\n
    struct struct_3 **v29;  // [bp-0x278]\n
    unsigned int v30;  // [bp-0x274]\n
    char v31;  // [bp-0x270]\n
    char v32;  // [bp-0x26d]\n
    char v33[8];  // [bp-0x258]\n
    unsigned int v34;  // [bp-0x254]\n
    void* v35;  // [bp-0x250]\n
    unsigned int *v36;  // [bp-0x248]\n
    struct struct_0 **v37;  // [bp-0x244]\n
    char v38;  // [bp-0x23d]\n
    char v39[8];  // [bp-0x228]\n
    unsigned int v40;  // [bp-0x224]\n
    void* v41;  // [bp-0x220]\n
    unsigned int *v42;  // [bp-0x21c]\n
    struct struct_0 **v43;  // [bp-0x218]\n
    unsigned int v44;  // [bp-0x214]\n
    char v45;  // [bp-0x20d]\n
    unsigned int *v46;  // [bp-0x20c]\n
    struct struct_0 **v47;  // [bp-0x208]\n
    char *v48;  // [bp-0x204]\n
    unsigned int v49;  // [bp-0x200]\n
    unsigned int *v50;  // [bp-0x1fc]\n
    struct struct_0 **v51;  // [bp-0x1f8]\n
    char *v52;  // [bp-0x1f4]\n
    unsigned int v53;  // [bp-0x1f0]\n
    unsigned int *v54;  // [bp-0x1ec]\n
    struct struct_0 **v55;  // [bp-0x1e8]\n
    char v56;  // [bp-0x1e4]\n
    unsigned short v57;  // [bp-0x1de]\n
    unsigned int *v58;  // [bp-0x1dc]\n
    struct struct_0 **v59;  // [bp-0x1d8]\n
    char v60;  // [bp-0x1d4]\n
    unsigned short v61;  // [bp-0x1ce]\n
    unsigned int *v62;  // [bp-0x1cc]\n
    struct struct_0 **v63;  // [bp-0x1c8]\n
    char v64;  // [bp-0x1c4]\n
    unsigned short v65;  // [bp-0x1be]\n
    unsigned int *v66;  // [bp-0x1bc]\n
    struct struct_0 **v67;  // [bp-0x1b8]\n
    char v68;  // [bp-0x1b1]\n
    char v69;  // [bp-0x1ad]\n
    unsigned int *v70;  // [bp-0x1ac]\n
    struct struct_0 **v71;  // [bp-0x1a8]\n
    char v72;  // [bp-0x1a1]\n
    char v73;  // [bp-0x19d]\n
    unsigned int *v74;  // [bp-0x19c]\n
    struct struct_0 **v75;  // [bp-0x198]\n
    char v76;  // [bp-0x191]\n
    unsigned long v77;  // [bp-0x17c]\n
    unsigned int *v78;  // [bp-0x174]\n
    struct struct_0 **v79;  // [bp-0x170]\n
    char v80;  // [bp-0x16c]\n
    unsigned int v81;  // [bp-0x160]\n
    unsigned int *v82;  // [bp-0x15c]\n
    struct struct_0 **v83;  // [bp-0x158]\n
    char v84;  // [bp-0x154]\n
    unsigned int v85;  // [bp-0x148]\n
    unsigned int *v86;  // [bp-0x144]\n
    struct struct_0 **v87;  // [bp-0x140]\n
    char v88;  // [bp-0x13c]\n
    unsigned int v89;  // [bp-0x130]\n
    unsigned int *v90;  // [bp-0x12c]\n
    struct struct_0 **v91;  // [bp-0x128]\n
    char v92;  // [bp-0x124]\n
    unsigned int v93;  // [bp-0x118]\n
    unsigned int *v94;  // [bp-0x114]\n
    struct struct_0 **v95;  // [bp-0x110]\n
    unsigned int v96;  // [bp-0x10c]\n
    unsigned short v97;  // [bp-0x106]\n
    unsigned int *v98;  // [bp-0x104]\n
    struct struct_0 **v99;  // [bp-0x100]\n
    unsigned int v100;  // [bp-0xfc]\n
    unsigned short v101;  // [bp-0xf6]\n
    unsigned int *v102;  // [bp-0xf4]\n
    struct struct_0 **v103;  // [bp-0xf0]\n
    unsigned int v104;  // [bp-0xec]\n
    unsigned short v105;  // [bp-0xe6]\n
    unsigned int *v106;  // [bp-0xe4]\n
    struct struct_0 **v107;  // [bp-0xe0]\n
    unsigned int v108;  // [bp-0xdc]\n
    unsigned short v109;  // [bp-0xd6]\n
    unsigned int *v110;  // [bp-0xd4]\n
    struct struct_0 **v111;  // [bp-0xd0]\n
    unsigned int v112;  // [bp-0xcc]\n
    unsigned short v113;  // [bp-0xc6]\n
    unsigned int *v114;  // [bp-0xc4]\n
    struct struct_0 **v115;  // [bp-0xc0]\n
    char *v116;  // [bp-0xbc]\n
    unsigned int v117;  // [bp-0xb8]\n
    unsigned int *v118;  // [bp-0xb4]\n
    struct struct_0 **v119;  // [bp-0xb0]\n
    char *v120;  // [bp-0xac]\n
    unsigned int v121;  // [bp-0xa8]\n
    unsigned int *v122;  // [bp-0xa4]\n
    struct struct_0 **v123;  // [bp-0xa0]\n
    char *v124;  // [bp-0x9c]\n
    unsigned int v125;  // [bp-0x98]\n
    unsigned int *v126;  // [bp-0x94]\n
    struct struct_0 **v127;  // [bp-0x90]\n
    char *v128;  // [bp-0x8c]\n
    unsigned int v129;  // [bp-0x88]\n
    unsigned int *v130;  // [bp-0x84]\n
    struct struct_0 **v131;  // [bp-0x80]\n
    char v132;  // [bp-0x79]\n
    unsigned int v133;  // [bp-0x64]\n
    unsigned int v134;  // [bp-0x60]\n
    unsigned int *v135;  // [bp-0x5c]\n
    struct struct_0 **v136;  // [bp-0x58]\n
    char v137;  // [bp-0x51]\n
    unsigned int v138;  // [bp-0x3c]\n
    unsigned int v139;  // [bp-0x38]\n
    unsigned int *v140;  // [bp-0x30]\n
    struct struct_0 **v141;  // [bp-0x2c]\n
    unsigned int v142;  // [bp-0x28]\n
    char v143;  // [bp-0x21]\n
    unsigned int *v144;  // [bp-0x20]\n
    struct struct_0 **v145;  // [bp-0x1c]\n
    unsigned int v146;  // [bp-0x18]\n
    char v147;  // [bp-0x11]\n
    unsigned int *v148;  // [bp-0x10]\n
    struct struct_0 **v149;  // [bp-0xc]\n
    unsigned int v150;  // [bp-0x8]\n
    unsigned int v152;  // ebx\n
    unsigned int *v153;  // eax\n
    struct struct_0 **v154;  // eax\n
    struct struct_0 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_0 **v158;  // eax\n
    unsigned int *v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v163;  // eax\n
    struct struct_0 **v164;  // eax\n
    struct struct_0 **v165;  // eax\n
    unsigned int *v166;  // eax\n
    unsigned int *v167;  // eax\n
    struct struct_0 **v168;  // eax\n
    struct_2 *v169;  // ecx\n
    unsigned int *v170;  // eax\n
    struct struct_0 **v171;  // eax\n
    struct_2 *v172;  // ecx\n
    unsigned int *v173;  // eax\n
    struct struct_0 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    struct struct_0 **v176;  // eax\n
    unsigned int *v177;  // eax\n
    struct struct_0 **v178;  // eax\n
    unsigned int *v179;  // eax\n
    struct struct_0 **v180;  // eax\n
    struct struct_0 **v182;  // eax\n
    unsigned int *v184;  // eax\n
    unsigned int *v185;  // eax\n
    struct struct_0 **v186;  // eax\n
    unsigned int *v187;  // eax\n
    struct struct_0 **v188;  // eax\n
    unsigned int *v189;  // eax\n
    struct struct_0 **v190;  // eax\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    unsigned int *v195;  // eax\n
    struct struct_0 **v196;  // eax\n
    unsigned int *v197;  // eax\n
    struct struct_0 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_0 **v200;  // eax\n
    unsigned int *v201;  // eax\n
    struct struct_0 **v202;  // eax\n
    unsigned int *v203;  // eax\n
    struct struct_0 **v204;  // eax\n
    unsigned int *v205;  // eax\n
    struct struct_0 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_0 **v232;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax, Other Possible Types: unsigned int\n
    unsigned int v240;  // ebx\n
\n
    v150 = v152;\n
    v22 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v30 = cgc__cookie;\n
    v29 = -1;\n
    if (cgc_sendline(1, \"===llamascholasticly===\", 23) < 0)\n
        cgc__terminate();\n
    v47 = v151;\n
    v46 = a0;\n
    if (*(v46) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v45 = *(v47)->field_0;\n
    v153 = v46;\n
    *(v153) = *(v153) - 1;\n
    v154 = v47;\n
    *(v154) = &*(v154)->padding_1;\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_44c45b;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44c45b:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v155 = v47;\n
    *(v155) = &(&*(v155)->field_0)[v45];\n
    v156 = v46;\n
    *(v156) = *(v156) - v45;\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v131 = v151;\n
    v130 = a0;\n
    if (*(v130) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v130) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v130);\n
    v129 = v21;\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = cgc_calloc(134);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v128, &v22[18].padding_0[182]);\n
    cgc_strncpy(v128 + 5, *(v131), v129);\n
    v158 = v131;\n
    *(v158) = &(&*(v158)->field_4)[cgc_strlen(v128)];\n
    v160 = v130;\n
    *(v160) = *(v160) - (cgc_strlen(v128) + -4);\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v67 = v151;\n
    v66 = a0;\n
    memset(&v64, 0, 6);\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v65 = *(&*(v67)->field_0);\n
    cgc_uint2str(&v64, 6, v65);\n
    v20 = &v64;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v161 = v66;\n
    *(v161) = *(v161) - 2;\n
    v162 = v67;\n
    *(v162) = &*(v162)->padding_1[1];\n
    v149 = v151;\n
    v148 = a0;\n
    if (*(v148) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v147 = *(v149)->field_0;\n
    v163 = v148;\n
    *(v163) = *(v163) - 1;\n
    v164 = v149;\n
    *(v164) = &*(v164)->padding_1;\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_44ca24;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44ca24:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v165 = v149;\n
    *(v165) = &(&*(v165)->field_0)[v147];\n
    v166 = v148;\n
    *(v166) = *(v166) - v147;\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v75 = v151;\n
    v74 = a0;\n
    memset(&v72, 0, 4);\n
    if (*(v74) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v73 = *(v75)->field_0;\n
    cgc_uint2str(&v72, 4, v73);\n
    v19 = &v72;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v167 = v74;\n
    *(v167) = *(v167) - 1;\n
    v168 = v75;\n
    *(v168) = &*(v168)->padding_1;\n
    v141 = v151;\n
    v140 = a0;\n
    memset(&v137, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v169 = *(v141);\n
    v139 = v169->field_4;\n
    v138 = *(&v169->field_0);\n
    cgc_uint2str(&v137, 21, v138);\n
    v18 = &v137;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v137)) < 0)\n
        cgc__terminate();\n
    v170 = v140;\n
    *(v170) = *(v170) - 8;\n
    v171 = v141;\n
    *(v171) = &(*(v171))[1].padding_1[2];\n
    v136 = v151;\n
    v135 = a0;\n
    memset(&v132, 0, 21);\n
    if (*(v135) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(v136);\n
    v134 = v172->field_4;\n
    v133 = *(&v172->field_0);\n
    cgc_uint2str(&v132, 21, v133);\n
    v17 = &v132;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v173 = v135;\n
    *(v173) = *(v173) - 8;\n
    v174 = v136;\n
    *(v174) = &(*(v174))[1].padding_1[2];\n
    v91 = v151;\n
    v90 = a0;\n
    memset(&v88, 0, 12);\n
    if (*(v90) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = *(&*(v91)->field_0);\n
    cgc_uint2str(&v88, 12, v89);\n
    v16 = &v88;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v88)) < 0)\n
        cgc__terminate();\n
    v175 = v90;\n
    *(v175) = *(v175) - 4;\n
    v176 = v91;\n
    *(v176) = &*(v176)->field_4;\n
    v103 = v151;\n
    v102 = a0;\n
    if (*(v102) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v101 = *(&*(v103)->field_0);\n
    v177 = v102;\n
    *(v177) = *(v177) - 2;\n
    v178 = v103;\n
    *(v178) = &*(v178)->padding_1[1];\n
    if (v101 <= *(v102) && !(!v101))\n
        goto LABEL_44d10e;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44d10e:\n
    v100 = cgc_calloc(v101);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v100, *(v103), v101);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v179 = v102;\n
    *(v179) = *(v179) - v101;\n
    v180 = v103;\n
    *(v180) = &(&*(v180)->field_0)[v101];\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    v55 = v151;\n
    v54 = a0;\n
    if (*(v54) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v54) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v54);\n
    v53 = v15;\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = cgc_calloc(134);\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v52, &v22[18].padding_0[182]);\n
    cgc_strncpy(v52 + 5, *(v55), v53);\n
    v182 = v55;\n
    *(v182) = &(&*(v182)->field_4)[cgc_strlen(v52)];\n
    v184 = v54;\n
    *(v184) = *(v184) - (cgc_strlen(v52) + -4);\n
    cgc_checkheap();\n
    cgc_free(v52);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v43 = v151;\n
    v42 = a0;\n
    *(&v39[0]) = *(v43);\n
    memset(&v38, 0, 21);\n
    if (*(v42) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v39[0])\n
    {\n
        v14 = 0;\n
        if (v39[1])\n
        {\n
            v14 = 0;\n
            if (v39[2])\n
            {\n
                v14 = 0;\n
                if (v39[3])\n
                {\n
                    v14 = 0;\n
                    if (v39[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v39[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v39[6] << 8)\n
                                v14 = v39[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v40 = v14 & 1;\n
    v41 = 0;\n
    cgc_uint2str(&v38, 21, v40);\n
    v13 = &v38;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v185 = v42;\n
    *(v185) = *(v185) - 8;\n
    v186 = v43;\n
    *(v186) = &(*(v186))[1].padding_1[2];\n
    v71 = v151;\n
    v70 = a0;\n
    memset(&v68, 0, 4);\n
    if (*(v70) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v69 = *(v71)->field_0;\n
    cgc_uint2str(&v68, 4, v69);\n
    v12 = &v68;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v68)) < 0)\n
        cgc__terminate();\n
    v187 = v70;\n
    *(v187) = *(v187) - 1;\n
    v188 = v71;\n
    *(v188) = &*(v188)->padding_1;\n
    v87 = v151;\n
    v86 = a0;\n
    memset(&v84, 0, 12);\n
    if (*(v86) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v85 = *(&*(v87)->field_0);\n
    cgc_uint2str(&v84, 12, v85);\n
    v11 = &v84;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v84)) < 0)\n
        cgc__terminate();\n
    v189 = v86;\n
    *(v189) = *(v189) - 4;\n
    v190 = v87;\n
    *(v190) = &*(v190)->field_4;\n
    v115 = v151;\n
    v114 = a0;\n
    if (*(v114) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v113 = *(&*(v115)->field_0);\n
    v191 = v114;\n
    *(v191) = *(v191) - 2;\n
    v192 = v115;\n
    *(v192) = &*(v192)->padding_1[1];\n
    if (v113 <= *(v114) && !(!v113))\n
        goto LABEL_44da98;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44da98:\n
    v112 = cgc_calloc(v113);\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v112, *(v115), v113);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v193 = v114;\n
    *(v193) = *(v193) - v113;\n
    v194 = v115;\n
    *(v194) = &(&*(v194)->field_0)[v113];\n
    cgc_checkheap();\n
    cgc_free(v112);\n
    v63 = v151;\n
    v62 = a0;\n
    memset(&v60, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = *(&*(v63)->field_0);\n
    cgc_uint2str(&v60, 6, v61);\n
    v10 = &v60;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v195 = v62;\n
    *(v195) = *(v195) - 2;\n
    v196 = v63;\n
    *(v196) = &*(v196)->padding_1[1];\n
    v99 = v151;\n
    v98 = a0;\n
    if (*(v98) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v97 = *(&*(v99)->field_0);\n
    v197 = v98;\n
    *(v197) = *(v197) - 2;\n
    v198 = v99;\n
    *(v198) = &*(v198)->padding_1[1];\n
    if (v97 <= *(v98) && !(!v97))\n
        goto LABEL_44de18;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44de18:\n
    v96 = cgc_calloc(v97);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v96, *(v99), v97);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v199 = v98;\n
    *(v199) = *(v199) - v97;\n
    v200 = v99;\n
    *(v200) = &(&*(v200)->field_0)[v97];\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    v79 = v151;\n
    v78 = a0;\n
    memset(&v76, 0, 21);\n
    if (*(v78) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v77 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v26 = [D] x86g_create_fpucw(fpround<4>);\n
    v25 = v26 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v76, 21, v28);\n
    v9 = &v76;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v201 = v78;\n
    *(v201) = *(v201) - 8;\n
    v202 = v79;\n
    *(v202) = &(*(v202))[1].padding_1[2];\n
    v59 = v151;\n
    v58 = a0;\n
    memset(&v56, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v57 = *(&*(v59)->field_0);\n
    cgc_uint2str(&v56, 6, v57);\n
    v8 = &v56;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v203 = v58;\n
    *(v203) = *(v203) - 2;\n
    v204 = v59;\n
    *(v204) = &*(v204)->padding_1[1];\n
    v111 = v151;\n
    v110 = a0;\n
    if (*(v110) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v109 = *(&*(v111)->field_0);\n
    v205 = v110;\n
    *(v205) = *(v205) - 2;\n
    v206 = v111;\n
    *(v206) = &*(v206)->padding_1[1];\n
    if (v109 <= *(v110) && !(!v109))\n
        goto LABEL_44e30c;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44e30c:\n
    v108 = cgc_calloc(v109);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v108, *(v111), v109);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v207 = v110;\n
    *(v207) = *(v207) - v109;\n
    v208 = v111;\n
    *(v208) = &(&*(v208)->field_0)[v109];\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    v37 = v151;\n
    v36 = a0;\n
    *(&v33[0]) = *(v37);\n
    memset(&v32, 0, 21);\n
    if (*(v36) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v33[0])\n
    {\n
        v7 = 0;\n
        if (v33[1])\n
        {\n
            v7 = 0;\n
            if (v33[2])\n
            {\n
                v7 = 0;\n
                if (v33[3])\n
                {\n
                    v7 = 0;\n
                    if (v33[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v33[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v33[6] << 8)\n
                                v7 = v33[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v34 = v7 & 1;\n
    v35 = 0;\n
    cgc_uint2str(&v32, 21, v34);\n
    v6 = &v32;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v209 = v36;\n
    *(v209) = *(v209) - 8;\n
    v210 = v37;\n
    *(v210) = &(*(v210))[1].padding_1[2];\n
    v107 = v151;\n
    v106 = a0;\n
    if (*(v106) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(&*(v107)->field_0);\n
    v211 = v106;\n
    *(v211) = *(v211) - 2;\n
    v212 = v107;\n
    *(v212) = &*(v212)->padding_1[1];\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_44e78e;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44e78e:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v213 = v106;\n
    *(v213) = *(v213) - v105;\n
    v214 = v107;\n
    *(v214) = &(&*(v214)->field_0)[v105];\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v127 = v151;\n
    v126 = a0;\n
    if (*(v126) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v126) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v126);\n
    v125 = v5;\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v124 = cgc_calloc(134);\n
    if (!v124)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v124, &v22[18].padding_0[182]);\n
    cgc_strncpy(v124 + 5, *(v127), v125);\n
    v216 = v127;\n
    *(v216) = &(&*(v216)->field_4)[cgc_strlen(v124)];\n
    v218 = v126;\n
    *(v218) = *(v218) - (cgc_strlen(v124) + -4);\n
    cgc_checkheap();\n
    cgc_free(v124);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v51 = v151;\n
    v50 = a0;\n
    if (*(v50) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v50) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v50);\n
    v49 = v4;\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v48 = cgc_calloc(134);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v48, &v22[18].padding_0[182]);\n
    cgc_strncpy(v48 + 5, *(v51), v49);\n
    v220 = v51;\n
    *(v220) = &(&*(v220)->field_4)[cgc_strlen(v48)];\n
    v222 = v50;\n
    *(v222) = *(v222) - (cgc_strlen(v48) + -4);\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v145 = v151;\n
    v144 = a0;\n
    if (*(v144) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(v145)->field_0;\n
    v223 = v144;\n
    *(v223) = *(v223) - 1;\n
    v224 = v145;\n
    *(v224) = &*(v224)->padding_1;\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_44eeaa;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44eeaa:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v225 = v145;\n
    *(v225) = &(&*(v225)->field_0)[v143];\n
    v226 = v144;\n
    *(v226) = *(v226) - v143;\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v123 = v151;\n
    v122 = a0;\n
    if (*(v122) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v122) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v122);\n
    v121 = v3;\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = cgc_calloc(134);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v120, &v22[18].padding_0[182]);\n
    cgc_strncpy(v120 + 5, *(v123), v121);\n
    v228 = v123;\n
    *(v228) = &(&*(v228)->field_4)[cgc_strlen(v120)];\n
    v230 = v122;\n
    *(v230) = *(v230) - (cgc_strlen(v120) + -4);\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v95 = v151;\n
    v94 = a0;\n
    memset(&v92, 0, 12);\n
    if (*(v94) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v93 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v24 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-654, size=2, endness=Iend_LE)))));\n
    v23 = v24 | 0xc00;\n
    v27 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v92, 12, v27);\n
    v2 = &v92;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v231 = v94;\n
    *(v231) = *(v231) - 4;\n
    v232 = v95;\n
    *(v232) = &*(v232)->field_4;\n
    v119 = v151;\n
    v118 = a0;\n
    if (*(v118) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v118) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v118);\n
    v117 = v1;\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = cgc_calloc(134);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v116, &v22[18].padding_0[182]);\n
    cgc_strncpy(v116 + 5, *(v119), v117);\n
    v234 = v119;\n
    *(v234) = &(&*(v234)->field_4)[cgc_strlen(v116)];\n
    v236 = v118;\n
    *(v236) = *(v236) - (cgc_strlen(v116) + -4);\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v83 = v151;\n
    v82 = a0;\n
    memset(&v80, 0, 12);\n
    if (*(v82) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v81 = *(&*(v83)->field_0);\n
    cgc_uint2str(&v80, 12, v81);\n
    v0 = &v80;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v80)) < 0)\n
        cgc__terminate();\n
    v237 = v82;\n
    *(v237) = *(v237) - 4;\n
    v238 = v83;\n
    *(v238) = &*(v238)->field_4;\n
    v30 ^= v22->field_260;\n
    if (v30)\n
        cgc___stack_cookie_fail();\n
    v239 = a0;\n
    if (*(v239) > 0 && v29 >= 0 && v29 < 0)\n
        v239 = *((&v31 + 0x4 * v29))(v151);\n
    v240 = v150;\n
    return v239;\n
}\n
", "4519911:sub_44f7e7": null, "4519920:cgc_process_llamaadulterously": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f036c;\n
extern unsigned int g_4f0370;\n
extern unsigned int g_4f0374;\n
extern unsigned int g_4f0378;\n
\n
int cgc_process_llamaadulterously(struct struct_0 **v31, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xa4]\n
    struct_1 *v1;  // [bp-0xa0]\n
    struct_1 *v2;  // [bp-0x9c]\n
    char v3;  // [bp-0x95]\n
    struct_3 *v4;  // [bp-0x94]\n
    unsigned short v5;  // [bp-0x90]\n
    unsigned short v6;  // [bp-0x8e]\n
    unsigned long v7;  // [bp-0x8c]\n
    struct struct_2 **v8;  // [bp-0x80], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x7c]\n
    unsigned int v10;  // [bp-0x78]\n
    unsigned int v11;  // [bp-0x74]\n
    unsigned int v12;  // [bp-0x70]\n
    unsigned int v13;  // [bp-0x6c]\n
    char v14;  // [bp-0x66]\n
    char v15[2];  // [bp-0x60]\n
    unsigned short v16;  // [bp-0x5a]\n
    unsigned int *v17;  // [bp-0x58]\n
    struct struct_0 **v18;  // [bp-0x54]\n
    char *v19;  // [bp-0x50]\n
    unsigned int *v20;  // [bp-0x4c]\n
    struct struct_0 **v21;  // [bp-0x48]\n
    char v22;  // [bp-0x44]\n
    unsigned short v23;  // [bp-0x3e]\n
    unsigned int *v24;  // [bp-0x3c]\n
    struct struct_0 **v25;  // [bp-0x38]\n
    char v26;  // [bp-0x31]\n
    unsigned long v27;  // [bp-0x1c]\n
    unsigned int *v28;  // [bp-0x10]\n
    struct struct_0 **v29;  // [bp-0xc]\n
    unsigned int v30;  // [bp-0x8]\n
    unsigned int v32;  // ebx\n
    unsigned int *v33;  // eax\n
    struct struct_0 **v34;  // eax\n
    unsigned int *v35;  // eax\n
    struct struct_0 **v36;  // eax\n
    unsigned int *v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    unsigned int *v39;  // eax\n
    struct struct_0 **v40;  // eax\n
    unsigned int *v41;  // eax, Other Possible Types: unsigned int\n
    unsigned int v42;  // ebx\n
\n
    v30 = v32;\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v10 = g_4f036c;\n
    v11 = g_4f0370;\n
    v12 = g_4f0374;\n
    v13 = g_4f0378;\n
    v9 = cgc__cookie;\n
    v8 = -1;\n
    if (cgc_sendline(1, \"===llamaadulterously===\", 23) < 0)\n
        cgc__terminate();\n
    v18 = v31;\n
    v17 = a0;\n
    *(&v15) = *(v18);\n
    memset(&v14, 0, 6);\n
    if (*(v17) < 2)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v15[0] << 8)\n
        v3 = v15[1];\n
    v16 = v3 & 1;\n
    cgc_uint2str(&v14, 6, v16);\n
    v2 = &v14;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v14)) < 0)\n
        cgc__terminate();\n
    v33 = v17;\n
    *(v33) = *(v33) - 2;\n
    v34 = v18;\n
    *(v34) = *(v34) + 2;\n
    v25 = v31;\n
    v24 = a0;\n
    memset(&v22, 0, 6);\n
    if (*(v24) < 2)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = *(&*(v25));\n
    cgc_uint2str(&v22, 6, v23);\n
    v1 = &v22;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v22)) < 0)\n
        cgc__terminate();\n
    v35 = v24;\n
    *(v35) = *(v35) - 2;\n
    v36 = v25;\n
    *(v36) = *(v36) + 2;\n
    v29 = v31;\n
    v28 = a0;\n
    memset(&v26, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v27 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v6 = [D] x86g_create_fpucw(fpround<4>);\n
    v5 = v6 | 0xc00;\n
    v7 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v26, 21, v7);\n
    v0 = &v26;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v26)) < 0)\n
        cgc__terminate();\n
    v37 = v28;\n
    *(v37) = *(v37) - 8;\n
    v38 = v29;\n
    *(v38) = *(v38) + 8;\n
    v21 = v31;\n
    v20 = a0;\n
    v19 = &*(v21)->field_0;\n
    if (*(v20) < 1)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = v20;\n
    *(v39) = *(v39) - 1;\n
    v40 = v21;\n
    *(v40) = *(v40) + 1;\n
    v8 = *(v19);\n
    v9 ^= v4->field_260;\n
    if (v9)\n
        cgc___stack_cookie_fail();\n
    v41 = a0;\n
    if (*(v41) > 0 && v8 >= 0 && v8 < 4)\n
        v41 = (&v10)[v8](v31);\n
    v42 = v30;\n
    return v41;\n
}\n
", "4521294:sub_44fd4e": null, "4521296:cgc_process_llamasporocyst": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasporocyst(struct struct_0 **v161, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x350]\n
    unsigned int v1;  // [bp-0x34c]\n
    struct_1 *v2;  // [bp-0x348]\n
    char v3;  // [bp-0x341]\n
    struct_1 *v4;  // [bp-0x340]\n
    struct_1 *v5;  // [bp-0x33c]\n
    struct_1 *v6;  // [bp-0x338]\n
    unsigned int v7;  // [bp-0x334]\n
    struct_1 *v8;  // [bp-0x330]\n
    char v9;  // [bp-0x329]\n
    struct_1 *v10;  // [bp-0x328]\n
    struct_1 *v11;  // [bp-0x324]\n
    struct_1 *v12;  // [bp-0x320]\n
    char v13;  // [bp-0x319]\n
    unsigned int v14;  // [bp-0x318]\n
    struct_1 *v15;  // [bp-0x314]\n
    unsigned int v16;  // [bp-0x310]\n
    struct_1 *v17;  // [bp-0x30c]\n
    struct_1 *v18;  // [bp-0x308]\n
    char v19;  // [bp-0x301]\n
    struct_1 *v20;  // [bp-0x300]\n
    struct_1 *v21;  // [bp-0x2fc]\n
    struct_1 *v22;  // [bp-0x2f8]\n
    unsigned int v23;  // [bp-0x2f4]\n
    struct_1 *v24;  // [bp-0x2f0]\n
    struct_1 *v25;  // [bp-0x2ec]\n
    struct_3 *v26;  // [bp-0x2e8]\n
    unsigned short v27;  // [bp-0x2e4]\n
    unsigned short v28;  // [bp-0x2e2]\n
    unsigned short v29;  // [bp-0x2e0]\n
    unsigned short v30;  // [bp-0x2de]\n
    unsigned short v31;  // [bp-0x2dc]\n
    unsigned short v32;  // [bp-0x2da]\n
    unsigned short v33;  // [bp-0x2d8]\n
    unsigned short v34;  // [bp-0x2d6]\n
    unsigned short v35;  // [bp-0x2d4]\n
    unsigned short v36;  // [bp-0x2d2]\n
    unsigned short v37;  // [bp-0x2d0]\n
    unsigned short v38;  // [bp-0x2ce]\n
    unsigned long v39;  // [bp-0x2cc]\n
    unsigned long v40;  // [bp-0x2c4]\n
    unsigned long v41;  // [bp-0x2bc]\n
    unsigned long v42;  // [bp-0x2b4]\n
    unsigned long v43;  // [bp-0x2ac]\n
    unsigned long v44;  // [bp-0x2a4]\n
    struct struct_2 **v45;  // [bp-0x298]\n
    unsigned int v46;  // [bp-0x294]\n
    char v47;  // [bp-0x290]\n
    char v48;  // [bp-0x28e]\n
    char v49[2];  // [bp-0x288]\n
    unsigned short v50;  // [bp-0x282]\n
    unsigned int *v51;  // [bp-0x280]\n
    struct struct_0 **v52;  // [bp-0x27c]\n
    char v53;  // [bp-0x275]\n
    char v54[8];  // [bp-0x260]\n
    unsigned int v55;  // [bp-0x25c]\n
    void* v56;  // [bp-0x258]\n
    unsigned int *v57;  // [bp-0x254]\n
    struct struct_0 **v58;  // [bp-0x250]\n
    unsigned int v59;  // [bp-0x24c]\n
    char v60;  // [bp-0x245]\n
    unsigned int *v61;  // [bp-0x244]\n
    struct struct_0 **v62;  // [bp-0x240]\n
    char *v63;  // [bp-0x23c]\n
    unsigned int v64;  // [bp-0x238]\n
    unsigned int *v65;  // [bp-0x234]\n
    struct struct_0 **v66;  // [bp-0x230]\n
    char *v67;  // [bp-0x22c]\n
    unsigned int v68;  // [bp-0x228]\n
    unsigned int *v69;  // [bp-0x224]\n
    struct struct_0 **v70;  // [bp-0x220]\n
    char v71;  // [bp-0x21c]\n
    unsigned short v72;  // [bp-0x216]\n
    unsigned int *v73;  // [bp-0x214]\n
    struct struct_0 **v74;  // [bp-0x210]\n
    char v75;  // [bp-0x209]\n
    char v76;  // [bp-0x205]\n
    unsigned int *v77;  // [bp-0x204]\n
    struct struct_0 **v78;  // [bp-0x200]\n
    char v79;  // [bp-0x1f9]\n
    unsigned long v80;  // [bp-0x1e4]\n
    unsigned int *v81;  // [bp-0x1dc]\n
    struct struct_0 **v82;  // [bp-0x1d8]\n
    char v83;  // [bp-0x1d1]\n
    unsigned long v84;  // [bp-0x1bc]\n
    unsigned int *v85;  // [bp-0x1b4]\n
    struct struct_0 **v86;  // [bp-0x1b0]\n
    char v87;  // [bp-0x1ac]\n
    unsigned int v88;  // [bp-0x1a0]\n
    unsigned int *v89;  // [bp-0x19c]\n
    struct struct_0 **v90;  // [bp-0x198]\n
    char v91;  // [bp-0x194]\n
    unsigned int v92;  // [bp-0x188]\n
    unsigned int *v93;  // [bp-0x184]\n
    struct struct_0 **v94;  // [bp-0x180]\n
    char v95;  // [bp-0x17c]\n
    unsigned int v96;  // [bp-0x170]\n
    unsigned int *v97;  // [bp-0x16c]\n
    struct struct_0 **v98;  // [bp-0x168]\n
    char v99;  // [bp-0x164]\n
    unsigned int v100;  // [bp-0x158]\n
    unsigned int *v101;  // [bp-0x154]\n
    struct struct_0 **v102;  // [bp-0x150]\n
    char v103;  // [bp-0x14c]\n
    unsigned int v104;  // [bp-0x140]\n
    unsigned int *v105;  // [bp-0x13c]\n
    struct struct_0 **v106;  // [bp-0x138]\n
    char v107;  // [bp-0x134]\n
    unsigned int v108;  // [bp-0x128]\n
    unsigned int *v109;  // [bp-0x124]\n
    struct struct_0 **v110;  // [bp-0x120]\n
    unsigned int v111;  // [bp-0x11c]\n
    unsigned short v112;  // [bp-0x116]\n
    unsigned int *v113;  // [bp-0x114]\n
    struct struct_0 **v114;  // [bp-0x110]\n
    unsigned int v115;  // [bp-0x10c]\n
    unsigned short v116;  // [bp-0x106]\n
    unsigned int *v117;  // [bp-0x104]\n
    struct struct_0 **v118;  // [bp-0x100]\n
    unsigned int v119;  // [bp-0xfc]\n
    unsigned short v120;  // [bp-0xf6]\n
    unsigned int *v121;  // [bp-0xf4]\n
    struct struct_0 **v122;  // [bp-0xf0]\n
    char v123;  // [bp-0xec]\n
    char v124[4];  // [bp-0xe0]\n
    unsigned int v125;  // [bp-0xdc]\n
    unsigned int *v126;  // [bp-0xd8]\n
    struct struct_0 **v127;  // [bp-0xd4]\n
    char v128;  // [bp-0xd0]\n
    char v129[4];  // [bp-0xc4]\n
    unsigned int v130;  // [bp-0xc0]\n
    unsigned int *v131;  // [bp-0xbc]\n
    struct struct_0 **v132;  // [bp-0xb8]\n
    char *v133;  // [bp-0xb4]\n
    unsigned int v134;  // [bp-0xb0]\n
    unsigned int *v135;  // [bp-0xac]\n
    struct struct_0 **v136;  // [bp-0xa8]\n
    char *v137;  // [bp-0xa4]\n
    unsigned int v138;  // [bp-0xa0]\n
    unsigned int *v139;  // [bp-0x9c]\n
    struct struct_0 **v140;  // [bp-0x98]\n
    char *v141;  // [bp-0x94]\n
    unsigned int v142;  // [bp-0x90]\n
    unsigned int *v143;  // [bp-0x8c]\n
    struct struct_0 **v144;  // [bp-0x88]\n
    char v145;  // [bp-0x81]\n
    unsigned int v146;  // [bp-0x6c]\n
    unsigned int v147;  // [bp-0x68]\n
    unsigned int *v148;  // [bp-0x64]\n
    struct struct_0 **v149;  // [bp-0x60]\n
    char v150;  // [bp-0x59]\n
    unsigned int v151;  // [bp-0x44]\n
    unsigned int v152;  // [bp-0x40]\n
    unsigned int *v153;  // [bp-0x3c]\n
    struct struct_0 **v154;  // [bp-0x38]\n
    char v155;  // [bp-0x31]\n
    unsigned int v156;  // [bp-0x1c]\n
    unsigned int v157;  // [bp-0x18]\n
    unsigned int *v158;  // [bp-0x10]\n
    struct struct_0 **v159;  // [bp-0xc]\n
    unsigned int v160;  // [bp-0x8]\n
    unsigned int v162;  // ebx\n
    unsigned int *v163;  // eax\n
    struct struct_0 **v164;  // eax\n
    unsigned int *v165;  // eax\n
    struct struct_0 **v166;  // eax\n
    unsigned int *v167;  // eax\n
    struct struct_0 **v168;  // eax\n
    unsigned int *v169;  // eax\n
    struct struct_0 **v170;  // eax\n
    struct struct_0 **v172;  // eax\n
    unsigned int *v174;  // eax\n
    unsigned int *v175;  // eax\n
    struct struct_0 **v176;  // eax\n
    unsigned int v177[2];  // ecx\n
    unsigned int *v178;  // eax\n
    struct struct_0 **v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_0 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    struct struct_0 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_0 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_0 **v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_0 **v195;  // eax\n
    struct struct_0 **v197;  // eax\n
    unsigned int *v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int v202[2];  // ecx\n
    unsigned int *v203;  // eax\n
    struct struct_0 **v204;  // eax\n
    unsigned int *v205;  // eax\n
    struct struct_0 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    struct struct_0 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int v219[2];  // ecx\n
    unsigned int *v220;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v236;  // eax, Other Possible Types: unsigned int\n
    unsigned int v237;  // ebx\n
\n
    v160 = v162;\n
    v26 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v46 = cgc__cookie;\n
    v45 = -1;\n
    if (cgc_sendline(1, \"===llamasporocyst===\", 20) < 0)\n
        cgc__terminate();\n
    v122 = v161;\n
    v121 = a0;\n
    if (*(v121) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = *(&*(v122)->field_0);\n
    v163 = v121;\n
    *(v163) = *(v163) - 2;\n
    v164 = v122;\n
    *(v164) = &*(v164)->padding_1[1];\n
    if (v120 <= *(v121) && !(!v120))\n
        goto LABEL_44fedd;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_44fedd:\n
    v119 = cgc_calloc(v120);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v119, *(v122), v120);\n
    if (cgc_sendline(1, &v26[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v165 = v121;\n
    *(v165) = *(v165) - v120;\n
    v166 = v122;\n
    *(v166) = &(&*(v166)->field_0)[v120];\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    v86 = v161;\n
    v85 = a0;\n
    memset(&v83, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v84 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(fpround<4>);\n
    v37 = v38 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v83, 21, v44);\n
    v25 = &v83;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v167 = v85;\n
    *(v167) = *(v167) - 8;\n
    v168 = v86;\n
    *(v168) = &(*(v168))[1].padding_1[2];\n
    v94 = v161;\n
    v93 = a0;\n
    memset(&v91, 0, 12);\n
    if (*(v93) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 12, v92);\n
    v24 = &v91;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v169 = v93;\n
    *(v169) = *(v169) - 4;\n
    v170 = v94;\n
    *(v170) = &*(v170)->field_4;\n
    v70 = v161;\n
    v69 = a0;\n
    if (*(v69) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v69) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v69);\n
    v68 = v23;\n
    if (!v68)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = cgc_calloc(134);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v67, &v26[18].padding_0[182]);\n
    cgc_strncpy(v67 + 5, *(v70), v68);\n
    v172 = v70;\n
    *(v172) = &(&*(v172)->field_4)[cgc_strlen(v67)];\n
    v174 = v69;\n
    *(v174) = *(v174) - (cgc_strlen(v67) + -4);\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v110 = v161;\n
    v109 = a0;\n
    memset(&v107, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v108 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-718, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v107, 12, v43);\n
    v22 = &v107;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v175 = v109;\n
    *(v175) = *(v175) - 4;\n
    v176 = v110;\n
    *(v176) = &*(v176)->field_4;\n
    v159 = v161;\n
    v158 = a0;\n
    memset(&v155, 0, 21);\n
    if (*(v158) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v177 = *(v159);\n
    v157 = v177[1];\n
    v156 = v177[0];\n
    cgc_uint2str(&v155, 21, v156);\n
    v21 = &v155;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v178 = v158;\n
    *(v178) = *(v178) - 8;\n
    v179 = v159;\n
    *(v179) = &(*(v179))[1].padding_1[2];\n
    v78 = v161;\n
    v77 = a0;\n
    memset(&v75, 0, 4);\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    cgc_uint2str(&v75, 4, v76);\n
    v20 = &v75;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v180 = v77;\n
    *(v180) = *(v180) - 1;\n
    v181 = v78;\n
    *(v181) = &*(v181)->padding_1;\n
    v58 = v161;\n
    v57 = a0;\n
    *(&v54[0]) = *(v58);\n
    memset(&v53, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v54[0])\n
    {\n
        v19 = 0;\n
        if (v54[1])\n
        {\n
            v19 = 0;\n
            if (v54[2])\n
            {\n
                v19 = 0;\n
                if (v54[3])\n
                {\n
                    v19 = 0;\n
                    if (v54[4] << 24)\n
                    {\n
                        v19 = 0;\n
                        if (v54[5] << 16)\n
                        {\n
                            v19 = 0;\n
                            if (v54[6] << 8)\n
                                v19 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v55 = v19 & 1;\n
    v56 = 0;\n
    cgc_uint2str(&v53, 21, v55);\n
    v18 = &v53;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v182 = v57;\n
    *(v182) = *(v182) - 8;\n
    v183 = v58;\n
    *(v183) = &(*(v183))[1].padding_1[2];\n
    v106 = v161;\n
    v105 = a0;\n
    memset(&v103, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v104 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-722, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v103, 12, v42);\n
    v17 = &v103;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v184 = v105;\n
    *(v184) = *(v184) - 4;\n
    v185 = v106;\n
    *(v185) = &*(v185)->field_4;\n
    v144 = v161;\n
    v143 = a0;\n
    if (*(v143) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v143) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v143);\n
    v142 = v16;\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = cgc_calloc(134);\n
    if (!v141)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v141, &v26[18].padding_0[182]);\n
    cgc_strncpy(v141 + 5, *(v144), v142);\n
    v187 = v144;\n
    *(v187) = &(&*(v187)->field_4)[cgc_strlen(v141)];\n
    v189 = v143;\n
    *(v189) = *(v189) - (cgc_strlen(v141) + -4);\n
    cgc_checkheap();\n
    cgc_free(v141);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v74 = v161;\n
    v73 = a0;\n
    memset(&v71, 0, 6);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(&*(v74)->field_0);\n
    cgc_uint2str(&v71, 6, v72);\n
    v15 = &v71;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v190 = v73;\n
    *(v190) = *(v190) - 2;\n
    v191 = v74;\n
    *(v191) = &*(v191)->padding_1[1];\n
    v118 = v161;\n
    v117 = a0;\n
    if (*(v117) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(&*(v118)->field_0);\n
    v192 = v117;\n
    *(v192) = *(v192) - 2;\n
    v193 = v118;\n
    *(v193) = &*(v193)->padding_1[1];\n
    if (v116 <= *(v117) && !(!v116))\n
        goto LABEL_4511af;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4511af:\n
    v115 = cgc_calloc(v116);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v115, *(v118), v116);\n
    if (cgc_sendline(1, &v26[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v194 = v117;\n
    *(v194) = *(v194) - v116;\n
    v195 = v118;\n
    *(v195) = &(&*(v195)->field_0)[v116];\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    v66 = v161;\n
    v65 = a0;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v65) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v65);\n
    v64 = v14;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v63, &v26[18].padding_0[182]);\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v197 = v66;\n
    *(v197) = &(&*(v197)->field_4)[cgc_strlen(v63)];\n
    v199 = v65;\n
    *(v199) = *(v199) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v132 = v161;\n
    v131 = a0;\n
    *(&v129[0]) = *(v132);\n
    memset(&v128, 0, 12);\n
    if (*(v131) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v129[0] << 24)\n
    {\n
        v13 = 0;\n
        if (v129[1] << 16)\n
        {\n
            v13 = 0;\n
            if (v129[2] << 8)\n
                v13 = v129[3];\n
        }\n
    }\n
    v130 = v13 & 1;\n
    cgc_uint2str(&v128, 12, v130);\n
    v12 = &v128;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v200 = v131;\n
    *(v200) = *(v200) - 4;\n
    v201 = v132;\n
    *(v201) = &*(v201)->field_4;\n
    v154 = v161;\n
    v153 = a0;\n
    memset(&v150, 0, 21);\n
    if (*(v153) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = *(v154);\n
    v152 = v202[1];\n
    v151 = v202[0];\n
    cgc_uint2str(&v150, 21, v151);\n
    v11 = &v150;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v203 = v153;\n
    *(v203) = *(v203) - 8;\n
    v204 = v154;\n
    *(v204) = &(*(v204))[1].padding_1[2];\n
    v102 = v161;\n
    v101 = a0;\n
    memset(&v99, 0, 12);\n
    if (*(v101) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v100 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-726, size=2, endness=Iend_LE)))));\n
    v31 = v32 | 0xc00;\n
    v41 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v99, 12, v41);\n
    v10 = &v99;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v205 = v101;\n
    *(v205) = *(v205) - 4;\n
    v206 = v102;\n
    *(v206) = &*(v206)->field_4;\n
    v52 = v161;\n
    v51 = a0;\n
    *(&v49) = *(v52);\n
    memset(&v48, 0, 6);\n
    if (*(v51) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v49[0] << 8)\n
        v9 = v49[1];\n
    v50 = v9 & 1;\n
    cgc_uint2str(&v48, 6, v50);\n
    v8 = &v48;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v48)) < 0)\n
        cgc__terminate();\n
    v207 = v51;\n
    *(v207) = *(v207) - 2;\n
    v208 = v52;\n
    *(v208) = &*(v208)->padding_1[1];\n
    v140 = v161;\n
    v139 = a0;\n
    if (*(v139) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v139) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v139);\n
    v138 = v7;\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v137 = cgc_calloc(134);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v137, &v26[18].padding_0[182]);\n
    cgc_strncpy(v137 + 5, *(v140), v138);\n
    v210 = v140;\n
    *(v210) = &(&*(v210)->field_4)[cgc_strlen(v137)];\n
    v212 = v139;\n
    *(v212) = *(v212) - (cgc_strlen(v137) + -4);\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v62 = v161;\n
    v61 = a0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(v62)->field_0;\n
    v213 = v61;\n
    *(v213) = *(v213) - 1;\n
    v214 = v62;\n
    *(v214) = &*(v214)->padding_1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_451eca;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_451eca:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, &v26[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v215 = v62;\n
    *(v215) = &(&*(v215)->field_0)[v60];\n
    v216 = v61;\n
    *(v216) = *(v216) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v90 = v161;\n
    v89 = a0;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 12, v88);\n
    v6 = &v87;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v217 = v89;\n
    *(v217) = *(v217) - 4;\n
    v218 = v90;\n
    *(v218) = &*(v218)->field_4;\n
    v149 = v161;\n
    v148 = a0;\n
    memset(&v145, 0, 21);\n
    if (*(v148) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v219 = *(v149);\n
    v147 = v219[1];\n
    v146 = v219[0];\n
    cgc_uint2str(&v145, 21, v146);\n
    v5 = &v145;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v145)) < 0)\n
        cgc__terminate();\n
    v220 = v148;\n
    *(v220) = *(v220) - 8;\n
    v221 = v149;\n
    *(v221) = &(*(v221))[1].padding_1[2];\n
    v98 = v161;\n
    v97 = a0;\n
    memset(&v95, 0, 12);\n
    if (*(v97) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v96 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v30 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-730, size=2, endness=Iend_LE)))));\n
    v29 = v30 | 0xc00;\n
    v40 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v95, 12, v40);\n
    v4 = &v95;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v222 = v97;\n
    *(v222) = *(v222) - 4;\n
    v223 = v98;\n
    *(v223) = &*(v223)->field_4;\n
    v127 = v161;\n
    v126 = a0;\n
    *(&v124[0]) = *(v127);\n
    memset(&v123, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v124[0] << 24)\n
    {\n
        v3 = 0;\n
        if (v124[1] << 16)\n
        {\n
            v3 = 0;\n
            if (v124[2] << 8)\n
                v3 = v124[3];\n
        }\n
    }\n
    v125 = v3 & 1;\n
    cgc_uint2str(&v123, 12, v125);\n
    v2 = &v123;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v224 = v126;\n
    *(v224) = *(v224) - 4;\n
    v225 = v127;\n
    *(v225) = &*(v225)->field_4;\n
    v114 = v161;\n
    v113 = a0;\n
    if (*(v113) < 2)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(&*(v114)->field_0);\n
    v226 = v113;\n
    *(v226) = *(v226) - 2;\n
    v227 = v114;\n
    *(v227) = &*(v227)->padding_1[1];\n
    if (v112 <= *(v113) && !(!v112))\n
        goto LABEL_4526a1;\n
    if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4526a1:\n
    v111 = cgc_calloc(v112);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v111, *(v114), v112);\n
    if (cgc_sendline(1, &v26[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v228 = v113;\n
    *(v228) = *(v228) - v112;\n
    v229 = v114;\n
    *(v229) = &(&*(v229)->field_0)[v112];\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    v136 = v161;\n
    v135 = a0;\n
    if (*(v135) <= 0)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v135) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v135);\n
    v134 = v1;\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = cgc_calloc(134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v133, &v26[18].padding_0[182]);\n
    cgc_strncpy(v133 + 5, *(v136), v134);\n
    v231 = v136;\n
    *(v231) = &(&*(v231)->field_4)[cgc_strlen(v133)];\n
    v233 = v135;\n
    *(v233) = *(v233) - (cgc_strlen(v133) + -4);\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    if (cgc_sendline(1, &v26[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v82 = v161;\n
    v81 = a0;\n
    memset(&v79, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v26[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v28 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-734, size=2, endness=Iend_LE)))));\n
    v27 = v28 | 0xc00;\n
    v39 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v79, 21, v39);\n
    v0 = &v79;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v234 = v81;\n
    *(v234) = *(v234) - 8;\n
    v235 = v82;\n
    *(v235) = &(*(v235))[1].padding_1[2];\n
    v46 ^= v26->field_260;\n
    if (v46)\n
        cgc___stack_cookie_fail();\n
    v236 = a0;\n
    if (*(v236) > 0 && v45 >= 0 && v45 < 0)\n
        v236 = *((&v47 + 0x4 * v45))(v161);\n
    v237 = v160;\n
    return v236;\n
}\n
", "4533307:sub_452c3b": null, "4533312:cgc_process_llamahalochromy": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamahalochromy(struct struct_1 **v115, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x2a0]\n
    struct_2 *v1;  // [bp-0x29c]\n
    struct_2 *v2;  // [bp-0x298]\n
    char v3;  // [bp-0x291]\n
    struct_2 *v4;  // [bp-0x290]\n
    struct_2 *v5;  // [bp-0x28c]\n
    struct_2 *v6;  // [bp-0x288]\n
    char v7;  // [bp-0x281]\n
    struct_2 *v8;  // [bp-0x280]\n
    char v9;  // [bp-0x279]\n
    struct_2 *v10;  // [bp-0x278]\n
    unsigned int v11;  // [bp-0x274]\n
    unsigned int v12;  // [bp-0x270]\n
    struct_2 *v13;  // [bp-0x26c]\n
    unsigned int v14;  // [bp-0x268]\n
    struct_2 *v15;  // [bp-0x264]\n
    struct_2 *v16;  // [bp-0x260]\n
    struct_2 *v17;  // [bp-0x25c]\n
    struct_3 *v18;  // [bp-0x258]\n
    unsigned short v19;  // [bp-0x254]\n
    unsigned short v20;  // [bp-0x252]\n
    unsigned short v21;  // [bp-0x250]\n
    unsigned short v22;  // [bp-0x24e]\n
    unsigned long v23;  // [bp-0x24c]\n
    unsigned long v24;  // [bp-0x244]\n
    struct struct_4 **v25;  // [bp-0x238]\n
    unsigned int v26;  // [bp-0x234]\n
    char v27;  // [bp-0x230]\n
    char v28;  // [bp-0x22d]\n
    char v29[8];  // [bp-0x218]\n
    unsigned int v30;  // [bp-0x214]\n
    void* v31;  // [bp-0x210]\n
    unsigned int *v32;  // [bp-0x208]\n
    struct struct_1 **v33;  // [bp-0x204]\n
    char v34;  // [bp-0x1fd]\n
    char v35[8];  // [bp-0x1e8]\n
    unsigned int v36;  // [bp-0x1e4]\n
    void* v37;  // [bp-0x1e0]\n
    unsigned int *v38;  // [bp-0x1d8]\n
    struct struct_1 **v39;  // [bp-0x1d4]\n
    char v40;  // [bp-0x1cd]\n
    char v41[8];  // [bp-0x1b8]\n
    unsigned int v42;  // [bp-0x1b4]\n
    void* v43;  // [bp-0x1b0]\n
    unsigned int *v44;  // [bp-0x1ac]\n
    struct struct_1 **v45;  // [bp-0x1a8]\n
    unsigned int v46;  // [bp-0x1a4]\n
    char v47;  // [bp-0x19d]\n
    unsigned int *v48;  // [bp-0x19c]\n
    struct struct_1 **v49;  // [bp-0x198]\n
    char *v50;  // [bp-0x194]\n
    unsigned int v51;  // [bp-0x190]\n
    unsigned int *v52;  // [bp-0x18c]\n
    struct struct_1 **v53;  // [bp-0x188]\n
    char v54;  // [bp-0x184]\n
    unsigned short v55;  // [bp-0x17e]\n
    unsigned int *v56;  // [bp-0x17c]\n
    struct struct_1 **v57;  // [bp-0x178]\n
    char v58;  // [bp-0x171]\n
    char v59;  // [bp-0x16d]\n
    unsigned int *v60;  // [bp-0x16c]\n
    struct struct_1 **v61;  // [bp-0x168]\n
    char v62;  // [bp-0x161]\n
    unsigned long v63;  // [bp-0x14c]\n
    unsigned int *v64;  // [bp-0x144]\n
    struct struct_1 **v65;  // [bp-0x140]\n
    char v66;  // [bp-0x139]\n
    unsigned long v67;  // [bp-0x124]\n
    unsigned int *v68;  // [bp-0x11c]\n
    struct struct_1 **v69;  // [bp-0x118]\n
    char v70;  // [bp-0x114]\n
    unsigned int v71;  // [bp-0x108]\n
    unsigned int *v72;  // [bp-0x104]\n
    struct struct_1 **v73;  // [bp-0x100]\n
    unsigned int v74;  // [bp-0xfc]\n
    unsigned short v75;  // [bp-0xf6]\n
    unsigned int *v76;  // [bp-0xf4]\n
    struct struct_1 **v77;  // [bp-0xf0]\n
    unsigned int v78;  // [bp-0xec]\n
    unsigned short v79;  // [bp-0xe6]\n
    unsigned int *v80;  // [bp-0xe4]\n
    struct struct_1 **v81;  // [bp-0xe0]\n
    unsigned int v82;  // [bp-0xdc]\n
    unsigned short v83;  // [bp-0xd6]\n
    unsigned int *v84;  // [bp-0xd4]\n
    struct struct_1 **v85;  // [bp-0xd0]\n
    char *v86;  // [bp-0xcc]\n
    unsigned int v87;  // [bp-0xc8]\n
    unsigned int *v88;  // [bp-0xc4]\n
    struct struct_1 **v89;  // [bp-0xc0]\n
    char *v90;  // [bp-0xbc]\n
    unsigned int v91;  // [bp-0xb8]\n
    unsigned int *v92;  // [bp-0xb4]\n
    struct struct_1 **v93;  // [bp-0xb0]\n
    char v94;  // [bp-0xa9]\n
    unsigned int v95;  // [bp-0x94]\n
    unsigned int v96;  // [bp-0x90]\n
    unsigned int *v97;  // [bp-0x8c]\n
    struct struct_1 **v98;  // [bp-0x88]\n
    char v99;  // [bp-0x81]\n
    unsigned int v100;  // [bp-0x6c]\n
    unsigned int v101;  // [bp-0x68]\n
    unsigned int *v102;  // [bp-0x64]\n
    struct struct_1 **v103;  // [bp-0x60]\n
    char v104;  // [bp-0x59]\n
    unsigned int v105;  // [bp-0x44]\n
    unsigned int v106;  // [bp-0x40]\n
    unsigned int *v107;  // [bp-0x3c]\n
    struct struct_1 **v108;  // [bp-0x38]\n
    char v109;  // [bp-0x31]\n
    unsigned int v110;  // [bp-0x1c]\n
    unsigned int v111;  // [bp-0x18]\n
    unsigned int *v112;  // [bp-0x10]\n
    struct struct_1 **v113;  // [bp-0xc]\n
    unsigned int v114;  // [bp-0x8]\n
    unsigned int v116;  // ebx\n
    unsigned int *v117;  // eax\n
    struct struct_1 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    struct struct_1 **v120;  // eax\n
    unsigned int *v121;  // eax\n
    struct struct_1 **v122;  // eax\n
    unsigned int *v123;  // eax\n
    struct struct_1 **v124;  // eax\n
    unsigned int *v125;  // eax\n
    struct struct_1 **v126;  // eax\n
    struct struct_1 **v128;  // eax\n
    unsigned int *v130;  // eax\n
    unsigned int *v131;  // eax\n
    struct struct_1 **v132;  // eax\n
    struct struct_1 **v133;  // eax\n
    unsigned int *v134;  // eax\n
    struct_0 *v135;  // ecx\n
    unsigned int *v136;  // eax\n
    struct struct_1 **v137;  // eax\n
    struct struct_1 **v139;  // eax\n
    unsigned int *v141;  // eax\n
    struct struct_1 **v143;  // eax\n
    unsigned int *v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_1 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_1 **v149;  // eax\n
    unsigned int v150[2];  // ecx\n
    unsigned int *v151;  // eax\n
    struct struct_1 **v152;  // eax\n
    unsigned int *v153;  // eax\n
    struct struct_1 **v154;  // eax\n
    unsigned int *v155;  // eax\n
    struct struct_1 **v156;  // eax\n
    unsigned int *v157;  // eax\n
    struct struct_1 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    struct struct_1 **v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_1 **v162;  // eax\n
    unsigned int v163[2];  // ecx\n
    unsigned int *v164;  // eax\n
    struct struct_1 **v165;  // eax\n
    unsigned int *v166;  // eax\n
    struct struct_1 **v167;  // eax\n
    unsigned int v168[2];  // ecx\n
    unsigned int *v169;  // eax\n
    struct struct_1 **v170;  // eax\n
    unsigned int *v171;  // eax\n
    struct struct_1 **v172;  // eax\n
    unsigned int *v173;  // eax, Other Possible Types: unsigned int\n
    unsigned int v174;  // ebx\n
\n
    v114 = v116;\n
    v18 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v26 = cgc__cookie;\n
    v25 = -1;\n
    if (cgc_sendline(1, \"===llamahalochromy===\", 21) < 0)\n
        cgc__terminate();\n
    v73 = v115;\n
    v72 = a0;\n
    memset(&v70, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(&*(v73)->field_0);\n
    cgc_uint2str(&v70, 12, v71);\n
    v17 = &v70;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v117 = v72;\n
    *(v117) = *(v117) - 4;\n
    v118 = v73;\n
    *(v118) = &*(v118)->field_4;\n
    v69 = v115;\n
    v68 = a0;\n
    memset(&v66, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v67 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v22 = [D] x86g_create_fpucw(fpround<4>);\n
    v21 = v22 | 0xc00;\n
    v24 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v66, 21, v24);\n
    v16 = &v66;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v119 = v68;\n
    *(v119) = *(v119) - 8;\n
    v120 = v69;\n
    *(v120) = &(*(v120))[1].padding_1[2];\n
    v85 = v115;\n
    v84 = a0;\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(&*(v85)->field_0);\n
    v121 = v84;\n
    *(v121) = *(v121) - 2;\n
    v122 = v85;\n
    *(v122) = &*(v122)->padding_1[1];\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_453084;\n
    if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_453084:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, &v18[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v123 = v84;\n
    *(v123) = *(v123) - v83;\n
    v124 = v85;\n
    *(v124) = &(&*(v124)->field_0)[v83];\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v61 = v115;\n
    v60 = a0;\n
    memset(&v58, 0, 4);\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(v61)->field_0;\n
    cgc_uint2str(&v58, 4, v59);\n
    v15 = &v58;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v125 = v60;\n
    *(v125) = *(v125) - 1;\n
    v126 = v61;\n
    *(v126) = &*(v126)->padding_1;\n
    v93 = v115;\n
    v92 = a0;\n
    if (*(v92) <= 0)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v92) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v92);\n
    v91 = v14;\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = cgc_calloc(134);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v90, &v18[18].padding_0[182]);\n
    cgc_strncpy(v90 + 5, *(v93), v91);\n
    v128 = v93;\n
    *(v128) = &(&*(v128)->field_4)[cgc_strlen(v90)];\n
    v130 = v92;\n
    *(v130) = *(v130) - (cgc_strlen(v90) + -4);\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    if (cgc_sendline(1, &v18[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v49 = v115;\n
    v48 = a0;\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v47 = *(v49)->field_0;\n
    v131 = v48;\n
    *(v131) = *(v131) - 1;\n
    v132 = v49;\n
    *(v132) = &*(v132)->padding_1;\n
    if (v47 <= *(v48) && !(!v47))\n
        goto LABEL_453681;\n
    if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_453681:\n
    v46 = cgc_calloc(v47);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v46, *(v49), v47);\n
    if (cgc_sendline(1, &v18[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v133 = v49;\n
    *(v133) = &(&*(v133)->field_0)[v47];\n
    v134 = v48;\n
    *(v134) = *(v134) - v47;\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    v113 = v115;\n
    v112 = a0;\n
    memset(&v109, 0, 21);\n
    if (*(v112) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(v113);\n
    v111 = v135->field_4;\n
    v110 = *(&v135->field_0);\n
    cgc_uint2str(&v109, 21, v110);\n
    v13 = &v109;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v136 = v112;\n
    *(v136) = *(v136) - 8;\n
    v137 = v113;\n
    *(v137) = &(*(v137))[1].padding_1[2];\n
    v89 = v115;\n
    v88 = a0;\n
    if (*(v88) <= 0)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v88) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v88);\n
    v87 = v12;\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = cgc_calloc(134);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v86, &v18[18].padding_0[182]);\n
    cgc_strncpy(v86 + 5, *(v89), v87);\n
    v139 = v89;\n
    *(v139) = &(&*(v139)->field_4)[cgc_strlen(v86)];\n
    v141 = v88;\n
    *(v141) = *(v141) - (cgc_strlen(v86) + -4);\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    if (cgc_sendline(1, &v18[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v53 = v115;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v52);\n
    v51 = v11;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v18[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v143 = v53;\n
    *(v143) = &(&*(v143)->field_4)[cgc_strlen(v50)];\n
    v145 = v52;\n
    *(v145) = *(v145) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v18[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v81 = v115;\n
    v80 = a0;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(&*(v81)->field_0);\n
    v146 = v80;\n
    *(v146) = *(v146) - 2;\n
    v147 = v81;\n
    *(v147) = &*(v147)->padding_1[1];\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_453ee2;\n
    if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_453ee2:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, &v18[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v148 = v80;\n
    *(v148) = *(v148) - v79;\n
    v149 = v81;\n
    *(v149) = &(&*(v149)->field_0)[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v108 = v115;\n
    v107 = a0;\n
    memset(&v104, 0, 21);\n
    if (*(v107) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v150 = *(v108);\n
    v106 = v150[1];\n
    v105 = v150[0];\n
    cgc_uint2str(&v104, 21, v105);\n
    v10 = &v104;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v104)) < 0)\n
        cgc__terminate();\n
    v151 = v107;\n
    *(v151) = *(v151) - 8;\n
    v152 = v108;\n
    *(v152) = &(*(v152))[1].padding_1[2];\n
    v45 = v115;\n
    v44 = a0;\n
    *(&v41[0]) = *(v45);\n
    memset(&v40, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v41[0])\n
    {\n
        v9 = 0;\n
        if (v41[1])\n
        {\n
            v9 = 0;\n
            if (v41[2])\n
            {\n
                v9 = 0;\n
                if (v41[3])\n
                {\n
                    v9 = 0;\n
                    if (v41[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v41[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v41[6] << 8)\n
                                v9 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v42 = v9 & 1;\n
    v43 = 0;\n
    cgc_uint2str(&v40, 21, v42);\n
    v8 = &v40;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v153 = v44;\n
    *(v153) = *(v153) - 8;\n
    v154 = v45;\n
    *(v154) = &(*(v154))[1].padding_1[2];\n
    v39 = v115;\n
    v38 = a0;\n
    *(&v35[0]) = *(v39);\n
    memset(&v34, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v35[0])\n
    {\n
        v7 = 0;\n
        if (v35[1])\n
        {\n
            v7 = 0;\n
            if (v35[2])\n
            {\n
                v7 = 0;\n
                if (v35[3])\n
                {\n
                    v7 = 0;\n
                    if (v35[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v35[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v35[6] << 8)\n
                                v7 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v36 = v7 & 1;\n
    v37 = 0;\n
    cgc_uint2str(&v34, 21, v36);\n
    v6 = &v34;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v155 = v38;\n
    *(v155) = *(v155) - 8;\n
    v156 = v39;\n
    *(v156) = &(*(v156))[1].padding_1[2];\n
    v57 = v115;\n
    v56 = a0;\n
    memset(&v54, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = *(&*(v57)->field_0);\n
    cgc_uint2str(&v54, 6, v55);\n
    v5 = &v54;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v157 = v56;\n
    *(v157) = *(v157) - 2;\n
    v158 = v57;\n
    *(v158) = &*(v158)->padding_1[1];\n
    v77 = v115;\n
    v76 = a0;\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    v159 = v76;\n
    *(v159) = *(v159) - 2;\n
    v160 = v77;\n
    *(v160) = &*(v160)->padding_1[1];\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_454817;\n
    if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_454817:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, &v18[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v161 = v76;\n
    *(v161) = *(v161) - v75;\n
    v162 = v77;\n
    *(v162) = &(&*(v162)->field_0)[v75];\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v103 = v115;\n
    v102 = a0;\n
    memset(&v99, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = *(v103);\n
    v101 = v163[1];\n
    v100 = v163[0];\n
    cgc_uint2str(&v99, 21, v100);\n
    v4 = &v99;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v164 = v102;\n
    *(v164) = *(v164) - 8;\n
    v165 = v103;\n
    *(v165) = &(*(v165))[1].padding_1[2];\n
    v33 = v115;\n
    v32 = a0;\n
    *(&v29[0]) = *(v33);\n
    memset(&v28, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v29[0])\n
    {\n
        v3 = 0;\n
        if (v29[1])\n
        {\n
            v3 = 0;\n
            if (v29[2])\n
            {\n
                v3 = 0;\n
                if (v29[3])\n
                {\n
                    v3 = 0;\n
                    if (v29[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v29[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v29[6] << 8)\n
                                v3 = v29[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v30 = v3 & 1;\n
    v31 = 0;\n
    cgc_uint2str(&v28, 21, v30);\n
    v2 = &v28;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v28)) < 0)\n
        cgc__terminate();\n
    v166 = v32;\n
    *(v166) = *(v166) - 8;\n
    v167 = v33;\n
    *(v167) = &(*(v167))[1].padding_1[2];\n
    v98 = v115;\n
    v97 = a0;\n
    memset(&v94, 0, 21);\n
    if (*(v97) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v168 = *(v98);\n
    v96 = v168[1];\n
    v95 = v168[0];\n
    cgc_uint2str(&v94, 21, v95);\n
    v1 = &v94;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v169 = v97;\n
    *(v169) = *(v169) - 8;\n
    v170 = v98;\n
    *(v170) = &(*(v170))[1].padding_1[2];\n
    v65 = v115;\n
    v64 = a0;\n
    memset(&v62, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v63 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v20 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-590, size=2, endness=Iend_LE)))));\n
    v19 = v20 | 0xc00;\n
    v23 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v62, 21, v23);\n
    v0 = &v62;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v171 = v64;\n
    *(v171) = *(v171) - 8;\n
    v172 = v65;\n
    *(v172) = &(*(v172))[1].padding_1[2];\n
    v26 ^= v18->field_260;\n
    if (v26)\n
        cgc___stack_cookie_fail();\n
    v173 = a0;\n
    if (*(v173) > 0 && v25 >= 0 && v25 < 0)\n
        v173 = *((&v27 + 0x4 * v25))(v115);\n
    v174 = v114;\n
    return v173;\n
}\n
", "4542441:sub_454fe9": null, "4542448:cgc_process_llamafluctuate": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamafluctuate(struct struct_0 **v249, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x52c]\n
    struct_1 *v1;  // [bp-0x528]\n
    struct_1 *v2;  // [bp-0x524]\n
    char v3;  // [bp-0x51d]\n
    struct_1 *v4;  // [bp-0x51c]\n
    struct_1 *v5;  // [bp-0x518]\n
    unsigned int v6;  // [bp-0x514]\n
    struct_1 *v7;  // [bp-0x510]\n
    unsigned int v8;  // [bp-0x50c]\n
    struct_1 *v9;  // [bp-0x508]\n
    struct_1 *v10;  // [bp-0x504]\n
    char v11;  // [bp-0x4fd]\n
    struct_1 *v12;  // [bp-0x4fc]\n
    struct_1 *v13;  // [bp-0x4f8]\n
    unsigned int v14;  // [bp-0x4f4]\n
    struct_1 *v15;  // [bp-0x4f0]\n
    struct_1 *v16;  // [bp-0x4ec]\n
    char v17;  // [bp-0x4e5]\n
    struct_1 *v18;  // [bp-0x4e4]\n
    struct_1 *v19;  // [bp-0x4e0]\n
    struct_1 *v20;  // [bp-0x4dc]\n
    struct_1 *v21;  // [bp-0x4d8]\n
    struct_1 *v22;  // [bp-0x4d4]\n
    unsigned int v23;  // [bp-0x4d0]\n
    struct_1 *v24;  // [bp-0x4cc]\n
    struct_1 *v25;  // [bp-0x4c8]\n
    struct_1 *v26;  // [bp-0x4c4]\n
    char v27;  // [bp-0x4bd]\n
    struct_1 *v28;  // [bp-0x4bc]\n
    struct_1 *v29;  // [bp-0x4b8]\n
    char v30;  // [bp-0x4b1]\n
    struct_1 *v31;  // [bp-0x4b0]\n
    struct_1 *v32;  // [bp-0x4ac]\n
    struct_1 *v33;  // [bp-0x4a8]\n
    struct_1 *v34;  // [bp-0x4a4]\n
    struct_2 *v35;  // [bp-0x4a0]\n
    unsigned short v36;  // [bp-0x49c]\n
    unsigned short v37;  // [bp-0x49a]\n
    unsigned short v38;  // [bp-0x498]\n
    unsigned short v39;  // [bp-0x496]\n
    unsigned short v40;  // [bp-0x494]\n
    unsigned short v41;  // [bp-0x492]\n
    unsigned short v42;  // [bp-0x490]\n
    unsigned short v43;  // [bp-0x48e]\n
    unsigned short v44;  // [bp-0x48c]\n
    unsigned short v45;  // [bp-0x48a]\n
    unsigned short v46;  // [bp-0x488]\n
    unsigned short v47;  // [bp-0x486]\n
    unsigned short v48;  // [bp-0x484]\n
    unsigned short v49;  // [bp-0x482]\n
    unsigned short v50;  // [bp-0x480]\n
    unsigned short v51;  // [bp-0x47e]\n
    unsigned short v52;  // [bp-0x47c]\n
    unsigned short v53;  // [bp-0x47a]\n
    unsigned short v54;  // [bp-0x478]\n
    unsigned short v55;  // [bp-0x476]\n
    unsigned long v56;  // [bp-0x474]\n
    unsigned long v57;  // [bp-0x46c]\n
    unsigned long v58;  // [bp-0x464]\n
    unsigned long v59;  // [bp-0x45c]\n
    unsigned long v60;  // [bp-0x454]\n
    unsigned long v61;  // [bp-0x44c]\n
    unsigned long v62;  // [bp-0x444]\n
    unsigned long v63;  // [bp-0x43c]\n
    unsigned long v64;  // [bp-0x434]\n
    unsigned long v65;  // [bp-0x42c]\n
    struct struct_3 **v66;  // [bp-0x420]\n
    unsigned int v67;  // [bp-0x41c]\n
    char v68;  // [bp-0x418]\n
    char v69;  // [bp-0x416]\n
    char v70[2];  // [bp-0x410]\n
    unsigned short v71;  // [bp-0x40a]\n
    unsigned int *v72;  // [bp-0x408]\n
    struct struct_0 **v73;  // [bp-0x404]\n
    char v74;  // [bp-0x3fd]\n
    char v75[8];  // [bp-0x3e8]\n
    unsigned int v76;  // [bp-0x3e4]\n
    void* v77;  // [bp-0x3e0]\n
    unsigned int *v78;  // [bp-0x3d8]\n
    struct struct_0 **v79;  // [bp-0x3d4]\n
    char v80;  // [bp-0x3cd]\n
    char v81[8];  // [bp-0x3b8]\n
    unsigned int v82;  // [bp-0x3b4]\n
    void* v83;  // [bp-0x3b0]\n
    unsigned int *v84;  // [bp-0x3ac]\n
    struct struct_0 **v85;  // [bp-0x3a8]\n
    unsigned int v86;  // [bp-0x3a4]\n
    char v87;  // [bp-0x39d]\n
    unsigned int *v88;  // [bp-0x39c]\n
    struct struct_0 **v89;  // [bp-0x398]\n
    unsigned int v90;  // [bp-0x394]\n
    char v91;  // [bp-0x38d]\n
    unsigned int *v92;  // [bp-0x38c]\n
    struct struct_0 **v93;  // [bp-0x388]\n
    unsigned int v94;  // [bp-0x384]\n
    char v95;  // [bp-0x37d]\n
    unsigned int *v96;  // [bp-0x37c]\n
    struct struct_0 **v97;  // [bp-0x378]\n
    char *v98;  // [bp-0x374]\n
    unsigned int v99;  // [bp-0x370]\n
    unsigned int *v100;  // [bp-0x36c]\n
    struct struct_0 **v101;  // [bp-0x368]\n
    char *v102;  // [bp-0x364]\n
    unsigned int v103;  // [bp-0x360]\n
    unsigned int *v104;  // [bp-0x35c]\n
    struct struct_0 **v105;  // [bp-0x358]\n
    char v106;  // [bp-0x354]\n
    unsigned short v107;  // [bp-0x34e]\n
    unsigned int *v108;  // [bp-0x34c]\n
    struct struct_0 **v109;  // [bp-0x348]\n
    char v110;  // [bp-0x341]\n
    char v111;  // [bp-0x33d]\n
    unsigned int *v112;  // [bp-0x33c]\n
    struct struct_0 **v113;  // [bp-0x338]\n
    char v114;  // [bp-0x331]\n
    char v115;  // [bp-0x32d]\n
    unsigned int *v116;  // [bp-0x32c]\n
    struct struct_0 **v117;  // [bp-0x328]\n
    char v118;  // [bp-0x321]\n
    unsigned long v119;  // [bp-0x30c]\n
    unsigned int *v120;  // [bp-0x304]\n
    struct struct_0 **v121;  // [bp-0x300]\n
    char v122;  // [bp-0x2f9]\n
    unsigned long v123;  // [bp-0x2e4]\n
    unsigned int *v124;  // [bp-0x2dc]\n
    struct struct_0 **v125;  // [bp-0x2d8]\n
    char v126;  // [bp-0x2d1]\n
    unsigned long v127;  // [bp-0x2bc]\n
    unsigned int *v128;  // [bp-0x2b4]\n
    struct struct_0 **v129;  // [bp-0x2b0]\n
    char v130;  // [bp-0x2a9]\n
    unsigned long v131;  // [bp-0x294]\n
    unsigned int *v132;  // [bp-0x28c]\n
    struct struct_0 **v133;  // [bp-0x288]\n
    char v134;  // [bp-0x284]\n
    unsigned int v135;  // [bp-0x278]\n
    unsigned int *v136;  // [bp-0x274]\n
    struct struct_0 **v137;  // [bp-0x270]\n
    char v138;  // [bp-0x26c]\n
    unsigned int v139;  // [bp-0x260]\n
    unsigned int *v140;  // [bp-0x25c]\n
    struct struct_0 **v141;  // [bp-0x258]\n
    char v142;  // [bp-0x254]\n
    unsigned int v143;  // [bp-0x248]\n
    unsigned int *v144;  // [bp-0x244]\n
    struct struct_0 **v145;  // [bp-0x240]\n
    char v146;  // [bp-0x23c]\n
    unsigned int v147;  // [bp-0x230]\n
    unsigned int *v148;  // [bp-0x22c]\n
    struct struct_0 **v149;  // [bp-0x228]\n
    char v150;  // [bp-0x224]\n
    unsigned int v151;  // [bp-0x218]\n
    unsigned int *v152;  // [bp-0x214]\n
    struct struct_0 **v153;  // [bp-0x210]\n
    char v154;  // [bp-0x20c]\n
    unsigned int v155;  // [bp-0x200]\n
    unsigned int *v156;  // [bp-0x1fc]\n
    struct struct_0 **v157;  // [bp-0x1f8]\n
    char v158;  // [bp-0x1f4]\n
    unsigned int v159;  // [bp-0x1e8]\n
    unsigned int *v160;  // [bp-0x1e4]\n
    struct struct_0 **v161;  // [bp-0x1e0]\n
    char v162;  // [bp-0x1dc]\n
    unsigned int v163;  // [bp-0x1d0]\n
    unsigned int *v164;  // [bp-0x1cc]\n
    struct struct_0 **v165;  // [bp-0x1c8]\n
    char v166;  // [bp-0x1c4]\n
    unsigned int v167;  // [bp-0x1b8]\n
    unsigned int *v168;  // [bp-0x1b4]\n
    struct struct_0 **v169;  // [bp-0x1b0]\n
    char v170;  // [bp-0x1ac]\n
    unsigned int v171;  // [bp-0x1a0]\n
    unsigned int *v172;  // [bp-0x19c]\n
    struct struct_0 **v173;  // [bp-0x198]\n
    unsigned int v174;  // [bp-0x194]\n
    unsigned short v175;  // [bp-0x18e]\n
    unsigned int *v176;  // [bp-0x18c]\n
    struct struct_0 **v177;  // [bp-0x188]\n
    unsigned int v178;  // [bp-0x184]\n
    unsigned short v179;  // [bp-0x17e]\n
    unsigned int *v180;  // [bp-0x17c]\n
    struct struct_0 **v181;  // [bp-0x178]\n
    unsigned int v182;  // [bp-0x174]\n
    unsigned short v183;  // [bp-0x16e]\n
    unsigned int *v184;  // [bp-0x16c]\n
    struct struct_0 **v185;  // [bp-0x168]\n
    unsigned int v186;  // [bp-0x164]\n
    unsigned short v187;  // [bp-0x15e]\n
    unsigned int *v188;  // [bp-0x15c]\n
    struct struct_0 **v189;  // [bp-0x158]\n
    unsigned int v190;  // [bp-0x154]\n
    unsigned short v191;  // [bp-0x14e]\n
    unsigned int *v192;  // [bp-0x14c]\n
    struct struct_0 **v193;  // [bp-0x148]\n
    unsigned int v194;  // [bp-0x144]\n
    unsigned short v195;  // [bp-0x13e]\n
    unsigned int *v196;  // [bp-0x13c]\n
    struct struct_0 **v197;  // [bp-0x138]\n
    char v198;  // [bp-0x134]\n
    char v199[4];  // [bp-0x128]\n
    unsigned int v200;  // [bp-0x124]\n
    unsigned int *v201;  // [bp-0x120]\n
    struct struct_0 **v202;  // [bp-0x11c]\n
    char v203;  // [bp-0x118]\n
    char v204[4];  // [bp-0x10c]\n
    unsigned int v205;  // [bp-0x108]\n
    unsigned int *v206;  // [bp-0x104]\n
    struct struct_0 **v207;  // [bp-0x100]\n
    char *v208;  // [bp-0xfc]\n
    unsigned int v209;  // [bp-0xf8]\n
    unsigned int *v210;  // [bp-0xf4]\n
    struct struct_0 **v211;  // [bp-0xf0]\n
    char *v212;  // [bp-0xec]\n
    unsigned int v213;  // [bp-0xe8]\n
    unsigned int *v214;  // [bp-0xe4]\n
    struct struct_0 **v215;  // [bp-0xe0]\n
    char v216;  // [bp-0xd9]\n
    unsigned int v217;  // [bp-0xc4]\n
    unsigned int v218;  // [bp-0xc0]\n
    unsigned int *v219;  // [bp-0xbc]\n
    struct struct_0 **v220;  // [bp-0xb8]\n
    char v221;  // [bp-0xb1]\n
    unsigned int v222;  // [bp-0x9c]\n
    unsigned int v223;  // [bp-0x98]\n
    unsigned int *v224;  // [bp-0x94]\n
    struct struct_0 **v225;  // [bp-0x90]\n
    char v226;  // [bp-0x89]\n
    unsigned int v227;  // [bp-0x74]\n
    unsigned int v228;  // [bp-0x70]\n
    unsigned int *v229;  // [bp-0x6c]\n
    struct struct_0 **v230;  // [bp-0x68]\n
    char v231;  // [bp-0x61]\n
    unsigned int v232;  // [bp-0x4c]\n
    unsigned int v233;  // [bp-0x48]\n
    unsigned int *v234;  // [bp-0x40]\n
    struct struct_0 **v235;  // [bp-0x3c]\n
    unsigned int v236;  // [bp-0x38]\n
    char v237;  // [bp-0x31]\n
    unsigned int *v238;  // [bp-0x30]\n
    struct struct_0 **v239;  // [bp-0x2c]\n
    unsigned int v240;  // [bp-0x28]\n
    char v241;  // [bp-0x21]\n
    unsigned int *v242;  // [bp-0x20]\n
    struct struct_0 **v243;  // [bp-0x1c]\n
    unsigned int v244;  // [bp-0x18]\n
    char v245;  // [bp-0x11]\n
    unsigned int *v246;  // [bp-0x10]\n
    struct struct_0 **v247;  // [bp-0xc]\n
    unsigned int v248;  // [bp-0x8]\n
    unsigned int v250;  // ebx\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int v273[2];  // ecx\n
    unsigned int *v274;  // eax\n
    struct struct_0 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_0 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    struct struct_0 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_0 **v285;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v289;  // eax\n
    unsigned int v290[2];  // ecx\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_0 **v294;  // eax\n
    struct struct_0 **v295;  // eax\n
    unsigned int *v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_0 **v298;  // eax\n
    unsigned int v299[2];  // ecx\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_0 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_0 **v307;  // eax\n
    unsigned int *v308;  // eax\n
    struct struct_0 **v309;  // eax\n
    unsigned int *v310;  // eax\n
    struct struct_0 **v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_0 **v313;  // eax\n
    struct struct_0 **v314;  // eax\n
    unsigned int *v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    struct struct_0 **v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    unsigned int *v322;  // eax\n
    struct struct_0 **v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_0 **v325;  // eax\n
    struct struct_0 **v327;  // eax\n
    unsigned int *v329;  // eax\n
    unsigned int *v330;  // eax\n
    struct struct_0 **v331;  // eax\n
    unsigned int *v332;  // eax\n
    struct struct_0 **v333;  // eax\n
    unsigned int *v334;  // eax\n
    struct struct_0 **v335;  // eax\n
    unsigned int v336[2];  // ecx\n
    unsigned int *v337;  // eax\n
    struct struct_0 **v338;  // eax\n
    struct struct_0 **v340;  // eax\n
    unsigned int *v342;  // eax\n
    unsigned int *v343;  // eax\n
    struct struct_0 **v344;  // eax\n
    struct struct_0 **v346;  // eax\n
    unsigned int *v348;  // eax\n
    unsigned int *v349;  // eax\n
    struct struct_0 **v350;  // eax\n
    unsigned int *v351;  // eax\n
    struct struct_0 **v352;  // eax\n
    struct struct_0 **v353;  // eax\n
    unsigned int *v354;  // eax\n
    unsigned int *v355;  // eax\n
    struct struct_0 **v356;  // eax\n
    unsigned int *v357;  // eax\n
    struct struct_0 **v358;  // eax\n
    unsigned int *v359;  // eax\n
    struct struct_0 **v360;  // eax\n
    unsigned int *v361;  // eax\n
    struct struct_0 **v362;  // eax\n
    unsigned int *v363;  // eax\n
    struct struct_0 **v364;  // eax\n
    unsigned int *v365;  // eax\n
    struct struct_0 **v366;  // eax\n
    unsigned int *v367;  // eax\n
    struct struct_0 **v368;  // eax\n
    struct struct_0 **v369;  // eax\n
    unsigned int *v370;  // eax\n
    unsigned int *v371;  // eax, Other Possible Types: unsigned int\n
    unsigned int v372;  // ebx\n
\n
    v248 = v250;\n
    v35 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v67 = cgc__cookie;\n
    v66 = -1;\n
    if (cgc_sendline(1, \"===llamafluctuate===\", 20) < 0)\n
        cgc__terminate();\n
    v173 = v249;\n
    v172 = a0;\n
    memset(&v170, 0, 12);\n
    if (*(v172) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v171 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v55 = [D] x86g_create_fpucw(fpround<4>);\n
    v54 = v55 | 0xc00;\n
    v65 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v170, 12, v65);\n
    v34 = &v170;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v251 = v172;\n
    *(v251) = *(v251) - 4;\n
    v252 = v173;\n
    *(v252) = &*(v252)->field_4;\n
    v169 = v249;\n
    v168 = a0;\n
    memset(&v166, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v167 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v53 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1142, size=2, endness=Iend_LE)))));\n
    v52 = v53 | 0xc00;\n
    v64 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v166, 12, v64);\n
    v33 = &v166;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v166)) < 0)\n
        cgc__terminate();\n
    v253 = v168;\n
    *(v253) = *(v253) - 4;\n
    v254 = v169;\n
    *(v254) = &*(v254)->field_4;\n
    v247 = v249;\n
    v246 = a0;\n
    if (*(v246) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v245 = *(v247)->field_0;\n
    v255 = v246;\n
    *(v255) = *(v255) - 1;\n
    v256 = v247;\n
    *(v256) = &*(v256)->padding_1;\n
    if (v245 <= *(v246) && !(!v245))\n
        goto LABEL_455445;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_455445:\n
    v244 = cgc_calloc(v245);\n
    if (!v244)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v244, *(v247), v245);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v257 = v247;\n
    *(v257) = &(&*(v257)->field_0)[v245];\n
    v258 = v246;\n
    *(v258) = *(v258) - v245;\n
    cgc_checkheap();\n
    cgc_free(v244);\n
    v133 = v249;\n
    v132 = a0;\n
    memset(&v130, 0, 21);\n
    if (*(v132) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v131 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v51 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1146, size=2, endness=Iend_LE)))));\n
    v50 = v51 | 0xc00;\n
    v63 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v130, 21, v63);\n
    v32 = &v130;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v259 = v132;\n
    *(v259) = *(v259) - 8;\n
    v260 = v133;\n
    *(v260) = &(*(v260))[1].padding_1[2];\n
    v149 = v249;\n
    v148 = a0;\n
    memset(&v146, 0, 12);\n
    if (*(v148) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v147 = *(&*(v149)->field_0);\n
    cgc_uint2str(&v146, 12, v147);\n
    v31 = &v146;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v261 = v148;\n
    *(v261) = *(v261) - 4;\n
    v262 = v149;\n
    *(v262) = &*(v262)->field_4;\n
    v97 = v249;\n
    v96 = a0;\n
    if (*(v96) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(v97)->field_0;\n
    v263 = v96;\n
    *(v263) = *(v263) - 1;\n
    v264 = v97;\n
    *(v264) = &*(v264)->padding_1;\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_455913;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_455913:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v265 = v97;\n
    *(v265) = &(&*(v265)->field_0)[v95];\n
    v266 = v96;\n
    *(v266) = *(v266) - v95;\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v207 = v249;\n
    v206 = a0;\n
    *(&v204[0]) = *(v207);\n
    memset(&v203, 0, 12);\n
    if (*(v206) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (v204[0] << 24)\n
    {\n
        v30 = 0;\n
        if (v204[1] << 16)\n
        {\n
            v30 = 0;\n
            if (v204[2] << 8)\n
                v30 = v204[3];\n
        }\n
    }\n
    v205 = v30 & 1;\n
    cgc_uint2str(&v203, 12, v205);\n
    v29 = &v203;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v203)) < 0)\n
        cgc__terminate();\n
    v267 = v206;\n
    *(v267) = *(v267) - 4;\n
    v268 = v207;\n
    *(v268) = &*(v268)->field_4;\n
    v193 = v249;\n
    v192 = a0;\n
    if (*(v192) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v191 = *(&*(v193)->field_0);\n
    v269 = v192;\n
    *(v269) = *(v269) - 2;\n
    v270 = v193;\n
    *(v270) = &*(v270)->padding_1[1];\n
    if (v191 <= *(v192) && !(!v191))\n
        goto LABEL_455d0e;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_455d0e:\n
    v190 = cgc_calloc(v191);\n
    if (!v190)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v190, *(v193), v191);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v271 = v192;\n
    *(v271) = *(v271) - v191;\n
    v272 = v193;\n
    *(v272) = &(&*(v272)->field_0)[v191];\n
    cgc_checkheap();\n
    cgc_free(v190);\n
    v235 = v249;\n
    v234 = a0;\n
    memset(&v231, 0, 21);\n
    if (*(v234) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v273 = *(v235);\n
    v233 = v273[1];\n
    v232 = v273[0];\n
    cgc_uint2str(&v231, 21, v232);\n
    v28 = &v231;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v231)) < 0)\n
        cgc__terminate();\n
    v274 = v234;\n
    *(v274) = *(v274) - 8;\n
    v275 = v235;\n
    *(v275) = &(*(v275))[1].padding_1[2];\n
    v189 = v249;\n
    v188 = a0;\n
    if (*(v188) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v187 = *(&*(v189)->field_0);\n
    v276 = v188;\n
    *(v276) = *(v276) - 2;\n
    v277 = v189;\n
    *(v277) = &*(v277)->padding_1[1];\n
    if (v187 <= *(v188) && !(!v187))\n
        goto LABEL_45606d;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45606d:\n
    v186 = cgc_calloc(v187);\n
    if (!v186)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v186, *(v189), v187);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v278 = v188;\n
    *(v278) = *(v278) - v187;\n
    v279 = v189;\n
    *(v279) = &(&*(v279)->field_0)[v187];\n
    cgc_checkheap();\n
    cgc_free(v186);\n
    v202 = v249;\n
    v201 = a0;\n
    *(&v199[0]) = *(v202);\n
    memset(&v198, 0, 12);\n
    if (*(v201) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v199[0] << 24)\n
    {\n
        v27 = 0;\n
        if (v199[1] << 16)\n
        {\n
            v27 = 0;\n
            if (v199[2] << 8)\n
                v27 = v199[3];\n
        }\n
    }\n
    v200 = v27 & 1;\n
    cgc_uint2str(&v198, 12, v200);\n
    v26 = &v198;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v198)) < 0)\n
        cgc__terminate();\n
    v280 = v201;\n
    *(v280) = *(v280) - 4;\n
    v281 = v202;\n
    *(v281) = &*(v281)->field_4;\n
    v117 = v249;\n
    v116 = a0;\n
    memset(&v114, 0, 4);\n
    if (*(v116) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = *(v117)->field_0;\n
    cgc_uint2str(&v114, 4, v115);\n
    v25 = &v114;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v282 = v116;\n
    *(v282) = *(v282) - 1;\n
    v283 = v117;\n
    *(v283) = &*(v283)->padding_1;\n
    v165 = v249;\n
    v164 = a0;\n
    memset(&v162, 0, 12);\n
    if (*(v164) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v163 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v49 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1150, size=2, endness=Iend_LE)))));\n
    v48 = v49 | 0xc00;\n
    v62 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v162, 12, v62);\n
    v24 = &v162;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v162)) < 0)\n
        cgc__terminate();\n
    v284 = v164;\n
    *(v284) = *(v284) - 4;\n
    v285 = v165;\n
    *(v285) = &*(v285)->field_4;\n
    v105 = v249;\n
    v104 = a0;\n
    if (*(v104) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v104) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v104);\n
    v103 = v23;\n
    if (!v103)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v102 = cgc_calloc(134);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v102, &v35[18].padding_0[182]);\n
    cgc_strncpy(v102 + 5, *(v105), v103);\n
    v287 = v105;\n
    *(v287) = &(&*(v287)->field_4)[cgc_strlen(v102)];\n
    v289 = v104;\n
    *(v289) = *(v289) - (cgc_strlen(v102) + -4);\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v230 = v249;\n
    v229 = a0;\n
    memset(&v226, 0, 21);\n
    if (*(v229) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v290 = *(v230);\n
    v228 = v290[1];\n
    v227 = v290[0];\n
    cgc_uint2str(&v226, 21, v227);\n
    v22 = &v226;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v226)) < 0)\n
        cgc__terminate();\n
    v291 = v229;\n
    *(v291) = *(v291) - 8;\n
    v292 = v230;\n
    *(v292) = &(*(v292))[1].padding_1[2];\n
    v93 = v249;\n
    v92 = a0;\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(v93)->field_0;\n
    v293 = v92;\n
    *(v293) = *(v293) - 1;\n
    v294 = v93;\n
    *(v294) = &*(v294)->padding_1;\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_456ad0;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_456ad0:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v295 = v93;\n
    *(v295) = &(&*(v295)->field_0)[v91];\n
    v296 = v92;\n
    *(v296) = *(v296) - v91;\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v145 = v249;\n
    v144 = a0;\n
    memset(&v142, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    cgc_uint2str(&v142, 12, v143);\n
    v21 = &v142;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v297 = v144;\n
    *(v297) = *(v297) - 4;\n
    v298 = v145;\n
    *(v298) = &*(v298)->field_4;\n
    v225 = v249;\n
    v224 = a0;\n
    memset(&v221, 0, 21);\n
    if (*(v224) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v299 = *(v225);\n
    v223 = v299[1];\n
    v222 = v299[0];\n
    cgc_uint2str(&v221, 21, v222);\n
    v20 = &v221;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v221)) < 0)\n
        cgc__terminate();\n
    v300 = v224;\n
    *(v300) = *(v300) - 8;\n
    v301 = v225;\n
    *(v301) = &(*(v301))[1].padding_1[2];\n
    v129 = v249;\n
    v128 = a0;\n
    memset(&v126, 0, 21);\n
    if (*(v128) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v127 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v47 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1154, size=2, endness=Iend_LE)))));\n
    v46 = v47 | 0xc00;\n
    v61 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v126, 21, v61);\n
    v19 = &v126;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v302 = v128;\n
    *(v302) = *(v302) - 8;\n
    v303 = v129;\n
    *(v303) = &(*(v303))[1].padding_1[2];\n
    v185 = v249;\n
    v184 = a0;\n
    if (*(v184) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v183 = *(&*(v185)->field_0);\n
    v304 = v184;\n
    *(v304) = *(v304) - 2;\n
    v305 = v185;\n
    *(v305) = &*(v305)->padding_1[1];\n
    if (v183 <= *(v184) && !(!v183))\n
        goto LABEL_45710d;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45710d:\n
    v182 = cgc_calloc(v183);\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v182, *(v185), v183);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v306 = v184;\n
    *(v306) = *(v306) - v183;\n
    v307 = v185;\n
    *(v307) = &(&*(v307)->field_0)[v183];\n
    cgc_checkheap();\n
    cgc_free(v182);\n
    v141 = v249;\n
    v140 = a0;\n
    memset(&v138, 0, 12);\n
    if (*(v140) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    cgc_uint2str(&v138, 12, v139);\n
    v18 = &v138;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v308 = v140;\n
    *(v308) = *(v308) - 4;\n
    v309 = v141;\n
    *(v309) = &*(v309)->field_4;\n
    v85 = v249;\n
    v84 = a0;\n
    *(&v81[0]) = *(v85);\n
    memset(&v80, 0, 21);\n
    if (*(v84) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v81[0])\n
    {\n
        v17 = 0;\n
        if (v81[1])\n
        {\n
            v17 = 0;\n
            if (v81[2])\n
            {\n
                v17 = 0;\n
                if (v81[3])\n
                {\n
                    v17 = 0;\n
                    if (v81[4] << 24)\n
                    {\n
                        v17 = 0;\n
                        if (v81[5] << 16)\n
                        {\n
                            v17 = 0;\n
                            if (v81[6] << 8)\n
                                v17 = v81[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v82 = v17 & 1;\n
    v83 = 0;\n
    cgc_uint2str(&v80, 21, v82);\n
    v16 = &v80;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v80)) < 0)\n
        cgc__terminate();\n
    v310 = v84;\n
    *(v310) = *(v310) - 8;\n
    v311 = v85;\n
    *(v311) = &(*(v311))[1].padding_1[2];\n
    v89 = v249;\n
    v88 = a0;\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(v89)->field_0;\n
    v312 = v88;\n
    *(v312) = *(v312) - 1;\n
    v313 = v89;\n
    *(v313) = &*(v313)->padding_1;\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_4576d0;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4576d0:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v314 = v89;\n
    *(v314) = &(&*(v314)->field_0)[v87];\n
    v315 = v88;\n
    *(v315) = *(v315) - v87;\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v181 = v249;\n
    v180 = a0;\n
    if (*(v180) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v179 = *(&*(v181)->field_0);\n
    v316 = v180;\n
    *(v316) = *(v316) - 2;\n
    v317 = v181;\n
    *(v317) = &*(v317)->padding_1[1];\n
    if (v179 <= *(v180) && !(!v179))\n
        goto LABEL_45790a;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45790a:\n
    v178 = cgc_calloc(v179);\n
    if (!v178)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v178, *(v181), v179);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v318 = v180;\n
    *(v318) = *(v318) - v179;\n
    v319 = v181;\n
    *(v319) = &(&*(v319)->field_0)[v179];\n
    cgc_checkheap();\n
    cgc_free(v178);\n
    v125 = v249;\n
    v124 = a0;\n
    memset(&v122, 0, 21);\n
    if (*(v124) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v123 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v45 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1158, size=2, endness=Iend_LE)))));\n
    v44 = v45 | 0xc00;\n
    v60 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v122, 21, v60);\n
    v15 = &v122;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v320 = v124;\n
    *(v320) = *(v320) - 8;\n
    v321 = v125;\n
    *(v321) = &(*(v321))[1].padding_1[2];\n
    v197 = v249;\n
    v196 = a0;\n
    if (*(v196) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v195 = *(&*(v197)->field_0);\n
    v322 = v196;\n
    *(v322) = *(v322) - 2;\n
    v323 = v197;\n
    *(v323) = &*(v323)->padding_1[1];\n
    if (v195 <= *(v196) && !(!v195))\n
        goto LABEL_457cb8;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_457cb8:\n
    v194 = cgc_calloc(v195);\n
    if (!v194)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v194, *(v197), v195);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v324 = v196;\n
    *(v324) = *(v324) - v195;\n
    v325 = v197;\n
    *(v325) = &(&*(v325)->field_0)[v195];\n
    cgc_checkheap();\n
    cgc_free(v194);\n
    v215 = v249;\n
    v214 = a0;\n
    if (*(v214) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v214) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v214);\n
    v213 = v14;\n
    if (!v213)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v212 = cgc_calloc(134);\n
    if (!v212)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v212, &v35[18].padding_0[182]);\n
    cgc_strncpy(v212 + 5, *(v215), v213);\n
    v327 = v215;\n
    *(v327) = &(&*(v327)->field_4)[cgc_strlen(v212)];\n
    v329 = v214;\n
    *(v329) = *(v329) - (cgc_strlen(v212) + -4);\n
    cgc_checkheap();\n
    cgc_free(v212);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v161 = v249;\n
    v160 = a0;\n
    memset(&v158, 0, 12);\n
    if (*(v160) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v159 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1162, size=2, endness=Iend_LE)))));\n
    v42 = v43 | 0xc00;\n
    v59 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v158, 12, v59);\n
    v13 = &v158;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v158)) < 0)\n
        cgc__terminate();\n
    v330 = v160;\n
    *(v330) = *(v330) - 4;\n
    v331 = v161;\n
    *(v331) = &*(v331)->field_4;\n
    v157 = v249;\n
    v156 = a0;\n
    memset(&v154, 0, 12);\n
    if (*(v156) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v155 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1166, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v58 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v154, 12, v58);\n
    v12 = &v154;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v154)) < 0)\n
        cgc__terminate();\n
    v332 = v156;\n
    *(v332) = *(v332) - 4;\n
    v333 = v157;\n
    *(v333) = &*(v333)->field_4;\n
    v79 = v249;\n
    v78 = a0;\n
    *(&v75[0]) = *(v79);\n
    memset(&v74, 0, 21);\n
    if (*(v78) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v75[0])\n
    {\n
        v11 = 0;\n
        if (v75[1])\n
        {\n
            v11 = 0;\n
            if (v75[2])\n
            {\n
                v11 = 0;\n
                if (v75[3])\n
                {\n
                    v11 = 0;\n
                    if (v75[4] << 24)\n
                    {\n
                        v11 = 0;\n
                        if (v75[5] << 16)\n
                        {\n
                            v11 = 0;\n
                            if (v75[6] << 8)\n
                                v11 = v75[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v76 = v11 & 1;\n
    v77 = 0;\n
    cgc_uint2str(&v74, 21, v76);\n
    v10 = &v74;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v334 = v78;\n
    *(v334) = *(v334) - 8;\n
    v335 = v79;\n
    *(v335) = &(*(v335))[1].padding_1[2];\n
    v220 = v249;\n
    v219 = a0;\n
    memset(&v216, 0, 21);\n
    if (*(v219) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v336 = *(v220);\n
    v218 = v336[1];\n
    v217 = v336[0];\n
    cgc_uint2str(&v216, 21, v217);\n
    v9 = &v216;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v216)) < 0)\n
        cgc__terminate();\n
    v337 = v219;\n
    *(v337) = *(v337) - 8;\n
    v338 = v220;\n
    *(v338) = &(*(v338))[1].padding_1[2];\n
    v211 = v249;\n
    v210 = a0;\n
    if (*(v210) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v210) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v210);\n
    v209 = v8;\n
    if (!v209)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v208 = cgc_calloc(134);\n
    if (!v208)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v208, &v35[18].padding_0[182]);\n
    cgc_strncpy(v208 + 5, *(v211), v209);\n
    v340 = v211;\n
    *(v340) = &(&*(v340)->field_4)[cgc_strlen(v208)];\n
    v342 = v210;\n
    *(v342) = *(v342) - (cgc_strlen(v208) + -4);\n
    cgc_checkheap();\n
    cgc_free(v208);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v109 = v249;\n
    v108 = a0;\n
    memset(&v106, 0, 6);\n
    if (*(v108) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(&*(v109)->field_0);\n
    cgc_uint2str(&v106, 6, v107);\n
    v7 = &v106;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v343 = v108;\n
    *(v343) = *(v343) - 2;\n
    v344 = v109;\n
    *(v344) = &*(v344)->padding_1[1];\n
    v101 = v249;\n
    v100 = a0;\n
    if (*(v100) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v100) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v100);\n
    v99 = v6;\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v98 = cgc_calloc(134);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v98, &v35[18].padding_0[182]);\n
    cgc_strncpy(v98 + 5, *(v101), v99);\n
    v346 = v101;\n
    *(v346) = &(&*(v346)->field_4)[cgc_strlen(v98)];\n
    v348 = v100;\n
    *(v348) = *(v348) - (cgc_strlen(v98) + -4);\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v113 = v249;\n
    v112 = a0;\n
    memset(&v110, 0, 4);\n
    if (*(v112) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = *(v113)->field_0;\n
    cgc_uint2str(&v110, 4, v111);\n
    v5 = &v110;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v349 = v112;\n
    *(v349) = *(v349) - 1;\n
    v350 = v113;\n
    *(v350) = &*(v350)->padding_1;\n
    v243 = v249;\n
    v242 = a0;\n
    if (*(v242) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v241 = *(v243)->field_0;\n
    v351 = v242;\n
    *(v351) = *(v351) - 1;\n
    v352 = v243;\n
    *(v352) = &*(v352)->padding_1;\n
    if (v241 <= *(v242) && !(!v241))\n
        goto LABEL_458f5b;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_458f5b:\n
    v240 = cgc_calloc(v241);\n
    if (!v240)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v240, *(v243), v241);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v353 = v243;\n
    *(v353) = &(&*(v353)->field_0)[v241];\n
    v354 = v242;\n
    *(v354) = *(v354) - v241;\n
    cgc_checkheap();\n
    cgc_free(v240);\n
    v121 = v249;\n
    v120 = a0;\n
    memset(&v118, 0, 21);\n
    if (*(v120) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v119 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1170, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v57 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v118, 21, v57);\n
    v4 = &v118;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v355 = v120;\n
    *(v355) = *(v355) - 8;\n
    v356 = v121;\n
    *(v356) = &(*(v356))[1].padding_1[2];\n
    v73 = v249;\n
    v72 = a0;\n
    *(&v70) = *(v73);\n
    memset(&v69, 0, 6);\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v70[0] << 8)\n
        v3 = v70[1];\n
    v71 = v3 & 1;\n
    cgc_uint2str(&v69, 6, v71);\n
    v2 = &v69;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v357 = v72;\n
    *(v357) = *(v357) - 2;\n
    v358 = v73;\n
    *(v358) = &*(v358)->padding_1[1];\n
    v137 = v249;\n
    v136 = a0;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(&*(v137)->field_0);\n
    cgc_uint2str(&v134, 12, v135);\n
    v1 = &v134;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v359 = v136;\n
    *(v359) = *(v359) - 4;\n
    v360 = v137;\n
    *(v360) = &*(v360)->field_4;\n
    v177 = v249;\n
    v176 = a0;\n
    if (*(v176) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v175 = *(&*(v177)->field_0);\n
    v361 = v176;\n
    *(v361) = *(v361) - 2;\n
    v362 = v177;\n
    *(v362) = &*(v362)->padding_1[1];\n
    if (v175 <= *(v176) && !(!v175))\n
        goto LABEL_4595b2;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4595b2:\n
    v174 = cgc_calloc(v175);\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v174, *(v177), v175);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v363 = v176;\n
    *(v363) = *(v363) - v175;\n
    v364 = v177;\n
    *(v364) = &(&*(v364)->field_0)[v175];\n
    cgc_checkheap();\n
    cgc_free(v174);\n
    v153 = v249;\n
    v152 = a0;\n
    memset(&v150, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v151 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1174, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v150, 12, v56);\n
    v0 = &v150;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v365 = v152;\n
    *(v365) = *(v365) - 4;\n
    v366 = v153;\n
    *(v366) = &*(v366)->field_4;\n
    v239 = v249;\n
    v238 = a0;\n
    if (*(v238) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v237 = *(v239)->field_0;\n
    v367 = v238;\n
    *(v367) = *(v367) - 1;\n
    v368 = v239;\n
    *(v368) = &*(v368)->padding_1;\n
    if (v237 <= *(v238) && !(!v237))\n
        goto LABEL_459940;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_459940:\n
    v236 = cgc_calloc(v237);\n
    if (!v236)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v236, *(v239), v237);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v369 = v239;\n
    *(v369) = &(&*(v369)->field_0)[v237];\n
    v370 = v238;\n
    *(v370) = *(v370) - v237;\n
    cgc_checkheap();\n
    cgc_free(v236);\n
    v67 ^= v35->field_260;\n
    if (v67)\n
        cgc___stack_cookie_fail();\n
    v371 = a0;\n
    if (*(v371) > 0 && v66 >= 0 && v66 < 0)\n
        v371 = *((&v68 + 0x4 * v66))(v249);\n
    v372 = v248;\n
    return v371;\n
}\n
", "4561604:sub_459ac4": null, "4561616:cgc_process_llamatrochocephalus": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamatrochocephalus(struct struct_1 **v67, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x17c]\n
    struct_0 *v1;  // [bp-0x178]\n
    char v2;  // [bp-0x171]\n
    struct_0 *v3;  // [bp-0x170]\n
    struct_0 *v4;  // [bp-0x16c]\n
    struct_0 *v5;  // [bp-0x168]\n
    char v6;  // [bp-0x161]\n
    struct_0 *v7;  // [bp-0x160]\n
    struct_0 *v8;  // [bp-0x15c]\n
    struct_0 *v9;  // [bp-0x158]\n
    struct_3 *v10;  // [bp-0x154]\n
    unsigned short v11;  // [bp-0x150]\n
    unsigned short v12;  // [bp-0x14e]\n
    unsigned long v13;  // [bp-0x14c]\n
    struct struct_2 **v14;  // [bp-0x144]\n
    unsigned int v15;  // [bp-0x140]\n
    char v16;  // [bp-0x13c]\n
    char v17;  // [bp-0x139]\n
    unsigned long v18;  // [bp-0x124]\n
    unsigned int *v19;  // [bp-0x11c]\n
    struct struct_1 **v20;  // [bp-0x118]\n
    char v21;  // [bp-0x114]\n
    unsigned int v22;  // [bp-0x108]\n
    unsigned int *v23;  // [bp-0x104]\n
    struct struct_1 **v24;  // [bp-0x100]\n
    unsigned int v25;  // [bp-0xfc]\n
    unsigned short v26;  // [bp-0xf6]\n
    unsigned int *v27;  // [bp-0xf4]\n
    struct struct_1 **v28;  // [bp-0xf0]\n
    unsigned int v29;  // [bp-0xec]\n
    unsigned short v30;  // [bp-0xe6]\n
    unsigned int *v31;  // [bp-0xe4]\n
    struct struct_1 **v32;  // [bp-0xe0]\n
    char v33;  // [bp-0xdc]\n
    char v34[4];  // [bp-0xd0]\n
    unsigned int v35;  // [bp-0xcc]\n
    unsigned int *v36;  // [bp-0xc8]\n
    struct struct_1 **v37;  // [bp-0xc4]\n
    char v38;  // [bp-0xc0]\n
    char v39[4];  // [bp-0xb4]\n
    unsigned int v40;  // [bp-0xb0]\n
    unsigned int *v41;  // [bp-0xac]\n
    struct struct_1 **v42;  // [bp-0xa8]\n
    char *v43;  // [bp-0xa4]\n
    unsigned int v44;  // [bp-0xa0]\n
    unsigned int *v45;  // [bp-0x9c]\n
    struct struct_1 **v46;  // [bp-0x98]\n
    char v47;  // [bp-0x91]\n
    unsigned int v48;  // [bp-0x7c]\n
    unsigned int v49;  // [bp-0x78]\n
    unsigned int *v50;  // [bp-0x74]\n
    struct struct_1 **v51;  // [bp-0x70]\n
    char v52;  // [bp-0x69]\n
    unsigned int v53;  // [bp-0x54]\n
    unsigned int v54;  // [bp-0x50]\n
    unsigned int *v55;  // [bp-0x4c]\n
    struct struct_1 **v56;  // [bp-0x48]\n
    char v57;  // [bp-0x41]\n
    unsigned int v58;  // [bp-0x2c]\n
    unsigned int v59;  // [bp-0x28]\n
    unsigned int *v60;  // [bp-0x20]\n
    struct struct_1 **v61;  // [bp-0x1c]\n
    unsigned int v62;  // [bp-0x18]\n
    char v63;  // [bp-0x11]\n
    unsigned int *v64;  // [bp-0x10]\n
    struct struct_1 **v65;  // [bp-0xc]\n
    unsigned int v66;  // [bp-0x8]\n
    unsigned int v68;  // ebx\n
    unsigned int *v69;  // eax\n
    struct struct_1 **v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_1 **v72;  // eax\n
    struct struct_1 **v73;  // eax\n
    unsigned int *v74;  // eax\n
    unsigned int *v75;  // eax\n
    struct struct_1 **v76;  // eax\n
    unsigned int v77[2];  // ecx\n
    unsigned int *v78;  // eax\n
    struct struct_1 **v79;  // eax\n
    unsigned int *v80;  // eax\n
    struct struct_1 **v81;  // eax\n
    unsigned int *v82;  // eax\n
    struct struct_1 **v83;  // eax\n
    unsigned int *v84;  // eax\n
    struct struct_1 **v85;  // eax\n
    unsigned int *v86;  // eax\n
    struct struct_1 **v87;  // eax\n
    unsigned int *v88;  // eax\n
    struct struct_1 **v89;  // eax\n
    unsigned int v90[2];  // ecx\n
    unsigned int *v91;  // eax\n
    struct struct_1 **v92;  // eax\n
    unsigned int v93[2];  // ecx\n
    unsigned int *v94;  // eax\n
    struct struct_1 **v95;  // eax\n
    unsigned int *v96;  // eax\n
    struct struct_1 **v97;  // eax\n
    struct struct_1 **v99;  // eax\n
    unsigned int *v101;  // eax\n
    unsigned int *v102;  // eax, Other Possible Types: unsigned int\n
    unsigned int v103;  // ebx\n
\n
    v66 = v68;\n
    v10 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamatrochocephalus===\", 25) < 0)\n
        cgc__terminate();\n
    v24 = v67;\n
    v23 = a0;\n
    memset(&v21, 0, 12);\n
    if (*(v23) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = *(&*(v24)->field_0);\n
    cgc_uint2str(&v21, 12, v22);\n
    v9 = &v21;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v21)) < 0)\n
        cgc__terminate();\n
    v69 = v23;\n
    *(v69) = *(v69) - 4;\n
    v70 = v24;\n
    *(v70) = &*(v70)->field_4;\n
    v65 = v67;\n
    v64 = a0;\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(v65)->field_0;\n
    v71 = v64;\n
    *(v71) = *(v71) - 1;\n
    v72 = v65;\n
    *(v72) = &*(v72)->padding_1;\n
    if (v63 <= *(v64) && !(!v63))\n
        goto LABEL_459d80;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_459d80:\n
    v62 = cgc_calloc(v63);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v62, *(v65), v63);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v73 = v65;\n
    *(v73) = &(&*(v73)->field_0)[v63];\n
    v74 = v64;\n
    *(v74) = *(v74) - v63;\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    v20 = v67;\n
    v19 = a0;\n
    memset(&v17, 0, 21);\n
    if (*(v19) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v18 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v12 = [D] x86g_create_fpucw(fpround<4>);\n
    v11 = v12 | 0xc00;\n
    v13 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v17, 21, v13);\n
    v8 = &v17;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v17)) < 0)\n
        cgc__terminate();\n
    v75 = v19;\n
    *(v75) = *(v75) - 8;\n
    v76 = v20;\n
    *(v76) = *(v76) + 1;\n
    v61 = v67;\n
    v60 = a0;\n
    memset(&v57, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v77 = *(v61);\n
    v59 = v77[1];\n
    v58 = v77[0];\n
    cgc_uint2str(&v57, 21, v58);\n
    v7 = &v57;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v57)) < 0)\n
        cgc__terminate();\n
    v78 = v60;\n
    *(v78) = *(v78) - 8;\n
    v79 = v61;\n
    *(v79) = *(v79) + 1;\n
    v32 = v67;\n
    v31 = a0;\n
    if (*(v31) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = *(&*(v32)->field_0);\n
    v80 = v31;\n
    *(v80) = *(v80) - 2;\n
    v81 = v32;\n
    *(v81) = &*(v81)->padding_1[1];\n
    if (v30 <= *(v31) && !(!v30))\n
        goto LABEL_45a232;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45a232:\n
    v29 = cgc_calloc(v30);\n
    if (!v29)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v29, *(v32), v30);\n
    if (cgc_sendline(1, &v10[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v82 = v31;\n
    *(v82) = *(v82) - v30;\n
    v83 = v32;\n
    *(v83) = &(&*(v83)->field_0)[v30];\n
    cgc_checkheap();\n
    cgc_free(v29);\n
    v28 = v67;\n
    v27 = a0;\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = *(&*(v28)->field_0);\n
    v84 = v27;\n
    *(v84) = *(v84) - 2;\n
    v85 = v28;\n
    *(v85) = &*(v85)->padding_1[1];\n
    if (v26 <= *(v27) && !(!v26))\n
        goto LABEL_45a46c;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45a46c:\n
    v25 = cgc_calloc(v26);\n
    if (!v25)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v25, *(v28), v26);\n
    if (cgc_sendline(1, &v10[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v86 = v27;\n
    *(v86) = *(v86) - v26;\n
    v87 = v28;\n
    *(v87) = &(&*(v87)->field_0)[v26];\n
    cgc_checkheap();\n
    cgc_free(v25);\n
    v42 = v67;\n
    v41 = a0;\n
    *(&v39[0]) = *(v42);\n
    memset(&v38, 0, 12);\n
    if (*(v41) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v39[0] << 24)\n
    {\n
        v6 = 0;\n
        if (v39[1] << 16)\n
        {\n
            v6 = 0;\n
            if (v39[2] << 8)\n
                v6 = v39[3];\n
        }\n
    }\n
    v40 = v6 & 1;\n
    cgc_uint2str(&v38, 12, v40);\n
    v5 = &v38;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v88 = v41;\n
    *(v88) = *(v88) - 4;\n
    v89 = v42;\n
    *(v89) = &*(v89)->field_4;\n
    v56 = v67;\n
    v55 = a0;\n
    memset(&v52, 0, 21);\n
    if (*(v55) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = *(v56);\n
    v54 = v90[1];\n
    v53 = v90[0];\n
    cgc_uint2str(&v52, 21, v53);\n
    v4 = &v52;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v91 = v55;\n
    *(v91) = *(v91) - 8;\n
    v92 = v56;\n
    *(v92) = *(v92) + 1;\n
    v51 = v67;\n
    v50 = a0;\n
    memset(&v47, 0, 21);\n
    if (*(v50) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = *(v51);\n
    v49 = v93[1];\n
    v48 = v93[0];\n
    cgc_uint2str(&v47, 21, v48);\n
    v3 = &v47;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v94 = v50;\n
    *(v94) = *(v94) - 8;\n
    v95 = v51;\n
    *(v95) = *(v95) + 1;\n
    v37 = v67;\n
    v36 = a0;\n
    *(&v34[0]) = *(v37);\n
    memset(&v33, 0, 12);\n
    if (*(v36) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v34[0] << 24)\n
    {\n
        v2 = 0;\n
        if (v34[1] << 16)\n
        {\n
            v2 = 0;\n
            if (v34[2] << 8)\n
                v2 = v34[3];\n
        }\n
    }\n
    v35 = v2 & 1;\n
    cgc_uint2str(&v33, 12, v35);\n
    v1 = &v33;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v33)) < 0)\n
        cgc__terminate();\n
    v96 = v36;\n
    *(v96) = *(v96) - 4;\n
    v97 = v37;\n
    *(v97) = &*(v97)->field_4;\n
    v46 = v67;\n
    v45 = a0;\n
    if (*(v45) <= 0)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v45) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v45);\n
    v44 = v0;\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v43 = cgc_calloc(134);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v43, &v10[18].padding_0[182]);\n
    cgc_strncpy(v43 + 5, *(v46), v44);\n
    v99 = v46;\n
    *(v99) = -4 + cgc_strlen(v43) + *(v99);\n
    v101 = v45;\n
    *(v101) = *(v101) - (cgc_strlen(v43) + -4);\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    if (cgc_sendline(1, &v10[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v15 ^= v10->field_260;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v102 = a0;\n
    if (*(v102) > 0 && v14 >= 0 && v14 < 0)\n
        v102 = *((&v16 + 0x4 * v14))(v67);\n
    v103 = v66;\n
    return v102;\n
}\n
", "4566634:sub_45ae6a": null, "4566640:cgc_process_llamaPlautine": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaPlautine(struct struct_0 **v186, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x398]\n
    struct_1 *v1;  // [bp-0x394]\n
    struct_1 *v2;  // [bp-0x390]\n
    char v3;  // [bp-0x389]\n
    struct_1 *v4;  // [bp-0x388]\n
    struct_1 *v5;  // [bp-0x384]\n
    char v6;  // [bp-0x37d]\n
    struct_1 *v7;  // [bp-0x37c]\n
    struct_1 *v8;  // [bp-0x378]\n
    struct_1 *v9;  // [bp-0x374]\n
    struct_1 *v10;  // [bp-0x370]\n
    unsigned int v11;  // [bp-0x36c]\n
    unsigned int v12;  // [bp-0x368]\n
    struct_1 *v13;  // [bp-0x364]\n
    char v14;  // [bp-0x35d]\n
    struct_1 *v15;  // [bp-0x35c]\n
    char v16;  // [bp-0x355]\n
    struct_1 *v17;  // [bp-0x354]\n
    struct_1 *v18;  // [bp-0x350]\n
    char v19;  // [bp-0x349]\n
    struct_1 *v20;  // [bp-0x348]\n
    char v21;  // [bp-0x341]\n
    struct_1 *v22;  // [bp-0x340]\n
    struct_1 *v23;  // [bp-0x33c]\n
    char v24;  // [bp-0x335]\n
    unsigned int v25;  // [bp-0x334]\n
    unsigned int v26;  // [bp-0x330]\n
    struct_1 *v27;  // [bp-0x32c]\n
    unsigned int v28;  // [bp-0x328]\n
    struct_1 *v29;  // [bp-0x324]\n
    char v30;  // [bp-0x31d]\n
    struct_2 *v31;  // [bp-0x31c]\n
    unsigned short v32;  // [bp-0x318]\n
    unsigned short v33;  // [bp-0x316]\n
    unsigned short v34;  // [bp-0x314]\n
    unsigned short v35;  // [bp-0x312]\n
    unsigned short v36;  // [bp-0x310]\n
    unsigned short v37;  // [bp-0x30e]\n
    unsigned long v38;  // [bp-0x30c]\n
    unsigned long v39;  // [bp-0x304]\n
    unsigned long v40;  // [bp-0x2fc]\n
    struct struct_3 **v41;  // [bp-0x2f0]\n
    unsigned int v42;  // [bp-0x2ec]\n
    char v43;  // [bp-0x2e8]\n
    char v44;  // [bp-0x2e6]\n
    struct_4 *v45;  // [bp-0x2e0]\n
    unsigned short v46;  // [bp-0x2da]\n
    unsigned int *v47;  // [bp-0x2d8]\n
    struct struct_0 **v48;  // [bp-0x2d4]\n
    char v49;  // [bp-0x2ce]\n
    char v50[8];  // [bp-0x2c8]\n
    unsigned short v51;  // [bp-0x2c2]\n
    unsigned int *v52;  // [bp-0x2c0]\n
    struct struct_0 **v53;  // [bp-0x2bc]\n
    char v54;  // [bp-0x2b6]\n
    char v55[2];  // [bp-0x2b0]\n
    unsigned short v56;  // [bp-0x2aa]\n
    unsigned int *v57;  // [bp-0x2a8]\n
    struct struct_0 **v58;  // [bp-0x2a4]\n
    char v59;  // [bp-0x29e]\n
    char v60[2];  // [bp-0x298]\n
    unsigned short v61;  // [bp-0x292]\n
    unsigned int *v62;  // [bp-0x290]\n
    struct struct_0 **v63;  // [bp-0x28c]\n
    char v64;  // [bp-0x285]\n
    char v65[5];  // [bp-0x270]\n
    unsigned int v66;  // [bp-0x26c]\n
    void* v67;  // [bp-0x268]\n
    unsigned int *v68;  // [bp-0x260]\n
    struct struct_0 **v69;  // [bp-0x25c]\n
    char v70;  // [bp-0x255]\n
    char v71[8];  // [bp-0x240]\n
    unsigned int v72;  // [bp-0x23c]\n
    void* v73;  // [bp-0x238]\n
    unsigned int *v74;  // [bp-0x230]\n
    struct struct_0 **v75;  // [bp-0x22c]\n
    char v76;  // [bp-0x225]\n
    char v77[5];  // [bp-0x210]\n
    unsigned int v78;  // [bp-0x20c]\n
    void* v79;  // [bp-0x208]\n
    unsigned int *v80;  // [bp-0x200]\n
    struct struct_0 **v81;  // [bp-0x1fc]\n
    char *v82;  // [bp-0x1f8]\n
    unsigned int v83;  // [bp-0x1f4]\n
    unsigned int *v84;  // [bp-0x1f0]\n
    struct struct_0 **v85;  // [bp-0x1ec]\n
    char *v86;  // [bp-0x1e8]\n
    unsigned int v87;  // [bp-0x1e4]\n
    unsigned int *v88;  // [bp-0x1e0]\n
    struct struct_0 **v89;  // [bp-0x1dc]\n
    char v90;  // [bp-0x1d8]\n
    unsigned short v91;  // [bp-0x1d2]\n
    unsigned int *v92;  // [bp-0x1d0]\n
    struct struct_0 **v93;  // [bp-0x1cc]\n
    char v94;  // [bp-0x1c8]\n
    unsigned short v95;  // [bp-0x1c2]\n
    unsigned int *v96;  // [bp-0x1c0]\n
    struct struct_0 **v97;  // [bp-0x1bc]\n
    char v98;  // [bp-0x1b8]\n
    unsigned short v99;  // [bp-0x1b2]\n
    unsigned int *v100;  // [bp-0x1b0]\n
    struct struct_0 **v101;  // [bp-0x1ac]\n
    char v102;  // [bp-0x1a5]\n
    char v103;  // [bp-0x1a1]\n
    unsigned int *v104;  // [bp-0x1a0]\n
    struct struct_0 **v105;  // [bp-0x19c]\n
    char v106;  // [bp-0x198]\n
    unsigned int v107;  // [bp-0x18c]\n
    unsigned int *v108;  // [bp-0x188]\n
    struct struct_0 **v109;  // [bp-0x184]\n
    char v110;  // [bp-0x180]\n
    unsigned int v111;  // [bp-0x174]\n
    unsigned int *v112;  // [bp-0x170]\n
    struct struct_0 **v113;  // [bp-0x16c]\n
    char v114;  // [bp-0x168]\n
    unsigned int v115;  // [bp-0x15c]\n
    unsigned int *v116;  // [bp-0x158]\n
    struct struct_0 **v117;  // [bp-0x154]\n
    char v118;  // [bp-0x150]\n
    unsigned int v119;  // [bp-0x144]\n
    unsigned int *v120;  // [bp-0x140]\n
    struct struct_0 **v121;  // [bp-0x13c]\n
    unsigned int v122;  // [bp-0x138]\n
    unsigned short v123;  // [bp-0x132]\n
    unsigned int *v124;  // [bp-0x130]\n
    struct struct_0 **v125;  // [bp-0x12c]\n
    unsigned int v126;  // [bp-0x128]\n
    unsigned short v127;  // [bp-0x122]\n
    unsigned int *v128;  // [bp-0x120]\n
    struct struct_0 **v129;  // [bp-0x11c]\n
    unsigned int v130;  // [bp-0x118]\n
    unsigned short v131;  // [bp-0x112]\n
    unsigned int *v132;  // [bp-0x110]\n
    struct struct_0 **v133;  // [bp-0x10c]\n
    unsigned int v134;  // [bp-0x108]\n
    unsigned short v135;  // [bp-0x102]\n
    unsigned int *v136;  // [bp-0x100]\n
    struct struct_0 **v137;  // [bp-0xfc]\n
    unsigned int v138;  // [bp-0xf8]\n
    unsigned short v139;  // [bp-0xf2]\n
    unsigned int *v140;  // [bp-0xf0]\n
    struct struct_0 **v141;  // [bp-0xec]\n
    unsigned int v142;  // [bp-0xe8]\n
    unsigned short v143;  // [bp-0xe2]\n
    unsigned int *v144;  // [bp-0xe0]\n
    struct struct_0 **v145;  // [bp-0xdc]\n
    char v146;  // [bp-0xd8]\n
    char *v147;  // [bp-0xcc]\n
    unsigned int v148;  // [bp-0xc8]\n
    unsigned int *v149;  // [bp-0xc4]\n
    struct struct_0 **v150;  // [bp-0xc0]\n
    char *v151;  // [bp-0xbc]\n
    unsigned int v152;  // [bp-0xb8]\n
    unsigned int *v153;  // [bp-0xb4]\n
    struct struct_0 **v154;  // [bp-0xb0]\n
    char *v155;  // [bp-0xac]\n
    unsigned int v156;  // [bp-0xa8]\n
    unsigned int *v157;  // [bp-0xa4]\n
    struct struct_0 **v158;  // [bp-0xa0]\n
    char *v159;  // [bp-0x9c]\n
    unsigned int v160;  // [bp-0x98]\n
    unsigned int *v161;  // [bp-0x94]\n
    struct struct_0 **v162;  // [bp-0x90]\n
    char v163;  // [bp-0x89]\n
    unsigned int v164;  // [bp-0x74]\n
    unsigned int v165;  // [bp-0x70]\n
    unsigned int *v166;  // [bp-0x6c]\n
    struct struct_0 **v167;  // [bp-0x68]\n
    char v168;  // [bp-0x61]\n
    unsigned int v169;  // [bp-0x4c]\n
    unsigned int v170;  // [bp-0x48]\n
    unsigned int *v171;  // [bp-0x40]\n
    struct struct_0 **v172;  // [bp-0x3c]\n
    unsigned int v173;  // [bp-0x38]\n
    char v174;  // [bp-0x31]\n
    unsigned int *v175;  // [bp-0x30]\n
    struct struct_0 **v176;  // [bp-0x2c]\n
    unsigned int v177;  // [bp-0x28]\n
    char v178;  // [bp-0x21]\n
    unsigned int *v179;  // [bp-0x20]\n
    struct struct_0 **v180;  // [bp-0x1c]\n
    unsigned int v181;  // [bp-0x18]\n
    char v182;  // [bp-0x11]\n
    unsigned int *v183;  // [bp-0x10]\n
    struct struct_0 **v184;  // [bp-0xc]\n
    unsigned int v185;  // [bp-0x8]\n
    unsigned int v187;  // ebx\n
    unsigned int *v188;  // eax\n
    struct struct_0 **v189;  // eax\n
    struct struct_0 **v191;  // eax\n
    unsigned int *v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_0 **v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_0 **v197;  // eax\n
    struct struct_0 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int *v203;  // eax\n
    struct struct_0 **v205;  // eax\n
    unsigned int *v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    unsigned int *v214;  // eax\n
    struct struct_0 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    struct struct_0 **v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v239;  // eax\n
    unsigned int *v241;  // eax\n
    struct_4 *v242;  // ecx\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    unsigned int *v247;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    char v261[5];  // ecx\n
    unsigned int *v262;  // eax\n
    struct struct_0 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    struct struct_0 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_0 **v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_0 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_0 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v282;  // eax, Other Possible Types: unsigned int\n
    unsigned int v283;  // ebx\n
\n
    v185 = v187;\n
    v31 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v42 = cgc__cookie;\n
    v41 = -1;\n
    if (cgc_sendline(1, \"===llamaPlautine===\", 19) < 0)\n
        cgc__terminate();\n
    v150 = v186;\n
    v149 = a0;\n
    v147 = &*(v150)->field_0;\n
    memset(&v146, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (*(v147) << 24)\n
    {\n
        v30 = 0;\n
        if (v147[1] << 16)\n
        {\n
            v30 = 0;\n
            if (v147[2] << 8)\n
                v30 = v147[3];\n
        }\n
    }\n
    v148 = v30 & 1;\n
    cgc_uint2str(&v146, 12, v148);\n
    v29 = &v146;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v188 = v149;\n
    *(v188) = *(v188) - 4;\n
    v189 = v150;\n
    *(v189) = &*(v189)->field_4;\n
    v89 = v186;\n
    v88 = a0;\n
    if (*(v88) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v88) >= 128)\n
        v28 = 128;\n
    else\n
        v28 = *(v88);\n
    v87 = v28;\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = cgc_calloc(134);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v86, &v31[18].padding_0[182]);\n
    cgc_strncpy(v86 + 5, *(v89), v87);\n
    v191 = v89;\n
    *(v191) = &(&*(v191)->field_4)[cgc_strlen(v86)];\n
    v193 = v88;\n
    *(v193) = *(v193) - (cgc_strlen(v86) + -4);\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v121 = v186;\n
    v120 = a0;\n
    memset(&v118, 0, 12);\n
    if (*(v120) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v119 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(fpround<4>);\n
    v36 = v37 | 0xc00;\n
    v40 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v118, 12, v40);\n
    v27 = &v118;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v194 = v120;\n
    *(v194) = *(v194) - 4;\n
    v195 = v121;\n
    *(v195) = &*(v195)->field_4;\n
    v184 = v186;\n
    v183 = a0;\n
    if (*(v183) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = *(v184)->field_0;\n
    v196 = v183;\n
    *(v196) = *(v196) - 1;\n
    v197 = v184;\n
    *(v197) = &*(v197)->padding_1;\n
    if (v182 <= *(v183) && !(!v182))\n
        goto LABEL_45b593;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45b593:\n
    v181 = cgc_calloc(v182);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v181, *(v184), v182);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v198 = v184;\n
    *(v198) = &(&*(v198)->field_0)[v182];\n
    v199 = v183;\n
    *(v199) = *(v199) - v182;\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    v162 = v186;\n
    v161 = a0;\n
    if (*(v161) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v161) >= 128)\n
        v26 = 128;\n
    else\n
        v26 = *(v161);\n
    v160 = v26;\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v159 = cgc_calloc(134);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v159, &v31[18].padding_0[182]);\n
    cgc_strncpy(v159 + 5, *(v162), v160);\n
    v201 = v162;\n
    *(v201) = &(&*(v201)->field_4)[cgc_strlen(v159)];\n
    v203 = v161;\n
    *(v203) = *(v203) - (cgc_strlen(v159) + -4);\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v85 = v186;\n
    v84 = a0;\n
    if (*(v84) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v84) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v84);\n
    v83 = v25;\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v82 = cgc_calloc(134);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v82, &v31[18].padding_0[182]);\n
    cgc_strncpy(v82 + 5, *(v85), v83);\n
    v205 = v85;\n
    *(v205) = &(&*(v205)->field_4)[cgc_strlen(v82)];\n
    v207 = v84;\n
    *(v207) = *(v207) - (cgc_strlen(v82) + -4);\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v81 = v186;\n
    v80 = a0;\n
    *(&v77[0]) = *(v81);\n
    memset(&v76, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = 0;\n
    if (v77[0])\n
    {\n
        v24 = 0;\n
        if (v77[1])\n
        {\n
            v24 = 0;\n
            if (v77[2])\n
            {\n
                v24 = 0;\n
                if (v77[3])\n
                {\n
                    v24 = 0;\n
                    if (v77[4] << 24)\n
                    {\n
                        v24 = 0;\n
                        if (v77[1] << 16)\n
                        {\n
                            v24 = 0;\n
                            if (v77[1 + 1] << 8)\n
                                v24 = v77[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v78 = v24 & 1;\n
    v79 = 0;\n
    cgc_uint2str(&v76, 21, v78);\n
    v23 = &v76;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v208 = v80;\n
    *(v208) = *(v208) - 8;\n
    v209 = v81;\n
    *(v209) = &(*(v209))[1].padding_1[2];\n
    v180 = v186;\n
    v179 = a0;\n
    if (*(v179) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(v180)->field_0;\n
    v210 = v179;\n
    *(v210) = *(v210) - 1;\n
    v211 = v180;\n
    *(v211) = &*(v211)->padding_1;\n
    if (v178 <= *(v179) && !(!v178))\n
        goto LABEL_45bed6;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45bed6:\n
    v177 = cgc_calloc(v178);\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v177, *(v180), v178);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v212 = v180;\n
    *(v212) = &(&*(v212)->field_0)[v178];\n
    v213 = v179;\n
    *(v213) = *(v213) - v178;\n
    cgc_checkheap();\n
    cgc_free(v177);\n
    v105 = v186;\n
    v104 = a0;\n
    memset(&v102, 0, 4);\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(v105)->field_0;\n
    cgc_uint2str(&v102, 4, v103);\n
    v22 = &v102;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v214 = v104;\n
    *(v214) = *(v214) - 1;\n
    v215 = v105;\n
    *(v215) = &*(v215)->padding_1;\n
    v75 = v186;\n
    v74 = a0;\n
    *(&v71[0]) = *(v75);\n
    memset(&v70, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = 0;\n
    if (v71[0])\n
    {\n
        v21 = 0;\n
        if (v71[1])\n
        {\n
            v21 = 0;\n
            if (v71[2])\n
            {\n
                v21 = 0;\n
                if (v71[3])\n
                {\n
                    v21 = 0;\n
                    if (v71[4] << 24)\n
                    {\n
                        v21 = 0;\n
                        if (v71[5] << 16)\n
                        {\n
                            v21 = 0;\n
                            if (v71[6] << 8)\n
                                v21 = v71[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v72 = v21 & 1;\n
    v73 = 0;\n
    cgc_uint2str(&v70, 21, v72);\n
    v20 = &v70;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v216 = v74;\n
    *(v216) = *(v216) - 8;\n
    v217 = v75;\n
    *(v217) = &(*(v217))[1].padding_1[2];\n
    v63 = v186;\n
    v62 = a0;\n
    *(&v60) = *(v63);\n
    memset(&v59, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v60[0] << 8)\n
        v19 = v60[1];\n
    v61 = v19 & 1;\n
    cgc_uint2str(&v59, 6, v61);\n
    v18 = &v59;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v218 = v62;\n
    *(v218) = *(v218) - 2;\n
    v219 = v63;\n
    *(v219) = &*(v219)->padding_1[1];\n
    v109 = v186;\n
    v108 = a0;\n
    memset(&v106, 0, 12);\n
    if (*(v108) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(&*(v109)->field_0);\n
    cgc_uint2str(&v106, 12, v107);\n
    v17 = &v106;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v220 = v108;\n
    *(v220) = *(v220) - 4;\n
    v221 = v109;\n
    *(v221) = &*(v221)->field_4;\n
    v176 = v186;\n
    v175 = a0;\n
    if (*(v175) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v174 = *(v176)->field_0;\n
    v222 = v175;\n
    *(v222) = *(v222) - 1;\n
    v223 = v176;\n
    *(v223) = &*(v223)->padding_1;\n
    if (v174 <= *(v175) && !(!v174))\n
        goto LABEL_45c725;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45c725:\n
    v173 = cgc_calloc(v174);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v173, *(v176), v174);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v224 = v176;\n
    *(v224) = &(&*(v224)->field_0)[v174];\n
    v225 = v175;\n
    *(v225) = *(v225) - v174;\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    v133 = v186;\n
    v132 = a0;\n
    if (*(v132) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(&*(v133)->field_0);\n
    v226 = v132;\n
    *(v226) = *(v226) - 2;\n
    v227 = v133;\n
    *(v227) = &*(v227)->padding_1[1];\n
    if (v131 <= *(v132) && !(!v131))\n
        goto LABEL_45c93e;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45c93e:\n
    v130 = cgc_calloc(v131);\n
    if (!v130)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v130, *(v133), v131);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v228 = v132;\n
    *(v228) = *(v228) - v131;\n
    v229 = v133;\n
    *(v229) = &(&*(v229)->field_0)[v131];\n
    cgc_checkheap();\n
    cgc_free(v130);\n
    v58 = v186;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v55[0] << 8)\n
        v16 = v55[1];\n
    v56 = v16 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v15 = &v54;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v230 = v57;\n
    *(v230) = *(v230) - 2;\n
    v231 = v58;\n
    *(v231) = &*(v231)->padding_1[1];\n
    v53 = v186;\n
    v52 = a0;\n
    *(&v50[0]) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v50[0] << 8)\n
        v14 = v50[1];\n
    v51 = v14 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v13 = &v49;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v232 = v52;\n
    *(v232) = *(v232) - 2;\n
    v233 = v53;\n
    *(v233) = &*(v233)->padding_1[1];\n
    v158 = v186;\n
    v157 = a0;\n
    if (*(v157) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v157) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v157);\n
    v156 = v12;\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v155 = cgc_calloc(134);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v155, &v31[18].padding_0[182]);\n
    cgc_strncpy(v155 + 5, *(v158), v156);\n
    v235 = v158;\n
    *(v235) = &(&*(v235)->field_4)[cgc_strlen(v155)];\n
    v237 = v157;\n
    *(v237) = *(v237) - (cgc_strlen(v155) + -4);\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v154 = v186;\n
    v153 = a0;\n
    if (*(v153) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v153) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v153);\n
    v152 = v11;\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v151 = cgc_calloc(134);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v151, &v31[18].padding_0[182]);\n
    cgc_strncpy(v151 + 5, *(v154), v152);\n
    v239 = v154;\n
    *(v239) = &(&*(v239)->field_4)[cgc_strlen(v151)];\n
    v241 = v153;\n
    *(v241) = *(v241) - (cgc_strlen(v151) + -4);\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v172 = v186;\n
    v171 = a0;\n
    memset(&v168, 0, 21);\n
    if (*(v171) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v242 = *(v172);\n
    v170 = v242->field_4;\n
    v169 = *(&v242->field_0);\n
    cgc_uint2str(&v168, 21, v169);\n
    v10 = &v168;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v168)) < 0)\n
        cgc__terminate();\n
    v243 = v171;\n
    *(v243) = *(v243) - 8;\n
    v244 = v172;\n
    *(v244) = &(*(v244))[1].padding_1[2];\n
    v117 = v186;\n
    v116 = a0;\n
    memset(&v114, 0, 12);\n
    if (*(v116) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v115 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-782, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v39 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v114, 12, v39);\n
    v9 = &v114;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v245 = v116;\n
    *(v245) = *(v245) - 4;\n
    v246 = v117;\n
    *(v246) = &*(v246)->field_4;\n
    v145 = v186;\n
    v144 = a0;\n
    if (*(v144) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    v247 = v144;\n
    *(v247) = *(v247) - 2;\n
    v248 = v145;\n
    *(v248) = &*(v248)->padding_1[1];\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_45d621;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45d621:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v249 = v144;\n
    *(v249) = *(v249) - v143;\n
    v250 = v145;\n
    *(v250) = &(&*(v250)->field_0)[v143];\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v101 = v186;\n
    v100 = a0;\n
    memset(&v98, 0, 6);\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(&*(v101)->field_0);\n
    cgc_uint2str(&v98, 6, v99);\n
    v8 = &v98;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v251 = v100;\n
    *(v251) = *(v251) - 2;\n
    v252 = v101;\n
    *(v252) = &*(v252)->padding_1[1];\n
    v97 = v186;\n
    v96 = a0;\n
    memset(&v94, 0, 6);\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(&*(v97)->field_0);\n
    cgc_uint2str(&v94, 6, v95);\n
    v7 = &v94;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v253 = v96;\n
    *(v253) = *(v253) - 2;\n
    v254 = v97;\n
    *(v254) = &*(v254)->padding_1[1];\n
    v48 = v186;\n
    v47 = a0;\n
    v45 = &*(v48);\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v45->field_0 << 8)\n
        v6 = v45->padding_1[0];\n
    v46 = v6 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v5 = &v44;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v255 = v47;\n
    *(v255) = *(v255) - 2;\n
    v256 = v48;\n
    *(v256) = &*(v256)->padding_1[1];\n
    v129 = v186;\n
    v128 = a0;\n
    if (*(v128) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(&*(v129)->field_0);\n
    v257 = v128;\n
    *(v257) = *(v257) - 2;\n
    v258 = v129;\n
    *(v258) = &*(v258)->padding_1[1];\n
    if (v127 <= *(v128) && !(!v127))\n
        goto LABEL_45dc6e;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45dc6e:\n
    v126 = cgc_calloc(v127);\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v126, *(v129), v127);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v259 = v128;\n
    *(v259) = *(v259) - v127;\n
    v260 = v129;\n
    *(v260) = &(&*(v260)->field_0)[v127];\n
    cgc_checkheap();\n
    cgc_free(v126);\n
    v167 = v186;\n
    v166 = a0;\n
    memset(&v163, 0, 21);\n
    if (*(v166) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v261 = *(v167);\n
    v165 = *(&v261[4]);\n
    v164 = *(&v261[0]);\n
    cgc_uint2str(&v163, 21, v164);\n
    v4 = &v163;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v163)) < 0)\n
        cgc__terminate();\n
    v262 = v166;\n
    *(v262) = *(v262) - 8;\n
    v263 = v167;\n
    *(v263) = &(*(v263))[1].padding_1[2];\n
    v125 = v186;\n
    v124 = a0;\n
    if (*(v124) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    v264 = v124;\n
    *(v264) = *(v264) - 2;\n
    v265 = v125;\n
    *(v265) = &*(v265)->padding_1[1];\n
    if (v123 <= *(v124) && !(!v123))\n
        goto LABEL_45dfd9;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45dfd9:\n
    v122 = cgc_calloc(v123);\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v122, *(v125), v123);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v266 = v124;\n
    *(v266) = *(v266) - v123;\n
    v267 = v125;\n
    *(v267) = &(&*(v267)->field_0)[v123];\n
    cgc_checkheap();\n
    cgc_free(v122);\n
    v69 = v186;\n
    v68 = a0;\n
    *(&v65[0]) = *(v69);\n
    memset(&v64, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v65[0])\n
    {\n
        v3 = 0;\n
        if (v65[1])\n
        {\n
            v3 = 0;\n
            if (v65[2])\n
            {\n
                v3 = 0;\n
                if (v65[3])\n
                {\n
                    v3 = 0;\n
                    if (v65[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v65[1] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v65[1 + 1] << 8)\n
                                v3 = v65[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v66 = v3 & 1;\n
    v67 = 0;\n
    cgc_uint2str(&v64, 21, v66);\n
    v2 = &v64;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v268 = v68;\n
    *(v268) = *(v268) - 8;\n
    v269 = v69;\n
    *(v269) = &(*(v269))[1].padding_1[2];\n
    v113 = v186;\n
    v112 = a0;\n
    memset(&v110, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v111 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-786, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v38 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v110, 12, v38);\n
    v1 = &v110;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v270 = v112;\n
    *(v270) = *(v270) - 4;\n
    v271 = v113;\n
    *(v271) = &*(v271)->field_4;\n
    v93 = v186;\n
    v92 = a0;\n
    memset(&v90, 0, 6);\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(&*(v93)->field_0);\n
    cgc_uint2str(&v90, 6, v91);\n
    v0 = &v90;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v272 = v92;\n
    *(v272) = *(v272) - 2;\n
    v273 = v93;\n
    *(v273) = &*(v273)->padding_1[1];\n
    v141 = v186;\n
    v140 = a0;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    v274 = v140;\n
    *(v274) = *(v274) - 2;\n
    v275 = v141;\n
    *(v275) = &*(v275)->padding_1[1];\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_45e715;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45e715:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v276 = v140;\n
    *(v276) = *(v276) - v139;\n
    v277 = v141;\n
    *(v277) = &(&*(v277)->field_0)[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v137 = v186;\n
    v136 = a0;\n
    if (*(v136) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(&*(v137)->field_0);\n
    v278 = v136;\n
    *(v278) = *(v278) - 2;\n
    v279 = v137;\n
    *(v279) = &*(v279)->padding_1[1];\n
    if (v135 <= *(v136) && !(!v135))\n
        goto LABEL_45e94f;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45e94f:\n
    v134 = cgc_calloc(v135);\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v134, *(v137), v135);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v280 = v136;\n
    *(v280) = *(v280) - v135;\n
    v281 = v137;\n
    *(v281) = &(&*(v281)->field_0)[v135];\n
    cgc_checkheap();\n
    cgc_free(v134);\n
    v42 ^= v31->field_260;\n
    if (v42)\n
        cgc___stack_cookie_fail();\n
    v282 = a0;\n
    if (*(v282) > 0 && v41 >= 0 && v41 < 0)\n
        v282 = *((&v43 + 0x4 * v41))(v186);\n
    v283 = v185;\n
    return v282;\n
}\n
", "4582132:sub_45eaf4": null, "4582144:cgc_process_llamaHoplonemertini": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaHoplonemertini(struct struct_0 **v24, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x7c]\n
    char v1;  // [bp-0x75]\n
    struct_3 *v2;  // [bp-0x74]\n
    char v3;  // [bp-0x6d]\n
    struct_1 *v4;  // [bp-0x6c]\n
    struct struct_2 **v5;  // [bp-0x68]\n
    unsigned int v6;  // [bp-0x64]\n
    char v7;  // [bp-0x60]\n
    char v8;  // [bp-0x5e]\n
    char v9[2];  // [bp-0x58]\n
    unsigned short v10;  // [bp-0x52]\n
    unsigned int *v11;  // [bp-0x50]\n
    struct struct_0 **v12;  // [bp-0x4c]\n
    char v13;  // [bp-0x45]\n
    char v14[8];  // [bp-0x30]\n
    unsigned int v15;  // [bp-0x2c]\n
    void* v16;  // [bp-0x28]\n
    unsigned int *v17;  // [bp-0x20]\n
    struct struct_0 **v18;  // [bp-0x1c]\n
    unsigned int v19;  // [bp-0x18]\n
    char v20;  // [bp-0x11]\n
    unsigned int *v21;  // [bp-0x10]\n
    struct struct_0 **v22;  // [bp-0xc]\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // ebx\n
    unsigned int *v26;  // eax\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    unsigned int *v29;  // eax\n
    unsigned int *v30;  // eax\n
    struct struct_0 **v31;  // eax\n
    unsigned int *v32;  // eax\n
    struct struct_0 **v33;  // eax\n
    unsigned int *v34;  // eax, Other Possible Types: unsigned int\n
    unsigned int v35;  // ebx\n
\n
    v23 = v25;\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = cgc__cookie;\n
    v5 = -1;\n
    if (cgc_sendline(1, \"===llamaHoplonemertini===\", 25) < 0)\n
        cgc__terminate();\n
    v22 = v24;\n
    v21 = a0;\n
    if (*(v21) < 1)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = *(v22)->field_0;\n
    v26 = v21;\n
    *(v26) = *(v26) - 1;\n
    v27 = v22;\n
    *(v27) = &*(v27)->field_1;\n
    if (v20 <= *(v21) && !(!v20))\n
        goto LABEL_45ec4f;\n
    if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45ec4f:\n
    v19 = cgc_calloc(v20);\n
    if (!v19)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v19, *(v22), v20);\n
    if (cgc_sendline(1, &v4[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v28 = v22;\n
    *(v28) = &(&*(v28)->field_0)[v20];\n
    v29 = v21;\n
    *(v29) = *(v29) - v20;\n
    cgc_checkheap();\n
    cgc_free(v19);\n
    v18 = v24;\n
    v17 = a0;\n
    *(&v14[0]) = *(v18);\n
    memset(&v13, 0, 21);\n
    if (*(v17) < 8)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v14[0])\n
    {\n
        v3 = 0;\n
        if (v14[1])\n
        {\n
            v3 = 0;\n
            if (v14[2])\n
            {\n
                v3 = 0;\n
                if (v14[3])\n
                {\n
                    v3 = 0;\n
                    if (v14[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v14[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v14[6] << 8)\n
                                v3 = v14[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v15 = v3 & 1;\n
    v16 = 0;\n
    cgc_uint2str(&v13, 21, v15);\n
    v2 = &v13;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v13)) < 0)\n
        cgc__terminate();\n
    v30 = v17;\n
    *(v30) = *(v30) - 8;\n
    v31 = v18;\n
    *(v31) = *(v31) + 1;\n
    v12 = v24;\n
    v11 = a0;\n
    *(&v9) = *(v12);\n
    memset(&v8, 0, 6);\n
    if (*(v11) < 2)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v9[0] << 8)\n
        v1 = v9[1];\n
    v10 = v1 & 1;\n
    cgc_uint2str(&v8, 6, v10);\n
    v0 = &v8;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v8)) < 0)\n
        cgc__terminate();\n
    v32 = v11;\n
    *(v32) = *(v32) - 2;\n
    v33 = v12;\n
    *(v33) = &*(v33)->field_2;\n
    v6 ^= v4->field_260;\n
    if (v6)\n
        cgc___stack_cookie_fail();\n
    v34 = a0;\n
    if (*(v34) > 0 && v5 >= 0 && v5 < 0)\n
        v34 = *((&v7 + 0x4 * v5))(v24);\n
    v35 = v23;\n
    return v34;\n
}\n
", "4583581:sub_45f09d": null, "4583584:cgc_process_llamanatterjack": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0358;\n
\n
int cgc_process_llamanatterjack(struct struct_0 **v88, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x1c4]\n
    struct_1 *v1;  // [bp-0x1c0]\n
    struct_1 *v2;  // [bp-0x1bc]\n
    char v3;  // [bp-0x1b5]\n
    struct_1 *v4;  // [bp-0x1b4]\n
    char v5;  // [bp-0x1ad]\n
    struct_1 *v6;  // [bp-0x1ac]\n
    char v7;  // [bp-0x1a5]\n
    unsigned int v8;  // [bp-0x1a4]\n
    struct_1 *v9;  // [bp-0x1a0]\n
    struct_1 *v10;  // [bp-0x19c]\n
    struct_1 *v11;  // [bp-0x198]\n
    struct_2 *v12;  // [bp-0x194]\n
    unsigned short v13;  // [bp-0x190]\n
    unsigned short v14;  // [bp-0x18e]\n
    unsigned long v15;  // [bp-0x18c]\n
    struct struct_3 **v16;  // [bp-0x184], Other Possible Types: unsigned int\n
    unsigned int v17;  // [bp-0x180]\n
    unsigned int v18;  // [bp-0x17c]\n
    char v19;  // [bp-0x175]\n
    char v20[8];  // [bp-0x160]\n
    unsigned int v21;  // [bp-0x15c]\n
    void* v22;  // [bp-0x158]\n
    unsigned int *v23;  // [bp-0x150]\n
    struct struct_0 **v24;  // [bp-0x14c]\n
    char v25;  // [bp-0x145]\n
    char v26[8];  // [bp-0x130]\n
    unsigned int v27;  // [bp-0x12c]\n
    void* v28;  // [bp-0x128]\n
    unsigned int *v29;  // [bp-0x120]\n
    struct struct_0 **v30;  // [bp-0x11c]\n
    char v31;  // [bp-0x115]\n
    char v32[8];  // [bp-0x100]\n
    unsigned int v33;  // [bp-0xfc]\n
    void* v34;  // [bp-0xf8]\n
    unsigned int *v35;  // [bp-0xf0]\n
    struct struct_0 **v36;  // [bp-0xec]\n
    char v37;  // [bp-0xe8]\n
    unsigned short v38;  // [bp-0xe2]\n
    unsigned int *v39;  // [bp-0xe0]\n
    struct struct_0 **v40;  // [bp-0xdc]\n
    char v41;  // [bp-0xd8]\n
    unsigned short v42;  // [bp-0xd2]\n
    unsigned int *v43;  // [bp-0xd0]\n
    struct struct_0 **v44;  // [bp-0xcc]\n
    char v45[8];  // [bp-0xc8]\n
    unsigned int *v46;  // [bp-0xc4]\n
    struct struct_0 **v47;  // [bp-0xc0]\n
    unsigned short *v48;  // [bp-0xbc]\n
    unsigned int *v49;  // [bp-0xb8]\n
    struct struct_0 **v50;  // [bp-0xb4]\n
    char v51;  // [bp-0xb0]\n
    unsigned int v52;  // [bp-0xa4]\n
    unsigned int *v53;  // [bp-0xa0]\n
    struct struct_0 **v54;  // [bp-0x9c]\n
    char v55;  // [bp-0x98]\n
    unsigned int v56;  // [bp-0x8c]\n
    unsigned int *v57;  // [bp-0x88]\n
    struct struct_0 **v58;  // [bp-0x84]\n
    char v59;  // [bp-0x80]\n
    unsigned int v60;  // [bp-0x74]\n
    unsigned int *v61;  // [bp-0x70]\n
    struct struct_0 **v62;  // [bp-0x6c]\n
    unsigned int v63;  // [bp-0x68]\n
    unsigned short v64;  // [bp-0x62]\n
    unsigned int *v65;  // [bp-0x60]\n
    struct struct_0 **v66;  // [bp-0x5c]\n
    unsigned int v67;  // [bp-0x58]\n
    unsigned short v68;  // [bp-0x52]\n
    unsigned int *v69;  // [bp-0x50]\n
    struct struct_0 **v70;  // [bp-0x4c]\n
    unsigned int v71;  // [bp-0x48]\n
    unsigned short v72;  // [bp-0x42]\n
    unsigned int *v73;  // [bp-0x40]\n
    struct struct_0 **v74;  // [bp-0x3c]\n
    char *v75;  // [bp-0x38]\n
    unsigned int v76;  // [bp-0x34]\n
    unsigned int *v77;  // [bp-0x30]\n
    struct struct_0 **v78;  // [bp-0x2c]\n
    unsigned int v79;  // [bp-0x28]\n
    char v80;  // [bp-0x21]\n
    unsigned int *v81;  // [bp-0x20]\n
    struct struct_0 **v82;  // [bp-0x1c]\n
    unsigned int v83;  // [bp-0x18]\n
    char v84;  // [bp-0x11]\n
    unsigned int *v85;  // [bp-0x10]\n
    struct struct_0 **v86;  // [bp-0xc]\n
    unsigned int v87;  // [bp-0x8]\n
    unsigned int v89;  // ebx\n
    unsigned int *v90;  // eax\n
    struct struct_0 **v91;  // eax\n
    unsigned int *v92;  // eax\n
    struct struct_0 **v93;  // eax\n
    unsigned int *v94;  // eax\n
    struct struct_0 **v95;  // eax\n
    struct struct_0 **v97;  // eax\n
    unsigned int *v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_0 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_0 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_0 **v105;  // eax\n
    unsigned int *v106;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_0 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    unsigned int *v114;  // eax\n
    struct struct_0 **v115;  // eax\n
    unsigned int *v116;  // eax\n
    struct struct_0 **v117;  // eax\n
    unsigned int *v118;  // eax\n
    struct struct_0 **v119;  // eax\n
    unsigned int *v120;  // eax\n
    struct struct_0 **v121;  // eax\n
    unsigned int *v122;  // eax\n
    struct struct_0 **v123;  // eax\n
    unsigned int *v124;  // eax\n
    struct struct_0 **v125;  // eax\n
    struct struct_0 **v126;  // eax\n
    unsigned int *v127;  // eax\n
    unsigned int *v128;  // eax\n
    struct struct_0 **v129;  // eax\n
    struct struct_0 **v130;  // eax\n
    unsigned int *v131;  // eax\n
    unsigned int *v132;  // eax\n
    struct struct_0 **v133;  // eax\n
    unsigned int *v134;  // eax, Other Possible Types: unsigned int\n
    unsigned int v135;  // ebx\n
\n
    v87 = v89;\n
    v12 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v18 = g_4f0358;\n
    v17 = cgc__cookie;\n
    v16 = -1;\n
    if (cgc_sendline(1, \"===llamanatterjack===\", 21) < 0)\n
        cgc__terminate();\n
    v58 = v88;\n
    v57 = a0;\n
    memset(&v55, 0, 12);\n
    if (*(v57) < 4)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(&*(v58)->field_0);\n
    cgc_uint2str(&v55, 12, v56);\n
    v11 = &v55;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v90 = v57;\n
    *(v90) = *(v90) - 4;\n
    v91 = v58;\n
    *(v91) = &*(v91)->field_4;\n
    v54 = v88;\n
    v53 = a0;\n
    memset(&v51, 0, 12);\n
    if (*(v53) < 4)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = *(&*(v54)->field_0);\n
    cgc_uint2str(&v51, 12, v52);\n
    v10 = &v51;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v92 = v53;\n
    *(v92) = *(v92) - 4;\n
    v93 = v54;\n
    *(v93) = &*(v93)->field_4;\n
    v62 = v88;\n
    v61 = a0;\n
    memset(&v59, 0, 12);\n
    if (*(v61) < 4)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v60 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v14 = [D] x86g_create_fpucw(fpround<4>);\n
    v13 = v14 | 0xc00;\n
    v15 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v59, 12, v15);\n
    v9 = &v59;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v94 = v61;\n
    *(v94) = *(v94) - 4;\n
    v95 = v62;\n
    *(v95) = &*(v95)->field_4;\n
    v78 = v88;\n
    v77 = a0;\n
    if (*(v77) <= 0)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v77) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v77);\n
    v76 = v8;\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = cgc_calloc(134);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v75, &v12[18].padding_0[182]);\n
    cgc_strncpy(v75 + 5, *(v78), v76);\n
    v97 = v78;\n
    *(v97) = &(&*(v97)->field_4)[cgc_strlen(v75)];\n
    v99 = v77;\n
    *(v99) = *(v99) - (cgc_strlen(v75) + -4);\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    if (cgc_sendline(1, &v12[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v36 = v88;\n
    v35 = a0;\n
    *(&v32[0]) = *(v36);\n
    memset(&v31, 0, 21);\n
    if (*(v35) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v32[0])\n
    {\n
        v7 = 0;\n
        if (v32[1])\n
        {\n
            v7 = 0;\n
            if (v32[2])\n
            {\n
                v7 = 0;\n
                if (v32[3])\n
                {\n
                    v7 = 0;\n
                    if (v32[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v32[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v32[6] << 8)\n
                                v7 = v32[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v33 = v7 & 1;\n
    v34 = 0;\n
    cgc_uint2str(&v31, 21, v33);\n
    v6 = &v31;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v31)) < 0)\n
        cgc__terminate();\n
    v100 = v35;\n
    *(v100) = *(v100) - 8;\n
    v101 = v36;\n
    *(v101) = *(v101) + 1;\n
    v30 = v88;\n
    v29 = a0;\n
    *(&v26[0]) = *(v30);\n
    memset(&v25, 0, 21);\n
    if (*(v29) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v26[0])\n
    {\n
        v5 = 0;\n
        if (v26[1])\n
        {\n
            v5 = 0;\n
            if (v26[2])\n
            {\n
                v5 = 0;\n
                if (v26[3])\n
                {\n
                    v5 = 0;\n
                    if (v26[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v26[5] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v26[6] << 8)\n
                                v5 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v27 = v5 & 1;\n
    v28 = 0;\n
    cgc_uint2str(&v25, 21, v27);\n
    v4 = &v25;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v102 = v29;\n
    *(v102) = *(v102) - 8;\n
    v103 = v30;\n
    *(v103) = *(v103) + 1;\n
    v74 = v88;\n
    v73 = a0;\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(&*(v74)->field_0);\n
    v104 = v73;\n
    *(v104) = *(v104) - 2;\n
    v105 = v74;\n
    *(v105) = &*(v105)->padding_1[1];\n
    if (v72 <= *(v73) && !(!v72))\n
        goto LABEL_45fcc3;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_45fcc3:\n
    v71 = cgc_calloc(v72);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v71, *(v74), v72);\n
    if (cgc_sendline(1, &v12[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v106 = v73;\n
    *(v106) = *(v106) - v72;\n
    v107 = v74;\n
    *(v107) = &(&*(v107)->field_0)[v72];\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    v24 = v88;\n
    v23 = a0;\n
    *(&v20[0]) = *(v24);\n
    memset(&v19, 0, 21);\n
    if (*(v23) < 8)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v20[0])\n
    {\n
        v3 = 0;\n
        if (v20[1])\n
        {\n
            v3 = 0;\n
            if (v20[2])\n
            {\n
                v3 = 0;\n
                if (v20[3])\n
                {\n
                    v3 = 0;\n
                    if (v20[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v20[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v20[6] << 8)\n
                                v3 = v20[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v21 = v3 & 1;\n
    v22 = 0;\n
    cgc_uint2str(&v19, 21, v21);\n
    v2 = &v19;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v19)) < 0)\n
        cgc__terminate();\n
    v108 = v23;\n
    *(v108) = *(v108) - 8;\n
    v109 = v24;\n
    *(v109) = *(v109) + 1;\n
    v66 = v88;\n
    v65 = a0;\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    v110 = v65;\n
    *(v110) = *(v110) - 2;\n
    v111 = v66;\n
    *(v111) = &*(v111)->padding_1[1];\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_460106;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_460106:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, &v12[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v112 = v65;\n
    *(v112) = *(v112) - v64;\n
    v113 = v66;\n
    *(v113) = &(&*(v113)->field_0)[v64];\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v70 = v88;\n
    v69 = a0;\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(&*(v70)->field_0);\n
    v114 = v69;\n
    *(v114) = *(v114) - 2;\n
    v115 = v70;\n
    *(v115) = &*(v115)->padding_1[1];\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_460301;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_460301:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, &v12[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v116 = v69;\n
    *(v116) = *(v116) - v68;\n
    v117 = v70;\n
    *(v117) = &(&*(v117)->field_0)[v68];\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v50 = v88;\n
    v49 = a0;\n
    v48 = &*(v50)->field_0;\n
    if (*(v49) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = v49;\n
    *(v118) = *(v118) - 2;\n
    v119 = v50;\n
    *(v119) = &*(v119)->padding_1[1];\n
    v16 = *(v48);\n
    v44 = v88;\n
    v43 = a0;\n
    memset(&v41, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v42 = *(&*(v44)->field_0);\n
    cgc_uint2str(&v41, 6, v42);\n
    v1 = &v41;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v41)) < 0)\n
        cgc__terminate();\n
    v120 = v43;\n
    *(v120) = *(v120) - 2;\n
    v121 = v44;\n
    *(v121) = &*(v121)->padding_1[1];\n
    v40 = v88;\n
    v39 = a0;\n
    memset(&v37, 0, 6);\n
    if (*(v39) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v38 = *(&*(v40)->field_0);\n
    cgc_uint2str(&v37, 6, v38);\n
    v0 = &v37;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v37)) < 0)\n
        cgc__terminate();\n
    v122 = v39;\n
    *(v122) = *(v122) - 2;\n
    v123 = v40;\n
    *(v123) = &*(v123)->padding_1[1];\n
    v86 = v88;\n
    v85 = a0;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(v86)->field_0;\n
    v124 = v85;\n
    *(v124) = *(v124) - 1;\n
    v125 = v86;\n
    *(v125) = &*(v125)->padding_1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_46082f;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46082f:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, &v12[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v126 = v86;\n
    *(v126) = &(&*(v126)->field_0)[v84];\n
    v127 = v85;\n
    *(v127) = *(v127) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v82 = v88;\n
    v81 = a0;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(v82)->field_0;\n
    v128 = v81;\n
    *(v128) = *(v128) - 1;\n
    v129 = v82;\n
    *(v129) = &*(v129)->padding_1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_460a28;\n
    if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_460a28:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, &v12[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v130 = v82;\n
    *(v130) = &(&*(v130)->field_0)[v80];\n
    v131 = v81;\n
    *(v131) = *(v131) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v47 = v88;\n
    v46 = a0;\n
    *(&v45[0]) = *(v47);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, &v12[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = v46;\n
    *(v132) = *(v132) - 2;\n
    v133 = v47;\n
    *(v133) = &*(v133)->padding_1[1];\n
    v16 = *(&v45[0]);\n
    v17 ^= v12->field_260;\n
    if (v17)\n
        cgc___stack_cookie_fail();\n
    v134 = a0;\n
    if (*(v134) > 0 && v16 >= 0 && v16 < 1)\n
        v134 = (&v18)[v16](v88);\n
    v135 = v87;\n
    return v134;\n
}\n
", "4590677:sub_460c55": null, "4590688:cgc_process_llamascobby": "typedef struct struct_4 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamascobby(struct struct_0 **v182, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x3a4]\n
    struct_1 *v1;  // [bp-0x3a0]\n
    struct_1 *v2;  // [bp-0x39c]\n
    struct_1 *v3;  // [bp-0x398]\n
    struct_1 *v4;  // [bp-0x394]\n
    struct_1 *v5;  // [bp-0x390]\n
    struct_1 *v6;  // [bp-0x38c]\n
    struct_1 *v7;  // [bp-0x388]\n
    char v8;  // [bp-0x381]\n
    struct_1 *v9;  // [bp-0x380]\n
    char v10;  // [bp-0x379]\n
    struct_1 *v11;  // [bp-0x378]\n
    unsigned int v12;  // [bp-0x374]\n
    struct_1 *v13;  // [bp-0x370]\n
    char v14;  // [bp-0x369]\n
    struct_1 *v15;  // [bp-0x368]\n
    struct_1 *v16;  // [bp-0x364]\n
    unsigned int v17;  // [bp-0x360]\n
    struct_1 *v18;  // [bp-0x35c]\n
    struct_1 *v19;  // [bp-0x358]\n
    struct_1 *v20;  // [bp-0x354]\n
    unsigned int v21;  // [bp-0x350]\n
    struct_1 *v22;  // [bp-0x34c]\n
    char v23;  // [bp-0x345]\n
    unsigned int v24;  // [bp-0x344]\n
    unsigned int v25;  // [bp-0x340]\n
    struct_1 *v26;  // [bp-0x33c]\n
    struct_4 *v27;  // [bp-0x338]\n
    unsigned short v28;  // [bp-0x334]\n
    unsigned short v29;  // [bp-0x332]\n
    unsigned short v30;  // [bp-0x330]\n
    unsigned short v31;  // [bp-0x32e]\n
    unsigned short v32;  // [bp-0x32c]\n
    unsigned short v33;  // [bp-0x32a]\n
    unsigned short v34;  // [bp-0x328]\n
    unsigned short v35;  // [bp-0x326]\n
    unsigned short v36;  // [bp-0x324]\n
    unsigned short v37;  // [bp-0x322]\n
    unsigned short v38;  // [bp-0x320]\n
    unsigned short v39;  // [bp-0x31e]\n
    unsigned long v40;  // [bp-0x31c]\n
    unsigned long v41;  // [bp-0x314]\n
    unsigned long v42;  // [bp-0x30c]\n
    unsigned long v43;  // [bp-0x304]\n
    unsigned long v44;  // [bp-0x2fc]\n
    unsigned long v45;  // [bp-0x2f4]\n
    struct struct_3 **v46;  // [bp-0x2e8]\n
    unsigned int v47;  // [bp-0x2e4]\n
    char v48;  // [bp-0x2e0]\n
    char v49;  // [bp-0x2de]\n
    char *v50;  // [bp-0x2d8]\n
    unsigned short v51;  // [bp-0x2d2]\n
    unsigned int *v52;  // [bp-0x2d0]\n
    struct struct_0 **v53;  // [bp-0x2cc]\n
    char v54;  // [bp-0x2c6]\n
    struct_2 *v55;  // [bp-0x2c0]\n
    unsigned short v56;  // [bp-0x2ba]\n
    unsigned int *v57;  // [bp-0x2b8]\n
    struct struct_0 **v58;  // [bp-0x2b4]\n
    char v59;  // [bp-0x2ad]\n
    char v60[8];  // [bp-0x298]\n
    unsigned int v61;  // [bp-0x294]\n
    void* v62;  // [bp-0x290]\n
    unsigned int *v63;  // [bp-0x28c]\n
    struct struct_0 **v64;  // [bp-0x288]\n
    unsigned int v65;  // [bp-0x284]\n
    char v66;  // [bp-0x27d]\n
    unsigned int *v67;  // [bp-0x27c]\n
    struct struct_0 **v68;  // [bp-0x278]\n
    unsigned int v69;  // [bp-0x274]\n
    char v70;  // [bp-0x26d]\n
    unsigned int *v71;  // [bp-0x26c]\n
    struct struct_0 **v72;  // [bp-0x268]\n
    char *v73;  // [bp-0x264]\n
    unsigned int v74;  // [bp-0x260]\n
    unsigned int *v75;  // [bp-0x25c]\n
    struct struct_0 **v76;  // [bp-0x258]\n
    char *v77;  // [bp-0x254]\n
    unsigned int v78;  // [bp-0x250]\n
    unsigned int *v79;  // [bp-0x24c]\n
    struct struct_0 **v80;  // [bp-0x248]\n
    char *v81;  // [bp-0x244]\n
    unsigned int v82;  // [bp-0x240]\n
    unsigned int *v83;  // [bp-0x23c]\n
    struct struct_0 **v84;  // [bp-0x238]\n
    char v85;  // [bp-0x234]\n
    unsigned short v86;  // [bp-0x22e]\n
    unsigned int *v87;  // [bp-0x22c]\n
    struct struct_0 **v88;  // [bp-0x228]\n
    char v89;  // [bp-0x224]\n
    unsigned short v90;  // [bp-0x21e]\n
    unsigned int *v91;  // [bp-0x21c]\n
    struct struct_0 **v92;  // [bp-0x218]\n
    char v93;  // [bp-0x214]\n
    unsigned short v94;  // [bp-0x20e]\n
    unsigned int *v95;  // [bp-0x20c]\n
    struct struct_0 **v96;  // [bp-0x208]\n
    char v97;  // [bp-0x201]\n
    unsigned long v98;  // [bp-0x1ec]\n
    unsigned int *v99;  // [bp-0x1e4]\n
    struct struct_0 **v100;  // [bp-0x1e0]\n
    char v101;  // [bp-0x1d9]\n
    unsigned long v102;  // [bp-0x1c4]\n
    unsigned int *v103;  // [bp-0x1b8]\n
    struct struct_0 **v104;  // [bp-0x1b4]\n
    char v105;  // [bp-0x1b0]\n
    unsigned int v106;  // [bp-0x1a4]\n
    unsigned int *v107;  // [bp-0x1a0]\n
    struct struct_0 **v108;  // [bp-0x19c]\n
    char v109;  // [bp-0x198]\n
    unsigned int v110;  // [bp-0x18c]\n
    unsigned int *v111;  // [bp-0x188]\n
    struct struct_0 **v112;  // [bp-0x184]\n
    char v113;  // [bp-0x180]\n
    unsigned int v114;  // [bp-0x174]\n
    unsigned int *v115;  // [bp-0x170]\n
    struct struct_0 **v116;  // [bp-0x16c]\n
    char v117;  // [bp-0x168]\n
    unsigned int v118;  // [bp-0x15c]\n
    unsigned int *v119;  // [bp-0x158]\n
    struct struct_0 **v120;  // [bp-0x154]\n
    char v121;  // [bp-0x150]\n
    unsigned int v122;  // [bp-0x144]\n
    unsigned int *v123;  // [bp-0x140]\n
    struct struct_0 **v124;  // [bp-0x13c]\n
    char v125;  // [bp-0x138]\n
    unsigned int v126;  // [bp-0x12c]\n
    unsigned int *v127;  // [bp-0x128]\n
    struct struct_0 **v128;  // [bp-0x124]\n
    unsigned int v129;  // [bp-0x120]\n
    unsigned short v130;  // [bp-0x11a]\n
    unsigned int *v131;  // [bp-0x118]\n
    struct struct_0 **v132;  // [bp-0x114]\n
    unsigned int v133;  // [bp-0x110]\n
    unsigned short v134;  // [bp-0x10a]\n
    unsigned int *v135;  // [bp-0x108]\n
    struct struct_0 **v136;  // [bp-0x104]\n
    unsigned int v137;  // [bp-0x100]\n
    unsigned short v138;  // [bp-0xfa]\n
    unsigned int *v139;  // [bp-0xf8]\n
    struct struct_0 **v140;  // [bp-0xf4]\n
    char v141;  // [bp-0xf0]\n
    char v142[4];  // [bp-0xe4]\n
    unsigned int v143;  // [bp-0xe0]\n
    unsigned int *v144;  // [bp-0xdc]\n
    struct struct_0 **v145;  // [bp-0xd8]\n
    char *v146;  // [bp-0xd4]\n
    unsigned int v147;  // [bp-0xd0]\n
    unsigned int *v148;  // [bp-0xcc]\n
    struct struct_0 **v149;  // [bp-0xc8]\n
    char *v150;  // [bp-0xc4]\n
    unsigned int v151;  // [bp-0xc0]\n
    unsigned int *v152;  // [bp-0xbc]\n
    struct struct_0 **v153;  // [bp-0xb8]\n
    char v154;  // [bp-0xb1]\n
    unsigned int v155;  // [bp-0x9c]\n
    unsigned int v156;  // [bp-0x98]\n
    unsigned int *v157;  // [bp-0x94]\n
    struct struct_0 **v158;  // [bp-0x90]\n
    char v159;  // [bp-0x89]\n
    unsigned int v160;  // [bp-0x74]\n
    unsigned int v161;  // [bp-0x70]\n
    unsigned int *v162;  // [bp-0x6c]\n
    struct struct_0 **v163;  // [bp-0x68]\n
    char v164;  // [bp-0x61]\n
    unsigned int v165;  // [bp-0x4c]\n
    unsigned int v166;  // [bp-0x48]\n
    unsigned int *v167;  // [bp-0x40]\n
    struct struct_0 **v168;  // [bp-0x3c]\n
    unsigned int v169;  // [bp-0x38]\n
    char v170;  // [bp-0x31]\n
    unsigned int *v171;  // [bp-0x30]\n
    struct struct_0 **v172;  // [bp-0x2c]\n
    unsigned int v173;  // [bp-0x28]\n
    char v174;  // [bp-0x21]\n
    unsigned int *v175;  // [bp-0x20]\n
    struct struct_0 **v176;  // [bp-0x1c]\n
    unsigned int v177;  // [bp-0x18]\n
    char v178;  // [bp-0x11]\n
    unsigned int *v179;  // [bp-0x10]\n
    struct struct_0 **v180;  // [bp-0xc]\n
    unsigned int v181;  // [bp-0x8]\n
    unsigned int v183;  // ebx\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    struct struct_0 **v186;  // eax\n
    unsigned int *v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_0 **v189;  // eax\n
    struct struct_0 **v191;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v195;  // eax\n
    unsigned int *v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_0 **v199;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int *v203;  // eax\n
    unsigned int *v204;  // eax\n
    struct struct_0 **v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_0 **v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_0 **v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    unsigned int *v215;  // eax\n
    struct_2 *v216;  // ecx\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    struct struct_0 **v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_0 **v232;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    struct struct_0 **v247;  // eax\n
    unsigned int *v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int v255[2];  // ecx\n
    unsigned int *v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    unsigned int v258[2];  // ecx\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax, Other Possible Types: unsigned int\n
    unsigned int v276;  // ebx\n
\n
    v181 = v183;\n
    v27 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v47 = cgc__cookie;\n
    v46 = -1;\n
    if (cgc_sendline(1, \"===llamascobby===\", 17) < 0)\n
        cgc__terminate();\n
    v72 = v182;\n
    v71 = a0;\n
    if (*(v71) < 1)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v70 = *(v72)->field_0;\n
    v184 = v71;\n
    *(v184) = *(v184) - 1;\n
    v185 = v72;\n
    *(v185) = &*(v185)->padding_1;\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_460deb;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_460deb:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, &v27[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v186 = v72;\n
    *(v186) = &(&*(v186)->field_0)[v70];\n
    v187 = v71;\n
    *(v187) = *(v187) - v70;\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v112 = v182;\n
    v111 = a0;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(&*(v112)->field_0);\n
    cgc_uint2str(&v109, 12, v110);\n
    v26 = &v109;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v188 = v111;\n
    *(v188) = *(v188) - 4;\n
    v189 = v112;\n
    *(v189) = &*(v189)->field_4;\n
    v84 = v182;\n
    v83 = a0;\n
    if (*(v83) <= 0)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v83) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v83);\n
    v82 = v25;\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v81 = cgc_calloc(134);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v81, &v27[18].padding_0[182]);\n
    cgc_strncpy(v81 + 5, *(v84), v82);\n
    v191 = v84;\n
    *(v191) = &(&*(v191)->field_4)[cgc_strlen(v81)];\n
    v193 = v83;\n
    *(v193) = *(v193) - (cgc_strlen(v81) + -4);\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    if (cgc_sendline(1, &v27[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v153 = v182;\n
    v152 = a0;\n
    if (*(v152) <= 0)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v152) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v152);\n
    v151 = v24;\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v150 = cgc_calloc(134);\n
    if (!v150)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v150, &v27[18].padding_0[182]);\n
    cgc_strncpy(v150 + 5, *(v153), v151);\n
    v195 = v153;\n
    *(v195) = &(&*(v195)->field_4)[cgc_strlen(v150)];\n
    v197 = v152;\n
    *(v197) = *(v197) - (cgc_strlen(v150) + -4);\n
    cgc_checkheap();\n
    cgc_free(v150);\n
    if (cgc_sendline(1, &v27[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v58 = v182;\n
    v57 = a0;\n
    v55 = &*(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = 0;\n
    if (v55->field_0 << 8)\n
        v23 = v55->padding_1[0];\n
    v56 = v23 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v22 = &v54;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v198 = v57;\n
    *(v198) = *(v198) - 2;\n
    v199 = v58;\n
    *(v199) = &*(v199)->padding_1[1];\n
    v80 = v182;\n
    v79 = a0;\n
    if (*(v79) <= 0)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v79) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v79);\n
    v78 = v21;\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v77 = cgc_calloc(134);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v77, &v27[18].padding_0[182]);\n
    cgc_strncpy(v77 + 5, *(v80), v78);\n
    v201 = v80;\n
    *(v201) = &(&*(v201)->field_4)[cgc_strlen(v77)];\n
    v203 = v79;\n
    *(v203) = *(v203) - (cgc_strlen(v77) + -4);\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    if (cgc_sendline(1, &v27[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v128 = v182;\n
    v127 = a0;\n
    memset(&v125, 0, 12);\n
    if (*(v127) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v126 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(fpround<4>);\n
    v38 = v39 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v125, 12, v45);\n
    v20 = &v125;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v125)) < 0)\n
        cgc__terminate();\n
    v204 = v127;\n
    *(v204) = *(v204) - 4;\n
    v205 = v128;\n
    *(v205) = &*(v205)->field_4;\n
    v180 = v182;\n
    v179 = a0;\n
    if (*(v179) < 1)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(v180)->field_0;\n
    v206 = v179;\n
    *(v206) = *(v206) - 1;\n
    v207 = v180;\n
    *(v207) = &*(v207)->padding_1;\n
    if (v178 <= *(v179) && !(!v178))\n
        goto LABEL_461bc6;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_461bc6:\n
    v177 = cgc_calloc(v178);\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v177, *(v180), v178);\n
    if (cgc_sendline(1, &v27[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v208 = v180;\n
    *(v208) = &(&*(v208)->field_0)[v178];\n
    v209 = v179;\n
    *(v209) = *(v209) - v178;\n
    cgc_checkheap();\n
    cgc_free(v177);\n
    v104 = v182;\n
    v103 = a0;\n
    memset(&v101, 0, 21);\n
    if (*(v103) < 8)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v102 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-798, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v101, 21, v44);\n
    v19 = &v101;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v101)) < 0)\n
        cgc__terminate();\n
    v210 = v103;\n
    *(v210) = *(v210) - 8;\n
    v211 = v104;\n
    *(v211) = &(*(v211))[1].padding_1[2];\n
    v68 = v182;\n
    v67 = a0;\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v66 = *(v68)->field_0;\n
    v212 = v67;\n
    *(v212) = *(v212) - 1;\n
    v213 = v68;\n
    *(v213) = &*(v213)->padding_1;\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_461f51;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_461f51:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, &v27[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v214 = v68;\n
    *(v214) = &(&*(v214)->field_0)[v66];\n
    v215 = v67;\n
    *(v215) = *(v215) - v66;\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v168 = v182;\n
    v167 = a0;\n
    memset(&v164, 0, 21);\n
    if (*(v167) < 8)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v216 = *(v168);\n
    v166 = v216->field_4;\n
    v165 = *(&v216->field_0);\n
    cgc_uint2str(&v164, 21, v165);\n
    v18 = &v164;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v164)) < 0)\n
        cgc__terminate();\n
    v217 = v167;\n
    *(v217) = *(v217) - 8;\n
    v218 = v168;\n
    *(v218) = &(*(v218))[1].padding_1[2];\n
    v76 = v182;\n
    v75 = a0;\n
    if (*(v75) <= 0)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v75) >= 128)\n
        v17 = 128;\n
    else\n
        v17 = *(v75);\n
    v74 = v17;\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v73 = cgc_calloc(134);\n
    if (!v73)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v73, &v27[18].padding_0[182]);\n
    cgc_strncpy(v73 + 5, *(v76), v74);\n
    v220 = v76;\n
    *(v220) = &(&*(v220)->field_4)[cgc_strlen(v73)];\n
    v222 = v75;\n
    *(v222) = *(v222) - (cgc_strlen(v73) + -4);\n
    cgc_checkheap();\n
    cgc_free(v73);\n
    if (cgc_sendline(1, &v27[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v124 = v182;\n
    v123 = a0;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v122 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-802, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v121, 12, v43);\n
    v16 = &v121;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v121)) < 0)\n
        cgc__terminate();\n
    v223 = v123;\n
    *(v223) = *(v223) - 4;\n
    v224 = v124;\n
    *(v224) = &*(v224)->field_4;\n
    v176 = v182;\n
    v175 = a0;\n
    if (*(v175) < 1)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v174 = *(v176)->field_0;\n
    v225 = v175;\n
    *(v225) = *(v225) - 1;\n
    v226 = v176;\n
    *(v226) = &*(v226)->padding_1;\n
    if (v174 <= *(v175) && !(!v174))\n
        goto LABEL_462685;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_462685:\n
    v173 = cgc_calloc(v174);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v173, *(v176), v174);\n
    if (cgc_sendline(1, &v27[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v227 = v176;\n
    *(v227) = &(&*(v227)->field_0)[v174];\n
    v228 = v175;\n
    *(v228) = *(v228) - v174;\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    v108 = v182;\n
    v107 = a0;\n
    memset(&v105, 0, 12);\n
    if (*(v107) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(&*(v108)->field_0);\n
    cgc_uint2str(&v105, 12, v106);\n
    v15 = &v105;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v105)) < 0)\n
        cgc__terminate();\n
    v229 = v107;\n
    *(v229) = *(v229) - 4;\n
    v230 = v108;\n
    *(v230) = &*(v230)->field_4;\n
    v64 = v182;\n
    v63 = a0;\n
    *(&v60[0]) = *(v64);\n
    memset(&v59, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v60[0])\n
    {\n
        v14 = 0;\n
        if (v60[1])\n
        {\n
            v14 = 0;\n
            if (v60[2])\n
            {\n
                v14 = 0;\n
                if (v60[3])\n
                {\n
                    v14 = 0;\n
                    if (v60[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v60[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v60[6] << 8)\n
                                v14 = v60[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v61 = v14 & 1;\n
    v62 = 0;\n
    cgc_uint2str(&v59, 21, v61);\n
    v13 = &v59;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v231 = v63;\n
    *(v231) = *(v231) - 8;\n
    v232 = v64;\n
    *(v232) = &(*(v232))[1].padding_1[2];\n
    v149 = v182;\n
    v148 = a0;\n
    if (*(v148) <= 0)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v148) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v148);\n
    v147 = v12;\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v146 = cgc_calloc(134);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v146, &v27[18].padding_0[182]);\n
    cgc_strncpy(v146 + 5, *(v149), v147);\n
    v234 = v149;\n
    *(v234) = &(&*(v234)->field_4)[cgc_strlen(v146)];\n
    v236 = v148;\n
    *(v236) = *(v236) - (cgc_strlen(v146) + -4);\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    if (cgc_sendline(1, &v27[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v140 = v182;\n
    v139 = a0;\n
    if (*(v139) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v138 = *(&*(v140)->field_0);\n
    v237 = v139;\n
    *(v237) = *(v237) - 2;\n
    v238 = v140;\n
    *(v238) = &*(v238)->padding_1[1];\n
    if (v138 <= *(v139) && !(!v138))\n
        goto LABEL_462eaa;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_462eaa:\n
    v137 = cgc_calloc(v138);\n
    if (!v137)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v137, *(v140), v138);\n
    if (cgc_sendline(1, &v27[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v239 = v139;\n
    *(v239) = *(v239) - v138;\n
    v240 = v140;\n
    *(v240) = &(&*(v240)->field_0)[v138];\n
    cgc_checkheap();\n
    cgc_free(v137);\n
    v136 = v182;\n
    v135 = a0;\n
    if (*(v135) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v134 = *(&*(v136)->field_0);\n
    v241 = v135;\n
    *(v241) = *(v241) - 2;\n
    v242 = v136;\n
    *(v242) = &*(v242)->padding_1[1];\n
    if (v134 <= *(v135) && !(!v134))\n
        goto LABEL_4630e4;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4630e4:\n
    v133 = cgc_calloc(v134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v133, *(v136), v134);\n
    if (cgc_sendline(1, &v27[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v243 = v135;\n
    *(v243) = *(v243) - v134;\n
    v244 = v136;\n
    *(v244) = &(&*(v244)->field_0)[v134];\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    v172 = v182;\n
    v171 = a0;\n
    if (*(v171) < 1)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v170 = *(v172)->field_0;\n
    v245 = v171;\n
    *(v245) = *(v245) - 1;\n
    v246 = v172;\n
    *(v246) = &*(v246)->padding_1;\n
    if (v170 <= *(v171) && !(!v170))\n
        goto LABEL_4632fe;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4632fe:\n
    v169 = cgc_calloc(v170);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v169, *(v172), v170);\n
    if (cgc_sendline(1, &v27[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v247 = v172;\n
    *(v247) = &(&*(v247)->field_0)[v170];\n
    v248 = v171;\n
    *(v248) = *(v248) - v170;\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    v96 = v182;\n
    v95 = a0;\n
    memset(&v93, 0, 6);\n
    if (*(v95) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = *(&*(v96)->field_0);\n
    cgc_uint2str(&v93, 6, v94);\n
    v11 = &v93;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v93)) < 0)\n
        cgc__terminate();\n
    v249 = v95;\n
    *(v249) = *(v249) - 2;\n
    v250 = v96;\n
    *(v250) = &*(v250)->padding_1[1];\n
    v53 = v182;\n
    v52 = a0;\n
    v50 = &*(v53)->field_0;\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (*(v50) << 8)\n
        v10 = v50[1];\n
    v51 = v10 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v9 = &v49;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v251 = v52;\n
    *(v251) = *(v251) - 2;\n
    v252 = v53;\n
    *(v252) = &*(v252)->padding_1[1];\n
    v145 = v182;\n
    v144 = a0;\n
    *(&v142[0]) = *(v145);\n
    memset(&v141, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v142[0] << 24)\n
    {\n
        v8 = 0;\n
        if (v142[1] << 16)\n
        {\n
            v8 = 0;\n
            if (v142[2] << 8)\n
                v8 = v142[3];\n
        }\n
    }\n
    v143 = v8 & 1;\n
    cgc_uint2str(&v141, 12, v143);\n
    v7 = &v141;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v141)) < 0)\n
        cgc__terminate();\n
    v253 = v144;\n
    *(v253) = *(v253) - 4;\n
    v254 = v145;\n
    *(v254) = &*(v254)->field_4;\n
    v163 = v182;\n
    v162 = a0;\n
    memset(&v159, 0, 21);\n
    if (*(v162) < 8)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v255 = *(v163);\n
    v161 = v255[1];\n
    v160 = v255[0];\n
    cgc_uint2str(&v159, 21, v160);\n
    v6 = &v159;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v159)) < 0)\n
        cgc__terminate();\n
    v256 = v162;\n
    *(v256) = *(v256) - 8;\n
    v257 = v163;\n
    *(v257) = &(*(v257))[1].padding_1[2];\n
    v158 = v182;\n
    v157 = a0;\n
    memset(&v154, 0, 21);\n
    if (*(v157) < 8)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v258 = *(v158);\n
    v156 = v258[1];\n
    v155 = v258[0];\n
    cgc_uint2str(&v154, 21, v155);\n
    v5 = &v154;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v154)) < 0)\n
        cgc__terminate();\n
    v259 = v157;\n
    *(v259) = *(v259) - 8;\n
    v260 = v158;\n
    *(v260) = &(*(v260))[1].padding_1[2];\n
    v132 = v182;\n
    v131 = a0;\n
    if (*(v131) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v130 = *(&*(v132)->field_0);\n
    v261 = v131;\n
    *(v261) = *(v261) - 2;\n
    v262 = v132;\n
    *(v262) = &*(v262)->padding_1[1];\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_463c22;\n
    if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_463c22:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, &v27[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v263 = v131;\n
    *(v263) = *(v263) - v130;\n
    v264 = v132;\n
    *(v264) = &(&*(v264)->field_0)[v130];\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v120 = v182;\n
    v119 = a0;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v118 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-806, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v117, 12, v42);\n
    v4 = &v117;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v117)) < 0)\n
        cgc__terminate();\n
    v265 = v119;\n
    *(v265) = *(v265) - 4;\n
    v266 = v120;\n
    *(v266) = &*(v266)->field_4;\n
    v92 = v182;\n
    v91 = a0;\n
    memset(&v89, 0, 6);\n
    if (*(v91) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = *(&*(v92)->field_0);\n
    cgc_uint2str(&v89, 6, v90);\n
    v3 = &v89;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v89)) < 0)\n
        cgc__terminate();\n
    v267 = v91;\n
    *(v267) = *(v267) - 2;\n
    v268 = v92;\n
    *(v268) = &*(v268)->padding_1[1];\n
    v88 = v182;\n
    v87 = a0;\n
    memset(&v85, 0, 6);\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = *(&*(v88)->field_0);\n
    cgc_uint2str(&v85, 6, v86);\n
    v2 = &v85;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v85)) < 0)\n
        cgc__terminate();\n
    v269 = v87;\n
    *(v269) = *(v269) - 2;\n
    v270 = v88;\n
    *(v270) = &*(v270)->padding_1[1];\n
    v116 = v182;\n
    v115 = a0;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v114 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v31 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-810, size=2, endness=Iend_LE)))));\n
    v30 = v31 | 0xc00;\n
    v41 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v113, 12, v41);\n
    v1 = &v113;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v113)) < 0)\n
        cgc__terminate();\n
    v271 = v115;\n
    *(v271) = *(v271) - 4;\n
    v272 = v116;\n
    *(v272) = &*(v272)->field_4;\n
    v100 = v182;\n
    v99 = a0;\n
    memset(&v97, 0, 21);\n
    if (*(v99) < 8)\n
    {\n
        if (cgc_sendline(1, &v27[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v98 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v29 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-814, size=2, endness=Iend_LE)))));\n
    v28 = v29 | 0xc00;\n
    v40 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v97, 21, v40);\n
    v0 = &v97;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v97)) < 0)\n
        cgc__terminate();\n
    v273 = v99;\n
    *(v273) = *(v273) - 8;\n
    v274 = v100;\n
    *(v274) = &(*(v274))[1].padding_1[2];\n
    v47 ^= v27->field_260;\n
    if (v47)\n
        cgc___stack_cookie_fail();\n
    v275 = a0;\n
    if (*(v275) > 0 && v46 >= 0 && v46 < 0)\n
        v275 = *((&v48 + 0x4 * v46))(v182);\n
    v276 = v181;\n
    return v275;\n
}\n
", "4605103:sub_4644af": null, "4605104:cgc_process_llamahydropathy": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamahydropathy(struct struct_1 **v169, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x364]\n
    char v1;  // [bp-0x35d]\n
    struct_2 *v2;  // [bp-0x35c]\n
    struct_2 *v3;  // [bp-0x358]\n
    unsigned int v4;  // [bp-0x354]\n
    struct_2 *v5;  // [bp-0x350]\n
    struct_2 *v6;  // [bp-0x34c]\n
    struct_2 *v7;  // [bp-0x348]\n
    struct_2 *v8;  // [bp-0x344]\n
    struct_2 *v9;  // [bp-0x340]\n
    unsigned int v10;  // [bp-0x33c]\n
    struct_2 *v11;  // [bp-0x338]\n
    struct_2 *v12;  // [bp-0x334]\n
    char v13;  // [bp-0x32d]\n
    struct_2 *v14;  // [bp-0x32c]\n
    char v15;  // [bp-0x325]\n
    unsigned int v16;  // [bp-0x324]\n
    struct_2 *v17;  // [bp-0x320]\n
    struct_2 *v18;  // [bp-0x31c]\n
    struct_2 *v19;  // [bp-0x318]\n
    struct_2 *v20;  // [bp-0x314]\n
    struct_2 *v21;  // [bp-0x310]\n
    char v22;  // [bp-0x309]\n
    struct_2 *v23;  // [bp-0x308]\n
    unsigned int v24;  // [bp-0x304]\n
    struct_2 *v25;  // [bp-0x300]\n
    char v26;  // [bp-0x2f9]\n
    struct_2 *v27;  // [bp-0x2f8]\n
    struct_3 *v28;  // [bp-0x2f4]\n
    unsigned short v29;  // [bp-0x2f0]\n
    unsigned short v30;  // [bp-0x2ee]\n
    unsigned short v31;  // [bp-0x2ec]\n
    unsigned short v32;  // [bp-0x2ea]\n
    unsigned short v33;  // [bp-0x2e8]\n
    unsigned short v34;  // [bp-0x2e6]\n
    unsigned long v35;  // [bp-0x2e4]\n
    unsigned long v36;  // [bp-0x2dc]\n
    unsigned long v37;  // [bp-0x2d4]\n
    struct struct_4 **v38;  // [bp-0x2c8]\n
    unsigned int v39;  // [bp-0x2c4]\n
    char v40;  // [bp-0x2c0]\n
    char v41;  // [bp-0x2be]\n
    char *v42;  // [bp-0x2b8]\n
    unsigned short v43;  // [bp-0x2b2]\n
    unsigned int *v44;  // [bp-0x2b0]\n
    struct struct_1 **v45;  // [bp-0x2ac]\n
    char v46;  // [bp-0x2a5]\n
    char v47[8];  // [bp-0x290]\n
    unsigned int v48;  // [bp-0x28c]\n
    void* v49;  // [bp-0x288]\n
    unsigned int *v50;  // [bp-0x280]\n
    struct struct_1 **v51;  // [bp-0x27c]\n
    char v52;  // [bp-0x275]\n
    char v53[8];  // [bp-0x260]\n
    unsigned int v54;  // [bp-0x25c]\n
    void* v55;  // [bp-0x258]\n
    unsigned int *v56;  // [bp-0x254]\n
    struct struct_1 **v57;  // [bp-0x250]\n
    unsigned int v58;  // [bp-0x24c]\n
    char v59;  // [bp-0x245]\n
    unsigned int *v60;  // [bp-0x244]\n
    struct struct_1 **v61;  // [bp-0x240]\n
    char *v62;  // [bp-0x23c]\n
    unsigned int v63;  // [bp-0x238]\n
    unsigned int *v64;  // [bp-0x234]\n
    struct struct_1 **v65;  // [bp-0x230]\n
    char *v66;  // [bp-0x22c]\n
    unsigned int v67;  // [bp-0x228]\n
    unsigned int *v68;  // [bp-0x224]\n
    struct struct_1 **v69;  // [bp-0x220]\n
    char *v70;  // [bp-0x21c]\n
    unsigned int v71;  // [bp-0x218]\n
    unsigned int *v72;  // [bp-0x214]\n
    struct struct_1 **v73;  // [bp-0x210]\n
    char v74;  // [bp-0x20c]\n
    unsigned short v75;  // [bp-0x206]\n
    unsigned int *v76;  // [bp-0x204]\n
    struct struct_1 **v77;  // [bp-0x200]\n
    char v78;  // [bp-0x1fc]\n
    unsigned short v79;  // [bp-0x1f6]\n
    unsigned int *v80;  // [bp-0x1f4]\n
    struct struct_1 **v81;  // [bp-0x1f0]\n
    char v82;  // [bp-0x1ec]\n
    unsigned short v83;  // [bp-0x1e6]\n
    unsigned int *v84;  // [bp-0x1e4]\n
    struct struct_1 **v85;  // [bp-0x1e0]\n
    char v86;  // [bp-0x1d9]\n
    char v87;  // [bp-0x1d5]\n
    unsigned int *v88;  // [bp-0x1d4]\n
    struct struct_1 **v89;  // [bp-0x1d0]\n
    char v90;  // [bp-0x1c9]\n
    char v91;  // [bp-0x1c5]\n
    unsigned int *v92;  // [bp-0x1c4]\n
    struct struct_1 **v93;  // [bp-0x1c0]\n
    char v94;  // [bp-0x1bc]\n
    unsigned int v95;  // [bp-0x1b0]\n
    unsigned int *v96;  // [bp-0x1ac]\n
    struct struct_1 **v97;  // [bp-0x1a8]\n
    char v98;  // [bp-0x1a4]\n
    unsigned int v99;  // [bp-0x198]\n
    unsigned int *v100;  // [bp-0x194]\n
    struct struct_1 **v101;  // [bp-0x190]\n
    char v102;  // [bp-0x18c]\n
    unsigned int v103;  // [bp-0x180]\n
    unsigned int *v104;  // [bp-0x17c]\n
    struct struct_1 **v105;  // [bp-0x178]\n
    char v106;  // [bp-0x174]\n
    unsigned int v107;  // [bp-0x168]\n
    unsigned int *v108;  // [bp-0x164]\n
    struct struct_1 **v109;  // [bp-0x160]\n
    char v110;  // [bp-0x15c]\n
    unsigned int v111;  // [bp-0x150]\n
    unsigned int *v112;  // [bp-0x14c]\n
    struct struct_1 **v113;  // [bp-0x148]\n
    unsigned int v114;  // [bp-0x144]\n
    unsigned short v115;  // [bp-0x13e]\n
    unsigned int *v116;  // [bp-0x13c]\n
    struct struct_1 **v117;  // [bp-0x138]\n
    char v118;  // [bp-0x134]\n
    char v119[4];  // [bp-0x128]\n
    unsigned int v120;  // [bp-0x124]\n
    unsigned int *v121;  // [bp-0x120]\n
    struct struct_1 **v122;  // [bp-0x11c]\n
    char v123;  // [bp-0x118]\n
    char v124[4];  // [bp-0x10c]\n
    unsigned int v125;  // [bp-0x108]\n
    unsigned int *v126;  // [bp-0x104]\n
    struct struct_1 **v127;  // [bp-0x100]\n
    char *v128;  // [bp-0xfc]\n
    unsigned int v129;  // [bp-0xf8]\n
    unsigned int *v130;  // [bp-0xf4]\n
    struct struct_1 **v131;  // [bp-0xf0]\n
    char v132;  // [bp-0xe9]\n
    unsigned int v133;  // [bp-0xd4]\n
    unsigned int v134;  // [bp-0xd0]\n
    unsigned int *v135;  // [bp-0xcc]\n
    struct struct_1 **v136;  // [bp-0xc8]\n
    char v137;  // [bp-0xc1]\n
    unsigned int v138;  // [bp-0xac]\n
    unsigned int v139;  // [bp-0xa8]\n
    unsigned int *v140;  // [bp-0xa4]\n
    struct struct_1 **v141;  // [bp-0xa0]\n
    char v142;  // [bp-0x99]\n
    unsigned int v143;  // [bp-0x84]\n
    unsigned int v144;  // [bp-0x80]\n
    unsigned int *v145;  // [bp-0x7c]\n
    struct struct_1 **v146;  // [bp-0x78]\n
    char v147;  // [bp-0x71]\n
    unsigned int v148;  // [bp-0x5c]\n
    unsigned int v149;  // [bp-0x58]\n
    unsigned int *v150;  // [bp-0x50]\n
    struct struct_1 **v151;  // [bp-0x4c]\n
    unsigned int v152;  // [bp-0x48]\n
    char v153;  // [bp-0x41]\n
    unsigned int *v154;  // [bp-0x40]\n
    struct struct_1 **v155;  // [bp-0x3c]\n
    unsigned int v156;  // [bp-0x38]\n
    char v157;  // [bp-0x31]\n
    unsigned int *v158;  // [bp-0x30]\n
    struct struct_1 **v159;  // [bp-0x2c]\n
    unsigned int v160;  // [bp-0x28]\n
    char v161;  // [bp-0x21]\n
    unsigned int *v162;  // [bp-0x20]\n
    struct struct_1 **v163;  // [bp-0x1c]\n
    unsigned int v164;  // [bp-0x18]\n
    char v165;  // [bp-0x11]\n
    unsigned int *v166;  // [bp-0x10]\n
    struct struct_1 **v167;  // [bp-0xc]\n
    unsigned int v168;  // [bp-0x8]\n
    unsigned int v170;  // ebx\n
    unsigned int *v171;  // eax\n
    struct struct_1 **v172;  // eax\n
    unsigned int *v173;  // eax\n
    struct struct_1 **v174;  // eax\n
    struct struct_1 **v176;  // eax\n
    unsigned int *v178;  // eax\n
    unsigned int v179[2];  // ecx\n
    unsigned int *v180;  // eax\n
    struct struct_1 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    struct struct_1 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_1 **v185;  // eax\n
    struct struct_1 **v186;  // eax\n
    unsigned int *v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_1 **v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_1 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_1 **v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_1 **v195;  // eax\n
    struct struct_1 **v196;  // eax\n
    unsigned int *v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_1 **v199;  // eax\n
    struct struct_1 **v201;  // eax\n
    unsigned int *v203;  // eax\n
    unsigned int *v204;  // eax\n
    struct struct_1 **v205;  // eax\n
    struct struct_1 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_1 **v209;  // eax\n
    struct struct_1 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_1 **v213;  // eax\n
    unsigned int *v214;  // eax\n
    struct struct_1 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    struct struct_1 **v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_1 **v219;  // eax\n
    unsigned int v220[2];  // ecx\n
    unsigned int *v221;  // eax\n
    struct struct_1 **v222;  // eax\n
    struct struct_1 **v224;  // eax\n
    unsigned int *v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_1 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_1 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_1 **v232;  // eax\n
    struct_0 *v233;  // ecx\n
    unsigned int *v234;  // eax\n
    struct struct_1 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_1 **v237;  // eax\n
    struct struct_1 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    unsigned int *v240;  // eax\n
    struct struct_1 **v241;  // eax\n
    struct struct_1 **v243;  // eax\n
    unsigned int *v245;  // eax\n
    unsigned int *v246;  // eax\n
    struct struct_1 **v247;  // eax\n
    unsigned int v248[2];  // ecx\n
    unsigned int *v249;  // eax\n
    struct struct_1 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_1 **v252;  // eax\n
    unsigned int *v253;  // eax, Other Possible Types: unsigned int\n
    unsigned int v254;  // ebx\n
\n
    v168 = v170;\n
    v28 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v39 = cgc__cookie;\n
    v38 = -1;\n
    if (cgc_sendline(1, \"===llamahydropathy===\", 21) < 0)\n
        cgc__terminate();\n
    v101 = v169;\n
    v100 = a0;\n
    memset(&v98, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(&*(v101)->field_0);\n
    cgc_uint2str(&v98, 12, v99);\n
    v27 = &v98;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v171 = v100;\n
    *(v171) = *(v171) - 4;\n
    v172 = v101;\n
    *(v172) = &*(v172)->field_4;\n
    v127 = v169;\n
    v126 = a0;\n
    *(&v124[0]) = *(v127);\n
    memset(&v123, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v124[0] << 24)\n
    {\n
        v26 = 0;\n
        if (v124[1] << 16)\n
        {\n
            v26 = 0;\n
            if (v124[2] << 8)\n
                v26 = v124[3];\n
        }\n
    }\n
    v125 = v26 & 1;\n
    cgc_uint2str(&v123, 12, v125);\n
    v25 = &v123;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v173 = v126;\n
    *(v173) = *(v173) - 4;\n
    v174 = v127;\n
    *(v174) = &*(v174)->field_4;\n
    v73 = v169;\n
    v72 = a0;\n
    if (*(v72) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v72) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v72);\n
    v71 = v24;\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v70 = cgc_calloc(134);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v70, &v28[18].padding_0[182]);\n
    cgc_strncpy(v70 + 5, *(v73), v71);\n
    v176 = v73;\n
    *(v176) = &(&*(v176)->field_4)[cgc_strlen(v70)];\n
    v178 = v72;\n
    *(v178) = *(v178) - (cgc_strlen(v70) + -4);\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v151 = v169;\n
    v150 = a0;\n
    memset(&v147, 0, 21);\n
    if (*(v150) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v179 = *(v151);\n
    v149 = v179[1];\n
    v148 = v179[0];\n
    cgc_uint2str(&v147, 21, v148);\n
    v23 = &v147;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v180 = v150;\n
    *(v180) = *(v180) - 8;\n
    v181 = v151;\n
    *(v181) = &(*(v181))[1].padding_1[2];\n
    v122 = v169;\n
    v121 = a0;\n
    *(&v119[0]) = *(v122);\n
    memset(&v118, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v119[0] << 24)\n
    {\n
        v22 = 0;\n
        if (v119[1] << 16)\n
        {\n
            v22 = 0;\n
            if (v119[2] << 8)\n
                v22 = v119[3];\n
        }\n
    }\n
    v120 = v22 & 1;\n
    cgc_uint2str(&v118, 12, v120);\n
    v21 = &v118;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v182 = v121;\n
    *(v182) = *(v182) - 4;\n
    v183 = v122;\n
    *(v183) = &*(v183)->field_4;\n
    v167 = v169;\n
    v166 = a0;\n
    if (*(v166) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v165 = *(v167)->field_0;\n
    v184 = v166;\n
    *(v184) = *(v184) - 1;\n
    v185 = v167;\n
    *(v185) = &*(v185)->padding_1;\n
    if (v165 <= *(v166) && !(!v165))\n
        goto LABEL_464e88;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_464e88:\n
    v164 = cgc_calloc(v165);\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v164, *(v167), v165);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v186 = v167;\n
    *(v186) = &(&*(v186)->field_0)[v165];\n
    v187 = v166;\n
    *(v187) = *(v187) - v165;\n
    cgc_checkheap();\n
    cgc_free(v164);\n
    v113 = v169;\n
    v112 = a0;\n
    memset(&v110, 0, 12);\n
    if (*(v112) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v111 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(fpround<4>);\n
    v33 = v34 | 0xc00;\n
    v37 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v110, 12, v37);\n
    v20 = &v110;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v188 = v112;\n
    *(v188) = *(v188) - 4;\n
    v189 = v113;\n
    *(v189) = &*(v189)->field_4;\n
    v85 = v169;\n
    v84 = a0;\n
    memset(&v82, 0, 6);\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(&*(v85)->field_0);\n
    cgc_uint2str(&v82, 6, v83);\n
    v19 = &v82;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v190 = v84;\n
    *(v190) = *(v190) - 2;\n
    v191 = v85;\n
    *(v191) = &*(v191)->padding_1[1];\n
    v93 = v169;\n
    v92 = a0;\n
    memset(&v90, 0, 4);\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(v93)->field_0;\n
    cgc_uint2str(&v90, 4, v91);\n
    v18 = &v90;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v192 = v92;\n
    *(v192) = *(v192) - 1;\n
    v193 = v93;\n
    *(v193) = &*(v193)->padding_1;\n
    v163 = v169;\n
    v162 = a0;\n
    if (*(v162) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v161 = *(v163)->field_0;\n
    v194 = v162;\n
    *(v194) = *(v194) - 1;\n
    v195 = v163;\n
    *(v195) = &*(v195)->padding_1;\n
    if (v161 <= *(v162) && !(!v161))\n
        goto LABEL_46547f;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46547f:\n
    v160 = cgc_calloc(v161);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v160, *(v163), v161);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v196 = v163;\n
    *(v196) = &(&*(v196)->field_0)[v161];\n
    v197 = v162;\n
    *(v197) = *(v197) - v161;\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    v81 = v169;\n
    v80 = a0;\n
    memset(&v78, 0, 6);\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(&*(v81)->field_0);\n
    cgc_uint2str(&v78, 6, v79);\n
    v17 = &v78;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v198 = v80;\n
    *(v198) = *(v198) - 2;\n
    v199 = v81;\n
    *(v199) = &*(v199)->padding_1[1];\n
    v69 = v169;\n
    v68 = a0;\n
    if (*(v68) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v68) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v68);\n
    v67 = v16;\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v66 = cgc_calloc(134);\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v66, &v28[18].padding_0[182]);\n
    cgc_strncpy(v66 + 5, *(v69), v67);\n
    v201 = v69;\n
    *(v201) = &(&*(v201)->field_4)[cgc_strlen(v66)];\n
    v203 = v68;\n
    *(v203) = *(v203) - (cgc_strlen(v66) + -4);\n
    cgc_checkheap();\n
    cgc_free(v66);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v159 = v169;\n
    v158 = a0;\n
    if (*(v158) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v157 = *(v159)->field_0;\n
    v204 = v158;\n
    *(v204) = *(v204) - 1;\n
    v205 = v159;\n
    *(v205) = &*(v205)->padding_1;\n
    if (v157 <= *(v158) && !(!v157))\n
        goto LABEL_465a3f;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_465a3f:\n
    v156 = cgc_calloc(v157);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v156, *(v159), v157);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v206 = v159;\n
    *(v206) = &(&*(v206)->field_0)[v157];\n
    v207 = v158;\n
    *(v207) = *(v207) - v157;\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    v155 = v169;\n
    v154 = a0;\n
    if (*(v154) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v153 = *(v155)->field_0;\n
    v208 = v154;\n
    *(v208) = *(v208) - 1;\n
    v209 = v155;\n
    *(v209) = &*(v209)->padding_1;\n
    if (v153 <= *(v154) && !(!v153))\n
        goto LABEL_465c38;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_465c38:\n
    v152 = cgc_calloc(v153);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v152, *(v155), v153);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v210 = v155;\n
    *(v210) = &(&*(v210)->field_0)[v153];\n
    v211 = v154;\n
    *(v211) = *(v211) - v153;\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    v57 = v169;\n
    v56 = a0;\n
    *(&v53[0]) = *(v57);\n
    memset(&v52, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v53[0])\n
    {\n
        v15 = 0;\n
        if (v53[1])\n
        {\n
            v15 = 0;\n
            if (v53[2])\n
            {\n
                v15 = 0;\n
                if (v53[3])\n
                {\n
                    v15 = 0;\n
                    if (v53[4] << 24)\n
                    {\n
                        v15 = 0;\n
                        if (v53[5] << 16)\n
                        {\n
                            v15 = 0;\n
                            if (v53[6] << 8)\n
                                v15 = v53[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v54 = v15 & 1;\n
    v55 = 0;\n
    cgc_uint2str(&v52, 21, v54);\n
    v14 = &v52;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v212 = v56;\n
    *(v212) = *(v212) - 8;\n
    v213 = v57;\n
    *(v213) = &(*(v213))[1].padding_1[2];\n
    v51 = v169;\n
    v50 = a0;\n
    *(&v47[0]) = *(v51);\n
    memset(&v46, 0, 21);\n
    if (*(v50) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v47[0])\n
    {\n
        v13 = 0;\n
        if (v47[1])\n
        {\n
            v13 = 0;\n
            if (v47[2])\n
            {\n
                v13 = 0;\n
                if (v47[3])\n
                {\n
                    v13 = 0;\n
                    if (v47[4] << 24)\n
                    {\n
                        v13 = 0;\n
                        if (v47[5] << 16)\n
                        {\n
                            v13 = 0;\n
                            if (v47[6] << 8)\n
                                v13 = v47[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v48 = v13 & 1;\n
    v49 = 0;\n
    cgc_uint2str(&v46, 21, v48);\n
    v12 = &v46;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v214 = v50;\n
    *(v214) = *(v214) - 8;\n
    v215 = v51;\n
    *(v215) = &(*(v215))[1].padding_1[2];\n
    v117 = v169;\n
    v116 = a0;\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = *(&*(v117)->field_0);\n
    v216 = v116;\n
    *(v216) = *(v216) - 2;\n
    v217 = v117;\n
    *(v217) = &*(v217)->padding_1[1];\n
    if (v115 <= *(v116) && !(!v115))\n
        goto LABEL_4662e1;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4662e1:\n
    v114 = cgc_calloc(v115);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v114, *(v117), v115);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v218 = v116;\n
    *(v218) = *(v218) - v115;\n
    v219 = v117;\n
    *(v219) = &(&*(v219)->field_0)[v115];\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    v146 = v169;\n
    v145 = a0;\n
    memset(&v142, 0, 21);\n
    if (*(v145) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v220 = *(v146);\n
    v144 = v220[1];\n
    v143 = v220[0];\n
    cgc_uint2str(&v142, 21, v143);\n
    v11 = &v142;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v221 = v145;\n
    *(v221) = *(v221) - 8;\n
    v222 = v146;\n
    *(v222) = &(*(v222))[1].padding_1[2];\n
    v131 = v169;\n
    v130 = a0;\n
    if (*(v130) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v130) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v130);\n
    v129 = v10;\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = cgc_calloc(134);\n
    if (!v128)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v128, &v28[18].padding_0[182]);\n
    cgc_strncpy(v128 + 5, *(v131), v129);\n
    v224 = v131;\n
    *(v224) = &(&*(v224)->field_4)[cgc_strlen(v128)];\n
    v226 = v130;\n
    *(v226) = *(v226) - (cgc_strlen(v128) + -4);\n
    cgc_checkheap();\n
    cgc_free(v128);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v109 = v169;\n
    v108 = a0;\n
    memset(&v106, 0, 12);\n
    if (*(v108) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v107 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-742, size=2, endness=Iend_LE)))));\n
    v31 = v32 | 0xc00;\n
    v36 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v106, 12, v36);\n
    v9 = &v106;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v227 = v108;\n
    *(v227) = *(v227) - 4;\n
    v228 = v109;\n
    *(v228) = &*(v228)->field_4;\n
    v97 = v169;\n
    v96 = a0;\n
    memset(&v94, 0, 12);\n
    if (*(v96) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(&*(v97)->field_0);\n
    cgc_uint2str(&v94, 12, v95);\n
    v8 = &v94;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v229 = v96;\n
    *(v229) = *(v229) - 4;\n
    v230 = v97;\n
    *(v230) = &*(v230)->field_4;\n
    v77 = v169;\n
    v76 = a0;\n
    memset(&v74, 0, 6);\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    cgc_uint2str(&v74, 6, v75);\n
    v7 = &v74;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v231 = v76;\n
    *(v231) = *(v231) - 2;\n
    v232 = v77;\n
    *(v232) = &*(v232)->padding_1[1];\n
    v141 = v169;\n
    v140 = a0;\n
    memset(&v137, 0, 21);\n
    if (*(v140) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v233 = *(v141);\n
    v139 = v233->field_4;\n
    v138 = *(&v233->field_0);\n
    cgc_uint2str(&v137, 21, v138);\n
    v6 = &v137;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v137)) < 0)\n
        cgc__terminate();\n
    v234 = v140;\n
    *(v234) = *(v234) - 8;\n
    v235 = v141;\n
    *(v235) = &(*(v235))[1].padding_1[2];\n
    v61 = v169;\n
    v60 = a0;\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(v61)->field_0;\n
    v236 = v60;\n
    *(v236) = *(v236) - 1;\n
    v237 = v61;\n
    *(v237) = &*(v237)->padding_1;\n
    if (v59 <= *(v60) && !(!v59))\n
        goto LABEL_466e14;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_466e14:\n
    v58 = cgc_calloc(v59);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v58, *(v61), v59);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v238 = v61;\n
    *(v238) = &(&*(v238)->field_0)[v59];\n
    v239 = v60;\n
    *(v239) = *(v239) - v59;\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    v89 = v169;\n
    v88 = a0;\n
    memset(&v86, 0, 4);\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(v89)->field_0;\n
    cgc_uint2str(&v86, 4, v87);\n
    v5 = &v86;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v86)) < 0)\n
        cgc__terminate();\n
    v240 = v88;\n
    *(v240) = *(v240) - 1;\n
    v241 = v89;\n
    *(v241) = &*(v241)->padding_1;\n
    v65 = v169;\n
    v64 = a0;\n
    if (*(v64) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v64) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v64);\n
    v63 = v4;\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v62 = cgc_calloc(134);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v62, &v28[18].padding_0[182]);\n
    cgc_strncpy(v62 + 5, *(v65), v63);\n
    v243 = v65;\n
    *(v243) = &(&*(v243)->field_4)[cgc_strlen(v62)];\n
    v245 = v64;\n
    *(v245) = *(v245) - (cgc_strlen(v62) + -4);\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v105 = v169;\n
    v104 = a0;\n
    memset(&v102, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v103 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v30 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-746, size=2, endness=Iend_LE)))));\n
    v29 = v30 | 0xc00;\n
    v35 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v102, 12, v35);\n
    v3 = &v102;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v246 = v104;\n
    *(v246) = *(v246) - 4;\n
    v247 = v105;\n
    *(v247) = &*(v247)->field_4;\n
    v136 = v169;\n
    v135 = a0;\n
    memset(&v132, 0, 21);\n
    if (*(v135) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v248 = *(v136);\n
    v134 = v248[1];\n
    v133 = v248[0];\n
    cgc_uint2str(&v132, 21, v133);\n
    v2 = &v132;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v249 = v135;\n
    *(v249) = *(v249) - 8;\n
    v250 = v136;\n
    *(v250) = &(*(v250))[1].padding_1[2];\n
    v45 = v169;\n
    v44 = a0;\n
    v42 = &*(v45)->field_0;\n
    memset(&v41, 0, 6);\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (*(v42) << 8)\n
        v1 = v42[1];\n
    v43 = v1 & 1;\n
    cgc_uint2str(&v41, 6, v43);\n
    v0 = &v41;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v41)) < 0)\n
        cgc__terminate();\n
    v251 = v44;\n
    *(v251) = *(v251) - 2;\n
    v252 = v45;\n
    *(v252) = &*(v252)->padding_1[1];\n
    v39 ^= v28->field_260;\n
    if (v39)\n
        cgc___stack_cookie_fail();\n
    v253 = a0;\n
    if (*(v253) > 0 && v38 >= 0 && v38 < 0)\n
        v253 = *((&v40 + 0x4 * v38))(v169);\n
    v254 = v168;\n
    return v253;\n
}\n
", "4618181:sub_4677c5": null, "4618192:cgc_process_llamadentary": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadentary(struct struct_0 **v98, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c8]\n
    struct_1 *v1;  // [bp-0x1c4]\n
    struct_1 *v2;  // [bp-0x1c0]\n
    struct_1 *v3;  // [bp-0x1bc]\n
    struct_1 *v4;  // [bp-0x1b8]\n
    struct_1 *v5;  // [bp-0x1b4]\n
    char v6;  // [bp-0x1ad]\n
    struct_1 *v7;  // [bp-0x1ac]\n
    char v8;  // [bp-0x1a5]\n
    struct_1 *v9;  // [bp-0x1a4]\n
    struct_1 *v10;  // [bp-0x1a0]\n
    unsigned int v11;  // [bp-0x19c]\n
    struct_1 *v12;  // [bp-0x198]\n
    char v13;  // [bp-0x191]\n
    struct_1 *v14;  // [bp-0x190]\n
    char v15;  // [bp-0x189]\n
    struct_1 *v16;  // [bp-0x188]\n
    struct_3 *v17;  // [bp-0x184]\n
    unsigned short v18;  // [bp-0x180]\n
    unsigned short v19;  // [bp-0x17e]\n
    unsigned long v20;  // [bp-0x17c]\n
    struct struct_2 **v21;  // [bp-0x170]\n
    unsigned int v22;  // [bp-0x16c]\n
    char v23;  // [bp-0x168]\n
    char v24;  // [bp-0x166]\n
    char v25[2];  // [bp-0x160]\n
    unsigned short v26;  // [bp-0x15a]\n
    unsigned int *v27;  // [bp-0x158]\n
    struct struct_0 **v28;  // [bp-0x154]\n
    char v29;  // [bp-0x14e]\n
    char v30[2];  // [bp-0x148]\n
    unsigned short v31;  // [bp-0x142]\n
    unsigned int *v32;  // [bp-0x140]\n
    struct struct_0 **v33;  // [bp-0x13c]\n
    char v34;  // [bp-0x135]\n
    char v35[8];  // [bp-0x120]\n
    unsigned int v36;  // [bp-0x11c]\n
    void* v37;  // [bp-0x118]\n
    unsigned int *v38;  // [bp-0x114]\n
    struct struct_0 **v39;  // [bp-0x110]\n
    unsigned int v40;  // [bp-0x10c]\n
    char v41;  // [bp-0x105]\n
    unsigned int *v42;  // [bp-0x104]\n
    struct struct_0 **v43;  // [bp-0x100]\n
    char v44;  // [bp-0xfc]\n
    unsigned short v45;  // [bp-0xf6]\n
    unsigned int *v46;  // [bp-0xf4]\n
    struct struct_0 **v47;  // [bp-0xf0]\n
    char v48;  // [bp-0xec]\n
    unsigned short v49;  // [bp-0xe6]\n
    unsigned int *v50;  // [bp-0xe4]\n
    struct struct_0 **v51;  // [bp-0xe0]\n
    char v52;  // [bp-0xd9]\n
    char v53;  // [bp-0xd5]\n
    unsigned int *v54;  // [bp-0xd4]\n
    struct struct_0 **v55;  // [bp-0xd0]\n
    char v56;  // [bp-0xc9]\n
    char v57;  // [bp-0xc5]\n
    unsigned int *v58;  // [bp-0xc4]\n
    struct struct_0 **v59;  // [bp-0xc0]\n
    char v60;  // [bp-0xbc]\n
    unsigned int v61;  // [bp-0xb0]\n
    unsigned int *v62;  // [bp-0xac]\n
    struct struct_0 **v63;  // [bp-0xa8]\n
    char v64;  // [bp-0xa4]\n
    unsigned int v65;  // [bp-0x98]\n
    unsigned int *v66;  // [bp-0x94]\n
    struct struct_0 **v67;  // [bp-0x90]\n
    char v68;  // [bp-0x8c]\n
    unsigned int v69;  // [bp-0x80]\n
    unsigned int *v70;  // [bp-0x7c]\n
    struct struct_0 **v71;  // [bp-0x78]\n
    unsigned int v72;  // [bp-0x74]\n
    unsigned short v73;  // [bp-0x6e]\n
    unsigned int *v74;  // [bp-0x6c]\n
    struct struct_0 **v75;  // [bp-0x68]\n
    char v76;  // [bp-0x64]\n
    char v77[4];  // [bp-0x58]\n
    unsigned int v78;  // [bp-0x54]\n
    unsigned int *v79;  // [bp-0x50]\n
    struct struct_0 **v80;  // [bp-0x4c]\n
    char *v81;  // [bp-0x48]\n
    unsigned int v82;  // [bp-0x44]\n
    unsigned int *v83;  // [bp-0x40]\n
    struct struct_0 **v84;  // [bp-0x3c]\n
    char *v85;  // [bp-0x38]\n
    unsigned int v86;  // [bp-0x34]\n
    unsigned int *v87;  // [bp-0x30]\n
    struct struct_0 **v88;  // [bp-0x2c]\n
    unsigned int v89;  // [bp-0x28]\n
    char v90;  // [bp-0x21]\n
    unsigned int *v91;  // [bp-0x20]\n
    struct struct_0 **v92;  // [bp-0x1c]\n
    unsigned int v93;  // [bp-0x18]\n
    char v94;  // [bp-0x11]\n
    unsigned int *v95;  // [bp-0x10]\n
    struct struct_0 **v96;  // [bp-0xc]\n
    unsigned int v97;  // [bp-0x8]\n
    unsigned int v99;  // ebx\n
    unsigned int *v100;  // eax\n
    struct struct_0 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_0 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_0 **v105;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    unsigned int *v114;  // eax\n
    struct struct_0 **v115;  // eax\n
    unsigned int *v116;  // eax\n
    struct struct_0 **v117;  // eax\n
    struct struct_0 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    unsigned int *v120;  // eax\n
    struct struct_0 **v121;  // eax\n
    unsigned int *v122;  // eax\n
    struct struct_0 **v123;  // eax\n
    unsigned int *v124;  // eax\n
    struct struct_0 **v125;  // eax\n
    unsigned int *v126;  // eax\n
    struct struct_0 **v127;  // eax\n
    struct struct_0 **v128;  // eax\n
    unsigned int *v129;  // eax\n
    unsigned int *v130;  // eax\n
    struct struct_0 **v131;  // eax\n
    struct struct_0 **v132;  // eax\n
    unsigned int *v133;  // eax\n
    unsigned int *v134;  // eax\n
    struct struct_0 **v135;  // eax\n
    unsigned int *v136;  // eax\n
    struct struct_0 **v137;  // eax\n
    unsigned int *v138;  // eax\n
    struct struct_0 **v139;  // eax\n
    unsigned int *v140;  // eax\n
    struct struct_0 **v141;  // eax\n
    struct struct_0 **v143;  // eax\n
    unsigned int *v145;  // eax\n
    unsigned int *v146;  // eax, Other Possible Types: unsigned int\n
    unsigned int v147;  // ebx\n
\n
    v97 = v99;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v22 = cgc__cookie;\n
    v21 = -1;\n
    if (cgc_sendline(1, \"===llamadentary===\", 18) < 0)\n
        cgc__terminate();\n
    v51 = v98;\n
    v50 = a0;\n
    memset(&v48, 0, 6);\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = *(&*(v51)->field_0);\n
    cgc_uint2str(&v48, 6, v49);\n
    v16 = &v48;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v48)) < 0)\n
        cgc__terminate();\n
    v100 = v50;\n
    *(v100) = *(v100) - 2;\n
    v101 = v51;\n
    *(v101) = &*(v101)->padding_1[1];\n
    v80 = v98;\n
    v79 = a0;\n
    *(&v77[0]) = *(v80);\n
    memset(&v76, 0, 12);\n
    if (*(v79) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v77[0] << 24)\n
    {\n
        v15 = 0;\n
        if (v77[1] << 16)\n
        {\n
            v15 = 0;\n
            if (v77[2] << 8)\n
                v15 = v77[3];\n
        }\n
    }\n
    v78 = v15 & 1;\n
    cgc_uint2str(&v76, 12, v78);\n
    v14 = &v76;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v102 = v79;\n
    *(v102) = *(v102) - 4;\n
    v103 = v80;\n
    *(v103) = &*(v103)->field_4;\n
    v33 = v98;\n
    v32 = a0;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v30[0] << 8)\n
        v13 = v30[1];\n
    v31 = v13 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v12 = &v29;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v104 = v32;\n
    *(v104) = *(v104) - 2;\n
    v105 = v33;\n
    *(v105) = &*(v105)->padding_1[1];\n
    v88 = v98;\n
    v87 = a0;\n
    if (*(v87) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v87) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v87);\n
    v86 = v11;\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v85 = cgc_calloc(134);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v85, &v17[18].padding_0[182]);\n
    cgc_strncpy(v85 + 5, *(v88), v86);\n
    v107 = v88;\n
    *(v107) = &(&*(v107)->field_4)[cgc_strlen(v85)];\n
    v109 = v87;\n
    *(v109) = *(v109) - (cgc_strlen(v85) + -4);\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v67 = v98;\n
    v66 = a0;\n
    memset(&v64, 0, 12);\n
    if (*(v66) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v65 = *(&*(v67)->field_0);\n
    cgc_uint2str(&v64, 12, v65);\n
    v10 = &v64;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v110 = v66;\n
    *(v110) = *(v110) - 4;\n
    v111 = v67;\n
    *(v111) = &*(v111)->field_4;\n
    v63 = v98;\n
    v62 = a0;\n
    memset(&v60, 0, 12);\n
    if (*(v62) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = *(&*(v63)->field_0);\n
    cgc_uint2str(&v60, 12, v61);\n
    v9 = &v60;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v112 = v62;\n
    *(v112) = *(v112) - 4;\n
    v113 = v63;\n
    *(v113) = &*(v113)->field_4;\n
    v28 = v98;\n
    v27 = a0;\n
    *(&v25) = *(v28);\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v25[0] << 8)\n
        v8 = v25[1];\n
    v26 = v8 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v7 = &v24;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v114 = v27;\n
    *(v114) = *(v114) - 2;\n
    v115 = v28;\n
    *(v115) = &*(v115)->padding_1[1];\n
    v96 = v98;\n
    v95 = a0;\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = *(v96)->field_0;\n
    v116 = v95;\n
    *(v116) = *(v116) - 1;\n
    v117 = v96;\n
    *(v117) = &*(v117)->padding_1;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_4683f0;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4683f0:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v118 = v96;\n
    *(v118) = &(&*(v118)->field_0)[v94];\n
    v119 = v95;\n
    *(v119) = *(v119) - v94;\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v75 = v98;\n
    v74 = a0;\n
    if (*(v74) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v73 = *(&*(v75)->field_0);\n
    v120 = v74;\n
    *(v120) = *(v120) - 2;\n
    v121 = v75;\n
    *(v121) = &*(v121)->padding_1[1];\n
    if (v73 <= *(v74) && !(!v73))\n
        goto LABEL_4685eb;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4685eb:\n
    v72 = cgc_calloc(v73);\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v72, *(v75), v73);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v122 = v74;\n
    *(v122) = *(v122) - v73;\n
    v123 = v75;\n
    *(v123) = &(&*(v123)->field_0)[v73];\n
    cgc_checkheap();\n
    cgc_free(v72);\n
    v39 = v98;\n
    v38 = a0;\n
    *(&v35[0]) = *(v39);\n
    memset(&v34, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v35[0])\n
    {\n
        v6 = 0;\n
        if (v35[1])\n
        {\n
            v6 = 0;\n
            if (v35[2])\n
            {\n
                v6 = 0;\n
                if (v35[3])\n
                {\n
                    v6 = 0;\n
                    if (v35[4] << 24)\n
                    {\n
                        v6 = 0;\n
                        if (v35[5] << 16)\n
                        {\n
                            v6 = 0;\n
                            if (v35[6] << 8)\n
                                v6 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v36 = v6 & 1;\n
    v37 = 0;\n
    cgc_uint2str(&v34, 21, v36);\n
    v5 = &v34;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v124 = v38;\n
    *(v124) = *(v124) - 8;\n
    v125 = v39;\n
    *(v125) = *(v125) + 1;\n
    v92 = v98;\n
    v91 = a0;\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = *(v92)->field_0;\n
    v126 = v91;\n
    *(v126) = *(v126) - 1;\n
    v127 = v92;\n
    *(v127) = &*(v127)->padding_1;\n
    if (v90 <= *(v91) && !(!v90))\n
        goto LABEL_468a2c;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_468a2c:\n
    v89 = cgc_calloc(v90);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v89, *(v92), v90);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v128 = v92;\n
    *(v128) = &(&*(v128)->field_0)[v90];\n
    v129 = v91;\n
    *(v129) = *(v129) - v90;\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    v43 = v98;\n
    v42 = a0;\n
    if (*(v42) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = *(v43)->field_0;\n
    v130 = v42;\n
    *(v130) = *(v130) - 1;\n
    v131 = v43;\n
    *(v131) = &*(v131)->padding_1;\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_468c43;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_468c43:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v132 = v43;\n
    *(v132) = &(&*(v132)->field_0)[v41];\n
    v133 = v42;\n
    *(v133) = *(v133) - v41;\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v59 = v98;\n
    v58 = a0;\n
    memset(&v56, 0, 4);\n
    if (*(v58) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v57 = *(v59)->field_0;\n
    cgc_uint2str(&v56, 4, v57);\n
    v4 = &v56;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v134 = v58;\n
    *(v134) = *(v134) - 1;\n
    v135 = v59;\n
    *(v135) = &*(v135)->padding_1;\n
    v71 = v98;\n
    v70 = a0;\n
    memset(&v68, 0, 12);\n
    if (*(v70) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v69 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v68, 12, v20);\n
    v3 = &v68;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v68)) < 0)\n
        cgc__terminate();\n
    v136 = v70;\n
    *(v136) = *(v136) - 4;\n
    v137 = v71;\n
    *(v137) = &*(v137)->field_4;\n
    v47 = v98;\n
    v46 = a0;\n
    memset(&v44, 0, 6);\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v45 = *(&*(v47)->field_0);\n
    cgc_uint2str(&v44, 6, v45);\n
    v2 = &v44;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v138 = v46;\n
    *(v138) = *(v138) - 2;\n
    v139 = v47;\n
    *(v139) = &*(v139)->padding_1[1];\n
    v55 = v98;\n
    v54 = a0;\n
    memset(&v52, 0, 4);\n
    if (*(v54) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v53 = *(v55)->field_0;\n
    cgc_uint2str(&v52, 4, v53);\n
    v1 = &v52;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v140 = v54;\n
    *(v140) = *(v140) - 1;\n
    v141 = v55;\n
    *(v141) = &*(v141)->padding_1;\n
    v84 = v98;\n
    v83 = a0;\n
    if (*(v83) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v83) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v83);\n
    v82 = v0;\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v81 = cgc_calloc(134);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v81, &v17[18].padding_0[182]);\n
    cgc_strncpy(v81 + 5, *(v84), v82);\n
    v143 = v84;\n
    *(v143) = &(&*(v143)->field_4)[cgc_strlen(v81)];\n
    v145 = v83;\n
    *(v145) = *(v145) - (cgc_strlen(v81) + -4);\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v22 ^= v17->field_260;\n
    if (v22)\n
        cgc___stack_cookie_fail();\n
    v146 = a0;\n
    if (*(v146) > 0 && v21 >= 0 && v21 < 0)\n
        v146 = *((&v23 + 0x4 * v21))(v98);\n
    v147 = v97;\n
    return v146;\n
}\n
", "4625757:sub_46955d": null, "4625760:cgc_process_llamadenominate": "typedef struct struct_4 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f035c;\n
extern unsigned int g_4f0360;\n
\n
int cgc_process_llamadenominate(struct struct_0 **v217, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x450]\n
    struct_1 *v1;  // [bp-0x44c]\n
    char v2;  // [bp-0x445]\n
    unsigned int v3;  // [bp-0x444]\n
    struct_1 *v4;  // [bp-0x440]\n
    char v5;  // [bp-0x439]\n
    unsigned int v6;  // [bp-0x438]\n
    struct_1 *v7;  // [bp-0x434]\n
    struct_1 *v8;  // [bp-0x430]\n
    char v9;  // [bp-0x429]\n
    struct_1 *v10;  // [bp-0x428]\n
    struct_1 *v11;  // [bp-0x424]\n
    struct_1 *v12;  // [bp-0x420]\n
    struct_1 *v13;  // [bp-0x41c]\n
    struct_1 *v14;  // [bp-0x418]\n
    struct_1 *v15;  // [bp-0x414]\n
    struct_1 *v16;  // [bp-0x410]\n
    char v17;  // [bp-0x409]\n
    struct_1 *v18;  // [bp-0x408]\n
    struct_1 *v19;  // [bp-0x404]\n
    struct_1 *v20;  // [bp-0x400]\n
    struct_1 *v21;  // [bp-0x3fc]\n
    struct_1 *v22;  // [bp-0x3f8]\n
    struct_1 *v23;  // [bp-0x3f4]\n
    unsigned int v24;  // [bp-0x3f0]\n
    struct_1 *v25;  // [bp-0x3ec]\n
    char v26;  // [bp-0x3e5]\n
    struct_1 *v27;  // [bp-0x3e4]\n
    struct_4 *v28;  // [bp-0x3e0]\n
    unsigned short v29;  // [bp-0x3dc]\n
    unsigned short v30;  // [bp-0x3da]\n
    unsigned short v31;  // [bp-0x3d8]\n
    unsigned short v32;  // [bp-0x3d6]\n
    unsigned short v33;  // [bp-0x3d4]\n
    unsigned short v34;  // [bp-0x3d2]\n
    unsigned short v35;  // [bp-0x3d0]\n
    unsigned short v36;  // [bp-0x3ce]\n
    unsigned short v37;  // [bp-0x3cc]\n
    unsigned short v38;  // [bp-0x3ca]\n
    unsigned short v39;  // [bp-0x3c8]\n
    unsigned short v40;  // [bp-0x3c6]\n
    unsigned long v41;  // [bp-0x3c4]\n
    unsigned long v42;  // [bp-0x3bc]\n
    unsigned long v43;  // [bp-0x3b4]\n
    unsigned long v44;  // [bp-0x3ac]\n
    unsigned long v45;  // [bp-0x3a4]\n
    unsigned long v46;  // [bp-0x39c]\n
    struct struct_2 **v47;  // [bp-0x390], Other Possible Types: unsigned int\n
    unsigned int v48;  // [bp-0x38c]\n
    unsigned int v49;  // [bp-0x388]\n
    unsigned int v50;  // [bp-0x384]\n
    char v51;  // [bp-0x37e]\n
    char v52[2];  // [bp-0x378]\n
    unsigned short v53;  // [bp-0x372]\n
    unsigned int *v54;  // [bp-0x370]\n
    struct struct_0 **v55;  // [bp-0x36c]\n
    char v56;  // [bp-0x365]\n
    char v57[8];  // [bp-0x350]\n
    unsigned int v58;  // [bp-0x34c]\n
    void* v59;  // [bp-0x348]\n
    unsigned int *v60;  // [bp-0x344]\n
    struct struct_0 **v61;  // [bp-0x340]\n
    char *v62;  // [bp-0x33c]\n
    unsigned int *v63;  // [bp-0x338]\n
    struct struct_0 **v64;  // [bp-0x334]\n
    char *v65;  // [bp-0x330]\n
    unsigned int *v66;  // [bp-0x32c]\n
    struct struct_0 **v67;  // [bp-0x328]\n
    char *v68;  // [bp-0x324]\n
    unsigned int *v69;  // [bp-0x320]\n
    struct struct_0 **v70;  // [bp-0x31c]\n
    char *v71;  // [bp-0x318]\n
    unsigned int *v72;  // [bp-0x314]\n
    struct struct_0 **v73;  // [bp-0x310]\n
    char *v74;  // [bp-0x30c]\n
    unsigned int *v75;  // [bp-0x308]\n
    struct struct_0 **v76;  // [bp-0x304]\n
    char v77[4];  // [bp-0x300]\n
    unsigned int *v78;  // [bp-0x2fc]\n
    struct struct_0 **v79;  // [bp-0x2f8]\n
    struct_3 *v80;  // [bp-0x2f4]\n
    unsigned int *v81;  // [bp-0x2f0]\n
    struct struct_0 **v82;  // [bp-0x2ec]\n
    char *v83;  // [bp-0x2e8]\n
    unsigned int v84;  // [bp-0x2e4]\n
    unsigned int *v85;  // [bp-0x2e0]\n
    struct struct_0 **v86;  // [bp-0x2dc]\n
    char v87;  // [bp-0x2d8]\n
    unsigned short v88;  // [bp-0x2d2]\n
    unsigned int *v89;  // [bp-0x2d0]\n
    struct struct_0 **v90;  // [bp-0x2cc]\n
    char v91;  // [bp-0x2c8]\n
    unsigned short v92;  // [bp-0x2c2]\n
    unsigned int *v93;  // [bp-0x2c0]\n
    struct struct_0 **v94;  // [bp-0x2bc]\n
    char v95;  // [bp-0x2b8]\n
    unsigned short v96;  // [bp-0x2b2]\n
    unsigned int *v97;  // [bp-0x2b0]\n
    struct struct_0 **v98;  // [bp-0x2ac]\n
    char v99;  // [bp-0x2a5]\n
    char v100;  // [bp-0x2a1]\n
    unsigned int *v101;  // [bp-0x2a0]\n
    struct struct_0 **v102;  // [bp-0x29c]\n
    unsigned short *v103;  // [bp-0x298]\n
    unsigned int *v104;  // [bp-0x294]\n
    struct struct_0 **v105;  // [bp-0x290]\n
    char v106;  // [bp-0x289]\n
    unsigned long v107;  // [bp-0x274]\n
    unsigned int *v108;  // [bp-0x26c]\n
    struct struct_0 **v109;  // [bp-0x268]\n
    char v110;  // [bp-0x261]\n
    unsigned long v111;  // [bp-0x24c]\n
    unsigned int *v112;  // [bp-0x244]\n
    struct struct_0 **v113;  // [bp-0x240]\n
    char v114;  // [bp-0x239]\n
    unsigned long v115;  // [bp-0x224]\n
    unsigned int *v116;  // [bp-0x218]\n
    struct struct_0 **v117;  // [bp-0x214]\n
    char v118;  // [bp-0x210]\n
    unsigned int v119;  // [bp-0x204]\n
    unsigned int *v120;  // [bp-0x200]\n
    struct struct_0 **v121;  // [bp-0x1fc]\n
    char v122;  // [bp-0x1f8]\n
    unsigned int v123;  // [bp-0x1ec]\n
    unsigned int *v124;  // [bp-0x1e8]\n
    struct struct_0 **v125;  // [bp-0x1e4]\n
    char v126;  // [bp-0x1e0]\n
    unsigned int v127;  // [bp-0x1d4]\n
    unsigned int *v128;  // [bp-0x1d0]\n
    struct struct_0 **v129;  // [bp-0x1cc]\n
    char v130;  // [bp-0x1c8]\n
    unsigned int v131;  // [bp-0x1bc]\n
    unsigned int *v132;  // [bp-0x1b8]\n
    struct struct_0 **v133;  // [bp-0x1b4]\n
    char v134;  // [bp-0x1b0]\n
    unsigned int v135;  // [bp-0x1a4]\n
    unsigned int *v136;  // [bp-0x1a0]\n
    struct struct_0 **v137;  // [bp-0x19c]\n
    unsigned int v138;  // [bp-0x198]\n
    unsigned short v139;  // [bp-0x192]\n
    unsigned int *v140;  // [bp-0x190]\n
    struct struct_0 **v141;  // [bp-0x18c]\n
    unsigned int v142;  // [bp-0x188]\n
    unsigned short v143;  // [bp-0x182]\n
    unsigned int *v144;  // [bp-0x180]\n
    struct struct_0 **v145;  // [bp-0x17c]\n
    unsigned int v146;  // [bp-0x178]\n
    unsigned short v147;  // [bp-0x172]\n
    unsigned int *v148;  // [bp-0x170]\n
    struct struct_0 **v149;  // [bp-0x16c]\n
    unsigned int v150;  // [bp-0x168]\n
    unsigned short v151;  // [bp-0x162]\n
    unsigned int *v152;  // [bp-0x160]\n
    struct struct_0 **v153;  // [bp-0x15c]\n
    unsigned int v154;  // [bp-0x158]\n
    unsigned short v155;  // [bp-0x152]\n
    unsigned int *v156;  // [bp-0x150]\n
    struct struct_0 **v157;  // [bp-0x14c]\n
    unsigned int v158;  // [bp-0x148]\n
    unsigned short v159;  // [bp-0x142]\n
    unsigned int *v160;  // [bp-0x140]\n
    struct struct_0 **v161;  // [bp-0x13c]\n
    unsigned int v162;  // [bp-0x138]\n
    unsigned short v163;  // [bp-0x132]\n
    unsigned int *v164;  // [bp-0x130]\n
    struct struct_0 **v165;  // [bp-0x12c]\n
    unsigned int v166;  // [bp-0x128]\n
    unsigned short v167;  // [bp-0x122]\n
    unsigned int *v168;  // [bp-0x120]\n
    struct struct_0 **v169;  // [bp-0x11c]\n
    char v170;  // [bp-0x118]\n
    char v171[4];  // [bp-0x10c]\n
    unsigned int v172;  // [bp-0x108]\n
    unsigned int *v173;  // [bp-0x104]\n
    struct struct_0 **v174;  // [bp-0x100]\n
    char v175;  // [bp-0xfc]\n
    struct_3 *v176;  // [bp-0xf0]\n
    unsigned int v177;  // [bp-0xec]\n
    unsigned int *v178;  // [bp-0xe8]\n
    struct struct_0 **v179;  // [bp-0xe4]\n
    char v180;  // [bp-0xe0]\n
    char v181[4];  // [bp-0xd4]\n
    unsigned int v182;  // [bp-0xd0]\n
    unsigned int *v183;  // [bp-0xcc]\n
    struct struct_0 **v184;  // [bp-0xc8]\n
    char *v185;  // [bp-0xc4]\n
    unsigned int v186;  // [bp-0xc0]\n
    unsigned int *v187;  // [bp-0xbc]\n
    struct struct_0 **v188;  // [bp-0xb8]\n
    char *v189;  // [bp-0xb4]\n
    unsigned int v190;  // [bp-0xb0]\n
    unsigned int *v191;  // [bp-0xac]\n
    struct struct_0 **v192;  // [bp-0xa8]\n
    char v193;  // [bp-0xa1]\n
    unsigned int v194;  // [bp-0x8c]\n
    unsigned int v195;  // [bp-0x88]\n
    unsigned int *v196;  // [bp-0x84]\n
    struct struct_0 **v197;  // [bp-0x80]\n
    char v198;  // [bp-0x79]\n
    unsigned int v199;  // [bp-0x64]\n
    unsigned int v200;  // [bp-0x60]\n
    unsigned int *v201;  // [bp-0x5c]\n
    struct struct_0 **v202;  // [bp-0x58]\n
    char v203;  // [bp-0x51]\n
    unsigned int v204;  // [bp-0x3c]\n
    unsigned int v205;  // [bp-0x38]\n
    unsigned int *v206;  // [bp-0x30]\n
    struct struct_0 **v207;  // [bp-0x2c]\n
    unsigned int v208;  // [bp-0x28]\n
    char v209;  // [bp-0x21]\n
    unsigned int *v210;  // [bp-0x20]\n
    struct struct_0 **v211;  // [bp-0x1c]\n
    unsigned int v212;  // [bp-0x18]\n
    char v213;  // [bp-0x11]\n
    unsigned int *v214;  // [bp-0x10]\n
    struct struct_0 **v215;  // [bp-0xc]\n
    unsigned int v216;  // [bp-0x8]\n
    unsigned int v218;  // ebx\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    unsigned int *v225;  // eax\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    struct struct_0 **v232;  // eax\n
    unsigned int *v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    struct_3 *v245;  // ecx\n
    unsigned int *v246;  // eax\n
    struct struct_0 **v247;  // eax\n
    unsigned int *v248;  // eax\n
    struct struct_0 **v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_0 **v251;  // eax\n
    unsigned int v252[2];  // ecx\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int v281[2];  // ecx\n
    unsigned int *v282;  // eax\n
    struct struct_0 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_0 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_0 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    struct struct_0 **v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    struct struct_0 **v295;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_0 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    struct struct_0 **v307;  // eax\n
    unsigned int *v309;  // eax\n
    unsigned int *v310;  // eax\n
    struct struct_0 **v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_0 **v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_0 **v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    struct struct_0 **v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    unsigned int *v322;  // eax\n
    struct struct_0 **v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_0 **v325;  // eax\n
    struct struct_0 **v326;  // eax\n
    unsigned int *v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_0 **v329;  // eax\n
    unsigned int *v330;  // eax, Other Possible Types: unsigned int\n
    unsigned int v331;  // ebx\n
\n
    v216 = v218;\n
    v28 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v49 = g_4f035c;\n
    v50 = g_4f0360;\n
    v48 = cgc__cookie;\n
    v47 = -1;\n
    if (cgc_sendline(1, \"===llamadenominate===\", 21) < 0)\n
        cgc__terminate();\n
    v125 = v217;\n
    v124 = a0;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    cgc_uint2str(&v122, 12, v123);\n
    v27 = &v122;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v219 = v124;\n
    *(v219) = *(v219) - 4;\n
    v220 = v125;\n
    *(v220) = &*(v220)->field_4;\n
    v215 = v217;\n
    v214 = a0;\n
    if (*(v214) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v213 = *(v215)->field_0;\n
    v221 = v214;\n
    *(v221) = *(v221) - 1;\n
    v222 = v215;\n
    *(v222) = &*(v222)->padding_1;\n
    if (v213 <= *(v214) && !(!v213))\n
        goto LABEL_469828;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_469828:\n
    v212 = cgc_calloc(v213);\n
    if (!v212)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v212, *(v215), v213);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v223 = v215;\n
    *(v223) = &(&*(v223)->field_0)[v213];\n
    v224 = v214;\n
    *(v224) = *(v224) - v213;\n
    cgc_checkheap();\n
    cgc_free(v212);\n
    v169 = v217;\n
    v168 = a0;\n
    if (*(v168) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v167 = *(&*(v169)->field_0);\n
    v225 = v168;\n
    *(v225) = *(v225) - 2;\n
    v226 = v169;\n
    *(v226) = &*(v226)->padding_1[1];\n
    if (v167 <= *(v168) && !(!v167))\n
        goto LABEL_469a41;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_469a41:\n
    v166 = cgc_calloc(v167);\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v166, *(v169), v167);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v227 = v168;\n
    *(v227) = *(v227) - v167;\n
    v228 = v169;\n
    *(v228) = &(&*(v228)->field_0)[v167];\n
    cgc_checkheap();\n
    cgc_free(v166);\n
    v55 = v217;\n
    v54 = a0;\n
    *(&v52) = *(v55);\n
    memset(&v51, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v52[0] << 8)\n
        v26 = v52[1];\n
    v53 = v26 & 1;\n
    cgc_uint2str(&v51, 6, v53);\n
    v25 = &v51;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v229 = v54;\n
    *(v229) = *(v229) - 2;\n
    v230 = v55;\n
    *(v230) = &*(v230)->padding_1[1];\n
    v192 = v217;\n
    v191 = a0;\n
    if (*(v191) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v191) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v191);\n
    v190 = v24;\n
    if (!v190)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v189 = cgc_calloc(134);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v189, &v28[18].padding_0[182]);\n
    cgc_strncpy(v189 + 5, *(v192), v190);\n
    v232 = v192;\n
    *(v232) = &(&*(v232)->field_4)[cgc_strlen(v189)];\n
    v234 = v191;\n
    *(v234) = *(v234) - (cgc_strlen(v189) + -4);\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v165 = v217;\n
    v164 = a0;\n
    if (*(v164) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = *(&*(v165)->field_0);\n
    v235 = v164;\n
    *(v235) = *(v235) - 2;\n
    v236 = v165;\n
    *(v236) = &*(v236)->padding_1[1];\n
    if (v163 <= *(v164) && !(!v163))\n
        goto LABEL_46a083;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46a083:\n
    v162 = cgc_calloc(v163);\n
    if (!v162)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v162, *(v165), v163);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v237 = v164;\n
    *(v237) = *(v237) - v163;\n
    v238 = v165;\n
    *(v238) = &(&*(v238)->field_0)[v163];\n
    cgc_checkheap();\n
    cgc_free(v162);\n
    v98 = v217;\n
    v97 = a0;\n
    memset(&v95, 0, 6);\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    cgc_uint2str(&v95, 6, v96);\n
    v23 = &v95;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v239 = v97;\n
    *(v239) = *(v239) - 2;\n
    v240 = v98;\n
    *(v240) = &*(v240)->padding_1[1];\n
    v82 = v217;\n
    v81 = a0;\n
    v80 = &*(v82);\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v241 = v81;\n
    *(v241) = *(v241) - 1;\n
    v242 = v82;\n
    *(v242) = &*(v242)->padding_1;\n
    v47 = v80->field_0;\n
    v137 = v217;\n
    v136 = a0;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v135 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(fpround<4>);\n
    v39 = v40 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v134, 12, v46);\n
    v22 = &v134;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v243 = v136;\n
    *(v243) = *(v243) - 4;\n
    v244 = v137;\n
    *(v244) = &*(v244)->field_4;\n
    v207 = v217;\n
    v206 = a0;\n
    memset(&v203, 0, 21);\n
    if (*(v206) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v245 = *(v207);\n
    v205 = v245->field_4;\n
    v204 = *(&v245->field_0);\n
    cgc_uint2str(&v203, 21, v204);\n
    v21 = &v203;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v203)) < 0)\n
        cgc__terminate();\n
    v246 = v206;\n
    *(v246) = *(v246) - 8;\n
    v247 = v207;\n
    *(v247) = &(*(v247))[1].padding_1[2];\n
    v102 = v217;\n
    v101 = a0;\n
    memset(&v99, 0, 4);\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(v102)->field_0;\n
    cgc_uint2str(&v99, 4, v100);\n
    v20 = &v99;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v248 = v101;\n
    *(v248) = *(v248) - 1;\n
    v249 = v102;\n
    *(v249) = &*(v249)->padding_1;\n
    v117 = v217;\n
    v116 = a0;\n
    memset(&v114, 0, 21);\n
    if (*(v116) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v115 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-966, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v114, 21, v45);\n
    v19 = &v114;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v250 = v116;\n
    *(v250) = *(v250) - 8;\n
    v251 = v117;\n
    *(v251) = &(*(v251))[1].padding_1[2];\n
    v202 = v217;\n
    v201 = a0;\n
    memset(&v198, 0, 21);\n
    if (*(v201) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v252 = *(v202);\n
    v200 = v252[1];\n
    v199 = v252[0];\n
    cgc_uint2str(&v198, 21, v199);\n
    v18 = &v198;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v198)) < 0)\n
        cgc__terminate();\n
    v253 = v201;\n
    *(v253) = *(v253) - 8;\n
    v254 = v202;\n
    *(v254) = &(*(v254))[1].padding_1[2];\n
    v145 = v217;\n
    v144 = a0;\n
    if (*(v144) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    v255 = v144;\n
    *(v255) = *(v255) - 2;\n
    v256 = v145;\n
    *(v256) = &*(v256)->padding_1[1];\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_46ab22;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46ab22:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v257 = v144;\n
    *(v257) = *(v257) - v143;\n
    v258 = v145;\n
    *(v258) = &(&*(v258)->field_0)[v143];\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v141 = v217;\n
    v140 = a0;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    v259 = v140;\n
    *(v259) = *(v259) - 2;\n
    v260 = v141;\n
    *(v260) = &*(v260)->padding_1[1];\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_46ad5c;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46ad5c:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v261 = v140;\n
    *(v261) = *(v261) - v139;\n
    v262 = v141;\n
    *(v262) = &(&*(v262)->field_0)[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v184 = v217;\n
    v183 = a0;\n
    *(&v181[0]) = *(v184);\n
    memset(&v180, 0, 12);\n
    if (*(v183) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v181[0] << 24)\n
    {\n
        v17 = 0;\n
        if (v181[1] << 16)\n
        {\n
            v17 = 0;\n
            if (v181[2] << 8)\n
                v17 = v181[3];\n
        }\n
    }\n
    v182 = v17 & 1;\n
    cgc_uint2str(&v180, 12, v182);\n
    v16 = &v180;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v180)) < 0)\n
        cgc__terminate();\n
    v263 = v183;\n
    *(v263) = *(v263) - 4;\n
    v264 = v184;\n
    *(v264) = &*(v264)->field_4;\n
    v94 = v217;\n
    v93 = a0;\n
    memset(&v91, 0, 6);\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 6, v92);\n
    v15 = &v91;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v265 = v93;\n
    *(v265) = *(v265) - 2;\n
    v266 = v94;\n
    *(v266) = &*(v266)->padding_1[1];\n
    v161 = v217;\n
    v160 = a0;\n
    if (*(v160) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v159 = *(&*(v161)->field_0);\n
    v267 = v160;\n
    *(v267) = *(v267) - 2;\n
    v268 = v161;\n
    *(v268) = &*(v268)->padding_1[1];\n
    if (v159 <= *(v160) && !(!v159))\n
        goto LABEL_46b29d;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46b29d:\n
    v158 = cgc_calloc(v159);\n
    if (!v158)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v158, *(v161), v159);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v269 = v160;\n
    *(v269) = *(v269) - v159;\n
    v270 = v161;\n
    *(v270) = &(&*(v270)->field_0)[v159];\n
    cgc_checkheap();\n
    cgc_free(v158);\n
    v121 = v217;\n
    v120 = a0;\n
    memset(&v118, 0, 12);\n
    if (*(v120) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = *(&*(v121)->field_0);\n
    cgc_uint2str(&v118, 12, v119);\n
    v14 = &v118;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v271 = v120;\n
    *(v271) = *(v271) - 4;\n
    v272 = v121;\n
    *(v272) = &*(v272)->field_4;\n
    v133 = v217;\n
    v132 = a0;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v131 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-970, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v130, 12, v44);\n
    v13 = &v130;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v273 = v132;\n
    *(v273) = *(v273) - 4;\n
    v274 = v133;\n
    *(v274) = &*(v274)->field_4;\n
    v79 = v217;\n
    v78 = a0;\n
    *(&v77[0]) = *(v79);\n
    if (*(v78) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v275 = v78;\n
    *(v275) = *(v275) - 1;\n
    v276 = v79;\n
    *(v276) = &*(v276)->padding_1;\n
    v47 = v77[0];\n
    v157 = v217;\n
    v156 = a0;\n
    if (*(v156) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v155 = *(&*(v157)->field_0);\n
    v277 = v156;\n
    *(v277) = *(v277) - 2;\n
    v278 = v157;\n
    *(v278) = &*(v278)->padding_1[1];\n
    if (v155 <= *(v156) && !(!v155))\n
        goto LABEL_46b837;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46b837:\n
    v154 = cgc_calloc(v155);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v154, *(v157), v155);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v279 = v156;\n
    *(v279) = *(v279) - v155;\n
    v280 = v157;\n
    *(v280) = &(&*(v280)->field_0)[v155];\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    v197 = v217;\n
    v196 = a0;\n
    memset(&v193, 0, 21);\n
    if (*(v196) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v281 = *(v197);\n
    v195 = v281[1];\n
    v194 = v281[0];\n
    cgc_uint2str(&v193, 21, v194);\n
    v12 = &v193;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v282 = v196;\n
    *(v282) = *(v282) - 8;\n
    v283 = v197;\n
    *(v283) = &(*(v283))[1].padding_1[2];\n
    v90 = v217;\n
    v89 = a0;\n
    memset(&v87, 0, 6);\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 6, v88);\n
    v11 = &v87;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v284 = v89;\n
    *(v284) = *(v284) - 2;\n
    v285 = v90;\n
    *(v285) = &*(v285)->padding_1[1];\n
    v76 = v217;\n
    v75 = a0;\n
    v74 = &*(v76)->field_0;\n
    if (*(v75) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v286 = v75;\n
    *(v286) = *(v286) - 1;\n
    v287 = v76;\n
    *(v287) = &*(v287)->padding_1;\n
    v47 = *(v74);\n
    v113 = v217;\n
    v112 = a0;\n
    memset(&v110, 0, 21);\n
    if (*(v112) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v111 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-974, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v110, 21, v43);\n
    v10 = &v110;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v288 = v112;\n
    *(v288) = *(v288) - 8;\n
    v289 = v113;\n
    *(v289) = &(*(v289))[1].padding_1[2];\n
    v61 = v217;\n
    v60 = a0;\n
    *(&v57[0]) = *(v61);\n
    memset(&v56, 0, 21);\n
    if (*(v60) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v57[0])\n
    {\n
        v9 = 0;\n
        if (v57[1])\n
        {\n
            v9 = 0;\n
            if (v57[2])\n
            {\n
                v9 = 0;\n
                if (v57[3])\n
                {\n
                    v9 = 0;\n
                    if (v57[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v57[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v57[6] << 8)\n
                                v9 = v57[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v58 = v9 & 1;\n
    v59 = 0;\n
    cgc_uint2str(&v56, 21, v58);\n
    v8 = &v56;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v290 = v60;\n
    *(v290) = *(v290) - 8;\n
    v291 = v61;\n
    *(v291) = &(*(v291))[1].padding_1[2];\n
    v73 = v217;\n
    v72 = a0;\n
    v71 = &*(v73)->field_0;\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v292 = v72;\n
    *(v292) = *(v292) - 1;\n
    v293 = v73;\n
    *(v293) = &*(v293)->padding_1;\n
    v47 = *(v71);\n
    v109 = v217;\n
    v108 = a0;\n
    memset(&v106, 0, 21);\n
    if (*(v108) < 8)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v107 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-978, size=2, endness=Iend_LE)))));\n
    v31 = v32 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v106, 21, v42);\n
    v7 = &v106;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v294 = v108;\n
    *(v294) = *(v294) - 8;\n
    v295 = v109;\n
    *(v295) = &(*(v295))[1].padding_1[2];\n
    v188 = v217;\n
    v187 = a0;\n
    if (*(v187) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v187) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v187);\n
    v186 = v6;\n
    if (!v186)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v185 = cgc_calloc(134);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v185, &v28[18].padding_0[182]);\n
    cgc_strncpy(v185 + 5, *(v188), v186);\n
    v297 = v188;\n
    *(v297) = &(&*(v297)->field_4)[cgc_strlen(v185)];\n
    v299 = v187;\n
    *(v299) = *(v299) - (cgc_strlen(v185) + -4);\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v179 = v217;\n
    v178 = a0;\n
    v176 = &*(v179);\n
    memset(&v175, 0, 12);\n
    if (*(v178) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v176->field_0 << 24)\n
    {\n
        v5 = 0;\n
        if (v176->padding_1[0] << 16)\n
        {\n
            v5 = 0;\n
            if (v176->padding_1[1] << 8)\n
                v5 = v176->padding_1[2];\n
        }\n
    }\n
    v177 = v5 & 1;\n
    cgc_uint2str(&v175, 12, v177);\n
    v4 = &v175;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v175)) < 0)\n
        cgc__terminate();\n
    v300 = v178;\n
    *(v300) = *(v300) - 4;\n
    v301 = v179;\n
    *(v301) = &*(v301)->field_4;\n
    v153 = v217;\n
    v152 = a0;\n
    if (*(v152) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v151 = *(&*(v153)->field_0);\n
    v302 = v152;\n
    *(v302) = *(v302) - 2;\n
    v303 = v153;\n
    *(v303) = &*(v303)->padding_1[1];\n
    if (v151 <= *(v152) && !(!v151))\n
        goto LABEL_46c7b5;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46c7b5:\n
    v150 = cgc_calloc(v151);\n
    if (!v150)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v150, *(v153), v151);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v304 = v152;\n
    *(v304) = *(v304) - v151;\n
    v305 = v153;\n
    *(v305) = &(&*(v305)->field_0)[v151];\n
    cgc_checkheap();\n
    cgc_free(v150);\n
    v86 = v217;\n
    v85 = a0;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v85) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v85);\n
    v84 = v3;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v83, &v28[18].padding_0[182]);\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v307 = v86;\n
    *(v307) = &(&*(v307)->field_4)[cgc_strlen(v83)];\n
    v309 = v85;\n
    *(v309) = *(v309) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, &v28[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v70 = v217;\n
    v69 = a0;\n
    v68 = &*(v70)->field_0;\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v310 = v69;\n
    *(v310) = *(v310) - 1;\n
    v311 = v70;\n
    *(v311) = &*(v311)->padding_1;\n
    v47 = *(v68);\n
    v67 = v217;\n
    v66 = a0;\n
    v65 = &*(v67)->field_0;\n
    if (*(v66) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v312 = v66;\n
    *(v312) = *(v312) - 1;\n
    v313 = v67;\n
    *(v313) = &*(v313)->padding_1;\n
    v47 = *(v65);\n
    v174 = v217;\n
    v173 = a0;\n
    *(&v171[0]) = *(v174);\n
    memset(&v170, 0, 12);\n
    if (*(v173) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v171[0] << 24)\n
    {\n
        v2 = 0;\n
        if (v171[1] << 16)\n
        {\n
            v2 = 0;\n
            if (v171[2] << 8)\n
                v2 = v171[3];\n
        }\n
    }\n
    v172 = v2 & 1;\n
    cgc_uint2str(&v170, 12, v172);\n
    v1 = &v170;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v314 = v173;\n
    *(v314) = *(v314) - 4;\n
    v315 = v174;\n
    *(v315) = &*(v315)->field_4;\n
    v149 = v217;\n
    v148 = a0;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v147 = *(&*(v149)->field_0);\n
    v316 = v148;\n
    *(v316) = *(v316) - 2;\n
    v317 = v149;\n
    *(v317) = &*(v317)->padding_1[1];\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_46cf83;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46cf83:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, &v28[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v318 = v148;\n
    *(v318) = *(v318) - v147;\n
    v319 = v149;\n
    *(v319) = &(&*(v319)->field_0)[v147];\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v129 = v217;\n
    v128 = a0;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v127 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v30 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-982, size=2, endness=Iend_LE)))));\n
    v29 = v30 | 0xc00;\n
    v41 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v126, 12, v41);\n
    v0 = &v126;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v320 = v128;\n
    *(v320) = *(v320) - 4;\n
    v321 = v129;\n
    *(v321) = &*(v321)->field_4;\n
    v64 = v217;\n
    v63 = a0;\n
    v62 = &*(v64)->field_0;\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v322 = v63;\n
    *(v322) = *(v322) - 1;\n
    v323 = v64;\n
    *(v323) = &*(v323)->padding_1;\n
    v47 = *(v62);\n
    v211 = v217;\n
    v210 = a0;\n
    if (*(v210) < 1)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v209 = *(v211)->field_0;\n
    v324 = v210;\n
    *(v324) = *(v324) - 1;\n
    v325 = v211;\n
    *(v325) = &*(v325)->padding_1;\n
    if (v209 <= *(v210) && !(!v209))\n
        goto LABEL_46d3ba;\n
    if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46d3ba:\n
    v208 = cgc_calloc(v209);\n
    if (!v208)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v208, *(v211), v209);\n
    if (cgc_sendline(1, &v28[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v326 = v211;\n
    *(v326) = &(&*(v326)->field_0)[v209];\n
    v327 = v210;\n
    *(v327) = *(v327) - v209;\n
    cgc_checkheap();\n
    cgc_free(v208);\n
    v105 = v217;\n
    v104 = a0;\n
    v103 = &*(v105)->field_0;\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, &v28[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v328 = v104;\n
    *(v328) = *(v328) - 2;\n
    v329 = v105;\n
    *(v329) = &*(v329)->padding_1[1];\n
    v47 = *(v103);\n
    v48 ^= v28->field_260;\n
    if (v48)\n
        cgc___stack_cookie_fail();\n
    v330 = a0;\n
    if (*(v330) > 0 && v47 >= 0 && v47 < 2)\n
        v330 = (&v49)[v47](v217);\n
    v331 = v216;\n
    return v330;\n
}\n
", "4642279:sub_46d5e7": null, "4642288:cgc_process_llamadermophyte": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadermophyte(struct struct_0 **v58, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x110]\n
    char v1;  // [bp-0x109]\n
    struct_2 *v2;  // [bp-0x108]\n
    char v3;  // [bp-0x101]\n
    struct_2 *v4;  // [bp-0x100]\n
    char v5;  // [bp-0xf9]\n
    struct_2 *v6;  // [bp-0xf8]\n
    char v7;  // [bp-0xf1]\n
    unsigned int v8;  // [bp-0xf0]\n
    struct_2 *v9;  // [bp-0xec]\n
    char v10;  // [bp-0xe5]\n
    struct_1 *v11;  // [bp-0xe4]\n
    struct struct_3 **v12;  // [bp-0xe0]\n
    unsigned int v13;  // [bp-0xdc]\n
    char v14;  // [bp-0xd8]\n
    char v15;  // [bp-0xd6]\n
    char v16[2];  // [bp-0xd0]\n
    unsigned short v17;  // [bp-0xca]\n
    unsigned int *v18;  // [bp-0xc8]\n
    struct struct_0 **v19;  // [bp-0xc4]\n
    char v20;  // [bp-0xbe]\n
    char v21[2];  // [bp-0xb8]\n
    unsigned short v22;  // [bp-0xb2]\n
    unsigned int *v23;  // [bp-0xb0]\n
    struct struct_0 **v24;  // [bp-0xac]\n
    char v25;  // [bp-0xa6]\n
    char v26[2];  // [bp-0xa0]\n
    unsigned short v27;  // [bp-0x9a]\n
    unsigned int *v28;  // [bp-0x98]\n
    struct struct_0 **v29;  // [bp-0x94]\n
    char v30;  // [bp-0x8d]\n
    char v31[8];  // [bp-0x78]\n
    unsigned int v32;  // [bp-0x74]\n
    void* v33;  // [bp-0x70]\n
    unsigned int *v34;  // [bp-0x6c]\n
    struct struct_0 **v35;  // [bp-0x68]\n
    unsigned int v36;  // [bp-0x64]\n
    char v37;  // [bp-0x5d]\n
    unsigned int *v38;  // [bp-0x5c]\n
    struct struct_0 **v39;  // [bp-0x58]\n
    char *v40;  // [bp-0x54]\n
    unsigned int v41;  // [bp-0x50]\n
    unsigned int *v42;  // [bp-0x4c]\n
    struct struct_0 **v43;  // [bp-0x48]\n
    unsigned int v44;  // [bp-0x44]\n
    unsigned short v45;  // [bp-0x3e]\n
    unsigned int *v46;  // [bp-0x3c]\n
    struct struct_0 **v47;  // [bp-0x38]\n
    unsigned int v48;  // [bp-0x34]\n
    unsigned short v49;  // [bp-0x2e]\n
    unsigned int *v50;  // [bp-0x2c]\n
    struct struct_0 **v51;  // [bp-0x28]\n
    char v52;  // [bp-0x24]\n
    char v53[4];  // [bp-0x18]\n
    unsigned int v54;  // [bp-0x14]\n
    unsigned int *v55;  // [bp-0x10]\n
    struct struct_0 **v56;  // [bp-0xc]\n
    unsigned int v57;  // [bp-0x8]\n
    unsigned int v59;  // ebx\n
    unsigned int *v60;  // eax\n
    struct struct_0 **v61;  // eax\n
    unsigned int *v62;  // eax\n
    struct struct_0 **v63;  // eax\n
    unsigned int *v64;  // eax\n
    struct struct_0 **v65;  // eax\n
    struct struct_0 **v67;  // eax\n
    unsigned int *v69;  // eax\n
    unsigned int *v70;  // eax\n
    struct struct_0 **v71;  // eax\n
    unsigned int *v72;  // eax\n
    struct struct_0 **v73;  // eax\n
    unsigned int *v74;  // eax\n
    struct struct_0 **v75;  // eax\n
    struct struct_0 **v76;  // eax\n
    unsigned int *v77;  // eax\n
    unsigned int *v78;  // eax\n
    struct struct_0 **v79;  // eax\n
    unsigned int *v80;  // eax\n
    struct struct_0 **v81;  // eax\n
    unsigned int *v82;  // eax\n
    struct struct_0 **v83;  // eax\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    unsigned int *v86;  // eax, Other Possible Types: unsigned int\n
    unsigned int v87;  // ebx\n
\n
    v57 = v59;\n
    v11 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamadermophyte===\", 21) < 0)\n
        cgc__terminate();\n
    v51 = v58;\n
    v50 = a0;\n
    if (*(v50) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = *(&*(v51)->field_0);\n
    v60 = v50;\n
    *(v60) = *(v60) - 2;\n
    v61 = v51;\n
    *(v61) = &*(v61)->field_2;\n
    if (v49 <= *(v50) && !(!v49))\n
        goto LABEL_46d75f;\n
    if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46d75f:\n
    v48 = cgc_calloc(v49);\n
    if (!v48)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v48, *(v51), v49);\n
    if (cgc_sendline(1, &v11[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v62 = v50;\n
    *(v62) = *(v62) - v49;\n
    v63 = v51;\n
    *(v63) = &(&*(v63)->field_0)[v49];\n
    cgc_checkheap();\n
    cgc_free(v48);\n
    v29 = v58;\n
    v28 = a0;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v26[0] << 8)\n
        v10 = v26[1];\n
    v27 = v10 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v9 = &v25;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v64 = v28;\n
    *(v64) = *(v64) - 2;\n
    v65 = v29;\n
    *(v65) = &*(v65)->field_2;\n
    v43 = v58;\n
    v42 = a0;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v42) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v42);\n
    v41 = v8;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v40, &v11[18].padding_0[182]);\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v67 = v43;\n
    *(v67) = &(&*(v67)->field_4)[cgc_strlen(v40)];\n
    v69 = v42;\n
    *(v69) = *(v69) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, &v11[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v35 = v58;\n
    v34 = a0;\n
    *(&v31[0]) = *(v35);\n
    memset(&v30, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v31[0])\n
    {\n
        v7 = 0;\n
        if (v31[1])\n
        {\n
            v7 = 0;\n
            if (v31[2])\n
            {\n
                v7 = 0;\n
                if (v31[3])\n
                {\n
                    v7 = 0;\n
                    if (v31[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v31[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v31[6] << 8)\n
                                v7 = v31[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v32 = v7 & 1;\n
    v33 = 0;\n
    cgc_uint2str(&v30, 21, v32);\n
    v6 = &v30;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v70 = v34;\n
    *(v70) = *(v70) - 8;\n
    v71 = v35;\n
    *(v71) = *(v71) + 1;\n
    v24 = v58;\n
    v23 = a0;\n
    *(&v21) = *(v24);\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v21[0] << 8)\n
        v5 = v21[1];\n
    v22 = v5 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v4 = &v20;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v20)) < 0)\n
        cgc__terminate();\n
    v72 = v23;\n
    *(v72) = *(v72) - 2;\n
    v73 = v24;\n
    *(v73) = &*(v73)->field_2;\n
    v39 = v58;\n
    v38 = a0;\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v37 = *(v39)->field_0;\n
    v74 = v38;\n
    *(v74) = *(v74) - 1;\n
    v75 = v39;\n
    *(v75) = &*(v75)->padding_1;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_46e0c3;\n
    if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46e0c3:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, &v11[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v76 = v39;\n
    *(v76) = &(&*(v76)->field_0)[v37];\n
    v77 = v38;\n
    *(v77) = *(v77) - v37;\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v19 = v58;\n
    v18 = a0;\n
    *(&v16) = *(v19);\n
    memset(&v15, 0, 6);\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v16[0] << 8)\n
        v3 = v16[1];\n
    v17 = v3 & 1;\n
    cgc_uint2str(&v15, 6, v17);\n
    v2 = &v15;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v15)) < 0)\n
        cgc__terminate();\n
    v78 = v18;\n
    *(v78) = *(v78) - 2;\n
    v79 = v19;\n
    *(v79) = &*(v79)->field_2;\n
    v47 = v58;\n
    v46 = a0;\n
    if (*(v46) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v45 = *(&*(v47)->field_0);\n
    v80 = v46;\n
    *(v80) = *(v80) - 2;\n
    v81 = v47;\n
    *(v81) = &*(v81)->field_2;\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_46e445;\n
    if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46e445:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, &v11[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v82 = v46;\n
    *(v82) = *(v82) - v45;\n
    v83 = v47;\n
    *(v83) = &(&*(v83)->field_0)[v45];\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v56 = v58;\n
    v55 = a0;\n
    *(&v53[0]) = *(v56);\n
    memset(&v52, 0, 12);\n
    if (*(v55) < 4)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v53[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v53[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v53[2] << 8)\n
                v1 = v53[3];\n
        }\n
    }\n
    v54 = v1 & 1;\n
    cgc_uint2str(&v52, 12, v54);\n
    v0 = &v52;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v84 = v55;\n
    *(v84) = *(v84) - 4;\n
    v85 = v56;\n
    *(v85) = &*(v85)->field_4;\n
    v13 ^= v11->field_260;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v86 = a0;\n
    if (*(v86) > 0 && v12 >= 0 && v12 < 0)\n
        v86 = *((&v14 + 0x4 * v12))(v58);\n
    v87 = v57;\n
    return v86;\n
}\n
", "4646743:sub_46e757": null, "4646752:cgc_process_llamadyspneic": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0390;\n
extern unsigned int g_4f0394;\n
extern unsigned int g_4f0398;\n
extern unsigned int g_4f039c;\n
\n
int cgc_process_llamadyspneic(struct struct_0 **v35, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc8]\n
    struct_1 *v1;  // [bp-0xc4]\n
    struct_1 *v2;  // [bp-0xc0]\n
    struct_1 *v3;  // [bp-0xbc]\n
    struct_2 *v4;  // [bp-0xb8]\n
    unsigned short v5;  // [bp-0xb4]\n
    unsigned short v6;  // [bp-0xb2]\n
    unsigned short v7;  // [bp-0xb0]\n
    unsigned short v8;  // [bp-0xae]\n
    unsigned long v9;  // [bp-0xac]\n
    unsigned long v10;  // [bp-0xa4]\n
    unsigned int v11;  // [bp-0x9c]\n
    unsigned int v12;  // [bp-0x98]\n
    unsigned int v13;  // [bp-0x94]\n
    unsigned int v14;  // [bp-0x90]\n
    unsigned int v15;  // [bp-0x8c]\n
    unsigned int v16;  // [bp-0x88]\n
    char v17;  // [bp-0x84]\n
    unsigned short v18;  // [bp-0x7e]\n
    unsigned int *v19;  // [bp-0x7c]\n
    struct struct_0 **v20;  // [bp-0x78]\n
    char v21;  // [bp-0x71]\n
    unsigned long v22;  // [bp-0x5c]\n
    unsigned int *v23;  // [bp-0x54]\n
    struct struct_0 **v24;  // [bp-0x50]\n
    char v25;  // [bp-0x4c]\n
    unsigned int v26;  // [bp-0x40]\n
    unsigned int *v27;  // [bp-0x3c]\n
    struct struct_0 **v28;  // [bp-0x38]\n
    char v29;  // [bp-0x31]\n
    unsigned int v30;  // [bp-0x1c]\n
    unsigned int v31;  // [bp-0x18]\n
    unsigned int *v32;  // [bp-0x10]\n
    struct struct_0 **v33;  // [bp-0xc]\n
    unsigned int v34;  // [bp-0x8]\n
    unsigned int v36;  // ebx\n
    unsigned int *v37;  // eax\n
    struct struct_0 **v38;  // eax\n
    unsigned int v39[2];  // ecx\n
    unsigned int *v40;  // eax\n
    struct struct_0 **v41;  // eax\n
    unsigned int *v42;  // eax\n
    struct struct_0 **v43;  // eax\n
    unsigned int *v44;  // eax\n
    struct struct_0 **v45;  // eax\n
    unsigned int *v46;  // eax, Other Possible Types: unsigned int\n
    unsigned int v47;  // ebx\n
\n
    v34 = v36;\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v13 = g_4f0390;\n
    v14 = g_4f0394;\n
    v15 = g_4f0398;\n
    v16 = g_4f039c;\n
    v12 = cgc__cookie;\n
    v11 = -1;\n
    if (cgc_sendline(1, \"===llamadyspneic===\", 19) < 0)\n
        cgc__terminate();\n
    v24 = v35;\n
    v23 = a0;\n
    memset(&v21, 0, 21);\n
    if (*(v23) < 8)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v22 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v8 = [D] x86g_create_fpucw(fpround<4>);\n
    v7 = v8 | 0xc00;\n
    v10 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v21, 21, v10);\n
    v3 = &v21;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v21)) < 0)\n
        cgc__terminate();\n
    v37 = v23;\n
    *(v37) = *(v37) - 8;\n
    v38 = v24;\n
    *(v38) = *(v38) + 1;\n
    v33 = v35;\n
    v32 = a0;\n
    memset(&v29, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = *(v33);\n
    v31 = v39[1];\n
    v30 = v39[0];\n
    cgc_uint2str(&v29, 21, v30);\n
    v2 = &v29;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v40 = v32;\n
    *(v40) = *(v40) - 8;\n
    v41 = v33;\n
    *(v41) = *(v41) + 1;\n
    v28 = v35;\n
    v27 = a0;\n
    memset(&v25, 0, 12);\n
    if (*(v27) < 4)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v26 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v6 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-174, size=2, endness=Iend_LE)))));\n
    v5 = v6 | 0xc00;\n
    v9 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v25, 12, v9);\n
    v1 = &v25;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v42 = v27;\n
    *(v42) = *(v42) - 4;\n
    v43 = v28;\n
    *(v43) = &*(v43)->field_4;\n
    v20 = v35;\n
    v19 = a0;\n
    memset(&v17, 0, 6);\n
    if (*(v19) < 2)\n
    {\n
        if (cgc_sendline(1, &v4[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = *(v20)->field_0;\n
    cgc_uint2str(&v17, 6, v18);\n
    v0 = &v17;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v17)) < 0)\n
        cgc__terminate();\n
    v44 = v19;\n
    *(v44) = *(v44) - 2;\n
    v45 = v20;\n
    *(v45) = &*(v45)->padding_2;\n
    v12 ^= v4->field_260;\n
    if (v12)\n
        cgc___stack_cookie_fail();\n
    v46 = a0;\n
    if (*(v46) > 0 && v11 >= 0 && v11 < 4)\n
        v46 = (&v13)[v11](v35);\n
    v47 = v34;\n
    return v46;\n
}\n
", "4648303:sub_46ed6f": null, "4648304:cgc_process_llamadecoke": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadecoke(struct struct_0 **v262, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x540]\n
    struct_1 *v1;  // [bp-0x53c]\n
    unsigned int v2;  // [bp-0x538]\n
    unsigned int v3;  // [bp-0x534]\n
    struct_1 *v4;  // [bp-0x530]\n
    struct_1 *v5;  // [bp-0x52c]\n
    struct_1 *v6;  // [bp-0x528]\n
    char v7;  // [bp-0x521]\n
    struct_1 *v8;  // [bp-0x520]\n
    char v9;  // [bp-0x519]\n
    struct_1 *v10;  // [bp-0x518]\n
    struct_1 *v11;  // [bp-0x514]\n
    unsigned int v12;  // [bp-0x510]\n
    struct_1 *v13;  // [bp-0x50c]\n
    struct_1 *v14;  // [bp-0x508]\n
    struct_1 *v15;  // [bp-0x504]\n
    struct_1 *v16;  // [bp-0x500]\n
    struct_1 *v17;  // [bp-0x4fc]\n
    struct_1 *v18;  // [bp-0x4f8]\n
    char v19;  // [bp-0x4f1]\n
    struct_1 *v20;  // [bp-0x4f0]\n
    char v21;  // [bp-0x4e9]\n
    struct_1 *v22;  // [bp-0x4e8]\n
    struct_1 *v23;  // [bp-0x4e4]\n
    struct_1 *v24;  // [bp-0x4e0]\n
    char v25;  // [bp-0x4d9]\n
    struct_1 *v26;  // [bp-0x4d8]\n
    char v27;  // [bp-0x4d1]\n
    struct_1 *v28;  // [bp-0x4d0]\n
    char v29;  // [bp-0x4c9]\n
    struct_1 *v30;  // [bp-0x4c8]\n
    struct_1 *v31;  // [bp-0x4c4]\n
    char v32;  // [bp-0x4bd]\n
    struct_1 *v33;  // [bp-0x4bc]\n
    struct_1 *v34;  // [bp-0x4b8]\n
    char v35;  // [bp-0x4b1]\n
    unsigned int v36;  // [bp-0x4b0]\n
    struct_1 *v37;  // [bp-0x4ac]\n
    unsigned int v38;  // [bp-0x4a8]\n
    struct_1 *v39;  // [bp-0x4a4]\n
    char v40;  // [bp-0x49d]\n
    struct_1 *v41;  // [bp-0x49c]\n
    char v42;  // [bp-0x495]\n
    struct_1 *v43;  // [bp-0x494]\n
    struct_2 *v44;  // [bp-0x490]\n
    unsigned short v45;  // [bp-0x48c]\n
    unsigned short v46;  // [bp-0x48a]\n
    unsigned short v47;  // [bp-0x488]\n
    unsigned short v48;  // [bp-0x486]\n
    unsigned short v49;  // [bp-0x484]\n
    unsigned short v50;  // [bp-0x482]\n
    unsigned short v51;  // [bp-0x480]\n
    unsigned short v52;  // [bp-0x47e]\n
    unsigned long v53;  // [bp-0x47c]\n
    unsigned long v54;  // [bp-0x474]\n
    unsigned long v55;  // [bp-0x46c]\n
    unsigned long v56;  // [bp-0x464]\n
    struct struct_4 **v57;  // [bp-0x458]\n
    unsigned int v58;  // [bp-0x454]\n
    char v59;  // [bp-0x450]\n
    char v60;  // [bp-0x44e]\n
    char v61[2];  // [bp-0x448]\n
    unsigned short v62;  // [bp-0x442]\n
    unsigned int *v63;  // [bp-0x440]\n
    struct struct_0 **v64;  // [bp-0x43c]\n
    char v65;  // [bp-0x436]\n
    struct_3 *v66;  // [bp-0x430]\n
    unsigned short v67;  // [bp-0x42a]\n
    unsigned int *v68;  // [bp-0x428]\n
    struct struct_0 **v69;  // [bp-0x424]\n
    char v70;  // [bp-0x41d]\n
    char v71[8];  // [bp-0x408]\n
    unsigned int v72;  // [bp-0x404]\n
    void* v73;  // [bp-0x400]\n
    unsigned int *v74;  // [bp-0x3f8]\n
    struct struct_0 **v75;  // [bp-0x3f4]\n
    char v76;  // [bp-0x3ed]\n
    char v77[8];  // [bp-0x3d8]\n
    unsigned int v78;  // [bp-0x3d4]\n
    void* v79;  // [bp-0x3d0]\n
    unsigned int *v80;  // [bp-0x3c8]\n
    struct struct_0 **v81;  // [bp-0x3c4]\n
    char v82;  // [bp-0x3bd]\n
    char v83[8];  // [bp-0x3a8]\n
    unsigned int v84;  // [bp-0x3a4]\n
    void* v85;  // [bp-0x3a0]\n
    unsigned int *v86;  // [bp-0x398]\n
    struct struct_0 **v87;  // [bp-0x394]\n
    char v88;  // [bp-0x38d]\n
    char v89[8];  // [bp-0x378]\n
    unsigned int v90;  // [bp-0x374]\n
    void* v91;  // [bp-0x370]\n
    unsigned int *v92;  // [bp-0x36c]\n
    struct struct_0 **v93;  // [bp-0x368]\n
    unsigned int v94;  // [bp-0x364]\n
    char v95;  // [bp-0x35d]\n
    unsigned int *v96;  // [bp-0x35c]\n
    struct struct_0 **v97;  // [bp-0x358]\n
    unsigned int v98;  // [bp-0x354]\n
    char v99;  // [bp-0x34d]\n
    unsigned int *v100;  // [bp-0x34c]\n
    struct struct_0 **v101;  // [bp-0x348]\n
    unsigned int v102;  // [bp-0x344]\n
    char v103;  // [bp-0x33d]\n
    unsigned int *v104;  // [bp-0x33c]\n
    struct struct_0 **v105;  // [bp-0x338]\n
    unsigned int v106;  // [bp-0x334]\n
    char v107;  // [bp-0x32d]\n
    unsigned int *v108;  // [bp-0x32c]\n
    struct struct_0 **v109;  // [bp-0x328]\n
    unsigned int v110;  // [bp-0x324]\n
    char v111;  // [bp-0x31d]\n
    unsigned int *v112;  // [bp-0x31c]\n
    struct struct_0 **v113;  // [bp-0x318]\n
    char *v114;  // [bp-0x314]\n
    unsigned int v115;  // [bp-0x310]\n
    unsigned int *v116;  // [bp-0x30c]\n
    struct struct_0 **v117;  // [bp-0x308]\n
    char *v118;  // [bp-0x304]\n
    unsigned int v119;  // [bp-0x300]\n
    unsigned int *v120;  // [bp-0x2fc]\n
    struct struct_0 **v121;  // [bp-0x2f8]\n
    char *v122;  // [bp-0x2f4]\n
    unsigned int v123;  // [bp-0x2f0]\n
    unsigned int *v124;  // [bp-0x2ec]\n
    struct struct_0 **v125;  // [bp-0x2e8]\n
    char v126;  // [bp-0x2e4]\n
    unsigned short v127;  // [bp-0x2de]\n
    unsigned int *v128;  // [bp-0x2dc]\n
    struct struct_0 **v129;  // [bp-0x2d8]\n
    char v130;  // [bp-0x2d4]\n
    unsigned short v131;  // [bp-0x2ce]\n
    unsigned int *v132;  // [bp-0x2cc]\n
    struct struct_0 **v133;  // [bp-0x2c8]\n
    char v134;  // [bp-0x2c1]\n
    char v135;  // [bp-0x2bd]\n
    unsigned int *v136;  // [bp-0x2bc]\n
    struct struct_0 **v137;  // [bp-0x2b8]\n
    char v138;  // [bp-0x2b1]\n
    char v139;  // [bp-0x2ad]\n
    unsigned int *v140;  // [bp-0x2ac]\n
    struct struct_0 **v141;  // [bp-0x2a8]\n
    char v142;  // [bp-0x2a1]\n
    char v143;  // [bp-0x29d]\n
    unsigned int *v144;  // [bp-0x29c]\n
    struct struct_0 **v145;  // [bp-0x298]\n
    char v146;  // [bp-0x291]\n
    unsigned long v147;  // [bp-0x27c]\n
    unsigned int *v148;  // [bp-0x274]\n
    struct struct_0 **v149;  // [bp-0x270]\n
    char v150;  // [bp-0x269]\n
    unsigned long v151;  // [bp-0x254]\n
    unsigned int *v152;  // [bp-0x248]\n
    struct struct_0 **v153;  // [bp-0x244]\n
    char v154;  // [bp-0x240]\n
    unsigned int v155;  // [bp-0x234]\n
    unsigned int *v156;  // [bp-0x230]\n
    struct struct_0 **v157;  // [bp-0x22c]\n
    char v158;  // [bp-0x228]\n
    unsigned int v159;  // [bp-0x21c]\n
    unsigned int *v160;  // [bp-0x218]\n
    struct struct_0 **v161;  // [bp-0x214]\n
    char v162;  // [bp-0x210]\n
    unsigned int v163;  // [bp-0x204]\n
    unsigned int *v164;  // [bp-0x200]\n
    struct struct_0 **v165;  // [bp-0x1fc]\n
    char v166;  // [bp-0x1f8]\n
    unsigned int v167;  // [bp-0x1ec]\n
    unsigned int *v168;  // [bp-0x1e8]\n
    struct struct_0 **v169;  // [bp-0x1e4]\n
    char v170;  // [bp-0x1e0]\n
    unsigned int v171;  // [bp-0x1d4]\n
    unsigned int *v172;  // [bp-0x1d0]\n
    struct struct_0 **v173;  // [bp-0x1cc]\n
    char v174;  // [bp-0x1c8]\n
    unsigned int v175;  // [bp-0x1bc]\n
    unsigned int *v176;  // [bp-0x1b8]\n
    struct struct_0 **v177;  // [bp-0x1b4]\n
    char v178;  // [bp-0x1b0]\n
    unsigned int v179;  // [bp-0x1a4]\n
    unsigned int *v180;  // [bp-0x1a0]\n
    struct struct_0 **v181;  // [bp-0x19c]\n
    unsigned int v182;  // [bp-0x198]\n
    unsigned short v183;  // [bp-0x192]\n
    unsigned int *v184;  // [bp-0x190]\n
    struct struct_0 **v185;  // [bp-0x18c]\n
    unsigned int v186;  // [bp-0x188]\n
    unsigned short v187;  // [bp-0x182]\n
    unsigned int *v188;  // [bp-0x180]\n
    struct struct_0 **v189;  // [bp-0x17c]\n
    unsigned int v190;  // [bp-0x178]\n
    unsigned short v191;  // [bp-0x172]\n
    unsigned int *v192;  // [bp-0x170]\n
    struct struct_0 **v193;  // [bp-0x16c]\n
    unsigned int v194;  // [bp-0x168]\n
    unsigned short v195;  // [bp-0x162]\n
    unsigned int *v196;  // [bp-0x160]\n
    struct struct_0 **v197;  // [bp-0x15c]\n
    unsigned int v198;  // [bp-0x158]\n
    unsigned short v199;  // [bp-0x152]\n
    unsigned int *v200;  // [bp-0x150]\n
    struct struct_0 **v201;  // [bp-0x14c]\n
    unsigned int v202;  // [bp-0x148]\n
    unsigned short v203;  // [bp-0x142]\n
    unsigned int *v204;  // [bp-0x140]\n
    struct struct_0 **v205;  // [bp-0x13c]\n
    unsigned int v206;  // [bp-0x138]\n
    unsigned short v207;  // [bp-0x132]\n
    unsigned int *v208;  // [bp-0x130]\n
    struct struct_0 **v209;  // [bp-0x12c]\n
    char v210;  // [bp-0x128]\n
    struct_3 *v211;  // [bp-0x11c]\n
    unsigned int v212;  // [bp-0x118]\n
    unsigned int *v213;  // [bp-0x114]\n
    struct struct_0 **v214;  // [bp-0x110]\n
    char v215;  // [bp-0x10c]\n
    char v216[4];  // [bp-0x100]\n
    unsigned int v217;  // [bp-0xfc]\n
    unsigned int *v218;  // [bp-0xf8]\n
    struct struct_0 **v219;  // [bp-0xf4]\n
    char v220;  // [bp-0xf0]\n
    char v221[4];  // [bp-0xe4]\n
    unsigned int v222;  // [bp-0xe0]\n
    unsigned int *v223;  // [bp-0xdc]\n
    struct struct_0 **v224;  // [bp-0xd8]\n
    char v225;  // [bp-0xd4]\n
    char v226[4];  // [bp-0xc8]\n
    unsigned int v227;  // [bp-0xc4]\n
    unsigned int *v228;  // [bp-0xc0]\n
    struct struct_0 **v229;  // [bp-0xbc]\n
    char v230;  // [bp-0xb8]\n
    struct_3 *v231;  // [bp-0xac]\n
    unsigned int v232;  // [bp-0xa8]\n
    unsigned int *v233;  // [bp-0xa4]\n
    struct struct_0 **v234;  // [bp-0xa0]\n
    char *v235;  // [bp-0x9c]\n
    unsigned int v236;  // [bp-0x98]\n
    unsigned int *v237;  // [bp-0x94]\n
    struct struct_0 **v238;  // [bp-0x90]\n
    char *v239;  // [bp-0x8c]\n
    unsigned int v240;  // [bp-0x88]\n
    unsigned int *v241;  // [bp-0x84]\n
    struct struct_0 **v242;  // [bp-0x80]\n
    char *v243;  // [bp-0x7c]\n
    unsigned int v244;  // [bp-0x78]\n
    unsigned int *v245;  // [bp-0x74]\n
    struct struct_0 **v246;  // [bp-0x70]\n
    char v247;  // [bp-0x69]\n
    unsigned int v248;  // [bp-0x54]\n
    unsigned int v249;  // [bp-0x50]\n
    unsigned int *v250;  // [bp-0x4c]\n
    struct struct_0 **v251;  // [bp-0x48]\n
    char v252;  // [bp-0x41]\n
    unsigned int v253;  // [bp-0x2c]\n
    unsigned int v254;  // [bp-0x28]\n
    unsigned int *v255;  // [bp-0x20]\n
    struct struct_0 **v256;  // [bp-0x1c]\n
    unsigned int v257;  // [bp-0x18]\n
    char v258;  // [bp-0x11]\n
    unsigned int *v259;  // [bp-0x10]\n
    struct struct_0 **v260;  // [bp-0xc]\n
    unsigned int v261;  // [bp-0x8]\n
    unsigned int v263;  // ebx\n
    unsigned int *v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct_3 *v268;  // ecx\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    struct struct_0 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_0 **v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v305;  // eax\n
    struct struct_0 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax\n
    struct struct_0 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_0 **v312;  // eax\n
    unsigned int v313[2];  // ecx\n
    unsigned int *v314;  // eax\n
    struct struct_0 **v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_0 **v317;  // eax\n
    struct struct_0 **v318;  // eax\n
    unsigned int *v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    unsigned int *v322;  // eax\n
    struct struct_0 **v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_0 **v325;  // eax\n
    unsigned int *v326;  // eax\n
    struct struct_0 **v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_0 **v329;  // eax\n
    unsigned int *v330;  // eax\n
    struct struct_0 **v331;  // eax\n
    unsigned int *v332;  // eax\n
    struct struct_0 **v333;  // eax\n
    unsigned int *v334;  // eax\n
    struct struct_0 **v335;  // eax\n
    unsigned int *v336;  // eax\n
    struct struct_0 **v337;  // eax\n
    unsigned int *v338;  // eax\n
    struct struct_0 **v339;  // eax\n
    struct struct_0 **v340;  // eax\n
    unsigned int *v341;  // eax\n
    struct struct_0 **v343;  // eax\n
    unsigned int *v345;  // eax\n
    unsigned int *v346;  // eax\n
    struct struct_0 **v347;  // eax\n
    unsigned int *v348;  // eax\n
    struct struct_0 **v349;  // eax\n
    unsigned int *v350;  // eax\n
    struct struct_0 **v351;  // eax\n
    unsigned int *v352;  // eax\n
    struct struct_0 **v353;  // eax\n
    unsigned int *v354;  // eax\n
    struct struct_0 **v355;  // eax\n
    unsigned int *v356;  // eax\n
    struct struct_0 **v357;  // eax\n
    unsigned int *v358;  // eax\n
    struct struct_0 **v359;  // eax\n
    unsigned int *v360;  // eax\n
    struct struct_0 **v361;  // eax\n
    unsigned int *v362;  // eax\n
    struct struct_0 **v363;  // eax\n
    unsigned int *v364;  // eax\n
    struct struct_0 **v365;  // eax\n
    struct struct_0 **v366;  // eax\n
    unsigned int *v367;  // eax\n
    unsigned int *v368;  // eax\n
    struct struct_0 **v369;  // eax\n
    unsigned int *v370;  // eax\n
    struct struct_0 **v371;  // eax\n
    unsigned int *v372;  // eax\n
    struct struct_0 **v373;  // eax\n
    struct struct_0 **v375;  // eax\n
    unsigned int *v377;  // eax\n
    struct struct_0 **v379;  // eax\n
    unsigned int *v381;  // eax\n
    unsigned int *v382;  // eax\n
    struct struct_0 **v383;  // eax\n
    struct struct_0 **v385;  // eax\n
    unsigned int *v387;  // eax\n
    unsigned int *v388;  // eax\n
    struct struct_0 **v389;  // eax\n
    unsigned int *v390;  // eax\n
    struct struct_0 **v391;  // eax\n
    unsigned int *v392;  // eax\n
    struct struct_0 **v393;  // eax\n
    unsigned int *v394;  // eax\n
    struct struct_0 **v395;  // eax\n
    unsigned int *v396;  // eax, Other Possible Types: unsigned int\n
    unsigned int v397;  // ebx\n
\n
    v261 = v263;\n
    v44 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v58 = cgc__cookie;\n
    v57 = -1;\n
    if (cgc_sendline(1, \"===llamadecoke===\", 17) < 0)\n
        cgc__terminate();\n
    v260 = v262;\n
    v259 = a0;\n
    if (*(v259) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v258 = *(v260)->field_0;\n
    v264 = v259;\n
    *(v264) = *(v264) - 1;\n
    v265 = v260;\n
    *(v265) = &*(v265)->padding_1;\n
    if (v258 <= *(v259) && !(!v258))\n
        goto LABEL_46eedd;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46eedd:\n
    v257 = cgc_calloc(v258);\n
    if (!v257)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v257, *(v260), v258);\n
    if (cgc_sendline(1, &v44[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v266 = v260;\n
    *(v266) = &(&*(v266)->field_0)[v258];\n
    v267 = v259;\n
    *(v267) = *(v267) - v258;\n
    cgc_checkheap();\n
    cgc_free(v257);\n
    v256 = v262;\n
    v255 = a0;\n
    memset(&v252, 0, 21);\n
    if (*(v255) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v268 = *(v256);\n
    v254 = v268->field_4;\n
    v253 = *(&v268->field_0);\n
    cgc_uint2str(&v252, 21, v253);\n
    v43 = &v252;\n
    if (cgc_sendline(1, v43, cgc_strlen(&v252)) < 0)\n
        cgc__terminate();\n
    v269 = v255;\n
    *(v269) = *(v269) - 8;\n
    v270 = v256;\n
    *(v270) = &(*(v270))[1].padding_1[2];\n
    v234 = v262;\n
    v233 = a0;\n
    v231 = &*(v234);\n
    memset(&v230, 0, 12);\n
    if (*(v233) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v42 = 0;\n
    if (v231->field_0 << 24)\n
    {\n
        v42 = 0;\n
        if (v231->padding_1[0] << 16)\n
        {\n
            v42 = 0;\n
            if (v231->padding_1[1] << 8)\n
                v42 = v231->padding_1[2];\n
        }\n
    }\n
    v232 = v42 & 1;\n
    cgc_uint2str(&v230, 12, v232);\n
    v41 = &v230;\n
    if (cgc_sendline(1, v41, cgc_strlen(&v230)) < 0)\n
        cgc__terminate();\n
    v271 = v233;\n
    *(v271) = *(v271) - 4;\n
    v272 = v234;\n
    *(v272) = &*(v272)->field_4;\n
    v229 = v262;\n
    v228 = a0;\n
    *(&v226[0]) = *(v229);\n
    memset(&v225, 0, 12);\n
    if (*(v228) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = 0;\n
    if (v226[0] << 24)\n
    {\n
        v40 = 0;\n
        if (v226[1] << 16)\n
        {\n
            v40 = 0;\n
            if (v226[2] << 8)\n
                v40 = v226[3];\n
        }\n
    }\n
    v227 = v40 & 1;\n
    cgc_uint2str(&v225, 12, v227);\n
    v39 = &v225;\n
    if (cgc_sendline(1, v39, cgc_strlen(&v225)) < 0)\n
        cgc__terminate();\n
    v273 = v228;\n
    *(v273) = *(v273) - 4;\n
    v274 = v229;\n
    *(v274) = &*(v274)->field_4;\n
    v125 = v262;\n
    v124 = a0;\n
    if (*(v124) <= 0)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v124) >= 128)\n
        v38 = 128;\n
    else\n
        v38 = *(v124);\n
    v123 = v38;\n
    if (!v123)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = cgc_calloc(134);\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v122, &v44[18].padding_0[182]);\n
    cgc_strncpy(v122 + 5, *(v125), v123);\n
    v276 = v125;\n
    *(v276) = &(&*(v276)->field_4)[cgc_strlen(v122)];\n
    v278 = v124;\n
    *(v278) = *(v278) - (cgc_strlen(v122) + -4);\n
    cgc_checkheap();\n
    cgc_free(v122);\n
    if (cgc_sendline(1, &v44[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v173 = v262;\n
    v172 = a0;\n
    memset(&v170, 0, 12);\n
    if (*(v172) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v171 = *(&*(v173)->field_0);\n
    cgc_uint2str(&v170, 12, v171);\n
    v37 = &v170;\n
    if (cgc_sendline(1, v37, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v279 = v172;\n
    *(v279) = *(v279) - 4;\n
    v280 = v173;\n
    *(v280) = &*(v280)->field_4;\n
    v246 = v262;\n
    v245 = a0;\n
    if (*(v245) <= 0)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v245) >= 128)\n
        v36 = 128;\n
    else\n
        v36 = *(v245);\n
    v244 = v36;\n
    if (!v244)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v243 = cgc_calloc(134);\n
    if (!v243)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v243, &v44[18].padding_0[182]);\n
    cgc_strncpy(v243 + 5, *(v246), v244);\n
    v282 = v246;\n
    *(v282) = &(&*(v282)->field_4)[cgc_strlen(v243)];\n
    v284 = v245;\n
    *(v284) = *(v284) - (cgc_strlen(v243) + -4);\n
    cgc_checkheap();\n
    cgc_free(v243);\n
    if (cgc_sendline(1, &v44[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v69 = v262;\n
    v68 = a0;\n
    v66 = &*(v69);\n
    memset(&v65, 0, 6);\n
    if (*(v68) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = 0;\n
    if (v66->field_0 << 8)\n
        v35 = v66->padding_1[0];\n
    v67 = v35 & 1;\n
    cgc_uint2str(&v65, 6, v67);\n
    v34 = &v65;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v285 = v68;\n
    *(v285) = *(v285) - 2;\n
    v286 = v69;\n
    *(v286) = &*(v286)->padding_1[1];\n
    v113 = v262;\n
    v112 = a0;\n
    if (*(v112) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = *(v113)->field_0;\n
    v287 = v112;\n
    *(v287) = *(v287) - 1;\n
    v288 = v113;\n
    *(v288) = &*(v288)->padding_1;\n
    if (v111 <= *(v112) && !(!v111))\n
        goto LABEL_46fd31;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_46fd31:\n
    v110 = cgc_calloc(v111);\n
    if (!v110)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v110, *(v113), v111);\n
    if (cgc_sendline(1, &v44[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v289 = v113;\n
    *(v289) = &(&*(v289)->field_0)[v111];\n
    v290 = v112;\n
    *(v290) = *(v290) - v111;\n
    cgc_checkheap();\n
    cgc_free(v110);\n
    v145 = v262;\n
    v144 = a0;\n
    memset(&v142, 0, 4);\n
    if (*(v144) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(v145)->field_0;\n
    cgc_uint2str(&v142, 4, v143);\n
    v33 = &v142;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v291 = v144;\n
    *(v291) = *(v291) - 1;\n
    v292 = v145;\n
    *(v292) = &*(v292)->padding_1;\n
    v93 = v262;\n
    v92 = a0;\n
    *(&v89[0]) = *(v93);\n
    memset(&v88, 0, 21);\n
    if (*(v92) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v89[0])\n
    {\n
        v32 = 0;\n
        if (v89[1])\n
        {\n
            v32 = 0;\n
            if (v89[2])\n
            {\n
                v32 = 0;\n
                if (v89[3])\n
                {\n
                    v32 = 0;\n
                    if (v89[4] << 24)\n
                    {\n
                        v32 = 0;\n
                        if (v89[5] << 16)\n
                        {\n
                            v32 = 0;\n
                            if (v89[6] << 8)\n
                                v32 = v89[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v90 = v32 & 1;\n
    v91 = 0;\n
    cgc_uint2str(&v88, 21, v90);\n
    v31 = &v88;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v88)) < 0)\n
        cgc__terminate();\n
    v293 = v92;\n
    *(v293) = *(v293) - 8;\n
    v294 = v93;\n
    *(v294) = &(*(v294))[1].padding_1[2];\n
    v109 = v262;\n
    v108 = a0;\n
    if (*(v108) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(v109)->field_0;\n
    v295 = v108;\n
    *(v295) = *(v295) - 1;\n
    v296 = v109;\n
    *(v296) = &*(v296)->padding_1;\n
    if (v107 <= *(v108) && !(!v107))\n
        goto LABEL_4702f5;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4702f5:\n
    v106 = cgc_calloc(v107);\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v106, *(v109), v107);\n
    if (cgc_sendline(1, &v44[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v297 = v109;\n
    *(v297) = &(&*(v297)->field_0)[v107];\n
    v298 = v108;\n
    *(v298) = *(v298) - v107;\n
    cgc_checkheap();\n
    cgc_free(v106);\n
    v141 = v262;\n
    v140 = a0;\n
    memset(&v138, 0, 4);\n
    if (*(v140) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(v141)->field_0;\n
    cgc_uint2str(&v138, 4, v139);\n
    v30 = &v138;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v299 = v140;\n
    *(v299) = *(v299) - 1;\n
    v300 = v141;\n
    *(v300) = &*(v300)->padding_1;\n
    v197 = v262;\n
    v196 = a0;\n
    if (*(v196) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v195 = *(&*(v197)->field_0);\n
    v301 = v196;\n
    *(v301) = *(v301) - 2;\n
    v302 = v197;\n
    *(v302) = &*(v302)->padding_1[1];\n
    if (v195 <= *(v196) && !(!v195))\n
        goto LABEL_470673;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_470673:\n
    v194 = cgc_calloc(v195);\n
    if (!v194)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v194, *(v197), v195);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v303 = v196;\n
    *(v303) = *(v303) - v195;\n
    v304 = v197;\n
    *(v304) = &(&*(v304)->field_0)[v195];\n
    cgc_checkheap();\n
    cgc_free(v194);\n
    v64 = v262;\n
    v63 = a0;\n
    *(&v61) = *(v64);\n
    memset(&v60, 0, 6);\n
    if (*(v63) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = 0;\n
    if (v61[0] << 8)\n
        v29 = v61[1];\n
    v62 = v29 & 1;\n
    cgc_uint2str(&v60, 6, v62);\n
    v28 = &v60;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v305 = v63;\n
    *(v305) = *(v305) - 2;\n
    v306 = v64;\n
    *(v306) = &*(v306)->padding_1[1];\n
    v224 = v262;\n
    v223 = a0;\n
    *(&v221[0]) = *(v224);\n
    memset(&v220, 0, 12);\n
    if (*(v223) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v221[0] << 24)\n
    {\n
        v27 = 0;\n
        if (v221[1] << 16)\n
        {\n
            v27 = 0;\n
            if (v221[2] << 8)\n
                v27 = v221[3];\n
        }\n
    }\n
    v222 = v27 & 1;\n
    cgc_uint2str(&v220, 12, v222);\n
    v26 = &v220;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v220)) < 0)\n
        cgc__terminate();\n
    v307 = v223;\n
    *(v307) = *(v307) - 4;\n
    v308 = v224;\n
    *(v308) = &*(v308)->field_4;\n
    v87 = v262;\n
    v86 = a0;\n
    *(&v83[0]) = *(v87);\n
    memset(&v82, 0, 21);\n
    if (*(v86) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v83[0])\n
    {\n
        v25 = 0;\n
        if (v83[1])\n
        {\n
            v25 = 0;\n
            if (v83[2])\n
            {\n
                v25 = 0;\n
                if (v83[3])\n
                {\n
                    v25 = 0;\n
                    if (v83[4] << 24)\n
                    {\n
                        v25 = 0;\n
                        if (v83[5] << 16)\n
                        {\n
                            v25 = 0;\n
                            if (v83[6] << 8)\n
                                v25 = v83[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v84 = v25 & 1;\n
    v85 = 0;\n
    cgc_uint2str(&v82, 21, v84);\n
    v24 = &v82;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v309 = v86;\n
    *(v309) = *(v309) - 8;\n
    v310 = v87;\n
    *(v310) = &(*(v310))[1].padding_1[2];\n
    v181 = v262;\n
    v180 = a0;\n
    memset(&v178, 0, 12);\n
    if (*(v180) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v179 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v52 = [D] x86g_create_fpucw(fpround<4>);\n
    v51 = v52 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v178, 12, v56);\n
    v23 = &v178;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v178)) < 0)\n
        cgc__terminate();\n
    v311 = v180;\n
    *(v311) = *(v311) - 4;\n
    v312 = v181;\n
    *(v312) = &*(v312)->field_4;\n
    v251 = v262;\n
    v250 = a0;\n
    memset(&v247, 0, 21);\n
    if (*(v250) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v313 = *(v251);\n
    v249 = v313[1];\n
    v248 = v313[0];\n
    cgc_uint2str(&v247, 21, v248);\n
    v22 = &v247;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v247)) < 0)\n
        cgc__terminate();\n
    v314 = v250;\n
    *(v314) = *(v314) - 8;\n
    v315 = v251;\n
    *(v315) = &(*(v315))[1].padding_1[2];\n
    v105 = v262;\n
    v104 = a0;\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(v105)->field_0;\n
    v316 = v104;\n
    *(v316) = *(v316) - 1;\n
    v317 = v105;\n
    *(v317) = &*(v317)->padding_1;\n
    if (v103 <= *(v104) && !(!v103))\n
        goto LABEL_4710d4;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4710d4:\n
    v102 = cgc_calloc(v103);\n
    if (!v102)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v102, *(v105), v103);\n
    if (cgc_sendline(1, &v44[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v318 = v105;\n
    *(v318) = &(&*(v318)->field_0)[v103];\n
    v319 = v104;\n
    *(v319) = *(v319) - v103;\n
    cgc_checkheap();\n
    cgc_free(v102);\n
    v219 = v262;\n
    v218 = a0;\n
    *(&v216[0]) = *(v219);\n
    memset(&v215, 0, 12);\n
    if (*(v218) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = 0;\n
    if (v216[0] << 24)\n
    {\n
        v21 = 0;\n
        if (v216[1] << 16)\n
        {\n
            v21 = 0;\n
            if (v216[2] << 8)\n
                v21 = v216[3];\n
        }\n
    }\n
    v217 = v21 & 1;\n
    cgc_uint2str(&v215, 12, v217);\n
    v20 = &v215;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v215)) < 0)\n
        cgc__terminate();\n
    v320 = v218;\n
    *(v320) = *(v320) - 4;\n
    v321 = v219;\n
    *(v321) = &*(v321)->field_4;\n
    v81 = v262;\n
    v80 = a0;\n
    *(&v77[0]) = *(v81);\n
    memset(&v76, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v77[0])\n
    {\n
        v19 = 0;\n
        if (v77[1])\n
        {\n
            v19 = 0;\n
            if (v77[2])\n
            {\n
                v19 = 0;\n
                if (v77[3])\n
                {\n
                    v19 = 0;\n
                    if (v77[4] << 24)\n
                    {\n
                        v19 = 0;\n
                        if (v77[5] << 16)\n
                        {\n
                            v19 = 0;\n
                            if (v77[6] << 8)\n
                                v19 = v77[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v78 = v19 & 1;\n
    v79 = 0;\n
    cgc_uint2str(&v76, 21, v78);\n
    v18 = &v76;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v322 = v80;\n
    *(v322) = *(v322) - 8;\n
    v323 = v81;\n
    *(v323) = &(*(v323))[1].padding_1[2];\n
    v153 = v262;\n
    v152 = a0;\n
    memset(&v150, 0, 21);\n
    if (*(v152) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v151 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v50 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1150, size=2, endness=Iend_LE)))));\n
    v49 = v50 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v150, 21, v55);\n
    v17 = &v150;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v324 = v152;\n
    *(v324) = *(v324) - 8;\n
    v325 = v153;\n
    *(v325) = &(*(v325))[1].padding_1[2];\n
    v133 = v262;\n
    v132 = a0;\n
    memset(&v130, 0, 6);\n
    if (*(v132) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(&*(v133)->field_0);\n
    cgc_uint2str(&v130, 6, v131);\n
    v16 = &v130;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v326 = v132;\n
    *(v326) = *(v326) - 2;\n
    v327 = v133;\n
    *(v327) = &*(v327)->padding_1[1];\n
    v169 = v262;\n
    v168 = a0;\n
    memset(&v166, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v167 = *(&*(v169)->field_0);\n
    cgc_uint2str(&v166, 12, v167);\n
    v15 = &v166;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v166)) < 0)\n
        cgc__terminate();\n
    v328 = v168;\n
    *(v328) = *(v328) - 4;\n
    v329 = v169;\n
    *(v329) = &*(v329)->field_4;\n
    v209 = v262;\n
    v208 = a0;\n
    if (*(v208) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v207 = *(&*(v209)->field_0);\n
    v330 = v208;\n
    *(v330) = *(v330) - 2;\n
    v331 = v209;\n
    *(v331) = &*(v331)->padding_1[1];\n
    if (v207 <= *(v208) && !(!v207))\n
        goto LABEL_471b14;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_471b14:\n
    v206 = cgc_calloc(v207);\n
    if (!v206)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v206, *(v209), v207);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v332 = v208;\n
    *(v332) = *(v332) - v207;\n
    v333 = v209;\n
    *(v333) = &(&*(v333)->field_0)[v207];\n
    cgc_checkheap();\n
    cgc_free(v206);\n
    v165 = v262;\n
    v164 = a0;\n
    memset(&v162, 0, 12);\n
    if (*(v164) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = *(&*(v165)->field_0);\n
    cgc_uint2str(&v162, 12, v163);\n
    v14 = &v162;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v162)) < 0)\n
        cgc__terminate();\n
    v334 = v164;\n
    *(v334) = *(v334) - 4;\n
    v335 = v165;\n
    *(v335) = &*(v335)->field_4;\n
    v149 = v262;\n
    v148 = a0;\n
    memset(&v146, 0, 21);\n
    if (*(v148) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v147 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1154, size=2, endness=Iend_LE)))));\n
    v47 = v48 | 0xc00;\n
    v54 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v146, 21, v54);\n
    v13 = &v146;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v336 = v148;\n
    *(v336) = *(v336) - 8;\n
    v337 = v149;\n
    *(v337) = &(*(v337))[1].padding_1[2];\n
    v101 = v262;\n
    v100 = a0;\n
    if (*(v100) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(v101)->field_0;\n
    v338 = v100;\n
    *(v338) = *(v338) - 1;\n
    v339 = v101;\n
    *(v339) = &*(v339)->padding_1;\n
    if (v99 <= *(v100) && !(!v99))\n
        goto LABEL_472003;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_472003:\n
    v98 = cgc_calloc(v99);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v98, *(v101), v99);\n
    if (cgc_sendline(1, &v44[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v340 = v101;\n
    *(v340) = &(&*(v340)->field_0)[v99];\n
    v341 = v100;\n
    *(v341) = *(v341) - v99;\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    v242 = v262;\n
    v241 = a0;\n
    if (*(v241) <= 0)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v241) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v241);\n
    v240 = v12;\n
    if (!v240)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v239 = cgc_calloc(134);\n
    if (!v239)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v239, &v44[18].padding_0[182]);\n
    cgc_strncpy(v239 + 5, *(v242), v240);\n
    v343 = v242;\n
    *(v343) = &(&*(v343)->field_4)[cgc_strlen(v239)];\n
    v345 = v241;\n
    *(v345) = *(v345) - (cgc_strlen(v239) + -4);\n
    cgc_checkheap();\n
    cgc_free(v239);\n
    if (cgc_sendline(1, &v44[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v205 = v262;\n
    v204 = a0;\n
    if (*(v204) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v203 = *(&*(v205)->field_0);\n
    v346 = v204;\n
    *(v346) = *(v346) - 2;\n
    v347 = v205;\n
    *(v347) = &*(v347)->padding_1[1];\n
    if (v203 <= *(v204) && !(!v203))\n
        goto LABEL_4724a6;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4724a6:\n
    v202 = cgc_calloc(v203);\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v202, *(v205), v203);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v348 = v204;\n
    *(v348) = *(v348) - v203;\n
    v349 = v205;\n
    *(v349) = &(&*(v349)->field_0)[v203];\n
    cgc_checkheap();\n
    cgc_free(v202);\n
    v193 = v262;\n
    v192 = a0;\n
    if (*(v192) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v191 = *(&*(v193)->field_0);\n
    v350 = v192;\n
    *(v350) = *(v350) - 2;\n
    v351 = v193;\n
    *(v351) = &*(v351)->padding_1[1];\n
    if (v191 <= *(v192) && !(!v191))\n
        goto LABEL_4726e0;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4726e0:\n
    v190 = cgc_calloc(v191);\n
    if (!v190)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v190, *(v193), v191);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v352 = v192;\n
    *(v352) = *(v352) - v191;\n
    v353 = v193;\n
    *(v353) = &(&*(v353)->field_0)[v191];\n
    cgc_checkheap();\n
    cgc_free(v190);\n
    v129 = v262;\n
    v128 = a0;\n
    memset(&v126, 0, 6);\n
    if (*(v128) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(&*(v129)->field_0);\n
    cgc_uint2str(&v126, 6, v127);\n
    v11 = &v126;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v354 = v128;\n
    *(v354) = *(v354) - 2;\n
    v355 = v129;\n
    *(v355) = &*(v355)->padding_1[1];\n
    v177 = v262;\n
    v176 = a0;\n
    memset(&v174, 0, 12);\n
    if (*(v176) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v175 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1158, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v53 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v174, 12, v53);\n
    v10 = &v174;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v174)) < 0)\n
        cgc__terminate();\n
    v356 = v176;\n
    *(v356) = *(v356) - 4;\n
    v357 = v177;\n
    *(v357) = &*(v357)->field_4;\n
    v214 = v262;\n
    v213 = a0;\n
    v211 = &*(v214);\n
    memset(&v210, 0, 12);\n
    if (*(v213) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v211->field_0 << 24)\n
    {\n
        v9 = 0;\n
        if (v211->padding_1[0] << 16)\n
        {\n
            v9 = 0;\n
            if (v211->padding_1[1] << 8)\n
                v9 = v211->padding_1[2];\n
        }\n
    }\n
    v212 = v9 & 1;\n
    cgc_uint2str(&v210, 12, v212);\n
    v8 = &v210;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v210)) < 0)\n
        cgc__terminate();\n
    v358 = v213;\n
    *(v358) = *(v358) - 4;\n
    v359 = v214;\n
    *(v359) = &*(v359)->field_4;\n
    v75 = v262;\n
    v74 = a0;\n
    *(&v71[0]) = *(v75);\n
    memset(&v70, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v71[0])\n
    {\n
        v7 = 0;\n
        if (v71[1])\n
        {\n
            v7 = 0;\n
            if (v71[2])\n
            {\n
                v7 = 0;\n
                if (v71[3])\n
                {\n
                    v7 = 0;\n
                    if (v71[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v71[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v71[6] << 8)\n
                                v7 = v71[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v72 = v7 & 1;\n
    v73 = 0;\n
    cgc_uint2str(&v70, 21, v72);\n
    v6 = &v70;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v360 = v74;\n
    *(v360) = *(v360) - 8;\n
    v361 = v75;\n
    *(v361) = &(*(v361))[1].padding_1[2];\n
    v161 = v262;\n
    v160 = a0;\n
    memset(&v158, 0, 12);\n
    if (*(v160) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v159 = *(&*(v161)->field_0);\n
    cgc_uint2str(&v158, 12, v159);\n
    v5 = &v158;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v158)) < 0)\n
        cgc__terminate();\n
    v362 = v160;\n
    *(v362) = *(v362) - 4;\n
    v363 = v161;\n
    *(v363) = &*(v363)->field_4;\n
    v97 = v262;\n
    v96 = a0;\n
    if (*(v96) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(v97)->field_0;\n
    v364 = v96;\n
    *(v364) = *(v364) - 1;\n
    v365 = v97;\n
    *(v365) = &*(v365)->padding_1;\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_47311e;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47311e:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, &v44[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v366 = v97;\n
    *(v366) = &(&*(v366)->field_0)[v95];\n
    v367 = v96;\n
    *(v367) = *(v367) - v95;\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v189 = v262;\n
    v188 = a0;\n
    if (*(v188) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v187 = *(&*(v189)->field_0);\n
    v368 = v188;\n
    *(v368) = *(v368) - 2;\n
    v369 = v189;\n
    *(v369) = &*(v369)->padding_1[1];\n
    if (v187 <= *(v188) && !(!v187))\n
        goto LABEL_473358;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_473358:\n
    v186 = cgc_calloc(v187);\n
    if (!v186)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v186, *(v189), v187);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v370 = v188;\n
    *(v370) = *(v370) - v187;\n
    v371 = v189;\n
    *(v371) = &(&*(v371)->field_0)[v187];\n
    cgc_checkheap();\n
    cgc_free(v186);\n
    v137 = v262;\n
    v136 = a0;\n
    memset(&v134, 0, 4);\n
    if (*(v136) < 1)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(v137)->field_0;\n
    cgc_uint2str(&v134, 4, v135);\n
    v4 = &v134;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v372 = v136;\n
    *(v372) = *(v372) - 1;\n
    v373 = v137;\n
    *(v373) = &*(v373)->padding_1;\n
    v238 = v262;\n
    v237 = a0;\n
    if (*(v237) <= 0)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v237) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v237);\n
    v236 = v3;\n
    if (!v236)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v235 = cgc_calloc(134);\n
    if (!v235)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v235, &v44[18].padding_0[182]);\n
    cgc_strncpy(v235 + 5, *(v238), v236);\n
    v375 = v238;\n
    *(v375) = &(&*(v375)->field_4)[cgc_strlen(v235)];\n
    v377 = v237;\n
    *(v377) = *(v377) - (cgc_strlen(v235) + -4);\n
    cgc_checkheap();\n
    cgc_free(v235);\n
    if (cgc_sendline(1, &v44[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v121 = v262;\n
    v120 = a0;\n
    if (*(v120) <= 0)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v120) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v120);\n
    v119 = v2;\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = cgc_calloc(134);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v118, &v44[18].padding_0[182]);\n
    cgc_strncpy(v118 + 5, *(v121), v119);\n
    v379 = v121;\n
    *(v379) = &(&*(v379)->field_4)[cgc_strlen(v118)];\n
    v381 = v120;\n
    *(v381) = *(v381) - (cgc_strlen(v118) + -4);\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    if (cgc_sendline(1, &v44[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v157 = v262;\n
    v156 = a0;\n
    memset(&v154, 0, 12);\n
    if (*(v156) < 4)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v155 = *(&*(v157)->field_0);\n
    cgc_uint2str(&v154, 12, v155);\n
    v1 = &v154;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v154)) < 0)\n
        cgc__terminate();\n
    v382 = v156;\n
    *(v382) = *(v382) - 4;\n
    v383 = v157;\n
    *(v383) = &*(v383)->field_4;\n
    v117 = v262;\n
    v116 = a0;\n
    if (*(v116) <= 0)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v116) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v116);\n
    v115 = v0;\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = cgc_calloc(134);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v114, &v44[18].padding_0[182]);\n
    cgc_strncpy(v114 + 5, *(v117), v115);\n
    v385 = v117;\n
    *(v385) = &(&*(v385)->field_4)[cgc_strlen(v114)];\n
    v387 = v116;\n
    *(v387) = *(v387) - (cgc_strlen(v114) + -4);\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    if (cgc_sendline(1, &v44[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v185 = v262;\n
    v184 = a0;\n
    if (*(v184) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v183 = *(&*(v185)->field_0);\n
    v388 = v184;\n
    *(v388) = *(v388) - 2;\n
    v389 = v185;\n
    *(v389) = &*(v389)->padding_1[1];\n
    if (v183 <= *(v184) && !(!v183))\n
        goto LABEL_473f9c;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_473f9c:\n
    v182 = cgc_calloc(v183);\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v182, *(v185), v183);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v390 = v184;\n
    *(v390) = *(v390) - v183;\n
    v391 = v185;\n
    *(v391) = &(&*(v391)->field_0)[v183];\n
    cgc_checkheap();\n
    cgc_free(v182);\n
    v201 = v262;\n
    v200 = a0;\n
    if (*(v200) < 2)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v199 = *(&*(v201)->field_0);\n
    v392 = v200;\n
    *(v392) = *(v392) - 2;\n
    v393 = v201;\n
    *(v393) = &*(v393)->padding_1[1];\n
    if (v199 <= *(v200) && !(!v199))\n
        goto LABEL_4741d6;\n
    if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4741d6:\n
    v198 = cgc_calloc(v199);\n
    if (!v198)\n
    {\n
        if (cgc_sendline(1, &v44[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v198, *(v201), v199);\n
    if (cgc_sendline(1, &v44[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v394 = v200;\n
    *(v394) = *(v394) - v199;\n
    v395 = v201;\n
    *(v395) = &(&*(v395)->field_0)[v199];\n
    cgc_checkheap();\n
    cgc_free(v198);\n
    v58 ^= v44->field_260;\n
    if (v58)\n
        cgc___stack_cookie_fail();\n
    v396 = a0;\n
    if (*(v396) > 0 && v57 >= 0 && v57 < 0)\n
        v396 = *((&v59 + 0x4 * v57))(v262);\n
    v397 = v261;\n
    return v396;\n
}\n
", "4670331:sub_47437b": null, "4670336:cgc_process_llamadigredience": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadigredience(struct struct_0 **v223, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x458]\n
    struct_1 *v1;  // [bp-0x454]\n
    struct_1 *v2;  // [bp-0x450]\n
    char v3;  // [bp-0x449]\n
    unsigned int v4;  // [bp-0x448]\n
    struct_1 *v5;  // [bp-0x444]\n
    struct_1 *v6;  // [bp-0x440]\n
    struct_1 *v7;  // [bp-0x43c]\n
    struct_1 *v8;  // [bp-0x438]\n
    struct_1 *v9;  // [bp-0x434]\n
    char v10;  // [bp-0x42d]\n
    struct_1 *v11;  // [bp-0x42c]\n
    struct_1 *v12;  // [bp-0x428]\n
    char v13;  // [bp-0x421]\n
    struct_1 *v14;  // [bp-0x420]\n
    struct_1 *v15;  // [bp-0x41c]\n
    unsigned int v16;  // [bp-0x418]\n
    struct_1 *v17;  // [bp-0x414]\n
    struct_1 *v18;  // [bp-0x410]\n
    struct_1 *v19;  // [bp-0x40c]\n
    char v20;  // [bp-0x405]\n
    unsigned int v21;  // [bp-0x404]\n
    struct_1 *v22;  // [bp-0x400]\n
    struct_1 *v23;  // [bp-0x3fc]\n
    struct_1 *v24;  // [bp-0x3f8]\n
    char v25;  // [bp-0x3f1]\n
    struct_1 *v26;  // [bp-0x3f0]\n
    char v27;  // [bp-0x3e9]\n
    struct_1 *v28;  // [bp-0x3e8]\n
    char v29;  // [bp-0x3e1]\n
    struct_1 *v30;  // [bp-0x3e0]\n
    char v31;  // [bp-0x3d9]\n
    unsigned int v32;  // [bp-0x3d8]\n
    struct_1 *v33;  // [bp-0x3d4]\n
    unsigned int v34;  // [bp-0x3d0]\n
    struct_1 *v35;  // [bp-0x3cc]\n
    struct_1 *v36;  // [bp-0x3c8]\n
    unsigned int v37;  // [bp-0x3c4]\n
    struct_3 *v38;  // [bp-0x3c0]\n
    unsigned short v39;  // [bp-0x3bc]\n
    unsigned short v40;  // [bp-0x3ba]\n
    unsigned short v41;  // [bp-0x3b8]\n
    unsigned short v42;  // [bp-0x3b6]\n
    unsigned short v43;  // [bp-0x3b4]\n
    unsigned short v44;  // [bp-0x3b2]\n
    unsigned short v45;  // [bp-0x3b0]\n
    unsigned short v46;  // [bp-0x3ae]\n
    unsigned long v47;  // [bp-0x3ac]\n
    unsigned long v48;  // [bp-0x3a4]\n
    unsigned long v49;  // [bp-0x39c]\n
    unsigned long v50;  // [bp-0x394]\n
    struct struct_2 **v51;  // [bp-0x388]\n
    unsigned int v52;  // [bp-0x384]\n
    char v53;  // [bp-0x380]\n
    char v54;  // [bp-0x37e]\n
    char v55[2];  // [bp-0x378]\n
    unsigned short v56;  // [bp-0x372]\n
    unsigned int *v57;  // [bp-0x370]\n
    struct struct_0 **v58;  // [bp-0x36c]\n
    char v59;  // [bp-0x366]\n
    char v60[8];  // [bp-0x360]\n
    unsigned short v61;  // [bp-0x35a]\n
    unsigned int *v62;  // [bp-0x358]\n
    struct struct_0 **v63;  // [bp-0x354]\n
    char v64;  // [bp-0x34e]\n
    char v65[2];  // [bp-0x348]\n
    unsigned short v66;  // [bp-0x342]\n
    unsigned int *v67;  // [bp-0x340]\n
    struct struct_0 **v68;  // [bp-0x33c]\n
    char v69;  // [bp-0x335]\n
    char v70[8];  // [bp-0x320]\n
    unsigned int v71;  // [bp-0x31c]\n
    void* v72;  // [bp-0x318]\n
    unsigned int *v73;  // [bp-0x310]\n
    struct struct_0 **v74;  // [bp-0x30c]\n
    char v75;  // [bp-0x305]\n
    char v76[8];  // [bp-0x2f0]\n
    unsigned int v77;  // [bp-0x2ec]\n
    void* v78;  // [bp-0x2e8]\n
    unsigned int *v79;  // [bp-0x2e0]\n
    struct struct_0 **v80;  // [bp-0x2dc]\n
    char v81;  // [bp-0x2d5]\n
    char v82[8];  // [bp-0x2c0]\n
    unsigned int v83;  // [bp-0x2bc]\n
    void* v84;  // [bp-0x2b8]\n
    unsigned int *v85;  // [bp-0x2b4]\n
    struct struct_0 **v86;  // [bp-0x2b0]\n
    unsigned int v87;  // [bp-0x2ac]\n
    char v88;  // [bp-0x2a5]\n
    unsigned int *v89;  // [bp-0x2a4]\n
    struct struct_0 **v90;  // [bp-0x2a0]\n
    unsigned int v91;  // [bp-0x29c]\n
    char v92;  // [bp-0x295]\n
    unsigned int *v93;  // [bp-0x294]\n
    struct struct_0 **v94;  // [bp-0x290]\n
    unsigned int v95;  // [bp-0x28c]\n
    char v96;  // [bp-0x285]\n
    unsigned int *v97;  // [bp-0x284]\n
    struct struct_0 **v98;  // [bp-0x280]\n
    char *v99;  // [bp-0x27c]\n
    unsigned int v100;  // [bp-0x278]\n
    unsigned int *v101;  // [bp-0x274]\n
    struct struct_0 **v102;  // [bp-0x270]\n
    char *v103;  // [bp-0x26c]\n
    unsigned int v104;  // [bp-0x268]\n
    unsigned int *v105;  // [bp-0x264]\n
    struct struct_0 **v106;  // [bp-0x260]\n
    char *v107;  // [bp-0x25c]\n
    unsigned int v108;  // [bp-0x258]\n
    unsigned int *v109;  // [bp-0x254]\n
    struct struct_0 **v110;  // [bp-0x250]\n
    char v111;  // [bp-0x24c]\n
    unsigned short v112;  // [bp-0x246]\n
    unsigned int *v113;  // [bp-0x244]\n
    struct struct_0 **v114;  // [bp-0x240]\n
    char v115;  // [bp-0x23c]\n
    unsigned short v116;  // [bp-0x236]\n
    unsigned int *v117;  // [bp-0x234]\n
    struct struct_0 **v118;  // [bp-0x230]\n
    char v119;  // [bp-0x22c]\n
    unsigned short v120;  // [bp-0x226]\n
    unsigned int *v121;  // [bp-0x224]\n
    struct struct_0 **v122;  // [bp-0x220]\n
    char v123;  // [bp-0x21c]\n
    unsigned short v124;  // [bp-0x216]\n
    unsigned int *v125;  // [bp-0x214]\n
    struct struct_0 **v126;  // [bp-0x210]\n
    char v127;  // [bp-0x209]\n
    char v128;  // [bp-0x205]\n
    unsigned int *v129;  // [bp-0x204]\n
    struct struct_0 **v130;  // [bp-0x200]\n
    char v131;  // [bp-0x1f9]\n
    char v132;  // [bp-0x1f5]\n
    unsigned int *v133;  // [bp-0x1f4]\n
    struct struct_0 **v134;  // [bp-0x1f0]\n
    char v135;  // [bp-0x1e9]\n
    char v136;  // [bp-0x1e5]\n
    unsigned int *v137;  // [bp-0x1e4]\n
    struct struct_0 **v138;  // [bp-0x1e0]\n
    char v139;  // [bp-0x1d9]\n
    char v140;  // [bp-0x1d5]\n
    unsigned int *v141;  // [bp-0x1d4]\n
    struct struct_0 **v142;  // [bp-0x1d0]\n
    char v143;  // [bp-0x1c9]\n
    char v144;  // [bp-0x1c5]\n
    unsigned int *v145;  // [bp-0x1c4]\n
    struct struct_0 **v146;  // [bp-0x1c0]\n
    char v147;  // [bp-0x1b9]\n
    unsigned long v148;  // [bp-0x1a4]\n
    unsigned int *v149;  // [bp-0x19c]\n
    struct struct_0 **v150;  // [bp-0x198]\n
    char v151;  // [bp-0x191]\n
    unsigned long v152;  // [bp-0x17c]\n
    unsigned int *v153;  // [bp-0x174]\n
    struct struct_0 **v154;  // [bp-0x170]\n
    char v155;  // [bp-0x169]\n
    unsigned long v156;  // [bp-0x154]\n
    unsigned int *v157;  // [bp-0x14c]\n
    struct struct_0 **v158;  // [bp-0x148]\n
    char v159;  // [bp-0x144]\n
    unsigned int v160;  // [bp-0x138]\n
    unsigned int *v161;  // [bp-0x134]\n
    struct struct_0 **v162;  // [bp-0x130]\n
    char v163;  // [bp-0x12c]\n
    unsigned int v164;  // [bp-0x120]\n
    unsigned int *v165;  // [bp-0x11c]\n
    struct struct_0 **v166;  // [bp-0x118]\n
    char v167;  // [bp-0x114]\n
    unsigned int v168;  // [bp-0x108]\n
    unsigned int *v169;  // [bp-0x104]\n
    struct struct_0 **v170;  // [bp-0x100]\n
    unsigned int v171;  // [bp-0xfc]\n
    unsigned short v172;  // [bp-0xf6]\n
    unsigned int *v173;  // [bp-0xf4]\n
    struct struct_0 **v174;  // [bp-0xf0]\n
    unsigned int v175;  // [bp-0xec]\n
    unsigned short v176;  // [bp-0xe6]\n
    unsigned int *v177;  // [bp-0xe4]\n
    struct struct_0 **v178;  // [bp-0xe0]\n
    unsigned int v179;  // [bp-0xdc]\n
    unsigned short v180;  // [bp-0xd6]\n
    unsigned int *v181;  // [bp-0xd4]\n
    struct struct_0 **v182;  // [bp-0xd0]\n
    unsigned int v183;  // [bp-0xcc]\n
    unsigned short v184;  // [bp-0xc6]\n
    unsigned int *v185;  // [bp-0xc4]\n
    struct struct_0 **v186;  // [bp-0xc0]\n
    char v187;  // [bp-0xbc]\n
    char v188[4];  // [bp-0xb0]\n
    unsigned int v189;  // [bp-0xac]\n
    unsigned int *v190;  // [bp-0xa8]\n
    struct struct_0 **v191;  // [bp-0xa4]\n
    char v192;  // [bp-0xa0]\n
    char v193[4];  // [bp-0x94]\n
    unsigned int v194;  // [bp-0x90]\n
    unsigned int *v195;  // [bp-0x8c]\n
    struct struct_0 **v196;  // [bp-0x88]\n
    char *v197;  // [bp-0x84]\n
    unsigned int v198;  // [bp-0x80]\n
    unsigned int *v199;  // [bp-0x7c]\n
    struct struct_0 **v200;  // [bp-0x78]\n
    char *v201;  // [bp-0x74]\n
    unsigned int v202;  // [bp-0x70]\n
    unsigned int *v203;  // [bp-0x6c]\n
    struct struct_0 **v204;  // [bp-0x68]\n
    char *v205;  // [bp-0x64]\n
    unsigned int v206;  // [bp-0x60]\n
    unsigned int *v207;  // [bp-0x5c]\n
    struct struct_0 **v208;  // [bp-0x58]\n
    char v209;  // [bp-0x51]\n
    unsigned int v210;  // [bp-0x3c]\n
    unsigned int v211;  // [bp-0x38]\n
    unsigned int *v212;  // [bp-0x30]\n
    struct struct_0 **v213;  // [bp-0x2c]\n
    unsigned int v214;  // [bp-0x28]\n
    char v215;  // [bp-0x21]\n
    unsigned int *v216;  // [bp-0x20]\n
    struct struct_0 **v217;  // [bp-0x1c]\n
    unsigned int v218;  // [bp-0x18]\n
    char v219;  // [bp-0x11]\n
    unsigned int *v220;  // [bp-0x10]\n
    struct struct_0 **v221;  // [bp-0xc]\n
    unsigned int v222;  // [bp-0x8]\n
    unsigned int v224;  // ebx\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    unsigned int *v233;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    struct struct_0 **v237;  // eax\n
    unsigned int *v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    struct struct_0 **v246;  // eax\n
    unsigned int *v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v284;  // eax\n
    unsigned int v285[2];  // ecx\n
    unsigned int *v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_0 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    struct struct_0 **v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    struct struct_0 **v295;  // eax\n
    unsigned int *v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    struct struct_0 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_0 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_0 **v307;  // eax\n
    unsigned int *v308;  // eax\n
    struct struct_0 **v309;  // eax\n
    unsigned int *v310;  // eax\n
    struct struct_0 **v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_0 **v313;  // eax\n
    struct struct_0 **v314;  // eax\n
    unsigned int *v315;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int *v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    unsigned int *v322;  // eax\n
    struct struct_0 **v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_0 **v325;  // eax\n
    unsigned int *v326;  // eax\n
    struct struct_0 **v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_0 **v329;  // eax\n
    struct struct_0 **v330;  // eax\n
    unsigned int *v331;  // eax\n
    unsigned int *v332;  // eax\n
    struct struct_0 **v333;  // eax\n
    unsigned int *v334;  // eax, Other Possible Types: unsigned int\n
    unsigned int v335;  // ebx\n
\n
    v222 = v224;\n
    v38 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v52 = cgc__cookie;\n
    v51 = -1;\n
    if (cgc_sendline(1, \"===llamadigredience===\", 22) < 0)\n
        cgc__terminate();\n
    v208 = v223;\n
    v207 = a0;\n
    if (*(v207) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v207) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v207);\n
    v206 = v37;\n
    if (!v206)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v205 = cgc_calloc(134);\n
    if (!v205)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v205, &v38[18].padding_0[182]);\n
    cgc_strncpy(v205 + 5, *(v208), v206);\n
    v226 = v208;\n
    *(v226) = &(&*(v226)->field_4)[cgc_strlen(v205)];\n
    v228 = v207;\n
    *(v228) = *(v228) - (cgc_strlen(v205) + -4);\n
    cgc_checkheap();\n
    cgc_free(v205);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v221 = v223;\n
    v220 = a0;\n
    if (*(v220) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v219 = *(v221)->field_0;\n
    v229 = v220;\n
    *(v229) = *(v229) - 1;\n
    v230 = v221;\n
    *(v230) = &*(v230)->padding_1;\n
    if (v219 <= *(v220) && !(!v219))\n
        goto LABEL_474738;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_474738:\n
    v218 = cgc_calloc(v219);\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v218, *(v221), v219);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v231 = v221;\n
    *(v231) = &(&*(v231)->field_0)[v219];\n
    v232 = v220;\n
    *(v232) = *(v232) - v219;\n
    cgc_checkheap();\n
    cgc_free(v218);\n
    v126 = v223;\n
    v125 = a0;\n
    memset(&v123, 0, 6);\n
    if (*(v125) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v124 = *(&*(v126)->field_0);\n
    cgc_uint2str(&v123, 6, v124);\n
    v36 = &v123;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v233 = v125;\n
    *(v233) = *(v233) - 2;\n
    v234 = v126;\n
    *(v234) = &*(v234)->padding_1[1];\n
    v98 = v223;\n
    v97 = a0;\n
    if (*(v97) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(v98)->field_0;\n
    v235 = v97;\n
    *(v235) = *(v235) - 1;\n
    v236 = v98;\n
    *(v236) = &*(v236)->padding_1;\n
    if (v96 <= *(v97) && !(!v96))\n
        goto LABEL_474a95;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_474a95:\n
    v95 = cgc_calloc(v96);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v95, *(v98), v96);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v237 = v98;\n
    *(v237) = &(&*(v237)->field_0)[v96];\n
    v238 = v97;\n
    *(v238) = *(v238) - v96;\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    v182 = v223;\n
    v181 = a0;\n
    if (*(v181) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v180 = *(&*(v182)->field_0);\n
    v239 = v181;\n
    *(v239) = *(v239) - 2;\n
    v240 = v182;\n
    *(v240) = &*(v240)->padding_1[1];\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_474ccf;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_474ccf:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v241 = v181;\n
    *(v241) = *(v241) - v180;\n
    v242 = v182;\n
    *(v242) = &(&*(v242)->field_0)[v180];\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v122 = v223;\n
    v121 = a0;\n
    memset(&v119, 0, 6);\n
    if (*(v121) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = *(&*(v122)->field_0);\n
    cgc_uint2str(&v119, 6, v120);\n
    v35 = &v119;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v243 = v121;\n
    *(v243) = *(v243) - 2;\n
    v244 = v122;\n
    *(v244) = &*(v244)->padding_1[1];\n
    v204 = v223;\n
    v203 = a0;\n
    if (*(v203) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v203) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v203);\n
    v202 = v34;\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v201 = cgc_calloc(134);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v201, &v38[18].padding_0[182]);\n
    cgc_strncpy(v201 + 5, *(v204), v202);\n
    v246 = v204;\n
    *(v246) = &(&*(v246)->field_4)[cgc_strlen(v201)];\n
    v248 = v203;\n
    *(v248) = *(v248) - (cgc_strlen(v201) + -4);\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v158 = v223;\n
    v157 = a0;\n
    memset(&v155, 0, 21);\n
    if (*(v157) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v156 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(fpround<4>);\n
    v45 = v46 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v155, 21, v50);\n
    v33 = &v155;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v249 = v157;\n
    *(v249) = *(v249) - 8;\n
    v250 = v158;\n
    *(v250) = &(*(v250))[1].padding_1[2];\n
    v110 = v223;\n
    v109 = a0;\n
    if (*(v109) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v109) >= 128)\n
        v32 = 128;\n
    else\n
        v32 = *(v109);\n
    v108 = v32;\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = cgc_calloc(134);\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v107, &v38[18].padding_0[182]);\n
    cgc_strncpy(v107 + 5, *(v110), v108);\n
    v252 = v110;\n
    *(v252) = &(&*(v252)->field_4)[cgc_strlen(v107)];\n
    v254 = v109;\n
    *(v254) = *(v254) - (cgc_strlen(v107) + -4);\n
    cgc_checkheap();\n
    cgc_free(v107);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v86 = v223;\n
    v85 = a0;\n
    *(&v82[0]) = *(v86);\n
    memset(&v81, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (v82[0])\n
    {\n
        v31 = 0;\n
        if (v82[1])\n
        {\n
            v31 = 0;\n
            if (v82[2])\n
            {\n
                v31 = 0;\n
                if (v82[3])\n
                {\n
                    v31 = 0;\n
                    if (v82[4] << 24)\n
                    {\n
                        v31 = 0;\n
                        if (v82[5] << 16)\n
                        {\n
                            v31 = 0;\n
                            if (v82[6] << 8)\n
                                v31 = v82[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v83 = v31 & 1;\n
    v84 = 0;\n
    cgc_uint2str(&v81, 21, v83);\n
    v30 = &v81;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v81)) < 0)\n
        cgc__terminate();\n
    v255 = v85;\n
    *(v255) = *(v255) - 8;\n
    v256 = v86;\n
    *(v256) = &(*(v256))[1].padding_1[2];\n
    v196 = v223;\n
    v195 = a0;\n
    *(&v193[0]) = *(v196);\n
    memset(&v192, 0, 12);\n
    if (*(v195) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = 0;\n
    if (v193[0] << 24)\n
    {\n
        v29 = 0;\n
        if (v193[1] << 16)\n
        {\n
            v29 = 0;\n
            if (v193[2] << 8)\n
                v29 = v193[3];\n
        }\n
    }\n
    v194 = v29 & 1;\n
    cgc_uint2str(&v192, 12, v194);\n
    v28 = &v192;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v192)) < 0)\n
        cgc__terminate();\n
    v257 = v195;\n
    *(v257) = *(v257) - 4;\n
    v258 = v196;\n
    *(v258) = &*(v258)->field_4;\n
    v68 = v223;\n
    v67 = a0;\n
    *(&v65) = *(v68);\n
    memset(&v64, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v65[0] << 8)\n
        v27 = v65[1];\n
    v66 = v27 & 1;\n
    cgc_uint2str(&v64, 6, v66);\n
    v26 = &v64;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v259 = v67;\n
    *(v259) = *(v259) - 2;\n
    v260 = v68;\n
    *(v260) = &*(v260)->padding_1[1];\n
    v191 = v223;\n
    v190 = a0;\n
    *(&v188[0]) = *(v191);\n
    memset(&v187, 0, 12);\n
    if (*(v190) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v188[0] << 24)\n
    {\n
        v25 = 0;\n
        if (v188[1] << 16)\n
        {\n
            v25 = 0;\n
            if (v188[2] << 8)\n
                v25 = v188[3];\n
        }\n
    }\n
    v189 = v25 & 1;\n
    cgc_uint2str(&v187, 12, v189);\n
    v24 = &v187;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v187)) < 0)\n
        cgc__terminate();\n
    v261 = v190;\n
    *(v261) = *(v261) - 4;\n
    v262 = v191;\n
    *(v262) = &*(v262)->field_4;\n
    v217 = v223;\n
    v216 = a0;\n
    if (*(v216) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v215 = *(v217)->field_0;\n
    v263 = v216;\n
    *(v263) = *(v263) - 1;\n
    v264 = v217;\n
    *(v264) = &*(v264)->padding_1;\n
    if (v215 <= *(v216) && !(!v215))\n
        goto LABEL_475dc0;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_475dc0:\n
    v214 = cgc_calloc(v215);\n
    if (!v214)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v214, *(v217), v215);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v265 = v217;\n
    *(v265) = &(&*(v265)->field_0)[v215];\n
    v266 = v216;\n
    *(v266) = *(v266) - v215;\n
    cgc_checkheap();\n
    cgc_free(v214);\n
    v118 = v223;\n
    v117 = a0;\n
    memset(&v115, 0, 6);\n
    if (*(v117) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(&*(v118)->field_0);\n
    cgc_uint2str(&v115, 6, v116);\n
    v23 = &v115;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v267 = v117;\n
    *(v267) = *(v267) - 2;\n
    v268 = v118;\n
    *(v268) = &*(v268)->padding_1[1];\n
    v146 = v223;\n
    v145 = a0;\n
    memset(&v143, 0, 4);\n
    if (*(v145) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(v146)->field_0;\n
    cgc_uint2str(&v143, 4, v144);\n
    v22 = &v143;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v143)) < 0)\n
        cgc__terminate();\n
    v269 = v145;\n
    *(v269) = *(v269) - 1;\n
    v270 = v146;\n
    *(v270) = &*(v270)->padding_1;\n
    v106 = v223;\n
    v105 = a0;\n
    if (*(v105) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v105) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v105);\n
    v104 = v21;\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = cgc_calloc(134);\n
    if (!v103)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v103, &v38[18].padding_0[182]);\n
    cgc_strncpy(v103 + 5, *(v106), v104);\n
    v272 = v106;\n
    *(v272) = &(&*(v272)->field_4)[cgc_strlen(v103)];\n
    v274 = v105;\n
    *(v274) = *(v274) - (cgc_strlen(v103) + -4);\n
    cgc_checkheap();\n
    cgc_free(v103);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v80 = v223;\n
    v79 = a0;\n
    *(&v76[0]) = *(v80);\n
    memset(&v75, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v76[0])\n
    {\n
        v20 = 0;\n
        if (v76[1])\n
        {\n
            v20 = 0;\n
            if (v76[2])\n
            {\n
                v20 = 0;\n
                if (v76[3])\n
                {\n
                    v20 = 0;\n
                    if (v76[4] << 24)\n
                    {\n
                        v20 = 0;\n
                        if (v76[5] << 16)\n
                        {\n
                            v20 = 0;\n
                            if (v76[6] << 8)\n
                                v20 = v76[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v77 = v20 & 1;\n
    v78 = 0;\n
    cgc_uint2str(&v75, 21, v77);\n
    v19 = &v75;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v275 = v79;\n
    *(v275) = *(v275) - 8;\n
    v276 = v80;\n
    *(v276) = &(*(v276))[1].padding_1[2];\n
    v142 = v223;\n
    v141 = a0;\n
    memset(&v139, 0, 4);\n
    if (*(v141) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = *(v142)->field_0;\n
    cgc_uint2str(&v139, 4, v140);\n
    v18 = &v139;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v277 = v141;\n
    *(v277) = *(v277) - 1;\n
    v278 = v142;\n
    *(v278) = &*(v278)->padding_1;\n
    v166 = v223;\n
    v165 = a0;\n
    memset(&v163, 0, 12);\n
    if (*(v165) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v164 = *(&*(v166)->field_0);\n
    cgc_uint2str(&v163, 12, v164);\n
    v17 = &v163;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v163)) < 0)\n
        cgc__terminate();\n
    v279 = v165;\n
    *(v279) = *(v279) - 4;\n
    v280 = v166;\n
    *(v280) = &*(v280)->field_4;\n
    v102 = v223;\n
    v101 = a0;\n
    if (*(v101) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v101) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v101);\n
    v100 = v16;\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = cgc_calloc(134);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v99, &v38[18].padding_0[182]);\n
    cgc_strncpy(v99 + 5, *(v102), v100);\n
    v282 = v102;\n
    *(v282) = &(&*(v282)->field_4)[cgc_strlen(v99)];\n
    v284 = v101;\n
    *(v284) = *(v284) - (cgc_strlen(v99) + -4);\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v213 = v223;\n
    v212 = a0;\n
    memset(&v209, 0, 21);\n
    if (*(v212) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v285 = *(v213);\n
    v211 = v285[1];\n
    v210 = v285[0];\n
    cgc_uint2str(&v209, 21, v210);\n
    v15 = &v209;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v209)) < 0)\n
        cgc__terminate();\n
    v286 = v212;\n
    *(v286) = *(v286) - 8;\n
    v287 = v213;\n
    *(v287) = &(*(v287))[1].padding_1[2];\n
    v170 = v223;\n
    v169 = a0;\n
    memset(&v167, 0, 12);\n
    if (*(v169) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v168 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-942, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v167, 12, v49);\n
    v14 = &v167;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v167)) < 0)\n
        cgc__terminate();\n
    v288 = v169;\n
    *(v288) = *(v288) - 4;\n
    v289 = v170;\n
    *(v289) = &*(v289)->field_4;\n
    v74 = v223;\n
    v73 = a0;\n
    *(&v70[0]) = *(v74);\n
    memset(&v69, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v70[0])\n
    {\n
        v13 = 0;\n
        if (v70[1])\n
        {\n
            v13 = 0;\n
            if (v70[2])\n
            {\n
                v13 = 0;\n
                if (v70[3])\n
                {\n
                    v13 = 0;\n
                    if (v70[4] << 24)\n
                    {\n
                        v13 = 0;\n
                        if (v70[5] << 16)\n
                        {\n
                            v13 = 0;\n
                            if (v70[6] << 8)\n
                                v13 = v70[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v71 = v13 & 1;\n
    v72 = 0;\n
    cgc_uint2str(&v69, 21, v71);\n
    v12 = &v69;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v290 = v73;\n
    *(v290) = *(v290) - 8;\n
    v291 = v74;\n
    *(v291) = &(*(v291))[1].padding_1[2];\n
    v162 = v223;\n
    v161 = a0;\n
    memset(&v159, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v160 = *(&*(v162)->field_0);\n
    cgc_uint2str(&v159, 12, v160);\n
    v11 = &v159;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v159)) < 0)\n
        cgc__terminate();\n
    v292 = v161;\n
    *(v292) = *(v292) - 4;\n
    v293 = v162;\n
    *(v293) = &*(v293)->field_4;\n
    v63 = v223;\n
    v62 = a0;\n
    *(&v60[0]) = *(v63);\n
    memset(&v59, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v60[0] << 8)\n
        v10 = v60[1];\n
    v61 = v10 & 1;\n
    cgc_uint2str(&v59, 6, v61);\n
    v9 = &v59;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v294 = v62;\n
    *(v294) = *(v294) - 2;\n
    v295 = v63;\n
    *(v295) = &*(v295)->padding_1[1];\n
    v154 = v223;\n
    v153 = a0;\n
    memset(&v151, 0, 21);\n
    if (*(v153) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v152 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-946, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v151, 21, v48);\n
    v8 = &v151;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v151)) < 0)\n
        cgc__terminate();\n
    v296 = v153;\n
    *(v296) = *(v296) - 8;\n
    v297 = v154;\n
    *(v297) = &(*(v297))[1].padding_1[2];\n
    v178 = v223;\n
    v177 = a0;\n
    if (*(v177) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = *(&*(v178)->field_0);\n
    v298 = v177;\n
    *(v298) = *(v298) - 2;\n
    v299 = v178;\n
    *(v299) = &*(v299)->padding_1[1];\n
    if (v176 <= *(v177) && !(!v176))\n
        goto LABEL_477553;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_477553:\n
    v175 = cgc_calloc(v176);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v175, *(v178), v176);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v300 = v177;\n
    *(v300) = *(v300) - v176;\n
    v301 = v178;\n
    *(v301) = &(&*(v301)->field_0)[v176];\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    v186 = v223;\n
    v185 = a0;\n
    if (*(v185) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v184 = *(&*(v186)->field_0);\n
    v302 = v185;\n
    *(v302) = *(v302) - 2;\n
    v303 = v186;\n
    *(v303) = &*(v303)->padding_1[1];\n
    if (v184 <= *(v185) && !(!v184))\n
        goto LABEL_47778d;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47778d:\n
    v183 = cgc_calloc(v184);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v183, *(v186), v184);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v304 = v185;\n
    *(v304) = *(v304) - v184;\n
    v305 = v186;\n
    *(v305) = &(&*(v305)->field_0)[v184];\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    v138 = v223;\n
    v137 = a0;\n
    memset(&v135, 0, 4);\n
    if (*(v137) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v136 = *(v138)->field_0;\n
    cgc_uint2str(&v135, 4, v136);\n
    v7 = &v135;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v306 = v137;\n
    *(v306) = *(v306) - 1;\n
    v307 = v138;\n
    *(v307) = &*(v307)->padding_1;\n
    v114 = v223;\n
    v113 = a0;\n
    memset(&v111, 0, 6);\n
    if (*(v113) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(&*(v114)->field_0);\n
    cgc_uint2str(&v111, 6, v112);\n
    v6 = &v111;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v308 = v113;\n
    *(v308) = *(v308) - 2;\n
    v309 = v114;\n
    *(v309) = &*(v309)->padding_1[1];\n
    v134 = v223;\n
    v133 = a0;\n
    memset(&v131, 0, 4);\n
    if (*(v133) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(v134)->field_0;\n
    cgc_uint2str(&v131, 4, v132);\n
    v5 = &v131;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v310 = v133;\n
    *(v310) = *(v310) - 1;\n
    v311 = v134;\n
    *(v311) = &*(v311)->padding_1;\n
    v94 = v223;\n
    v93 = a0;\n
    if (*(v93) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(v94)->field_0;\n
    v312 = v93;\n
    *(v312) = *(v312) - 1;\n
    v313 = v94;\n
    *(v313) = &*(v313)->padding_1;\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_477d93;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_477d93:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v314 = v94;\n
    *(v314) = &(&*(v314)->field_0)[v92];\n
    v315 = v93;\n
    *(v315) = *(v315) - v92;\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v200 = v223;\n
    v199 = a0;\n
    if (*(v199) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v199) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v199);\n
    v198 = v4;\n
    if (!v198)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v197 = cgc_calloc(134);\n
    if (!v197)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v197, &v38[18].padding_0[182]);\n
    cgc_strncpy(v197 + 5, *(v200), v198);\n
    v317 = v200;\n
    *(v317) = &(&*(v317)->field_4)[cgc_strlen(v197)];\n
    v319 = v199;\n
    *(v319) = *(v319) - (cgc_strlen(v197) + -4);\n
    cgc_checkheap();\n
    cgc_free(v197);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v174 = v223;\n
    v173 = a0;\n
    if (*(v173) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(&*(v174)->field_0);\n
    v320 = v173;\n
    *(v320) = *(v320) - 2;\n
    v321 = v174;\n
    *(v321) = &*(v321)->padding_1[1];\n
    if (v172 <= *(v173) && !(!v172))\n
        goto LABEL_478218;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_478218:\n
    v171 = cgc_calloc(v172);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v171, *(v174), v172);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v322 = v173;\n
    *(v322) = *(v322) - v172;\n
    v323 = v174;\n
    *(v323) = &(&*(v323)->field_0)[v172];\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    v58 = v223;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v55[0] << 8)\n
        v3 = v55[1];\n
    v56 = v3 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v2 = &v54;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v324 = v57;\n
    *(v324) = *(v324) - 2;\n
    v325 = v58;\n
    *(v325) = &*(v325)->padding_1[1];\n
    v130 = v223;\n
    v129 = a0;\n
    memset(&v127, 0, 4);\n
    if (*(v129) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(v130)->field_0;\n
    cgc_uint2str(&v127, 4, v128);\n
    v1 = &v127;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v326 = v129;\n
    *(v326) = *(v326) - 1;\n
    v327 = v130;\n
    *(v327) = &*(v327)->padding_1;\n
    v90 = v223;\n
    v89 = a0;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(v90)->field_0;\n
    v328 = v89;\n
    *(v328) = *(v328) - 1;\n
    v329 = v90;\n
    *(v329) = &*(v329)->padding_1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_47871b;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47871b:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v330 = v90;\n
    *(v330) = &(&*(v330)->field_0)[v88];\n
    v331 = v89;\n
    *(v331) = *(v331) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v150 = v223;\n
    v149 = a0;\n
    memset(&v147, 0, 21);\n
    if (*(v149) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v148 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-950, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v147, 21, v47);\n
    v0 = &v147;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v332 = v149;\n
    *(v332) = *(v332) - 8;\n
    v333 = v150;\n
    *(v333) = &(*(v333))[1].padding_1[2];\n
    v52 ^= v38->field_260;\n
    if (v52)\n
        cgc___stack_cookie_fail();\n
    v334 = a0;\n
    if (*(v334) > 0 && v51 >= 0 && v51 < 0)\n
        v334 = *((&v53 + 0x4 * v51))(v223);\n
    v335 = v222;\n
    return v334;\n
}\n
", "4688436:sub_478a34": null, "4688448:cgc_process_llamabetitle": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamabetitle(struct struct_1 **v54, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x140]\n
    char v1;  // [bp-0x139]\n
    struct_0 *v2;  // [bp-0x138]\n
    unsigned int v3;  // [bp-0x134]\n
    struct_0 *v4;  // [bp-0x130]\n
    char v5;  // [bp-0x129]\n
    struct_0 *v6;  // [bp-0x128]\n
    char v7;  // [bp-0x121]\n
    struct_0 *v8;  // [bp-0x120]\n
    struct_0 *v9;  // [bp-0x11c]\n
    char v10;  // [bp-0x115]\n
    struct_3 *v11;  // [bp-0x114]\n
    unsigned short v12;  // [bp-0x110]\n
    unsigned short v13;  // [bp-0x10e]\n
    unsigned long v14;  // [bp-0x10c]\n
    struct struct_4 **v15;  // [bp-0x100]\n
    unsigned int v16;  // [bp-0xfc]\n
    char v17;  // [bp-0xf8]\n
    char v18;  // [bp-0xf6]\n
    char v19[2];  // [bp-0xf0]\n
    unsigned short v20;  // [bp-0xea]\n
    unsigned int *v21;  // [bp-0xe8]\n
    struct struct_1 **v22;  // [bp-0xe4]\n
    char v23;  // [bp-0xde]\n
    struct_2 *v24;  // [bp-0xd8]\n
    unsigned short v25;  // [bp-0xd2]\n
    unsigned int *v26;  // [bp-0xd0]\n
    struct struct_1 **v27;  // [bp-0xcc]\n
    char v28;  // [bp-0xc5]\n
    char v29[8];  // [bp-0xb0]\n
    unsigned int v30;  // [bp-0xac]\n
    void* v31;  // [bp-0xa8]\n
    unsigned int *v32;  // [bp-0xa0]\n
    struct struct_1 **v33;  // [bp-0x9c]\n
    char v34;  // [bp-0x95]\n
    char v35[8];  // [bp-0x80]\n
    unsigned int v36;  // [bp-0x7c]\n
    void* v37;  // [bp-0x78]\n
    unsigned int *v38;  // [bp-0x74]\n
    struct struct_1 **v39;  // [bp-0x70]\n
    char *v40;  // [bp-0x6c]\n
    unsigned int v41;  // [bp-0x68]\n
    unsigned int *v42;  // [bp-0x64]\n
    struct struct_1 **v43;  // [bp-0x60]\n
    char v44;  // [bp-0x59]\n
    unsigned long v45;  // [bp-0x44]\n
    unsigned int *v46;  // [bp-0x3c]\n
    struct struct_1 **v47;  // [bp-0x38]\n
    char v48;  // [bp-0x31]\n
    unsigned int v49;  // [bp-0x1c]\n
    unsigned int v50;  // [bp-0x18]\n
    unsigned int *v51;  // [bp-0x10]\n
    struct struct_1 **v52;  // [bp-0xc]\n
    unsigned int v53;  // [bp-0x8]\n
    unsigned int v55;  // ebx\n
    unsigned int *v56;  // eax\n
    struct struct_1 **v57;  // eax\n
    struct_2 *v58;  // ecx\n
    unsigned int *v59;  // eax\n
    struct struct_1 **v60;  // eax\n
    unsigned int *v61;  // eax\n
    struct struct_1 **v62;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_1 **v64;  // eax\n
    struct struct_1 **v66;  // eax\n
    unsigned int *v68;  // eax\n
    unsigned int *v69;  // eax\n
    struct struct_1 **v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_1 **v72;  // eax\n
    unsigned int *v73;  // eax, Other Possible Types: unsigned int\n
    unsigned int v74;  // ebx\n
\n
    v53 = v55;\n
    v11 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v16 = cgc__cookie;\n
    v15 = -1;\n
    if (cgc_sendline(1, \"===llamabetitle===\", 18) < 0)\n
        cgc__terminate();\n
    v27 = v54;\n
    v26 = a0;\n
    v24 = &*(v27);\n
    memset(&v23, 0, 6);\n
    if (*(v26) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v24->field_0 << 8)\n
        v10 = v24->padding_1[0];\n
    v25 = v10 & 1;\n
    cgc_uint2str(&v23, 6, v25);\n
    v9 = &v23;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v23)) < 0)\n
        cgc__terminate();\n
    v56 = v26;\n
    *(v56) = *(v56) - 2;\n
    v57 = v27;\n
    *(v57) = &*(v57)->padding_1[1];\n
    v52 = v54;\n
    v51 = a0;\n
    memset(&v48, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = *(v52);\n
    v50 = v58->field_4;\n
    v49 = *(&v58->field_0);\n
    cgc_uint2str(&v48, 21, v49);\n
    v8 = &v48;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v48)) < 0)\n
        cgc__terminate();\n
    v59 = v51;\n
    *(v59) = *(v59) - 8;\n
    v60 = v52;\n
    *(v60) = &(*(v60))[1].padding_1[2];\n
    v39 = v54;\n
    v38 = a0;\n
    *(&v35[0]) = *(v39);\n
    memset(&v34, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v35[0])\n
    {\n
        v7 = 0;\n
        if (v35[1])\n
        {\n
            v7 = 0;\n
            if (v35[2])\n
            {\n
                v7 = 0;\n
                if (v35[3])\n
                {\n
                    v7 = 0;\n
                    if (v35[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v35[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v35[6] << 8)\n
                                v7 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v36 = v7 & 1;\n
    v37 = 0;\n
    cgc_uint2str(&v34, 21, v36);\n
    v6 = &v34;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v61 = v38;\n
    *(v61) = *(v61) - 8;\n
    v62 = v39;\n
    *(v62) = &(*(v62))[1].padding_1[2];\n
    v33 = v54;\n
    v32 = a0;\n
    *(&v29[0]) = *(v33);\n
    memset(&v28, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v29[0])\n
    {\n
        v5 = 0;\n
        if (v29[1])\n
        {\n
            v5 = 0;\n
            if (v29[2])\n
            {\n
                v5 = 0;\n
                if (v29[3])\n
                {\n
                    v5 = 0;\n
                    if (v29[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v29[5] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v29[6] << 8)\n
                                v5 = v29[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v30 = v5 & 1;\n
    v31 = 0;\n
    cgc_uint2str(&v28, 21, v30);\n
    v4 = &v28;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v28)) < 0)\n
        cgc__terminate();\n
    v63 = v32;\n
    *(v63) = *(v63) - 8;\n
    v64 = v33;\n
    *(v64) = &(*(v64))[1].padding_1[2];\n
    v43 = v54;\n
    v42 = a0;\n
    if (*(v42) <= 0)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v42) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v42);\n
    v41 = v3;\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = cgc_calloc(134);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v40, &v11[18].padding_0[182]);\n
    cgc_strncpy(v40 + 5, *(v43), v41);\n
    v66 = v43;\n
    *(v66) = &(&*(v66)->field_4)[cgc_strlen(v40)];\n
    v68 = v42;\n
    *(v68) = *(v68) - (cgc_strlen(v40) + -4);\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    if (cgc_sendline(1, &v11[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v47 = v54;\n
    v46 = a0;\n
    memset(&v44, 0, 21);\n
    if (*(v46) < 8)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v45 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v13 = [D] x86g_create_fpucw(fpround<4>);\n
    v12 = v13 | 0xc00;\n
    v14 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v44, 21, v14);\n
    v2 = &v44;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v69 = v46;\n
    *(v69) = *(v69) - 8;\n
    v70 = v47;\n
    *(v70) = &(*(v70))[1].padding_1[2];\n
    v22 = v54;\n
    v21 = a0;\n
    *(&v19) = *(v22);\n
    memset(&v18, 0, 6);\n
    if (*(v21) < 2)\n
    {\n
        if (cgc_sendline(1, &v11[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v19[0] << 8)\n
        v1 = v19[1];\n
    v20 = v1 & 1;\n
    cgc_uint2str(&v18, 6, v20);\n
    v0 = &v18;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v18)) < 0)\n
        cgc__terminate();\n
    v71 = v21;\n
    *(v71) = *(v71) - 2;\n
    v72 = v22;\n
    *(v72) = &*(v72)->padding_1[1];\n
    v16 ^= v11->field_260;\n
    if (v16)\n
        cgc___stack_cookie_fail();\n
    v73 = a0;\n
    if (*(v73) > 0 && v15 >= 0 && v15 < 0)\n
        v73 = *((&v17 + 0x4 * v15))(v54);\n
    v74 = v53;\n
    return v73;\n
}\n
", "4691808:cgc_process_llamatenebrose": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0364;\n
extern unsigned int g_4f0368;\n
\n
int cgc_process_llamatenebrose(struct struct_0 **v48, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x10c]\n
    struct_2 *v1;  // [bp-0x108]\n
    struct_2 *v2;  // [bp-0x104]\n
    struct_2 *v3;  // [bp-0x100]\n
    struct_2 *v4;  // [bp-0xfc]\n
    struct_1 *v5;  // [bp-0xf8]\n
    unsigned short v6;  // [bp-0xf4]\n
    unsigned short v7;  // [bp-0xf2]\n
    unsigned short v8;  // [bp-0xf0]\n
    unsigned short v9;  // [bp-0xee]\n
    unsigned long v10;  // [bp-0xec]\n
    unsigned long v11;  // [bp-0xe4]\n
    struct struct_4 **v12;  // [bp-0xdc], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xd8]\n
    unsigned int v14;  // [bp-0xd4]\n
    unsigned int v15;  // [bp-0xd0]\n
    char *v16;  // [bp-0xcc]\n
    unsigned int *v17;  // [bp-0xc8]\n
    struct struct_0 **v18;  // [bp-0xc4]\n
    char v19;  // [bp-0xc0]\n
    unsigned short v20;  // [bp-0xba]\n
    unsigned int *v21;  // [bp-0xb8]\n
    struct struct_0 **v22;  // [bp-0xb4]\n
    char v23;  // [bp-0xb0]\n
    unsigned short v24;  // [bp-0xaa]\n
    unsigned int *v25;  // [bp-0xa8]\n
    struct struct_0 **v26;  // [bp-0xa4]\n
    unsigned short *v27;  // [bp-0xa0]\n
    unsigned int *v28;  // [bp-0x9c]\n
    struct struct_0 **v29;  // [bp-0x98]\n
    char v30;  // [bp-0x91]\n
    unsigned long v31;  // [bp-0x7c]\n
    unsigned int *v32;  // [bp-0x74]\n
    struct struct_0 **v33;  // [bp-0x70]\n
    char v34;  // [bp-0x69]\n
    unsigned long v35;  // [bp-0x54]\n
    unsigned int *v36;  // [bp-0x4c]\n
    struct struct_0 **v37;  // [bp-0x48]\n
    char v38;  // [bp-0x41]\n
    unsigned int v39;  // [bp-0x2c]\n
    unsigned int v40;  // [bp-0x28]\n
    unsigned int *v41;  // [bp-0x20]\n
    struct struct_0 **v42;  // [bp-0x1c]\n
    unsigned int v43;  // [bp-0x18]\n
    char v44;  // [bp-0x11]\n
    unsigned int *v45;  // [bp-0x10]\n
    struct struct_0 **v46;  // [bp-0xc]\n
    unsigned int v47;  // [bp-0x8]\n
    unsigned int v49;  // ebx\n
    unsigned int *v50;  // eax\n
    struct struct_0 **v51;  // eax\n
    unsigned int *v52;  // eax\n
    struct struct_0 **v53;  // eax\n
    unsigned int *v54;  // eax\n
    struct struct_0 **v55;  // eax\n
    unsigned int *v56;  // eax\n
    struct struct_0 **v57;  // eax\n
    struct_3 *v58;  // ecx\n
    unsigned int *v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    unsigned int *v61;  // eax\n
    struct struct_0 **v62;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v64;  // eax\n
    struct struct_0 **v65;  // eax\n
    unsigned int *v66;  // eax\n
    unsigned int *v67;  // eax\n
    struct struct_0 **v68;  // eax\n
    unsigned int *v69;  // eax, Other Possible Types: unsigned int\n
    unsigned int v70;  // ebx\n
\n
    v47 = v49;\n
    v5 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v14 = g_4f0364;\n
    v15 = g_4f0368;\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamatenebrose===\", 20) < 0)\n
        cgc__terminate();\n
    v37 = v48;\n
    v36 = a0;\n
    memset(&v34, 0, 21);\n
    if (*(v36) < 8)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v35 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v9 = [D] x86g_create_fpucw(fpround<4>);\n
    v8 = v9 | 0xc00;\n
    v11 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v34, 21, v11);\n
    v4 = &v34;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v50 = v36;\n
    *(v50) = *(v50) - 8;\n
    v51 = v37;\n
    *(v51) = *(v51) + 1;\n
    v26 = v48;\n
    v25 = a0;\n
    memset(&v23, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = *(&*(v26)->field_0);\n
    cgc_uint2str(&v23, 6, v24);\n
    v3 = &v23;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v23)) < 0)\n
        cgc__terminate();\n
    v52 = v25;\n
    *(v52) = *(v52) - 2;\n
    v53 = v26;\n
    *(v53) = &*(v53)->padding_1[1];\n
    v22 = v48;\n
    v21 = a0;\n
    memset(&v19, 0, 6);\n
    if (*(v21) < 2)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = *(&*(v22)->field_0);\n
    cgc_uint2str(&v19, 6, v20);\n
    v2 = &v19;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v19)) < 0)\n
        cgc__terminate();\n
    v54 = v21;\n
    *(v54) = *(v54) - 2;\n
    v55 = v22;\n
    *(v55) = &*(v55)->padding_1[1];\n
    v33 = v48;\n
    v32 = a0;\n
    memset(&v30, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v31 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v7 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-238, size=2, endness=Iend_LE)))));\n
    v6 = v7 | 0xc00;\n
    v10 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v30, 21, v10);\n
    v1 = &v30;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v56 = v32;\n
    *(v56) = *(v56) - 8;\n
    v57 = v33;\n
    *(v57) = *(v57) + 1;\n
    v42 = v48;\n
    v41 = a0;\n
    memset(&v38, 0, 21);\n
    if (*(v41) < 8)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = *(v42);\n
    v40 = v58->field_4;\n
    v39 = *(&v58->field_0);\n
    cgc_uint2str(&v38, 21, v39);\n
    v0 = &v38;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v59 = v41;\n
    *(v59) = *(v59) - 8;\n
    v60 = v42;\n
    *(v60) = *(v60) + 1;\n
    v29 = v48;\n
    v28 = a0;\n
    v27 = &*(v29)->field_0;\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = v28;\n
    *(v61) = *(v61) - 2;\n
    v62 = v29;\n
    *(v62) = &*(v62)->padding_1[1];\n
    v12 = *(v27);\n
    v46 = v48;\n
    v45 = a0;\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v44 = *(v46)->field_0;\n
    v63 = v45;\n
    *(v63) = *(v63) - 1;\n
    v64 = v46;\n
    *(v64) = &*(v64)->padding_1;\n
    if (v44 <= *(v45) && !(!v44))\n
        goto LABEL_479feb;\n
    if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_479feb:\n
    v43 = cgc_calloc(v44);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v43, *(v46), v44);\n
    if (cgc_sendline(1, &v5[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v65 = v46;\n
    *(v65) = &(&*(v65)->field_0)[v44];\n
    v66 = v45;\n
    *(v66) = *(v66) - v44;\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    v18 = v48;\n
    v17 = a0;\n
    v16 = &*(v18)->field_0;\n
    if (*(v17) < 1)\n
    {\n
        if (cgc_sendline(1, &v5[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = v17;\n
    *(v67) = *(v67) - 1;\n
    v68 = v18;\n
    *(v68) = &*(v68)->padding_1;\n
    v12 = *(v16);\n
    v13 ^= v5->field_260;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v69 = a0;\n
    if (*(v69) > 0 && v12 >= 0 && v12 < 2)\n
        v69 = (&v14)[v12](v48);\n
    v70 = v47;\n
    return v69;\n
}\n
", "4694552:sub_47a218": null, "4694560:cgc_process_llamaonium": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaonium(struct struct_0 **v114, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x254]\n
    struct_1 *v1;  // [bp-0x250]\n
    struct_1 *v2;  // [bp-0x24c]\n
    unsigned int v3;  // [bp-0x248]\n
    struct_1 *v4;  // [bp-0x244]\n
    char v5;  // [bp-0x23d]\n
    struct_1 *v6;  // [bp-0x23c]\n
    struct_1 *v7;  // [bp-0x238]\n
    char v8;  // [bp-0x231]\n
    struct_1 *v9;  // [bp-0x230]\n
    unsigned int v10;  // [bp-0x22c]\n
    unsigned int v11;  // [bp-0x228]\n
    struct_1 *v12;  // [bp-0x224]\n
    unsigned int v13;  // [bp-0x220]\n
    struct_1 *v14;  // [bp-0x21c]\n
    struct_1 *v15;  // [bp-0x218]\n
    char v16;  // [bp-0x211]\n
    struct_1 *v17;  // [bp-0x210]\n
    struct_1 *v18;  // [bp-0x20c]\n
    struct_3 *v19;  // [bp-0x208]\n
    unsigned short v20;  // [bp-0x204]\n
    unsigned short v21;  // [bp-0x202]\n
    unsigned short v22;  // [bp-0x200]\n
    unsigned short v23;  // [bp-0x1fe]\n
    unsigned short v24;  // [bp-0x1fc]\n
    unsigned short v25;  // [bp-0x1fa]\n
    unsigned short v26;  // [bp-0x1f8]\n
    unsigned short v27;  // [bp-0x1f6]\n
    unsigned long v28;  // [bp-0x1f4]\n
    unsigned long v29;  // [bp-0x1ec]\n
    unsigned long v30;  // [bp-0x1e4]\n
    unsigned long v31;  // [bp-0x1dc]\n
    struct struct_2 **v32;  // [bp-0x1d0]\n
    unsigned int v33;  // [bp-0x1cc]\n
    char v34;  // [bp-0x1c8]\n
    char v35;  // [bp-0x1c6]\n
    char v36[2];  // [bp-0x1c0]\n
    unsigned short v37;  // [bp-0x1ba]\n
    unsigned int *v38;  // [bp-0x1b8]\n
    struct struct_0 **v39;  // [bp-0x1b4]\n
    char v40;  // [bp-0x1ad]\n
    char v41[8];  // [bp-0x198]\n
    unsigned int v42;  // [bp-0x194]\n
    void* v43;  // [bp-0x190]\n
    unsigned int *v44;  // [bp-0x18c]\n
    struct struct_0 **v45;  // [bp-0x188]\n
    unsigned int v46;  // [bp-0x184]\n
    char v47;  // [bp-0x17d]\n
    unsigned int *v48;  // [bp-0x17c]\n
    struct struct_0 **v49;  // [bp-0x178]\n
    char *v50;  // [bp-0x174]\n
    unsigned int v51;  // [bp-0x170]\n
    unsigned int *v52;  // [bp-0x16c]\n
    struct struct_0 **v53;  // [bp-0x168]\n
    char *v54;  // [bp-0x164]\n
    unsigned int v55;  // [bp-0x160]\n
    unsigned int *v56;  // [bp-0x15c]\n
    struct struct_0 **v57;  // [bp-0x158]\n
    char *v58;  // [bp-0x154]\n
    unsigned int v59;  // [bp-0x150]\n
    unsigned int *v60;  // [bp-0x14c]\n
    struct struct_0 **v61;  // [bp-0x148]\n
    char v62;  // [bp-0x144]\n
    unsigned short v63;  // [bp-0x13e]\n
    unsigned int *v64;  // [bp-0x13c]\n
    struct struct_0 **v65;  // [bp-0x138]\n
    char v66;  // [bp-0x131]\n
    char v67;  // [bp-0x12d]\n
    unsigned int *v68;  // [bp-0x12c]\n
    struct struct_0 **v69;  // [bp-0x128]\n
    char v70;  // [bp-0x121]\n
    unsigned long v71;  // [bp-0x10c]\n
    unsigned int *v72;  // [bp-0x100]\n
    struct struct_0 **v73;  // [bp-0xfc]\n
    char v74;  // [bp-0xf8]\n
    unsigned int v75;  // [bp-0xec]\n
    unsigned int *v76;  // [bp-0xe8]\n
    struct struct_0 **v77;  // [bp-0xe4]\n
    char v78;  // [bp-0xe0]\n
    unsigned int v79;  // [bp-0xd4]\n
    unsigned int *v80;  // [bp-0xd0]\n
    struct struct_0 **v81;  // [bp-0xcc]\n
    char v82;  // [bp-0xc8]\n
    unsigned int v83;  // [bp-0xbc]\n
    unsigned int *v84;  // [bp-0xb8]\n
    struct struct_0 **v85;  // [bp-0xb4]\n
    char v86;  // [bp-0xb0]\n
    unsigned int v87;  // [bp-0xa4]\n
    unsigned int *v88;  // [bp-0xa0]\n
    struct struct_0 **v89;  // [bp-0x9c]\n
    char v90;  // [bp-0x98]\n
    char v91[4];  // [bp-0x8c]\n
    unsigned int v92;  // [bp-0x88]\n
    unsigned int *v93;  // [bp-0x84]\n
    struct struct_0 **v94;  // [bp-0x80]\n
    char *v95;  // [bp-0x7c]\n
    unsigned int v96;  // [bp-0x78]\n
    unsigned int *v97;  // [bp-0x74]\n
    struct struct_0 **v98;  // [bp-0x70]\n
    char v99;  // [bp-0x69]\n
    unsigned int v100;  // [bp-0x54]\n
    unsigned int v101;  // [bp-0x50]\n
    unsigned int *v102;  // [bp-0x4c]\n
    struct struct_0 **v103;  // [bp-0x48]\n
    char v104;  // [bp-0x41]\n
    unsigned int v105;  // [bp-0x2c]\n
    unsigned int v106;  // [bp-0x28]\n
    unsigned int *v107;  // [bp-0x20]\n
    struct struct_0 **v108;  // [bp-0x1c]\n
    unsigned int v109;  // [bp-0x18]\n
    char v110;  // [bp-0x11]\n
    unsigned int *v111;  // [bp-0x10]\n
    struct struct_0 **v112;  // [bp-0xc]\n
    unsigned int v113;  // [bp-0x8]\n
    unsigned int v115;  // ebx\n
    unsigned int *v116;  // eax\n
    struct struct_0 **v117;  // eax\n
    unsigned int *v118;  // eax\n
    struct struct_0 **v119;  // eax\n
    unsigned int *v120;  // eax\n
    struct struct_0 **v121;  // eax\n
    unsigned int v122[2];  // ecx\n
    unsigned int *v123;  // eax\n
    struct struct_0 **v124;  // eax\n
    struct struct_0 **v126;  // eax\n
    unsigned int *v128;  // eax\n
    unsigned int v129[2];  // ecx\n
    unsigned int *v130;  // eax\n
    struct struct_0 **v131;  // eax\n
    struct struct_0 **v133;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_0 **v137;  // eax\n
    unsigned int *v139;  // eax\n
    unsigned int *v140;  // eax\n
    struct struct_0 **v141;  // eax\n
    unsigned int *v142;  // eax\n
    struct struct_0 **v143;  // eax\n
    struct struct_0 **v144;  // eax\n
    unsigned int *v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_0 **v149;  // eax\n
    struct struct_0 **v150;  // eax\n
    unsigned int *v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_0 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_0 **v155;  // eax\n
    struct struct_0 **v157;  // eax\n
    unsigned int *v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_0 **v161;  // eax\n
    unsigned int *v162;  // eax\n
    struct struct_0 **v163;  // eax\n
    unsigned int *v164;  // eax\n
    struct struct_0 **v165;  // eax\n
    unsigned int *v166;  // eax, Other Possible Types: unsigned int\n
    unsigned int v167;  // ebx\n
\n
    v113 = v115;\n
    v19 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamaonium===\", 16) < 0)\n
        cgc__terminate();\n
    v73 = v114;\n
    v72 = a0;\n
    memset(&v70, 0, 21);\n
    if (*(v72) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v71 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v27 = [D] x86g_create_fpucw(fpround<4>);\n
    v26 = v27 | 0xc00;\n
    v31 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v70, 21, v31);\n
    v18 = &v70;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v116 = v72;\n
    *(v116) = *(v116) - 8;\n
    v117 = v73;\n
    *(v117) = &(*(v117))[1].padding_1[2];\n
    v89 = v114;\n
    v88 = a0;\n
    memset(&v86, 0, 12);\n
    if (*(v88) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v87 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v25 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-502, size=2, endness=Iend_LE)))));\n
    v24 = v25 | 0xc00;\n
    v30 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v86, 12, v30);\n
    v17 = &v86;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v86)) < 0)\n
        cgc__terminate();\n
    v118 = v88;\n
    *(v118) = *(v118) - 4;\n
    v119 = v89;\n
    *(v119) = &*(v119)->field_4;\n
    v94 = v114;\n
    v93 = a0;\n
    *(&v91[0]) = *(v94);\n
    memset(&v90, 0, 12);\n
    if (*(v93) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v91[0] << 24)\n
    {\n
        v16 = 0;\n
        if (v91[1] << 16)\n
        {\n
            v16 = 0;\n
            if (v91[2] << 8)\n
                v16 = v91[3];\n
        }\n
    }\n
    v92 = v16 & 1;\n
    cgc_uint2str(&v90, 12, v92);\n
    v15 = &v90;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v120 = v93;\n
    *(v120) = *(v120) - 4;\n
    v121 = v94;\n
    *(v121) = &*(v121)->field_4;\n
    v108 = v114;\n
    v107 = a0;\n
    memset(&v104, 0, 21);\n
    if (*(v107) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(v108);\n
    v106 = v122[1];\n
    v105 = v122[0];\n
    cgc_uint2str(&v104, 21, v105);\n
    v14 = &v104;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v104)) < 0)\n
        cgc__terminate();\n
    v123 = v107;\n
    *(v123) = *(v123) - 8;\n
    v124 = v108;\n
    *(v124) = &(*(v124))[1].padding_1[2];\n
    v61 = v114;\n
    v60 = a0;\n
    if (*(v60) <= 0)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v60) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v60);\n
    v59 = v13;\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = cgc_calloc(134);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v58, &v19[18].padding_0[182]);\n
    cgc_strncpy(v58 + 5, *(v61), v59);\n
    v126 = v61;\n
    *(v126) = &(&*(v126)->field_4)[cgc_strlen(v58)];\n
    v128 = v60;\n
    *(v128) = *(v128) - (cgc_strlen(v58) + -4);\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    if (cgc_sendline(1, &v19[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v103 = v114;\n
    v102 = a0;\n
    memset(&v99, 0, 21);\n
    if (*(v102) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = *(v103);\n
    v101 = v129[1];\n
    v100 = v129[0];\n
    cgc_uint2str(&v99, 21, v100);\n
    v12 = &v99;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v130 = v102;\n
    *(v130) = *(v130) - 8;\n
    v131 = v103;\n
    *(v131) = &(*(v131))[1].padding_1[2];\n
    v98 = v114;\n
    v97 = a0;\n
    if (*(v97) <= 0)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v97) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v97);\n
    v96 = v11;\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = cgc_calloc(134);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v95, &v19[18].padding_0[182]);\n
    cgc_strncpy(v95 + 5, *(v98), v96);\n
    v133 = v98;\n
    *(v133) = &(&*(v133)->field_4)[cgc_strlen(v95)];\n
    v135 = v97;\n
    *(v135) = *(v135) - (cgc_strlen(v95) + -4);\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    if (cgc_sendline(1, &v19[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v57 = v114;\n
    v56 = a0;\n
    if (*(v56) <= 0)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v56) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v56);\n
    v55 = v10;\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = cgc_calloc(134);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v54, &v19[18].padding_0[182]);\n
    cgc_strncpy(v54 + 5, *(v57), v55);\n
    v137 = v57;\n
    *(v137) = &(&*(v137)->field_4)[cgc_strlen(v54)];\n
    v139 = v56;\n
    *(v139) = *(v139) - (cgc_strlen(v54) + -4);\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    if (cgc_sendline(1, &v19[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v85 = v114;\n
    v84 = a0;\n
    memset(&v82, 0, 12);\n
    if (*(v84) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v83 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v23 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-506, size=2, endness=Iend_LE)))));\n
    v22 = v23 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v82, 12, v29);\n
    v9 = &v82;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v140 = v84;\n
    *(v140) = *(v140) - 4;\n
    v141 = v85;\n
    *(v141) = &*(v141)->field_4;\n
    v112 = v114;\n
    v111 = a0;\n
    if (*(v111) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(v112)->field_0;\n
    v142 = v111;\n
    *(v142) = *(v142) - 1;\n
    v143 = v112;\n
    *(v143) = &*(v143)->padding_1;\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_47b32f;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47b32f:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v144 = v112;\n
    *(v144) = &(&*(v144)->field_0)[v110];\n
    v145 = v111;\n
    *(v145) = *(v145) - v110;\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v39 = v114;\n
    v38 = a0;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v36[0] << 8)\n
        v8 = v36[1];\n
    v37 = v8 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v7 = &v35;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v146 = v38;\n
    *(v146) = *(v146) - 2;\n
    v147 = v39;\n
    *(v147) = &*(v147)->padding_1[1];\n
    v49 = v114;\n
    v48 = a0;\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v47 = *(v49)->field_0;\n
    v148 = v48;\n
    *(v148) = *(v148) - 1;\n
    v149 = v49;\n
    *(v149) = &*(v149)->padding_1;\n
    if (v47 <= *(v48) && !(!v47))\n
        goto LABEL_47b6cd;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47b6cd:\n
    v46 = cgc_calloc(v47);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v46, *(v49), v47);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v150 = v49;\n
    *(v150) = &(&*(v150)->field_0)[v47];\n
    v151 = v48;\n
    *(v151) = *(v151) - v47;\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    v77 = v114;\n
    v76 = a0;\n
    memset(&v74, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    cgc_uint2str(&v74, 12, v75);\n
    v6 = &v74;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v152 = v76;\n
    *(v152) = *(v152) - 4;\n
    v153 = v77;\n
    *(v153) = &*(v153)->field_4;\n
    v45 = v114;\n
    v44 = a0;\n
    *(&v41[0]) = *(v45);\n
    memset(&v40, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v41[0])\n
    {\n
        v5 = 0;\n
        if (v41[1])\n
        {\n
            v5 = 0;\n
            if (v41[2])\n
            {\n
                v5 = 0;\n
                if (v41[3])\n
                {\n
                    v5 = 0;\n
                    if (v41[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v41[5] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v41[6] << 8)\n
                                v5 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v42 = v5 & 1;\n
    v43 = 0;\n
    cgc_uint2str(&v40, 21, v42);\n
    v4 = &v40;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v154 = v44;\n
    *(v154) = *(v154) - 8;\n
    v155 = v45;\n
    *(v155) = &(*(v155))[1].padding_1[2];\n
    v53 = v114;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v52);\n
    v51 = v3;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v19[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v157 = v53;\n
    *(v157) = &(&*(v157)->field_4)[cgc_strlen(v50)];\n
    v159 = v52;\n
    *(v159) = *(v159) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v19[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v81 = v114;\n
    v80 = a0;\n
    memset(&v78, 0, 12);\n
    if (*(v80) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v79 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-510, size=2, endness=Iend_LE)))));\n
    v20 = v21 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v78, 12, v28);\n
    v2 = &v78;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v160 = v80;\n
    *(v160) = *(v160) - 4;\n
    v161 = v81;\n
    *(v161) = &*(v161)->field_4;\n
    v69 = v114;\n
    v68 = a0;\n
    memset(&v66, 0, 4);\n
    if (*(v68) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(v69)->field_0;\n
    cgc_uint2str(&v66, 4, v67);\n
    v1 = &v66;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v162 = v68;\n
    *(v162) = *(v162) - 1;\n
    v163 = v69;\n
    *(v163) = &*(v163)->padding_1;\n
    v65 = v114;\n
    v64 = a0;\n
    memset(&v62, 0, 6);\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(&*(v65)->field_0);\n
    cgc_uint2str(&v62, 6, v63);\n
    v0 = &v62;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v164 = v64;\n
    *(v164) = *(v164) - 2;\n
    v165 = v65;\n
    *(v165) = &*(v165)->padding_1[1];\n
    v33 ^= v19->field_260;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v166 = a0;\n
    if (*(v166) > 0 && v32 >= 0 && v32 < 0)\n
        v166 = *((&v34 + 0x4 * v32))(v114);\n
    v167 = v113;\n
    return v166;\n
}\n
", "4702844:sub_47c27c": null, "4702848:cgc_process_llamaforgeability": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaforgeability(struct struct_0 **v106, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x230]\n
    unsigned int v1;  // [bp-0x22c]\n
    struct_1 *v2;  // [bp-0x228]\n
    char v3;  // [bp-0x221]\n
    struct_1 *v4;  // [bp-0x220]\n
    char v5;  // [bp-0x219]\n
    struct_1 *v6;  // [bp-0x218]\n
    char v7;  // [bp-0x211]\n
    struct_1 *v8;  // [bp-0x210]\n
    char v9;  // [bp-0x209]\n
    struct_1 *v10;  // [bp-0x208]\n
    char v11;  // [bp-0x201]\n
    struct_1 *v12;  // [bp-0x200]\n
    unsigned int v13;  // [bp-0x1fc]\n
    struct_1 *v14;  // [bp-0x1f8]\n
    struct_1 *v15;  // [bp-0x1f4]\n
    struct_1 *v16;  // [bp-0x1f0]\n
    struct_3 *v17;  // [bp-0x1ec]\n
    unsigned short v18;  // [bp-0x1e8]\n
    unsigned short v19;  // [bp-0x1e6]\n
    unsigned long v20;  // [bp-0x1e4]\n
    struct struct_2 **v21;  // [bp-0x1d8]\n
    unsigned int v22;  // [bp-0x1d4]\n
    char v23;  // [bp-0x1d0]\n
    char v24;  // [bp-0x1ce]\n
    char v25[2];  // [bp-0x1c8]\n
    unsigned short v26;  // [bp-0x1c2]\n
    unsigned int *v27;  // [bp-0x1c0]\n
    struct struct_0 **v28;  // [bp-0x1bc]\n
    char v29;  // [bp-0x1b5]\n
    char v30[8];  // [bp-0x1a0]\n
    unsigned int v31;  // [bp-0x19c]\n
    void* v32;  // [bp-0x198]\n
    unsigned int *v33;  // [bp-0x190]\n
    struct struct_0 **v34;  // [bp-0x18c]\n
    char v35;  // [bp-0x185]\n
    char v36[8];  // [bp-0x170]\n
    unsigned int v37;  // [bp-0x16c]\n
    void* v38;  // [bp-0x168]\n
    unsigned int *v39;  // [bp-0x164]\n
    struct struct_0 **v40;  // [bp-0x160]\n
    unsigned int v41;  // [bp-0x15c]\n
    char v42;  // [bp-0x155]\n
    unsigned int *v43;  // [bp-0x154]\n
    struct struct_0 **v44;  // [bp-0x150]\n
    unsigned int v45;  // [bp-0x14c]\n
    char v46;  // [bp-0x145]\n
    unsigned int *v47;  // [bp-0x144]\n
    struct struct_0 **v48;  // [bp-0x140]\n
    char *v49;  // [bp-0x13c]\n
    unsigned int v50;  // [bp-0x138]\n
    unsigned int *v51;  // [bp-0x134]\n
    struct struct_0 **v52;  // [bp-0x130]\n
    char v53;  // [bp-0x129]\n
    char v54;  // [bp-0x125]\n
    unsigned int *v55;  // [bp-0x124]\n
    struct struct_0 **v56;  // [bp-0x120]\n
    char v57;  // [bp-0x119]\n
    unsigned long v58;  // [bp-0x104]\n
    unsigned int *v59;  // [bp-0xfc]\n
    struct struct_0 **v60;  // [bp-0xf8]\n
    unsigned int v61;  // [bp-0xf4]\n
    unsigned short v62;  // [bp-0xee]\n
    unsigned int *v63;  // [bp-0xec]\n
    struct struct_0 **v64;  // [bp-0xe8]\n
    unsigned int v65;  // [bp-0xe4]\n
    unsigned short v66;  // [bp-0xde]\n
    unsigned int *v67;  // [bp-0xdc]\n
    struct struct_0 **v68;  // [bp-0xd8]\n
    unsigned int v69;  // [bp-0xd4]\n
    unsigned short v70;  // [bp-0xce]\n
    unsigned int *v71;  // [bp-0xcc]\n
    struct struct_0 **v72;  // [bp-0xc8]\n
    char v73;  // [bp-0xc4]\n
    struct_4 *v74;  // [bp-0xb8]\n
    unsigned int v75;  // [bp-0xb4]\n
    unsigned int *v76;  // [bp-0xb0]\n
    struct struct_0 **v77;  // [bp-0xac]\n
    char v78;  // [bp-0xa8]\n
    char v79[8];  // [bp-0x9c]\n
    unsigned int v80;  // [bp-0x98]\n
    unsigned int *v81;  // [bp-0x94]\n
    struct struct_0 **v82;  // [bp-0x90]\n
    char *v83;  // [bp-0x8c]\n
    unsigned int v84;  // [bp-0x88]\n
    unsigned int *v85;  // [bp-0x84]\n
    struct struct_0 **v86;  // [bp-0x80]\n
    char *v87;  // [bp-0x7c]\n
    unsigned int v88;  // [bp-0x78]\n
    unsigned int *v89;  // [bp-0x74]\n
    struct struct_0 **v90;  // [bp-0x70]\n
    char v91;  // [bp-0x69]\n
    unsigned int v92;  // [bp-0x54]\n
    unsigned int v93;  // [bp-0x50]\n
    unsigned int *v94;  // [bp-0x4c]\n
    struct struct_0 **v95;  // [bp-0x48]\n
    char v96;  // [bp-0x41]\n
    unsigned int v97;  // [bp-0x2c]\n
    unsigned int v98;  // [bp-0x28]\n
    unsigned int *v99;  // [bp-0x20]\n
    struct struct_0 **v100;  // [bp-0x1c]\n
    unsigned int v101;  // [bp-0x18]\n
    char v102;  // [bp-0x11]\n
    unsigned int *v103;  // [bp-0x10]\n
    struct struct_0 **v104;  // [bp-0xc]\n
    unsigned int v105;  // [bp-0x8]\n
    unsigned int v107;  // ebx\n
    unsigned int *v108;  // eax\n
    struct struct_0 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_0 **v113;  // eax\n
    struct_4 *v114;  // ecx\n
    unsigned int *v115;  // eax\n
    struct struct_0 **v116;  // eax\n
    struct_4 *v117;  // ecx\n
    unsigned int *v118;  // eax\n
    struct struct_0 **v119;  // eax\n
    struct struct_0 **v121;  // eax\n
    unsigned int *v123;  // eax\n
    unsigned int *v124;  // eax\n
    struct struct_0 **v125;  // eax\n
    unsigned int *v126;  // eax\n
    struct struct_0 **v127;  // eax\n
    unsigned int *v128;  // eax\n
    struct struct_0 **v129;  // eax\n
    struct struct_0 **v130;  // eax\n
    unsigned int *v131;  // eax\n
    unsigned int *v132;  // eax\n
    struct struct_0 **v133;  // eax\n
    unsigned int *v134;  // eax\n
    struct struct_0 **v135;  // eax\n
    unsigned int *v136;  // eax\n
    struct struct_0 **v137;  // eax\n
    unsigned int *v138;  // eax\n
    struct struct_0 **v139;  // eax\n
    struct struct_0 **v140;  // eax\n
    unsigned int *v141;  // eax\n
    unsigned int *v142;  // eax\n
    struct struct_0 **v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    struct struct_0 **v149;  // eax\n
    unsigned int *v151;  // eax\n
    struct struct_0 **v153;  // eax\n
    unsigned int *v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_0 **v157;  // eax\n
    unsigned int *v158;  // eax\n
    struct struct_0 **v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_0 **v161;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v163;  // eax\n
    unsigned int *v164;  // eax, Other Possible Types: unsigned int\n
    unsigned int v165;  // ebx\n
\n
    v105 = v107;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v22 = cgc__cookie;\n
    v21 = -1;\n
    if (cgc_sendline(1, \"===llamaforgeability===\", 23) < 0)\n
        cgc__terminate();\n
    v72 = v106;\n
    v71 = a0;\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v70 = *(&*(v72)->field_0);\n
    v108 = v71;\n
    *(v108) = *(v108) - 2;\n
    v109 = v72;\n
    *(v109) = &*(v109)->padding_1[1];\n
    if (v70 <= *(v71) && !(!v70))\n
        goto LABEL_47c40d;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47c40d:\n
    v69 = cgc_calloc(v70);\n
    if (!v69)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v69, *(v72), v70);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v110 = v71;\n
    *(v110) = *(v110) - v70;\n
    v111 = v72;\n
    *(v111) = &(&*(v111)->field_0)[v70];\n
    cgc_checkheap();\n
    cgc_free(v69);\n
    v56 = v106;\n
    v55 = a0;\n
    memset(&v53, 0, 4);\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = *(v56)->field_0;\n
    cgc_uint2str(&v53, 4, v54);\n
    v16 = &v53;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v112 = v55;\n
    *(v112) = *(v112) - 1;\n
    v113 = v56;\n
    *(v113) = &*(v113)->padding_1;\n
    v100 = v106;\n
    v99 = a0;\n
    memset(&v96, 0, 21);\n
    if (*(v99) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(v100);\n
    v98 = v114->field_4;\n
    v97 = *(&v114->field_0);\n
    cgc_uint2str(&v96, 21, v97);\n
    v15 = &v96;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v96)) < 0)\n
        cgc__terminate();\n
    v115 = v99;\n
    *(v115) = *(v115) - 8;\n
    v116 = v100;\n
    *(v116) = &(*(v116))[1].padding_1[2];\n
    v95 = v106;\n
    v94 = a0;\n
    memset(&v91, 0, 21);\n
    if (*(v94) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v117 = *(v95);\n
    v93 = v117->field_4;\n
    v92 = *(&v117->field_0);\n
    cgc_uint2str(&v91, 21, v92);\n
    v14 = &v91;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v118 = v94;\n
    *(v118) = *(v118) - 8;\n
    v119 = v95;\n
    *(v119) = &(*(v119))[1].padding_1[2];\n
    v90 = v106;\n
    v89 = a0;\n
    if (*(v89) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v89) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v89);\n
    v88 = v13;\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = cgc_calloc(134);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v87, &v17[18].padding_0[182]);\n
    cgc_strncpy(v87 + 5, *(v90), v88);\n
    v121 = v90;\n
    *(v121) = &(&*(v121)->field_4)[cgc_strlen(v87)];\n
    v123 = v89;\n
    *(v123) = *(v123) - (cgc_strlen(v87) + -4);\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v60 = v106;\n
    v59 = a0;\n
    memset(&v57, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v58 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v57, 21, v20);\n
    v12 = &v57;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v57)) < 0)\n
        cgc__terminate();\n
    v124 = v59;\n
    *(v124) = *(v124) - 8;\n
    v125 = v60;\n
    *(v125) = &(*(v125))[1].padding_1[2];\n
    v40 = v106;\n
    v39 = a0;\n
    *(&v36[0]) = *(v40);\n
    memset(&v35, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v36[0])\n
    {\n
        v11 = 0;\n
        if (v36[1])\n
        {\n
            v11 = 0;\n
            if (v36[2])\n
            {\n
                v11 = 0;\n
                if (v36[3])\n
                {\n
                    v11 = 0;\n
                    if (v36[4] << 24)\n
                    {\n
                        v11 = 0;\n
                        if (v36[5] << 16)\n
                        {\n
                            v11 = 0;\n
                            if (v36[6] << 8)\n
                                v11 = v36[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v37 = v11 & 1;\n
    v38 = 0;\n
    cgc_uint2str(&v35, 21, v37);\n
    v10 = &v35;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v126 = v39;\n
    *(v126) = *(v126) - 8;\n
    v127 = v40;\n
    *(v127) = &(*(v127))[1].padding_1[2];\n
    v104 = v106;\n
    v103 = a0;\n
    if (*(v103) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v102 = *(v104)->field_0;\n
    v128 = v103;\n
    *(v128) = *(v128) - 1;\n
    v129 = v104;\n
    *(v129) = &*(v129)->padding_1;\n
    if (v102 <= *(v103) && !(!v102))\n
        goto LABEL_47cfbc;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47cfbc:\n
    v101 = cgc_calloc(v102);\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v101, *(v104), v102);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v130 = v104;\n
    *(v130) = &(&*(v130)->field_0)[v102];\n
    v131 = v103;\n
    *(v131) = *(v131) - v102;\n
    cgc_checkheap();\n
    cgc_free(v101);\n
    v68 = v106;\n
    v67 = a0;\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v66 = *(&*(v68)->field_0);\n
    v132 = v67;\n
    *(v132) = *(v132) - 2;\n
    v133 = v68;\n
    *(v133) = &*(v133)->padding_1[1];\n
    if (v66 <= *(v67) && !(!v66))\n
        goto LABEL_47d1d5;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47d1d5:\n
    v65 = cgc_calloc(v66);\n
    if (!v65)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v65, *(v68), v66);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v134 = v67;\n
    *(v134) = *(v134) - v66;\n
    v135 = v68;\n
    *(v135) = &(&*(v135)->field_0)[v66];\n
    cgc_checkheap();\n
    cgc_free(v65);\n
    v28 = v106;\n
    v27 = a0;\n
    *(&v25) = *(v28);\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v25[0] << 8)\n
        v9 = v25[1];\n
    v26 = v9 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v8 = &v24;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v136 = v27;\n
    *(v136) = *(v136) - 2;\n
    v137 = v28;\n
    *(v137) = &*(v137)->padding_1[1];\n
    v48 = v106;\n
    v47 = a0;\n
    if (*(v47) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v46 = *(v48)->field_0;\n
    v138 = v47;\n
    *(v138) = *(v138) - 1;\n
    v139 = v48;\n
    *(v139) = &*(v139)->padding_1;\n
    if (v46 <= *(v47) && !(!v46))\n
        goto LABEL_47d594;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47d594:\n
    v45 = cgc_calloc(v46);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v45, *(v48), v46);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v140 = v48;\n
    *(v140) = &(&*(v140)->field_0)[v46];\n
    v141 = v47;\n
    *(v141) = *(v141) - v46;\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    v82 = v106;\n
    v81 = a0;\n
    *(&v79[0]) = *(v82);\n
    memset(&v78, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v79[0] << 24)\n
    {\n
        v7 = 0;\n
        if (v79[1] << 16)\n
        {\n
            v7 = 0;\n
            if (v79[2] << 8)\n
                v7 = v79[3];\n
        }\n
    }\n
    v80 = v7 & 1;\n
    cgc_uint2str(&v78, 12, v80);\n
    v6 = &v78;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v142 = v81;\n
    *(v142) = *(v142) - 4;\n
    v143 = v82;\n
    *(v143) = &*(v143)->field_4;\n
    v77 = v106;\n
    v76 = a0;\n
    v74 = &*(v77);\n
    memset(&v73, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v74->field_0 << 24)\n
    {\n
        v5 = 0;\n
        if (v74->padding_1[0] << 16)\n
        {\n
            v5 = 0;\n
            if (v74->padding_1[1] << 8)\n
                v5 = v74->padding_1[2];\n
        }\n
    }\n
    v75 = v5 & 1;\n
    cgc_uint2str(&v73, 12, v75);\n
    v4 = &v73;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v144 = v76;\n
    *(v144) = *(v144) - 4;\n
    v145 = v77;\n
    *(v145) = &*(v145)->field_4;\n
    v34 = v106;\n
    v33 = a0;\n
    *(&v30[0]) = *(v34);\n
    memset(&v29, 0, 21);\n
    if (*(v33) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v30[0])\n
    {\n
        v3 = 0;\n
        if (v30[1])\n
        {\n
            v3 = 0;\n
            if (v30[2])\n
            {\n
                v3 = 0;\n
                if (v30[3])\n
                {\n
                    v3 = 0;\n
                    if (v30[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v30[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v30[6] << 8)\n
                                v3 = v30[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v31 = v3 & 1;\n
    v32 = 0;\n
    cgc_uint2str(&v29, 21, v31);\n
    v2 = &v29;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v146 = v33;\n
    *(v146) = *(v146) - 8;\n
    v147 = v34;\n
    *(v147) = &(*(v147))[1].padding_1[2];\n
    v86 = v106;\n
    v85 = a0;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v85) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v85);\n
    v84 = v1;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v83, &v17[18].padding_0[182]);\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v149 = v86;\n
    *(v149) = &(&*(v149)->field_4)[cgc_strlen(v83)];\n
    v151 = v85;\n
    *(v151) = *(v151) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v52 = v106;\n
    v51 = a0;\n
    if (*(v51) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v51) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v51);\n
    v50 = v0;\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = cgc_calloc(134);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v49, &v17[18].padding_0[182]);\n
    cgc_strncpy(v49 + 5, *(v52), v50);\n
    v153 = v52;\n
    *(v153) = &(&*(v153)->field_4)[cgc_strlen(v49)];\n
    v155 = v51;\n
    *(v155) = *(v155) - (cgc_strlen(v49) + -4);\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v64 = v106;\n
    v63 = a0;\n
    if (*(v63) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v62 = *(&*(v64)->field_0);\n
    v156 = v63;\n
    *(v156) = *(v156) - 2;\n
    v157 = v64;\n
    *(v157) = &*(v157)->padding_1[1];\n
    if (v62 <= *(v63) && !(!v62))\n
        goto LABEL_47e282;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47e282:\n
    v61 = cgc_calloc(v62);\n
    if (!v61)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v61, *(v64), v62);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v158 = v63;\n
    *(v158) = *(v158) - v62;\n
    v159 = v64;\n
    *(v159) = &(&*(v159)->field_0)[v62];\n
    cgc_checkheap();\n
    cgc_free(v61);\n
    v44 = v106;\n
    v43 = a0;\n
    if (*(v43) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v42 = *(v44)->field_0;\n
    v160 = v43;\n
    *(v160) = *(v160) - 1;\n
    v161 = v44;\n
    *(v161) = &*(v161)->padding_1;\n
    if (v42 <= *(v43) && !(!v42))\n
        goto LABEL_47e4ba;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47e4ba:\n
    v41 = cgc_calloc(v42);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v41, *(v44), v42);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v162 = v44;\n
    *(v162) = &(&*(v162)->field_0)[v42];\n
    v163 = v43;\n
    *(v163) = *(v163) - v42;\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    v22 ^= v17->field_260;\n
    if (v22)\n
        cgc___stack_cookie_fail();\n
    v164 = a0;\n
    if (*(v164) > 0 && v21 >= 0 && v21 < 0)\n
        v164 = *((&v23 + 0x4 * v21))(v106);\n
    v165 = v105;\n
    return v164;\n
}\n
", "4712031:sub_47e65f": null, "4712032:cgc_process_llamaunderlease": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaunderlease(struct struct_2 **v19, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x7c]\n
    struct_3 *v1;  // [bp-0x78]\n
    struct_0 *v2;  // [bp-0x74]\n
    unsigned short v3;  // [bp-0x70]\n
    unsigned short v4;  // [bp-0x6e]\n
    unsigned long v5;  // [bp-0x6c]\n
    struct struct_1 **v6;  // [bp-0x64]\n
    unsigned int v7;  // [bp-0x60]\n
    char v8;  // [bp-0x5c]\n
    char v9;  // [bp-0x59]\n
    unsigned long v10;  // [bp-0x44]\n
    unsigned int *v11;  // [bp-0x3c]\n
    struct struct_2 **v12;  // [bp-0x38]\n
    char v13;  // [bp-0x31]\n
    unsigned int v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0x18]\n
    unsigned int *v16;  // [bp-0x10]\n
    struct struct_2 **v17;  // [bp-0xc]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v20;  // ebx\n
    unsigned int v21[2];  // ecx\n
    unsigned int *v22;  // eax\n
    struct struct_2 **v23;  // eax\n
    unsigned int *v24;  // eax\n
    struct struct_2 **v25;  // eax\n
    unsigned int *v26;  // eax, Other Possible Types: unsigned int\n
    unsigned int v27;  // ebx\n
\n
    v18 = v20;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = cgc__cookie;\n
    v6 = -1;\n
    if (cgc_sendline(1, \"===llamaunderlease===\", 21) < 0)\n
        cgc__terminate();\n
    v17 = v19;\n
    v16 = a0;\n
    memset(&v13, 0, 21);\n
    if (*(v16) < 8)\n
    {\n
        if (cgc_sendline(1, &v2[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = *(v17);\n
    v15 = v21[1];\n
    v14 = v21[0];\n
    cgc_uint2str(&v13, 21, v14);\n
    v1 = &v13;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v13)) < 0)\n
        cgc__terminate();\n
    v22 = v16;\n
    *(v22) = *(v22) - 8;\n
    v23 = v17;\n
    *(v23) = *(v23) + 1;\n
    v12 = v19;\n
    v11 = a0;\n
    memset(&v9, 0, 21);\n
    if (*(v11) < 8)\n
    {\n
        if (cgc_sendline(1, &v2[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v10 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v4 = [D] x86g_create_fpucw(fpround<4>);\n
    v3 = v4 | 0xc00;\n
    v5 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v9, 21, v5);\n
    v0 = &v9;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v9)) < 0)\n
        cgc__terminate();\n
    v24 = v11;\n
    *(v24) = *(v24) - 8;\n
    v25 = v12;\n
    *(v25) = *(v25) + 1;\n
    v7 ^= v2->field_260;\n
    if (v7)\n
        cgc___stack_cookie_fail();\n
    v26 = a0;\n
    if (*(v26) > 0 && v6 >= 0 && v6 < 0)\n
        v26 = *((&v8 + 0x4 * v6))(v19);\n
    v27 = v18;\n
    return v26;\n
}\n
", "4712789:sub_47e955": null, "4712800:cgc_process_llamasupersympathy": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasupersympathy(struct struct_1 **v116, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x264]\n
    struct_0 *v1;  // [bp-0x260]\n
    char v2;  // [bp-0x259]\n
    struct_0 *v3;  // [bp-0x258]\n
    char v4;  // [bp-0x251]\n
    struct_0 *v5;  // [bp-0x250]\n
    struct_0 *v6;  // [bp-0x24c]\n
    char v7;  // [bp-0x245]\n
    struct_0 *v8;  // [bp-0x244]\n
    char v9;  // [bp-0x23d]\n
    struct_0 *v10;  // [bp-0x23c]\n
    struct_0 *v11;  // [bp-0x238]\n
    struct_0 *v12;  // [bp-0x234]\n
    struct_0 *v13;  // [bp-0x230]\n
    char v14;  // [bp-0x229]\n
    struct_0 *v15;  // [bp-0x228]\n
    struct_0 *v16;  // [bp-0x224]\n
    char v17;  // [bp-0x21d]\n
    struct_0 *v18;  // [bp-0x21c]\n
    struct_0 *v19;  // [bp-0x218]\n
    char v20;  // [bp-0x211]\n
    struct_0 *v21;  // [bp-0x210]\n
    char v22;  // [bp-0x209]\n
    struct_3 *v23;  // [bp-0x208]\n
    unsigned short v24;  // [bp-0x204]\n
    unsigned short v25;  // [bp-0x202]\n
    unsigned short v26;  // [bp-0x200]\n
    unsigned short v27;  // [bp-0x1fe]\n
    unsigned long v28;  // [bp-0x1fc]\n
    unsigned long v29;  // [bp-0x1f4]\n
    struct struct_2 **v30;  // [bp-0x1e8]\n
    unsigned int v31;  // [bp-0x1e4]\n
    char v32;  // [bp-0x1e0]\n
    char v33;  // [bp-0x1de]\n
    char v34[2];  // [bp-0x1d8]\n
    unsigned short v35;  // [bp-0x1d2]\n
    unsigned int *v36;  // [bp-0x1d0]\n
    struct struct_1 **v37;  // [bp-0x1cc]\n
    char v38;  // [bp-0x1c6]\n
    char v39[2];  // [bp-0x1c0]\n
    unsigned short v40;  // [bp-0x1ba]\n
    unsigned int *v41;  // [bp-0x1b8]\n
    struct struct_1 **v42;  // [bp-0x1b4]\n
    char v43;  // [bp-0x1ad]\n
    char v44[8];  // [bp-0x198]\n
    unsigned int v45;  // [bp-0x194]\n
    void* v46;  // [bp-0x190]\n
    unsigned int *v47;  // [bp-0x188]\n
    struct struct_1 **v48;  // [bp-0x184]\n
    char v49;  // [bp-0x17d]\n
    char v50[8];  // [bp-0x168]\n
    unsigned int v51;  // [bp-0x164]\n
    void* v52;  // [bp-0x160]\n
    unsigned int *v53;  // [bp-0x15c]\n
    struct struct_1 **v54;  // [bp-0x158]\n
    char v55;  // [bp-0x154]\n
    unsigned short v56;  // [bp-0x14e]\n
    unsigned int *v57;  // [bp-0x14c]\n
    struct struct_1 **v58;  // [bp-0x148]\n
    char v59;  // [bp-0x144]\n
    unsigned short v60;  // [bp-0x13e]\n
    unsigned int *v61;  // [bp-0x13c]\n
    struct struct_1 **v62;  // [bp-0x138]\n
    char v63;  // [bp-0x134]\n
    unsigned short v64;  // [bp-0x12e]\n
    unsigned int *v65;  // [bp-0x12c]\n
    struct struct_1 **v66;  // [bp-0x128]\n
    char v67;  // [bp-0x121]\n
    char v68;  // [bp-0x11d]\n
    unsigned int *v69;  // [bp-0x11c]\n
    struct struct_1 **v70;  // [bp-0x118]\n
    char v71;  // [bp-0x111]\n
    unsigned long v72;  // [bp-0xfc]\n
    unsigned int *v73;  // [bp-0xf4]\n
    struct struct_1 **v74;  // [bp-0xf0]\n
    char v75;  // [bp-0xe9]\n
    unsigned long v76;  // [bp-0xd4]\n
    unsigned int *v77;  // [bp-0xc8]\n
    struct struct_1 **v78;  // [bp-0xc4]\n
    char v79;  // [bp-0xc0]\n
    unsigned int v80;  // [bp-0xb4]\n
    unsigned int *v81;  // [bp-0xb0]\n
    struct struct_1 **v82;  // [bp-0xac]\n
    unsigned int v83;  // [bp-0xa8]\n
    unsigned short v84;  // [bp-0xa2]\n
    unsigned int *v85;  // [bp-0xa0]\n
    struct struct_1 **v86;  // [bp-0x9c]\n
    unsigned int v87;  // [bp-0x98]\n
    unsigned short v88;  // [bp-0x92]\n
    unsigned int *v89;  // [bp-0x90]\n
    struct struct_1 **v90;  // [bp-0x8c]\n
    char v91;  // [bp-0x88]\n
    char v92[4];  // [bp-0x7c]\n
    unsigned int v93;  // [bp-0x78]\n
    unsigned int *v94;  // [bp-0x74]\n
    struct struct_1 **v95;  // [bp-0x70]\n
    char v96;  // [bp-0x6c]\n
    char v97[4];  // [bp-0x60]\n
    unsigned int v98;  // [bp-0x5c]\n
    unsigned int *v99;  // [bp-0x58]\n
    struct struct_1 **v100;  // [bp-0x54]\n
    char v101;  // [bp-0x50]\n
    char v102[4];  // [bp-0x44]\n
    unsigned int v103;  // [bp-0x40]\n
    unsigned int *v104;  // [bp-0x3c]\n
    struct struct_1 **v105;  // [bp-0x38]\n
    char v106;  // [bp-0x34]\n
    char v107[4];  // [bp-0x28]\n
    unsigned int v108;  // [bp-0x24]\n
    unsigned int *v109;  // [bp-0x20]\n
    struct struct_1 **v110;  // [bp-0x1c]\n
    unsigned int v111;  // [bp-0x18]\n
    char v112;  // [bp-0x11]\n
    unsigned int *v113;  // [bp-0x10]\n
    struct struct_1 **v114;  // [bp-0xc]\n
    unsigned int v115;  // [bp-0x8]\n
    unsigned int v117;  // ebx\n
    unsigned int *v118;  // eax\n
    struct struct_1 **v119;  // eax\n
    unsigned int *v120;  // eax\n
    struct struct_1 **v121;  // eax\n
    unsigned int *v122;  // eax\n
    struct struct_1 **v123;  // eax\n
    unsigned int *v124;  // eax\n
    struct struct_1 **v125;  // eax\n
    unsigned int *v126;  // eax\n
    struct struct_1 **v127;  // eax\n
    unsigned int *v128;  // eax\n
    struct struct_1 **v129;  // eax\n
    unsigned int *v130;  // eax\n
    struct struct_1 **v131;  // eax\n
    unsigned int *v132;  // eax\n
    struct struct_1 **v133;  // eax\n
    unsigned int *v134;  // eax\n
    struct struct_1 **v135;  // eax\n
    unsigned int *v136;  // eax\n
    struct struct_1 **v137;  // eax\n
    unsigned int *v138;  // eax\n
    struct struct_1 **v139;  // eax\n
    unsigned int *v140;  // eax\n
    struct struct_1 **v141;  // eax\n
    struct struct_1 **v142;  // eax\n
    unsigned int *v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_1 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_1 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_1 **v149;  // eax\n
    unsigned int *v150;  // eax\n
    struct struct_1 **v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_1 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_1 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_1 **v157;  // eax\n
    unsigned int *v158;  // eax\n
    struct struct_1 **v159;  // eax\n
    unsigned int *v160;  // eax, Other Possible Types: unsigned int\n
    unsigned int v161;  // ebx\n
\n
    v115 = v117;\n
    v23 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v31 = cgc__cookie;\n
    v30 = -1;\n
    if (cgc_sendline(1, \"===llamasupersympathy===\", 24) < 0)\n
        cgc__terminate();\n
    v42 = v116;\n
    v41 = a0;\n
    *(&v39) = *(v42);\n
    memset(&v38, 0, 6);\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v39[0] << 8)\n
        v22 = v39[1];\n
    v40 = v22 & 1;\n
    cgc_uint2str(&v38, 6, v40);\n
    v21 = &v38;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v118 = v41;\n
    *(v118) = *(v118) - 2;\n
    v119 = v42;\n
    *(v119) = &*(v119)->padding_1[1];\n
    v110 = v116;\n
    v109 = a0;\n
    *(&v107[0]) = *(v110);\n
    memset(&v106, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v107[0] << 24)\n
    {\n
        v20 = 0;\n
        if (v107[1] << 16)\n
        {\n
            v20 = 0;\n
            if (v107[2] << 8)\n
                v20 = v107[3];\n
        }\n
    }\n
    v108 = v20 & 1;\n
    cgc_uint2str(&v106, 12, v108);\n
    v19 = &v106;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v120 = v109;\n
    *(v120) = *(v120) - 4;\n
    v121 = v110;\n
    *(v121) = &*(v121)->field_4;\n
    v66 = v116;\n
    v65 = a0;\n
    memset(&v63, 0, 6);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    cgc_uint2str(&v63, 6, v64);\n
    v18 = &v63;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v122 = v65;\n
    *(v122) = *(v122) - 2;\n
    v123 = v66;\n
    *(v123) = &*(v123)->padding_1[1];\n
    v105 = v116;\n
    v104 = a0;\n
    *(&v102[0]) = *(v105);\n
    memset(&v101, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v102[0] << 24)\n
    {\n
        v17 = 0;\n
        if (v102[1] << 16)\n
        {\n
            v17 = 0;\n
            if (v102[2] << 8)\n
                v17 = v102[3];\n
        }\n
    }\n
    v103 = v17 & 1;\n
    cgc_uint2str(&v101, 12, v103);\n
    v16 = &v101;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v101)) < 0)\n
        cgc__terminate();\n
    v124 = v104;\n
    *(v124) = *(v124) - 4;\n
    v125 = v105;\n
    *(v125) = &*(v125)->field_4;\n
    v90 = v116;\n
    v89 = a0;\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    v126 = v89;\n
    *(v126) = *(v126) - 2;\n
    v127 = v90;\n
    *(v127) = &*(v127)->padding_1[1];\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_47f0d6;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47f0d6:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, &v23[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v128 = v89;\n
    *(v128) = *(v128) - v88;\n
    v129 = v90;\n
    *(v129) = &(&*(v129)->field_0)[v88];\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v62 = v116;\n
    v61 = a0;\n
    memset(&v59, 0, 6);\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(&*(v62)->field_0);\n
    cgc_uint2str(&v59, 6, v60);\n
    v15 = &v59;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v130 = v61;\n
    *(v130) = *(v130) - 2;\n
    v131 = v62;\n
    *(v131) = &*(v131)->padding_1[1];\n
    v54 = v116;\n
    v53 = a0;\n
    *(&v50[0]) = *(v54);\n
    memset(&v49, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v50[0])\n
    {\n
        v14 = 0;\n
        if (v50[1])\n
        {\n
            v14 = 0;\n
            if (v50[2])\n
            {\n
                v14 = 0;\n
                if (v50[3])\n
                {\n
                    v14 = 0;\n
                    if (v50[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v50[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v50[6] << 8)\n
                                v14 = v50[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v51 = v14 & 1;\n
    v52 = 0;\n
    cgc_uint2str(&v49, 21, v51);\n
    v13 = &v49;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v132 = v53;\n
    *(v132) = *(v132) - 8;\n
    v133 = v54;\n
    *(v133) = *(v133) + 1;\n
    v82 = v116;\n
    v81 = a0;\n
    memset(&v79, 0, 12);\n
    if (*(v81) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(&*(v82)->field_0);\n
    cgc_uint2str(&v79, 12, v80);\n
    v12 = &v79;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v134 = v81;\n
    *(v134) = *(v134) - 4;\n
    v135 = v82;\n
    *(v135) = &*(v135)->field_4;\n
    v70 = v116;\n
    v69 = a0;\n
    memset(&v67, 0, 4);\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(v70)->field_0;\n
    cgc_uint2str(&v67, 4, v68);\n
    v11 = &v67;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v136 = v69;\n
    *(v136) = *(v136) - 1;\n
    v137 = v70;\n
    *(v137) = &*(v137)->padding_1;\n
    v78 = v116;\n
    v77 = a0;\n
    memset(&v75, 0, 21);\n
    if (*(v77) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v76 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v27 = [D] x86g_create_fpucw(fpround<4>);\n
    v26 = v27 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v75, 21, v29);\n
    v10 = &v75;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v138 = v77;\n
    *(v138) = *(v138) - 8;\n
    v139 = v78;\n
    *(v139) = *(v139) + 1;\n
    v114 = v116;\n
    v113 = a0;\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(v114)->field_0;\n
    v140 = v113;\n
    *(v140) = *(v140) - 1;\n
    v141 = v114;\n
    *(v141) = &*(v141)->padding_1;\n
    if (v112 <= *(v113) && !(!v112))\n
        goto LABEL_47fa79;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_47fa79:\n
    v111 = cgc_calloc(v112);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v111, *(v114), v112);\n
    if (cgc_sendline(1, &v23[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v142 = v114;\n
    *(v142) = &(&*(v142)->field_0)[v112];\n
    v143 = v113;\n
    *(v143) = *(v143) - v112;\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    v48 = v116;\n
    v47 = a0;\n
    *(&v44[0]) = *(v48);\n
    memset(&v43, 0, 21);\n
    if (*(v47) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v44[0])\n
    {\n
        v9 = 0;\n
        if (v44[1])\n
        {\n
            v9 = 0;\n
            if (v44[2])\n
            {\n
                v9 = 0;\n
                if (v44[3])\n
                {\n
                    v9 = 0;\n
                    if (v44[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v44[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v44[6] << 8)\n
                                v9 = v44[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v45 = v9 & 1;\n
    v46 = 0;\n
    cgc_uint2str(&v43, 21, v45);\n
    v8 = &v43;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v43)) < 0)\n
        cgc__terminate();\n
    v144 = v47;\n
    *(v144) = *(v144) - 8;\n
    v145 = v48;\n
    *(v145) = *(v145) + 1;\n
    v100 = v116;\n
    v99 = a0;\n
    *(&v97[0]) = *(v100);\n
    memset(&v96, 0, 12);\n
    if (*(v99) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v97[0] << 24)\n
    {\n
        v7 = 0;\n
        if (v97[1] << 16)\n
        {\n
            v7 = 0;\n
            if (v97[2] << 8)\n
                v7 = v97[3];\n
        }\n
    }\n
    v98 = v7 & 1;\n
    cgc_uint2str(&v96, 12, v98);\n
    v6 = &v96;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v96)) < 0)\n
        cgc__terminate();\n
    v146 = v99;\n
    *(v146) = *(v146) - 4;\n
    v147 = v100;\n
    *(v147) = &*(v147)->field_4;\n
    v58 = v116;\n
    v57 = a0;\n
    memset(&v55, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(&*(v58)->field_0);\n
    cgc_uint2str(&v55, 6, v56);\n
    v5 = &v55;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v148 = v57;\n
    *(v148) = *(v148) - 2;\n
    v149 = v58;\n
    *(v149) = &*(v149)->padding_1[1];\n
    v86 = v116;\n
    v85 = a0;\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(&*(v86)->field_0);\n
    v150 = v85;\n
    *(v150) = *(v150) - 2;\n
    v151 = v86;\n
    *(v151) = &*(v151)->padding_1[1];\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_4801ae;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4801ae:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, &v23[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v152 = v85;\n
    *(v152) = *(v152) - v84;\n
    v153 = v86;\n
    *(v153) = &(&*(v153)->field_0)[v84];\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v95 = v116;\n
    v94 = a0;\n
    *(&v92[0]) = *(v95);\n
    memset(&v91, 0, 12);\n
    if (*(v94) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v92[0] << 24)\n
    {\n
        v4 = 0;\n
        if (v92[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v92[2] << 8)\n
                v4 = v92[3];\n
        }\n
    }\n
    v93 = v4 & 1;\n
    cgc_uint2str(&v91, 12, v93);\n
    v3 = &v91;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v154 = v94;\n
    *(v154) = *(v154) - 4;\n
    v155 = v95;\n
    *(v155) = &*(v155)->field_4;\n
    v37 = v116;\n
    v36 = a0;\n
    *(&v34) = *(v37);\n
    memset(&v33, 0, 6);\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v34[0] << 8)\n
        v2 = v34[1];\n
    v35 = v2 & 1;\n
    cgc_uint2str(&v33, 6, v35);\n
    v1 = &v33;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v33)) < 0)\n
        cgc__terminate();\n
    v156 = v36;\n
    *(v156) = *(v156) - 2;\n
    v157 = v37;\n
    *(v157) = &*(v157)->padding_1[1];\n
    v74 = v116;\n
    v73 = a0;\n
    memset(&v71, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v72 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v25 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-510, size=2, endness=Iend_LE)))));\n
    v24 = v25 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v71, 21, v28);\n
    v0 = &v71;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v158 = v73;\n
    *(v158) = *(v158) - 8;\n
    v159 = v74;\n
    *(v159) = *(v159) + 1;\n
    v31 ^= v23->field_260;\n
    if (v31)\n
        cgc___stack_cookie_fail();\n
    v160 = a0;\n
    if (*(v160) > 0 && v30 >= 0 && v30 < 0)\n
        v160 = *((&v32 + 0x4 * v30))(v116);\n
    v161 = v115;\n
    return v160;\n
}\n
", "4720616:sub_4807e8": null, "4720624:cgc_process_llamamegasporic": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamamegasporic(struct struct_1 **v139, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c8]\n
    struct_0 *v1;  // [bp-0x2c4]\n
    struct_0 *v2;  // [bp-0x2c0]\n
    struct_0 *v3;  // [bp-0x2bc]\n
    struct_0 *v4;  // [bp-0x2b8]\n
    unsigned int v5;  // [bp-0x2b4]\n
    struct_0 *v6;  // [bp-0x2b0]\n
    struct_0 *v7;  // [bp-0x2ac]\n
    struct_0 *v8;  // [bp-0x2a8]\n
    struct_0 *v9;  // [bp-0x2a4]\n
    struct_0 *v10;  // [bp-0x2a0]\n
    char v11;  // [bp-0x299]\n
    struct_0 *v12;  // [bp-0x298]\n
    unsigned int v13;  // [bp-0x294]\n
    unsigned int v14;  // [bp-0x290]\n
    struct_0 *v15;  // [bp-0x28c]\n
    unsigned int v16;  // [bp-0x288]\n
    struct_0 *v17;  // [bp-0x284]\n
    struct_0 *v18;  // [bp-0x280]\n
    struct_0 *v19;  // [bp-0x27c]\n
    struct_3 *v20;  // [bp-0x278]\n
    unsigned short v21;  // [bp-0x274]\n
    unsigned short v22;  // [bp-0x272]\n
    unsigned short v23;  // [bp-0x270]\n
    unsigned short v24;  // [bp-0x26e]\n
    unsigned short v25;  // [bp-0x26c]\n
    unsigned short v26;  // [bp-0x26a]\n
    unsigned short v27;  // [bp-0x268]\n
    unsigned short v28;  // [bp-0x266]\n
    unsigned short v29;  // [bp-0x264]\n
    unsigned short v30;  // [bp-0x262]\n
    unsigned short v31;  // [bp-0x260]\n
    unsigned short v32;  // [bp-0x25e]\n
    unsigned long v33;  // [bp-0x25c]\n
    unsigned long v34;  // [bp-0x254]\n
    unsigned long v35;  // [bp-0x24c]\n
    unsigned long v36;  // [bp-0x244]\n
    unsigned long v37;  // [bp-0x23c]\n
    unsigned long v38;  // [bp-0x234]\n
    struct struct_2 **v39;  // [bp-0x22c]\n
    unsigned int v40;  // [bp-0x228]\n
    char v41;  // [bp-0x224]\n
    char v42;  // [bp-0x222]\n
    struct_1 *v43;  // [bp-0x21c]\n
    unsigned short v44;  // [bp-0x216]\n
    unsigned int *v45;  // [bp-0x214]\n
    struct struct_1 **v46;  // [bp-0x210]\n
    unsigned int v47;  // [bp-0x20c]\n
    char v48;  // [bp-0x205]\n
    unsigned int *v49;  // [bp-0x204]\n
    struct struct_1 **v50;  // [bp-0x200]\n
    unsigned int v51;  // [bp-0x1fc]\n
    char v52;  // [bp-0x1f5]\n
    unsigned int *v53;  // [bp-0x1f4]\n
    struct struct_1 **v54;  // [bp-0x1f0]\n
    unsigned int v55;  // [bp-0x1ec]\n
    char v56;  // [bp-0x1e5]\n
    unsigned int *v57;  // [bp-0x1e4]\n
    struct struct_1 **v58;  // [bp-0x1e0]\n
    char *v59;  // [bp-0x1dc]\n
    unsigned int v60;  // [bp-0x1d8]\n
    unsigned int *v61;  // [bp-0x1d4]\n
    struct struct_1 **v62;  // [bp-0x1d0]\n
    char *v63;  // [bp-0x1cc]\n
    unsigned int v64;  // [bp-0x1c8]\n
    unsigned int *v65;  // [bp-0x1c4]\n
    struct struct_1 **v66;  // [bp-0x1c0]\n
    char v67;  // [bp-0x1bc]\n
    unsigned short v68;  // [bp-0x1b6]\n
    unsigned int *v69;  // [bp-0x1b4]\n
    struct struct_1 **v70;  // [bp-0x1b0]\n
    char v71;  // [bp-0x1a9]\n
    char v72;  // [bp-0x1a5]\n
    unsigned int *v73;  // [bp-0x1a4]\n
    struct struct_1 **v74;  // [bp-0x1a0]\n
    char v75;  // [bp-0x199]\n
    char v76;  // [bp-0x195]\n
    unsigned int *v77;  // [bp-0x194]\n
    struct struct_1 **v78;  // [bp-0x190]\n
    char v79;  // [bp-0x189]\n
    unsigned long v80;  // [bp-0x174]\n
    unsigned int *v81;  // [bp-0x16c]\n
    struct struct_1 **v82;  // [bp-0x168]\n
    char v83;  // [bp-0x161]\n
    unsigned long v84;  // [bp-0x14c]\n
    unsigned int *v85;  // [bp-0x144]\n
    struct struct_1 **v86;  // [bp-0x140]\n
    char v87;  // [bp-0x13c]\n
    unsigned int v88;  // [bp-0x130]\n
    unsigned int *v89;  // [bp-0x12c]\n
    struct struct_1 **v90;  // [bp-0x128]\n
    char v91;  // [bp-0x124]\n
    unsigned int v92;  // [bp-0x118]\n
    unsigned int *v93;  // [bp-0x114]\n
    struct struct_1 **v94;  // [bp-0x110]\n
    char v95;  // [bp-0x10c]\n
    unsigned int v96;  // [bp-0x100]\n
    unsigned int *v97;  // [bp-0xfc]\n
    struct struct_1 **v98;  // [bp-0xf8]\n
    char v99;  // [bp-0xf4]\n
    unsigned int v100;  // [bp-0xe8]\n
    unsigned int *v101;  // [bp-0xe4]\n
    struct struct_1 **v102;  // [bp-0xe0]\n
    char v103;  // [bp-0xdc]\n
    unsigned int v104;  // [bp-0xd0]\n
    unsigned int *v105;  // [bp-0xcc]\n
    struct struct_1 **v106;  // [bp-0xc8]\n
    unsigned int v107;  // [bp-0xc4]\n
    unsigned short v108;  // [bp-0xbe]\n
    unsigned int *v109;  // [bp-0xbc]\n
    struct struct_1 **v110;  // [bp-0xb8]\n
    char *v111;  // [bp-0xb4]\n
    unsigned int v112;  // [bp-0xb0]\n
    unsigned int *v113;  // [bp-0xac]\n
    struct struct_1 **v114;  // [bp-0xa8]\n
    char *v115;  // [bp-0xa4]\n
    unsigned int v116;  // [bp-0xa0]\n
    unsigned int *v117;  // [bp-0x9c]\n
    struct struct_1 **v118;  // [bp-0x98]\n
    char *v119;  // [bp-0x94]\n
    unsigned int v120;  // [bp-0x90]\n
    unsigned int *v121;  // [bp-0x8c]\n
    struct struct_1 **v122;  // [bp-0x88]\n
    char v123;  // [bp-0x81]\n
    unsigned int v124;  // [bp-0x6c]\n
    unsigned int v125;  // [bp-0x68]\n
    unsigned int *v126;  // [bp-0x64]\n
    struct struct_1 **v127;  // [bp-0x60]\n
    char v128;  // [bp-0x59]\n
    unsigned int v129;  // [bp-0x44]\n
    unsigned int v130;  // [bp-0x40]\n
    unsigned int *v131;  // [bp-0x3c]\n
    struct struct_1 **v132;  // [bp-0x38]\n
    char v133;  // [bp-0x31]\n
    unsigned int v134;  // [bp-0x1c]\n
    unsigned int v135;  // [bp-0x18]\n
    unsigned int *v136;  // [bp-0x10]\n
    struct struct_1 **v137;  // [bp-0xc]\n
    unsigned int v138;  // [bp-0x8]\n
    unsigned int v140;  // ebx\n
    struct_1 *v141;  // ecx\n
    unsigned int *v142;  // eax\n
    struct struct_1 **v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_1 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_1 **v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_1 **v149;  // eax\n
    unsigned int *v150;  // eax\n
    struct struct_1 **v151;  // eax\n
    struct struct_1 **v153;  // eax\n
    unsigned int *v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_1 **v157;  // eax\n
    struct struct_1 **v159;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_1 **v163;  // eax\n
    unsigned int *v165;  // eax\n
    unsigned int *v166;  // eax\n
    struct struct_1 **v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_1 **v169;  // eax\n
    struct struct_1 **v170;  // eax\n
    unsigned int *v171;  // eax\n
    unsigned int *v172;  // eax\n
    struct struct_1 **v173;  // eax\n
    struct struct_1 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_1 **v177;  // eax\n
    unsigned int v178[2];  // ecx\n
    unsigned int *v179;  // eax\n
    struct struct_1 **v180;  // eax\n
    unsigned int *v181;  // eax\n
    struct struct_1 **v182;  // eax\n
    struct struct_1 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    unsigned int *v185;  // eax\n
    struct struct_1 **v186;  // eax\n
    unsigned int v187[2];  // ecx\n
    unsigned int *v188;  // eax\n
    struct struct_1 **v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_1 **v191;  // eax\n
    struct struct_1 **v193;  // eax\n
    unsigned int *v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_1 **v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_1 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_1 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    struct struct_1 **v203;  // eax\n
    struct struct_1 **v205;  // eax\n
    unsigned int *v207;  // eax\n
    unsigned int *v208;  // eax, Other Possible Types: unsigned int\n
    unsigned int v209;  // ebx\n
\n
    v138 = v140;\n
    v20 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v40 = cgc__cookie;\n
    v39 = -1;\n
    if (cgc_sendline(1, \"===llamamegasporic===\", 21) < 0)\n
        cgc__terminate();\n
    v137 = v139;\n
    v136 = a0;\n
    memset(&v133, 0, 21);\n
    if (*(v136) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = *(v137);\n
    v135 = v141->field_4;\n
    v134 = *(&v141->field_0);\n
    cgc_uint2str(&v133, 21, v134);\n
    v19 = &v133;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v133)) < 0)\n
        cgc__terminate();\n
    v142 = v136;\n
    *(v142) = *(v142) - 8;\n
    v143 = v137;\n
    *(v143) = *(v143) + 1;\n
    v110 = v139;\n
    v109 = a0;\n
    if (*(v109) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(&*(v110)->field_0);\n
    v144 = v109;\n
    *(v144) = *(v144) - 2;\n
    v145 = v110;\n
    *(v145) = &*(v145)->padding_1[1];\n
    if (v108 <= *(v109) && !(!v108))\n
        goto LABEL_480aa2;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_480aa2:\n
    v107 = cgc_calloc(v108);\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v107, *(v110), v108);\n
    if (cgc_sendline(1, &v20[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v146 = v109;\n
    *(v146) = *(v146) - v108;\n
    v147 = v110;\n
    *(v147) = &(&*(v147)->field_0)[v108];\n
    cgc_checkheap();\n
    cgc_free(v107);\n
    v106 = v139;\n
    v105 = a0;\n
    memset(&v103, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v104 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(fpround<4>);\n
    v31 = v32 | 0xc00;\n
    v38 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v103, 12, v38);\n
    v18 = &v103;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v148 = v105;\n
    *(v148) = *(v148) - 4;\n
    v149 = v106;\n
    *(v149) = &*(v149)->field_4;\n
    v102 = v139;\n
    v101 = a0;\n
    memset(&v99, 0, 12);\n
    if (*(v101) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v100 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v30 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-606, size=2, endness=Iend_LE)))));\n
    v29 = v30 | 0xc00;\n
    v37 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v99, 12, v37);\n
    v17 = &v99;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v150 = v101;\n
    *(v150) = *(v150) - 4;\n
    v151 = v102;\n
    *(v151) = &*(v151)->field_4;\n
    v66 = v139;\n
    v65 = a0;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v65) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v65);\n
    v64 = v16;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v63, &v20[18].padding_0[182]);\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v153 = v66;\n
    *(v153) = -4 + cgc_strlen(v63) + *(v153);\n
    v155 = v65;\n
    *(v155) = *(v155) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v78 = v139;\n
    v77 = a0;\n
    memset(&v75, 0, 4);\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    cgc_uint2str(&v75, 4, v76);\n
    v15 = &v75;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v156 = v77;\n
    *(v156) = *(v156) - 1;\n
    v157 = v78;\n
    *(v157) = &*(v157)->padding_1;\n
    v122 = v139;\n
    v121 = a0;\n
    if (*(v121) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v121) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v121);\n
    v120 = v14;\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = cgc_calloc(134);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v119, &v20[18].padding_0[182]);\n
    cgc_strncpy(v119 + 5, *(v122), v120);\n
    v159 = v122;\n
    *(v159) = -4 + cgc_strlen(v119) + *(v159);\n
    v161 = v121;\n
    *(v161) = *(v161) - (cgc_strlen(v119) + -4);\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v118 = v139;\n
    v117 = a0;\n
    if (*(v117) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v117) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v117);\n
    v116 = v13;\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = cgc_calloc(134);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v115, &v20[18].padding_0[182]);\n
    cgc_strncpy(v115 + 5, *(v118), v116);\n
    v163 = v118;\n
    *(v163) = -4 + cgc_strlen(v115) + *(v163);\n
    v165 = v117;\n
    *(v165) = *(v165) - (cgc_strlen(v115) + -4);\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v70 = v139;\n
    v69 = a0;\n
    memset(&v67, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(&*(v70)->field_0);\n
    cgc_uint2str(&v67, 6, v68);\n
    v12 = &v67;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v166 = v69;\n
    *(v166) = *(v166) - 2;\n
    v167 = v70;\n
    *(v167) = &*(v167)->padding_1[1];\n
    v58 = v139;\n
    v57 = a0;\n
    if (*(v57) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(v58)->field_0;\n
    v168 = v57;\n
    *(v168) = *(v168) - 1;\n
    v169 = v58;\n
    *(v169) = &*(v169)->padding_1;\n
    if (v56 <= *(v57) && !(!v56))\n
        goto LABEL_4819cf;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4819cf:\n
    v55 = cgc_calloc(v56);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v55, *(v58), v56);\n
    if (cgc_sendline(1, &v20[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v170 = v58;\n
    *(v170) = &(&*(v170)->field_0)[v56];\n
    v171 = v57;\n
    *(v171) = *(v171) - v56;\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    v54 = v139;\n
    v53 = a0;\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = *(v54)->field_0;\n
    v172 = v53;\n
    *(v172) = *(v172) - 1;\n
    v173 = v54;\n
    *(v173) = &*(v173)->padding_1;\n
    if (v52 <= *(v53) && !(!v52))\n
        goto LABEL_481c07;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_481c07:\n
    v51 = cgc_calloc(v52);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v51, *(v54), v52);\n
    if (cgc_sendline(1, &v20[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v174 = v54;\n
    *(v174) = &(&*(v174)->field_0)[v52];\n
    v175 = v53;\n
    *(v175) = *(v175) - v52;\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    v46 = v139;\n
    v45 = a0;\n
    v43 = *(v46);\n
    memset(&v42, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v43->field_0 << 8)\n
        v11 = v43->padding_1[0];\n
    v44 = v11 & 1;\n
    cgc_uint2str(&v42, 6, v44);\n
    v10 = &v42;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v42)) < 0)\n
        cgc__terminate();\n
    v176 = v45;\n
    *(v176) = *(v176) - 2;\n
    v177 = v46;\n
    *(v177) = &*(v177)->padding_1[1];\n
    v132 = v139;\n
    v131 = a0;\n
    memset(&v128, 0, 21);\n
    if (*(v131) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(v132);\n
    v130 = v178[1];\n
    v129 = v178[0];\n
    cgc_uint2str(&v128, 21, v129);\n
    v9 = &v128;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v179 = v131;\n
    *(v179) = *(v179) - 8;\n
    v180 = v132;\n
    *(v180) = *(v180) + 1;\n
    v50 = v139;\n
    v49 = a0;\n
    if (*(v49) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v48 = *(v50)->field_0;\n
    v181 = v49;\n
    *(v181) = *(v181) - 1;\n
    v182 = v50;\n
    *(v182) = &*(v182)->padding_1;\n
    if (v48 <= *(v49) && !(!v48))\n
        goto LABEL_4820eb;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4820eb:\n
    v47 = cgc_calloc(v48);\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v47, *(v50), v48);\n
    if (cgc_sendline(1, &v20[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v183 = v50;\n
    *(v183) = &(&*(v183)->field_0)[v48];\n
    v184 = v49;\n
    *(v184) = *(v184) - v48;\n
    cgc_checkheap();\n
    cgc_free(v47);\n
    v98 = v139;\n
    v97 = a0;\n
    memset(&v95, 0, 12);\n
    if (*(v97) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v96 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v28 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-610, size=2, endness=Iend_LE)))));\n
    v27 = v28 | 0xc00;\n
    v36 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v95, 12, v36);\n
    v8 = &v95;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v185 = v97;\n
    *(v185) = *(v185) - 4;\n
    v186 = v98;\n
    *(v186) = &*(v186)->field_4;\n
    v127 = v139;\n
    v126 = a0;\n
    memset(&v123, 0, 21);\n
    if (*(v126) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v187 = *(v127);\n
    v125 = v187[1];\n
    v124 = v187[0];\n
    cgc_uint2str(&v123, 21, v124);\n
    v7 = &v123;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v188 = v126;\n
    *(v188) = *(v188) - 8;\n
    v189 = v127;\n
    *(v189) = *(v189) + 1;\n
    v86 = v139;\n
    v85 = a0;\n
    memset(&v83, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v84 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v26 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-614, size=2, endness=Iend_LE)))));\n
    v25 = v26 | 0xc00;\n
    v35 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v83, 21, v35);\n
    v6 = &v83;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v190 = v85;\n
    *(v190) = *(v190) - 8;\n
    v191 = v86;\n
    *(v191) = *(v191) + 1;\n
    v114 = v139;\n
    v113 = a0;\n
    if (*(v113) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v113) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v113);\n
    v112 = v5;\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = cgc_calloc(134);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v111, &v20[18].padding_0[182]);\n
    cgc_strncpy(v111 + 5, *(v114), v112);\n
    v193 = v114;\n
    *(v193) = -4 + cgc_strlen(v111) + *(v193);\n
    v195 = v113;\n
    *(v195) = *(v195) - (cgc_strlen(v111) + -4);\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v94 = v139;\n
    v93 = a0;\n
    memset(&v91, 0, 12);\n
    if (*(v93) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v92 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v24 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-618, size=2, endness=Iend_LE)))));\n
    v23 = v24 | 0xc00;\n
    v34 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v91, 12, v34);\n
    v4 = &v91;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v196 = v93;\n
    *(v196) = *(v196) - 4;\n
    v197 = v94;\n
    *(v197) = &*(v197)->field_4;\n
    v82 = v139;\n
    v81 = a0;\n
    memset(&v79, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v22 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-622, size=2, endness=Iend_LE)))));\n
    v21 = v22 | 0xc00;\n
    v33 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v79, 21, v33);\n
    v3 = &v79;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v198 = v81;\n
    *(v198) = *(v198) - 8;\n
    v199 = v82;\n
    *(v199) = *(v199) + 1;\n
    v90 = v139;\n
    v89 = a0;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 12, v88);\n
    v2 = &v87;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v200 = v89;\n
    *(v200) = *(v200) - 4;\n
    v201 = v90;\n
    *(v201) = &*(v201)->field_4;\n
    v74 = v139;\n
    v73 = a0;\n
    memset(&v71, 0, 4);\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(v74)->field_0;\n
    cgc_uint2str(&v71, 4, v72);\n
    v1 = &v71;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v202 = v73;\n
    *(v202) = *(v202) - 1;\n
    v203 = v74;\n
    *(v203) = &*(v203)->padding_1;\n
    v62 = v139;\n
    v61 = a0;\n
    if (*(v61) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v61) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v61);\n
    v60 = v0;\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = cgc_calloc(134);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v59, &v20[18].padding_0[182]);\n
    cgc_strncpy(v59 + 5, *(v62), v60);\n
    v205 = v62;\n
    *(v205) = -4 + cgc_strlen(v59) + *(v205);\n
    v207 = v61;\n
    *(v207) = *(v207) - (cgc_strlen(v59) + -4);\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v40 ^= v20->field_260;\n
    if (v40)\n
        cgc___stack_cookie_fail();\n
    v208 = a0;\n
    if (*(v208) > 0 && v39 >= 0 && v39 < 0)\n
        v208 = *((&v41 + 0x4 * v39))(v139);\n
    v209 = v138;\n
    return v208;\n
}\n
", "4731150:sub_48310e": null, "4731152:cgc_process_llamaboll": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaboll(struct struct_0 **v45, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xcc]\n
    char v1;  // [bp-0xc5]\n
    struct_1 *v2;  // [bp-0xc4]\n
    struct_1 *v3;  // [bp-0xc0]\n
    struct_1 *v4;  // [bp-0xbc]\n
    unsigned int v5;  // [bp-0xb8]\n
    unsigned int v6;  // [bp-0xb4]\n
    struct_1 *v7;  // [bp-0xb0]\n
    struct_2 *v8;  // [bp-0xac]\n
    unsigned short v9;  // [bp-0xa8]\n
    unsigned short v10;  // [bp-0xa6]\n
    unsigned long v11;  // [bp-0xa4]\n
    struct struct_3 **v12;  // [bp-0x98]\n
    unsigned int v13;  // [bp-0x94]\n
    char v14;  // [bp-0x90]\n
    char *v15;  // [bp-0x8c]\n
    unsigned int v16;  // [bp-0x88]\n
    unsigned int *v17;  // [bp-0x84]\n
    struct struct_0 **v18;  // [bp-0x80]\n
    char *v19;  // [bp-0x7c]\n
    unsigned int v20;  // [bp-0x78]\n
    unsigned int *v21;  // [bp-0x74]\n
    struct struct_0 **v22;  // [bp-0x70]\n
    char v23;  // [bp-0x6c]\n
    unsigned short v24;  // [bp-0x66]\n
    unsigned int *v25;  // [bp-0x64]\n
    struct struct_0 **v26;  // [bp-0x60]\n
    char v27;  // [bp-0x5c]\n
    unsigned short v28;  // [bp-0x56]\n
    unsigned int *v29;  // [bp-0x54]\n
    struct struct_0 **v30;  // [bp-0x50]\n
    char v31;  // [bp-0x49]\n
    char v32;  // [bp-0x45]\n
    unsigned int *v33;  // [bp-0x44]\n
    struct struct_0 **v34;  // [bp-0x40]\n
    char v35;  // [bp-0x3c]\n
    unsigned int v36;  // [bp-0x30]\n
    unsigned int *v37;  // [bp-0x2c]\n
    struct struct_0 **v38;  // [bp-0x28]\n
    char v39;  // [bp-0x24]\n
    char v40[4];  // [bp-0x18]\n
    unsigned int v41;  // [bp-0x14]\n
    unsigned int *v42;  // [bp-0x10]\n
    struct struct_0 **v43;  // [bp-0xc]\n
    unsigned int v44;  // [bp-0x8]\n
    unsigned int v46;  // ebx\n
    unsigned int *v47;  // eax\n
    struct struct_0 **v48;  // eax\n
    struct struct_0 **v50;  // eax\n
    unsigned int *v52;  // eax\n
    struct struct_0 **v54;  // eax\n
    unsigned int *v56;  // eax\n
    unsigned int *v57;  // eax\n
    struct struct_0 **v58;  // eax\n
    unsigned int *v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    unsigned int *v61;  // eax\n
    struct struct_0 **v62;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v64;  // eax\n
    unsigned int *v65;  // eax, Other Possible Types: unsigned int\n
    unsigned int v66;  // ebx\n
\n
    v44 = v46;\n
    v8 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamaboll===\", 15) < 0)\n
        cgc__terminate();\n
    v34 = v45;\n
    v33 = a0;\n
    memset(&v31, 0, 4);\n
    if (*(v33) < 1)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = *(v34)->field_0;\n
    cgc_uint2str(&v31, 4, v32);\n
    v7 = &v31;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v31)) < 0)\n
        cgc__terminate();\n
    v47 = v33;\n
    *(v47) = *(v47) - 1;\n
    v48 = v34;\n
    *(v48) = &*(v48)->padding_1;\n
    v22 = v45;\n
    v21 = a0;\n
    if (*(v21) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v21) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v21);\n
    v20 = v6;\n
    if (!v20)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = cgc_calloc(134);\n
    if (!v19)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v19, &v8[18].padding_0[182]);\n
    cgc_strncpy(v19 + 5, *(v22), v20);\n
    v50 = v22;\n
    *(v50) = &(&(*(v50))[1].field_0)[cgc_strlen(v19)];\n
    v52 = v21;\n
    *(v52) = *(v52) - (cgc_strlen(v19) + -4);\n
    cgc_checkheap();\n
    cgc_free(v19);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v18 = v45;\n
    v17 = a0;\n
    if (*(v17) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v17) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v17);\n
    v16 = v5;\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = cgc_calloc(134);\n
    if (!v15)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v15, &v8[18].padding_0[182]);\n
    cgc_strncpy(v15 + 5, *(v18), v16);\n
    v54 = v18;\n
    *(v54) = &(&(*(v54))[1].field_0)[cgc_strlen(v15)];\n
    v56 = v17;\n
    *(v56) = *(v56) - (cgc_strlen(v15) + -4);\n
    cgc_checkheap();\n
    cgc_free(v15);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v30 = v45;\n
    v29 = a0;\n
    memset(&v27, 0, 6);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = *(&*(v30)->field_0);\n
    cgc_uint2str(&v27, 6, v28);\n
    v4 = &v27;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v27)) < 0)\n
        cgc__terminate();\n
    v57 = v29;\n
    *(v57) = *(v57) - 2;\n
    v58 = v30;\n
    *(v58) = &*(v58)->field_2;\n
    v38 = v45;\n
    v37 = a0;\n
    memset(&v35, 0, 12);\n
    if (*(v37) < 4)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v36 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v10 = [D] x86g_create_fpucw(fpround<4>);\n
    v9 = v10 | 0xc00;\n
    v11 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v35, 12, v11);\n
    v3 = &v35;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v59 = v37;\n
    *(v59) = *(v59) - 4;\n
    v60 = v38;\n
    *(v60) = *(v60) + 1;\n
    v26 = v45;\n
    v25 = a0;\n
    memset(&v23, 0, 6);\n
    if (*(v25) < 2)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = *(&*(v26)->field_0);\n
    cgc_uint2str(&v23, 6, v24);\n
    v2 = &v23;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v23)) < 0)\n
        cgc__terminate();\n
    v61 = v25;\n
    *(v61) = *(v61) - 2;\n
    v62 = v26;\n
    *(v62) = &*(v62)->field_2;\n
    v43 = v45;\n
    v42 = a0;\n
    *(&v40[0]) = *(v43);\n
    memset(&v39, 0, 12);\n
    if (*(v42) < 4)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v40[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v40[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v40[2] << 8)\n
                v1 = v40[3];\n
        }\n
    }\n
    v41 = v1 & 1;\n
    cgc_uint2str(&v39, 12, v41);\n
    v0 = &v39;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v63 = v42;\n
    *(v63) = *(v63) - 4;\n
    v64 = v43;\n
    *(v64) = *(v64) + 1;\n
    v13 ^= v8->field_260;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v65 = a0;\n
    if (*(v65) > 0 && v12 >= 0 && v12 < 0)\n
        v65 = *((&v14 + 0x4 * v12))(v45);\n
    v66 = v44;\n
    return v65;\n
}\n
", "4734206:sub_483cfe": null, "4734208:cgc_process_llamaentodermic": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaentodermic(struct struct_2 **v21, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x58]\n
    char v1;  // [bp-0x51]\n
    unsigned int v2;  // [bp-0x50]\n
    struct_0 *v3;  // [bp-0x4c]\n
    struct struct_1 **v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    char v6;  // [bp-0x40]\n
    char v7;  // [bp-0x3e]\n
    char v8[2];  // [bp-0x38]\n
    unsigned short v9;  // [bp-0x32]\n
    unsigned int *v10;  // [bp-0x30]\n
    struct struct_2 **v11;  // [bp-0x2c]\n
    char *v12;  // [bp-0x28]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int *v14;  // [bp-0x20]\n
    struct struct_2 **v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned short v17;  // [bp-0x12]\n
    unsigned int *v18;  // [bp-0x10]\n
    struct struct_2 **v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v22;  // ebx\n
    struct struct_2 **v24;  // eax\n
    unsigned int *v26;  // eax\n
    unsigned int *v27;  // eax\n
    struct struct_2 **v28;  // eax\n
    unsigned int *v29;  // eax\n
    struct struct_2 **v30;  // eax\n
    unsigned int *v31;  // eax\n
    struct struct_2 **v32;  // eax\n
    unsigned int *v33;  // eax, Other Possible Types: unsigned int\n
    unsigned int v34;  // ebx\n
\n
    v20 = v22;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = cgc__cookie;\n
    v4 = -1;\n
    if (cgc_sendline(1, \"===llamaentodermic===\", 21) < 0)\n
        cgc__terminate();\n
    v15 = v21;\n
    v14 = a0;\n
    if (*(v14) <= 0)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v14) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v14);\n
    v13 = v2;\n
    if (!v13)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = cgc_calloc(134);\n
    if (!v12)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v12, &v3[18].padding_0[182]);\n
    cgc_strncpy(v12 + 5, *(v15), v13);\n
    v24 = v15;\n
    *(v24) = &(*(v24))[4 + cgc_strlen(v12)];\n
    v26 = v14;\n
    *(v26) = *(v26) - (cgc_strlen(v12) + -4);\n
    cgc_checkheap();\n
    cgc_free(v12);\n
    if (cgc_sendline(1, &v3[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v11 = v21;\n
    v10 = a0;\n
    *(&v8) = *(v11);\n
    memset(&v7, 0, 6);\n
    if (*(v10) < 2)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v8[0] << 8)\n
        v1 = v8[1];\n
    v9 = v1 & 1;\n
    cgc_uint2str(&v7, 6, v9);\n
    v0 = &v7;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v7)) < 0)\n
        cgc__terminate();\n
    v27 = v10;\n
    *(v27) = *(v27) - 2;\n
    v28 = v11;\n
    *(v28) = *(v28) + 2;\n
    v19 = v21;\n
    v18 = a0;\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = *(&*(v19));\n
    v29 = v18;\n
    *(v29) = *(v29) - 2;\n
    v30 = v19;\n
    *(v30) = *(v30) + 2;\n
    if (v17 <= *(v18) && !(!v17))\n
        goto LABEL_48418d;\n
    if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48418d:\n
    v16 = cgc_calloc(v17);\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, &v3[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v16, *(v19), v17);\n
    if (cgc_sendline(1, &v3[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v31 = v18;\n
    *(v31) = *(v31) - v17;\n
    v32 = v19;\n
    *(v32) = &(*(v32))[v17];\n
    cgc_checkheap();\n
    cgc_free(v16);\n
    v5 ^= v3->field_260;\n
    if (v5)\n
        cgc___stack_cookie_fail();\n
    v33 = a0;\n
    if (*(v33) > 0 && v4 >= 0 && v4 < 0)\n
        v33 = *((&v6 + 0x4 * v4))(v21);\n
    v34 = v20;\n
    return v33;\n
}\n
", "4735704:sub_4842d8": null, "4735712:cgc_process_llamapolitician": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamapolitician(struct struct_0 **v216, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x434]\n
    char v1;  // [bp-0x42d]\n
    struct_1 *v2;  // [bp-0x42c]\n
    char v3;  // [bp-0x425]\n
    unsigned int v4;  // [bp-0x424]\n
    struct_1 *v5;  // [bp-0x420]\n
    char v6;  // [bp-0x419]\n
    struct_1 *v7;  // [bp-0x418]\n
    struct_1 *v8;  // [bp-0x414]\n
    struct_1 *v9;  // [bp-0x410]\n
    char v10;  // [bp-0x409]\n
    struct_1 *v11;  // [bp-0x408]\n
    struct_1 *v12;  // [bp-0x404]\n
    struct_1 *v13;  // [bp-0x400]\n
    struct_1 *v14;  // [bp-0x3fc]\n
    struct_1 *v15;  // [bp-0x3f8]\n
    unsigned int v16;  // [bp-0x3f4]\n
    unsigned int v17;  // [bp-0x3f0]\n
    struct_1 *v18;  // [bp-0x3ec]\n
    struct_1 *v19;  // [bp-0x3e8]\n
    struct_1 *v20;  // [bp-0x3e4]\n
    char v21;  // [bp-0x3dd]\n
    struct_1 *v22;  // [bp-0x3dc]\n
    struct_1 *v23;  // [bp-0x3d8]\n
    unsigned int v24;  // [bp-0x3d4]\n
    struct_1 *v25;  // [bp-0x3d0]\n
    char v26;  // [bp-0x3c9]\n
    struct_1 *v27;  // [bp-0x3c8]\n
    struct_1 *v28;  // [bp-0x3c4]\n
    unsigned int v29;  // [bp-0x3c0]\n
    struct_1 *v30;  // [bp-0x3bc]\n
    struct_1 *v31;  // [bp-0x3b8]\n
    struct_1 *v32;  // [bp-0x3b4]\n
    unsigned int v33;  // [bp-0x3b0]\n
    unsigned int v34;  // [bp-0x3ac]\n
    struct_1 *v35;  // [bp-0x3a8]\n
    struct_3 *v36;  // [bp-0x3a4]\n
    unsigned short v37;  // [bp-0x3a0]\n
    unsigned short v38;  // [bp-0x39e]\n
    unsigned short v39;  // [bp-0x39c]\n
    unsigned short v40;  // [bp-0x39a]\n
    unsigned short v41;  // [bp-0x398]\n
    unsigned short v42;  // [bp-0x396]\n
    unsigned short v43;  // [bp-0x394]\n
    unsigned short v44;  // [bp-0x392]\n
    unsigned short v45;  // [bp-0x390]\n
    unsigned short v46;  // [bp-0x38e]\n
    unsigned long v47;  // [bp-0x38c]\n
    unsigned long v48;  // [bp-0x384]\n
    unsigned long v49;  // [bp-0x37c]\n
    unsigned long v50;  // [bp-0x374]\n
    unsigned long v51;  // [bp-0x36c]\n
    struct struct_2 **v52;  // [bp-0x360]\n
    unsigned int v53;  // [bp-0x35c]\n
    char v54;  // [bp-0x358]\n
    char v55;  // [bp-0x356]\n
    char *v56;  // [bp-0x350]\n
    unsigned short v57;  // [bp-0x34a]\n
    unsigned int *v58;  // [bp-0x348]\n
    struct struct_0 **v59;  // [bp-0x344]\n
    char v60;  // [bp-0x33d]\n
    char v61[8];  // [bp-0x328]\n
    unsigned int v62;  // [bp-0x324]\n
    void* v63;  // [bp-0x320]\n
    unsigned int *v64;  // [bp-0x31c]\n
    struct struct_0 **v65;  // [bp-0x318]\n
    unsigned int v66;  // [bp-0x314]\n
    char v67;  // [bp-0x30d]\n
    unsigned int *v68;  // [bp-0x30c]\n
    struct struct_0 **v69;  // [bp-0x308]\n
    char *v70;  // [bp-0x304]\n
    unsigned int v71;  // [bp-0x300]\n
    unsigned int *v72;  // [bp-0x2fc]\n
    struct struct_0 **v73;  // [bp-0x2f8]\n
    char v74;  // [bp-0x2f4]\n
    unsigned short v75;  // [bp-0x2ee]\n
    unsigned int *v76;  // [bp-0x2ec]\n
    struct struct_0 **v77;  // [bp-0x2e8]\n
    char v78;  // [bp-0x2e4]\n
    unsigned short v79;  // [bp-0x2de]\n
    unsigned int *v80;  // [bp-0x2dc]\n
    struct struct_0 **v81;  // [bp-0x2d8]\n
    char v82;  // [bp-0x2d4]\n
    unsigned short v83;  // [bp-0x2ce]\n
    unsigned int *v84;  // [bp-0x2cc]\n
    struct struct_0 **v85;  // [bp-0x2c8]\n
    char v86;  // [bp-0x2c4]\n
    unsigned short v87;  // [bp-0x2be]\n
    unsigned int *v88;  // [bp-0x2bc]\n
    struct struct_0 **v89;  // [bp-0x2b8]\n
    char v90;  // [bp-0x2b1]\n
    char v91;  // [bp-0x2ad]\n
    unsigned int *v92;  // [bp-0x2ac]\n
    struct struct_0 **v93;  // [bp-0x2a8]\n
    char v94;  // [bp-0x2a1]\n
    char v95;  // [bp-0x29d]\n
    unsigned int *v96;  // [bp-0x29c]\n
    struct struct_0 **v97;  // [bp-0x298]\n
    char v98;  // [bp-0x291]\n
    char v99;  // [bp-0x28d]\n
    unsigned int *v100;  // [bp-0x28c]\n
    struct struct_0 **v101;  // [bp-0x288]\n
    char v102;  // [bp-0x281]\n
    char v103;  // [bp-0x27d]\n
    unsigned int *v104;  // [bp-0x27c]\n
    struct struct_0 **v105;  // [bp-0x278]\n
    char v106;  // [bp-0x271]\n
    unsigned long v107;  // [bp-0x25c]\n
    unsigned int *v108;  // [bp-0x254]\n
    struct struct_0 **v109;  // [bp-0x250]\n
    char v110;  // [bp-0x249]\n
    unsigned long v111;  // [bp-0x234]\n
    unsigned int *v112;  // [bp-0x22c]\n
    struct struct_0 **v113;  // [bp-0x228]\n
    char v114;  // [bp-0x221]\n
    unsigned long v115;  // [bp-0x20c]\n
    unsigned int *v116;  // [bp-0x204]\n
    struct struct_0 **v117;  // [bp-0x200]\n
    char v118;  // [bp-0x1f9]\n
    unsigned long v119;  // [bp-0x1e4]\n
    unsigned int *v120;  // [bp-0x1dc]\n
    struct struct_0 **v121;  // [bp-0x1d8]\n
    char v122;  // [bp-0x1d4]\n
    unsigned int v123;  // [bp-0x1c8]\n
    unsigned int *v124;  // [bp-0x1c4]\n
    struct struct_0 **v125;  // [bp-0x1c0]\n
    char v126;  // [bp-0x1bc]\n
    unsigned int v127;  // [bp-0x1b0]\n
    unsigned int *v128;  // [bp-0x1ac]\n
    struct struct_0 **v129;  // [bp-0x1a8]\n
    char v130;  // [bp-0x1a4]\n
    unsigned int v131;  // [bp-0x198]\n
    unsigned int *v132;  // [bp-0x194]\n
    struct struct_0 **v133;  // [bp-0x190]\n
    char v134;  // [bp-0x18c]\n
    unsigned int v135;  // [bp-0x180]\n
    unsigned int *v136;  // [bp-0x17c]\n
    struct struct_0 **v137;  // [bp-0x178]\n
    unsigned int v138;  // [bp-0x174]\n
    unsigned short v139;  // [bp-0x16e]\n
    unsigned int *v140;  // [bp-0x16c]\n
    struct struct_0 **v141;  // [bp-0x168]\n
    unsigned int v142;  // [bp-0x164]\n
    unsigned short v143;  // [bp-0x15e]\n
    unsigned int *v144;  // [bp-0x15c]\n
    struct struct_0 **v145;  // [bp-0x158]\n
    unsigned int v146;  // [bp-0x154]\n
    unsigned short v147;  // [bp-0x14e]\n
    unsigned int *v148;  // [bp-0x14c]\n
    struct struct_0 **v149;  // [bp-0x148]\n
    char v150;  // [bp-0x144]\n
    char v151[4];  // [bp-0x138]\n
    unsigned int v152;  // [bp-0x134]\n
    unsigned int *v153;  // [bp-0x130]\n
    struct struct_0 **v154;  // [bp-0x12c]\n
    char v155;  // [bp-0x128]\n
    char v156[4];  // [bp-0x11c]\n
    unsigned int v157;  // [bp-0x118]\n
    unsigned int *v158;  // [bp-0x114]\n
    struct struct_0 **v159;  // [bp-0x110]\n
    char v160;  // [bp-0x10c]\n
    char v161[4];  // [bp-0x100]\n
    unsigned int v162;  // [bp-0xfc]\n
    unsigned int *v163;  // [bp-0xf8]\n
    struct struct_0 **v164;  // [bp-0xf4]\n
    char v165;  // [bp-0xf0]\n
    char v166[4];  // [bp-0xe4]\n
    unsigned int v167;  // [bp-0xe0]\n
    unsigned int *v168;  // [bp-0xdc]\n
    struct struct_0 **v169;  // [bp-0xd8]\n
    char *v170;  // [bp-0xd4]\n
    unsigned int v171;  // [bp-0xd0]\n
    unsigned int *v172;  // [bp-0xcc]\n
    struct struct_0 **v173;  // [bp-0xc8]\n
    char *v174;  // [bp-0xc4]\n
    unsigned int v175;  // [bp-0xc0]\n
    unsigned int *v176;  // [bp-0xbc]\n
    struct struct_0 **v177;  // [bp-0xb8]\n
    char *v178;  // [bp-0xb4]\n
    unsigned int v179;  // [bp-0xb0]\n
    unsigned int *v180;  // [bp-0xac]\n
    struct struct_0 **v181;  // [bp-0xa8]\n
    char *v182;  // [bp-0xa4]\n
    unsigned int v183;  // [bp-0xa0]\n
    unsigned int *v184;  // [bp-0x9c]\n
    struct struct_0 **v185;  // [bp-0x98]\n
    char *v186;  // [bp-0x94]\n
    unsigned int v187;  // [bp-0x90]\n
    unsigned int *v188;  // [bp-0x8c]\n
    struct struct_0 **v189;  // [bp-0x88]\n
    char *v190;  // [bp-0x84]\n
    unsigned int v191;  // [bp-0x80]\n
    unsigned int *v192;  // [bp-0x7c]\n
    struct struct_0 **v193;  // [bp-0x78]\n
    char v194;  // [bp-0x71]\n
    unsigned int v195;  // [bp-0x5c]\n
    unsigned int v196;  // [bp-0x58]\n
    unsigned int *v197;  // [bp-0x50]\n
    struct struct_0 **v198;  // [bp-0x4c]\n
    unsigned int v199;  // [bp-0x48]\n
    char v200;  // [bp-0x41]\n
    unsigned int *v201;  // [bp-0x40]\n
    struct struct_0 **v202;  // [bp-0x3c]\n
    unsigned int v203;  // [bp-0x38]\n
    char v204;  // [bp-0x31]\n
    unsigned int *v205;  // [bp-0x30]\n
    struct struct_0 **v206;  // [bp-0x2c]\n
    unsigned int v207;  // [bp-0x28]\n
    char v208;  // [bp-0x21]\n
    unsigned int *v209;  // [bp-0x20]\n
    struct struct_0 **v210;  // [bp-0x1c]\n
    unsigned int v211;  // [bp-0x18]\n
    char v212;  // [bp-0x11]\n
    unsigned int *v213;  // [bp-0x10]\n
    struct struct_0 **v214;  // [bp-0xc]\n
    unsigned int v215;  // [bp-0x8]\n
    unsigned int v217;  // ebx\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v219;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_0 **v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_0 **v239;  // eax\n
    unsigned int *v240;  // eax\n
    struct struct_0 **v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    unsigned int *v244;  // eax\n
    struct struct_0 **v245;  // eax\n
    struct struct_0 **v247;  // eax\n
    unsigned int *v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_0 **v251;  // eax\n
    unsigned int *v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_0 **v255;  // eax\n
    struct struct_0 **v257;  // eax\n
    unsigned int *v259;  // eax\n
    unsigned int v260[2];  // ecx\n
    unsigned int *v261;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int *v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v305;  // eax\n
    struct struct_0 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax\n
    struct struct_0 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_0 **v312;  // eax\n
    struct struct_0 **v314;  // eax\n
    unsigned int *v316;  // eax\n
    unsigned int *v317;  // eax\n
    struct struct_0 **v318;  // eax\n
    unsigned int *v319;  // eax\n
    struct struct_0 **v320;  // eax\n
    unsigned int *v321;  // eax\n
    struct struct_0 **v322;  // eax\n
    unsigned int *v323;  // eax\n
    struct struct_0 **v324;  // eax\n
    unsigned int *v325;  // eax, Other Possible Types: unsigned int\n
    unsigned int v326;  // ebx\n
\n
    v215 = v217;\n
    v36 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v53 = cgc__cookie;\n
    v52 = -1;\n
    if (cgc_sendline(1, \"===llamapolitician===\", 21) < 0)\n
        cgc__terminate();\n
    v89 = v216;\n
    v88 = a0;\n
    memset(&v86, 0, 6);\n
    if (*(v88) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(&*(v89)->field_0);\n
    cgc_uint2str(&v86, 6, v87);\n
    v35 = &v86;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v86)) < 0)\n
        cgc__terminate();\n
    v218 = v88;\n
    *(v218) = *(v218) - 2;\n
    v219 = v89;\n
    *(v219) = &*(v219)->padding_1[1];\n
    v193 = v216;\n
    v192 = a0;\n
    if (*(v192) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v192) >= 128)\n
        v34 = 128;\n
    else\n
        v34 = *(v192);\n
    v191 = v34;\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v190 = cgc_calloc(134);\n
    if (!v190)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v190, &v36[18].padding_0[182]);\n
    cgc_strncpy(v190 + 5, *(v193), v191);\n
    v221 = v193;\n
    *(v221) = &(&*(v221)->field_4)[cgc_strlen(v190)];\n
    v223 = v192;\n
    *(v223) = *(v223) - (cgc_strlen(v190) + -4);\n
    cgc_checkheap();\n
    cgc_free(v190);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v73 = v216;\n
    v72 = a0;\n
    if (*(v72) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v72) >= 128)\n
        v33 = 128;\n
    else\n
        v33 = *(v72);\n
    v71 = v33;\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v70 = cgc_calloc(134);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v70, &v36[18].padding_0[182]);\n
    cgc_strncpy(v70 + 5, *(v73), v71);\n
    v225 = v73;\n
    *(v225) = &(&*(v225)->field_4)[cgc_strlen(v70)];\n
    v227 = v72;\n
    *(v227) = *(v227) - (cgc_strlen(v70) + -4);\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v69 = v216;\n
    v68 = a0;\n
    if (*(v68) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(v69)->field_0;\n
    v228 = v68;\n
    *(v228) = *(v228) - 1;\n
    v229 = v69;\n
    *(v229) = &*(v229)->padding_1;\n
    if (v67 <= *(v68) && !(!v67))\n
        goto LABEL_484a7d;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_484a7d:\n
    v66 = cgc_calloc(v67);\n
    if (!v66)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v66, *(v69), v67);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v230 = v69;\n
    *(v230) = &(&*(v230)->field_0)[v67];\n
    v231 = v68;\n
    *(v231) = *(v231) - v67;\n
    cgc_checkheap();\n
    cgc_free(v66);\n
    v137 = v216;\n
    v136 = a0;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v135 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(fpround<4>);\n
    v45 = v46 | 0xc00;\n
    v51 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v134, 12, v51);\n
    v32 = &v134;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v232 = v136;\n
    *(v232) = *(v232) - 4;\n
    v233 = v137;\n
    *(v233) = &*(v233)->field_4;\n
    v214 = v216;\n
    v213 = a0;\n
    if (*(v213) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v212 = *(v214)->field_0;\n
    v234 = v213;\n
    *(v234) = *(v234) - 1;\n
    v235 = v214;\n
    *(v235) = &*(v235)->padding_1;\n
    if (v212 <= *(v213) && !(!v212))\n
        goto LABEL_484e0b;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_484e0b:\n
    v211 = cgc_calloc(v212);\n
    if (!v211)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v211, *(v214), v212);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v236 = v214;\n
    *(v236) = &(&*(v236)->field_0)[v212];\n
    v237 = v213;\n
    *(v237) = *(v237) - v212;\n
    cgc_checkheap();\n
    cgc_free(v211);\n
    v133 = v216;\n
    v132 = a0;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(&*(v133)->field_0);\n
    cgc_uint2str(&v130, 12, v131);\n
    v31 = &v130;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v238 = v132;\n
    *(v238) = *(v238) - 4;\n
    v239 = v133;\n
    *(v239) = &*(v239)->field_4;\n
    v210 = v216;\n
    v209 = a0;\n
    if (*(v209) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v208 = *(v210)->field_0;\n
    v240 = v209;\n
    *(v240) = *(v240) - 1;\n
    v241 = v210;\n
    *(v241) = &*(v241)->padding_1;\n
    if (v208 <= *(v209) && !(!v208))\n
        goto LABEL_485147;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_485147:\n
    v207 = cgc_calloc(v208);\n
    if (!v207)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v207, *(v210), v208);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v242 = v210;\n
    *(v242) = &(&*(v242)->field_0)[v208];\n
    v243 = v209;\n
    *(v243) = *(v243) - v208;\n
    cgc_checkheap();\n
    cgc_free(v207);\n
    v121 = v216;\n
    v120 = a0;\n
    memset(&v118, 0, 21);\n
    if (*(v120) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v119 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-910, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v118, 21, v50);\n
    v30 = &v118;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v244 = v120;\n
    *(v244) = *(v244) - 8;\n
    v245 = v121;\n
    *(v245) = &(*(v245))[1].padding_1[2];\n
    v189 = v216;\n
    v188 = a0;\n
    if (*(v188) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v188) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v188);\n
    v187 = v29;\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v186 = cgc_calloc(134);\n
    if (!v186)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v186, &v36[18].padding_0[182]);\n
    cgc_strncpy(v186 + 5, *(v189), v187);\n
    v247 = v189;\n
    *(v247) = &(&*(v247)->field_4)[cgc_strlen(v186)];\n
    v249 = v188;\n
    *(v249) = *(v249) - (cgc_strlen(v186) + -4);\n
    cgc_checkheap();\n
    cgc_free(v186);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v117 = v216;\n
    v116 = a0;\n
    memset(&v114, 0, 21);\n
    if (*(v116) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v115 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-914, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v114, 21, v49);\n
    v28 = &v114;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v250 = v116;\n
    *(v250) = *(v250) - 8;\n
    v251 = v117;\n
    *(v251) = &(*(v251))[1].padding_1[2];\n
    v113 = v216;\n
    v112 = a0;\n
    memset(&v110, 0, 21);\n
    if (*(v112) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v111 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-918, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v110, 21, v48);\n
    v27 = &v110;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v252 = v112;\n
    *(v252) = *(v252) - 8;\n
    v253 = v113;\n
    *(v253) = &(*(v253))[1].padding_1[2];\n
    v169 = v216;\n
    v168 = a0;\n
    *(&v166[0]) = *(v169);\n
    memset(&v165, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v166[0] << 24)\n
    {\n
        v26 = 0;\n
        if (v166[1] << 16)\n
        {\n
            v26 = 0;\n
            if (v166[2] << 8)\n
                v26 = v166[3];\n
        }\n
    }\n
    v167 = v26 & 1;\n
    cgc_uint2str(&v165, 12, v167);\n
    v25 = &v165;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v165)) < 0)\n
        cgc__terminate();\n
    v254 = v168;\n
    *(v254) = *(v254) - 4;\n
    v255 = v169;\n
    *(v255) = &*(v255)->field_4;\n
    v185 = v216;\n
    v184 = a0;\n
    if (*(v184) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v184) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v184);\n
    v183 = v24;\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = cgc_calloc(134);\n
    if (!v182)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v182, &v36[18].padding_0[182]);\n
    cgc_strncpy(v182 + 5, *(v185), v183);\n
    v257 = v185;\n
    *(v257) = &(&*(v257)->field_4)[cgc_strlen(v182)];\n
    v259 = v184;\n
    *(v259) = *(v259) - (cgc_strlen(v182) + -4);\n
    cgc_checkheap();\n
    cgc_free(v182);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v198 = v216;\n
    v197 = a0;\n
    memset(&v194, 0, 21);\n
    if (*(v197) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v260 = *(v198);\n
    v196 = v260[1];\n
    v195 = v260[0];\n
    cgc_uint2str(&v194, 21, v195);\n
    v23 = &v194;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v194)) < 0)\n
        cgc__terminate();\n
    v261 = v197;\n
    *(v261) = *(v261) - 8;\n
    v262 = v198;\n
    *(v262) = &(*(v262))[1].padding_1[2];\n
    v105 = v216;\n
    v104 = a0;\n
    memset(&v102, 0, 4);\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(v105)->field_0;\n
    cgc_uint2str(&v102, 4, v103);\n
    v22 = &v102;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v263 = v104;\n
    *(v263) = *(v263) - 1;\n
    v264 = v105;\n
    *(v264) = &*(v264)->padding_1;\n
    v164 = v216;\n
    v163 = a0;\n
    *(&v161[0]) = *(v164);\n
    memset(&v160, 0, 12);\n
    if (*(v163) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = 0;\n
    if (v161[0] << 24)\n
    {\n
        v21 = 0;\n
        if (v161[1] << 16)\n
        {\n
            v21 = 0;\n
            if (v161[2] << 8)\n
                v21 = v161[3];\n
        }\n
    }\n
    v162 = v21 & 1;\n
    cgc_uint2str(&v160, 12, v162);\n
    v20 = &v160;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v160)) < 0)\n
        cgc__terminate();\n
    v265 = v163;\n
    *(v265) = *(v265) - 4;\n
    v266 = v164;\n
    *(v266) = &*(v266)->field_4;\n
    v149 = v216;\n
    v148 = a0;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v147 = *(&*(v149)->field_0);\n
    v267 = v148;\n
    *(v267) = *(v267) - 2;\n
    v268 = v149;\n
    *(v268) = &*(v268)->padding_1[1];\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_4862a9;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4862a9:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v269 = v148;\n
    *(v269) = *(v269) - v147;\n
    v270 = v149;\n
    *(v270) = &(&*(v270)->field_0)[v147];\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v85 = v216;\n
    v84 = a0;\n
    memset(&v82, 0, 6);\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(&*(v85)->field_0);\n
    cgc_uint2str(&v82, 6, v83);\n
    v19 = &v82;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v271 = v84;\n
    *(v271) = *(v271) - 2;\n
    v272 = v85;\n
    *(v272) = &*(v272)->padding_1[1];\n
    v129 = v216;\n
    v128 = a0;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(&*(v129)->field_0);\n
    cgc_uint2str(&v126, 12, v127);\n
    v18 = &v126;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v273 = v128;\n
    *(v273) = *(v273) - 4;\n
    v274 = v129;\n
    *(v274) = &*(v274)->field_4;\n
    v181 = v216;\n
    v180 = a0;\n
    if (*(v180) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v180) >= 128)\n
        v17 = 128;\n
    else\n
        v17 = *(v180);\n
    v179 = v17;\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = cgc_calloc(134);\n
    if (!v178)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v178, &v36[18].padding_0[182]);\n
    cgc_strncpy(v178 + 5, *(v181), v179);\n
    v276 = v181;\n
    *(v276) = &(&*(v276)->field_4)[cgc_strlen(v178)];\n
    v278 = v180;\n
    *(v278) = *(v278) - (cgc_strlen(v178) + -4);\n
    cgc_checkheap();\n
    cgc_free(v178);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v177 = v216;\n
    v176 = a0;\n
    if (*(v176) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v176) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v176);\n
    v175 = v16;\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v174 = cgc_calloc(134);\n
    if (!v174)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v174, &v36[18].padding_0[182]);\n
    cgc_strncpy(v174 + 5, *(v177), v175);\n
    v280 = v177;\n
    *(v280) = &(&*(v280)->field_4)[cgc_strlen(v174)];\n
    v282 = v176;\n
    *(v282) = *(v282) - (cgc_strlen(v174) + -4);\n
    cgc_checkheap();\n
    cgc_free(v174);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v125 = v216;\n
    v124 = a0;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    cgc_uint2str(&v122, 12, v123);\n
    v15 = &v122;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v283 = v124;\n
    *(v283) = *(v283) - 4;\n
    v284 = v125;\n
    *(v284) = &*(v284)->field_4;\n
    v101 = v216;\n
    v100 = a0;\n
    memset(&v98, 0, 4);\n
    if (*(v100) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(v101)->field_0;\n
    cgc_uint2str(&v98, 4, v99);\n
    v14 = &v98;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v285 = v100;\n
    *(v285) = *(v285) - 1;\n
    v286 = v101;\n
    *(v286) = &*(v286)->padding_1;\n
    v81 = v216;\n
    v80 = a0;\n
    memset(&v78, 0, 6);\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(&*(v81)->field_0);\n
    cgc_uint2str(&v78, 6, v79);\n
    v13 = &v78;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v287 = v80;\n
    *(v287) = *(v287) - 2;\n
    v288 = v81;\n
    *(v288) = &*(v288)->padding_1[1];\n
    v109 = v216;\n
    v108 = a0;\n
    memset(&v106, 0, 21);\n
    if (*(v108) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v107 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-922, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v106, 21, v47);\n
    v12 = &v106;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v289 = v108;\n
    *(v289) = *(v289) - 8;\n
    v290 = v109;\n
    *(v290) = &(*(v290))[1].padding_1[2];\n
    v206 = v216;\n
    v205 = a0;\n
    if (*(v205) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = *(v206)->field_0;\n
    v291 = v205;\n
    *(v291) = *(v291) - 1;\n
    v292 = v206;\n
    *(v292) = &*(v292)->padding_1;\n
    if (v204 <= *(v205) && !(!v204))\n
        goto LABEL_48718f;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48718f:\n
    v203 = cgc_calloc(v204);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v203, *(v206), v204);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v293 = v206;\n
    *(v293) = &(&*(v293)->field_0)[v204];\n
    v294 = v205;\n
    *(v294) = *(v294) - v204;\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    v202 = v216;\n
    v201 = a0;\n
    if (*(v201) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v200 = *(v202)->field_0;\n
    v295 = v201;\n
    *(v295) = *(v295) - 1;\n
    v296 = v202;\n
    *(v296) = &*(v296)->padding_1;\n
    if (v200 <= *(v201) && !(!v200))\n
        goto LABEL_487388;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_487388:\n
    v199 = cgc_calloc(v200);\n
    if (!v199)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v199, *(v202), v200);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v297 = v202;\n
    *(v297) = &(&*(v297)->field_0)[v200];\n
    v298 = v201;\n
    *(v298) = *(v298) - v200;\n
    cgc_checkheap();\n
    cgc_free(v199);\n
    v77 = v216;\n
    v76 = a0;\n
    memset(&v74, 0, 6);\n
    if (*(v76) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    cgc_uint2str(&v74, 6, v75);\n
    v11 = &v74;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v299 = v76;\n
    *(v299) = *(v299) - 2;\n
    v300 = v77;\n
    *(v300) = &*(v300)->padding_1[1];\n
    v159 = v216;\n
    v158 = a0;\n
    *(&v156[0]) = *(v159);\n
    memset(&v155, 0, 12);\n
    if (*(v158) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v156[0] << 24)\n
    {\n
        v10 = 0;\n
        if (v156[1] << 16)\n
        {\n
            v10 = 0;\n
            if (v156[2] << 8)\n
                v10 = v156[3];\n
        }\n
    }\n
    v157 = v10 & 1;\n
    cgc_uint2str(&v155, 12, v157);\n
    v9 = &v155;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v301 = v158;\n
    *(v301) = *(v301) - 4;\n
    v302 = v159;\n
    *(v302) = &*(v302)->field_4;\n
    v97 = v216;\n
    v96 = a0;\n
    memset(&v94, 0, 4);\n
    if (*(v96) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(v97)->field_0;\n
    cgc_uint2str(&v94, 4, v95);\n
    v8 = &v94;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v303 = v96;\n
    *(v303) = *(v303) - 1;\n
    v304 = v97;\n
    *(v304) = &*(v304)->padding_1;\n
    v93 = v216;\n
    v92 = a0;\n
    memset(&v90, 0, 4);\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(v93)->field_0;\n
    cgc_uint2str(&v90, 4, v91);\n
    v7 = &v90;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v305 = v92;\n
    *(v305) = *(v305) - 1;\n
    v306 = v93;\n
    *(v306) = &*(v306)->padding_1;\n
    v145 = v216;\n
    v144 = a0;\n
    if (*(v144) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    v307 = v144;\n
    *(v307) = *(v307) - 2;\n
    v308 = v145;\n
    *(v308) = &*(v308)->padding_1[1];\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_487b30;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_487b30:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v309 = v144;\n
    *(v309) = *(v309) - v143;\n
    v310 = v145;\n
    *(v310) = &(&*(v310)->field_0)[v143];\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v65 = v216;\n
    v64 = a0;\n
    *(&v61[0]) = *(v65);\n
    memset(&v60, 0, 21);\n
    if (*(v64) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v61[0])\n
    {\n
        v6 = 0;\n
        if (v61[1])\n
        {\n
            v6 = 0;\n
            if (v61[2])\n
            {\n
                v6 = 0;\n
                if (v61[3])\n
                {\n
                    v6 = 0;\n
                    if (v61[4] << 24)\n
                    {\n
                        v6 = 0;\n
                        if (v61[5] << 16)\n
                        {\n
                            v6 = 0;\n
                            if (v61[6] << 8)\n
                                v6 = v61[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v62 = v6 & 1;\n
    v63 = 0;\n
    cgc_uint2str(&v60, 21, v62);\n
    v5 = &v60;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v60)) < 0)\n
        cgc__terminate();\n
    v311 = v64;\n
    *(v311) = *(v311) - 8;\n
    v312 = v65;\n
    *(v312) = &(*(v312))[1].padding_1[2];\n
    v173 = v216;\n
    v172 = a0;\n
    if (*(v172) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v172) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v172);\n
    v171 = v4;\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v170 = cgc_calloc(134);\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v170, &v36[18].padding_0[182]);\n
    cgc_strncpy(v170 + 5, *(v173), v171);\n
    v314 = v173;\n
    *(v314) = &(&*(v314)->field_4)[cgc_strlen(v170)];\n
    v316 = v172;\n
    *(v316) = *(v316) - (cgc_strlen(v170) + -4);\n
    cgc_checkheap();\n
    cgc_free(v170);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v59 = v216;\n
    v58 = a0;\n
    v56 = &*(v59)->field_0;\n
    memset(&v55, 0, 6);\n
    if (*(v58) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (*(v56) << 8)\n
        v3 = v56[1];\n
    v57 = v3 & 1;\n
    cgc_uint2str(&v55, 6, v57);\n
    v2 = &v55;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v317 = v58;\n
    *(v317) = *(v317) - 2;\n
    v318 = v59;\n
    *(v318) = &*(v318)->padding_1[1];\n
    v141 = v216;\n
    v140 = a0;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    v319 = v140;\n
    *(v319) = *(v319) - 2;\n
    v320 = v141;\n
    *(v320) = &*(v320)->padding_1[1];\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_4883ba;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4883ba:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v321 = v140;\n
    *(v321) = *(v321) - v139;\n
    v322 = v141;\n
    *(v322) = &(&*(v322)->field_0)[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v154 = v216;\n
    v153 = a0;\n
    *(&v151[0]) = *(v154);\n
    memset(&v150, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v151[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v151[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v151[2] << 8)\n
                v1 = v151[3];\n
        }\n
    }\n
    v152 = v1 & 1;\n
    cgc_uint2str(&v150, 12, v152);\n
    v0 = &v150;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v323 = v153;\n
    *(v323) = *(v323) - 4;\n
    v324 = v154;\n
    *(v324) = &*(v324)->field_4;\n
    v53 ^= v36->field_260;\n
    if (v53)\n
        cgc___stack_cookie_fail();\n
    v325 = a0;\n
    if (*(v325) > 0 && v52 >= 0 && v52 < 0)\n
        v325 = *((&v54 + 0x4 * v52))(v216);\n
    v326 = v215;\n
    return v325;\n
}\n
", "4753184:cgc_process_llamatopoalgia": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamatopoalgia(struct struct_1 **v88, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x1dc]\n
    char v1;  // [bp-0x1d5]\n
    struct_2 *v2;  // [bp-0x1d4]\n
    char v3;  // [bp-0x1cd]\n
    unsigned int v4;  // [bp-0x1cc]\n
    struct_2 *v5;  // [bp-0x1c8]\n
    char v6;  // [bp-0x1c1]\n
    struct_2 *v7;  // [bp-0x1c0]\n
    struct_2 *v8;  // [bp-0x1bc]\n
    char v9;  // [bp-0x1b5]\n
    struct_2 *v10;  // [bp-0x1b4]\n
    struct_2 *v11;  // [bp-0x1b0]\n
    char v12;  // [bp-0x1a9]\n
    struct_2 *v13;  // [bp-0x1a8]\n
    struct_2 *v14;  // [bp-0x1a4]\n
    char v15;  // [bp-0x19d]\n
    struct_2 *v16;  // [bp-0x19c]\n
    char v17;  // [bp-0x195]\n
    struct_0 *v18;  // [bp-0x194]\n
    unsigned short v19;  // [bp-0x190]\n
    unsigned short v20;  // [bp-0x18e]\n
    unsigned long v21;  // [bp-0x18c]\n
    struct struct_3 **v22;  // [bp-0x180]\n
    unsigned int v23;  // [bp-0x17c]\n
    char v24;  // [bp-0x178]\n
    char v25;  // [bp-0x176]\n
    char v26[2];  // [bp-0x170]\n
    unsigned short v27;  // [bp-0x16a]\n
    unsigned int *v28;  // [bp-0x168]\n
    struct struct_1 **v29;  // [bp-0x164]\n
    char v30;  // [bp-0x15e]\n
    char v31[2];  // [bp-0x158]\n
    unsigned short v32;  // [bp-0x152]\n
    unsigned int *v33;  // [bp-0x150]\n
    struct struct_1 **v34;  // [bp-0x14c]\n
    char v35;  // [bp-0x146]\n
    char *v36;  // [bp-0x140]\n
    unsigned short v37;  // [bp-0x13a]\n
    unsigned int *v38;  // [bp-0x138]\n
    struct struct_1 **v39;  // [bp-0x134]\n
    char v40;  // [bp-0x12d]\n
    char v41[8];  // [bp-0x118]\n
    unsigned int v42;  // [bp-0x114]\n
    void* v43;  // [bp-0x110]\n
    unsigned int *v44;  // [bp-0x108]\n
    struct struct_1 **v45;  // [bp-0x104]\n
    char v46;  // [bp-0xfd]\n
    char v47[8];  // [bp-0xe8]\n
    unsigned int v48;  // [bp-0xe4]\n
    void* v49;  // [bp-0xe0]\n
    unsigned int *v50;  // [bp-0xdc]\n
    struct struct_1 **v51;  // [bp-0xd8]\n
    char v52;  // [bp-0xd4]\n
    unsigned short v53;  // [bp-0xce]\n
    unsigned int *v54;  // [bp-0xcc]\n
    struct struct_1 **v55;  // [bp-0xc8]\n
    char v56;  // [bp-0xc1]\n
    unsigned long v57;  // [bp-0xac]\n
    unsigned int *v58;  // [bp-0xa4]\n
    struct struct_1 **v59;  // [bp-0xa0]\n
    unsigned int v60;  // [bp-0x9c]\n
    unsigned short v61;  // [bp-0x96]\n
    unsigned int *v62;  // [bp-0x94]\n
    struct struct_1 **v63;  // [bp-0x90]\n
    char v64;  // [bp-0x8c]\n
    char v65[4];  // [bp-0x80]\n
    unsigned int v66;  // [bp-0x7c]\n
    unsigned int *v67;  // [bp-0x78]\n
    struct struct_1 **v68;  // [bp-0x74]\n
    char v69;  // [bp-0x70]\n
    char v70[4];  // [bp-0x64]\n
    unsigned int v71;  // [bp-0x60]\n
    unsigned int *v72;  // [bp-0x5c]\n
    struct struct_1 **v73;  // [bp-0x58]\n
    char *v74;  // [bp-0x54]\n
    unsigned int v75;  // [bp-0x50]\n
    unsigned int *v76;  // [bp-0x4c]\n
    struct struct_1 **v77;  // [bp-0x48]\n
    char v78;  // [bp-0x41]\n
    unsigned int v79;  // [bp-0x2c]\n
    unsigned int v80;  // [bp-0x28]\n
    unsigned int *v81;  // [bp-0x20]\n
    struct struct_1 **v82;  // [bp-0x1c]\n
    unsigned int v83;  // [bp-0x18]\n
    char v84;  // [bp-0x11]\n
    unsigned int *v85;  // [bp-0x10]\n
    struct struct_1 **v86;  // [bp-0xc]\n
    unsigned int v87;  // [bp-0x8]\n
    unsigned int v89;  // ebx\n
    unsigned int *v90;  // eax\n
    struct struct_1 **v91;  // eax\n
    unsigned int *v92;  // eax\n
    struct struct_1 **v93;  // eax\n
    unsigned int *v94;  // eax\n
    struct struct_1 **v95;  // eax\n
    struct struct_1 **v96;  // eax\n
    unsigned int *v97;  // eax\n
    unsigned int *v98;  // eax\n
    struct struct_1 **v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_1 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_1 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    struct struct_1 **v105;  // eax\n
    unsigned int v106[2];  // ecx\n
    unsigned int *v107;  // eax\n
    struct struct_1 **v108;  // eax\n
    unsigned int *v109;  // eax\n
    struct struct_1 **v110;  // eax\n
    struct struct_1 **v112;  // eax\n
    unsigned int *v114;  // eax\n
    unsigned int *v115;  // eax\n
    struct struct_1 **v116;  // eax\n
    unsigned int *v117;  // eax\n
    struct struct_1 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    struct struct_1 **v120;  // eax\n
    unsigned int *v121;  // eax\n
    struct struct_1 **v122;  // eax\n
    unsigned int *v123;  // eax, Other Possible Types: unsigned int\n
    unsigned int v124;  // ebx\n
\n
    v87 = v89;\n
    v18 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v23 = cgc__cookie;\n
    v22 = -1;\n
    if (cgc_sendline(1, \"===llamatopoalgia===\", 20) < 0)\n
        cgc__terminate();\n
    v51 = v88;\n
    v50 = a0;\n
    *(&v47[0]) = *(v51);\n
    memset(&v46, 0, 21);\n
    if (*(v50) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v47[0])\n
    {\n
        v17 = 0;\n
        if (v47[1])\n
        {\n
            v17 = 0;\n
            if (v47[2])\n
            {\n
                v17 = 0;\n
                if (v47[3])\n
                {\n
                    v17 = 0;\n
                    if (v47[4] << 24)\n
                    {\n
                        v17 = 0;\n
                        if (v47[5] << 16)\n
                        {\n
                            v17 = 0;\n
                            if (v47[6] << 8)\n
                                v17 = v47[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v48 = v17 & 1;\n
    v49 = 0;\n
    cgc_uint2str(&v46, 21, v48);\n
    v16 = &v46;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v90 = v50;\n
    *(v90) = *(v90) - 8;\n
    v91 = v51;\n
    *(v91) = &(*(v91))[1].padding_1[2];\n
    v39 = v88;\n
    v38 = a0;\n
    v36 = &*(v39)->field_0;\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (*(v36) << 8)\n
        v15 = v36[1];\n
    v37 = v15 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v14 = &v35;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v92 = v38;\n
    *(v92) = *(v92) - 2;\n
    v93 = v39;\n
    *(v93) = &*(v93)->padding_1[1];\n
    v86 = v88;\n
    v85 = a0;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(v86)->field_0;\n
    v94 = v85;\n
    *(v94) = *(v94) - 1;\n
    v95 = v86;\n
    *(v95) = &*(v95)->padding_1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_488c5c;\n
    if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_488c5c:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, &v18[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v96 = v86;\n
    *(v96) = &(&*(v96)->field_0)[v84];\n
    v97 = v85;\n
    *(v97) = *(v97) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v55 = v88;\n
    v54 = a0;\n
    memset(&v52, 0, 6);\n
    if (*(v54) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v53 = *(&*(v55)->field_0);\n
    cgc_uint2str(&v52, 6, v53);\n
    v13 = &v52;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v98 = v54;\n
    *(v98) = *(v98) - 2;\n
    v99 = v55;\n
    *(v99) = &*(v99)->padding_1[1];\n
    v34 = v88;\n
    v33 = a0;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v31[0] << 8)\n
        v12 = v31[1];\n
    v32 = v12 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v11 = &v30;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v100 = v33;\n
    *(v100) = *(v100) - 2;\n
    v101 = v34;\n
    *(v101) = &*(v101)->padding_1[1];\n
    v59 = v88;\n
    v58 = a0;\n
    memset(&v56, 0, 21);\n
    if (*(v58) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v57 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v20 = [D] x86g_create_fpucw(fpround<4>);\n
    v19 = v20 | 0xc00;\n
    v21 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v56, 21, v21);\n
    v10 = &v56;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v102 = v58;\n
    *(v102) = *(v102) - 8;\n
    v103 = v59;\n
    *(v103) = &(*(v103))[1].padding_1[2];\n
    v45 = v88;\n
    v44 = a0;\n
    *(&v41[0]) = *(v45);\n
    memset(&v40, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v41[0])\n
    {\n
        v9 = 0;\n
        if (v41[1])\n
        {\n
            v9 = 0;\n
            if (v41[2])\n
            {\n
                v9 = 0;\n
                if (v41[3])\n
                {\n
                    v9 = 0;\n
                    if (v41[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v41[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v41[6] << 8)\n
                                v9 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v42 = v9 & 1;\n
    v43 = 0;\n
    cgc_uint2str(&v40, 21, v42);\n
    v8 = &v40;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v104 = v44;\n
    *(v104) = *(v104) - 8;\n
    v105 = v45;\n
    *(v105) = &(*(v105))[1].padding_1[2];\n
    v82 = v88;\n
    v81 = a0;\n
    memset(&v78, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(v82);\n
    v80 = v106[1];\n
    v79 = v106[0];\n
    cgc_uint2str(&v78, 21, v79);\n
    v7 = &v78;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v107 = v81;\n
    *(v107) = *(v107) - 8;\n
    v108 = v82;\n
    *(v108) = &(*(v108))[1].padding_1[2];\n
    v29 = v88;\n
    v28 = a0;\n
    *(&v26) = *(v29);\n
    memset(&v25, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v26[0] << 8)\n
        v6 = v26[1];\n
    v27 = v6 & 1;\n
    cgc_uint2str(&v25, 6, v27);\n
    v5 = &v25;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v109 = v28;\n
    *(v109) = *(v109) - 2;\n
    v110 = v29;\n
    *(v110) = &*(v110)->padding_1[1];\n
    v77 = v88;\n
    v76 = a0;\n
    if (*(v76) <= 0)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v76) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v76);\n
    v75 = v4;\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v74 = cgc_calloc(134);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v74, &v18[18].padding_0[182]);\n
    cgc_strncpy(v74 + 5, *(v77), v75);\n
    v112 = v77;\n
    *(v112) = &(&*(v112)->field_4)[cgc_strlen(v74)];\n
    v114 = v76;\n
    *(v114) = *(v114) - (cgc_strlen(v74) + -4);\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    if (cgc_sendline(1, &v18[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v73 = v88;\n
    v72 = a0;\n
    *(&v70[0]) = *(v73);\n
    memset(&v69, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v70[0] << 24)\n
    {\n
        v3 = 0;\n
        if (v70[1] << 16)\n
        {\n
            v3 = 0;\n
            if (v70[2] << 8)\n
                v3 = v70[3];\n
        }\n
    }\n
    v71 = v3 & 1;\n
    cgc_uint2str(&v69, 12, v71);\n
    v2 = &v69;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v115 = v72;\n
    *(v115) = *(v115) - 4;\n
    v116 = v73;\n
    *(v116) = &*(v116)->field_4;\n
    v63 = v88;\n
    v62 = a0;\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v61 = *(&*(v63)->field_0);\n
    v117 = v62;\n
    *(v117) = *(v117) - 2;\n
    v118 = v63;\n
    *(v118) = &*(v118)->padding_1[1];\n
    if (v61 <= *(v62) && !(!v61))\n
        goto LABEL_489b83;\n
    if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_489b83:\n
    v60 = cgc_calloc(v61);\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v60, *(v63), v61);\n
    if (cgc_sendline(1, &v18[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v119 = v62;\n
    *(v119) = *(v119) - v61;\n
    v120 = v63;\n
    *(v120) = &(&*(v120)->field_0)[v61];\n
    cgc_checkheap();\n
    cgc_free(v60);\n
    v68 = v88;\n
    v67 = a0;\n
    *(&v65[0]) = *(v68);\n
    memset(&v64, 0, 12);\n
    if (*(v67) < 4)\n
    {\n
        if (cgc_sendline(1, &v18[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v65[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v65[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v65[2] << 8)\n
                v1 = v65[3];\n
        }\n
    }\n
    v66 = v1 & 1;\n
    cgc_uint2str(&v64, 12, v66);\n
    v0 = &v64;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v121 = v67;\n
    *(v121) = *(v121) - 4;\n
    v122 = v68;\n
    *(v122) = &*(v122)->field_4;\n
    v23 ^= v18->field_260;\n
    if (v23)\n
        cgc___stack_cookie_fail();\n
    v123 = a0;\n
    if (*(v123) > 0 && v22 >= 0 && v22 < 0)\n
        v123 = *((&v24 + 0x4 * v22))(v88);\n
    v124 = v87;\n
    return v123;\n
}\n
", "4759234:sub_489ec2": null, "4759248:cgc_process_llamaTamilian": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaTamilian(struct struct_2 **v124, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x284]\n
    char v1;  // [bp-0x27d]\n
    struct_1 *v2;  // [bp-0x27c]\n
    unsigned int v3;  // [bp-0x278]\n
    unsigned int v4;  // [bp-0x274]\n
    struct_1 *v5;  // [bp-0x270]\n
    struct_1 *v6;  // [bp-0x26c]\n
    struct_1 *v7;  // [bp-0x268]\n
    struct_1 *v8;  // [bp-0x264]\n
    struct_1 *v9;  // [bp-0x260]\n
    struct_1 *v10;  // [bp-0x25c]\n
    unsigned int v11;  // [bp-0x258]\n
    struct_1 *v12;  // [bp-0x254]\n
    char v13;  // [bp-0x24d]\n
    struct_1 *v14;  // [bp-0x24c]\n
    char v15;  // [bp-0x245]\n
    struct_1 *v16;  // [bp-0x244]\n
    char v17;  // [bp-0x23d]\n
    struct_1 *v18;  // [bp-0x23c]\n
    char v19;  // [bp-0x235]\n
    struct_1 *v20;  // [bp-0x234]\n
    unsigned int v21;  // [bp-0x230]\n
    struct_3 *v22;  // [bp-0x22c]\n
    unsigned short v23;  // [bp-0x228]\n
    unsigned short v24;  // [bp-0x226]\n
    unsigned short v25;  // [bp-0x224]\n
    unsigned short v26;  // [bp-0x222]\n
    unsigned short v27;  // [bp-0x220]\n
    unsigned short v28;  // [bp-0x21e]\n
    unsigned long v29;  // [bp-0x21c]\n
    unsigned long v30;  // [bp-0x214]\n
    unsigned long v31;  // [bp-0x20c]\n
    struct struct_0 **v32;  // [bp-0x200]\n
    unsigned int v33;  // [bp-0x1fc]\n
    char v34;  // [bp-0x1f8]\n
    char v35;  // [bp-0x1f6]\n
    char v36[2];  // [bp-0x1f0]\n
    unsigned short v37;  // [bp-0x1ea]\n
    unsigned int *v38;  // [bp-0x1e8]\n
    struct struct_2 **v39;  // [bp-0x1e4]\n
    char v40;  // [bp-0x1de]\n
    char v41[2];  // [bp-0x1d8]\n
    unsigned short v42;  // [bp-0x1d2]\n
    unsigned int *v43;  // [bp-0x1d0]\n
    struct struct_2 **v44;  // [bp-0x1cc]\n
    char v45;  // [bp-0x1c5]\n
    char v46[8];  // [bp-0x1b0]\n
    unsigned int v47;  // [bp-0x1ac]\n
    void* v48;  // [bp-0x1a8]\n
    unsigned int *v49;  // [bp-0x1a4]\n
    struct struct_2 **v50;  // [bp-0x1a0]\n
    char *v51;  // [bp-0x19c]\n
    unsigned int v52;  // [bp-0x198]\n
    unsigned int *v53;  // [bp-0x194]\n
    struct struct_2 **v54;  // [bp-0x190]\n
    char *v55;  // [bp-0x18c]\n
    unsigned int v56;  // [bp-0x188]\n
    unsigned int *v57;  // [bp-0x184]\n
    struct struct_2 **v58;  // [bp-0x180]\n
    char *v59;  // [bp-0x17c]\n
    unsigned int v60;  // [bp-0x178]\n
    unsigned int *v61;  // [bp-0x174]\n
    struct struct_2 **v62;  // [bp-0x170]\n
    char *v63;  // [bp-0x16c]\n
    unsigned int v64;  // [bp-0x168]\n
    unsigned int *v65;  // [bp-0x164]\n
    struct struct_2 **v66;  // [bp-0x160]\n
    char v67;  // [bp-0x15c]\n
    unsigned short v68;  // [bp-0x156]\n
    unsigned int *v69;  // [bp-0x154]\n
    struct struct_2 **v70;  // [bp-0x150]\n
    char v71;  // [bp-0x149]\n
    char v72;  // [bp-0x145]\n
    unsigned int *v73;  // [bp-0x144]\n
    struct struct_2 **v74;  // [bp-0x140]\n
    char v75;  // [bp-0x139]\n
    char v76;  // [bp-0x135]\n
    unsigned int *v77;  // [bp-0x134]\n
    struct struct_2 **v78;  // [bp-0x130]\n
    char v79;  // [bp-0x129]\n
    unsigned long v80;  // [bp-0x114]\n
    unsigned int *v81;  // [bp-0x10c]\n
    struct struct_2 **v82;  // [bp-0x108]\n
    char v83;  // [bp-0x101]\n
    unsigned long v84;  // [bp-0xec]\n
    unsigned int *v85;  // [bp-0xe4]\n
    struct struct_2 **v86;  // [bp-0xe0]\n
    char v87;  // [bp-0xdc]\n
    unsigned int v88;  // [bp-0xd0]\n
    unsigned int *v89;  // [bp-0xcc]\n
    struct struct_2 **v90;  // [bp-0xc8]\n
    unsigned int v91;  // [bp-0xc4]\n
    unsigned short v92;  // [bp-0xbe]\n
    unsigned int *v93;  // [bp-0xbc]\n
    struct struct_2 **v94;  // [bp-0xb8]\n
    char v95;  // [bp-0xb4]\n
    char v96[4];  // [bp-0xa8]\n
    unsigned int v97;  // [bp-0xa4]\n
    unsigned int *v98;  // [bp-0xa0]\n
    struct struct_2 **v99;  // [bp-0x9c]\n
    char v100;  // [bp-0x98]\n
    char v101[4];  // [bp-0x8c]\n
    unsigned int v102;  // [bp-0x88]\n
    unsigned int *v103;  // [bp-0x84]\n
    struct struct_2 **v104;  // [bp-0x80]\n
    char v105;  // [bp-0x79]\n
    unsigned int v106;  // [bp-0x64]\n
    unsigned int v107;  // [bp-0x60]\n
    unsigned int *v108;  // [bp-0x5c]\n
    struct struct_2 **v109;  // [bp-0x58]\n
    char v110;  // [bp-0x51]\n
    unsigned int v111;  // [bp-0x3c]\n
    unsigned int v112;  // [bp-0x38]\n
    unsigned int *v113;  // [bp-0x30]\n
    struct struct_2 **v114;  // [bp-0x2c]\n
    unsigned int v115;  // [bp-0x28]\n
    char v116;  // [bp-0x21]\n
    unsigned int *v117;  // [bp-0x20]\n
    struct struct_2 **v118;  // [bp-0x1c]\n
    unsigned int v119;  // [bp-0x18]\n
    char v120;  // [bp-0x11]\n
    unsigned int *v121;  // [bp-0x10]\n
    struct struct_2 **v122;  // [bp-0xc]\n
    unsigned int v123;  // [bp-0x8]\n
    unsigned int v125;  // ebx\n
    struct struct_2 **v127;  // eax\n
    unsigned int *v129;  // eax\n
    struct_4 *v130;  // ecx\n
    unsigned int *v131;  // eax\n
    struct struct_2 **v132;  // eax\n
    unsigned int *v133;  // eax\n
    struct struct_2 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_2 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_2 **v138;  // eax\n
    unsigned int *v139;  // eax\n
    struct struct_2 **v140;  // eax\n
    struct struct_2 **v142;  // eax\n
    unsigned int *v144;  // eax\n
    unsigned int *v145;  // eax\n
    struct struct_2 **v146;  // eax\n
    unsigned int *v147;  // eax\n
    struct struct_2 **v148;  // eax\n
    unsigned int *v149;  // eax\n
    struct struct_2 **v150;  // eax\n
    unsigned int v151[2];  // ecx\n
    unsigned int *v152;  // eax\n
    struct struct_2 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_2 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_2 **v157;  // eax\n
    struct struct_2 **v159;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_2 **v163;  // eax\n
    unsigned int *v165;  // eax\n
    unsigned int *v166;  // eax\n
    struct struct_2 **v167;  // eax\n
    struct struct_2 **v168;  // eax\n
    unsigned int *v169;  // eax\n
    unsigned int *v170;  // eax\n
    struct struct_2 **v171;  // eax\n
    unsigned int *v172;  // eax\n
    struct struct_2 **v173;  // eax\n
    struct struct_2 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_2 **v177;  // eax\n
    unsigned int *v178;  // eax\n
    struct struct_2 **v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_2 **v181;  // eax\n
    unsigned int *v182;  // eax, Other Possible Types: unsigned int\n
    unsigned int v183;  // ebx\n
\n
    v123 = v125;\n
    v22 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v33 = cgc__cookie;\n
    v32 = -1;\n
    if (cgc_sendline(1, \"===llamaTamilian===\", 19) < 0)\n
        cgc__terminate();\n
    v66 = v124;\n
    v65 = a0;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v65) >= 128)\n
        v21 = 128;\n
    else\n
        v21 = *(v65);\n
    v64 = v21;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v63, &v22[18].padding_0[182]);\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v127 = v66;\n
    *(v127) = &(&*(v127)->field_4)[cgc_strlen(v63)];\n
    v129 = v65;\n
    *(v129) = *(v129) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v114 = v124;\n
    v113 = a0;\n
    memset(&v110, 0, 21);\n
    if (*(v113) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v130 = *(v114);\n
    v112 = v130->field_4;\n
    v111 = *(&v130->field_0);\n
    cgc_uint2str(&v110, 21, v111);\n
    v20 = &v110;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v131 = v113;\n
    *(v131) = *(v131) - 8;\n
    v132 = v114;\n
    *(v132) = &(*(v132))[1].padding_1[2];\n
    v104 = v124;\n
    v103 = a0;\n
    *(&v101[0]) = *(v104);\n
    memset(&v100, 0, 12);\n
    if (*(v103) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v101[0] << 24)\n
    {\n
        v19 = 0;\n
        if (v101[1] << 16)\n
        {\n
            v19 = 0;\n
            if (v101[2] << 8)\n
                v19 = v101[3];\n
        }\n
    }\n
    v102 = v19 & 1;\n
    cgc_uint2str(&v100, 12, v102);\n
    v18 = &v100;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v100)) < 0)\n
        cgc__terminate();\n
    v133 = v103;\n
    *(v133) = *(v133) - 4;\n
    v134 = v104;\n
    *(v134) = &*(v134)->field_4;\n
    v44 = v124;\n
    v43 = a0;\n
    *(&v41) = *(v44);\n
    memset(&v40, 0, 6);\n
    if (*(v43) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v41[0] << 8)\n
        v17 = v41[1];\n
    v42 = v17 & 1;\n
    cgc_uint2str(&v40, 6, v42);\n
    v16 = &v40;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v135 = v43;\n
    *(v135) = *(v135) - 2;\n
    v136 = v44;\n
    *(v136) = &*(v136)->padding_1[1];\n
    v50 = v124;\n
    v49 = a0;\n
    *(&v46[0]) = *(v50);\n
    memset(&v45, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v46[0])\n
    {\n
        v15 = 0;\n
        if (v46[1])\n
        {\n
            v15 = 0;\n
            if (v46[2])\n
            {\n
                v15 = 0;\n
                if (v46[3])\n
                {\n
                    v15 = 0;\n
                    if (v46[4] << 24)\n
                    {\n
                        v15 = 0;\n
                        if (v46[5] << 16)\n
                        {\n
                            v15 = 0;\n
                            if (v46[6] << 8)\n
                                v15 = v46[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v47 = v15 & 1;\n
    v48 = 0;\n
    cgc_uint2str(&v45, 21, v47);\n
    v14 = &v45;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v45)) < 0)\n
        cgc__terminate();\n
    v137 = v49;\n
    *(v137) = *(v137) - 8;\n
    v138 = v50;\n
    *(v138) = &(*(v138))[1].padding_1[2];\n
    v39 = v124;\n
    v38 = a0;\n
    *(&v36) = *(v39);\n
    memset(&v35, 0, 6);\n
    if (*(v38) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v36[0] << 8)\n
        v13 = v36[1];\n
    v37 = v13 & 1;\n
    cgc_uint2str(&v35, 6, v37);\n
    v12 = &v35;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v139 = v38;\n
    *(v139) = *(v139) - 2;\n
    v140 = v39;\n
    *(v140) = &*(v140)->padding_1[1];\n
    v62 = v124;\n
    v61 = a0;\n
    if (*(v61) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v61) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v61);\n
    v60 = v11;\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = cgc_calloc(134);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v59, &v22[18].padding_0[182]);\n
    cgc_strncpy(v59 + 5, *(v62), v60);\n
    v142 = v62;\n
    *(v142) = &(&*(v142)->field_4)[cgc_strlen(v59)];\n
    v144 = v61;\n
    *(v144) = *(v144) - (cgc_strlen(v59) + -4);\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v78 = v124;\n
    v77 = a0;\n
    memset(&v75, 0, 4);\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    cgc_uint2str(&v75, 4, v76);\n
    v10 = &v75;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v145 = v77;\n
    *(v145) = *(v145) - 1;\n
    v146 = v78;\n
    *(v146) = &*(v146)->padding_1;\n
    v86 = v124;\n
    v85 = a0;\n
    memset(&v83, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v84 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v28 = [D] x86g_create_fpucw(fpround<4>);\n
    v27 = v28 | 0xc00;\n
    v31 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v83, 21, v31);\n
    v9 = &v83;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v147 = v85;\n
    *(v147) = *(v147) - 8;\n
    v148 = v86;\n
    *(v148) = &(*(v148))[1].padding_1[2];\n
    v90 = v124;\n
    v89 = a0;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v88 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v26 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-542, size=2, endness=Iend_LE)))));\n
    v25 = v26 | 0xc00;\n
    v30 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v87, 12, v30);\n
    v8 = &v87;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v149 = v89;\n
    *(v149) = *(v149) - 4;\n
    v150 = v90;\n
    *(v150) = &*(v150)->field_4;\n
    v109 = v124;\n
    v108 = a0;\n
    memset(&v105, 0, 21);\n
    if (*(v108) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v151 = *(v109);\n
    v107 = v151[1];\n
    v106 = v151[0];\n
    cgc_uint2str(&v105, 21, v106);\n
    v7 = &v105;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v105)) < 0)\n
        cgc__terminate();\n
    v152 = v108;\n
    *(v152) = *(v152) - 8;\n
    v153 = v109;\n
    *(v153) = &(*(v153))[1].padding_1[2];\n
    v74 = v124;\n
    v73 = a0;\n
    memset(&v71, 0, 4);\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(v74)->field_0;\n
    cgc_uint2str(&v71, 4, v72);\n
    v6 = &v71;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v154 = v73;\n
    *(v154) = *(v154) - 1;\n
    v155 = v74;\n
    *(v155) = &*(v155)->padding_1;\n
    v70 = v124;\n
    v69 = a0;\n
    memset(&v67, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(&*(v70)->field_0);\n
    cgc_uint2str(&v67, 6, v68);\n
    v5 = &v67;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v156 = v69;\n
    *(v156) = *(v156) - 2;\n
    v157 = v70;\n
    *(v157) = &*(v157)->padding_1[1];\n
    v58 = v124;\n
    v57 = a0;\n
    if (*(v57) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v57) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v57);\n
    v56 = v4;\n
    if (!v56)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = cgc_calloc(134);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v55, &v22[18].padding_0[182]);\n
    cgc_strncpy(v55 + 5, *(v58), v56);\n
    v159 = v58;\n
    *(v159) = &(&*(v159)->field_4)[cgc_strlen(v55)];\n
    v161 = v57;\n
    *(v161) = *(v161) - (cgc_strlen(v55) + -4);\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v54 = v124;\n
    v53 = a0;\n
    if (*(v53) <= 0)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v53) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v53);\n
    v52 = v3;\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v51 = cgc_calloc(134);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v51, &v22[18].padding_0[182]);\n
    cgc_strncpy(v51 + 5, *(v54), v52);\n
    v163 = v54;\n
    *(v163) = &(&*(v163)->field_4)[cgc_strlen(v51)];\n
    v165 = v53;\n
    *(v165) = *(v165) - (cgc_strlen(v51) + -4);\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    if (cgc_sendline(1, &v22[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v122 = v124;\n
    v121 = a0;\n
    if (*(v121) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = *(v122)->field_0;\n
    v166 = v121;\n
    *(v166) = *(v166) - 1;\n
    v167 = v122;\n
    *(v167) = &*(v167)->padding_1;\n
    if (v120 <= *(v121) && !(!v120))\n
        goto LABEL_48ba46;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48ba46:\n
    v119 = cgc_calloc(v120);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v119, *(v122), v120);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v168 = v122;\n
    *(v168) = &(&*(v168)->field_0)[v120];\n
    v169 = v121;\n
    *(v169) = *(v169) - v120;\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    v82 = v124;\n
    v81 = a0;\n
    memset(&v79, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v24 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-546, size=2, endness=Iend_LE)))));\n
    v23 = v24 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v79, 21, v29);\n
    v2 = &v79;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v170 = v81;\n
    *(v170) = *(v170) - 8;\n
    v171 = v82;\n
    *(v171) = &(*(v171))[1].padding_1[2];\n
    v118 = v124;\n
    v117 = a0;\n
    if (*(v117) < 1)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(v118)->field_0;\n
    v172 = v117;\n
    *(v172) = *(v172) - 1;\n
    v173 = v118;\n
    *(v173) = &*(v173)->padding_1;\n
    if (v116 <= *(v117) && !(!v116))\n
        goto LABEL_48bdb3;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48bdb3:\n
    v115 = cgc_calloc(v116);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v115, *(v118), v116);\n
    if (cgc_sendline(1, &v22[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v174 = v118;\n
    *(v174) = &(&*(v174)->field_0)[v116];\n
    v175 = v117;\n
    *(v175) = *(v175) - v116;\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    v94 = v124;\n
    v93 = a0;\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    v176 = v93;\n
    *(v176) = *(v176) - 2;\n
    v177 = v94;\n
    *(v177) = &*(v177)->padding_1[1];\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_48bfcc;\n
    if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48bfcc:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, &v22[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v178 = v93;\n
    *(v178) = *(v178) - v92;\n
    v179 = v94;\n
    *(v179) = &(&*(v179)->field_0)[v92];\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v99 = v124;\n
    v98 = a0;\n
    *(&v96[0]) = *(v99);\n
    memset(&v95, 0, 12);\n
    if (*(v98) < 4)\n
    {\n
        if (cgc_sendline(1, &v22[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v96[0] << 24)\n
    {\n
        v1 = 0;\n
        if (v96[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v96[2] << 8)\n
                v1 = v96[3];\n
        }\n
    }\n
    v97 = v1 & 1;\n
    cgc_uint2str(&v95, 12, v97);\n
    v0 = &v95;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v180 = v98;\n
    *(v180) = *(v180) - 4;\n
    v181 = v99;\n
    *(v181) = &*(v181)->field_4;\n
    v33 ^= v22->field_260;\n
    if (v33)\n
        cgc___stack_cookie_fail();\n
    v182 = a0;\n
    if (*(v182) > 0 && v32 >= 0 && v32 < 0)\n
        v182 = *((&v34 + 0x4 * v32))(v124);\n
    v183 = v123;\n
    return v182;\n
}\n
", "4768562:sub_48c332": null, "4768576:cgc_process_llamasilvicultural": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasilvicultural(struct struct_0 **v85, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x194]\n
    struct_1 *v1;  // [bp-0x190]\n
    struct_1 *v2;  // [bp-0x18c]\n
    char v3;  // [bp-0x185]\n
    struct_1 *v4;  // [bp-0x184]\n
    char v5;  // [bp-0x17d]\n
    struct_1 *v6;  // [bp-0x17c]\n
    struct_1 *v7;  // [bp-0x178]\n
    char v8;  // [bp-0x171]\n
    struct_1 *v9;  // [bp-0x170]\n
    char v10;  // [bp-0x169]\n
    struct_1 *v11;  // [bp-0x168]\n
    struct_1 *v12;  // [bp-0x164]\n
    struct_1 *v13;  // [bp-0x160]\n
    struct_1 *v14;  // [bp-0x15c]\n
    char v15;  // [bp-0x155]\n
    struct_1 *v16;  // [bp-0x154]\n
    struct_3 *v17;  // [bp-0x150]\n
    unsigned short v18;  // [bp-0x14c]\n
    unsigned short v19;  // [bp-0x14a]\n
    unsigned short v20;  // [bp-0x148]\n
    unsigned short v21;  // [bp-0x146]\n
    unsigned long v22;  // [bp-0x144]\n
    unsigned long v23;  // [bp-0x13c]\n
    struct struct_2 **v24;  // [bp-0x134]\n
    unsigned int v25;  // [bp-0x130]\n
    char v26;  // [bp-0x12c]\n
    char v27;  // [bp-0x12a]\n
    char v28[4];  // [bp-0x124]\n
    unsigned short v29;  // [bp-0x11e]\n
    unsigned int *v30;  // [bp-0x11c]\n
    struct struct_0 **v31;  // [bp-0x118]\n
    char v32;  // [bp-0x112]\n
    char v33[2];  // [bp-0x10c]\n
    unsigned short v34;  // [bp-0x106]\n
    unsigned int *v35;  // [bp-0x104]\n
    struct struct_0 **v36;  // [bp-0x100]\n
    unsigned int v37;  // [bp-0xfc]\n
    char v38;  // [bp-0xf5]\n
    unsigned int *v39;  // [bp-0xf4]\n
    struct struct_0 **v40;  // [bp-0xf0]\n
    char *v41;  // [bp-0xec]\n
    unsigned int v42;  // [bp-0xe8]\n
    unsigned int *v43;  // [bp-0xe4]\n
    struct struct_0 **v44;  // [bp-0xe0]\n
    char v45;  // [bp-0xdc]\n
    unsigned short v46;  // [bp-0xd6]\n
    unsigned int *v47;  // [bp-0xd4]\n
    struct struct_0 **v48;  // [bp-0xd0]\n
    char v49;  // [bp-0xc9]\n
    char v50;  // [bp-0xc5]\n
    unsigned int *v51;  // [bp-0xc4]\n
    struct struct_0 **v52;  // [bp-0xc0]\n
    char v53;  // [bp-0xbc]\n
    unsigned int v54;  // [bp-0xb0]\n
    unsigned int *v55;  // [bp-0xac]\n
    struct struct_0 **v56;  // [bp-0xa8]\n
    char v57;  // [bp-0xa4]\n
    unsigned int v58;  // [bp-0x98]\n
    unsigned int *v59;  // [bp-0x94]\n
    struct struct_0 **v60;  // [bp-0x90]\n
    char v61;  // [bp-0x8c]\n
    unsigned int v62;  // [bp-0x80]\n
    unsigned int *v63;  // [bp-0x7c]\n
    struct struct_0 **v64;  // [bp-0x78]\n
    char v65;  // [bp-0x74]\n
    unsigned int v66;  // [bp-0x68]\n
    unsigned int *v67;  // [bp-0x64]\n
    struct struct_0 **v68;  // [bp-0x60]\n
    char v69;  // [bp-0x5c]\n
    char v70[4];  // [bp-0x50]\n
    unsigned int v71;  // [bp-0x4c]\n
    unsigned int *v72;  // [bp-0x48]\n
    struct struct_0 **v73;  // [bp-0x44]\n
    char v74;  // [bp-0x40]\n
    char v75[4];  // [bp-0x34]\n
    unsigned int v76;  // [bp-0x30]\n
    unsigned int *v77;  // [bp-0x2c]\n
    struct struct_0 **v78;  // [bp-0x28]\n
    char v79;  // [bp-0x24]\n
    char v80[4];  // [bp-0x18]\n
    unsigned int v81;  // [bp-0x14]\n
    unsigned int *v82;  // [bp-0x10]\n
    struct struct_0 **v83;  // [bp-0xc]\n
    unsigned int v84;  // [bp-0x8]\n
    unsigned int v86;  // ebx\n
    unsigned int *v87;  // eax\n
    struct struct_0 **v88;  // eax\n
    unsigned int *v89;  // eax\n
    struct struct_0 **v90;  // eax\n
    unsigned int *v91;  // eax\n
    struct struct_0 **v92;  // eax\n
    unsigned int *v93;  // eax\n
    struct struct_0 **v94;  // eax\n
    unsigned int *v95;  // eax\n
    struct struct_0 **v96;  // eax\n
    unsigned int *v97;  // eax\n
    struct struct_0 **v98;  // eax\n
    unsigned int *v99;  // eax\n
    struct struct_0 **v100;  // eax\n
    unsigned int *v101;  // eax\n
    struct struct_0 **v102;  // eax\n
    struct struct_0 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    unsigned int *v105;  // eax\n
    struct struct_0 **v106;  // eax\n
    unsigned int *v107;  // eax\n
    struct struct_0 **v108;  // eax\n
    unsigned int *v109;  // eax\n
    struct struct_0 **v110;  // eax\n
    unsigned int *v111;  // eax\n
    struct struct_0 **v112;  // eax\n
    struct struct_0 **v114;  // eax\n
    unsigned int *v116;  // eax\n
    unsigned int *v117;  // eax, Other Possible Types: unsigned int\n
    unsigned int v118;  // ebx\n
\n
    v84 = v86;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v25 = cgc__cookie;\n
    v24 = -1;\n
    if (cgc_sendline(1, \"===llamasilvicultural===\", 24) < 0)\n
        cgc__terminate();\n
    v68 = v85;\n
    v67 = a0;\n
    memset(&v65, 0, 12);\n
    if (*(v67) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v66 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(fpround<4>);\n
    v20 = v21 | 0xc00;\n
    v23 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v65, 12, v23);\n
    v16 = &v65;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v87 = v67;\n
    *(v87) = *(v87) - 4;\n
    v88 = v68;\n
    *(v88) = *(v88) + 4;\n
    v36 = v85;\n
    v35 = a0;\n
    *(&v33) = *(v36);\n
    memset(&v32, 0, 6);\n
    if (*(v35) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v33[0] << 8)\n
        v15 = v33[1];\n
    v34 = v15 & 1;\n
    cgc_uint2str(&v32, 6, v34);\n
    v14 = &v32;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v89 = v35;\n
    *(v89) = *(v89) - 2;\n
    v90 = v36;\n
    *(v90) = *(v90) + 2;\n
    v60 = v85;\n
    v59 = a0;\n
    memset(&v57, 0, 12);\n
    if (*(v59) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = *(&*(v60));\n
    cgc_uint2str(&v57, 12, v58);\n
    v13 = &v57;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v57)) < 0)\n
        cgc__terminate();\n
    v91 = v59;\n
    *(v91) = *(v91) - 4;\n
    v92 = v60;\n
    *(v92) = *(v92) + 4;\n
    v64 = v85;\n
    v63 = a0;\n
    memset(&v61, 0, 12);\n
    if (*(v63) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v62 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-326, size=2, endness=Iend_LE)))));\n
    v18 = v19 | 0xc00;\n
    v22 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v61, 12, v22);\n
    v12 = &v61;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v93 = v63;\n
    *(v93) = *(v93) - 4;\n
    v94 = v64;\n
    *(v94) = *(v94) + 4;\n
    v56 = v85;\n
    v55 = a0;\n
    memset(&v53, 0, 12);\n
    if (*(v55) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = *(&*(v56));\n
    cgc_uint2str(&v53, 12, v54);\n
    v11 = &v53;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v95 = v55;\n
    *(v95) = *(v95) - 4;\n
    v96 = v56;\n
    *(v96) = *(v96) + 4;\n
    v83 = v85;\n
    v82 = a0;\n
    *(&v80[0]) = *(v83);\n
    memset(&v79, 0, 12);\n
    if (*(v82) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v80[0] << 24)\n
    {\n
        v10 = 0;\n
        if (v80[1] << 16)\n
        {\n
            v10 = 0;\n
            if (v80[2] << 8)\n
                v10 = v80[3];\n
        }\n
    }\n
    v81 = v10 & 1;\n
    cgc_uint2str(&v79, 12, v81);\n
    v9 = &v79;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v97 = v82;\n
    *(v97) = *(v97) - 4;\n
    v98 = v83;\n
    *(v98) = *(v98) + 4;\n
    v78 = v85;\n
    v77 = a0;\n
    *(&v75[0]) = *(v78);\n
    memset(&v74, 0, 12);\n
    if (*(v77) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v75[0] << 24)\n
    {\n
        v8 = 0;\n
        if (v75[1] << 16)\n
        {\n
            v8 = 0;\n
            if (v75[2] << 8)\n
                v8 = v75[3];\n
        }\n
    }\n
    v76 = v8 & 1;\n
    cgc_uint2str(&v74, 12, v76);\n
    v7 = &v74;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v99 = v77;\n
    *(v99) = *(v99) - 4;\n
    v100 = v78;\n
    *(v100) = *(v100) + 4;\n
    v40 = v85;\n
    v39 = a0;\n
    if (*(v39) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v38 = *(v40)->field_0;\n
    v101 = v39;\n
    *(v101) = *(v101) - 1;\n
    v102 = v40;\n
    *(v102) = *(v102) + 1;\n
    if (v38 <= *(v39) && !(!v38))\n
        goto LABEL_48cea0;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48cea0:\n
    v37 = cgc_calloc(v38);\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v37, *(v40), v38);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v103 = v40;\n
    *(v103) = &(*(v103))[v38];\n
    v104 = v39;\n
    *(v104) = *(v104) - v38;\n
    cgc_checkheap();\n
    cgc_free(v37);\n
    v48 = v85;\n
    v47 = a0;\n
    memset(&v45, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v46 = *(&*(v48));\n
    cgc_uint2str(&v45, 6, v46);\n
    v6 = &v45;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v45)) < 0)\n
        cgc__terminate();\n
    v105 = v47;\n
    *(v105) = *(v105) - 2;\n
    v106 = v48;\n
    *(v106) = *(v106) + 2;\n
    v73 = v85;\n
    v72 = a0;\n
    *(&v70[0]) = *(v73);\n
    memset(&v69, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v70[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v70[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v70[2] << 8)\n
                v5 = v70[3];\n
        }\n
    }\n
    v71 = v5 & 1;\n
    cgc_uint2str(&v69, 12, v71);\n
    v4 = &v69;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v107 = v72;\n
    *(v107) = *(v107) - 4;\n
    v108 = v73;\n
    *(v108) = *(v108) + 4;\n
    v31 = v85;\n
    v30 = a0;\n
    *(&v28[0]) = *(v31);\n
    memset(&v27, 0, 6);\n
    if (*(v30) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v28[0] << 8)\n
        v3 = v28[1];\n
    v29 = v3 & 1;\n
    cgc_uint2str(&v27, 6, v29);\n
    v2 = &v27;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v27)) < 0)\n
        cgc__terminate();\n
    v109 = v30;\n
    *(v109) = *(v109) - 2;\n
    v110 = v31;\n
    *(v110) = *(v110) + 2;\n
    v52 = v85;\n
    v51 = a0;\n
    memset(&v49, 0, 4);\n
    if (*(v51) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = *(v52)->field_0;\n
    cgc_uint2str(&v49, 4, v50);\n
    v1 = &v49;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v111 = v51;\n
    *(v111) = *(v111) - 1;\n
    v112 = v52;\n
    *(v112) = *(v112) + 1;\n
    v44 = v85;\n
    v43 = a0;\n
    if (*(v43) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v43) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v43);\n
    v42 = v0;\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = cgc_calloc(134);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v41, &v17[18].padding_0[182]);\n
    cgc_strncpy(v41 + 5, *(v44), v42);\n
    v114 = v44;\n
    *(v114) = &(*(v114))[4 + cgc_strlen(v41)];\n
    v116 = v43;\n
    *(v116) = *(v116) - (cgc_strlen(v41) + -4);\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v25 ^= v17->field_260;\n
    if (v25)\n
        cgc___stack_cookie_fail();\n
    v117 = a0;\n
    if (*(v117) > 0 && v24 >= 0 && v24 < 0)\n
        v117 = *((&v26 + 0x4 * v24))(v85);\n
    v118 = v84;\n
    return v117;\n
}\n
", "4773989:sub_48d865": null, "4774000:cgc_process_llamaschoppen": "typedef struct struct_4 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_4;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaschoppen(struct struct_0 **v190, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x3f4]\n
    char v1;  // [bp-0x3ed]\n
    unsigned int v2;  // [bp-0x3ec]\n
    struct_1 *v3;  // [bp-0x3e8]\n
    struct_1 *v4;  // [bp-0x3e4]\n
    char v5;  // [bp-0x3dd]\n
    struct_1 *v6;  // [bp-0x3dc]\n
    struct_1 *v7;  // [bp-0x3d8]\n
    char v8;  // [bp-0x3d1]\n
    struct_1 *v9;  // [bp-0x3d0]\n
    char v10;  // [bp-0x3c9]\n
    struct_1 *v11;  // [bp-0x3c8]\n
    struct_1 *v12;  // [bp-0x3c4]\n
    unsigned int v13;  // [bp-0x3c0]\n
    struct_1 *v14;  // [bp-0x3bc]\n
    unsigned int v15;  // [bp-0x3b8]\n
    struct_1 *v16;  // [bp-0x3b4]\n
    struct_1 *v17;  // [bp-0x3b0]\n
    struct_1 *v18;  // [bp-0x3ac]\n
    unsigned int v19;  // [bp-0x3a8]\n
    struct_1 *v20;  // [bp-0x3a4]\n
    struct_1 *v21;  // [bp-0x3a0]\n
    unsigned int v22;  // [bp-0x39c]\n
    struct_1 *v23;  // [bp-0x398]\n
    char v24;  // [bp-0x391]\n
    struct_1 *v25;  // [bp-0x390]\n
    struct_1 *v26;  // [bp-0x38c]\n
    unsigned int v27;  // [bp-0x388]\n
    struct_1 *v28;  // [bp-0x384]\n
    struct_1 *v29;  // [bp-0x380]\n
    struct_1 *v30;  // [bp-0x37c]\n
    struct_4 *v31;  // [bp-0x378]\n
    unsigned short v32;  // [bp-0x374]\n
    unsigned short v33;  // [bp-0x372]\n
    unsigned short v34;  // [bp-0x370]\n
    unsigned short v35;  // [bp-0x36e]\n
    unsigned short v36;  // [bp-0x36c]\n
    unsigned short v37;  // [bp-0x36a]\n
    unsigned short v38;  // [bp-0x368]\n
    unsigned short v39;  // [bp-0x366]\n
    unsigned short v40;  // [bp-0x364]\n
    unsigned short v41;  // [bp-0x362]\n
    unsigned short v42;  // [bp-0x360]\n
    unsigned short v43;  // [bp-0x35e]\n
    unsigned long v44;  // [bp-0x35c]\n
    unsigned long v45;  // [bp-0x354]\n
    unsigned long v46;  // [bp-0x34c]\n
    unsigned long v47;  // [bp-0x344]\n
    unsigned long v48;  // [bp-0x33c]\n
    unsigned long v49;  // [bp-0x334]\n
    struct struct_3 **v50;  // [bp-0x328]\n
    unsigned int v51;  // [bp-0x324]\n
    char v52;  // [bp-0x320]\n
    char v53;  // [bp-0x31e]\n
    char v54[2];  // [bp-0x318]\n
    unsigned short v55;  // [bp-0x312]\n
    unsigned int *v56;  // [bp-0x310]\n
    struct struct_0 **v57;  // [bp-0x30c]\n
    char v58;  // [bp-0x306]\n
    char v59[2];  // [bp-0x300]\n
    unsigned short v60;  // [bp-0x2fa]\n
    unsigned int *v61;  // [bp-0x2f8]\n
    struct struct_0 **v62;  // [bp-0x2f4]\n
    char v63;  // [bp-0x2ee]\n
    char v64[2];  // [bp-0x2e8]\n
    unsigned short v65;  // [bp-0x2e2]\n
    unsigned int *v66;  // [bp-0x2e0]\n
    struct struct_0 **v67;  // [bp-0x2dc]\n
    char v68;  // [bp-0x2d6]\n
    char v69[2];  // [bp-0x2d0]\n
    unsigned short v70;  // [bp-0x2ca]\n
    unsigned int *v71;  // [bp-0x2c8]\n
    struct struct_0 **v72;  // [bp-0x2c4]\n
    char v73;  // [bp-0x2bd]\n
    char v74[8];  // [bp-0x2a8]\n
    unsigned int v75;  // [bp-0x2a4]\n
    void* v76;  // [bp-0x2a0]\n
    unsigned int *v77;  // [bp-0x29c]\n
    struct struct_0 **v78;  // [bp-0x298]\n
    unsigned int v79;  // [bp-0x294]\n
    char v80;  // [bp-0x28d]\n
    unsigned int *v81;  // [bp-0x28c]\n
    struct struct_0 **v82;  // [bp-0x288]\n
    unsigned int v83;  // [bp-0x284]\n
    char v84;  // [bp-0x27d]\n
    unsigned int *v85;  // [bp-0x27c]\n
    struct struct_0 **v86;  // [bp-0x278]\n
    unsigned int v87;  // [bp-0x274]\n
    char v88;  // [bp-0x26d]\n
    unsigned int *v89;  // [bp-0x26c]\n
    struct struct_0 **v90;  // [bp-0x268]\n
    char *v91;  // [bp-0x264]\n
    unsigned int v92;  // [bp-0x260]\n
    unsigned int *v93;  // [bp-0x25c]\n
    struct struct_0 **v94;  // [bp-0x258]\n
    char *v95;  // [bp-0x254]\n
    unsigned int v96;  // [bp-0x250]\n
    unsigned int *v97;  // [bp-0x24c]\n
    struct struct_0 **v98;  // [bp-0x248]\n
    char *v99;  // [bp-0x244]\n
    unsigned int v100;  // [bp-0x240]\n
    unsigned int *v101;  // [bp-0x23c]\n
    struct struct_0 **v102;  // [bp-0x238]\n
    char v103;  // [bp-0x234]\n
    unsigned short v104;  // [bp-0x22e]\n
    unsigned int *v105;  // [bp-0x22c]\n
    struct struct_0 **v106;  // [bp-0x228]\n
    char v107;  // [bp-0x221]\n
    char v108;  // [bp-0x21d]\n
    unsigned int *v109;  // [bp-0x21c]\n
    struct struct_0 **v110;  // [bp-0x218]\n
    char v111;  // [bp-0x211]\n
    unsigned long v112;  // [bp-0x1fc]\n
    unsigned int *v113;  // [bp-0x1f4]\n
    struct struct_0 **v114;  // [bp-0x1f0]\n
    char v115;  // [bp-0x1e9]\n
    unsigned long v116;  // [bp-0x1d4]\n
    unsigned int *v117;  // [bp-0x1cc]\n
    struct struct_0 **v118;  // [bp-0x1c8]\n
    char v119;  // [bp-0x1c1]\n
    unsigned long v120;  // [bp-0x1ac]\n
    unsigned int *v121;  // [bp-0x1a4]\n
    struct struct_0 **v122;  // [bp-0x1a0]\n
    char v123;  // [bp-0x199]\n
    unsigned long v124;  // [bp-0x184]\n
    unsigned int *v125;  // [bp-0x17c]\n
    struct struct_0 **v126;  // [bp-0x178]\n
    char v127;  // [bp-0x171]\n
    unsigned long v128;  // [bp-0x15c]\n
    unsigned int *v129;  // [bp-0x154]\n
    struct struct_0 **v130;  // [bp-0x150]\n
    char v131;  // [bp-0x14c]\n
    unsigned int v132;  // [bp-0x140]\n
    unsigned int *v133;  // [bp-0x13c]\n
    struct struct_0 **v134;  // [bp-0x138]\n
    char v135;  // [bp-0x134]\n
    unsigned int v136;  // [bp-0x128]\n
    unsigned int *v137;  // [bp-0x124]\n
    struct struct_0 **v138;  // [bp-0x120]\n
    char v139;  // [bp-0x11c]\n
    unsigned int v140;  // [bp-0x110]\n
    unsigned int *v141;  // [bp-0x10c]\n
    struct struct_0 **v142;  // [bp-0x108]\n
    char v143;  // [bp-0x104]\n
    unsigned int v144;  // [bp-0xf8]\n
    unsigned int *v145;  // [bp-0xf4]\n
    struct struct_0 **v146;  // [bp-0xf0]\n
    char v147;  // [bp-0xec]\n
    unsigned int v148;  // [bp-0xe0]\n
    unsigned int *v149;  // [bp-0xdc]\n
    struct struct_0 **v150;  // [bp-0xd8]\n
    char v151;  // [bp-0xd4]\n
    unsigned int v152;  // [bp-0xc8]\n
    unsigned int *v153;  // [bp-0xc4]\n
    struct struct_0 **v154;  // [bp-0xc0]\n
    unsigned int v155;  // [bp-0xbc]\n
    unsigned short v156;  // [bp-0xb6]\n
    unsigned int *v157;  // [bp-0xb4]\n
    struct struct_0 **v158;  // [bp-0xb0]\n
    unsigned int v159;  // [bp-0xac]\n
    unsigned short v160;  // [bp-0xa6]\n
    unsigned int *v161;  // [bp-0xa4]\n
    struct struct_0 **v162;  // [bp-0xa0]\n
    char *v163;  // [bp-0x9c]\n
    unsigned int v164;  // [bp-0x98]\n
    unsigned int *v165;  // [bp-0x94]\n
    struct struct_0 **v166;  // [bp-0x90]\n
    char *v167;  // [bp-0x8c]\n
    unsigned int v168;  // [bp-0x88]\n
    unsigned int *v169;  // [bp-0x84]\n
    struct struct_0 **v170;  // [bp-0x80]\n
    char *v171;  // [bp-0x7c]\n
    unsigned int v172;  // [bp-0x78]\n
    unsigned int *v173;  // [bp-0x74]\n
    struct struct_0 **v174;  // [bp-0x70]\n
    char v175;  // [bp-0x69]\n
    unsigned int v176;  // [bp-0x54]\n
    unsigned int v177;  // [bp-0x50]\n
    unsigned int *v178;  // [bp-0x4c]\n
    struct struct_0 **v179;  // [bp-0x48]\n
    char v180;  // [bp-0x41]\n
    unsigned int v181;  // [bp-0x2c]\n
    unsigned int v182;  // [bp-0x28]\n
    unsigned int *v183;  // [bp-0x20]\n
    struct struct_0 **v184;  // [bp-0x1c]\n
    unsigned int v185;  // [bp-0x18]\n
    char v186;  // [bp-0x11]\n
    unsigned int *v187;  // [bp-0x10]\n
    struct struct_0 **v188;  // [bp-0xc]\n
    unsigned int v189;  // [bp-0x8]\n
    unsigned int v191;  // ebx\n
    unsigned int *v192;  // eax\n
    struct struct_0 **v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    unsigned int *v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_0 **v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_0 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_0 **v201;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int *v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_0 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    struct struct_0 **v213;  // eax\n
    unsigned int *v215;  // eax\n
    unsigned int v216[2];  // ecx\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_0 **v232;  // eax\n
    unsigned int *v233;  // eax\n
    struct struct_0 **v234;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    struct struct_0 **v247;  // eax\n
    unsigned int *v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    struct struct_0 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    struct_2 *v265;  // ecx\n
    unsigned int *v266;  // eax\n
    struct struct_0 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_0 **v271;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v282;  // eax, Other Possible Types: unsigned int\n
    unsigned int v283;  // ebx\n
\n
    v189 = v191;\n
    v31 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v51 = cgc__cookie;\n
    v50 = -1;\n
    if (cgc_sendline(1, \"===llamaschoppen===\", 19) < 0)\n
        cgc__terminate();\n
    v90 = v190;\n
    v89 = a0;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(v90)->field_0;\n
    v192 = v89;\n
    *(v192) = *(v192) - 1;\n
    v193 = v90;\n
    *(v193) = &*(v193)->padding_1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_48d9fb;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48d9fb:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v194 = v90;\n
    *(v194) = &(&*(v194)->field_0)[v88];\n
    v195 = v89;\n
    *(v195) = *(v195) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v106 = v190;\n
    v105 = a0;\n
    memset(&v103, 0, 6);\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(&*(v106)->field_0);\n
    cgc_uint2str(&v103, 6, v104);\n
    v30 = &v103;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v196 = v105;\n
    *(v196) = *(v196) - 2;\n
    v197 = v106;\n
    *(v197) = &*(v197)->padding_1[1];\n
    v150 = v190;\n
    v149 = a0;\n
    memset(&v147, 0, 12);\n
    if (*(v149) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = *(&*(v150)->field_0);\n
    cgc_uint2str(&v147, 12, v148);\n
    v29 = &v147;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v198 = v149;\n
    *(v198) = *(v198) - 4;\n
    v199 = v150;\n
    *(v199) = &*(v199)->field_4;\n
    v146 = v190;\n
    v145 = a0;\n
    memset(&v143, 0, 12);\n
    if (*(v145) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(&*(v146)->field_0);\n
    cgc_uint2str(&v143, 12, v144);\n
    v28 = &v143;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v143)) < 0)\n
        cgc__terminate();\n
    v200 = v145;\n
    *(v200) = *(v200) - 4;\n
    v201 = v146;\n
    *(v201) = &*(v201)->field_4;\n
    v102 = v190;\n
    v101 = a0;\n
    if (*(v101) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v101) >= 128)\n
        v27 = 128;\n
    else\n
        v27 = *(v101);\n
    v100 = v27;\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = cgc_calloc(134);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v99, &v31[18].padding_0[182]);\n
    cgc_strncpy(v99 + 5, *(v102), v100);\n
    v203 = v102;\n
    *(v203) = &(&*(v203)->field_4)[cgc_strlen(v99)];\n
    v205 = v101;\n
    *(v205) = *(v205) - (cgc_strlen(v99) + -4);\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v110 = v190;\n
    v109 = a0;\n
    memset(&v107, 0, 4);\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(v110)->field_0;\n
    cgc_uint2str(&v107, 4, v108);\n
    v26 = &v107;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v206 = v109;\n
    *(v206) = *(v206) - 1;\n
    v207 = v110;\n
    *(v207) = &*(v207)->padding_1;\n
    v130 = v190;\n
    v129 = a0;\n
    memset(&v127, 0, 21);\n
    if (*(v129) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v128 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(fpround<4>);\n
    v42 = v43 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v127, 21, v49);\n
    v25 = &v127;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v208 = v129;\n
    *(v208) = *(v208) - 8;\n
    v209 = v130;\n
    *(v209) = &(*(v209))[1].padding_1[2];\n
    v78 = v190;\n
    v77 = a0;\n
    *(&v74[0]) = *(v78);\n
    memset(&v73, 0, 21);\n
    if (*(v77) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = 0;\n
    if (v74[0])\n
    {\n
        v24 = 0;\n
        if (v74[1])\n
        {\n
            v24 = 0;\n
            if (v74[2])\n
            {\n
                v24 = 0;\n
                if (v74[3])\n
                {\n
                    v24 = 0;\n
                    if (v74[4] << 24)\n
                    {\n
                        v24 = 0;\n
                        if (v74[5] << 16)\n
                        {\n
                            v24 = 0;\n
                            if (v74[6] << 8)\n
                                v24 = v74[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v75 = v24 & 1;\n
    v76 = 0;\n
    cgc_uint2str(&v73, 21, v75);\n
    v23 = &v73;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v210 = v77;\n
    *(v210) = *(v210) - 8;\n
    v211 = v78;\n
    *(v211) = &(*(v211))[1].padding_1[2];\n
    v98 = v190;\n
    v97 = a0;\n
    if (*(v97) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v97) >= 128)\n
        v22 = 128;\n
    else\n
        v22 = *(v97);\n
    v96 = v22;\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = cgc_calloc(134);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v95, &v31[18].padding_0[182]);\n
    cgc_strncpy(v95 + 5, *(v98), v96);\n
    v213 = v98;\n
    *(v213) = &(&*(v213)->field_4)[cgc_strlen(v95)];\n
    v215 = v97;\n
    *(v215) = *(v215) - (cgc_strlen(v95) + -4);\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v184 = v190;\n
    v183 = a0;\n
    memset(&v180, 0, 21);\n
    if (*(v183) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v216 = *(v184);\n
    v182 = v216[1];\n
    v181 = v216[0];\n
    cgc_uint2str(&v180, 21, v181);\n
    v21 = &v180;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v180)) < 0)\n
        cgc__terminate();\n
    v217 = v183;\n
    *(v217) = *(v217) - 8;\n
    v218 = v184;\n
    *(v218) = &(*(v218))[1].padding_1[2];\n
    v162 = v190;\n
    v161 = a0;\n
    if (*(v161) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v160 = *(&*(v162)->field_0);\n
    v219 = v161;\n
    *(v219) = *(v219) - 2;\n
    v220 = v162;\n
    *(v220) = &*(v220)->padding_1[1];\n
    if (v160 <= *(v161) && !(!v160))\n
        goto LABEL_48eb28;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48eb28:\n
    v159 = cgc_calloc(v160);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v159, *(v162), v160);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v221 = v161;\n
    *(v221) = *(v221) - v160;\n
    v222 = v162;\n
    *(v222) = &(&*(v222)->field_0)[v160];\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    v142 = v190;\n
    v141 = a0;\n
    memset(&v139, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = *(&*(v142)->field_0);\n
    cgc_uint2str(&v139, 12, v140);\n
    v20 = &v139;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v223 = v141;\n
    *(v223) = *(v223) - 4;\n
    v224 = v142;\n
    *(v224) = &*(v224)->field_4;\n
    v174 = v190;\n
    v173 = a0;\n
    if (*(v173) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v173) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v173);\n
    v172 = v19;\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v171 = cgc_calloc(134);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v171, &v31[18].padding_0[182]);\n
    cgc_strncpy(v171 + 5, *(v174), v172);\n
    v226 = v174;\n
    *(v226) = &(&*(v226)->field_4)[cgc_strlen(v171)];\n
    v228 = v173;\n
    *(v228) = *(v228) - (cgc_strlen(v171) + -4);\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v126 = v190;\n
    v125 = a0;\n
    memset(&v123, 0, 21);\n
    if (*(v125) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v124 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-862, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v123, 21, v48);\n
    v18 = &v123;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v229 = v125;\n
    *(v229) = *(v229) - 8;\n
    v230 = v126;\n
    *(v230) = &(*(v230))[1].padding_1[2];\n
    v138 = v190;\n
    v137 = a0;\n
    memset(&v135, 0, 12);\n
    if (*(v137) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v136 = *(&*(v138)->field_0);\n
    cgc_uint2str(&v135, 12, v136);\n
    v17 = &v135;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v231 = v137;\n
    *(v231) = *(v231) - 4;\n
    v232 = v138;\n
    *(v232) = &*(v232)->field_4;\n
    v134 = v190;\n
    v133 = a0;\n
    memset(&v131, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(&*(v134)->field_0);\n
    cgc_uint2str(&v131, 12, v132);\n
    v16 = &v131;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v233 = v133;\n
    *(v233) = *(v233) - 4;\n
    v234 = v134;\n
    *(v234) = &*(v234)->field_4;\n
    v170 = v190;\n
    v169 = a0;\n
    if (*(v169) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v169) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v169);\n
    v168 = v15;\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v167 = cgc_calloc(134);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v167, &v31[18].padding_0[182]);\n
    cgc_strncpy(v167 + 5, *(v170), v168);\n
    v236 = v170;\n
    *(v236) = &(&*(v236)->field_4)[cgc_strlen(v167)];\n
    v238 = v169;\n
    *(v238) = *(v238) - (cgc_strlen(v167) + -4);\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v122 = v190;\n
    v121 = a0;\n
    memset(&v119, 0, 21);\n
    if (*(v121) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-866, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v119, 21, v47);\n
    v14 = &v119;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v239 = v121;\n
    *(v239) = *(v239) - 8;\n
    v240 = v122;\n
    *(v240) = &(*(v240))[1].padding_1[2];\n
    v166 = v190;\n
    v165 = a0;\n
    if (*(v165) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v165) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v165);\n
    v164 = v13;\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = cgc_calloc(134);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v163, &v31[18].padding_0[182]);\n
    cgc_strncpy(v163 + 5, *(v166), v164);\n
    v242 = v166;\n
    *(v242) = &(&*(v242)->field_4)[cgc_strlen(v163)];\n
    v244 = v165;\n
    *(v244) = *(v244) - (cgc_strlen(v163) + -4);\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v86 = v190;\n
    v85 = a0;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(v86)->field_0;\n
    v245 = v85;\n
    *(v245) = *(v245) - 1;\n
    v246 = v86;\n
    *(v246) = &*(v246)->padding_1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_48fb46;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48fb46:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v247 = v86;\n
    *(v247) = &(&*(v247)->field_0)[v84];\n
    v248 = v85;\n
    *(v248) = *(v248) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v158 = v190;\n
    v157 = a0;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = *(&*(v158)->field_0);\n
    v249 = v157;\n
    *(v249) = *(v249) - 2;\n
    v250 = v158;\n
    *(v250) = &*(v250)->padding_1[1];\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_48fd80;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_48fd80:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v251 = v157;\n
    *(v251) = *(v251) - v156;\n
    v252 = v158;\n
    *(v252) = &(&*(v252)->field_0)[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v118 = v190;\n
    v117 = a0;\n
    memset(&v115, 0, 21);\n
    if (*(v117) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v116 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-870, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v115, 21, v46);\n
    v12 = &v115;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v253 = v117;\n
    *(v253) = *(v253) - 8;\n
    v254 = v118;\n
    *(v254) = &(*(v254))[1].padding_1[2];\n
    v154 = v190;\n
    v153 = a0;\n
    memset(&v151, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v152 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-874, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v151, 12, v45);\n
    v11 = &v151;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v151)) < 0)\n
        cgc__terminate();\n
    v255 = v153;\n
    *(v255) = *(v255) - 4;\n
    v256 = v154;\n
    *(v256) = &*(v256)->field_4;\n
    v72 = v190;\n
    v71 = a0;\n
    *(&v69) = *(v72);\n
    memset(&v68, 0, 6);\n
    if (*(v71) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v69[0] << 8)\n
        v10 = v69[1];\n
    v70 = v10 & 1;\n
    cgc_uint2str(&v68, 6, v70);\n
    v9 = &v68;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v68)) < 0)\n
        cgc__terminate();\n
    v257 = v71;\n
    *(v257) = *(v257) - 2;\n
    v258 = v72;\n
    *(v258) = &*(v258)->padding_1[1];\n
    v188 = v190;\n
    v187 = a0;\n
    if (*(v187) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v186 = *(v188)->field_0;\n
    v259 = v187;\n
    *(v259) = *(v259) - 1;\n
    v260 = v188;\n
    *(v260) = &*(v260)->padding_1;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_490409;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_490409:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v261 = v188;\n
    *(v261) = &(&*(v261)->field_0)[v186];\n
    v262 = v187;\n
    *(v262) = *(v262) - v186;\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v67 = v190;\n
    v66 = a0;\n
    *(&v64) = *(v67);\n
    memset(&v63, 0, 6);\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v64[0] << 8)\n
        v8 = v64[1];\n
    v65 = v8 & 1;\n
    cgc_uint2str(&v63, 6, v65);\n
    v7 = &v63;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v263 = v66;\n
    *(v263) = *(v263) - 2;\n
    v264 = v67;\n
    *(v264) = &*(v264)->padding_1[1];\n
    v179 = v190;\n
    v178 = a0;\n
    memset(&v175, 0, 21);\n
    if (*(v178) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v265 = *(v179);\n
    v177 = v265->field_4;\n
    v176 = *(&v265->field_0);\n
    cgc_uint2str(&v175, 21, v176);\n
    v6 = &v175;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v175)) < 0)\n
        cgc__terminate();\n
    v266 = v178;\n
    *(v266) = *(v266) - 8;\n
    v267 = v179;\n
    *(v267) = &(*(v267))[1].padding_1[2];\n
    v62 = v190;\n
    v61 = a0;\n
    *(&v59) = *(v62);\n
    memset(&v58, 0, 6);\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v59[0] << 8)\n
        v5 = v59[1];\n
    v60 = v5 & 1;\n
    cgc_uint2str(&v58, 6, v60);\n
    v4 = &v58;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v268 = v61;\n
    *(v268) = *(v268) - 2;\n
    v269 = v62;\n
    *(v269) = &*(v269)->padding_1[1];\n
    v114 = v190;\n
    v113 = a0;\n
    memset(&v111, 0, 21);\n
    if (*(v113) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v112 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-878, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v111, 21, v44);\n
    v3 = &v111;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v270 = v113;\n
    *(v270) = *(v270) - 8;\n
    v271 = v114;\n
    *(v271) = &(*(v271))[1].padding_1[2];\n
    v94 = v190;\n
    v93 = a0;\n
    if (*(v93) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v93) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v93);\n
    v92 = v2;\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = cgc_calloc(134);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v91, &v31[18].padding_0[182]);\n
    cgc_strncpy(v91 + 5, *(v94), v92);\n
    v273 = v94;\n
    *(v273) = &(&*(v273)->field_4)[cgc_strlen(v91)];\n
    v275 = v93;\n
    *(v275) = *(v275) - (cgc_strlen(v91) + -4);\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v82 = v190;\n
    v81 = a0;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(v82)->field_0;\n
    v276 = v81;\n
    *(v276) = *(v276) - 1;\n
    v277 = v82;\n
    *(v277) = &*(v277)->padding_1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_490e48;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_490e48:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v278 = v82;\n
    *(v278) = &(&*(v278)->field_0)[v80];\n
    v279 = v81;\n
    *(v279) = *(v279) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v57 = v190;\n
    v56 = a0;\n
    *(&v54) = *(v57);\n
    memset(&v53, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v54[0] << 8)\n
        v1 = v54[1];\n
    v55 = v1 & 1;\n
    cgc_uint2str(&v53, 6, v55);\n
    v0 = &v53;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v280 = v56;\n
    *(v280) = *(v280) - 2;\n
    v281 = v57;\n
    *(v281) = &*(v281)->padding_1[1];\n
    v51 ^= v31->field_260;\n
    if (v51)\n
        cgc___stack_cookie_fail();\n
    v282 = a0;\n
    if (*(v282) > 0 && v50 >= 0 && v50 < 0)\n
        v282 = *((&v52 + 0x4 * v50))(v190);\n
    v283 = v189;\n
    return v282;\n
}\n
", "4788596:sub_491174": null, "4788608:cgc_process_llamasart": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasart(struct struct_1 **v252, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x4f0]\n
    struct_0 *v1;  // [bp-0x4ec]\n
    char v2;  // [bp-0x4e5]\n
    struct_0 *v3;  // [bp-0x4e4]\n
    char v4;  // [bp-0x4dd]\n
    unsigned int v5;  // [bp-0x4dc]\n
    unsigned int v6;  // [bp-0x4d8]\n
    struct_0 *v7;  // [bp-0x4d4]\n
    struct_0 *v8;  // [bp-0x4d0]\n
    struct_0 *v9;  // [bp-0x4cc]\n
    char v10;  // [bp-0x4c5]\n
    struct_0 *v11;  // [bp-0x4c4]\n
    unsigned int v12;  // [bp-0x4c0]\n
    struct_0 *v13;  // [bp-0x4bc]\n
    unsigned int v14;  // [bp-0x4b8]\n
    struct_0 *v15;  // [bp-0x4b4]\n
    struct_0 *v16;  // [bp-0x4b0]\n
    struct_0 *v17;  // [bp-0x4ac]\n
    struct_0 *v18;  // [bp-0x4a8]\n
    char v19;  // [bp-0x4a1]\n
    struct_0 *v20;  // [bp-0x4a0]\n
    struct_0 *v21;  // [bp-0x49c]\n
    struct_0 *v22;  // [bp-0x498]\n
    struct_0 *v23;  // [bp-0x494]\n
    struct_0 *v24;  // [bp-0x490]\n
    unsigned int v25;  // [bp-0x48c]\n
    struct_0 *v26;  // [bp-0x488]\n
    struct_0 *v27;  // [bp-0x484]\n
    struct_0 *v28;  // [bp-0x480]\n
    struct_0 *v29;  // [bp-0x47c]\n
    struct_0 *v30;  // [bp-0x478]\n
    struct_0 *v31;  // [bp-0x474]\n
    char v32;  // [bp-0x46d]\n
    struct_0 *v33;  // [bp-0x46c]\n
    struct_0 *v34;  // [bp-0x468]\n
    char v35;  // [bp-0x461]\n
    struct_0 *v36;  // [bp-0x460]\n
    char v37;  // [bp-0x459]\n
    struct_0 *v38;  // [bp-0x458]\n
    struct_0 *v39;  // [bp-0x454]\n
    char v40;  // [bp-0x44d]\n
    struct_0 *v41;  // [bp-0x44c]\n
    struct_3 *v42;  // [bp-0x448]\n
    unsigned short v43;  // [bp-0x444]\n
    unsigned short v44;  // [bp-0x442]\n
    unsigned short v45;  // [bp-0x440]\n
    unsigned short v46;  // [bp-0x43e]\n
    unsigned short v47;  // [bp-0x43c]\n
    unsigned short v48;  // [bp-0x43a]\n
    unsigned short v49;  // [bp-0x438]\n
    unsigned short v50;  // [bp-0x436]\n
    unsigned short v51;  // [bp-0x434]\n
    unsigned short v52;  // [bp-0x432]\n
    unsigned short v53;  // [bp-0x430]\n
    unsigned short v54;  // [bp-0x42e]\n
    unsigned long v55;  // [bp-0x42c]\n
    unsigned long v56;  // [bp-0x424]\n
    unsigned long v57;  // [bp-0x41c]\n
    unsigned long v58;  // [bp-0x414]\n
    unsigned long v59;  // [bp-0x40c]\n
    unsigned long v60;  // [bp-0x404]\n
    struct struct_2 **v61;  // [bp-0x3f8]\n
    unsigned int v62;  // [bp-0x3f4]\n
    char v63;  // [bp-0x3f0]\n
    char v64;  // [bp-0x3ee]\n
    char v65[2];  // [bp-0x3e8]\n
    unsigned short v66;  // [bp-0x3e2]\n
    unsigned int *v67;  // [bp-0x3e0]\n
    struct struct_1 **v68;  // [bp-0x3dc]\n
    char v69;  // [bp-0x3d6]\n
    char v70[2];  // [bp-0x3d0]\n
    unsigned short v71;  // [bp-0x3ca]\n
    unsigned int *v72;  // [bp-0x3c8]\n
    struct struct_1 **v73;  // [bp-0x3c4]\n
    char v74;  // [bp-0x3be]\n
    char v75[2];  // [bp-0x3b8]\n
    unsigned short v76;  // [bp-0x3b2]\n
    unsigned int *v77;  // [bp-0x3b0]\n
    struct struct_1 **v78;  // [bp-0x3ac]\n
    char v79;  // [bp-0x3a6]\n
    char v80[2];  // [bp-0x3a0]\n
    unsigned short v81;  // [bp-0x39a]\n
    unsigned int *v82;  // [bp-0x398]\n
    struct struct_1 **v83;  // [bp-0x394]\n
    char v84;  // [bp-0x38e]\n
    char v85[2];  // [bp-0x388]\n
    unsigned short v86;  // [bp-0x382]\n
    unsigned int *v87;  // [bp-0x380]\n
    struct struct_1 **v88;  // [bp-0x37c]\n
    char v89;  // [bp-0x376]\n
    struct_4 *v90;  // [bp-0x370]\n
    unsigned short v91;  // [bp-0x36a]\n
    unsigned int *v92;  // [bp-0x368]\n
    struct struct_1 **v93;  // [bp-0x364]\n
    char v94;  // [bp-0x35d]\n
    char v95[8];  // [bp-0x348]\n
    unsigned int v96;  // [bp-0x344]\n
    void* v97;  // [bp-0x340]\n
    unsigned int *v98;  // [bp-0x33c]\n
    struct struct_1 **v99;  // [bp-0x338]\n
    unsigned int v100;  // [bp-0x334]\n
    char v101;  // [bp-0x32d]\n
    unsigned int *v102;  // [bp-0x32c]\n
    struct struct_1 **v103;  // [bp-0x328]\n
    unsigned int v104;  // [bp-0x324]\n
    char v105;  // [bp-0x31d]\n
    unsigned int *v106;  // [bp-0x31c]\n
    struct struct_1 **v107;  // [bp-0x318]\n
    unsigned int v108;  // [bp-0x314]\n
    char v109;  // [bp-0x30d]\n
    unsigned int *v110;  // [bp-0x30c]\n
    struct struct_1 **v111;  // [bp-0x308]\n
    char v112;  // [bp-0x304]\n
    unsigned short v113;  // [bp-0x2fe]\n
    unsigned int *v114;  // [bp-0x2fc]\n
    struct struct_1 **v115;  // [bp-0x2f8]\n
    char v116;  // [bp-0x2f1]\n
    char v117;  // [bp-0x2ed]\n
    unsigned int *v118;  // [bp-0x2ec]\n
    struct struct_1 **v119;  // [bp-0x2e8]\n
    char v120;  // [bp-0x2e1]\n
    char v121;  // [bp-0x2dd]\n
    unsigned int *v122;  // [bp-0x2dc]\n
    struct struct_1 **v123;  // [bp-0x2d8]\n
    char v124;  // [bp-0x2d1]\n
    char v125;  // [bp-0x2cd]\n
    unsigned int *v126;  // [bp-0x2cc]\n
    struct struct_1 **v127;  // [bp-0x2c8]\n
    char v128;  // [bp-0x2c1]\n
    char v129;  // [bp-0x2bd]\n
    unsigned int *v130;  // [bp-0x2bc]\n
    struct struct_1 **v131;  // [bp-0x2b8]\n
    char v132;  // [bp-0x2b1]\n
    char v133;  // [bp-0x2ad]\n
    unsigned int *v134;  // [bp-0x2ac]\n
    struct struct_1 **v135;  // [bp-0x2a8]\n
    char v136;  // [bp-0x2a1]\n
    char v137;  // [bp-0x29d]\n
    unsigned int *v138;  // [bp-0x29c]\n
    struct struct_1 **v139;  // [bp-0x298]\n
    char v140;  // [bp-0x291]\n
    char v141;  // [bp-0x28d]\n
    unsigned int *v142;  // [bp-0x28c]\n
    struct struct_1 **v143;  // [bp-0x288]\n
    char v144;  // [bp-0x281]\n
    unsigned long v145;  // [bp-0x26c]\n
    unsigned int *v146;  // [bp-0x264]\n
    struct struct_1 **v147;  // [bp-0x260]\n
    char v148;  // [bp-0x259]\n
    unsigned long v149;  // [bp-0x244]\n
    unsigned int *v150;  // [bp-0x23c]\n
    struct struct_1 **v151;  // [bp-0x238]\n
    char v152;  // [bp-0x231]\n
    unsigned long v153;  // [bp-0x21c]\n
    unsigned int *v154;  // [bp-0x214]\n
    struct struct_1 **v155;  // [bp-0x210]\n
    char v156;  // [bp-0x209]\n
    unsigned long v157;  // [bp-0x1f4]\n
    unsigned int *v158;  // [bp-0x1e8]\n
    struct struct_1 **v159;  // [bp-0x1e4]\n
    char v160;  // [bp-0x1e0]\n
    unsigned int v161;  // [bp-0x1d4]\n
    unsigned int *v162;  // [bp-0x1d0]\n
    struct struct_1 **v163;  // [bp-0x1cc]\n
    char v164;  // [bp-0x1c8]\n
    unsigned int v165;  // [bp-0x1bc]\n
    unsigned int *v166;  // [bp-0x1b8]\n
    struct struct_1 **v167;  // [bp-0x1b4]\n
    char v168;  // [bp-0x1b0]\n
    unsigned int v169;  // [bp-0x1a4]\n
    unsigned int *v170;  // [bp-0x1a0]\n
    struct struct_1 **v171;  // [bp-0x19c]\n
    char v172;  // [bp-0x198]\n
    unsigned int v173;  // [bp-0x18c]\n
    unsigned int *v174;  // [bp-0x188]\n
    struct struct_1 **v175;  // [bp-0x184]\n
    char v176;  // [bp-0x180]\n
    unsigned int v177;  // [bp-0x174]\n
    unsigned int *v178;  // [bp-0x170]\n
    struct struct_1 **v179;  // [bp-0x16c]\n
    char v180;  // [bp-0x168]\n
    unsigned int v181;  // [bp-0x15c]\n
    unsigned int *v182;  // [bp-0x158]\n
    struct struct_1 **v183;  // [bp-0x154]\n
    char v184;  // [bp-0x150]\n
    unsigned int v185;  // [bp-0x144]\n
    unsigned int *v186;  // [bp-0x140]\n
    struct struct_1 **v187;  // [bp-0x13c]\n
    unsigned int v188;  // [bp-0x138]\n
    unsigned short v189;  // [bp-0x132]\n
    unsigned int *v190;  // [bp-0x130]\n
    struct struct_1 **v191;  // [bp-0x12c]\n
    unsigned int v192;  // [bp-0x128]\n
    unsigned short v193;  // [bp-0x122]\n
    unsigned int *v194;  // [bp-0x120]\n
    struct struct_1 **v195;  // [bp-0x11c]\n
    unsigned int v196;  // [bp-0x118]\n
    unsigned short v197;  // [bp-0x112]\n
    unsigned int *v198;  // [bp-0x110]\n
    struct struct_1 **v199;  // [bp-0x10c]\n
    unsigned int v200;  // [bp-0x108]\n
    unsigned short v201;  // [bp-0x102]\n
    unsigned int *v202;  // [bp-0x100]\n
    struct struct_1 **v203;  // [bp-0xfc]\n
    unsigned int v204;  // [bp-0xf8]\n
    unsigned short v205;  // [bp-0xf2]\n
    unsigned int *v206;  // [bp-0xf0]\n
    struct struct_1 **v207;  // [bp-0xec]\n
    char v208;  // [bp-0xe8]\n
    char v209[4];  // [bp-0xdc]\n
    unsigned int v210;  // [bp-0xd8]\n
    unsigned int *v211;  // [bp-0xd4]\n
    struct struct_1 **v212;  // [bp-0xd0]\n
    char *v213;  // [bp-0xcc]\n
    unsigned int v214;  // [bp-0xc8]\n
    unsigned int *v215;  // [bp-0xc4]\n
    struct struct_1 **v216;  // [bp-0xc0]\n
    char *v217;  // [bp-0xbc]\n
    unsigned int v218;  // [bp-0xb8]\n
    unsigned int *v219;  // [bp-0xb4]\n
    struct struct_1 **v220;  // [bp-0xb0]\n
    char *v221;  // [bp-0xac]\n
    unsigned int v222;  // [bp-0xa8]\n
    unsigned int *v223;  // [bp-0xa4]\n
    struct struct_1 **v224;  // [bp-0xa0]\n
    char *v225;  // [bp-0x9c]\n
    unsigned int v226;  // [bp-0x98]\n
    unsigned int *v227;  // [bp-0x94]\n
    struct struct_1 **v228;  // [bp-0x90]\n
    char *v229;  // [bp-0x8c]\n
    unsigned int v230;  // [bp-0x88]\n
    unsigned int *v231;  // [bp-0x84]\n
    struct struct_1 **v232;  // [bp-0x80]\n
    char v233;  // [bp-0x79]\n
    unsigned int v234;  // [bp-0x64]\n
    unsigned int v235;  // [bp-0x60]\n
    unsigned int *v236;  // [bp-0x5c]\n
    struct struct_1 **v237;  // [bp-0x58]\n
    char v238;  // [bp-0x51]\n
    unsigned int v239;  // [bp-0x3c]\n
    unsigned int v240;  // [bp-0x38]\n
    unsigned int *v241;  // [bp-0x30]\n
    struct struct_1 **v242;  // [bp-0x2c]\n
    unsigned int v243;  // [bp-0x28]\n
    char v244;  // [bp-0x21]\n
    unsigned int *v245;  // [bp-0x20]\n
    struct struct_1 **v246;  // [bp-0x1c]\n
    unsigned int v247;  // [bp-0x18]\n
    char v248;  // [bp-0x11]\n
    unsigned int *v249;  // [bp-0x10]\n
    struct struct_1 **v250;  // [bp-0xc]\n
    unsigned int v251;  // [bp-0x8]\n
    unsigned int v253;  // ebx\n
    unsigned int *v254;  // eax\n
    struct struct_1 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_1 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    struct struct_1 **v259;  // eax\n
    unsigned int *v260;  // eax\n
    struct struct_1 **v261;  // eax\n
    struct struct_1 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_1 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    struct struct_1 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_1 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_1 **v271;  // eax\n
    struct struct_1 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_1 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_1 **v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_1 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_1 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    struct struct_1 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_1 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    struct struct_1 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_1 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    struct struct_1 **v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_1 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    struct struct_1 **v295;  // eax\n
    unsigned int *v296;  // eax\n
    struct struct_1 **v297;  // eax\n
    struct struct_1 **v299;  // eax\n
    unsigned int *v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_1 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_1 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_1 **v307;  // eax\n
    unsigned int *v308;  // eax\n
    struct struct_1 **v309;  // eax\n
    unsigned int *v310;  // eax\n
    struct struct_1 **v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_1 **v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_1 **v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_1 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    struct struct_1 **v319;  // eax\n
    struct struct_1 **v321;  // eax\n
    unsigned int *v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_1 **v325;  // eax\n
    unsigned int *v326;  // eax\n
    struct struct_1 **v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_1 **v329;  // eax\n
    struct struct_1 **v330;  // eax\n
    unsigned int *v331;  // eax\n
    unsigned int *v332;  // eax\n
    struct struct_1 **v333;  // eax\n
    unsigned int *v334;  // eax\n
    struct struct_1 **v335;  // eax\n
    unsigned int *v336;  // eax\n
    struct struct_1 **v337;  // eax\n
    struct struct_1 **v339;  // eax\n
    unsigned int *v341;  // eax\n
    unsigned int *v342;  // eax\n
    struct struct_1 **v343;  // eax\n
    unsigned int *v344;  // eax\n
    struct struct_1 **v345;  // eax\n
    struct_4 *v346;  // ecx\n
    unsigned int *v347;  // eax\n
    struct struct_1 **v348;  // eax\n
    struct_4 *v349;  // ecx\n
    unsigned int *v350;  // eax\n
    struct struct_1 **v351;  // eax\n
    unsigned int *v352;  // eax\n
    struct struct_1 **v353;  // eax\n
    struct struct_1 **v354;  // eax\n
    unsigned int *v355;  // eax\n
    struct struct_1 **v357;  // eax\n
    unsigned int *v359;  // eax\n
    struct struct_1 **v361;  // eax\n
    unsigned int *v363;  // eax\n
    unsigned int *v364;  // eax\n
    struct struct_1 **v365;  // eax\n
    unsigned int *v366;  // eax\n
    struct struct_1 **v367;  // eax\n
    unsigned int *v368;  // eax\n
    struct struct_1 **v369;  // eax\n
    struct struct_1 **v370;  // eax\n
    unsigned int *v371;  // eax\n
    unsigned int *v372;  // eax\n
    struct struct_1 **v373;  // eax\n
    unsigned int *v374;  // eax, Other Possible Types: unsigned int\n
    unsigned int v375;  // ebx\n
\n
    v251 = v253;\n
    v42 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v62 = cgc__cookie;\n
    v61 = -1;\n
    if (cgc_sendline(1, \"===llamasart===\", 15) < 0)\n
        cgc__terminate();\n
    v143 = v252;\n
    v142 = a0;\n
    memset(&v140, 0, 4);\n
    if (*(v142) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = *(v143)->field_0;\n
    cgc_uint2str(&v140, 4, v141);\n
    v41 = &v140;\n
    if (cgc_sendline(1, v41, cgc_strlen(&v140)) < 0)\n
        cgc__terminate();\n
    v254 = v142;\n
    *(v254) = *(v254) - 1;\n
    v255 = v143;\n
    *(v255) = &*(v255)->padding_1;\n
    v93 = v252;\n
    v92 = a0;\n
    v90 = &*(v93);\n
    memset(&v89, 0, 6);\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = 0;\n
    if (v90->field_0 << 8)\n
        v40 = v90->padding_1[0];\n
    v91 = v40 & 1;\n
    cgc_uint2str(&v89, 6, v91);\n
    v39 = &v89;\n
    if (cgc_sendline(1, v39, cgc_strlen(&v89)) < 0)\n
        cgc__terminate();\n
    v256 = v92;\n
    *(v256) = *(v256) - 2;\n
    v257 = v93;\n
    *(v257) = &*(v257)->padding_1[1];\n
    v179 = v252;\n
    v178 = a0;\n
    memset(&v176, 0, 12);\n
    if (*(v178) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v177 = *(&*(v179)->field_0);\n
    cgc_uint2str(&v176, 12, v177);\n
    v38 = &v176;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v176)) < 0)\n
        cgc__terminate();\n
    v258 = v178;\n
    *(v258) = *(v258) - 4;\n
    v259 = v179;\n
    *(v259) = &*(v259)->field_4;\n
    v250 = v252;\n
    v249 = a0;\n
    if (*(v249) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v248 = *(v250)->field_0;\n
    v260 = v249;\n
    *(v260) = *(v260) - 1;\n
    v261 = v250;\n
    *(v261) = &*(v261)->padding_1;\n
    if (v248 <= *(v249) && !(!v248))\n
        goto LABEL_4916fb;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4916fb:\n
    v247 = cgc_calloc(v248);\n
    if (!v247)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v247, *(v250), v248);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v262 = v250;\n
    *(v262) = &(&*(v262)->field_0)[v248];\n
    v263 = v249;\n
    *(v263) = *(v263) - v248;\n
    cgc_checkheap();\n
    cgc_free(v247);\n
    v207 = v252;\n
    v206 = a0;\n
    if (*(v206) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v205 = *(&*(v207)->field_0);\n
    v264 = v206;\n
    *(v264) = *(v264) - 2;\n
    v265 = v207;\n
    *(v265) = &*(v265)->padding_1[1];\n
    if (v205 <= *(v206) && !(!v205))\n
        goto LABEL_491914;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_491914:\n
    v204 = cgc_calloc(v205);\n
    if (!v204)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v204, *(v207), v205);\n
    if (cgc_sendline(1, &v42[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v266 = v206;\n
    *(v266) = *(v266) - v205;\n
    v267 = v207;\n
    *(v267) = &(&*(v267)->field_0)[v205];\n
    cgc_checkheap();\n
    cgc_free(v204);\n
    v212 = v252;\n
    v211 = a0;\n
    *(&v209[0]) = *(v212);\n
    memset(&v208, 0, 12);\n
    if (*(v211) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v37 = 0;\n
    if (v209[0] << 24)\n
    {\n
        v37 = 0;\n
        if (v209[1] << 16)\n
        {\n
            v37 = 0;\n
            if (v209[2] << 8)\n
                v37 = v209[3];\n
        }\n
    }\n
    v210 = v37 & 1;\n
    cgc_uint2str(&v208, 12, v210);\n
    v36 = &v208;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v208)) < 0)\n
        cgc__terminate();\n
    v268 = v211;\n
    *(v268) = *(v268) - 4;\n
    v269 = v212;\n
    *(v269) = &*(v269)->field_4;\n
    v111 = v252;\n
    v110 = a0;\n
    if (*(v110) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v109 = *(v111)->field_0;\n
    v270 = v110;\n
    *(v270) = *(v270) - 1;\n
    v271 = v111;\n
    *(v271) = &*(v271)->padding_1;\n
    if (v109 <= *(v110) && !(!v109))\n
        goto LABEL_491d0d;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_491d0d:\n
    v108 = cgc_calloc(v109);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v108, *(v111), v109);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v272 = v111;\n
    *(v272) = &(&*(v272)->field_0)[v109];\n
    v273 = v110;\n
    *(v273) = *(v273) - v109;\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    v203 = v252;\n
    v202 = a0;\n
    if (*(v202) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v201 = *(&*(v203)->field_0);\n
    v274 = v202;\n
    *(v274) = *(v274) - 2;\n
    v275 = v203;\n
    *(v275) = &*(v275)->padding_1[1];\n
    if (v201 <= *(v202) && !(!v201))\n
        goto LABEL_491f47;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_491f47:\n
    v200 = cgc_calloc(v201);\n
    if (!v200)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v200, *(v203), v201);\n
    if (cgc_sendline(1, &v42[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v276 = v202;\n
    *(v276) = *(v276) - v201;\n
    v277 = v203;\n
    *(v277) = &(&*(v277)->field_0)[v201];\n
    cgc_checkheap();\n
    cgc_free(v200);\n
    v99 = v252;\n
    v98 = a0;\n
    *(&v95[0]) = *(v99);\n
    memset(&v94, 0, 21);\n
    if (*(v98) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = 0;\n
    if (v95[0])\n
    {\n
        v35 = 0;\n
        if (v95[1])\n
        {\n
            v35 = 0;\n
            if (v95[2])\n
            {\n
                v35 = 0;\n
                if (v95[3])\n
                {\n
                    v35 = 0;\n
                    if (v95[4] << 24)\n
                    {\n
                        v35 = 0;\n
                        if (v95[5] << 16)\n
                        {\n
                            v35 = 0;\n
                            if (v95[6] << 8)\n
                                v35 = v95[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v96 = v35 & 1;\n
    v97 = 0;\n
    cgc_uint2str(&v94, 21, v96);\n
    v34 = &v94;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v278 = v98;\n
    *(v278) = *(v278) - 8;\n
    v279 = v99;\n
    *(v279) = &(*(v279))[1].padding_1[2];\n
    v159 = v252;\n
    v158 = a0;\n
    memset(&v156, 0, 21);\n
    if (*(v158) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v157 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v54 = [D] x86g_create_fpucw(fpround<4>);\n
    v53 = v54 | 0xc00;\n
    v60 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v156, 21, v60);\n
    v33 = &v156;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v156)) < 0)\n
        cgc__terminate();\n
    v280 = v158;\n
    *(v280) = *(v280) - 8;\n
    v281 = v159;\n
    *(v281) = &(*(v281))[1].padding_1[2];\n
    v88 = v252;\n
    v87 = a0;\n
    *(&v85) = *(v88);\n
    memset(&v84, 0, 6);\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v85[0] << 8)\n
        v32 = v85[1];\n
    v86 = v32 & 1;\n
    cgc_uint2str(&v84, 6, v86);\n
    v31 = &v84;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v84)) < 0)\n
        cgc__terminate();\n
    v282 = v87;\n
    *(v282) = *(v282) - 2;\n
    v283 = v88;\n
    *(v283) = &*(v283)->padding_1[1];\n
    v139 = v252;\n
    v138 = a0;\n
    memset(&v136, 0, 4);\n
    if (*(v138) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v137 = *(v139)->field_0;\n
    cgc_uint2str(&v136, 4, v137);\n
    v30 = &v136;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v136)) < 0)\n
        cgc__terminate();\n
    v284 = v138;\n
    *(v284) = *(v284) - 1;\n
    v285 = v139;\n
    *(v285) = &*(v285)->padding_1;\n
    v175 = v252;\n
    v174 = a0;\n
    memset(&v172, 0, 12);\n
    if (*(v174) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v173 = *(&*(v175)->field_0);\n
    cgc_uint2str(&v172, 12, v173);\n
    v29 = &v172;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v172)) < 0)\n
        cgc__terminate();\n
    v286 = v174;\n
    *(v286) = *(v286) - 4;\n
    v287 = v175;\n
    *(v287) = &*(v287)->field_4;\n
    v135 = v252;\n
    v134 = a0;\n
    memset(&v132, 0, 4);\n
    if (*(v134) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = *(v135)->field_0;\n
    cgc_uint2str(&v132, 4, v133);\n
    v28 = &v132;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v288 = v134;\n
    *(v288) = *(v288) - 1;\n
    v289 = v135;\n
    *(v289) = &*(v289)->padding_1;\n
    v171 = v252;\n
    v170 = a0;\n
    memset(&v168, 0, 12);\n
    if (*(v170) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v169 = *(&*(v171)->field_0);\n
    cgc_uint2str(&v168, 12, v169);\n
    v27 = &v168;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v168)) < 0)\n
        cgc__terminate();\n
    v290 = v170;\n
    *(v290) = *(v290) - 4;\n
    v291 = v171;\n
    *(v291) = &*(v291)->field_4;\n
    v199 = v252;\n
    v198 = a0;\n
    if (*(v198) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v197 = *(&*(v199)->field_0);\n
    v292 = v198;\n
    *(v292) = *(v292) - 2;\n
    v293 = v199;\n
    *(v293) = &*(v293)->padding_1[1];\n
    if (v197 <= *(v198) && !(!v197))\n
        goto LABEL_492bd2;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_492bd2:\n
    v196 = cgc_calloc(v197);\n
    if (!v196)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v196, *(v199), v197);\n
    if (cgc_sendline(1, &v42[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v294 = v198;\n
    *(v294) = *(v294) - v197;\n
    v295 = v199;\n
    *(v295) = &(&*(v295)->field_0)[v197];\n
    cgc_checkheap();\n
    cgc_free(v196);\n
    v187 = v252;\n
    v186 = a0;\n
    memset(&v184, 0, 12);\n
    if (*(v186) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v185 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v52 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1070, size=2, endness=Iend_LE)))));\n
    v51 = v52 | 0xc00;\n
    v59 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v184, 12, v59);\n
    v26 = &v184;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v184)) < 0)\n
        cgc__terminate();\n
    v296 = v186;\n
    *(v296) = *(v296) - 4;\n
    v297 = v187;\n
    *(v297) = &*(v297)->field_4;\n
    v232 = v252;\n
    v231 = a0;\n
    if (*(v231) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v231) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v231);\n
    v230 = v25;\n
    if (!v230)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v229 = cgc_calloc(134);\n
    if (!v229)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v229, &v42[18].padding_0[182]);\n
    cgc_strncpy(v229 + 5, *(v232), v230);\n
    v299 = v232;\n
    *(v299) = &(&*(v299)->field_4)[cgc_strlen(v229)];\n
    v301 = v231;\n
    *(v301) = *(v301) - (cgc_strlen(v229) + -4);\n
    cgc_checkheap();\n
    cgc_free(v229);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v115 = v252;\n
    v114 = a0;\n
    memset(&v112, 0, 6);\n
    if (*(v114) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v113 = *(&*(v115)->field_0);\n
    cgc_uint2str(&v112, 6, v113);\n
    v24 = &v112;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v302 = v114;\n
    *(v302) = *(v302) - 2;\n
    v303 = v115;\n
    *(v303) = &*(v303)->padding_1[1];\n
    v155 = v252;\n
    v154 = a0;\n
    memset(&v152, 0, 21);\n
    if (*(v154) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v153 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v50 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1074, size=2, endness=Iend_LE)))));\n
    v49 = v50 | 0xc00;\n
    v58 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v152, 21, v58);\n
    v23 = &v152;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v152)) < 0)\n
        cgc__terminate();\n
    v304 = v154;\n
    *(v304) = *(v304) - 8;\n
    v305 = v155;\n
    *(v305) = &(*(v305))[1].padding_1[2];\n
    v131 = v252;\n
    v130 = a0;\n
    memset(&v128, 0, 4);\n
    if (*(v130) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = *(v131)->field_0;\n
    cgc_uint2str(&v128, 4, v129);\n
    v22 = &v128;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v306 = v130;\n
    *(v306) = *(v306) - 1;\n
    v307 = v131;\n
    *(v307) = &*(v307)->padding_1;\n
    v127 = v252;\n
    v126 = a0;\n
    memset(&v124, 0, 4);\n
    if (*(v126) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v125 = *(v127)->field_0;\n
    cgc_uint2str(&v124, 4, v125);\n
    v21 = &v124;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v308 = v126;\n
    *(v308) = *(v308) - 1;\n
    v309 = v127;\n
    *(v309) = &*(v309)->padding_1;\n
    v167 = v252;\n
    v166 = a0;\n
    memset(&v164, 0, 12);\n
    if (*(v166) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v165 = *(&*(v167)->field_0);\n
    cgc_uint2str(&v164, 12, v165);\n
    v20 = &v164;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v164)) < 0)\n
        cgc__terminate();\n
    v310 = v166;\n
    *(v310) = *(v310) - 4;\n
    v311 = v167;\n
    *(v311) = &*(v311)->field_4;\n
    v83 = v252;\n
    v82 = a0;\n
    *(&v80) = *(v83);\n
    memset(&v79, 0, 6);\n
    if (*(v82) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v80[0] << 8)\n
        v19 = v80[1];\n
    v81 = v19 & 1;\n
    cgc_uint2str(&v79, 6, v81);\n
    v18 = &v79;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v312 = v82;\n
    *(v312) = *(v312) - 2;\n
    v313 = v83;\n
    *(v313) = &*(v313)->padding_1[1];\n
    v163 = v252;\n
    v162 = a0;\n
    memset(&v160, 0, 12);\n
    if (*(v162) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v161 = *(&*(v163)->field_0);\n
    cgc_uint2str(&v160, 12, v161);\n
    v17 = &v160;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v160)) < 0)\n
        cgc__terminate();\n
    v314 = v162;\n
    *(v314) = *(v314) - 4;\n
    v315 = v163;\n
    *(v315) = &*(v315)->field_4;\n
    v151 = v252;\n
    v150 = a0;\n
    memset(&v148, 0, 21);\n
    if (*(v150) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v149 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1078, size=2, endness=Iend_LE)))));\n
    v47 = v48 | 0xc00;\n
    v57 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v148, 21, v57);\n
    v16 = &v148;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v148)) < 0)\n
        cgc__terminate();\n
    v316 = v150;\n
    *(v316) = *(v316) - 8;\n
    v317 = v151;\n
    *(v317) = &(*(v317))[1].padding_1[2];\n
    v123 = v252;\n
    v122 = a0;\n
    memset(&v120, 0, 4);\n
    if (*(v122) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v121 = *(v123)->field_0;\n
    cgc_uint2str(&v120, 4, v121);\n
    v15 = &v120;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v120)) < 0)\n
        cgc__terminate();\n
    v318 = v122;\n
    *(v318) = *(v318) - 1;\n
    v319 = v123;\n
    *(v319) = &*(v319)->padding_1;\n
    v228 = v252;\n
    v227 = a0;\n
    if (*(v227) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v227) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v227);\n
    v226 = v14;\n
    if (!v226)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v225 = cgc_calloc(134);\n
    if (!v225)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v225, &v42[18].padding_0[182]);\n
    cgc_strncpy(v225 + 5, *(v228), v226);\n
    v321 = v228;\n
    *(v321) = &(&*(v321)->field_4)[cgc_strlen(v225)];\n
    v323 = v227;\n
    *(v323) = *(v323) - (cgc_strlen(v225) + -4);\n
    cgc_checkheap();\n
    cgc_free(v225);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v195 = v252;\n
    v194 = a0;\n
    if (*(v194) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v193 = *(&*(v195)->field_0);\n
    v324 = v194;\n
    *(v324) = *(v324) - 2;\n
    v325 = v195;\n
    *(v325) = &*(v325)->padding_1[1];\n
    if (v193 <= *(v194) && !(!v193))\n
        goto LABEL_494071;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_494071:\n
    v192 = cgc_calloc(v193);\n
    if (!v192)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v192, *(v195), v193);\n
    if (cgc_sendline(1, &v42[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v326 = v194;\n
    *(v326) = *(v326) - v193;\n
    v327 = v195;\n
    *(v327) = &(&*(v327)->field_0)[v193];\n
    cgc_checkheap();\n
    cgc_free(v192);\n
    v246 = v252;\n
    v245 = a0;\n
    if (*(v245) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v244 = *(v246)->field_0;\n
    v328 = v245;\n
    *(v328) = *(v328) - 1;\n
    v329 = v246;\n
    *(v329) = &*(v329)->padding_1;\n
    if (v244 <= *(v245) && !(!v244))\n
        goto LABEL_49428b;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49428b:\n
    v243 = cgc_calloc(v244);\n
    if (!v243)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v243, *(v246), v244);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v330 = v246;\n
    *(v330) = &(&*(v330)->field_0)[v244];\n
    v331 = v245;\n
    *(v331) = *(v331) - v244;\n
    cgc_checkheap();\n
    cgc_free(v243);\n
    v191 = v252;\n
    v190 = a0;\n
    if (*(v190) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v189 = *(&*(v191)->field_0);\n
    v332 = v190;\n
    *(v332) = *(v332) - 2;\n
    v333 = v191;\n
    *(v333) = &*(v333)->padding_1[1];\n
    if (v189 <= *(v190) && !(!v189))\n
        goto LABEL_4944a4;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4944a4:\n
    v188 = cgc_calloc(v189);\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v188, *(v191), v189);\n
    if (cgc_sendline(1, &v42[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v334 = v190;\n
    *(v334) = *(v334) - v189;\n
    v335 = v191;\n
    *(v335) = &(&*(v335)->field_0)[v189];\n
    cgc_checkheap();\n
    cgc_free(v188);\n
    v147 = v252;\n
    v146 = a0;\n
    memset(&v144, 0, 21);\n
    if (*(v146) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v145 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1082, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v144, 21, v56);\n
    v13 = &v144;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v144)) < 0)\n
        cgc__terminate();\n
    v336 = v146;\n
    *(v336) = *(v336) - 8;\n
    v337 = v147;\n
    *(v337) = &(*(v337))[1].padding_1[2];\n
    v224 = v252;\n
    v223 = a0;\n
    if (*(v223) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v223) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v223);\n
    v222 = v12;\n
    if (!v222)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v221 = cgc_calloc(134);\n
    if (!v221)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v221, &v42[18].padding_0[182]);\n
    cgc_strncpy(v221 + 5, *(v224), v222);\n
    v339 = v224;\n
    *(v339) = &(&*(v339)->field_4)[cgc_strlen(v221)];\n
    v341 = v223;\n
    *(v341) = *(v341) - (cgc_strlen(v221) + -4);\n
    cgc_checkheap();\n
    cgc_free(v221);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v119 = v252;\n
    v118 = a0;\n
    memset(&v116, 0, 4);\n
    if (*(v118) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v117 = *(v119)->field_0;\n
    cgc_uint2str(&v116, 4, v117);\n
    v11 = &v116;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v116)) < 0)\n
        cgc__terminate();\n
    v342 = v118;\n
    *(v342) = *(v342) - 1;\n
    v343 = v119;\n
    *(v343) = &*(v343)->padding_1;\n
    v78 = v252;\n
    v77 = a0;\n
    *(&v75) = *(v78);\n
    memset(&v74, 0, 6);\n
    if (*(v77) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v75[0] << 8)\n
        v10 = v75[1];\n
    v76 = v10 & 1;\n
    cgc_uint2str(&v74, 6, v76);\n
    v9 = &v74;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v344 = v77;\n
    *(v344) = *(v344) - 2;\n
    v345 = v78;\n
    *(v345) = &*(v345)->padding_1[1];\n
    v242 = v252;\n
    v241 = a0;\n
    memset(&v238, 0, 21);\n
    if (*(v241) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v346 = *(v242);\n
    v240 = v346->field_4;\n
    v239 = *(&v346->field_0);\n
    cgc_uint2str(&v238, 21, v239);\n
    v8 = &v238;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v238)) < 0)\n
        cgc__terminate();\n
    v347 = v241;\n
    *(v347) = *(v347) - 8;\n
    v348 = v242;\n
    *(v348) = &(*(v348))[1].padding_1[2];\n
    v237 = v252;\n
    v236 = a0;\n
    memset(&v233, 0, 21);\n
    if (*(v236) < 8)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v349 = *(v237);\n
    v235 = v349->field_4;\n
    v234 = *(&v349->field_0);\n
    cgc_uint2str(&v233, 21, v234);\n
    v7 = &v233;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v233)) < 0)\n
        cgc__terminate();\n
    v350 = v236;\n
    *(v350) = *(v350) - 8;\n
    v351 = v237;\n
    *(v351) = &(*(v351))[1].padding_1[2];\n
    v107 = v252;\n
    v106 = a0;\n
    if (*(v106) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(v107)->field_0;\n
    v352 = v106;\n
    *(v352) = *(v352) - 1;\n
    v353 = v107;\n
    *(v353) = &*(v353)->padding_1;\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_494fe6;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_494fe6:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v354 = v107;\n
    *(v354) = &(&*(v354)->field_0)[v105];\n
    v355 = v106;\n
    *(v355) = *(v355) - v105;\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v220 = v252;\n
    v219 = a0;\n
    if (*(v219) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v219) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v219);\n
    v218 = v6;\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v217 = cgc_calloc(134);\n
    if (!v217)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v217, &v42[18].padding_0[182]);\n
    cgc_strncpy(v217 + 5, *(v220), v218);\n
    v357 = v220;\n
    *(v357) = &(&*(v357)->field_4)[cgc_strlen(v217)];\n
    v359 = v219;\n
    *(v359) = *(v359) - (cgc_strlen(v217) + -4);\n
    cgc_checkheap();\n
    cgc_free(v217);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v216 = v252;\n
    v215 = a0;\n
    if (*(v215) <= 0)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v215) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v215);\n
    v214 = v5;\n
    if (!v214)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v213 = cgc_calloc(134);\n
    if (!v213)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v213, &v42[18].padding_0[182]);\n
    cgc_strncpy(v213 + 5, *(v216), v214);\n
    v361 = v216;\n
    *(v361) = &(&*(v361)->field_4)[cgc_strlen(v213)];\n
    v363 = v215;\n
    *(v363) = *(v363) - (cgc_strlen(v213) + -4);\n
    cgc_checkheap();\n
    cgc_free(v213);\n
    if (cgc_sendline(1, &v42[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v73 = v252;\n
    v72 = a0;\n
    *(&v70) = *(v73);\n
    memset(&v69, 0, 6);\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v70[0] << 8)\n
        v4 = v70[1];\n
    v71 = v4 & 1;\n
    cgc_uint2str(&v69, 6, v71);\n
    v3 = &v69;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v364 = v72;\n
    *(v364) = *(v364) - 2;\n
    v365 = v73;\n
    *(v365) = &*(v365)->padding_1[1];\n
    v68 = v252;\n
    v67 = a0;\n
    *(&v65) = *(v68);\n
    memset(&v64, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v65[0] << 8)\n
        v2 = v65[1];\n
    v66 = v2 & 1;\n
    cgc_uint2str(&v64, 6, v66);\n
    v1 = &v64;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v366 = v67;\n
    *(v366) = *(v366) - 2;\n
    v367 = v68;\n
    *(v367) = &*(v367)->padding_1[1];\n
    v103 = v252;\n
    v102 = a0;\n
    if (*(v102) < 1)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v101 = *(v103)->field_0;\n
    v368 = v102;\n
    *(v368) = *(v368) - 1;\n
    v369 = v103;\n
    *(v369) = &*(v369)->padding_1;\n
    if (v101 <= *(v102) && !(!v101))\n
        goto LABEL_495a2e;\n
    if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_495a2e:\n
    v100 = cgc_calloc(v101);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v100, *(v103), v101);\n
    if (cgc_sendline(1, &v42[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v370 = v103;\n
    *(v370) = &(&*(v370)->field_0)[v101];\n
    v371 = v102;\n
    *(v371) = *(v371) - v101;\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    v183 = v252;\n
    v182 = a0;\n
    memset(&v180, 0, 12);\n
    if (*(v182) < 4)\n
    {\n
        if (cgc_sendline(1, &v42[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v181 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1086, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v180, 12, v55);\n
    v0 = &v180;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v180)) < 0)\n
        cgc__terminate();\n
    v372 = v182;\n
    *(v372) = *(v372) - 4;\n
    v373 = v183;\n
    *(v373) = &*(v373)->field_4;\n
    v62 ^= v42->field_260;\n
    if (v62)\n
        cgc___stack_cookie_fail();\n
    v374 = a0;\n
    if (*(v374) > 0 && v61 >= 0 && v61 < 0)\n
        v374 = *((&v63 + 0x4 * v61))(v252);\n
    v375 = v251;\n
    return v374;\n
}\n
", "4808007:sub_495d47": null, "4808016:cgc_process_llamamink": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamamink(struct struct_2 **v10, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    struct_0 *v1;  // [bp-0x24]\n
    struct struct_3 **v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x18]\n
    char v5;  // [bp-0x15]\n
    char v6;  // [bp-0x11]\n
    unsigned int *v7;  // [bp-0x10]\n
    struct struct_2 **v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int *v12;  // eax\n
    struct struct_2 **v13;  // eax\n
    unsigned int *v14;  // eax, Other Possible Types: unsigned int\n
    unsigned int v15;  // ebx\n
\n
    v9 = v11;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = cgc__cookie;\n
    v2 = -1;\n
    if (cgc_sendline(1, \"===llamamink===\", 15) < 0)\n
        cgc__terminate();\n
    v8 = v10;\n
    v7 = a0;\n
    memset(&v5, 0, 4);\n
    if (*(v7) < 1)\n
    {\n
        if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = *(v8)->field_0;\n
    cgc_uint2str(&v5, 4, v6);\n
    v0 = &v5;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v5)) < 0)\n
        cgc__terminate();\n
    v12 = v7;\n
    *(v12) = *(v12) - 1;\n
    v13 = v8;\n
    *(v13) = *(v13) + 1;\n
    v3 ^= v1->field_260;\n
    if (v3)\n
        cgc___stack_cookie_fail();\n
    v14 = a0;\n
    if (*(v14) > 0 && v2 >= 0 && v2 < 0)\n
        v14 = *((&v4 + 0x4 * v2))(v10);\n
    v15 = v9;\n
    return v14;\n
}\n
", "4808477:sub_495f1d": null, "4808480:cgc_process_llamaintracutaneous": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaintracutaneous(struct struct_0 **v247, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x544]\n
    char v1;  // [bp-0x53d]\n
    struct_1 *v2;  // [bp-0x53c]\n
    char v3;  // [bp-0x535]\n
    struct_1 *v4;  // [bp-0x534]\n
    struct_1 *v5;  // [bp-0x530]\n
    struct_1 *v6;  // [bp-0x52c]\n
    struct_1 *v7;  // [bp-0x528]\n
    struct_1 *v8;  // [bp-0x524]\n
    unsigned int v9;  // [bp-0x520]\n
    struct_1 *v10;  // [bp-0x51c]\n
    struct_1 *v11;  // [bp-0x518]\n
    struct_1 *v12;  // [bp-0x514]\n
    struct_1 *v13;  // [bp-0x510]\n
    struct_1 *v14;  // [bp-0x50c]\n
    char v15;  // [bp-0x505]\n
    struct_1 *v16;  // [bp-0x504]\n
    struct_1 *v17;  // [bp-0x500]\n
    char v18;  // [bp-0x4f9]\n
    struct_1 *v19;  // [bp-0x4f8]\n
    struct_1 *v20;  // [bp-0x4f4]\n
    struct_1 *v21;  // [bp-0x4f0]\n
    struct_1 *v22;  // [bp-0x4ec]\n
    struct_1 *v23;  // [bp-0x4e8]\n
    struct_1 *v24;  // [bp-0x4e4]\n
    struct_1 *v25;  // [bp-0x4e0]\n
    struct_1 *v26;  // [bp-0x4dc]\n
    struct_1 *v27;  // [bp-0x4d8]\n
    struct_1 *v28;  // [bp-0x4d4]\n
    char v29;  // [bp-0x4cd]\n
    struct_1 *v30;  // [bp-0x4cc]\n
    struct_1 *v31;  // [bp-0x4c8]\n
    struct_1 *v32;  // [bp-0x4c4]\n
    char v33;  // [bp-0x4bd]\n
    struct_1 *v34;  // [bp-0x4bc]\n
    char v35;  // [bp-0x4b5]\n
    struct_1 *v36;  // [bp-0x4b4]\n
    unsigned int v37;  // [bp-0x4b0]\n
    struct_1 *v38;  // [bp-0x4ac]\n
    char v39;  // [bp-0x4a5]\n
    struct_2 *v40;  // [bp-0x4a4]\n
    unsigned short v41;  // [bp-0x4a0]\n
    unsigned short v42;  // [bp-0x49e]\n
    unsigned short v43;  // [bp-0x49c]\n
    unsigned short v44;  // [bp-0x49a]\n
    unsigned short v45;  // [bp-0x498]\n
    unsigned short v46;  // [bp-0x496]\n
    unsigned short v47;  // [bp-0x494]\n
    unsigned short v48;  // [bp-0x492]\n
    unsigned short v49;  // [bp-0x490]\n
    unsigned short v50;  // [bp-0x48e]\n
    unsigned short v51;  // [bp-0x48c]\n
    unsigned short v52;  // [bp-0x48a]\n
    unsigned short v53;  // [bp-0x488]\n
    unsigned short v54;  // [bp-0x486]\n
    unsigned long v55;  // [bp-0x484]\n
    unsigned long v56;  // [bp-0x47c]\n
    unsigned long v57;  // [bp-0x474]\n
    unsigned long v58;  // [bp-0x46c]\n
    unsigned long v59;  // [bp-0x464]\n
    unsigned long v60;  // [bp-0x45c]\n
    unsigned long v61;  // [bp-0x454]\n
    struct struct_3 **v62;  // [bp-0x448]\n
    unsigned int v63;  // [bp-0x444]\n
    char v64;  // [bp-0x440]\n
    char v65;  // [bp-0x43e]\n
    char v66[2];  // [bp-0x438]\n
    unsigned short v67;  // [bp-0x432]\n
    unsigned int *v68;  // [bp-0x430]\n
    struct struct_0 **v69;  // [bp-0x42c]\n
    char v70;  // [bp-0x426]\n
    char v71[2];  // [bp-0x420]\n
    unsigned short v72;  // [bp-0x41a]\n
    unsigned int *v73;  // [bp-0x418]\n
    struct struct_0 **v74;  // [bp-0x414]\n
    char v75;  // [bp-0x40d]\n
    char v76[8];  // [bp-0x3f8]\n
    unsigned int v77;  // [bp-0x3f4]\n
    void* v78;  // [bp-0x3f0]\n
    unsigned int *v79;  // [bp-0x3e8]\n
    struct struct_0 **v80;  // [bp-0x3e4]\n
    char v81;  // [bp-0x3dd]\n
    char v82[8];  // [bp-0x3c8]\n
    unsigned int v83;  // [bp-0x3c4]\n
    void* v84;  // [bp-0x3c0]\n
    unsigned int *v85;  // [bp-0x3b8]\n
    struct struct_0 **v86;  // [bp-0x3b4]\n
    char v87;  // [bp-0x3ad]\n
    char v88[8];  // [bp-0x398]\n
    unsigned int v89;  // [bp-0x394]\n
    void* v90;  // [bp-0x390]\n
    unsigned int *v91;  // [bp-0x388]\n
    struct struct_0 **v92;  // [bp-0x384]\n
    char v93;  // [bp-0x37d]\n
    char v94[8];  // [bp-0x368]\n
    unsigned int v95;  // [bp-0x364]\n
    void* v96;  // [bp-0x360]\n
    unsigned int *v97;  // [bp-0x358]\n
    struct struct_0 **v98;  // [bp-0x354]\n
    char v99;  // [bp-0x34d]\n
    char v100[8];  // [bp-0x338]\n
    unsigned int v101;  // [bp-0x334]\n
    void* v102;  // [bp-0x330]\n
    unsigned int *v103;  // [bp-0x32c]\n
    struct struct_0 **v104;  // [bp-0x328]\n
    unsigned int v105;  // [bp-0x324]\n
    char v106;  // [bp-0x31d]\n
    unsigned int *v107;  // [bp-0x31c]\n
    struct struct_0 **v108;  // [bp-0x318]\n
    unsigned int v109;  // [bp-0x314]\n
    char v110;  // [bp-0x30d]\n
    unsigned int *v111;  // [bp-0x30c]\n
    struct struct_0 **v112;  // [bp-0x308]\n
    unsigned int v113;  // [bp-0x304]\n
    char v114;  // [bp-0x2fd]\n
    unsigned int *v115;  // [bp-0x2fc]\n
    struct struct_0 **v116;  // [bp-0x2f8]\n
    unsigned int v117;  // [bp-0x2f4]\n
    char v118;  // [bp-0x2ed]\n
    unsigned int *v119;  // [bp-0x2ec]\n
    struct struct_0 **v120;  // [bp-0x2e8]\n
    char *v121;  // [bp-0x2e4]\n
    unsigned int v122;  // [bp-0x2e0]\n
    unsigned int *v123;  // [bp-0x2dc]\n
    struct struct_0 **v124;  // [bp-0x2d8]\n
    char v125;  // [bp-0x2d4]\n
    unsigned short v126;  // [bp-0x2ce]\n
    unsigned int *v127;  // [bp-0x2cc]\n
    struct struct_0 **v128;  // [bp-0x2c8]\n
    char v129;  // [bp-0x2c4]\n
    unsigned short v130;  // [bp-0x2be]\n
    unsigned int *v131;  // [bp-0x2bc]\n
    struct struct_0 **v132;  // [bp-0x2b8]\n
    char v133;  // [bp-0x2b4]\n
    unsigned short v134;  // [bp-0x2ae]\n
    unsigned int *v135;  // [bp-0x2ac]\n
    struct struct_0 **v136;  // [bp-0x2a8]\n
    char v137;  // [bp-0x2a4]\n
    unsigned short v138;  // [bp-0x29e]\n
    unsigned int *v139;  // [bp-0x29c]\n
    struct struct_0 **v140;  // [bp-0x298]\n
    char v141;  // [bp-0x294]\n
    unsigned short v142;  // [bp-0x28e]\n
    unsigned int *v143;  // [bp-0x28c]\n
    struct struct_0 **v144;  // [bp-0x288]\n
    char v145;  // [bp-0x284]\n
    unsigned short v146;  // [bp-0x27e]\n
    unsigned int *v147;  // [bp-0x27c]\n
    struct struct_0 **v148;  // [bp-0x278]\n
    char v149;  // [bp-0x271]\n
    char v150;  // [bp-0x26d]\n
    unsigned int *v151;  // [bp-0x26c]\n
    struct struct_0 **v152;  // [bp-0x268]\n
    char v153;  // [bp-0x261]\n
    char v154;  // [bp-0x25d]\n
    unsigned int *v155;  // [bp-0x25c]\n
    struct struct_0 **v156;  // [bp-0x258]\n
    char v157;  // [bp-0x251]\n
    char v158;  // [bp-0x24d]\n
    unsigned int *v159;  // [bp-0x24c]\n
    struct struct_0 **v160;  // [bp-0x248]\n
    char v161;  // [bp-0x241]\n
    unsigned long v162;  // [bp-0x22c]\n
    unsigned int *v163;  // [bp-0x224]\n
    struct struct_0 **v164;  // [bp-0x220]\n
    char v165;  // [bp-0x219]\n
    unsigned long v166;  // [bp-0x204]\n
    unsigned int *v167;  // [bp-0x1fc]\n
    struct struct_0 **v168;  // [bp-0x1f8]\n
    char v169;  // [bp-0x1f1]\n
    unsigned long v170;  // [bp-0x1dc]\n
    unsigned int *v171;  // [bp-0x1d4]\n
    struct struct_0 **v172;  // [bp-0x1d0]\n
    char v173;  // [bp-0x1c9]\n
    unsigned long v174;  // [bp-0x1b4]\n
    unsigned int *v175;  // [bp-0x1a8]\n
    struct struct_0 **v176;  // [bp-0x1a4]\n
    char v177;  // [bp-0x1a0]\n
    unsigned int v178;  // [bp-0x194]\n
    unsigned int *v179;  // [bp-0x190]\n
    struct struct_0 **v180;  // [bp-0x18c]\n
    char v181;  // [bp-0x188]\n
    unsigned int v182;  // [bp-0x17c]\n
    unsigned int *v183;  // [bp-0x178]\n
    struct struct_0 **v184;  // [bp-0x174]\n
    char v185;  // [bp-0x170]\n
    unsigned int v186;  // [bp-0x164]\n
    unsigned int *v187;  // [bp-0x160]\n
    struct struct_0 **v188;  // [bp-0x15c]\n
    char v189;  // [bp-0x158]\n
    unsigned int v190;  // [bp-0x14c]\n
    unsigned int *v191;  // [bp-0x148]\n
    struct struct_0 **v192;  // [bp-0x144]\n
    char v193;  // [bp-0x140]\n
    unsigned int v194;  // [bp-0x134]\n
    unsigned int *v195;  // [bp-0x130]\n
    struct struct_0 **v196;  // [bp-0x12c]\n
    unsigned int v197;  // [bp-0x128]\n
    unsigned short v198;  // [bp-0x122]\n
    unsigned int *v199;  // [bp-0x120]\n
    struct struct_0 **v200;  // [bp-0x11c]\n
    unsigned int v201;  // [bp-0x118]\n
    unsigned short v202;  // [bp-0x112]\n
    unsigned int *v203;  // [bp-0x110]\n
    struct struct_0 **v204;  // [bp-0x10c]\n
    unsigned int v205;  // [bp-0x108]\n
    unsigned short v206;  // [bp-0x102]\n
    unsigned int *v207;  // [bp-0x100]\n
    struct struct_0 **v208;  // [bp-0xfc]\n
    unsigned int v209;  // [bp-0xf8]\n
    unsigned short v210;  // [bp-0xf2]\n
    unsigned int *v211;  // [bp-0xf0]\n
    struct struct_0 **v212;  // [bp-0xec]\n
    char v213;  // [bp-0xe8]\n
    char v214[4];  // [bp-0xdc]\n
    unsigned int v215;  // [bp-0xd8]\n
    unsigned int *v216;  // [bp-0xd4]\n
    struct struct_0 **v217;  // [bp-0xd0]\n
    char *v218;  // [bp-0xcc]\n
    unsigned int v219;  // [bp-0xc8]\n
    unsigned int *v220;  // [bp-0xc4]\n
    struct struct_0 **v221;  // [bp-0xc0]\n
    char v222;  // [bp-0xb9]\n
    unsigned int v223;  // [bp-0xa4]\n
    unsigned int v224;  // [bp-0xa0]\n
    unsigned int *v225;  // [bp-0x9c]\n
    struct struct_0 **v226;  // [bp-0x98]\n
    char v227;  // [bp-0x91]\n
    unsigned int v228;  // [bp-0x7c]\n
    unsigned int v229;  // [bp-0x78]\n
    unsigned int *v230;  // [bp-0x74]\n
    struct struct_0 **v231;  // [bp-0x70]\n
    char v232;  // [bp-0x69]\n
    unsigned int v233;  // [bp-0x54]\n
    unsigned int v234;  // [bp-0x50]\n
    unsigned int *v235;  // [bp-0x4c]\n
    struct struct_0 **v236;  // [bp-0x48]\n
    char v237;  // [bp-0x41]\n
    unsigned int v238;  // [bp-0x2c]\n
    unsigned int v239;  // [bp-0x28]\n
    unsigned int *v240;  // [bp-0x20]\n
    struct struct_0 **v241;  // [bp-0x1c]\n
    unsigned int v242;  // [bp-0x18]\n
    char v243;  // [bp-0x11]\n
    unsigned int *v244;  // [bp-0x10]\n
    struct struct_0 **v245;  // [bp-0xc]\n
    unsigned int v246;  // [bp-0x8]\n
    unsigned int v248;  // ebx\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    struct struct_0 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    struct struct_0 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    unsigned int v289[2];  // ecx\n
    unsigned int *v290;  // eax\n
    struct struct_0 **v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int v294[2];  // ecx\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_0 **v298;  // eax\n
    struct struct_0 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v305;  // eax\n
    struct struct_0 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int v309[2];  // ecx\n
    unsigned int *v310;  // eax\n
    struct struct_0 **v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_0 **v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_0 **v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_0 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    struct struct_0 **v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    struct struct_0 **v322;  // eax\n
    unsigned int *v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_0 **v325;  // eax\n
    struct struct_0 **v326;  // eax\n
    unsigned int *v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_0 **v329;  // eax\n
    unsigned int *v330;  // eax\n
    struct struct_0 **v331;  // eax\n
    unsigned int v332[2];  // ecx\n
    unsigned int *v333;  // eax\n
    struct struct_0 **v334;  // eax\n
    unsigned int *v335;  // eax\n
    struct struct_0 **v336;  // eax\n
    unsigned int *v337;  // eax\n
    struct struct_0 **v338;  // eax\n
    struct struct_0 **v340;  // eax\n
    unsigned int *v342;  // eax\n
    unsigned int *v343;  // eax\n
    struct struct_0 **v344;  // eax\n
    unsigned int *v345;  // eax\n
    struct struct_0 **v346;  // eax\n
    unsigned int *v347;  // eax\n
    struct struct_0 **v348;  // eax\n
    unsigned int *v349;  // eax\n
    struct struct_0 **v350;  // eax\n
    unsigned int *v351;  // eax\n
    struct struct_0 **v352;  // eax\n
    unsigned int *v353;  // eax\n
    struct struct_0 **v354;  // eax\n
    unsigned int *v355;  // eax\n
    struct struct_0 **v356;  // eax\n
    unsigned int *v357;  // eax, Other Possible Types: unsigned int\n
    unsigned int v358;  // ebx\n
\n
    v246 = v248;\n
    v40 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v63 = cgc__cookie;\n
    v62 = -1;\n
    if (cgc_sendline(1, \"===llamaintracutaneous===\", 25) < 0)\n
        cgc__terminate();\n
    v74 = v247;\n
    v73 = a0;\n
    *(&v71) = *(v74);\n
    memset(&v70, 0, 6);\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = 0;\n
    if (v71[0] << 8)\n
        v39 = v71[1];\n
    v72 = v39 & 1;\n
    cgc_uint2str(&v70, 6, v72);\n
    v38 = &v70;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v249 = v73;\n
    *(v249) = *(v249) - 2;\n
    v250 = v74;\n
    *(v250) = &*(v250)->padding_1[1];\n
    v204 = v247;\n
    v203 = a0;\n
    if (*(v203) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = *(&*(v204)->field_0);\n
    v251 = v203;\n
    *(v251) = *(v251) - 2;\n
    v252 = v204;\n
    *(v252) = &*(v252)->padding_1[1];\n
    if (v202 <= *(v203) && !(!v202))\n
        goto LABEL_496234;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_496234:\n
    v201 = cgc_calloc(v202);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v201, *(v204), v202);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v253 = v203;\n
    *(v253) = *(v253) - v202;\n
    v254 = v204;\n
    *(v254) = &(&*(v254)->field_0)[v202];\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    v221 = v247;\n
    v220 = a0;\n
    if (*(v220) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v220) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v220);\n
    v219 = v37;\n
    if (!v219)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v218 = cgc_calloc(134);\n
    if (!v218)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v218, &v40[18].padding_0[182]);\n
    cgc_strncpy(v218 + 5, *(v221), v219);\n
    v256 = v221;\n
    *(v256) = &(&*(v256)->field_4)[cgc_strlen(v218)];\n
    v258 = v220;\n
    *(v258) = *(v258) - (cgc_strlen(v218) + -4);\n
    cgc_checkheap();\n
    cgc_free(v218);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v120 = v247;\n
    v119 = a0;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(v120)->field_0;\n
    v259 = v119;\n
    *(v259) = *(v259) - 1;\n
    v260 = v120;\n
    *(v260) = &*(v260)->padding_1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_4966ed;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4966ed:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v261 = v120;\n
    *(v261) = &(&*(v261)->field_0)[v118];\n
    v262 = v119;\n
    *(v262) = *(v262) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v160 = v247;\n
    v159 = a0;\n
    memset(&v157, 0, 4);\n
    if (*(v159) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v158 = *(v160)->field_0;\n
    cgc_uint2str(&v157, 4, v158);\n
    v36 = &v157;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v157)) < 0)\n
        cgc__terminate();\n
    v263 = v159;\n
    *(v263) = *(v263) - 1;\n
    v264 = v160;\n
    *(v264) = &*(v264)->padding_1;\n
    v104 = v247;\n
    v103 = a0;\n
    *(&v100[0]) = *(v104);\n
    memset(&v99, 0, 21);\n
    if (*(v103) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = 0;\n
    if (v100[0])\n
    {\n
        v35 = 0;\n
        if (v100[1])\n
        {\n
            v35 = 0;\n
            if (v100[2])\n
            {\n
                v35 = 0;\n
                if (v100[3])\n
                {\n
                    v35 = 0;\n
                    if (v100[4] << 24)\n
                    {\n
                        v35 = 0;\n
                        if (v100[5] << 16)\n
                        {\n
                            v35 = 0;\n
                            if (v100[6] << 8)\n
                                v35 = v100[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v101 = v35 & 1;\n
    v102 = 0;\n
    cgc_uint2str(&v99, 21, v101);\n
    v34 = &v99;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v265 = v103;\n
    *(v265) = *(v265) - 8;\n
    v266 = v104;\n
    *(v266) = &(*(v266))[1].padding_1[2];\n
    v98 = v247;\n
    v97 = a0;\n
    *(&v94[0]) = *(v98);\n
    memset(&v93, 0, 21);\n
    if (*(v97) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = 0;\n
    if (v94[0])\n
    {\n
        v33 = 0;\n
        if (v94[1])\n
        {\n
            v33 = 0;\n
            if (v94[2])\n
            {\n
                v33 = 0;\n
                if (v94[3])\n
                {\n
                    v33 = 0;\n
                    if (v94[4] << 24)\n
                    {\n
                        v33 = 0;\n
                        if (v94[5] << 16)\n
                        {\n
                            v33 = 0;\n
                            if (v94[6] << 8)\n
                                v33 = v94[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v95 = v33 & 1;\n
    v96 = 0;\n
    cgc_uint2str(&v93, 21, v95);\n
    v32 = &v93;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v93)) < 0)\n
        cgc__terminate();\n
    v267 = v97;\n
    *(v267) = *(v267) - 8;\n
    v268 = v98;\n
    *(v268) = &(*(v268))[1].padding_1[2];\n
    v156 = v247;\n
    v155 = a0;\n
    memset(&v153, 0, 4);\n
    if (*(v155) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v154 = *(v156)->field_0;\n
    cgc_uint2str(&v153, 4, v154);\n
    v31 = &v153;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v153)) < 0)\n
        cgc__terminate();\n
    v269 = v155;\n
    *(v269) = *(v269) - 1;\n
    v270 = v156;\n
    *(v270) = &*(v270)->padding_1;\n
    v212 = v247;\n
    v211 = a0;\n
    if (*(v211) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v210 = *(&*(v212)->field_0);\n
    v271 = v211;\n
    *(v271) = *(v271) - 2;\n
    v272 = v212;\n
    *(v272) = &*(v272)->padding_1[1];\n
    if (v210 <= *(v211) && !(!v210))\n
        goto LABEL_49703f;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49703f:\n
    v209 = cgc_calloc(v210);\n
    if (!v209)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v209, *(v212), v210);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v273 = v211;\n
    *(v273) = *(v273) - v210;\n
    v274 = v212;\n
    *(v274) = &(&*(v274)->field_0)[v210];\n
    cgc_checkheap();\n
    cgc_free(v209);\n
    v148 = v247;\n
    v147 = a0;\n
    memset(&v145, 0, 6);\n
    if (*(v147) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v146 = *(&*(v148)->field_0);\n
    cgc_uint2str(&v145, 6, v146);\n
    v30 = &v145;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v145)) < 0)\n
        cgc__terminate();\n
    v275 = v147;\n
    *(v275) = *(v275) - 2;\n
    v276 = v148;\n
    *(v276) = &*(v276)->padding_1[1];\n
    v69 = v247;\n
    v68 = a0;\n
    *(&v66) = *(v69);\n
    memset(&v65, 0, 6);\n
    if (*(v68) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = 0;\n
    if (v66[0] << 8)\n
        v29 = v66[1];\n
    v67 = v29 & 1;\n
    cgc_uint2str(&v65, 6, v67);\n
    v28 = &v65;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v277 = v68;\n
    *(v277) = *(v277) - 2;\n
    v278 = v69;\n
    *(v278) = &*(v278)->padding_1[1];\n
    v144 = v247;\n
    v143 = a0;\n
    memset(&v141, 0, 6);\n
    if (*(v143) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v142 = *(&*(v144)->field_0);\n
    cgc_uint2str(&v141, 6, v142);\n
    v27 = &v141;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v141)) < 0)\n
        cgc__terminate();\n
    v279 = v143;\n
    *(v279) = *(v279) - 2;\n
    v280 = v144;\n
    *(v280) = &*(v280)->padding_1[1];\n
    v176 = v247;\n
    v175 = a0;\n
    memset(&v173, 0, 21);\n
    if (*(v175) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v174 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v54 = [D] x86g_create_fpucw(fpround<4>);\n
    v53 = v54 | 0xc00;\n
    v61 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v173, 21, v61);\n
    v26 = &v173;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v173)) < 0)\n
        cgc__terminate();\n
    v281 = v175;\n
    *(v281) = *(v281) - 8;\n
    v282 = v176;\n
    *(v282) = &(*(v282))[1].padding_1[2];\n
    v116 = v247;\n
    v115 = a0;\n
    if (*(v115) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(v116)->field_0;\n
    v283 = v115;\n
    *(v283) = *(v283) - 1;\n
    v284 = v116;\n
    *(v284) = &*(v284)->padding_1;\n
    if (v114 <= *(v115) && !(!v114))\n
        goto LABEL_4977fe;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4977fe:\n
    v113 = cgc_calloc(v114);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v113, *(v116), v114);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v285 = v116;\n
    *(v285) = &(&*(v285)->field_0)[v114];\n
    v286 = v115;\n
    *(v286) = *(v286) - v114;\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    v152 = v247;\n
    v151 = a0;\n
    memset(&v149, 0, 4);\n
    if (*(v151) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v150 = *(v152)->field_0;\n
    cgc_uint2str(&v149, 4, v150);\n
    v25 = &v149;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v149)) < 0)\n
        cgc__terminate();\n
    v287 = v151;\n
    *(v287) = *(v287) - 1;\n
    v288 = v152;\n
    *(v288) = &*(v288)->padding_1;\n
    v241 = v247;\n
    v240 = a0;\n
    memset(&v237, 0, 21);\n
    if (*(v240) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v289 = *(v241);\n
    v239 = v289[1];\n
    v238 = v289[0];\n
    cgc_uint2str(&v237, 21, v238);\n
    v24 = &v237;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v237)) < 0)\n
        cgc__terminate();\n
    v290 = v240;\n
    *(v290) = *(v290) - 8;\n
    v291 = v241;\n
    *(v291) = &(*(v291))[1].padding_1[2];\n
    v172 = v247;\n
    v171 = a0;\n
    memset(&v169, 0, 21);\n
    if (*(v171) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v170 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v52 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1158, size=2, endness=Iend_LE)))));\n
    v51 = v52 | 0xc00;\n
    v60 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v169, 21, v60);\n
    v23 = &v169;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v169)) < 0)\n
        cgc__terminate();\n
    v292 = v171;\n
    *(v292) = *(v292) - 8;\n
    v293 = v172;\n
    *(v293) = &(*(v293))[1].padding_1[2];\n
    v236 = v247;\n
    v235 = a0;\n
    memset(&v232, 0, 21);\n
    if (*(v235) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v294 = *(v236);\n
    v234 = v294[1];\n
    v233 = v294[0];\n
    cgc_uint2str(&v232, 21, v233);\n
    v22 = &v232;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v232)) < 0)\n
        cgc__terminate();\n
    v295 = v235;\n
    *(v295) = *(v295) - 8;\n
    v296 = v236;\n
    *(v296) = &(*(v296))[1].padding_1[2];\n
    v245 = v247;\n
    v244 = a0;\n
    if (*(v244) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v243 = *(v245)->field_0;\n
    v297 = v244;\n
    *(v297) = *(v297) - 1;\n
    v298 = v245;\n
    *(v298) = &*(v298)->padding_1;\n
    if (v243 <= *(v244) && !(!v243))\n
        goto LABEL_497f1a;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_497f1a:\n
    v242 = cgc_calloc(v243);\n
    if (!v242)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v242, *(v245), v243);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v299 = v245;\n
    *(v299) = &(&*(v299)->field_0)[v243];\n
    v300 = v244;\n
    *(v300) = *(v300) - v243;\n
    cgc_checkheap();\n
    cgc_free(v242);\n
    v196 = v247;\n
    v195 = a0;\n
    memset(&v193, 0, 12);\n
    if (*(v195) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v194 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v50 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1162, size=2, endness=Iend_LE)))));\n
    v49 = v50 | 0xc00;\n
    v59 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v193, 12, v59);\n
    v21 = &v193;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v301 = v195;\n
    *(v301) = *(v301) - 4;\n
    v302 = v196;\n
    *(v302) = &*(v302)->field_4;\n
    v184 = v247;\n
    v183 = a0;\n
    memset(&v181, 0, 12);\n
    if (*(v183) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = *(&*(v184)->field_0);\n
    cgc_uint2str(&v181, 12, v182);\n
    v20 = &v181;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v181)) < 0)\n
        cgc__terminate();\n
    v303 = v183;\n
    *(v303) = *(v303) - 4;\n
    v304 = v184;\n
    *(v304) = &*(v304)->field_4;\n
    v140 = v247;\n
    v139 = a0;\n
    memset(&v137, 0, 6);\n
    if (*(v139) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v138 = *(&*(v140)->field_0);\n
    cgc_uint2str(&v137, 6, v138);\n
    v19 = &v137;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v137)) < 0)\n
        cgc__terminate();\n
    v305 = v139;\n
    *(v305) = *(v305) - 2;\n
    v306 = v140;\n
    *(v306) = &*(v306)->padding_1[1];\n
    v92 = v247;\n
    v91 = a0;\n
    *(&v88[0]) = *(v92);\n
    memset(&v87, 0, 21);\n
    if (*(v91) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v88[0])\n
    {\n
        v18 = 0;\n
        if (v88[1])\n
        {\n
            v18 = 0;\n
            if (v88[2])\n
            {\n
                v18 = 0;\n
                if (v88[3])\n
                {\n
                    v18 = 0;\n
                    if (v88[4] << 24)\n
                    {\n
                        v18 = 0;\n
                        if (v88[5] << 16)\n
                        {\n
                            v18 = 0;\n
                            if (v88[6] << 8)\n
                                v18 = v88[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v89 = v18 & 1;\n
    v90 = 0;\n
    cgc_uint2str(&v87, 21, v89);\n
    v17 = &v87;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v307 = v91;\n
    *(v307) = *(v307) - 8;\n
    v308 = v92;\n
    *(v308) = &(*(v308))[1].padding_1[2];\n
    v231 = v247;\n
    v230 = a0;\n
    memset(&v227, 0, 21);\n
    if (*(v230) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v309 = *(v231);\n
    v229 = v309[1];\n
    v228 = v309[0];\n
    cgc_uint2str(&v227, 21, v228);\n
    v16 = &v227;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v227)) < 0)\n
        cgc__terminate();\n
    v310 = v230;\n
    *(v310) = *(v310) - 8;\n
    v311 = v231;\n
    *(v311) = &(*(v311))[1].padding_1[2];\n
    v200 = v247;\n
    v199 = a0;\n
    if (*(v199) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v198 = *(&*(v200)->field_0);\n
    v312 = v199;\n
    *(v312) = *(v312) - 2;\n
    v313 = v200;\n
    *(v313) = &*(v313)->padding_1[1];\n
    if (v198 <= *(v199) && !(!v198))\n
        goto LABEL_4988a9;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4988a9:\n
    v197 = cgc_calloc(v198);\n
    if (!v197)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v197, *(v200), v198);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v314 = v199;\n
    *(v314) = *(v314) - v198;\n
    v315 = v200;\n
    *(v315) = &(&*(v315)->field_0)[v198];\n
    cgc_checkheap();\n
    cgc_free(v197);\n
    v217 = v247;\n
    v216 = a0;\n
    *(&v214[0]) = *(v217);\n
    memset(&v213, 0, 12);\n
    if (*(v216) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v214[0] << 24)\n
    {\n
        v15 = 0;\n
        if (v214[1] << 16)\n
        {\n
            v15 = 0;\n
            if (v214[2] << 8)\n
                v15 = v214[3];\n
        }\n
    }\n
    v215 = v15 & 1;\n
    cgc_uint2str(&v213, 12, v215);\n
    v14 = &v213;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v213)) < 0)\n
        cgc__terminate();\n
    v316 = v216;\n
    *(v316) = *(v316) - 4;\n
    v317 = v217;\n
    *(v317) = &*(v317)->field_4;\n
    v136 = v247;\n
    v135 = a0;\n
    memset(&v133, 0, 6);\n
    if (*(v135) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v134 = *(&*(v136)->field_0);\n
    cgc_uint2str(&v133, 6, v134);\n
    v13 = &v133;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v133)) < 0)\n
        cgc__terminate();\n
    v318 = v135;\n
    *(v318) = *(v318) - 2;\n
    v319 = v136;\n
    *(v319) = &*(v319)->padding_1[1];\n
    v112 = v247;\n
    v111 = a0;\n
    if (*(v111) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(v112)->field_0;\n
    v320 = v111;\n
    *(v320) = *(v320) - 1;\n
    v321 = v112;\n
    *(v321) = &*(v321)->padding_1;\n
    if (v110 <= *(v111) && !(!v110))\n
        goto LABEL_498de8;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_498de8:\n
    v109 = cgc_calloc(v110);\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v109, *(v112), v110);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v322 = v112;\n
    *(v322) = &(&*(v322)->field_0)[v110];\n
    v323 = v111;\n
    *(v323) = *(v323) - v110;\n
    cgc_checkheap();\n
    cgc_free(v109);\n
    v108 = v247;\n
    v107 = a0;\n
    if (*(v107) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(v108)->field_0;\n
    v324 = v107;\n
    *(v324) = *(v324) - 1;\n
    v325 = v108;\n
    *(v325) = &*(v325)->padding_1;\n
    if (v106 <= *(v107) && !(!v106))\n
        goto LABEL_499020;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_499020:\n
    v105 = cgc_calloc(v106);\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v105, *(v108), v106);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v326 = v108;\n
    *(v326) = &(&*(v326)->field_0)[v106];\n
    v327 = v107;\n
    *(v327) = *(v327) - v106;\n
    cgc_checkheap();\n
    cgc_free(v105);\n
    v192 = v247;\n
    v191 = a0;\n
    memset(&v189, 0, 12);\n
    if (*(v191) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v190 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1166, size=2, endness=Iend_LE)))));\n
    v47 = v48 | 0xc00;\n
    v58 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v189, 12, v58);\n
    v12 = &v189;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v189)) < 0)\n
        cgc__terminate();\n
    v328 = v191;\n
    *(v328) = *(v328) - 4;\n
    v329 = v192;\n
    *(v329) = &*(v329)->field_4;\n
    v168 = v247;\n
    v167 = a0;\n
    memset(&v165, 0, 21);\n
    if (*(v167) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v166 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1170, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v57 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v165, 21, v57);\n
    v11 = &v165;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v165)) < 0)\n
        cgc__terminate();\n
    v330 = v167;\n
    *(v330) = *(v330) - 8;\n
    v331 = v168;\n
    *(v331) = &(*(v331))[1].padding_1[2];\n
    v226 = v247;\n
    v225 = a0;\n
    memset(&v222, 0, 21);\n
    if (*(v225) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v332 = *(v226);\n
    v224 = v332[1];\n
    v223 = v332[0];\n
    cgc_uint2str(&v222, 21, v223);\n
    v10 = &v222;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v222)) < 0)\n
        cgc__terminate();\n
    v333 = v225;\n
    *(v333) = *(v333) - 8;\n
    v334 = v226;\n
    *(v334) = &(*(v334))[1].padding_1[2];\n
    v208 = v247;\n
    v207 = a0;\n
    if (*(v207) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v206 = *(&*(v208)->field_0);\n
    v335 = v207;\n
    *(v335) = *(v335) - 2;\n
    v336 = v208;\n
    *(v336) = &*(v336)->padding_1[1];\n
    if (v206 <= *(v207) && !(!v206))\n
        goto LABEL_49968e;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49968e:\n
    v205 = cgc_calloc(v206);\n
    if (!v205)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v205, *(v208), v206);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v337 = v207;\n
    *(v337) = *(v337) - v206;\n
    v338 = v208;\n
    *(v338) = &(&*(v338)->field_0)[v206];\n
    cgc_checkheap();\n
    cgc_free(v205);\n
    v124 = v247;\n
    v123 = a0;\n
    if (*(v123) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v123) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v123);\n
    v122 = v9;\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v121 = cgc_calloc(134);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v121, &v40[18].padding_0[182]);\n
    cgc_strncpy(v121 + 5, *(v124), v122);\n
    v340 = v124;\n
    *(v340) = &(&*(v340)->field_4)[cgc_strlen(v121)];\n
    v342 = v123;\n
    *(v342) = *(v342) - (cgc_strlen(v121) + -4);\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v132 = v247;\n
    v131 = a0;\n
    memset(&v129, 0, 6);\n
    if (*(v131) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v130 = *(&*(v132)->field_0);\n
    cgc_uint2str(&v129, 6, v130);\n
    v8 = &v129;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v129)) < 0)\n
        cgc__terminate();\n
    v343 = v131;\n
    *(v343) = *(v343) - 2;\n
    v344 = v132;\n
    *(v344) = &*(v344)->padding_1[1];\n
    v180 = v247;\n
    v179 = a0;\n
    memset(&v177, 0, 12);\n
    if (*(v179) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(&*(v180)->field_0);\n
    cgc_uint2str(&v177, 12, v178);\n
    v7 = &v177;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v177)) < 0)\n
        cgc__terminate();\n
    v345 = v179;\n
    *(v345) = *(v345) - 4;\n
    v346 = v180;\n
    *(v346) = &*(v346)->field_4;\n
    v128 = v247;\n
    v127 = a0;\n
    memset(&v125, 0, 6);\n
    if (*(v127) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v126 = *(&*(v128)->field_0);\n
    cgc_uint2str(&v125, 6, v126);\n
    v6 = &v125;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v125)) < 0)\n
        cgc__terminate();\n
    v347 = v127;\n
    *(v347) = *(v347) - 2;\n
    v348 = v128;\n
    *(v348) = &*(v348)->padding_1[1];\n
    v164 = v247;\n
    v163 = a0;\n
    memset(&v161, 0, 21);\n
    if (*(v163) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v162 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1174, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v161, 21, v56);\n
    v5 = &v161;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v161)) < 0)\n
        cgc__terminate();\n
    v349 = v163;\n
    *(v349) = *(v349) - 8;\n
    v350 = v164;\n
    *(v350) = &(*(v350))[1].padding_1[2];\n
    v188 = v247;\n
    v187 = a0;\n
    memset(&v185, 0, 12);\n
    if (*(v187) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v186 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1178, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v185, 12, v55);\n
    v4 = &v185;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v185)) < 0)\n
        cgc__terminate();\n
    v351 = v187;\n
    *(v351) = *(v351) - 4;\n
    v352 = v188;\n
    *(v352) = &*(v352)->field_4;\n
    v86 = v247;\n
    v85 = a0;\n
    *(&v82[0]) = *(v86);\n
    memset(&v81, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v82[0])\n
    {\n
        v3 = 0;\n
        if (v82[1])\n
        {\n
            v3 = 0;\n
            if (v82[2])\n
            {\n
                v3 = 0;\n
                if (v82[3])\n
                {\n
                    v3 = 0;\n
                    if (v82[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v82[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v82[6] << 8)\n
                                v3 = v82[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v83 = v3 & 1;\n
    v84 = 0;\n
    cgc_uint2str(&v81, 21, v83);\n
    v2 = &v81;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v81)) < 0)\n
        cgc__terminate();\n
    v353 = v85;\n
    *(v353) = *(v353) - 8;\n
    v354 = v86;\n
    *(v354) = &(*(v354))[1].padding_1[2];\n
    v80 = v247;\n
    v79 = a0;\n
    *(&v76[0]) = *(v80);\n
    memset(&v75, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v76[0])\n
    {\n
        v1 = 0;\n
        if (v76[1])\n
        {\n
            v1 = 0;\n
            if (v76[2])\n
            {\n
                v1 = 0;\n
                if (v76[3])\n
                {\n
                    v1 = 0;\n
                    if (v76[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v76[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v76[6] << 8)\n
                                v1 = v76[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v77 = v1 & 1;\n
    v78 = 0;\n
    cgc_uint2str(&v75, 21, v77);\n
    v0 = &v75;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v355 = v79;\n
    *(v355) = *(v355) - 8;\n
    v356 = v80;\n
    *(v356) = &(*(v356))[1].padding_1[2];\n
    v63 ^= v40->field_260;\n
    if (v63)\n
        cgc___stack_cookie_fail();\n
    v357 = a0;\n
    if (*(v357) > 0 && v62 >= 0 && v62 < 0)\n
        v357 = *((&v64 + 0x4 * v62))(v247);\n
    v358 = v246;\n
    return v357;\n
}\n
", "4826619:sub_49a5fb": null, "4826624:cgc_process_llamasubderivative": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasubderivative(struct struct_1 **v192, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x43c]\n
    unsigned int v1;  // [bp-0x438]\n
    struct_0 *v2;  // [bp-0x434]\n
    struct_0 *v3;  // [bp-0x430]\n
    unsigned int v4;  // [bp-0x42c]\n
    unsigned int v5;  // [bp-0x428]\n
    struct_0 *v6;  // [bp-0x424]\n
    char v7;  // [bp-0x41d]\n
    struct_0 *v8;  // [bp-0x41c]\n
    char v9;  // [bp-0x415]\n
    struct_0 *v10;  // [bp-0x414]\n
    struct_0 *v11;  // [bp-0x410]\n
    char v12;  // [bp-0x409]\n
    struct_0 *v13;  // [bp-0x408]\n
    struct_0 *v14;  // [bp-0x404]\n
    struct_0 *v15;  // [bp-0x400]\n
    struct_0 *v16;  // [bp-0x3fc]\n
    char v17;  // [bp-0x3f5]\n
    struct_0 *v18;  // [bp-0x3f4]\n
    char v19;  // [bp-0x3ed]\n
    struct_0 *v20;  // [bp-0x3ec]\n
    char v21;  // [bp-0x3e5]\n
    struct_0 *v22;  // [bp-0x3e4]\n
    struct_0 *v23;  // [bp-0x3e0]\n
    struct_0 *v24;  // [bp-0x3dc]\n
    char v25;  // [bp-0x3d5]\n
    unsigned int v26;  // [bp-0x3d4]\n
    struct_0 *v27;  // [bp-0x3d0]\n
    struct_0 *v28;  // [bp-0x3cc]\n
    struct_0 *v29;  // [bp-0x3c8]\n
    char v30;  // [bp-0x3c1]\n
    struct_0 *v31;  // [bp-0x3c0]\n
    char v32;  // [bp-0x3b9]\n
    struct_0 *v33;  // [bp-0x3b8]\n
    char v34;  // [bp-0x3b1]\n
    struct_0 *v35;  // [bp-0x3b0]\n
    struct_0 *v36;  // [bp-0x3ac]\n
    struct_0 *v37;  // [bp-0x3a8]\n
    char v38;  // [bp-0x3a1]\n
    struct_3 *v39;  // [bp-0x3a0]\n
    unsigned short v40;  // [bp-0x39c]\n
    unsigned short v41;  // [bp-0x39a]\n
    unsigned short v42;  // [bp-0x398]\n
    unsigned short v43;  // [bp-0x396]\n
    unsigned long v44;  // [bp-0x394]\n
    unsigned long v45;  // [bp-0x38c]\n
    struct struct_2 **v46;  // [bp-0x380]\n
    unsigned int v47;  // [bp-0x37c]\n
    char v48;  // [bp-0x378]\n
    char v49;  // [bp-0x376]\n
    char v50[2];  // [bp-0x370]\n
    unsigned short v51;  // [bp-0x36a]\n
    unsigned int *v52;  // [bp-0x368]\n
    struct struct_1 **v53;  // [bp-0x364]\n
    char v54;  // [bp-0x35e]\n
    char v55[2];  // [bp-0x358]\n
    unsigned short v56;  // [bp-0x352]\n
    unsigned int *v57;  // [bp-0x350]\n
    struct struct_1 **v58;  // [bp-0x34c]\n
    char v59;  // [bp-0x345]\n
    char v60[8];  // [bp-0x330]\n
    unsigned int v61;  // [bp-0x32c]\n
    void* v62;  // [bp-0x328]\n
    unsigned int *v63;  // [bp-0x320]\n
    struct struct_1 **v64;  // [bp-0x31c]\n
    char v65;  // [bp-0x315]\n
    char v66[8];  // [bp-0x300]\n
    unsigned int v67;  // [bp-0x2fc]\n
    void* v68;  // [bp-0x2f8]\n
    unsigned int *v69;  // [bp-0x2f0]\n
    struct struct_1 **v70;  // [bp-0x2ec]\n
    char v71;  // [bp-0x2e5]\n
    char v72[8];  // [bp-0x2d0]\n
    unsigned int v73;  // [bp-0x2cc]\n
    void* v74;  // [bp-0x2c8]\n
    unsigned int *v75;  // [bp-0x2c0]\n
    struct struct_1 **v76;  // [bp-0x2bc]\n
    char v77;  // [bp-0x2b5]\n
    char v78[8];  // [bp-0x2a0]\n
    unsigned int v79;  // [bp-0x29c]\n
    void* v80;  // [bp-0x298]\n
    unsigned int *v81;  // [bp-0x290]\n
    struct struct_1 **v82;  // [bp-0x28c]\n
    char v83;  // [bp-0x285]\n
    char v84[8];  // [bp-0x270]\n
    unsigned int v85;  // [bp-0x26c]\n
    void* v86;  // [bp-0x268]\n
    unsigned int *v87;  // [bp-0x264]\n
    struct struct_1 **v88;  // [bp-0x260]\n
    char *v89;  // [bp-0x25c]\n
    unsigned int v90;  // [bp-0x258]\n
    unsigned int *v91;  // [bp-0x254]\n
    struct struct_1 **v92;  // [bp-0x250]\n
    char *v93;  // [bp-0x24c]\n
    unsigned int v94;  // [bp-0x248]\n
    unsigned int *v95;  // [bp-0x244]\n
    struct struct_1 **v96;  // [bp-0x240]\n
    char v97;  // [bp-0x239]\n
    char v98;  // [bp-0x235]\n
    unsigned int *v99;  // [bp-0x234]\n
    struct struct_1 **v100;  // [bp-0x230]\n
    char v101;  // [bp-0x229]\n
    char v102;  // [bp-0x225]\n
    unsigned int *v103;  // [bp-0x224]\n
    struct struct_1 **v104;  // [bp-0x220]\n
    char v105;  // [bp-0x219]\n
    char v106;  // [bp-0x215]\n
    unsigned int *v107;  // [bp-0x214]\n
    struct struct_1 **v108;  // [bp-0x210]\n
    char v109;  // [bp-0x20c]\n
    unsigned int v110;  // [bp-0x200]\n
    unsigned int *v111;  // [bp-0x1fc]\n
    struct struct_1 **v112;  // [bp-0x1f8]\n
    char v113;  // [bp-0x1f4]\n
    unsigned int v114;  // [bp-0x1e8]\n
    unsigned int *v115;  // [bp-0x1e4]\n
    struct struct_1 **v116;  // [bp-0x1e0]\n
    char v117;  // [bp-0x1dc]\n
    unsigned int v118;  // [bp-0x1d0]\n
    unsigned int *v119;  // [bp-0x1cc]\n
    struct struct_1 **v120;  // [bp-0x1c8]\n
    char v121;  // [bp-0x1c4]\n
    unsigned int v122;  // [bp-0x1b8]\n
    unsigned int *v123;  // [bp-0x1b4]\n
    struct struct_1 **v124;  // [bp-0x1b0]\n
    char v125;  // [bp-0x1ac]\n
    char v126[4];  // [bp-0x1a0]\n
    unsigned int v127;  // [bp-0x19c]\n
    unsigned int *v128;  // [bp-0x198]\n
    struct struct_1 **v129;  // [bp-0x194]\n
    char v130;  // [bp-0x190]\n
    char v131[4];  // [bp-0x184]\n
    unsigned int v132;  // [bp-0x180]\n
    unsigned int *v133;  // [bp-0x17c]\n
    struct struct_1 **v134;  // [bp-0x178]\n
    char v135;  // [bp-0x174]\n
    struct_4 *v136;  // [bp-0x168]\n
    unsigned int v137;  // [bp-0x164]\n
    unsigned int *v138;  // [bp-0x160]\n
    struct struct_1 **v139;  // [bp-0x15c]\n
    char v140;  // [bp-0x158]\n
    char v141[4];  // [bp-0x14c]\n
    unsigned int v142;  // [bp-0x148]\n
    unsigned int *v143;  // [bp-0x144]\n
    struct struct_1 **v144;  // [bp-0x140]\n
    char *v145;  // [bp-0x13c]\n
    unsigned int v146;  // [bp-0x138]\n
    unsigned int *v147;  // [bp-0x134]\n
    struct struct_1 **v148;  // [bp-0x130]\n
    char *v149;  // [bp-0x12c]\n
    unsigned int v150;  // [bp-0x128]\n
    unsigned int *v151;  // [bp-0x124]\n
    struct struct_1 **v152;  // [bp-0x120]\n
    char v153;  // [bp-0x119]\n
    unsigned int v154;  // [bp-0x104]\n
    unsigned int v155;  // [bp-0x100]\n
    unsigned int *v156;  // [bp-0xfc]\n
    struct struct_1 **v157;  // [bp-0xf8]\n
    char v158;  // [bp-0xf1]\n
    unsigned int v159;  // [bp-0xdc]\n
    unsigned int v160;  // [bp-0xd8]\n
    unsigned int *v161;  // [bp-0xd4]\n
    struct struct_1 **v162;  // [bp-0xd0]\n
    char v163;  // [bp-0xc9]\n
    unsigned int v164;  // [bp-0xb4]\n
    unsigned int v165;  // [bp-0xb0]\n
    unsigned int *v166;  // [bp-0xac]\n
    struct struct_1 **v167;  // [bp-0xa8]\n
    char v168;  // [bp-0xa1]\n
    unsigned int v169;  // [bp-0x8c]\n
    unsigned int v170;  // [bp-0x88]\n
    unsigned int *v171;  // [bp-0x84]\n
    struct struct_1 **v172;  // [bp-0x80]\n
    char v173;  // [bp-0x79]\n
    unsigned int v174;  // [bp-0x64]\n
    unsigned int v175;  // [bp-0x60]\n
    unsigned int *v176;  // [bp-0x5c]\n
    struct struct_1 **v177;  // [bp-0x58]\n
    char v178;  // [bp-0x51]\n
    unsigned int v179;  // [bp-0x3c]\n
    unsigned int v180;  // [bp-0x38]\n
    unsigned int *v181;  // [bp-0x30]\n
    struct struct_1 **v182;  // [bp-0x2c]\n
    unsigned int v183;  // [bp-0x28]\n
    char v184;  // [bp-0x21]\n
    unsigned int *v185;  // [bp-0x20]\n
    struct struct_1 **v186;  // [bp-0x1c]\n
    unsigned int v187;  // [bp-0x18]\n
    char v188;  // [bp-0x11]\n
    unsigned int *v189;  // [bp-0x10]\n
    struct struct_1 **v190;  // [bp-0xc]\n
    unsigned int v191;  // [bp-0x8]\n
    unsigned int v193;  // ebx\n
    unsigned int *v194;  // eax\n
    struct struct_1 **v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_1 **v197;  // eax\n
    unsigned int v198[2];  // ecx\n
    unsigned int *v199;  // eax\n
    struct struct_1 **v200;  // eax\n
    unsigned int *v201;  // eax\n
    struct struct_1 **v202;  // eax\n
    unsigned int *v203;  // eax\n
    struct struct_1 **v204;  // eax\n
    unsigned int *v205;  // eax\n
    struct struct_1 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_1 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_1 **v210;  // eax\n
    struct struct_1 **v212;  // eax\n
    unsigned int *v214;  // eax\n
    unsigned int *v215;  // eax\n
    struct struct_1 **v216;  // eax\n
    unsigned int v217[2];  // ecx\n
    unsigned int *v218;  // eax\n
    struct struct_1 **v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_1 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_1 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_1 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_1 **v227;  // eax\n
    struct struct_1 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_1 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_1 **v233;  // eax\n
    unsigned int v234[2];  // ecx\n
    unsigned int *v235;  // eax\n
    struct struct_1 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_1 **v238;  // eax\n
    struct struct_1 **v239;  // eax\n
    unsigned int *v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_1 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_1 **v244;  // eax\n
    struct_4 *v245;  // ecx\n
    unsigned int *v246;  // eax\n
    struct struct_1 **v247;  // eax\n
    unsigned int *v248;  // eax\n
    struct struct_1 **v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_1 **v251;  // eax\n
    struct struct_1 **v253;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_1 **v257;  // eax\n
    unsigned int *v259;  // eax\n
    unsigned int v260[2];  // ecx\n
    unsigned int *v261;  // eax\n
    struct struct_1 **v262;  // eax\n
    unsigned int v263[2];  // ecx\n
    unsigned int *v264;  // eax\n
    struct struct_1 **v265;  // eax\n
    struct struct_1 **v267;  // eax\n
    unsigned int *v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_1 **v271;  // eax\n
    unsigned int *v272;  // eax, Other Possible Types: unsigned int\n
    unsigned int v273;  // ebx\n
\n
    v191 = v193;\n
    v39 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v47 = cgc__cookie;\n
    v46 = -1;\n
    if (cgc_sendline(1, \"===llamasubderivative===\", 24) < 0)\n
        cgc__terminate();\n
    v88 = v192;\n
    v87 = a0;\n
    *(&v84[0]) = *(v88);\n
    memset(&v83, 0, 21);\n
    if (*(v87) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v38 = 0;\n
    if (v84[0])\n
    {\n
        v38 = 0;\n
        if (v84[1])\n
        {\n
            v38 = 0;\n
            if (v84[2])\n
            {\n
                v38 = 0;\n
                if (v84[3])\n
                {\n
                    v38 = 0;\n
                    if (v84[4] << 24)\n
                    {\n
                        v38 = 0;\n
                        if (v84[5] << 16)\n
                        {\n
                            v38 = 0;\n
                            if (v84[6] << 8)\n
                                v38 = v84[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v85 = v38 & 1;\n
    v86 = 0;\n
    cgc_uint2str(&v83, 21, v85);\n
    v37 = &v83;\n
    if (cgc_sendline(1, v37, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v194 = v87;\n
    *(v194) = *(v194) - 8;\n
    v195 = v88;\n
    *(v195) = &(*(v195))[1].padding_1[2];\n
    v108 = v192;\n
    v107 = a0;\n
    memset(&v105, 0, 4);\n
    if (*(v107) < 1)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v106 = *(v108)->field_0;\n
    cgc_uint2str(&v105, 4, v106);\n
    v36 = &v105;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v105)) < 0)\n
        cgc__terminate();\n
    v196 = v107;\n
    *(v196) = *(v196) - 1;\n
    v197 = v108;\n
    *(v197) = &*(v197)->padding_1;\n
    v182 = v192;\n
    v181 = a0;\n
    memset(&v178, 0, 21);\n
    if (*(v181) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v198 = *(v182);\n
    v180 = v198[1];\n
    v179 = v198[0];\n
    cgc_uint2str(&v178, 21, v179);\n
    v35 = &v178;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v178)) < 0)\n
        cgc__terminate();\n
    v199 = v181;\n
    *(v199) = *(v199) - 8;\n
    v200 = v182;\n
    *(v200) = &(*(v200))[1].padding_1[2];\n
    v82 = v192;\n
    v81 = a0;\n
    *(&v78[0]) = *(v82);\n
    memset(&v77, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v34 = 0;\n
    if (v78[0])\n
    {\n
        v34 = 0;\n
        if (v78[1])\n
        {\n
            v34 = 0;\n
            if (v78[2])\n
            {\n
                v34 = 0;\n
                if (v78[3])\n
                {\n
                    v34 = 0;\n
                    if (v78[4] << 24)\n
                    {\n
                        v34 = 0;\n
                        if (v78[5] << 16)\n
                        {\n
                            v34 = 0;\n
                            if (v78[6] << 8)\n
                                v34 = v78[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v79 = v34 & 1;\n
    v80 = 0;\n
    cgc_uint2str(&v77, 21, v79);\n
    v33 = &v77;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v201 = v81;\n
    *(v201) = *(v201) - 8;\n
    v202 = v82;\n
    *(v202) = &(*(v202))[1].padding_1[2];\n
    v144 = v192;\n
    v143 = a0;\n
    *(&v141[0]) = *(v144);\n
    memset(&v140, 0, 12);\n
    if (*(v143) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v141[0] << 24)\n
    {\n
        v32 = 0;\n
        if (v141[1] << 16)\n
        {\n
            v32 = 0;\n
            if (v141[2] << 8)\n
                v32 = v141[3];\n
        }\n
    }\n
    v142 = v32 & 1;\n
    cgc_uint2str(&v140, 12, v142);\n
    v31 = &v140;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v140)) < 0)\n
        cgc__terminate();\n
    v203 = v143;\n
    *(v203) = *(v203) - 4;\n
    v204 = v144;\n
    *(v204) = &*(v204)->field_4;\n
    v58 = v192;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (v55[0] << 8)\n
        v30 = v55[1];\n
    v56 = v30 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v29 = &v54;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v205 = v57;\n
    *(v205) = *(v205) - 2;\n
    v206 = v58;\n
    *(v206) = &*(v206)->padding_1[1];\n
    v116 = v192;\n
    v115 = a0;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(&*(v116)->field_0);\n
    cgc_uint2str(&v113, 12, v114);\n
    v28 = &v113;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v113)) < 0)\n
        cgc__terminate();\n
    v207 = v115;\n
    *(v207) = *(v207) - 4;\n
    v208 = v116;\n
    *(v208) = &*(v208)->field_4;\n
    v112 = v192;\n
    v111 = a0;\n
    memset(&v109, 0, 12);\n
    if (*(v111) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v110 = *(&*(v112)->field_0);\n
    cgc_uint2str(&v109, 12, v110);\n
    v27 = &v109;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v209 = v111;\n
    *(v209) = *(v209) - 4;\n
    v210 = v112;\n
    *(v210) = &*(v210)->field_4;\n
    v96 = v192;\n
    v95 = a0;\n
    if (*(v95) <= 0)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v95) >= 128)\n
        v26 = 128;\n
    else\n
        v26 = *(v95);\n
    v94 = v26;\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = cgc_calloc(134);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v93, &v39[18].padding_0[182]);\n
    cgc_strncpy(v93 + 5, *(v96), v94);\n
    v212 = v96;\n
    *(v212) = &(&*(v212)->field_4)[cgc_strlen(v93)];\n
    v214 = v95;\n
    *(v214) = *(v214) - (cgc_strlen(v93) + -4);\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    if (cgc_sendline(1, &v39[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v139 = v192;\n
    v138 = a0;\n
    v136 = &*(v139);\n
    memset(&v135, 0, 12);\n
    if (*(v138) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v136->field_0 << 24)\n
    {\n
        v25 = 0;\n
        if (v136->padding_1[0] << 16)\n
        {\n
            v25 = 0;\n
            if (v136->padding_1[1] << 8)\n
                v25 = v136->padding_1[2];\n
        }\n
    }\n
    v137 = v25 & 1;\n
    cgc_uint2str(&v135, 12, v137);\n
    v24 = &v135;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v215 = v138;\n
    *(v215) = *(v215) - 4;\n
    v216 = v139;\n
    *(v216) = &*(v216)->field_4;\n
    v177 = v192;\n
    v176 = a0;\n
    memset(&v173, 0, 21);\n
    if (*(v176) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v217 = *(v177);\n
    v175 = v217[1];\n
    v174 = v217[0];\n
    cgc_uint2str(&v173, 21, v174);\n
    v23 = &v173;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v173)) < 0)\n
        cgc__terminate();\n
    v218 = v176;\n
    *(v218) = *(v218) - 8;\n
    v219 = v177;\n
    *(v219) = &(*(v219))[1].padding_1[2];\n
    v104 = v192;\n
    v103 = a0;\n
    memset(&v101, 0, 4);\n
    if (*(v103) < 1)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v102 = *(v104)->field_0;\n
    cgc_uint2str(&v101, 4, v102);\n
    v22 = &v101;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v101)) < 0)\n
        cgc__terminate();\n
    v220 = v103;\n
    *(v220) = *(v220) - 1;\n
    v221 = v104;\n
    *(v221) = &*(v221)->padding_1;\n
    v53 = v192;\n
    v52 = a0;\n
    *(&v50) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = 0;\n
    if (v50[0] << 8)\n
        v21 = v50[1];\n
    v51 = v21 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v20 = &v49;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v222 = v52;\n
    *(v222) = *(v222) - 2;\n
    v223 = v53;\n
    *(v223) = &*(v223)->padding_1[1];\n
    v134 = v192;\n
    v133 = a0;\n
    *(&v131[0]) = *(v134);\n
    memset(&v130, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v131[0] << 24)\n
    {\n
        v19 = 0;\n
        if (v131[1] << 16)\n
        {\n
            v19 = 0;\n
            if (v131[2] << 8)\n
                v19 = v131[3];\n
        }\n
    }\n
    v132 = v19 & 1;\n
    cgc_uint2str(&v130, 12, v132);\n
    v18 = &v130;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v224 = v133;\n
    *(v224) = *(v224) - 4;\n
    v225 = v134;\n
    *(v225) = &*(v225)->field_4;\n
    v190 = v192;\n
    v189 = a0;\n
    if (*(v189) < 1)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v188 = *(v190)->field_0;\n
    v226 = v189;\n
    *(v226) = *(v226) - 1;\n
    v227 = v190;\n
    *(v227) = &*(v227)->padding_1;\n
    if (v188 <= *(v189) && !(!v188))\n
        goto LABEL_49be27;\n
    if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49be27:\n
    v187 = cgc_calloc(v188);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v187, *(v190), v188);\n
    if (cgc_sendline(1, &v39[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v228 = v190;\n
    *(v228) = &(&*(v228)->field_0)[v188];\n
    v229 = v189;\n
    *(v229) = *(v229) - v188;\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    v76 = v192;\n
    v75 = a0;\n
    *(&v72[0]) = *(v76);\n
    memset(&v71, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v72[0])\n
    {\n
        v17 = 0;\n
        if (v72[1])\n
        {\n
            v17 = 0;\n
            if (v72[2])\n
            {\n
                v17 = 0;\n
                if (v72[3])\n
                {\n
                    v17 = 0;\n
                    if (v72[4] << 24)\n
                    {\n
                        v17 = 0;\n
                        if (v72[5] << 16)\n
                        {\n
                            v17 = 0;\n
                            if (v72[6] << 8)\n
                                v17 = v72[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v73 = v17 & 1;\n
    v74 = 0;\n
    cgc_uint2str(&v71, 21, v73);\n
    v16 = &v71;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v230 = v75;\n
    *(v230) = *(v230) - 8;\n
    v231 = v76;\n
    *(v231) = &(*(v231))[1].padding_1[2];\n
    v124 = v192;\n
    v123 = a0;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v122 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(fpround<4>);\n
    v42 = v43 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v121, 12, v45);\n
    v15 = &v121;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v121)) < 0)\n
        cgc__terminate();\n
    v232 = v123;\n
    *(v232) = *(v232) - 4;\n
    v233 = v124;\n
    *(v233) = &*(v233)->field_4;\n
    v172 = v192;\n
    v171 = a0;\n
    memset(&v168, 0, 21);\n
    if (*(v171) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v234 = *(v172);\n
    v170 = v234[1];\n
    v169 = v234[0];\n
    cgc_uint2str(&v168, 21, v169);\n
    v14 = &v168;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v168)) < 0)\n
        cgc__terminate();\n
    v235 = v171;\n
    *(v235) = *(v235) - 8;\n
    v236 = v172;\n
    *(v236) = &(*(v236))[1].padding_1[2];\n
    v186 = v192;\n
    v185 = a0;\n
    if (*(v185) < 1)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v184 = *(v186)->field_0;\n
    v237 = v185;\n
    *(v237) = *(v237) - 1;\n
    v238 = v186;\n
    *(v238) = &*(v238)->padding_1;\n
    if (v184 <= *(v185) && !(!v184))\n
        goto LABEL_49c516;\n
    if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49c516:\n
    v183 = cgc_calloc(v184);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v183, *(v186), v184);\n
    if (cgc_sendline(1, &v39[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v239 = v186;\n
    *(v239) = &(&*(v239)->field_0)[v184];\n
    v240 = v185;\n
    *(v240) = *(v240) - v184;\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    v100 = v192;\n
    v99 = a0;\n
    memset(&v97, 0, 4);\n
    if (*(v99) < 1)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v98 = *(v100)->field_0;\n
    cgc_uint2str(&v97, 4, v98);\n
    v13 = &v97;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v97)) < 0)\n
        cgc__terminate();\n
    v241 = v99;\n
    *(v241) = *(v241) - 1;\n
    v242 = v100;\n
    *(v242) = &*(v242)->padding_1;\n
    v70 = v192;\n
    v69 = a0;\n
    *(&v66[0]) = *(v70);\n
    memset(&v65, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v66[0])\n
    {\n
        v12 = 0;\n
        if (v66[1])\n
        {\n
            v12 = 0;\n
            if (v66[2])\n
            {\n
                v12 = 0;\n
                if (v66[3])\n
                {\n
                    v12 = 0;\n
                    if (v66[4] << 24)\n
                    {\n
                        v12 = 0;\n
                        if (v66[5] << 16)\n
                        {\n
                            v12 = 0;\n
                            if (v66[6] << 8)\n
                                v12 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v67 = v12 & 1;\n
    v68 = 0;\n
    cgc_uint2str(&v65, 21, v67);\n
    v11 = &v65;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v243 = v69;\n
    *(v243) = *(v243) - 8;\n
    v244 = v70;\n
    *(v244) = &(*(v244))[1].padding_1[2];\n
    v167 = v192;\n
    v166 = a0;\n
    memset(&v163, 0, 21);\n
    if (*(v166) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v245 = *(v167);\n
    v165 = v245->field_4;\n
    v164 = *(&v245->field_0);\n
    cgc_uint2str(&v163, 21, v164);\n
    v10 = &v163;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v163)) < 0)\n
        cgc__terminate();\n
    v246 = v166;\n
    *(v246) = *(v246) - 8;\n
    v247 = v167;\n
    *(v247) = &(*(v247))[1].padding_1[2];\n
    v64 = v192;\n
    v63 = a0;\n
    *(&v60[0]) = *(v64);\n
    memset(&v59, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v60[0])\n
    {\n
        v9 = 0;\n
        if (v60[1])\n
        {\n
            v9 = 0;\n
            if (v60[2])\n
            {\n
                v9 = 0;\n
                if (v60[3])\n
                {\n
                    v9 = 0;\n
                    if (v60[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v60[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v60[6] << 8)\n
                                v9 = v60[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v61 = v9 & 1;\n
    v62 = 0;\n
    cgc_uint2str(&v59, 21, v61);\n
    v8 = &v59;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v248 = v63;\n
    *(v248) = *(v248) - 8;\n
    v249 = v64;\n
    *(v249) = &(*(v249))[1].padding_1[2];\n
    v129 = v192;\n
    v128 = a0;\n
    *(&v126[0]) = *(v129);\n
    memset(&v125, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v126[0] << 24)\n
    {\n
        v7 = 0;\n
        if (v126[1] << 16)\n
        {\n
            v7 = 0;\n
            if (v126[2] << 8)\n
                v7 = v126[3];\n
        }\n
    }\n
    v127 = v7 & 1;\n
    cgc_uint2str(&v125, 12, v127);\n
    v6 = &v125;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v125)) < 0)\n
        cgc__terminate();\n
    v250 = v128;\n
    *(v250) = *(v250) - 4;\n
    v251 = v129;\n
    *(v251) = &*(v251)->field_4;\n
    v152 = v192;\n
    v151 = a0;\n
    if (*(v151) <= 0)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v151) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v151);\n
    v150 = v5;\n
    if (!v150)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v149 = cgc_calloc(134);\n
    if (!v149)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v149, &v39[18].padding_0[182]);\n
    cgc_strncpy(v149 + 5, *(v152), v150);\n
    v253 = v152;\n
    *(v253) = &(&*(v253)->field_4)[cgc_strlen(v149)];\n
    v255 = v151;\n
    *(v255) = *(v255) - (cgc_strlen(v149) + -4);\n
    cgc_checkheap();\n
    cgc_free(v149);\n
    if (cgc_sendline(1, &v39[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v148 = v192;\n
    v147 = a0;\n
    if (*(v147) <= 0)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v147) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v147);\n
    v146 = v4;\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v145 = cgc_calloc(134);\n
    if (!v145)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v145, &v39[18].padding_0[182]);\n
    cgc_strncpy(v145 + 5, *(v148), v146);\n
    v257 = v148;\n
    *(v257) = &(&*(v257)->field_4)[cgc_strlen(v145)];\n
    v259 = v147;\n
    *(v259) = *(v259) - (cgc_strlen(v145) + -4);\n
    cgc_checkheap();\n
    cgc_free(v145);\n
    if (cgc_sendline(1, &v39[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v162 = v192;\n
    v161 = a0;\n
    memset(&v158, 0, 21);\n
    if (*(v161) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v260 = *(v162);\n
    v160 = v260[1];\n
    v159 = v260[0];\n
    cgc_uint2str(&v158, 21, v159);\n
    v3 = &v158;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v158)) < 0)\n
        cgc__terminate();\n
    v261 = v161;\n
    *(v261) = *(v261) - 8;\n
    v262 = v162;\n
    *(v262) = &(*(v262))[1].padding_1[2];\n
    v157 = v192;\n
    v156 = a0;\n
    memset(&v153, 0, 21);\n
    if (*(v156) < 8)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v263 = *(v157);\n
    v155 = v263[1];\n
    v154 = v263[0];\n
    cgc_uint2str(&v153, 21, v154);\n
    v2 = &v153;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v153)) < 0)\n
        cgc__terminate();\n
    v264 = v156;\n
    *(v264) = *(v264) - 8;\n
    v265 = v157;\n
    *(v265) = &(*(v265))[1].padding_1[2];\n
    v92 = v192;\n
    v91 = a0;\n
    if (*(v91) <= 0)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v91) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v91);\n
    v90 = v1;\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = cgc_calloc(134);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v89, &v39[18].padding_0[182]);\n
    cgc_strncpy(v89 + 5, *(v92), v90);\n
    v267 = v92;\n
    *(v267) = &(&*(v267)->field_4)[cgc_strlen(v89)];\n
    v269 = v91;\n
    *(v269) = *(v269) - (cgc_strlen(v89) + -4);\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    if (cgc_sendline(1, &v39[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v120 = v192;\n
    v119 = a0;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, &v39[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v118 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-918, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v117, 12, v44);\n
    v0 = &v117;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v117)) < 0)\n
        cgc__terminate();\n
    v270 = v119;\n
    *(v270) = *(v270) - 4;\n
    v271 = v120;\n
    *(v271) = &*(v271)->field_4;\n
    v47 ^= v39->field_260;\n
    if (v47)\n
        cgc___stack_cookie_fail();\n
    v272 = a0;\n
    if (*(v272) > 0 && v46 >= 0 && v46 < 0)\n
        v272 = *((&v48 + 0x4 * v46))(v192);\n
    v273 = v191;\n
    return v272;\n
}\n
", "4840202:sub_49db0a": null, "4840208:cgc_process_llamaleaflessness": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaleaflessness(struct struct_0 **v109, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x21c]\n
    struct_1 *v1;  // [bp-0x218]\n
    struct_1 *v2;  // [bp-0x214]\n
    char v3;  // [bp-0x20d]\n
    struct_1 *v4;  // [bp-0x20c]\n
    struct_1 *v5;  // [bp-0x208]\n
    char v6;  // [bp-0x201]\n
    struct_1 *v7;  // [bp-0x200]\n
    struct_1 *v8;  // [bp-0x1fc]\n
    struct_1 *v9;  // [bp-0x1f8]\n
    struct_1 *v10;  // [bp-0x1f4]\n
    struct_1 *v11;  // [bp-0x1f0]\n
    unsigned int v12;  // [bp-0x1ec]\n
    unsigned int v13;  // [bp-0x1e8]\n
    struct_1 *v14;  // [bp-0x1e4]\n
    char v15;  // [bp-0x1dd]\n
    unsigned int v16;  // [bp-0x1dc]\n
    struct_3 *v17;  // [bp-0x1d8]\n
    unsigned short v18;  // [bp-0x1d4]\n
    unsigned short v19;  // [bp-0x1d2]\n
    unsigned short v20;  // [bp-0x1d0]\n
    unsigned short v21;  // [bp-0x1ce]\n
    unsigned long v22;  // [bp-0x1cc]\n
    unsigned long v23;  // [bp-0x1c4]\n
    struct struct_2 **v24;  // [bp-0x1b8]\n
    unsigned int v25;  // [bp-0x1b4]\n
    char v26;  // [bp-0x1b0]\n
    char v27;  // [bp-0x1ae]\n
    char v28[2];  // [bp-0x1a8]\n
    unsigned short v29;  // [bp-0x1a2]\n
    unsigned int *v30;  // [bp-0x1a0]\n
    struct struct_0 **v31;  // [bp-0x19c]\n
    char v32;  // [bp-0x195]\n
    char v33[8];  // [bp-0x180]\n
    unsigned int v34;  // [bp-0x17c]\n
    void* v35;  // [bp-0x178]\n
    unsigned int *v36;  // [bp-0x170]\n
    struct struct_0 **v37;  // [bp-0x16c]\n
    char *v38;  // [bp-0x168]\n
    unsigned int *v39;  // [bp-0x164]\n
    struct struct_0 **v40;  // [bp-0x160]\n
    char *v41;  // [bp-0x15c]\n
    unsigned int v42;  // [bp-0x158]\n
    unsigned int *v43;  // [bp-0x154]\n
    struct struct_0 **v44;  // [bp-0x150]\n
    char *v45;  // [bp-0x14c]\n
    unsigned int v46;  // [bp-0x148]\n
    unsigned int *v47;  // [bp-0x144]\n
    struct struct_0 **v48;  // [bp-0x140]\n
    char *v49;  // [bp-0x13c]\n
    unsigned int v50;  // [bp-0x138]\n
    unsigned int *v51;  // [bp-0x134]\n
    struct struct_0 **v52;  // [bp-0x130]\n
    char v53;  // [bp-0x12c]\n
    unsigned short v54;  // [bp-0x126]\n
    unsigned int *v55;  // [bp-0x124]\n
    struct struct_0 **v56;  // [bp-0x120]\n
    char v57;  // [bp-0x11c]\n
    unsigned short v58;  // [bp-0x116]\n
    unsigned int *v59;  // [bp-0x114]\n
    struct struct_0 **v60;  // [bp-0x110]\n
    char v61;  // [bp-0x109]\n
    char v62;  // [bp-0x105]\n
    unsigned int *v63;  // [bp-0x104]\n
    struct struct_0 **v64;  // [bp-0x100]\n
    char v65;  // [bp-0xf9]\n
    char v66;  // [bp-0xf5]\n
    unsigned int *v67;  // [bp-0xf4]\n
    struct struct_0 **v68;  // [bp-0xf0]\n
    unsigned short *v69;  // [bp-0xec]\n
    unsigned int *v70;  // [bp-0xe8]\n
    struct struct_0 **v71;  // [bp-0xe4]\n
    unsigned short *v72;  // [bp-0xe0]\n
    unsigned int *v73;  // [bp-0xdc]\n
    struct struct_0 **v74;  // [bp-0xd8]\n
    char v75;  // [bp-0xd1]\n
    unsigned long v76;  // [bp-0xbc]\n
    unsigned int *v77;  // [bp-0xb4]\n
    struct struct_0 **v78;  // [bp-0xb0]\n
    char v79;  // [bp-0xa9]\n
    unsigned long v80;  // [bp-0x94]\n
    unsigned int *v81;  // [bp-0x8c]\n
    struct struct_0 **v82;  // [bp-0x88]\n
    char v83;  // [bp-0x84]\n
    unsigned int v84;  // [bp-0x78]\n
    unsigned int *v85;  // [bp-0x74]\n
    struct struct_0 **v86;  // [bp-0x70]\n
    char v87;  // [bp-0x6c]\n
    unsigned int v88;  // [bp-0x60]\n
    unsigned int *v89;  // [bp-0x5c]\n
    struct struct_0 **v90;  // [bp-0x58]\n
    unsigned int v91;  // [bp-0x54]\n
    unsigned short v92;  // [bp-0x4e]\n
    unsigned int *v93;  // [bp-0x4c]\n
    struct struct_0 **v94;  // [bp-0x48]\n
    char v95;  // [bp-0x44]\n
    char v96[4];  // [bp-0x38]\n
    unsigned int v97;  // [bp-0x34]\n
    unsigned int *v98;  // [bp-0x30]\n
    struct struct_0 **v99;  // [bp-0x2c]\n
    unsigned int v100;  // [bp-0x28]\n
    char v101;  // [bp-0x21]\n
    unsigned int *v102;  // [bp-0x20]\n
    struct struct_0 **v103;  // [bp-0x1c]\n
    unsigned int v104;  // [bp-0x18]\n
    char v105;  // [bp-0x11]\n
    unsigned int *v106;  // [bp-0x10]\n
    struct struct_0 **v107;  // [bp-0xc]\n
    unsigned int v108;  // [bp-0x8]\n
    unsigned int v110;  // ebx\n
    struct struct_0 **v112;  // eax\n
    unsigned int *v114;  // eax\n
    unsigned int *v115;  // eax\n
    struct struct_0 **v116;  // eax\n
    struct struct_0 **v118;  // eax\n
    unsigned int *v120;  // eax\n
    unsigned int *v121;  // eax\n
    struct struct_0 **v122;  // eax\n
    struct struct_0 **v124;  // eax\n
    unsigned int *v126;  // eax\n
    unsigned int *v127;  // eax\n
    struct struct_0 **v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_0 **v130;  // eax\n
    unsigned int *v131;  // eax\n
    struct struct_0 **v132;  // eax\n
    unsigned int *v133;  // eax\n
    struct struct_0 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_0 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_0 **v138;  // eax\n
    unsigned int *v139;  // eax\n
    struct struct_0 **v140;  // eax\n
    struct struct_0 **v141;  // eax\n
    unsigned int *v142;  // eax\n
    unsigned int *v143;  // eax\n
    struct struct_0 **v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    unsigned int *v147;  // eax\n
    struct struct_0 **v148;  // eax\n
    unsigned int *v149;  // eax\n
    struct struct_0 **v150;  // eax\n
    unsigned int *v151;  // eax\n
    struct struct_0 **v152;  // eax\n
    unsigned int *v153;  // eax\n
    struct struct_0 **v154;  // eax\n
    unsigned int *v155;  // eax\n
    struct struct_0 **v156;  // eax\n
    unsigned int *v157;  // eax\n
    struct struct_0 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    struct struct_0 **v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v163;  // eax, Other Possible Types: unsigned int\n
    unsigned int v164;  // ebx\n
\n
    v108 = v110;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v25 = cgc__cookie;\n
    v24 = -1;\n
    if (cgc_sendline(1, \"===llamaleaflessness===\", 23) < 0)\n
        cgc__terminate();\n
    v52 = v109;\n
    v51 = a0;\n
    if (*(v51) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v51) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v51);\n
    v50 = v16;\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v49 = cgc_calloc(134);\n
    if (!v49)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v49, &v17[18].padding_0[182]);\n
    cgc_strncpy(v49 + 5, *(v52), v50);\n
    v112 = v52;\n
    *(v112) = &(&*(v112)->field_4)[cgc_strlen(v49)];\n
    v114 = v51;\n
    *(v114) = *(v114) - (cgc_strlen(v49) + -4);\n
    cgc_checkheap();\n
    cgc_free(v49);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v99 = v109;\n
    v98 = a0;\n
    *(&v96[0]) = *(v99);\n
    memset(&v95, 0, 12);\n
    if (*(v98) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v96[0] << 24)\n
    {\n
        v15 = 0;\n
        if (v96[1] << 16)\n
        {\n
            v15 = 0;\n
            if (v96[2] << 8)\n
                v15 = v96[3];\n
        }\n
    }\n
    v97 = v15 & 1;\n
    cgc_uint2str(&v95, 12, v97);\n
    v14 = &v95;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v115 = v98;\n
    *(v115) = *(v115) - 4;\n
    v116 = v99;\n
    *(v116) = &*(v116)->field_4;\n
    v48 = v109;\n
    v47 = a0;\n
    if (*(v47) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v47) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v47);\n
    v46 = v13;\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v45 = cgc_calloc(134);\n
    if (!v45)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v45, &v17[18].padding_0[182]);\n
    cgc_strncpy(v45 + 5, *(v48), v46);\n
    v118 = v48;\n
    *(v118) = &(&*(v118)->field_4)[cgc_strlen(v45)];\n
    v120 = v47;\n
    *(v120) = *(v120) - (cgc_strlen(v45) + -4);\n
    cgc_checkheap();\n
    cgc_free(v45);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v40 = v109;\n
    v39 = a0;\n
    v38 = &*(v40)->field_0;\n
    if (*(v39) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v121 = v39;\n
    *(v121) = *(v121) - 1;\n
    v122 = v40;\n
    *(v122) = &*(v122)->padding_1;\n
    v24 = *(v38);\n
    v44 = v109;\n
    v43 = a0;\n
    if (*(v43) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v43) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v43);\n
    v42 = v12;\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = cgc_calloc(134);\n
    if (!v41)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v41, &v17[18].padding_0[182]);\n
    cgc_strncpy(v41 + 5, *(v44), v42);\n
    v124 = v44;\n
    *(v124) = &(&*(v124)->field_4)[cgc_strlen(v41)];\n
    v126 = v43;\n
    *(v126) = *(v126) - (cgc_strlen(v41) + -4);\n
    cgc_checkheap();\n
    cgc_free(v41);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v60 = v109;\n
    v59 = a0;\n
    memset(&v57, 0, 6);\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = *(&*(v60)->field_0);\n
    cgc_uint2str(&v57, 6, v58);\n
    v11 = &v57;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v57)) < 0)\n
        cgc__terminate();\n
    v127 = v59;\n
    *(v127) = *(v127) - 2;\n
    v128 = v60;\n
    *(v128) = &*(v128)->padding_1[1];\n
    v74 = v109;\n
    v73 = a0;\n
    v72 = &*(v74)->field_0;\n
    if (*(v73) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = v73;\n
    *(v129) = *(v129) - 2;\n
    v130 = v74;\n
    *(v130) = &*(v130)->padding_1[1];\n
    v24 = *(v72);\n
    v56 = v109;\n
    v55 = a0;\n
    memset(&v53, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = *(&*(v56)->field_0);\n
    cgc_uint2str(&v53, 6, v54);\n
    v10 = &v53;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v131 = v55;\n
    *(v131) = *(v131) - 2;\n
    v132 = v56;\n
    *(v132) = &*(v132)->padding_1[1];\n
    v90 = v109;\n
    v89 = a0;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 12, v88);\n
    v9 = &v87;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v133 = v89;\n
    *(v133) = *(v133) - 4;\n
    v134 = v90;\n
    *(v134) = &*(v134)->field_4;\n
    v68 = v109;\n
    v67 = a0;\n
    memset(&v65, 0, 4);\n
    if (*(v67) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v66 = *(v68)->field_0;\n
    cgc_uint2str(&v65, 4, v66);\n
    v8 = &v65;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v135 = v67;\n
    *(v135) = *(v135) - 1;\n
    v136 = v68;\n
    *(v136) = &*(v136)->padding_1;\n
    v64 = v109;\n
    v63 = a0;\n
    memset(&v61, 0, 4);\n
    if (*(v63) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v62 = *(v64)->field_0;\n
    cgc_uint2str(&v61, 4, v62);\n
    v7 = &v61;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v137 = v63;\n
    *(v137) = *(v137) - 1;\n
    v138 = v64;\n
    *(v138) = &*(v138)->padding_1;\n
    v107 = v109;\n
    v106 = a0;\n
    if (*(v106) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(v107)->field_0;\n
    v139 = v106;\n
    *(v139) = *(v139) - 1;\n
    v140 = v107;\n
    *(v140) = &*(v140)->padding_1;\n
    if (v105 <= *(v106) && !(!v105))\n
        goto LABEL_49ed13;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49ed13:\n
    v104 = cgc_calloc(v105);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v104, *(v107), v105);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v141 = v107;\n
    *(v141) = &(&*(v141)->field_0)[v105];\n
    v142 = v106;\n
    *(v142) = *(v142) - v105;\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    v103 = v109;\n
    v102 = a0;\n
    if (*(v102) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v101 = *(v103)->field_0;\n
    v143 = v102;\n
    *(v143) = *(v143) - 1;\n
    v144 = v103;\n
    *(v144) = &*(v144)->padding_1;\n
    if (v101 <= *(v102) && !(!v101))\n
        goto LABEL_49ef0c;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49ef0c:\n
    v100 = cgc_calloc(v101);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v100, *(v103), v101);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v145 = v103;\n
    *(v145) = &(&*(v145)->field_0)[v101];\n
    v146 = v102;\n
    *(v146) = *(v146) - v101;\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    v31 = v109;\n
    v30 = a0;\n
    *(&v28) = *(v31);\n
    memset(&v27, 0, 6);\n
    if (*(v30) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v28[0] << 8)\n
        v6 = v28[1];\n
    v29 = v6 & 1;\n
    cgc_uint2str(&v27, 6, v29);\n
    v5 = &v27;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v27)) < 0)\n
        cgc__terminate();\n
    v147 = v30;\n
    *(v147) = *(v147) - 2;\n
    v148 = v31;\n
    *(v148) = &*(v148)->padding_1[1];\n
    v82 = v109;\n
    v81 = a0;\n
    memset(&v79, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(fpround<4>);\n
    v20 = v21 | 0xc00;\n
    v23 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v79, 21, v23);\n
    v4 = &v79;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v149 = v81;\n
    *(v149) = *(v149) - 8;\n
    v150 = v82;\n
    *(v150) = *(v150) + 1;\n
    v37 = v109;\n
    v36 = a0;\n
    *(&v33[0]) = *(v37);\n
    memset(&v32, 0, 21);\n
    if (*(v36) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v33[0])\n
    {\n
        v3 = 0;\n
        if (v33[1])\n
        {\n
            v3 = 0;\n
            if (v33[2])\n
            {\n
                v3 = 0;\n
                if (v33[3])\n
                {\n
                    v3 = 0;\n
                    if (v33[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v33[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v33[6] << 8)\n
                                v3 = v33[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v34 = v3 & 1;\n
    v35 = 0;\n
    cgc_uint2str(&v32, 21, v34);\n
    v2 = &v32;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v32)) < 0)\n
        cgc__terminate();\n
    v151 = v36;\n
    *(v151) = *(v151) - 8;\n
    v152 = v37;\n
    *(v152) = *(v152) + 1;\n
    v86 = v109;\n
    v85 = a0;\n
    memset(&v83, 0, 12);\n
    if (*(v85) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(&*(v86)->field_0);\n
    cgc_uint2str(&v83, 12, v84);\n
    v1 = &v83;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v153 = v85;\n
    *(v153) = *(v153) - 4;\n
    v154 = v86;\n
    *(v154) = &*(v154)->field_4;\n
    v78 = v109;\n
    v77 = a0;\n
    memset(&v75, 0, 21);\n
    if (*(v77) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v76 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-462, size=2, endness=Iend_LE)))));\n
    v18 = v19 | 0xc00;\n
    v22 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v75, 21, v22);\n
    v0 = &v75;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v155 = v77;\n
    *(v155) = *(v155) - 8;\n
    v156 = v78;\n
    *(v156) = *(v156) + 1;\n
    v94 = v109;\n
    v93 = a0;\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    v157 = v93;\n
    *(v157) = *(v157) - 2;\n
    v158 = v94;\n
    *(v158) = &*(v158)->padding_1[1];\n
    if (v92 <= *(v93) && !(!v92))\n
        goto LABEL_49f8dd;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_49f8dd:\n
    v91 = cgc_calloc(v92);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v91, *(v94), v92);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v159 = v93;\n
    *(v159) = *(v159) - v92;\n
    v160 = v94;\n
    *(v160) = &(&*(v160)->field_0)[v92];\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    v71 = v109;\n
    v70 = a0;\n
    v69 = &*(v71)->field_0;\n
    if (*(v70) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v161 = v70;\n
    *(v161) = *(v161) - 2;\n
    v162 = v71;\n
    *(v162) = &*(v162)->padding_1[1];\n
    v24 = *(v69);\n
    v25 ^= v17->field_260;\n
    if (v25)\n
        cgc___stack_cookie_fail();\n
    v163 = a0;\n
    if (*(v163) > 0 && v24 >= 0 && v24 < 0)\n
        v163 = *((&v26 + 0x4 * v24))(v109);\n
    v164 = v108;\n
    return v163;\n
}\n
", "4848394:sub_49fb0a": null, "4848400:cgc_process_llamasquatinid": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0380;\n
extern unsigned int g_4f0384;\n
\n
int cgc_process_llamasquatinid(struct struct_0 **v257, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x53c]\n
    struct_1 *v1;  // [bp-0x538]\n
    struct_1 *v2;  // [bp-0x534]\n
    char v3;  // [bp-0x52d]\n
    struct_1 *v4;  // [bp-0x52c]\n
    unsigned int v5;  // [bp-0x528]\n
    struct_1 *v6;  // [bp-0x524]\n
    struct_1 *v7;  // [bp-0x520]\n
    char v8;  // [bp-0x519]\n
    struct_1 *v9;  // [bp-0x518]\n
    char v10;  // [bp-0x511]\n
    struct_1 *v11;  // [bp-0x510]\n
    struct_1 *v12;  // [bp-0x50c]\n
    struct_1 *v13;  // [bp-0x508]\n
    char v14;  // [bp-0x501]\n
    struct_1 *v15;  // [bp-0x500]\n
    struct_1 *v16;  // [bp-0x4fc]\n
    char v17;  // [bp-0x4f5]\n
    struct_1 *v18;  // [bp-0x4f4]\n
    struct_1 *v19;  // [bp-0x4f0]\n
    char v20;  // [bp-0x4e9]\n
    struct_1 *v21;  // [bp-0x4e8]\n
    struct_1 *v22;  // [bp-0x4e4]\n
    struct_1 *v23;  // [bp-0x4e0]\n
    struct_1 *v24;  // [bp-0x4dc]\n
    struct_1 *v25;  // [bp-0x4d8]\n
    char v26;  // [bp-0x4d1]\n
    struct_1 *v27;  // [bp-0x4d0]\n
    struct_1 *v28;  // [bp-0x4cc]\n
    struct_1 *v29;  // [bp-0x4c8]\n
    struct_1 *v30;  // [bp-0x4c4]\n
    char v31;  // [bp-0x4bd]\n
    struct_1 *v32;  // [bp-0x4bc]\n
    char v33;  // [bp-0x4b5]\n
    struct_1 *v34;  // [bp-0x4b4]\n
    struct_1 *v35;  // [bp-0x4b0]\n
    char v36;  // [bp-0x4a9]\n
    unsigned int v37;  // [bp-0x4a8]\n
    struct_3 *v38;  // [bp-0x4a4]\n
    unsigned short v39;  // [bp-0x4a0]\n
    unsigned short v40;  // [bp-0x49e]\n
    unsigned short v41;  // [bp-0x49c]\n
    unsigned short v42;  // [bp-0x49a]\n
    unsigned short v43;  // [bp-0x498]\n
    unsigned short v44;  // [bp-0x496]\n
    unsigned short v45;  // [bp-0x494]\n
    unsigned short v46;  // [bp-0x492]\n
    unsigned short v47;  // [bp-0x490]\n
    unsigned short v48;  // [bp-0x48e]\n
    unsigned short v49;  // [bp-0x48c]\n
    unsigned short v50;  // [bp-0x48a]\n
    unsigned short v51;  // [bp-0x488]\n
    unsigned short v52;  // [bp-0x486]\n
    unsigned long v53;  // [bp-0x484]\n
    unsigned long v54;  // [bp-0x47c]\n
    unsigned long v55;  // [bp-0x474]\n
    unsigned long v56;  // [bp-0x46c]\n
    unsigned long v57;  // [bp-0x464]\n
    unsigned long v58;  // [bp-0x45c]\n
    unsigned long v59;  // [bp-0x454]\n
    struct struct_2 **v60;  // [bp-0x448], Other Possible Types: unsigned int\n
    unsigned int v61;  // [bp-0x444]\n
    unsigned int v62;  // [bp-0x440]\n
    unsigned int v63;  // [bp-0x43c]\n
    char v64;  // [bp-0x436]\n
    char v65[8];  // [bp-0x430]\n
    unsigned short v66;  // [bp-0x42a]\n
    unsigned int *v67;  // [bp-0x428]\n
    struct struct_0 **v68;  // [bp-0x424]\n
    char v69;  // [bp-0x41e]\n
    char *v70;  // [bp-0x418]\n
    unsigned short v71;  // [bp-0x412]\n
    unsigned int *v72;  // [bp-0x410]\n
    struct struct_0 **v73;  // [bp-0x40c]\n
    char v74;  // [bp-0x406]\n
    char v75[2];  // [bp-0x400]\n
    unsigned short v76;  // [bp-0x3fa]\n
    unsigned int *v77;  // [bp-0x3f8]\n
    struct struct_0 **v78;  // [bp-0x3f4]\n
    char v79;  // [bp-0x3ed]\n
    char v80[8];  // [bp-0x3d8]\n
    unsigned int v81;  // [bp-0x3d4]\n
    void* v82;  // [bp-0x3d0]\n
    unsigned int *v83;  // [bp-0x3c8]\n
    struct struct_0 **v84;  // [bp-0x3c4]\n
    char v85;  // [bp-0x3bd]\n
    char v86[8];  // [bp-0x3a8]\n
    unsigned int v87;  // [bp-0x3a4]\n
    void* v88;  // [bp-0x3a0]\n
    unsigned int *v89;  // [bp-0x398]\n
    struct struct_0 **v90;  // [bp-0x394]\n
    char v91;  // [bp-0x38d]\n
    char v92[8];  // [bp-0x378]\n
    unsigned int v93;  // [bp-0x374]\n
    void* v94;  // [bp-0x370]\n
    unsigned int *v95;  // [bp-0x368]\n
    struct struct_0 **v96;  // [bp-0x364]\n
    char v97;  // [bp-0x35d]\n
    char v98[8];  // [bp-0x348]\n
    unsigned int v99;  // [bp-0x344]\n
    void* v100;  // [bp-0x340]\n
    unsigned int *v101;  // [bp-0x338]\n
    struct struct_0 **v102;  // [bp-0x334]\n
    char v103;  // [bp-0x32d]\n
    char v104[8];  // [bp-0x318]\n
    unsigned int v105;  // [bp-0x314]\n
    void* v106;  // [bp-0x310]\n
    unsigned int *v107;  // [bp-0x308]\n
    struct struct_0 **v108;  // [bp-0x304]\n
    char v109;  // [bp-0x2fd]\n
    char v110[8];  // [bp-0x2e8]\n
    unsigned int v111;  // [bp-0x2e4]\n
    void* v112;  // [bp-0x2e0]\n
    unsigned int *v113;  // [bp-0x2dc]\n
    struct struct_0 **v114;  // [bp-0x2d8]\n
    unsigned int v115;  // [bp-0x2d4]\n
    char v116;  // [bp-0x2cd]\n
    unsigned int *v117;  // [bp-0x2cc]\n
    struct struct_0 **v118;  // [bp-0x2c8]\n
    unsigned int v119;  // [bp-0x2c4]\n
    char v120;  // [bp-0x2bd]\n
    unsigned int *v121;  // [bp-0x2bc]\n
    struct struct_0 **v122;  // [bp-0x2b8]\n
    unsigned int v123;  // [bp-0x2b4]\n
    char v124;  // [bp-0x2ad]\n
    unsigned int *v125;  // [bp-0x2ac]\n
    struct struct_0 **v126;  // [bp-0x2a8]\n
    unsigned int v127;  // [bp-0x2a4]\n
    char v128;  // [bp-0x29d]\n
    unsigned int *v129;  // [bp-0x29c]\n
    struct struct_0 **v130;  // [bp-0x298]\n
    char *v131;  // [bp-0x294]\n
    unsigned int *v132;  // [bp-0x290]\n
    struct struct_0 **v133;  // [bp-0x28c]\n
    char *v134;  // [bp-0x288]\n
    unsigned int *v135;  // [bp-0x284]\n
    struct struct_0 **v136;  // [bp-0x280]\n
    char *v137;  // [bp-0x27c]\n
    unsigned int *v138;  // [bp-0x278]\n
    struct struct_0 **v139;  // [bp-0x274]\n
    char *v140;  // [bp-0x270]\n
    unsigned int v141;  // [bp-0x26c]\n
    unsigned int *v142;  // [bp-0x268]\n
    struct struct_0 **v143;  // [bp-0x264]\n
    char v144;  // [bp-0x260]\n
    unsigned short v145;  // [bp-0x25a]\n
    unsigned int *v146;  // [bp-0x258]\n
    struct struct_0 **v147;  // [bp-0x254]\n
    char v148;  // [bp-0x24d]\n
    char v149;  // [bp-0x249]\n
    unsigned int *v150;  // [bp-0x248]\n
    struct struct_0 **v151;  // [bp-0x244]\n
    char v152;  // [bp-0x23d]\n
    char v153;  // [bp-0x239]\n
    unsigned int *v154;  // [bp-0x238]\n
    struct struct_0 **v155;  // [bp-0x234]\n
    char v156;  // [bp-0x22d]\n
    char v157;  // [bp-0x229]\n
    unsigned int *v158;  // [bp-0x228]\n
    struct struct_0 **v159;  // [bp-0x224]\n
    unsigned short *v160;  // [bp-0x220]\n
    unsigned int *v161;  // [bp-0x21c]\n
    struct struct_0 **v162;  // [bp-0x218]\n
    char v163[8];  // [bp-0x214]\n
    unsigned int *v164;  // [bp-0x210]\n
    struct struct_0 **v165;  // [bp-0x20c]\n
    unsigned short *v166;  // [bp-0x208]\n
    unsigned int *v167;  // [bp-0x204]\n
    struct struct_0 **v168;  // [bp-0x200]\n
    char v169;  // [bp-0x1f9]\n
    unsigned long v170;  // [bp-0x1e4]\n
    unsigned int *v171;  // [bp-0x1d8]\n
    struct struct_0 **v172;  // [bp-0x1d4]\n
    char v173;  // [bp-0x1d0]\n
    unsigned int v174;  // [bp-0x1c4]\n
    unsigned int *v175;  // [bp-0x1c0]\n
    struct struct_0 **v176;  // [bp-0x1bc]\n
    char v177;  // [bp-0x1b8]\n
    unsigned int v178;  // [bp-0x1ac]\n
    unsigned int *v179;  // [bp-0x1a8]\n
    struct struct_0 **v180;  // [bp-0x1a4]\n
    char v181;  // [bp-0x1a0]\n
    unsigned int v182;  // [bp-0x194]\n
    unsigned int *v183;  // [bp-0x190]\n
    struct struct_0 **v184;  // [bp-0x18c]\n
    char v185;  // [bp-0x188]\n
    unsigned int v186;  // [bp-0x17c]\n
    unsigned int *v187;  // [bp-0x178]\n
    struct struct_0 **v188;  // [bp-0x174]\n
    char v189;  // [bp-0x170]\n
    unsigned int v190;  // [bp-0x164]\n
    unsigned int *v191;  // [bp-0x160]\n
    struct struct_0 **v192;  // [bp-0x15c]\n
    char v193;  // [bp-0x158]\n
    unsigned int v194;  // [bp-0x14c]\n
    unsigned int *v195;  // [bp-0x148]\n
    struct struct_0 **v196;  // [bp-0x144]\n
    char v197;  // [bp-0x140]\n
    unsigned int v198;  // [bp-0x134]\n
    unsigned int *v199;  // [bp-0x130]\n
    struct struct_0 **v200;  // [bp-0x12c]\n
    char v201;  // [bp-0x128]\n
    unsigned int v202;  // [bp-0x11c]\n
    unsigned int *v203;  // [bp-0x118]\n
    struct struct_0 **v204;  // [bp-0x114]\n
    char v205;  // [bp-0x110]\n
    unsigned int v206;  // [bp-0x104]\n
    unsigned int *v207;  // [bp-0x100]\n
    struct struct_0 **v208;  // [bp-0xfc]\n
    unsigned int v209;  // [bp-0xf8]\n
    unsigned short v210;  // [bp-0xf2]\n
    unsigned int *v211;  // [bp-0xf0]\n
    struct struct_0 **v212;  // [bp-0xec]\n
    unsigned int v213;  // [bp-0xe8]\n
    unsigned short v214;  // [bp-0xe2]\n
    unsigned int *v215;  // [bp-0xe0]\n
    struct struct_0 **v216;  // [bp-0xdc]\n
    unsigned int v217;  // [bp-0xd8]\n
    unsigned short v218;  // [bp-0xd2]\n
    unsigned int *v219;  // [bp-0xd0]\n
    struct struct_0 **v220;  // [bp-0xcc]\n
    unsigned int v221;  // [bp-0xc8]\n
    unsigned short v222;  // [bp-0xc2]\n
    unsigned int *v223;  // [bp-0xc0]\n
    struct struct_0 **v224;  // [bp-0xbc]\n
    char v225;  // [bp-0xb8]\n
    char v226[4];  // [bp-0xac]\n
    unsigned int v227;  // [bp-0xa8]\n
    unsigned int *v228;  // [bp-0xa4]\n
    struct struct_0 **v229;  // [bp-0xa0]\n
    char *v230;  // [bp-0x9c]\n
    unsigned int v231;  // [bp-0x98]\n
    unsigned int *v232;  // [bp-0x94]\n
    struct struct_0 **v233;  // [bp-0x90]\n
    char v234;  // [bp-0x89]\n
    unsigned int v235;  // [bp-0x74]\n
    unsigned int v236;  // [bp-0x70]\n
    unsigned int *v237;  // [bp-0x6c]\n
    struct struct_0 **v238;  // [bp-0x68]\n
    char v239;  // [bp-0x61]\n
    unsigned int v240;  // [bp-0x4c]\n
    unsigned int v241;  // [bp-0x48]\n
    unsigned int *v242;  // [bp-0x40]\n
    struct struct_0 **v243;  // [bp-0x3c]\n
    unsigned int v244;  // [bp-0x38]\n
    char v245;  // [bp-0x31]\n
    unsigned int *v246;  // [bp-0x30]\n
    struct struct_0 **v247;  // [bp-0x2c]\n
    unsigned int v248;  // [bp-0x28]\n
    char v249;  // [bp-0x21]\n
    unsigned int *v250;  // [bp-0x20]\n
    struct struct_0 **v251;  // [bp-0x1c]\n
    unsigned int v252;  // [bp-0x18]\n
    char v253;  // [bp-0x11]\n
    unsigned int *v254;  // [bp-0x10]\n
    struct struct_0 **v255;  // [bp-0xc]\n
    unsigned int v256;  // [bp-0x8]\n
    unsigned int v258;  // ebx\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    struct struct_0 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_0 **v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_0 **v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    struct struct_0 **v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax\n
    struct struct_0 **v310;  // eax\n
    struct struct_0 **v311;  // eax\n
    unsigned int *v312;  // eax\n
    unsigned int *v313;  // eax\n
    struct struct_0 **v314;  // eax\n
    unsigned int *v315;  // eax\n
    struct struct_0 **v316;  // eax\n
    unsigned int *v317;  // eax\n
    struct struct_0 **v318;  // eax\n
    unsigned int *v319;  // eax\n
    struct struct_0 **v320;  // eax\n
    struct struct_0 **v321;  // eax\n
    unsigned int *v322;  // eax\n
    unsigned int *v323;  // eax\n
    struct struct_0 **v324;  // eax\n
    unsigned int v325[2];  // ecx\n
    unsigned int *v326;  // eax\n
    struct struct_0 **v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_0 **v329;  // eax\n
    unsigned int v330[2];  // ecx\n
    unsigned int *v331;  // eax\n
    struct struct_0 **v332;  // eax\n
    unsigned int *v333;  // eax\n
    struct struct_0 **v334;  // eax\n
    unsigned int *v335;  // eax\n
    struct struct_0 **v336;  // eax\n
    unsigned int *v337;  // eax\n
    struct struct_0 **v338;  // eax\n
    unsigned int *v339;  // eax\n
    struct struct_0 **v340;  // eax\n
    unsigned int *v341;  // eax\n
    struct struct_0 **v342;  // eax\n
    unsigned int *v343;  // eax\n
    struct struct_0 **v344;  // eax\n
    unsigned int *v345;  // eax\n
    struct struct_0 **v346;  // eax\n
    unsigned int *v347;  // eax\n
    struct struct_0 **v348;  // eax\n
    struct struct_0 **v350;  // eax\n
    unsigned int *v352;  // eax\n
    unsigned int *v353;  // eax\n
    struct struct_0 **v354;  // eax\n
    unsigned int *v355;  // eax\n
    struct struct_0 **v356;  // eax\n
    unsigned int *v357;  // eax\n
    struct struct_0 **v358;  // eax\n
    unsigned int *v359;  // eax\n
    struct struct_0 **v360;  // eax\n
    unsigned int *v361;  // eax\n
    struct struct_0 **v362;  // eax\n
    struct struct_0 **v363;  // eax\n
    unsigned int *v364;  // eax\n
    unsigned int *v365;  // eax\n
    struct struct_0 **v366;  // eax\n
    unsigned int *v367;  // eax\n
    struct struct_0 **v368;  // eax\n
    unsigned int *v369;  // eax\n
    struct struct_0 **v370;  // eax\n
    unsigned int *v371;  // eax\n
    struct struct_0 **v372;  // eax\n
    unsigned int *v373;  // eax\n
    struct struct_0 **v374;  // eax\n
    struct struct_0 **v375;  // eax\n
    unsigned int *v376;  // eax\n
    unsigned int *v377;  // eax, Other Possible Types: unsigned int\n
    unsigned int v378;  // ebx\n
\n
    v256 = v258;\n
    v38 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v62 = g_4f0380;\n
    v63 = g_4f0384;\n
    v61 = cgc__cookie;\n
    v60 = -1;\n
    if (cgc_sendline(1, \"===llamasquatinid===\", 20) < 0)\n
        cgc__terminate();\n
    v139 = v257;\n
    v138 = a0;\n
    v137 = &*(v139)->field_0;\n
    if (*(v138) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v259 = v138;\n
    *(v259) = *(v259) - 1;\n
    v260 = v139;\n
    *(v260) = &*(v260)->padding_1;\n
    v60 = *(v137);\n
    v143 = v257;\n
    v142 = a0;\n
    if (*(v142) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v142) >= 128)\n
        v37 = 128;\n
    else\n
        v37 = *(v142);\n
    v141 = v37;\n
    if (!v141)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = cgc_calloc(134);\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v140, &v38[18].padding_0[182]);\n
    cgc_strncpy(v140 + 5, *(v143), v141);\n
    v262 = v143;\n
    *(v262) = &(&*(v262)->field_4)[cgc_strlen(v140)];\n
    v264 = v142;\n
    *(v264) = *(v264) - (cgc_strlen(v140) + -4);\n
    cgc_checkheap();\n
    cgc_free(v140);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v114 = v257;\n
    v113 = a0;\n
    *(&v110[0]) = *(v114);\n
    memset(&v109, 0, 21);\n
    if (*(v113) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = 0;\n
    if (v110[0])\n
    {\n
        v36 = 0;\n
        if (v110[1])\n
        {\n
            v36 = 0;\n
            if (v110[2])\n
            {\n
                v36 = 0;\n
                if (v110[3])\n
                {\n
                    v36 = 0;\n
                    if (v110[4] << 24)\n
                    {\n
                        v36 = 0;\n
                        if (v110[5] << 16)\n
                        {\n
                            v36 = 0;\n
                            if (v110[6] << 8)\n
                                v36 = v110[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v111 = v36 & 1;\n
    v112 = 0;\n
    cgc_uint2str(&v109, 21, v111);\n
    v35 = &v109;\n
    if (cgc_sendline(1, v35, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v265 = v113;\n
    *(v265) = *(v265) - 8;\n
    v266 = v114;\n
    *(v266) = &(*(v266))[1].padding_1[2];\n
    v184 = v257;\n
    v183 = a0;\n
    memset(&v181, 0, 12);\n
    if (*(v183) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = *(&*(v184)->field_0);\n
    cgc_uint2str(&v181, 12, v182);\n
    v34 = &v181;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v181)) < 0)\n
        cgc__terminate();\n
    v267 = v183;\n
    *(v267) = *(v267) - 4;\n
    v268 = v184;\n
    *(v268) = &*(v268)->field_4;\n
    v229 = v257;\n
    v228 = a0;\n
    *(&v226[0]) = *(v229);\n
    memset(&v225, 0, 12);\n
    if (*(v228) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = 0;\n
    if (v226[0] << 24)\n
    {\n
        v33 = 0;\n
        if (v226[1] << 16)\n
        {\n
            v33 = 0;\n
            if (v226[2] << 8)\n
                v33 = v226[3];\n
        }\n
    }\n
    v227 = v33 & 1;\n
    cgc_uint2str(&v225, 12, v227);\n
    v32 = &v225;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v225)) < 0)\n
        cgc__terminate();\n
    v269 = v228;\n
    *(v269) = *(v269) - 4;\n
    v270 = v229;\n
    *(v270) = &*(v270)->field_4;\n
    v212 = v257;\n
    v211 = a0;\n
    if (*(v211) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v210 = *(&*(v212)->field_0);\n
    v271 = v211;\n
    *(v271) = *(v271) - 2;\n
    v272 = v212;\n
    *(v272) = &*(v272)->padding_1[1];\n
    if (v210 <= *(v211) && !(!v210))\n
        goto LABEL_4a052b;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a052b:\n
    v209 = cgc_calloc(v210);\n
    if (!v209)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v209, *(v212), v210);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v273 = v211;\n
    *(v273) = *(v273) - v210;\n
    v274 = v212;\n
    *(v274) = &(&*(v274)->field_0)[v210];\n
    cgc_checkheap();\n
    cgc_free(v209);\n
    v108 = v257;\n
    v107 = a0;\n
    *(&v104[0]) = *(v108);\n
    memset(&v103, 0, 21);\n
    if (*(v107) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (v104[0])\n
    {\n
        v31 = 0;\n
        if (v104[1])\n
        {\n
            v31 = 0;\n
            if (v104[2])\n
            {\n
                v31 = 0;\n
                if (v104[3])\n
                {\n
                    v31 = 0;\n
                    if (v104[4] << 24)\n
                    {\n
                        v31 = 0;\n
                        if (v104[5] << 16)\n
                        {\n
                            v31 = 0;\n
                            if (v104[6] << 8)\n
                                v31 = v104[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v105 = v31 & 1;\n
    v106 = 0;\n
    cgc_uint2str(&v103, 21, v105);\n
    v30 = &v103;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v275 = v107;\n
    *(v275) = *(v275) - 8;\n
    v276 = v108;\n
    *(v276) = &(*(v276))[1].padding_1[2];\n
    v147 = v257;\n
    v146 = a0;\n
    memset(&v144, 0, 6);\n
    if (*(v146) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v145 = *(&*(v147)->field_0);\n
    cgc_uint2str(&v144, 6, v145);\n
    v29 = &v144;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v144)) < 0)\n
        cgc__terminate();\n
    v277 = v146;\n
    *(v277) = *(v277) - 2;\n
    v278 = v147;\n
    *(v278) = &*(v278)->padding_1[1];\n
    v168 = v257;\n
    v167 = a0;\n
    v166 = &*(v168)->field_0;\n
    if (*(v167) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v279 = v167;\n
    *(v279) = *(v279) - 2;\n
    v280 = v168;\n
    *(v280) = &*(v280)->padding_1[1];\n
    v60 = *(v166);\n
    v130 = v257;\n
    v129 = a0;\n
    if (*(v129) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(v130)->field_0;\n
    v281 = v129;\n
    *(v281) = *(v281) - 1;\n
    v282 = v130;\n
    *(v282) = &*(v282)->padding_1;\n
    if (v128 <= *(v129) && !(!v128))\n
        goto LABEL_4a0b9a;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a0b9a:\n
    v127 = cgc_calloc(v128);\n
    if (!v127)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v127, *(v130), v128);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v283 = v130;\n
    *(v283) = &(&*(v283)->field_0)[v128];\n
    v284 = v129;\n
    *(v284) = *(v284) - v128;\n
    cgc_checkheap();\n
    cgc_free(v127);\n
    v255 = v257;\n
    v254 = a0;\n
    if (*(v254) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v253 = *(v255)->field_0;\n
    v285 = v254;\n
    *(v285) = *(v285) - 1;\n
    v286 = v255;\n
    *(v286) = &*(v286)->padding_1;\n
    if (v253 <= *(v254) && !(!v253))\n
        goto LABEL_4a0db4;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a0db4:\n
    v252 = cgc_calloc(v253);\n
    if (!v252)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v252, *(v255), v253);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v287 = v255;\n
    *(v287) = &(&*(v287)->field_0)[v253];\n
    v288 = v254;\n
    *(v288) = *(v288) - v253;\n
    cgc_checkheap();\n
    cgc_free(v252);\n
    v208 = v257;\n
    v207 = a0;\n
    memset(&v205, 0, 12);\n
    if (*(v207) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v206 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v52 = [D] x86g_create_fpucw(fpround<4>);\n
    v51 = v52 | 0xc00;\n
    v59 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v205, 12, v59);\n
    v28 = &v205;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v205)) < 0)\n
        cgc__terminate();\n
    v289 = v207;\n
    *(v289) = *(v289) - 4;\n
    v290 = v208;\n
    *(v290) = &*(v290)->field_4;\n
    v204 = v257;\n
    v203 = a0;\n
    memset(&v201, 0, 12);\n
    if (*(v203) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v202 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v50 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1158, size=2, endness=Iend_LE)))));\n
    v49 = v50 | 0xc00;\n
    v58 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v201, 12, v58);\n
    v27 = &v201;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v201)) < 0)\n
        cgc__terminate();\n
    v291 = v203;\n
    *(v291) = *(v291) - 4;\n
    v292 = v204;\n
    *(v292) = &*(v292)->field_4;\n
    v102 = v257;\n
    v101 = a0;\n
    *(&v98[0]) = *(v102);\n
    memset(&v97, 0, 21);\n
    if (*(v101) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v98[0])\n
    {\n
        v26 = 0;\n
        if (v98[1])\n
        {\n
            v26 = 0;\n
            if (v98[2])\n
            {\n
                v26 = 0;\n
                if (v98[3])\n
                {\n
                    v26 = 0;\n
                    if (v98[4] << 24)\n
                    {\n
                        v26 = 0;\n
                        if (v98[5] << 16)\n
                        {\n
                            v26 = 0;\n
                            if (v98[6] << 8)\n
                                v26 = v98[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v99 = v26 & 1;\n
    v100 = 0;\n
    cgc_uint2str(&v97, 21, v99);\n
    v25 = &v97;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v97)) < 0)\n
        cgc__terminate();\n
    v293 = v101;\n
    *(v293) = *(v293) - 8;\n
    v294 = v102;\n
    *(v294) = &(*(v294))[1].padding_1[2];\n
    v200 = v257;\n
    v199 = a0;\n
    memset(&v197, 0, 12);\n
    if (*(v199) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v198 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1162, size=2, endness=Iend_LE)))));\n
    v47 = v48 | 0xc00;\n
    v57 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v197, 12, v57);\n
    v24 = &v197;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v197)) < 0)\n
        cgc__terminate();\n
    v295 = v199;\n
    *(v295) = *(v295) - 4;\n
    v296 = v200;\n
    *(v296) = &*(v296)->field_4;\n
    v224 = v257;\n
    v223 = a0;\n
    if (*(v223) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v222 = *(&*(v224)->field_0);\n
    v297 = v223;\n
    *(v297) = *(v297) - 2;\n
    v298 = v224;\n
    *(v298) = &*(v298)->padding_1[1];\n
    if (v222 <= *(v223) && !(!v222))\n
        goto LABEL_4a1671;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a1671:\n
    v221 = cgc_calloc(v222);\n
    if (!v221)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v221, *(v224), v222);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v299 = v223;\n
    *(v299) = *(v299) - v222;\n
    v300 = v224;\n
    *(v300) = &(&*(v300)->field_0)[v222];\n
    cgc_checkheap();\n
    cgc_free(v221);\n
    v180 = v257;\n
    v179 = a0;\n
    memset(&v177, 0, 12);\n
    if (*(v179) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(&*(v180)->field_0);\n
    cgc_uint2str(&v177, 12, v178);\n
    v23 = &v177;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v177)) < 0)\n
        cgc__terminate();\n
    v301 = v179;\n
    *(v301) = *(v301) - 4;\n
    v302 = v180;\n
    *(v302) = &*(v302)->field_4;\n
    v251 = v257;\n
    v250 = a0;\n
    if (*(v250) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v249 = *(v251)->field_0;\n
    v303 = v250;\n
    *(v303) = *(v303) - 1;\n
    v304 = v251;\n
    *(v304) = &*(v304)->padding_1;\n
    if (v249 <= *(v250) && !(!v249))\n
        goto LABEL_4a19ce;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a19ce:\n
    v248 = cgc_calloc(v249);\n
    if (!v248)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v248, *(v251), v249);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v305 = v251;\n
    *(v305) = &(&*(v305)->field_0)[v249];\n
    v306 = v250;\n
    *(v306) = *(v306) - v249;\n
    cgc_checkheap();\n
    cgc_free(v248);\n
    v159 = v257;\n
    v158 = a0;\n
    memset(&v156, 0, 4);\n
    if (*(v158) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v157 = *(v159)->field_0;\n
    cgc_uint2str(&v156, 4, v157);\n
    v22 = &v156;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v156)) < 0)\n
        cgc__terminate();\n
    v307 = v158;\n
    *(v307) = *(v307) - 1;\n
    v308 = v159;\n
    *(v308) = &*(v308)->padding_1;\n
    v247 = v257;\n
    v246 = a0;\n
    if (*(v246) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v245 = *(v247)->field_0;\n
    v309 = v246;\n
    *(v309) = *(v309) - 1;\n
    v310 = v247;\n
    *(v310) = &*(v310)->padding_1;\n
    if (v245 <= *(v246) && !(!v245))\n
        goto LABEL_4a1d0b;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a1d0b:\n
    v244 = cgc_calloc(v245);\n
    if (!v244)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v244, *(v247), v245);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v311 = v247;\n
    *(v311) = &(&*(v311)->field_0)[v245];\n
    v312 = v246;\n
    *(v312) = *(v312) - v245;\n
    cgc_checkheap();\n
    cgc_free(v244);\n
    v176 = v257;\n
    v175 = a0;\n
    memset(&v173, 0, 12);\n
    if (*(v175) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v174 = *(&*(v176)->field_0);\n
    cgc_uint2str(&v173, 12, v174);\n
    v21 = &v173;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v173)) < 0)\n
        cgc__terminate();\n
    v313 = v175;\n
    *(v313) = *(v313) - 4;\n
    v314 = v176;\n
    *(v314) = &*(v314)->field_4;\n
    v96 = v257;\n
    v95 = a0;\n
    *(&v92[0]) = *(v96);\n
    memset(&v91, 0, 21);\n
    if (*(v95) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v92[0])\n
    {\n
        v20 = 0;\n
        if (v92[1])\n
        {\n
            v20 = 0;\n
            if (v92[2])\n
            {\n
                v20 = 0;\n
                if (v92[3])\n
                {\n
                    v20 = 0;\n
                    if (v92[4] << 24)\n
                    {\n
                        v20 = 0;\n
                        if (v92[5] << 16)\n
                        {\n
                            v20 = 0;\n
                            if (v92[6] << 8)\n
                                v20 = v92[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v93 = v20 & 1;\n
    v94 = 0;\n
    cgc_uint2str(&v91, 21, v93);\n
    v19 = &v91;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v315 = v95;\n
    *(v315) = *(v315) - 8;\n
    v316 = v96;\n
    *(v316) = &(*(v316))[1].padding_1[2];\n
    v196 = v257;\n
    v195 = a0;\n
    memset(&v193, 0, 12);\n
    if (*(v195) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v194 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1166, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v56 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v193, 12, v56);\n
    v18 = &v193;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v317 = v195;\n
    *(v317) = *(v317) - 4;\n
    v318 = v196;\n
    *(v318) = &*(v318)->field_4;\n
    v126 = v257;\n
    v125 = a0;\n
    if (*(v125) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v124 = *(v126)->field_0;\n
    v319 = v125;\n
    *(v319) = *(v319) - 1;\n
    v320 = v126;\n
    *(v320) = &*(v320)->padding_1;\n
    if (v124 <= *(v125) && !(!v124))\n
        goto LABEL_4a2421;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a2421:\n
    v123 = cgc_calloc(v124);\n
    if (!v123)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v123, *(v126), v124);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v321 = v126;\n
    *(v321) = &(&*(v321)->field_0)[v124];\n
    v322 = v125;\n
    *(v322) = *(v322) - v124;\n
    cgc_checkheap();\n
    cgc_free(v123);\n
    v78 = v257;\n
    v77 = a0;\n
    *(&v75) = *(v78);\n
    memset(&v74, 0, 6);\n
    if (*(v77) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v75[0] << 8)\n
        v17 = v75[1];\n
    v76 = v17 & 1;\n
    cgc_uint2str(&v74, 6, v76);\n
    v16 = &v74;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v323 = v77;\n
    *(v323) = *(v323) - 2;\n
    v324 = v78;\n
    *(v324) = &*(v324)->padding_1[1];\n
    v243 = v257;\n
    v242 = a0;\n
    memset(&v239, 0, 21);\n
    if (*(v242) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v325 = *(v243);\n
    v241 = v325[1];\n
    v240 = v325[0];\n
    cgc_uint2str(&v239, 21, v240);\n
    v15 = &v239;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v239)) < 0)\n
        cgc__terminate();\n
    v326 = v242;\n
    *(v326) = *(v326) - 8;\n
    v327 = v243;\n
    *(v327) = &(*(v327))[1].padding_1[2];\n
    v73 = v257;\n
    v72 = a0;\n
    v70 = &*(v73)->field_0;\n
    memset(&v69, 0, 6);\n
    if (*(v72) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (*(v70) << 8)\n
        v14 = v70[1];\n
    v71 = v14 & 1;\n
    cgc_uint2str(&v69, 6, v71);\n
    v13 = &v69;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v328 = v72;\n
    *(v328) = *(v328) - 2;\n
    v329 = v73;\n
    *(v329) = &*(v329)->padding_1[1];\n
    v238 = v257;\n
    v237 = a0;\n
    memset(&v234, 0, 21);\n
    if (*(v237) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v330 = *(v238);\n
    v236 = v330[1];\n
    v235 = v330[0];\n
    cgc_uint2str(&v234, 21, v235);\n
    v12 = &v234;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v234)) < 0)\n
        cgc__terminate();\n
    v331 = v237;\n
    *(v331) = *(v331) - 8;\n
    v332 = v238;\n
    *(v332) = &(*(v332))[1].padding_1[2];\n
    v136 = v257;\n
    v135 = a0;\n
    v134 = &*(v136)->field_0;\n
    if (*(v135) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v333 = v135;\n
    *(v333) = *(v333) - 1;\n
    v334 = v136;\n
    *(v334) = &*(v334)->padding_1;\n
    v60 = *(v134);\n
    v165 = v257;\n
    v164 = a0;\n
    *(&v163[0]) = *(v165);\n
    if (*(v164) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v335 = v164;\n
    *(v335) = *(v335) - 2;\n
    v336 = v165;\n
    *(v336) = &*(v336)->padding_1[1];\n
    v60 = *(&v163[0]);\n
    v133 = v257;\n
    v132 = a0;\n
    v131 = &*(v133)->field_0;\n
    if (*(v132) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v337 = v132;\n
    *(v337) = *(v337) - 1;\n
    v338 = v133;\n
    *(v338) = &*(v338)->padding_1;\n
    v60 = *(v131);\n
    v192 = v257;\n
    v191 = a0;\n
    memset(&v189, 0, 12);\n
    if (*(v191) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v190 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1170, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v55 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v189, 12, v55);\n
    v11 = &v189;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v189)) < 0)\n
        cgc__terminate();\n
    v339 = v191;\n
    *(v339) = *(v339) - 4;\n
    v340 = v192;\n
    *(v340) = &*(v340)->field_4;\n
    v90 = v257;\n
    v89 = a0;\n
    *(&v86[0]) = *(v90);\n
    memset(&v85, 0, 21);\n
    if (*(v89) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v86[0])\n
    {\n
        v10 = 0;\n
        if (v86[1])\n
        {\n
            v10 = 0;\n
            if (v86[2])\n
            {\n
                v10 = 0;\n
                if (v86[3])\n
                {\n
                    v10 = 0;\n
                    if (v86[4] << 24)\n
                    {\n
                        v10 = 0;\n
                        if (v86[5] << 16)\n
                        {\n
                            v10 = 0;\n
                            if (v86[6] << 8)\n
                                v10 = v86[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v87 = v10 & 1;\n
    v88 = 0;\n
    cgc_uint2str(&v85, 21, v87);\n
    v9 = &v85;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v85)) < 0)\n
        cgc__terminate();\n
    v341 = v89;\n
    *(v341) = *(v341) - 8;\n
    v342 = v90;\n
    *(v342) = &(*(v342))[1].padding_1[2];\n
    v68 = v257;\n
    v67 = a0;\n
    *(&v65[0]) = *(v68);\n
    memset(&v64, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v65[0] << 8)\n
        v8 = v65[1];\n
    v66 = v8 & 1;\n
    cgc_uint2str(&v64, 6, v66);\n
    v7 = &v64;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v343 = v67;\n
    *(v343) = *(v343) - 2;\n
    v344 = v68;\n
    *(v344) = &*(v344)->padding_1[1];\n
    v162 = v257;\n
    v161 = a0;\n
    v160 = &*(v162)->field_0;\n
    if (*(v161) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v345 = v161;\n
    *(v345) = *(v345) - 2;\n
    v346 = v162;\n
    *(v346) = &*(v346)->padding_1[1];\n
    v60 = *(v160);\n
    v172 = v257;\n
    v171 = a0;\n
    memset(&v169, 0, 21);\n
    if (*(v171) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v170 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1174, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v54 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v169, 21, v54);\n
    v6 = &v169;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v169)) < 0)\n
        cgc__terminate();\n
    v347 = v171;\n
    *(v347) = *(v347) - 8;\n
    v348 = v172;\n
    *(v348) = &(*(v348))[1].padding_1[2];\n
    v233 = v257;\n
    v232 = a0;\n
    if (*(v232) <= 0)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v232) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v232);\n
    v231 = v5;\n
    if (!v231)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v230 = cgc_calloc(134);\n
    if (!v230)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v230, &v38[18].padding_0[182]);\n
    cgc_strncpy(v230 + 5, *(v233), v231);\n
    v350 = v233;\n
    *(v350) = &(&*(v350)->field_4)[cgc_strlen(v230)];\n
    v352 = v232;\n
    *(v352) = *(v352) - (cgc_strlen(v230) + -4);\n
    cgc_checkheap();\n
    cgc_free(v230);\n
    if (cgc_sendline(1, &v38[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v220 = v257;\n
    v219 = a0;\n
    if (*(v219) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v218 = *(&*(v220)->field_0);\n
    v353 = v219;\n
    *(v353) = *(v353) - 2;\n
    v354 = v220;\n
    *(v354) = &*(v354)->padding_1[1];\n
    if (v218 <= *(v219) && !(!v218))\n
        goto LABEL_4a379b;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a379b:\n
    v217 = cgc_calloc(v218);\n
    if (!v217)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v217, *(v220), v218);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v355 = v219;\n
    *(v355) = *(v355) - v218;\n
    v356 = v220;\n
    *(v356) = &(&*(v356)->field_0)[v218];\n
    cgc_checkheap();\n
    cgc_free(v217);\n
    v155 = v257;\n
    v154 = a0;\n
    memset(&v152, 0, 4);\n
    if (*(v154) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v153 = *(v155)->field_0;\n
    cgc_uint2str(&v152, 4, v153);\n
    v4 = &v152;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v152)) < 0)\n
        cgc__terminate();\n
    v357 = v154;\n
    *(v357) = *(v357) - 1;\n
    v358 = v155;\n
    *(v358) = &*(v358)->padding_1;\n
    v84 = v257;\n
    v83 = a0;\n
    *(&v80[0]) = *(v84);\n
    memset(&v79, 0, 21);\n
    if (*(v83) < 8)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v80[0])\n
    {\n
        v3 = 0;\n
        if (v80[1])\n
        {\n
            v3 = 0;\n
            if (v80[2])\n
            {\n
                v3 = 0;\n
                if (v80[3])\n
                {\n
                    v3 = 0;\n
                    if (v80[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v80[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v80[6] << 8)\n
                                v3 = v80[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v81 = v3 & 1;\n
    v82 = 0;\n
    cgc_uint2str(&v79, 21, v81);\n
    v2 = &v79;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v359 = v83;\n
    *(v359) = *(v359) - 8;\n
    v360 = v84;\n
    *(v360) = &(*(v360))[1].padding_1[2];\n
    v122 = v257;\n
    v121 = a0;\n
    if (*(v121) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = *(v122)->field_0;\n
    v361 = v121;\n
    *(v361) = *(v361) - 1;\n
    v362 = v122;\n
    *(v362) = &*(v362)->padding_1;\n
    if (v120 <= *(v121) && !(!v120))\n
        goto LABEL_4a3d5f;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a3d5f:\n
    v119 = cgc_calloc(v120);\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v119, *(v122), v120);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v363 = v122;\n
    *(v363) = &(&*(v363)->field_0)[v120];\n
    v364 = v121;\n
    *(v364) = *(v364) - v120;\n
    cgc_checkheap();\n
    cgc_free(v119);\n
    v188 = v257;\n
    v187 = a0;\n
    memset(&v185, 0, 12);\n
    if (*(v187) < 4)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v186 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1178, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v53 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v185, 12, v53);\n
    v1 = &v185;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v185)) < 0)\n
        cgc__terminate();\n
    v365 = v187;\n
    *(v365) = *(v365) - 4;\n
    v366 = v188;\n
    *(v366) = &*(v366)->field_4;\n
    v216 = v257;\n
    v215 = a0;\n
    if (*(v215) < 2)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v214 = *(&*(v216)->field_0);\n
    v367 = v215;\n
    *(v367) = *(v367) - 2;\n
    v368 = v216;\n
    *(v368) = &*(v368)->padding_1[1];\n
    if (v214 <= *(v215) && !(!v214))\n
        goto LABEL_4a410d;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a410d:\n
    v213 = cgc_calloc(v214);\n
    if (!v213)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v213, *(v216), v214);\n
    if (cgc_sendline(1, &v38[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v369 = v215;\n
    *(v369) = *(v369) - v214;\n
    v370 = v216;\n
    *(v370) = &(&*(v370)->field_0)[v214];\n
    cgc_checkheap();\n
    cgc_free(v213);\n
    v151 = v257;\n
    v150 = a0;\n
    memset(&v148, 0, 4);\n
    if (*(v150) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v149 = *(v151)->field_0;\n
    cgc_uint2str(&v148, 4, v149);\n
    v0 = &v148;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v148)) < 0)\n
        cgc__terminate();\n
    v371 = v150;\n
    *(v371) = *(v371) - 1;\n
    v372 = v151;\n
    *(v372) = &*(v372)->padding_1;\n
    v118 = v257;\n
    v117 = a0;\n
    if (*(v117) < 1)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(v118)->field_0;\n
    v373 = v117;\n
    *(v373) = *(v373) - 1;\n
    v374 = v118;\n
    *(v374) = &*(v374)->padding_1;\n
    if (v116 <= *(v117) && !(!v116))\n
        goto LABEL_4a4489;\n
    if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a4489:\n
    v115 = cgc_calloc(v116);\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v38[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v115, *(v118), v116);\n
    if (cgc_sendline(1, &v38[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v375 = v118;\n
    *(v375) = &(&*(v375)->field_0)[v116];\n
    v376 = v117;\n
    *(v376) = *(v376) - v116;\n
    cgc_checkheap();\n
    cgc_free(v115);\n
    v61 ^= v38->field_260;\n
    if (v61)\n
        cgc___stack_cookie_fail();\n
    v377 = a0;\n
    if (*(v377) > 0 && v60 >= 0 && v60 < 2)\n
        v377 = (&v62)[v60](v257);\n
    v378 = v256;\n
    return v377;\n
}\n
", "4867630:sub_4a462e": null, "4867632:cgc_process_llamaspaying": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaspaying(struct struct_0 **v49, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x12c]\n
    char v1;  // [bp-0x125]\n
    struct_2 *v2;  // [bp-0x124]\n
    struct_2 *v3;  // [bp-0x120]\n
    char v4;  // [bp-0x119]\n
    struct_2 *v5;  // [bp-0x118]\n
    struct_2 *v6;  // [bp-0x114]\n
    struct_2 *v7;  // [bp-0x110]\n
    struct_1 *v8;  // [bp-0x10c]\n
    unsigned short v9;  // [bp-0x108]\n
    unsigned short v10;  // [bp-0x106]\n
    unsigned long v11;  // [bp-0x104]\n
    struct struct_3 **v12;  // [bp-0xf8]\n
    unsigned int v13;  // [bp-0xf4]\n
    char v14;  // [bp-0xf0]\n
    char v15;  // [bp-0xee]\n
    char v16[2];  // [bp-0xe8]\n
    unsigned short v17;  // [bp-0xe2]\n
    unsigned int *v18;  // [bp-0xe0]\n
    struct struct_0 **v19;  // [bp-0xdc]\n
    char v20;  // [bp-0xd5]\n
    char v21[8];  // [bp-0xc0]\n
    unsigned int v22;  // [bp-0xbc]\n
    void* v23;  // [bp-0xb8]\n
    unsigned int *v24;  // [bp-0xb4]\n
    struct struct_0 **v25;  // [bp-0xb0]\n
    char v26;  // [bp-0xa9]\n
    unsigned long v27;  // [bp-0x94]\n
    unsigned int *v28;  // [bp-0x8c]\n
    struct struct_0 **v29;  // [bp-0x88]\n
    char v30;  // [bp-0x84]\n
    unsigned int v31;  // [bp-0x78]\n
    unsigned int *v32;  // [bp-0x74]\n
    struct struct_0 **v33;  // [bp-0x70]\n
    char v34;  // [bp-0x69]\n
    unsigned int v35;  // [bp-0x54]\n
    unsigned int v36;  // [bp-0x50]\n
    unsigned int *v37;  // [bp-0x4c]\n
    struct struct_0 **v38;  // [bp-0x48]\n
    char v39;  // [bp-0x41]\n
    unsigned int v40;  // [bp-0x2c]\n
    unsigned int v41;  // [bp-0x28]\n
    unsigned int *v42;  // [bp-0x20]\n
    struct struct_0 **v43;  // [bp-0x1c]\n
    unsigned int v44;  // [bp-0x18]\n
    char v45;  // [bp-0x11]\n
    unsigned int *v46;  // [bp-0x10]\n
    struct struct_0 **v47;  // [bp-0xc]\n
    unsigned int v48;  // [bp-0x8]\n
    unsigned int v50;  // ebx\n
    unsigned int v51[2];  // ecx\n
    unsigned int *v52;  // eax\n
    struct struct_0 **v53;  // eax\n
    unsigned int *v54;  // eax\n
    struct struct_0 **v55;  // eax\n
    unsigned int *v56;  // eax\n
    struct struct_0 **v57;  // eax\n
    unsigned int *v58;  // eax\n
    struct struct_0 **v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    unsigned int *v61;  // eax\n
    unsigned int *v62;  // eax\n
    struct struct_0 **v63;  // eax\n
    unsigned int v64[2];  // ecx\n
    unsigned int *v65;  // eax\n
    struct struct_0 **v66;  // eax\n
    unsigned int *v67;  // eax\n
    struct struct_0 **v68;  // eax\n
    unsigned int *v69;  // eax, Other Possible Types: unsigned int\n
    unsigned int v70;  // ebx\n
\n
    v48 = v50;\n
    v8 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v13 = cgc__cookie;\n
    v12 = -1;\n
    if (cgc_sendline(1, \"===llamaspaying===\", 18) < 0)\n
        cgc__terminate();\n
    v43 = v49;\n
    v42 = a0;\n
    memset(&v39, 0, 21);\n
    if (*(v42) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v51 = *(v43);\n
    v41 = v51[1];\n
    v40 = v51[0];\n
    cgc_uint2str(&v39, 21, v40);\n
    v7 = &v39;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v52 = v42;\n
    *(v52) = *(v52) - 8;\n
    v53 = v43;\n
    *(v53) = &(*(v53))[1].padding_1[2];\n
    v33 = v49;\n
    v32 = a0;\n
    memset(&v30, 0, 12);\n
    if (*(v32) < 4)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = *(&*(v33)->field_0);\n
    cgc_uint2str(&v30, 12, v31);\n
    v6 = &v30;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v54 = v32;\n
    *(v54) = *(v54) - 4;\n
    v55 = v33;\n
    *(v55) = &*(v55)->field_4;\n
    v29 = v49;\n
    v28 = a0;\n
    memset(&v26, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v27 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v10 = [D] x86g_create_fpucw(fpround<4>);\n
    v9 = v10 | 0xc00;\n
    v11 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v26, 21, v11);\n
    v5 = &v26;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v26)) < 0)\n
        cgc__terminate();\n
    v56 = v28;\n
    *(v56) = *(v56) - 8;\n
    v57 = v29;\n
    *(v57) = &(*(v57))[1].padding_1[2];\n
    v47 = v49;\n
    v46 = a0;\n
    if (*(v46) < 1)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v45 = *(v47)->field_0;\n
    v58 = v46;\n
    *(v58) = *(v58) - 1;\n
    v59 = v47;\n
    *(v59) = &*(v59)->padding_1;\n
    if (v45 <= *(v46) && !(!v45))\n
        goto LABEL_4a4b55;\n
    if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a4b55:\n
    v44 = cgc_calloc(v45);\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v44, *(v47), v45);\n
    if (cgc_sendline(1, &v8[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v60 = v47;\n
    *(v60) = &(&*(v60)->field_0)[v45];\n
    v61 = v46;\n
    *(v61) = *(v61) - v45;\n
    cgc_checkheap();\n
    cgc_free(v44);\n
    v19 = v49;\n
    v18 = a0;\n
    *(&v16) = *(v19);\n
    memset(&v15, 0, 6);\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v16[0] << 8)\n
        v4 = v16[1];\n
    v17 = v4 & 1;\n
    cgc_uint2str(&v15, 6, v17);\n
    v3 = &v15;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v15)) < 0)\n
        cgc__terminate();\n
    v62 = v18;\n
    *(v62) = *(v62) - 2;\n
    v63 = v19;\n
    *(v63) = &*(v63)->padding_1[1];\n
    v38 = v49;\n
    v37 = a0;\n
    memset(&v34, 0, 21);\n
    if (*(v37) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(v38);\n
    v36 = v64[1];\n
    v35 = v64[0];\n
    cgc_uint2str(&v34, 21, v35);\n
    v2 = &v34;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v65 = v37;\n
    *(v65) = *(v65) - 8;\n
    v66 = v38;\n
    *(v66) = &(*(v66))[1].padding_1[2];\n
    v25 = v49;\n
    v24 = a0;\n
    *(&v21[0]) = *(v25);\n
    memset(&v20, 0, 21);\n
    if (*(v24) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v21[0])\n
    {\n
        v1 = 0;\n
        if (v21[1])\n
        {\n
            v1 = 0;\n
            if (v21[2])\n
            {\n
                v1 = 0;\n
                if (v21[3])\n
                {\n
                    v1 = 0;\n
                    if (v21[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v21[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v21[6] << 8)\n
                                v1 = v21[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v22 = v1 & 1;\n
    v23 = 0;\n
    cgc_uint2str(&v20, 21, v22);\n
    v0 = &v20;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v20)) < 0)\n
        cgc__terminate();\n
    v67 = v24;\n
    *(v67) = *(v67) - 8;\n
    v68 = v25;\n
    *(v68) = &(*(v68))[1].padding_1[2];\n
    v13 ^= v8->field_260;\n
    if (v13)\n
        cgc___stack_cookie_fail();\n
    v69 = a0;\n
    if (*(v69) > 0 && v12 >= 0 && v12 < 0)\n
        v69 = *((&v14 + 0x4 * v12))(v49);\n
    v70 = v48;\n
    return v69;\n
}\n
", "4870605:sub_4a51cd": null, "4870608:cgc_process_llamaportico": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f0388;\n
\n
int cgc_process_llamaportico(struct struct_1 **v172, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x3c4]\n
    struct_0 *v1;  // [bp-0x3c0]\n
    struct_0 *v2;  // [bp-0x3bc]\n
    struct_0 *v3;  // [bp-0x3b8]\n
    struct_0 *v4;  // [bp-0x3b4]\n
    char v5;  // [bp-0x3ad]\n
    unsigned int v6;  // [bp-0x3ac]\n
    struct_0 *v7;  // [bp-0x3a8]\n
    struct_0 *v8;  // [bp-0x3a4]\n
    struct_0 *v9;  // [bp-0x3a0]\n
    char v10;  // [bp-0x399]\n
    struct_0 *v11;  // [bp-0x398]\n
    struct_0 *v12;  // [bp-0x394]\n
    struct_0 *v13;  // [bp-0x390]\n
    struct_0 *v14;  // [bp-0x38c]\n
    struct_0 *v15;  // [bp-0x388]\n
    struct_0 *v16;  // [bp-0x384]\n
    char v17;  // [bp-0x37d]\n
    struct_0 *v18;  // [bp-0x37c]\n
    struct_0 *v19;  // [bp-0x378]\n
    char v20;  // [bp-0x371]\n
    struct_0 *v21;  // [bp-0x370]\n
    char v22;  // [bp-0x369]\n
    struct_0 *v23;  // [bp-0x368]\n
    char v24;  // [bp-0x361]\n
    unsigned int v25;  // [bp-0x360]\n
    struct_0 *v26;  // [bp-0x35c]\n
    char v27;  // [bp-0x355]\n
    struct_0 *v28;  // [bp-0x354]\n
    char v29;  // [bp-0x34d]\n
    struct_0 *v30;  // [bp-0x34c]\n
    char v31;  // [bp-0x345]\n
    struct_2 *v32;  // [bp-0x344]\n
    unsigned short v33;  // [bp-0x340]\n
    unsigned short v34;  // [bp-0x33e]\n
    unsigned long v35;  // [bp-0x33c]\n
    struct struct_3 **v36;  // [bp-0x334], Other Possible Types: unsigned int\n
    unsigned int v37;  // [bp-0x330]\n
    unsigned int v38;  // [bp-0x32c]\n
    char v39;  // [bp-0x326]\n
    char v40[2];  // [bp-0x320]\n
    unsigned short v41;  // [bp-0x31a]\n
    unsigned int *v42;  // [bp-0x318]\n
    struct struct_1 **v43;  // [bp-0x314]\n
    char v44;  // [bp-0x30e]\n
    char v45[2];  // [bp-0x308]\n
    unsigned short v46;  // [bp-0x302]\n
    unsigned int *v47;  // [bp-0x300]\n
    struct struct_1 **v48;  // [bp-0x2fc]\n
    char v49;  // [bp-0x2f5]\n
    char v50[8];  // [bp-0x2e0]\n
    unsigned int v51;  // [bp-0x2dc]\n
    void* v52;  // [bp-0x2d8]\n
    unsigned int *v53;  // [bp-0x2d0]\n
    struct struct_1 **v54;  // [bp-0x2cc]\n
    char v55;  // [bp-0x2c5]\n
    char v56[8];  // [bp-0x2b0]\n
    unsigned int v57;  // [bp-0x2ac]\n
    void* v58;  // [bp-0x2a8]\n
    unsigned int *v59;  // [bp-0x2a0]\n
    struct struct_1 **v60;  // [bp-0x29c]\n
    char v61;  // [bp-0x295]\n
    char v62[8];  // [bp-0x280]\n
    unsigned int v63;  // [bp-0x27c]\n
    void* v64;  // [bp-0x278]\n
    unsigned int *v65;  // [bp-0x270]\n
    struct struct_1 **v66;  // [bp-0x26c]\n
    char v67;  // [bp-0x265]\n
    char v68[8];  // [bp-0x250]\n
    unsigned int v69;  // [bp-0x24c]\n
    void* v70;  // [bp-0x248]\n
    unsigned int *v71;  // [bp-0x240]\n
    struct struct_1 **v72;  // [bp-0x23c]\n
    char v73;  // [bp-0x235]\n
    char v74[8];  // [bp-0x220]\n
    unsigned int v75;  // [bp-0x21c]\n
    void* v76;  // [bp-0x218]\n
    unsigned int *v77;  // [bp-0x214]\n
    struct struct_1 **v78;  // [bp-0x210]\n
    unsigned int v79;  // [bp-0x20c]\n
    char v80;  // [bp-0x205]\n
    unsigned int *v81;  // [bp-0x204]\n
    struct struct_1 **v82;  // [bp-0x200]\n
    char *v83;  // [bp-0x1fc]\n
    unsigned int v84;  // [bp-0x1f8]\n
    unsigned int *v85;  // [bp-0x1f4]\n
    struct struct_1 **v86;  // [bp-0x1f0]\n
    char v87;  // [bp-0x1ec]\n
    unsigned short v88;  // [bp-0x1e6]\n
    unsigned int *v89;  // [bp-0x1e4]\n
    struct struct_1 **v90;  // [bp-0x1e0]\n
    char v91;  // [bp-0x1d9]\n
    char v92;  // [bp-0x1d5]\n
    unsigned int *v93;  // [bp-0x1d4]\n
    struct struct_1 **v94;  // [bp-0x1d0]\n
    char v95;  // [bp-0x1c9]\n
    char v96;  // [bp-0x1c5]\n
    unsigned int *v97;  // [bp-0x1c4]\n
    struct struct_1 **v98;  // [bp-0x1c0]\n
    char v99;  // [bp-0x1b9]\n
    char v100;  // [bp-0x1b5]\n
    unsigned int *v101;  // [bp-0x1b4]\n
    struct struct_1 **v102;  // [bp-0x1b0]\n
    unsigned short *v103;  // [bp-0x1ac]\n
    unsigned int *v104;  // [bp-0x1a8]\n
    struct struct_1 **v105;  // [bp-0x1a4]\n
    unsigned short *v106;  // [bp-0x1a0]\n
    unsigned int *v107;  // [bp-0x19c]\n
    struct struct_1 **v108;  // [bp-0x198]\n
    char v109;  // [bp-0x191]\n
    unsigned long v110;  // [bp-0x17c]\n
    unsigned int *v111;  // [bp-0x174]\n
    struct struct_1 **v112;  // [bp-0x170]\n
    char v113;  // [bp-0x16c]\n
    unsigned int v114;  // [bp-0x160]\n
    unsigned int *v115;  // [bp-0x15c]\n
    struct struct_1 **v116;  // [bp-0x158]\n
    char v117;  // [bp-0x154]\n
    unsigned int v118;  // [bp-0x148]\n
    unsigned int *v119;  // [bp-0x144]\n
    struct struct_1 **v120;  // [bp-0x140]\n
    char v121;  // [bp-0x13c]\n
    unsigned int v122;  // [bp-0x130]\n
    unsigned int *v123;  // [bp-0x12c]\n
    struct struct_1 **v124;  // [bp-0x128]\n
    unsigned int v125;  // [bp-0x124]\n
    unsigned short v126;  // [bp-0x11e]\n
    unsigned int *v127;  // [bp-0x11c]\n
    struct struct_1 **v128;  // [bp-0x118]\n
    unsigned int v129;  // [bp-0x114]\n
    unsigned short v130;  // [bp-0x10e]\n
    unsigned int *v131;  // [bp-0x10c]\n
    struct struct_1 **v132;  // [bp-0x108]\n
    char v133;  // [bp-0x104]\n
    char v134[4];  // [bp-0xf8]\n
    unsigned int v135;  // [bp-0xf4]\n
    unsigned int *v136;  // [bp-0xf0]\n
    struct struct_1 **v137;  // [bp-0xec]\n
    char v138;  // [bp-0xe8]\n
    char v139[4];  // [bp-0xdc]\n
    unsigned int v140;  // [bp-0xd8]\n
    unsigned int *v141;  // [bp-0xd4]\n
    struct struct_1 **v142;  // [bp-0xd0]\n
    char *v143;  // [bp-0xcc]\n
    unsigned int v144;  // [bp-0xc8]\n
    unsigned int *v145;  // [bp-0xc4]\n
    struct struct_1 **v146;  // [bp-0xc0]\n
    char v147;  // [bp-0xb9]\n
    unsigned int v148;  // [bp-0xa4]\n
    unsigned int v149;  // [bp-0xa0]\n
    unsigned int *v150;  // [bp-0x9c]\n
    struct struct_1 **v151;  // [bp-0x98]\n
    char v152;  // [bp-0x91]\n
    unsigned int v153;  // [bp-0x7c]\n
    unsigned int v154;  // [bp-0x78]\n
    unsigned int *v155;  // [bp-0x74]\n
    struct struct_1 **v156;  // [bp-0x70]\n
    char v157;  // [bp-0x69]\n
    unsigned int v158;  // [bp-0x54]\n
    unsigned int v159;  // [bp-0x50]\n
    unsigned int *v160;  // [bp-0x4c]\n
    struct struct_1 **v161;  // [bp-0x48]\n
    char v162;  // [bp-0x41]\n
    unsigned int v163;  // [bp-0x2c]\n
    unsigned int v164;  // [bp-0x28]\n
    unsigned int *v165;  // [bp-0x20]\n
    struct struct_1 **v166;  // [bp-0x1c]\n
    unsigned int v167;  // [bp-0x18]\n
    char v168;  // [bp-0x11]\n
    unsigned int *v169;  // [bp-0x10]\n
    struct struct_1 **v170;  // [bp-0xc]\n
    unsigned int v171;  // [bp-0x8]\n
    unsigned int v173;  // ebx\n
    unsigned int *v174;  // eax\n
    struct struct_1 **v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_1 **v177;  // eax\n
    unsigned int *v178;  // eax\n
    struct struct_1 **v179;  // eax\n
    struct struct_1 **v181;  // eax\n
    unsigned int *v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_1 **v185;  // eax\n
    struct struct_1 **v186;  // eax\n
    unsigned int *v187;  // eax\n
    unsigned int *v188;  // eax\n
    struct struct_1 **v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_1 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_1 **v193;  // eax\n
    unsigned int *v194;  // eax\n
    struct struct_1 **v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_1 **v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_1 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_1 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    struct struct_1 **v203;  // eax\n
    unsigned int v204[2];  // ecx\n
    unsigned int *v205;  // eax\n
    struct struct_1 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_1 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_1 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    struct struct_1 **v212;  // eax\n
    unsigned int v213[2];  // ecx\n
    unsigned int *v214;  // eax\n
    struct struct_1 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    struct struct_1 **v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_1 **v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_1 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_1 **v223;  // eax\n
    struct struct_1 **v224;  // eax\n
    unsigned int *v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_1 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_1 **v229;  // eax\n
    struct struct_1 **v231;  // eax\n
    unsigned int *v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_1 **v235;  // eax\n
    unsigned int v236[2];  // ecx\n
    unsigned int *v237;  // eax\n
    struct struct_1 **v238;  // eax\n
    unsigned int v239[2];  // ecx\n
    unsigned int *v240;  // eax\n
    struct struct_1 **v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_1 **v243;  // eax\n
    unsigned int *v244;  // eax\n
    struct struct_1 **v245;  // eax\n
    unsigned int *v246;  // eax\n
    struct struct_1 **v247;  // eax\n
    unsigned int *v248;  // eax, Other Possible Types: unsigned int\n
    unsigned int v249;  // ebx\n
\n
    v171 = v173;\n
    v32 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v38 = g_4f0388;\n
    v37 = cgc__cookie;\n
    v36 = -1;\n
    if (cgc_sendline(1, \"===llamaportico===\", 18) < 0)\n
        cgc__terminate();\n
    v78 = v172;\n
    v77 = a0;\n
    *(&v74[0]) = *(v78);\n
    memset(&v73, 0, 21);\n
    if (*(v77) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (v74[0])\n
    {\n
        v31 = 0;\n
        if (v74[1])\n
        {\n
            v31 = 0;\n
            if (v74[2])\n
            {\n
                v31 = 0;\n
                if (v74[3])\n
                {\n
                    v31 = 0;\n
                    if (v74[4] << 24)\n
                    {\n
                        v31 = 0;\n
                        if (v74[5] << 16)\n
                        {\n
                            v31 = 0;\n
                            if (v74[6] << 8)\n
                                v31 = v74[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v75 = v31 & 1;\n
    v76 = 0;\n
    cgc_uint2str(&v73, 21, v75);\n
    v30 = &v73;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v174 = v77;\n
    *(v174) = *(v174) - 8;\n
    v175 = v78;\n
    *(v175) = &(*(v175))[1].padding_1[2];\n
    v48 = v172;\n
    v47 = a0;\n
    *(&v45) = *(v48);\n
    memset(&v44, 0, 6);\n
    if (*(v47) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = 0;\n
    if (v45[0] << 8)\n
        v29 = v45[1];\n
    v46 = v29 & 1;\n
    cgc_uint2str(&v44, 6, v46);\n
    v28 = &v44;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v176 = v47;\n
    *(v176) = *(v176) - 2;\n
    v177 = v48;\n
    *(v177) = &*(v177)->padding_1[1];\n
    v142 = v172;\n
    v141 = a0;\n
    *(&v139[0]) = *(v142);\n
    memset(&v138, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v139[0] << 24)\n
    {\n
        v27 = 0;\n
        if (v139[1] << 16)\n
        {\n
            v27 = 0;\n
            if (v139[2] << 8)\n
                v27 = v139[3];\n
        }\n
    }\n
    v140 = v27 & 1;\n
    cgc_uint2str(&v138, 12, v140);\n
    v26 = &v138;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v178 = v141;\n
    *(v178) = *(v178) - 4;\n
    v179 = v142;\n
    *(v179) = &*(v179)->field_4;\n
    v146 = v172;\n
    v145 = a0;\n
    if (*(v145) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v145) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v145);\n
    v144 = v25;\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = cgc_calloc(134);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v143, &v32[18].padding_0[182]);\n
    cgc_strncpy(v143 + 5, *(v146), v144);\n
    v181 = v146;\n
    *(v181) = &(&*(v181)->field_4)[cgc_strlen(v143)];\n
    v183 = v145;\n
    *(v183) = *(v183) - (cgc_strlen(v143) + -4);\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v170 = v172;\n
    v169 = a0;\n
    if (*(v169) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v168 = *(v170)->field_0;\n
    v184 = v169;\n
    *(v184) = *(v184) - 1;\n
    v185 = v170;\n
    *(v185) = &*(v185)->padding_1;\n
    if (v168 <= *(v169) && !(!v168))\n
        goto LABEL_4a5b5a;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a5b5a:\n
    v167 = cgc_calloc(v168);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v167, *(v170), v168);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v186 = v170;\n
    *(v186) = &(&*(v186)->field_0)[v168];\n
    v187 = v169;\n
    *(v187) = *(v187) - v168;\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    v72 = v172;\n
    v71 = a0;\n
    *(&v68[0]) = *(v72);\n
    memset(&v67, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = 0;\n
    if (v68[0])\n
    {\n
        v24 = 0;\n
        if (v68[1])\n
        {\n
            v24 = 0;\n
            if (v68[2])\n
            {\n
                v24 = 0;\n
                if (v68[3])\n
                {\n
                    v24 = 0;\n
                    if (v68[4] << 24)\n
                    {\n
                        v24 = 0;\n
                        if (v68[5] << 16)\n
                        {\n
                            v24 = 0;\n
                            if (v68[6] << 8)\n
                                v24 = v68[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v69 = v24 & 1;\n
    v70 = 0;\n
    cgc_uint2str(&v67, 21, v69);\n
    v23 = &v67;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v188 = v71;\n
    *(v188) = *(v188) - 8;\n
    v189 = v72;\n
    *(v189) = &(*(v189))[1].padding_1[2];\n
    v137 = v172;\n
    v136 = a0;\n
    *(&v134[0]) = *(v137);\n
    memset(&v133, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v134[0] << 24)\n
    {\n
        v22 = 0;\n
        if (v134[1] << 16)\n
        {\n
            v22 = 0;\n
            if (v134[2] << 8)\n
                v22 = v134[3];\n
        }\n
    }\n
    v135 = v22 & 1;\n
    cgc_uint2str(&v133, 12, v135);\n
    v21 = &v133;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v133)) < 0)\n
        cgc__terminate();\n
    v190 = v136;\n
    *(v190) = *(v190) - 4;\n
    v191 = v137;\n
    *(v191) = &*(v191)->field_4;\n
    v66 = v172;\n
    v65 = a0;\n
    *(&v62[0]) = *(v66);\n
    memset(&v61, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v62[0])\n
    {\n
        v20 = 0;\n
        if (v62[1])\n
        {\n
            v20 = 0;\n
            if (v62[2])\n
            {\n
                v20 = 0;\n
                if (v62[3])\n
                {\n
                    v20 = 0;\n
                    if (v62[4] << 24)\n
                    {\n
                        v20 = 0;\n
                        if (v62[5] << 16)\n
                        {\n
                            v20 = 0;\n
                            if (v62[6] << 8)\n
                                v20 = v62[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v63 = v20 & 1;\n
    v64 = 0;\n
    cgc_uint2str(&v61, 21, v63);\n
    v19 = &v61;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v192 = v65;\n
    *(v192) = *(v192) - 8;\n
    v193 = v66;\n
    *(v193) = &(*(v193))[1].padding_1[2];\n
    v132 = v172;\n
    v131 = a0;\n
    if (*(v131) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v130 = *(&*(v132)->field_0);\n
    v194 = v131;\n
    *(v194) = *(v194) - 2;\n
    v195 = v132;\n
    *(v195) = &*(v195)->padding_1[1];\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_4a63c4;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a63c4:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v196 = v131;\n
    *(v196) = *(v196) - v130;\n
    v197 = v132;\n
    *(v197) = &(&*(v197)->field_0)[v130];\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v124 = v172;\n
    v123 = a0;\n
    memset(&v121, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(&*(v124)->field_0);\n
    cgc_uint2str(&v121, 12, v122);\n
    v18 = &v121;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v121)) < 0)\n
        cgc__terminate();\n
    v198 = v123;\n
    *(v198) = *(v198) - 4;\n
    v199 = v124;\n
    *(v199) = &*(v199)->field_4;\n
    v43 = v172;\n
    v42 = a0;\n
    *(&v40) = *(v43);\n
    memset(&v39, 0, 6);\n
    if (*(v42) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v40[0] << 8)\n
        v17 = v40[1];\n
    v41 = v17 & 1;\n
    cgc_uint2str(&v39, 6, v41);\n
    v16 = &v39;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v200 = v42;\n
    *(v200) = *(v200) - 2;\n
    v201 = v43;\n
    *(v201) = &*(v201)->padding_1[1];\n
    v102 = v172;\n
    v101 = a0;\n
    memset(&v99, 0, 4);\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(v102)->field_0;\n
    cgc_uint2str(&v99, 4, v100);\n
    v15 = &v99;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v202 = v101;\n
    *(v202) = *(v202) - 1;\n
    v203 = v102;\n
    *(v203) = &*(v203)->padding_1;\n
    v166 = v172;\n
    v165 = a0;\n
    memset(&v162, 0, 21);\n
    if (*(v165) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = *(v166);\n
    v164 = v204[1];\n
    v163 = v204[0];\n
    cgc_uint2str(&v162, 21, v163);\n
    v14 = &v162;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v162)) < 0)\n
        cgc__terminate();\n
    v205 = v165;\n
    *(v205) = *(v205) - 8;\n
    v206 = v166;\n
    *(v206) = &(*(v206))[1].padding_1[2];\n
    v128 = v172;\n
    v127 = a0;\n
    if (*(v127) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v126 = *(&*(v128)->field_0);\n
    v207 = v127;\n
    *(v207) = *(v207) - 2;\n
    v208 = v128;\n
    *(v208) = &*(v208)->padding_1[1];\n
    if (v126 <= *(v127) && !(!v126))\n
        goto LABEL_4a6b31;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a6b31:\n
    v125 = cgc_calloc(v126);\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v125, *(v128), v126);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v209 = v127;\n
    *(v209) = *(v209) - v126;\n
    v210 = v128;\n
    *(v210) = &(&*(v210)->field_0)[v126];\n
    cgc_checkheap();\n
    cgc_free(v125);\n
    v108 = v172;\n
    v107 = a0;\n
    v106 = &*(v108)->field_0;\n
    if (*(v107) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v211 = v107;\n
    *(v211) = *(v211) - 2;\n
    v212 = v108;\n
    *(v212) = &*(v212)->padding_1[1];\n
    v36 = *(v106);\n
    v161 = v172;\n
    v160 = a0;\n
    memset(&v157, 0, 21);\n
    if (*(v160) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v213 = *(v161);\n
    v159 = v213[1];\n
    v158 = v213[0];\n
    cgc_uint2str(&v157, 21, v158);\n
    v13 = &v157;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v157)) < 0)\n
        cgc__terminate();\n
    v214 = v160;\n
    *(v214) = *(v214) - 8;\n
    v215 = v161;\n
    *(v215) = &(*(v215))[1].padding_1[2];\n
    v120 = v172;\n
    v119 = a0;\n
    memset(&v117, 0, 12);\n
    if (*(v119) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(&*(v120)->field_0);\n
    cgc_uint2str(&v117, 12, v118);\n
    v12 = &v117;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v117)) < 0)\n
        cgc__terminate();\n
    v216 = v119;\n
    *(v216) = *(v216) - 4;\n
    v217 = v120;\n
    *(v217) = &*(v217)->field_4;\n
    v116 = v172;\n
    v115 = a0;\n
    memset(&v113, 0, 12);\n
    if (*(v115) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(&*(v116)->field_0);\n
    cgc_uint2str(&v113, 12, v114);\n
    v11 = &v113;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v113)) < 0)\n
        cgc__terminate();\n
    v218 = v115;\n
    *(v218) = *(v218) - 4;\n
    v219 = v116;\n
    *(v219) = &*(v219)->field_4;\n
    v60 = v172;\n
    v59 = a0;\n
    *(&v56[0]) = *(v60);\n
    memset(&v55, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v56[0])\n
    {\n
        v10 = 0;\n
        if (v56[1])\n
        {\n
            v10 = 0;\n
            if (v56[2])\n
            {\n
                v10 = 0;\n
                if (v56[3])\n
                {\n
                    v10 = 0;\n
                    if (v56[4] << 24)\n
                    {\n
                        v10 = 0;\n
                        if (v56[5] << 16)\n
                        {\n
                            v10 = 0;\n
                            if (v56[6] << 8)\n
                                v10 = v56[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v57 = v10 & 1;\n
    v58 = 0;\n
    cgc_uint2str(&v55, 21, v57);\n
    v9 = &v55;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v220 = v59;\n
    *(v220) = *(v220) - 8;\n
    v221 = v60;\n
    *(v221) = &(*(v221))[1].padding_1[2];\n
    v82 = v172;\n
    v81 = a0;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(v82)->field_0;\n
    v222 = v81;\n
    *(v222) = *(v222) - 1;\n
    v223 = v82;\n
    *(v223) = &*(v223)->padding_1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_4a7405;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a7405:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v224 = v82;\n
    *(v224) = &(&*(v224)->field_0)[v80];\n
    v225 = v81;\n
    *(v225) = *(v225) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v112 = v172;\n
    v111 = a0;\n
    memset(&v109, 0, 21);\n
    if (*(v111) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v110 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(fpround<4>);\n
    v33 = v34 | 0xc00;\n
    v35 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v109, 21, v35);\n
    v8 = &v109;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v109)) < 0)\n
        cgc__terminate();\n
    v226 = v111;\n
    *(v226) = *(v226) - 8;\n
    v227 = v112;\n
    *(v227) = &(*(v227))[1].padding_1[2];\n
    v90 = v172;\n
    v89 = a0;\n
    memset(&v87, 0, 6);\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 6, v88);\n
    v7 = &v87;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v228 = v89;\n
    *(v228) = *(v228) - 2;\n
    v229 = v90;\n
    *(v229) = &*(v229)->padding_1[1];\n
    v86 = v172;\n
    v85 = a0;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v85) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v85);\n
    v84 = v6;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v83, &v32[18].padding_0[182]);\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v231 = v86;\n
    *(v231) = &(&*(v231)->field_4)[cgc_strlen(v83)];\n
    v233 = v85;\n
    *(v233) = *(v233) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v54 = v172;\n
    v53 = a0;\n
    *(&v50[0]) = *(v54);\n
    memset(&v49, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v50[0])\n
    {\n
        v5 = 0;\n
        if (v50[1])\n
        {\n
            v5 = 0;\n
            if (v50[2])\n
            {\n
                v5 = 0;\n
                if (v50[3])\n
                {\n
                    v5 = 0;\n
                    if (v50[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v50[5] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v50[6] << 8)\n
                                v5 = v50[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v51 = v5 & 1;\n
    v52 = 0;\n
    cgc_uint2str(&v49, 21, v51);\n
    v4 = &v49;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v234 = v53;\n
    *(v234) = *(v234) - 8;\n
    v235 = v54;\n
    *(v235) = &(*(v235))[1].padding_1[2];\n
    v156 = v172;\n
    v155 = a0;\n
    memset(&v152, 0, 21);\n
    if (*(v155) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v236 = *(v156);\n
    v154 = v236[1];\n
    v153 = v236[0];\n
    cgc_uint2str(&v152, 21, v153);\n
    v3 = &v152;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v152)) < 0)\n
        cgc__terminate();\n
    v237 = v155;\n
    *(v237) = *(v237) - 8;\n
    v238 = v156;\n
    *(v238) = &(*(v238))[1].padding_1[2];\n
    v151 = v172;\n
    v150 = a0;\n
    memset(&v147, 0, 21);\n
    if (*(v150) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v239 = *(v151);\n
    v149 = v239[1];\n
    v148 = v239[0];\n
    cgc_uint2str(&v147, 21, v148);\n
    v2 = &v147;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v240 = v150;\n
    *(v240) = *(v240) - 8;\n
    v241 = v151;\n
    *(v241) = &(*(v241))[1].padding_1[2];\n
    v98 = v172;\n
    v97 = a0;\n
    memset(&v95, 0, 4);\n
    if (*(v97) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(v98)->field_0;\n
    cgc_uint2str(&v95, 4, v96);\n
    v1 = &v95;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v242 = v97;\n
    *(v242) = *(v242) - 1;\n
    v243 = v98;\n
    *(v243) = &*(v243)->padding_1;\n
    v105 = v172;\n
    v104 = a0;\n
    v103 = &*(v105)->field_0;\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v244 = v104;\n
    *(v244) = *(v244) - 2;\n
    v245 = v105;\n
    *(v245) = &*(v245)->padding_1[1];\n
    v36 = *(v103);\n
    v94 = v172;\n
    v93 = a0;\n
    memset(&v91, 0, 4);\n
    if (*(v93) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(v94)->field_0;\n
    cgc_uint2str(&v91, 4, v92);\n
    v0 = &v91;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v246 = v93;\n
    *(v246) = *(v246) - 1;\n
    v247 = v94;\n
    *(v247) = &*(v247)->padding_1;\n
    v37 ^= v32->field_260;\n
    if (v37)\n
        cgc___stack_cookie_fail();\n
    v248 = a0;\n
    if (*(v248) > 0 && v36 >= 0 && v36 < 1)\n
        v248 = (&v38)[v36](v172);\n
    v249 = v171;\n
    return v248;\n
}\n
", "4883163:sub_4a82db": null, "4883168:cgc_process_llamaSoricinae": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaSoricinae(struct struct_0 **v9, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x28]\n
    struct struct_2 **v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned short v5;  // [bp-0x12]\n
    unsigned int *v6;  // [bp-0x10]\n
    struct struct_0 **v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int *v11;  // eax\n
    struct struct_0 **v12;  // eax\n
    unsigned int *v13;  // eax\n
    struct struct_0 **v14;  // eax\n
    unsigned int *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v16;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc__cookie;\n
    v1 = -1;\n
    if (cgc_sendline(1, \"===llamaSoricinae===\", 20) < 0)\n
        cgc__terminate();\n
    v7 = v9;\n
    v6 = a0;\n
    if (*(v6) < 2)\n
    {\n
        if (cgc_sendline(1, &v0[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = *(v7)->field_0;\n
    v11 = v6;\n
    *(v11) = *(v11) - 2;\n
    v12 = v7;\n
    *(v12) = *(v12) + 1;\n
    if (v5 <= *(v6) && !(!v5))\n
        goto LABEL_4a842e;\n
    if (cgc_sendline(1, &v0[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a842e:\n
    v4 = cgc_calloc(v5);\n
    if (!v4)\n
    {\n
        if (cgc_sendline(1, &v0[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v4, *(v7), v5);\n
    if (cgc_sendline(1, &v0[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v13 = v6;\n
    *(v13) = *(v13) - v5;\n
    v14 = v7;\n
    *(v14) = v5 + *(v14);\n
    cgc_checkheap();\n
    cgc_free(v4);\n
    v2 ^= v0->field_260;\n
    if (v2)\n
        cgc___stack_cookie_fail();\n
    v15 = a0;\n
    if (*(v15) > 0 && v1 >= 0 && v1 < 0)\n
        v15 = *((&v3 + 0x4 * v1))(v9);\n
    v16 = v8;\n
    return v15;\n
}\n
", "4883833:sub_4a8579": null, "4883840:cgc_process_llamaquavery": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_4;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f038c;\n
\n
int cgc_process_llamaquavery(struct struct_0 **v126, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x298]\n
    unsigned int v1;  // [bp-0x294]\n
    struct_2 *v2;  // [bp-0x290]\n
    char v3;  // [bp-0x289]\n
    struct_2 *v4;  // [bp-0x288]\n
    char v5;  // [bp-0x281]\n
    struct_2 *v6;  // [bp-0x280]\n
    struct_2 *v7;  // [bp-0x27c]\n
    struct_2 *v8;  // [bp-0x278]\n
    struct_2 *v9;  // [bp-0x274]\n
    unsigned int v10;  // [bp-0x270]\n
    unsigned int v11;  // [bp-0x26c]\n
    struct_2 *v12;  // [bp-0x268]\n
    struct_2 *v13;  // [bp-0x264]\n
    struct_2 *v14;  // [bp-0x260]\n
    char v15;  // [bp-0x259]\n
    struct_2 *v16;  // [bp-0x258]\n
    struct_1 *v17;  // [bp-0x254]\n
    unsigned short v18;  // [bp-0x250]\n
    unsigned short v19;  // [bp-0x24e]\n
    unsigned short v20;  // [bp-0x24c]\n
    unsigned short v21;  // [bp-0x24a]\n
    unsigned short v22;  // [bp-0x248]\n
    unsigned short v23;  // [bp-0x246]\n
    unsigned long v24;  // [bp-0x244]\n
    unsigned long v25;  // [bp-0x23c]\n
    unsigned long v26;  // [bp-0x234]\n
    struct struct_3 **v27;  // [bp-0x22c], Other Possible Types: unsigned int\n
    unsigned int v28;  // [bp-0x228]\n
    unsigned int v29;  // [bp-0x224]\n
    char v30;  // [bp-0x21d]\n
    char v31[8];  // [bp-0x208]\n
    unsigned int v32;  // [bp-0x204]\n
    void* v33;  // [bp-0x200]\n
    unsigned int *v34;  // [bp-0x1f8]\n
    struct struct_0 **v35;  // [bp-0x1f4]\n
    unsigned int v36;  // [bp-0x1f0]\n
    char v37;  // [bp-0x1e9]\n
    unsigned int *v38;  // [bp-0x1e8]\n
    struct struct_0 **v39;  // [bp-0x1e4]\n
    unsigned int v40;  // [bp-0x1e0]\n
    char v41;  // [bp-0x1d9]\n
    unsigned int *v42;  // [bp-0x1d8]\n
    struct struct_0 **v43;  // [bp-0x1d4]\n
    char *v44;  // [bp-0x1d0]\n
    unsigned int *v45;  // [bp-0x1cc]\n
    struct struct_0 **v46;  // [bp-0x1c8]\n
    char *v47;  // [bp-0x1c4]\n
    unsigned int *v48;  // [bp-0x1c0]\n
    struct struct_0 **v49;  // [bp-0x1bc]\n
    char *v50;  // [bp-0x1b8]\n
    unsigned int v51;  // [bp-0x1b4]\n
    unsigned int *v52;  // [bp-0x1b0]\n
    struct struct_0 **v53;  // [bp-0x1ac]\n
    char v54;  // [bp-0x1a8]\n
    unsigned short v55;  // [bp-0x1a2]\n
    unsigned int *v56;  // [bp-0x1a0]\n
    struct struct_0 **v57;  // [bp-0x19c]\n
    char v58;  // [bp-0x195]\n
    char v59;  // [bp-0x191]\n
    unsigned int *v60;  // [bp-0x190]\n
    struct struct_0 **v61;  // [bp-0x18c]\n
    char v62;  // [bp-0x185]\n
    char v63;  // [bp-0x181]\n
    unsigned int *v64;  // [bp-0x180]\n
    struct struct_0 **v65;  // [bp-0x17c]\n
    unsigned short *v66;  // [bp-0x178]\n
    unsigned int *v67;  // [bp-0x174]\n
    struct struct_0 **v68;  // [bp-0x170]\n
    char v69;  // [bp-0x169]\n
    unsigned long v70;  // [bp-0x154]\n
    unsigned int *v71;  // [bp-0x14c]\n
    struct struct_0 **v72;  // [bp-0x148]\n
    char v73;  // [bp-0x141]\n
    unsigned long v74;  // [bp-0x12c]\n
    unsigned int *v75;  // [bp-0x124]\n
    struct struct_0 **v76;  // [bp-0x120]\n
    char v77;  // [bp-0x119]\n
    unsigned long v78;  // [bp-0x104]\n
    unsigned int *v79;  // [bp-0xfc]\n
    struct struct_0 **v80;  // [bp-0xf8]\n
    unsigned int v81;  // [bp-0xf4]\n
    unsigned short v82;  // [bp-0xee]\n
    unsigned int *v83;  // [bp-0xec]\n
    struct struct_0 **v84;  // [bp-0xe8]\n
    unsigned int v85;  // [bp-0xe4]\n
    unsigned short v86;  // [bp-0xde]\n
    unsigned int *v87;  // [bp-0xdc]\n
    struct struct_0 **v88;  // [bp-0xd8]\n
    char v89;  // [bp-0xd4]\n
    char v90[4];  // [bp-0xc8]\n
    unsigned int v91;  // [bp-0xc4]\n
    unsigned int *v92;  // [bp-0xc0]\n
    struct struct_0 **v93;  // [bp-0xbc]\n
    char v94;  // [bp-0xb8]\n
    char v95[4];  // [bp-0xac]\n
    unsigned int v96;  // [bp-0xa8]\n
    unsigned int *v97;  // [bp-0xa4]\n
    struct struct_0 **v98;  // [bp-0xa0]\n
    char *v99;  // [bp-0x9c]\n
    unsigned int v100;  // [bp-0x98]\n
    unsigned int *v101;  // [bp-0x94]\n
    struct struct_0 **v102;  // [bp-0x90]\n
    char *v103;  // [bp-0x8c]\n
    unsigned int v104;  // [bp-0x88]\n
    unsigned int *v105;  // [bp-0x84]\n
    struct struct_0 **v106;  // [bp-0x80]\n
    char v107;  // [bp-0x79]\n
    unsigned int v108;  // [bp-0x64]\n
    unsigned int v109;  // [bp-0x60]\n
    unsigned int *v110;  // [bp-0x5c]\n
    struct struct_0 **v111;  // [bp-0x58]\n
    char v112;  // [bp-0x51]\n
    unsigned int v113;  // [bp-0x3c]\n
    unsigned int v114;  // [bp-0x38]\n
    unsigned int *v115;  // [bp-0x30]\n
    struct struct_0 **v116;  // [bp-0x2c]\n
    unsigned int v117;  // [bp-0x28]\n
    char v118;  // [bp-0x21]\n
    unsigned int *v119;  // [bp-0x20]\n
    struct struct_0 **v120;  // [bp-0x1c]\n
    unsigned int v121;  // [bp-0x18]\n
    char v122;  // [bp-0x11]\n
    unsigned int *v123;  // [bp-0x10]\n
    struct struct_0 **v124;  // [bp-0xc]\n
    unsigned int v125;  // [bp-0x8]\n
    unsigned int v127;  // ebx\n
    unsigned int *v128;  // eax\n
    struct struct_0 **v129;  // eax\n
    unsigned int *v130;  // eax\n
    struct struct_0 **v131;  // eax\n
    unsigned int *v132;  // eax\n
    struct struct_0 **v133;  // eax\n
    unsigned int *v134;  // eax\n
    struct struct_0 **v135;  // eax\n
    struct struct_0 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    unsigned int *v138;  // eax\n
    struct struct_0 **v139;  // eax\n
    unsigned int *v140;  // eax\n
    struct struct_0 **v141;  // eax\n
    unsigned int *v142;  // eax\n
    struct struct_0 **v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    unsigned int *v146;  // eax\n
    struct struct_0 **v147;  // eax\n
    struct struct_0 **v149;  // eax\n
    unsigned int *v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_0 **v153;  // eax\n
    struct struct_0 **v154;  // eax\n
    unsigned int *v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_0 **v157;  // eax\n
    unsigned int *v158;  // eax\n
    struct struct_0 **v159;  // eax\n
    struct struct_0 **v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_0 **v163;  // eax\n
    unsigned int *v165;  // eax\n
    unsigned int *v166;  // eax\n
    struct struct_0 **v167;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_0 **v169;  // eax\n
    unsigned int v170[2];  // ecx\n
    unsigned int *v171;  // eax\n
    struct struct_0 **v172;  // eax\n
    struct_4 *v173;  // ecx\n
    unsigned int *v174;  // eax\n
    struct struct_0 **v175;  // eax\n
    unsigned int *v176;  // eax\n
    struct struct_0 **v177;  // eax\n
    struct struct_0 **v178;  // eax\n
    unsigned int *v179;  // eax\n
    unsigned int *v180;  // eax\n
    struct struct_0 **v181;  // eax\n
    unsigned int *v182;  // eax\n
    struct struct_0 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_0 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_0 **v193;  // eax\n
    unsigned int *v194;  // eax, Other Possible Types: unsigned int\n
    unsigned int v195;  // ebx\n
\n
    v125 = v127;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v29 = g_4f038c;\n
    v28 = cgc__cookie;\n
    v27 = -1;\n
    if (cgc_sendline(1, \"===llamaquavery===\", 18) < 0)\n
        cgc__terminate();\n
    v80 = v126;\n
    v79 = a0;\n
    memset(&v77, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v78 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v23 = [D] x86g_create_fpucw(fpround<4>);\n
    v22 = v23 | 0xc00;\n
    v26 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v77, 21, v26);\n
    v16 = &v77;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v77)) < 0)\n
        cgc__terminate();\n
    v128 = v79;\n
    *(v128) = *(v128) - 8;\n
    v129 = v80;\n
    *(v129) = &(*(v129))[1].padding_1[2];\n
    v98 = v126;\n
    v97 = a0;\n
    *(&v95[0]) = *(v98);\n
    memset(&v94, 0, 12);\n
    if (*(v97) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v95[0] << 24)\n
    {\n
        v15 = 0;\n
        if (v95[1] << 16)\n
        {\n
            v15 = 0;\n
            if (v95[2] << 8)\n
                v15 = v95[3];\n
        }\n
    }\n
    v96 = v15 & 1;\n
    cgc_uint2str(&v94, 12, v96);\n
    v14 = &v94;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v130 = v97;\n
    *(v130) = *(v130) - 4;\n
    v131 = v98;\n
    *(v131) = &*(v131)->field_4;\n
    v76 = v126;\n
    v75 = a0;\n
    memset(&v73, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v74 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-582, size=2, endness=Iend_LE)))));\n
    v20 = v21 | 0xc00;\n
    v25 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v73, 21, v25);\n
    v13 = &v73;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v132 = v75;\n
    *(v132) = *(v132) - 8;\n
    v133 = v76;\n
    *(v133) = &(*(v133))[1].padding_1[2];\n
    v43 = v126;\n
    v42 = a0;\n
    if (*(v42) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v41 = *(v43)->field_0;\n
    v134 = v42;\n
    *(v134) = *(v134) - 1;\n
    v135 = v43;\n
    *(v135) = &*(v135)->padding_1;\n
    if (v41 <= *(v42) && !(!v41))\n
        goto LABEL_4a8bc0;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a8bc0:\n
    v40 = cgc_calloc(v41);\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v40, *(v43), v41);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v136 = v43;\n
    *(v136) = &(&*(v136)->field_0)[v41];\n
    v137 = v42;\n
    *(v137) = *(v137) - v41;\n
    cgc_checkheap();\n
    cgc_free(v40);\n
    v72 = v126;\n
    v71 = a0;\n
    memset(&v69, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v70 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-586, size=2, endness=Iend_LE)))));\n
    v18 = v19 | 0xc00;\n
    v24 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v69, 21, v24);\n
    v12 = &v69;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v138 = v71;\n
    *(v138) = *(v138) - 8;\n
    v139 = v72;\n
    *(v139) = &(*(v139))[1].padding_1[2];\n
    v88 = v126;\n
    v87 = a0;\n
    if (*(v87) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = *(&*(v88)->field_0);\n
    v140 = v87;\n
    *(v140) = *(v140) - 2;\n
    v141 = v88;\n
    *(v141) = &*(v141)->padding_1[1];\n
    if (v86 <= *(v87) && !(!v86))\n
        goto LABEL_4a8f6e;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a8f6e:\n
    v85 = cgc_calloc(v86);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v85, *(v88), v86);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v142 = v87;\n
    *(v142) = *(v142) - v86;\n
    v143 = v88;\n
    *(v143) = &(&*(v143)->field_0)[v86];\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    v84 = v126;\n
    v83 = a0;\n
    if (*(v83) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v82 = *(&*(v84)->field_0);\n
    v144 = v83;\n
    *(v144) = *(v144) - 2;\n
    v145 = v84;\n
    *(v145) = &*(v145)->padding_1[1];\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_4a91a8;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a91a8:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v146 = v83;\n
    *(v146) = *(v146) - v82;\n
    v147 = v84;\n
    *(v147) = &(&*(v147)->field_0)[v82];\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v53 = v126;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v52);\n
    v51 = v11;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v17[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v149 = v53;\n
    *(v149) = &(&*(v149)->field_4)[cgc_strlen(v50)];\n
    v151 = v52;\n
    *(v151) = *(v151) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v39 = v126;\n
    v38 = a0;\n
    if (*(v38) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v37 = *(v39)->field_0;\n
    v152 = v38;\n
    *(v152) = *(v152) - 1;\n
    v153 = v39;\n
    *(v153) = &*(v153)->padding_1;\n
    if (v37 <= *(v38) && !(!v37))\n
        goto LABEL_4a9661;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a9661:\n
    v36 = cgc_calloc(v37);\n
    if (!v36)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v36, *(v39), v37);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v154 = v39;\n
    *(v154) = &(&*(v154)->field_0)[v37];\n
    v155 = v38;\n
    *(v155) = *(v155) - v37;\n
    cgc_checkheap();\n
    cgc_free(v36);\n
    v68 = v126;\n
    v67 = a0;\n
    v66 = &*(v68)->field_0;\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = v67;\n
    *(v156) = *(v156) - 2;\n
    v157 = v68;\n
    *(v157) = &*(v157)->padding_1[1];\n
    v27 = *(v66);\n
    v124 = v126;\n
    v123 = a0;\n
    if (*(v123) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(v124)->field_0;\n
    v158 = v123;\n
    *(v158) = *(v158) - 1;\n
    v159 = v124;\n
    *(v159) = &*(v159)->padding_1;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_4a9924;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4a9924:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v160 = v124;\n
    *(v160) = &(&*(v160)->field_0)[v122];\n
    v161 = v123;\n
    *(v161) = *(v161) - v122;\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v106 = v126;\n
    v105 = a0;\n
    if (*(v105) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v105) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v105);\n
    v104 = v10;\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = cgc_calloc(134);\n
    if (!v103)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v103, &v17[18].padding_0[182]);\n
    cgc_strncpy(v103 + 5, *(v106), v104);\n
    v163 = v106;\n
    *(v163) = &(&*(v163)->field_4)[cgc_strlen(v103)];\n
    v165 = v105;\n
    *(v165) = *(v165) - (cgc_strlen(v103) + -4);\n
    cgc_checkheap();\n
    cgc_free(v103);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v65 = v126;\n
    v64 = a0;\n
    memset(&v62, 0, 4);\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(v65)->field_0;\n
    cgc_uint2str(&v62, 4, v63);\n
    v9 = &v62;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v166 = v64;\n
    *(v166) = *(v166) - 1;\n
    v167 = v65;\n
    *(v167) = &*(v167)->padding_1;\n
    v57 = v126;\n
    v56 = a0;\n
    memset(&v54, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = *(&*(v57)->field_0);\n
    cgc_uint2str(&v54, 6, v55);\n
    v8 = &v54;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v168 = v56;\n
    *(v168) = *(v168) - 2;\n
    v169 = v57;\n
    *(v169) = &*(v169)->padding_1[1];\n
    v116 = v126;\n
    v115 = a0;\n
    memset(&v112, 0, 21);\n
    if (*(v115) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v170 = *(v116);\n
    v114 = v170[1];\n
    v113 = v170[0];\n
    cgc_uint2str(&v112, 21, v113);\n
    v7 = &v112;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v171 = v115;\n
    *(v171) = *(v171) - 8;\n
    v172 = v116;\n
    *(v172) = &(*(v172))[1].padding_1[2];\n
    v111 = v126;\n
    v110 = a0;\n
    memset(&v107, 0, 21);\n
    if (*(v110) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v173 = *(v111);\n
    v109 = v173->field_4;\n
    v108 = *(&v173->field_0);\n
    cgc_uint2str(&v107, 21, v108);\n
    v6 = &v107;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v174 = v110;\n
    *(v174) = *(v174) - 8;\n
    v175 = v111;\n
    *(v175) = &(*(v175))[1].padding_1[2];\n
    v120 = v126;\n
    v119 = a0;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(v120)->field_0;\n
    v176 = v119;\n
    *(v176) = *(v176) - 1;\n
    v177 = v120;\n
    *(v177) = &*(v177)->padding_1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_4aa25a;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4aa25a:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v178 = v120;\n
    *(v178) = &(&*(v178)->field_0)[v118];\n
    v179 = v119;\n
    *(v179) = *(v179) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v93 = v126;\n
    v92 = a0;\n
    *(&v90[0]) = *(v93);\n
    memset(&v89, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v90[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v90[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v90[2] << 8)\n
                v5 = v90[3];\n
        }\n
    }\n
    v91 = v5 & 1;\n
    cgc_uint2str(&v89, 12, v91);\n
    v4 = &v89;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v89)) < 0)\n
        cgc__terminate();\n
    v180 = v92;\n
    *(v180) = *(v180) - 4;\n
    v181 = v93;\n
    *(v181) = &*(v181)->field_4;\n
    v49 = v126;\n
    v48 = a0;\n
    v47 = &*(v49)->field_0;\n
    if (*(v48) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = v48;\n
    *(v182) = *(v182) - 1;\n
    v183 = v49;\n
    *(v183) = &*(v183)->padding_1;\n
    v27 = *(v47);\n
    v35 = v126;\n
    v34 = a0;\n
    *(&v31[0]) = *(v35);\n
    memset(&v30, 0, 21);\n
    if (*(v34) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v31[0])\n
    {\n
        v3 = 0;\n
        if (v31[1])\n
        {\n
            v3 = 0;\n
            if (v31[2])\n
            {\n
                v3 = 0;\n
                if (v31[3])\n
                {\n
                    v3 = 0;\n
                    if (v31[4] << 24)\n
                    {\n
                        v3 = 0;\n
                        if (v31[5] << 16)\n
                        {\n
                            v3 = 0;\n
                            if (v31[6] << 8)\n
                                v3 = v31[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v32 = v3 & 1;\n
    v33 = 0;\n
    cgc_uint2str(&v30, 21, v32);\n
    v2 = &v30;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v184 = v34;\n
    *(v184) = *(v184) - 8;\n
    v185 = v35;\n
    *(v185) = &(*(v185))[1].padding_1[2];\n
    v102 = v126;\n
    v101 = a0;\n
    if (*(v101) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v101) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v101);\n
    v100 = v1;\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = cgc_calloc(134);\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v99, &v17[18].padding_0[182]);\n
    cgc_strncpy(v99 + 5, *(v102), v100);\n
    v187 = v102;\n
    *(v187) = &(&*(v187)->field_4)[cgc_strlen(v99)];\n
    v189 = v101;\n
    *(v189) = *(v189) - (cgc_strlen(v99) + -4);\n
    cgc_checkheap();\n
    cgc_free(v99);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v46 = v126;\n
    v45 = a0;\n
    v44 = &*(v46)->field_0;\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v190 = v45;\n
    *(v190) = *(v190) - 1;\n
    v191 = v46;\n
    *(v191) = &*(v191)->padding_1;\n
    v27 = *(v44);\n
    v61 = v126;\n
    v60 = a0;\n
    memset(&v58, 0, 4);\n
    if (*(v60) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(v61)->field_0;\n
    cgc_uint2str(&v58, 4, v59);\n
    v0 = &v58;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v192 = v60;\n
    *(v192) = *(v192) - 1;\n
    v193 = v61;\n
    *(v193) = &*(v193)->padding_1;\n
    v28 ^= v17->field_260;\n
    if (v28)\n
        cgc___stack_cookie_fail();\n
    v194 = a0;\n
    if (*(v194) > 0 && v27 >= 0 && v27 < 1)\n
        v194 = (&v29)[v27](v126);\n
    v195 = v125;\n
    return v194;\n
}\n
", "4893950:sub_4aacfe": null, "4893952:cgc_process_llamagamobium": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamagamobium(struct struct_1 **v61, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x160]\n
    struct_2 *v1;  // [bp-0x15c]\n
    struct_2 *v2;  // [bp-0x158]\n
    char v3;  // [bp-0x151]\n
    unsigned int v4;  // [bp-0x150]\n
    struct_2 *v5;  // [bp-0x14c]\n
    struct_2 *v6;  // [bp-0x148]\n
    struct_2 *v7;  // [bp-0x144]\n
    struct_2 *v8;  // [bp-0x140]\n
    struct_0 *v9;  // [bp-0x13c]\n
    unsigned short v10;  // [bp-0x138]\n
    unsigned short v11;  // [bp-0x136]\n
    unsigned short v12;  // [bp-0x134]\n
    unsigned short v13;  // [bp-0x132]\n
    unsigned short v14;  // [bp-0x130]\n
    unsigned short v15;  // [bp-0x12e]\n
    unsigned long v16;  // [bp-0x12c]\n
    unsigned long v17;  // [bp-0x124]\n
    unsigned long v18;  // [bp-0x11c]\n
    struct struct_3 **v19;  // [bp-0x110]\n
    unsigned int v20;  // [bp-0x10c]\n
    char v21;  // [bp-0x108]\n
    char *v22;  // [bp-0x104]\n
    unsigned int v23;  // [bp-0x100]\n
    unsigned int *v24;  // [bp-0xfc]\n
    struct struct_1 **v25;  // [bp-0xf8]\n
    char v26;  // [bp-0xf4]\n
    unsigned short v27;  // [bp-0xee]\n
    unsigned int *v28;  // [bp-0xec]\n
    struct struct_1 **v29;  // [bp-0xe8]\n
    char v30;  // [bp-0xe1]\n
    unsigned long v31;  // [bp-0xcc]\n
    unsigned int *v32;  // [bp-0xc4]\n
    struct struct_1 **v33;  // [bp-0xc0]\n
    char v34;  // [bp-0xb9]\n
    unsigned long v35;  // [bp-0xa4]\n
    unsigned int *v36;  // [bp-0x98]\n
    struct struct_1 **v37;  // [bp-0x94]\n
    char v38;  // [bp-0x90]\n
    unsigned int v39;  // [bp-0x84]\n
    unsigned int *v40;  // [bp-0x80]\n
    struct struct_1 **v41;  // [bp-0x7c]\n
    char v42;  // [bp-0x78]\n
    unsigned int v43;  // [bp-0x6c]\n
    unsigned int *v44;  // [bp-0x68]\n
    struct struct_1 **v45;  // [bp-0x64]\n
    unsigned int v46;  // [bp-0x60]\n
    unsigned short v47;  // [bp-0x5a]\n
    unsigned int *v48;  // [bp-0x58]\n
    struct struct_1 **v49;  // [bp-0x54]\n
    char v50;  // [bp-0x50]\n
    char v51[4];  // [bp-0x44]\n
    unsigned int v52;  // [bp-0x40]\n
    unsigned int *v53;  // [bp-0x3c]\n
    struct struct_1 **v54;  // [bp-0x38]\n
    char v55;  // [bp-0x31]\n
    unsigned int v56;  // [bp-0x1c]\n
    unsigned int v57;  // [bp-0x18]\n
    unsigned int *v58;  // [bp-0x10]\n
    struct struct_1 **v59;  // [bp-0xc]\n
    unsigned int v60;  // [bp-0x8]\n
    unsigned int v62;  // ebx\n
    unsigned int *v63;  // eax\n
    struct struct_1 **v64;  // eax\n
    unsigned int *v65;  // eax\n
    struct struct_1 **v66;  // eax\n
    unsigned int v67[2];  // ecx\n
    unsigned int *v68;  // eax\n
    struct struct_1 **v69;  // eax\n
    unsigned int *v70;  // eax\n
    struct struct_1 **v71;  // eax\n
    struct struct_1 **v73;  // eax\n
    unsigned int *v75;  // eax\n
    unsigned int *v76;  // eax\n
    struct struct_1 **v77;  // eax\n
    unsigned int *v78;  // eax\n
    struct struct_1 **v79;  // eax\n
    unsigned int *v80;  // eax\n
    struct struct_1 **v81;  // eax\n
    unsigned int *v82;  // eax\n
    struct struct_1 **v83;  // eax\n
    unsigned int *v84;  // eax\n
    struct struct_1 **v85;  // eax\n
    unsigned int *v86;  // eax, Other Possible Types: unsigned int\n
    unsigned int v87;  // ebx\n
\n
    v60 = v62;\n
    v9 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v20 = cgc__cookie;\n
    v19 = -1;\n
    if (cgc_sendline(1, \"===llamagamobium===\", 19) < 0)\n
        cgc__terminate();\n
    v37 = v61;\n
    v36 = a0;\n
    memset(&v34, 0, 21);\n
    if (*(v36) < 8)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v35 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v15 = [D] x86g_create_fpucw(fpround<4>);\n
    v14 = v15 | 0xc00;\n
    v18 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v34, 21, v18);\n
    v8 = &v34;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v63 = v36;\n
    *(v63) = *(v63) - 8;\n
    v64 = v37;\n
    *(v64) = *(v64) + 1;\n
    v41 = v61;\n
    v40 = a0;\n
    memset(&v38, 0, 12);\n
    if (*(v40) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = *(&*(v41)->field_0);\n
    cgc_uint2str(&v38, 12, v39);\n
    v7 = &v38;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v65 = v40;\n
    *(v65) = *(v65) - 4;\n
    v66 = v41;\n
    *(v66) = &*(v66)->field_4;\n
    v59 = v61;\n
    v58 = a0;\n
    memset(&v55, 0, 21);\n
    if (*(v58) < 8)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(v59);\n
    v57 = v67[1];\n
    v56 = v67[0];\n
    cgc_uint2str(&v55, 21, v56);\n
    v6 = &v55;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v68 = v58;\n
    *(v68) = *(v68) - 8;\n
    v69 = v59;\n
    *(v69) = *(v69) + 1;\n
    v45 = v61;\n
    v44 = a0;\n
    memset(&v42, 0, 12);\n
    if (*(v44) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v43 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v13 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-302, size=2, endness=Iend_LE)))));\n
    v12 = v13 | 0xc00;\n
    v17 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v42, 12, v17);\n
    v5 = &v42;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v42)) < 0)\n
        cgc__terminate();\n
    v70 = v44;\n
    *(v70) = *(v70) - 4;\n
    v71 = v45;\n
    *(v71) = &*(v71)->field_4;\n
    v25 = v61;\n
    v24 = a0;\n
    if (*(v24) <= 0)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v24) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v24);\n
    v23 = v4;\n
    if (!v23)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = cgc_calloc(134);\n
    if (!v22)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v22, &v9[18].padding_0[182]);\n
    cgc_strncpy(v22 + 5, *(v25), v23);\n
    v73 = v25;\n
    *(v73) = -4 + cgc_strlen(v22) + *(v73);\n
    v75 = v24;\n
    *(v75) = *(v75) - (cgc_strlen(v22) + -4);\n
    cgc_checkheap();\n
    cgc_free(v22);\n
    if (cgc_sendline(1, &v9[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v54 = v61;\n
    v53 = a0;\n
    *(&v51[0]) = *(v54);\n
    memset(&v50, 0, 12);\n
    if (*(v53) < 4)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v51[0] << 24)\n
    {\n
        v3 = 0;\n
        if (v51[1] << 16)\n
        {\n
            v3 = 0;\n
            if (v51[2] << 8)\n
                v3 = v51[3];\n
        }\n
    }\n
    v52 = v3 & 1;\n
    cgc_uint2str(&v50, 12, v52);\n
    v2 = &v50;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v50)) < 0)\n
        cgc__terminate();\n
    v76 = v53;\n
    *(v76) = *(v76) - 4;\n
    v77 = v54;\n
    *(v77) = &*(v77)->field_4;\n
    v49 = v61;\n
    v48 = a0;\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v47 = *(&*(v49)->field_0);\n
    v78 = v48;\n
    *(v78) = *(v78) - 2;\n
    v79 = v49;\n
    *(v79) = &*(v79)->padding_1[1];\n
    if (v47 <= *(v48) && !(!v47))\n
        goto LABEL_4ab792;\n
    if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ab792:\n
    v46 = cgc_calloc(v47);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v46, *(v49), v47);\n
    if (cgc_sendline(1, &v9[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v80 = v48;\n
    *(v80) = *(v80) - v47;\n
    v81 = v49;\n
    *(v81) = &(&*(v81)->field_0)[v47];\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    v29 = v61;\n
    v28 = a0;\n
    memset(&v26, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = *(&*(v29)->field_0);\n
    cgc_uint2str(&v26, 6, v27);\n
    v1 = &v26;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v26)) < 0)\n
        cgc__terminate();\n
    v82 = v28;\n
    *(v82) = *(v82) - 2;\n
    v83 = v29;\n
    *(v83) = &*(v83)->padding_1[1];\n
    v33 = v61;\n
    v32 = a0;\n
    memset(&v30, 0, 21);\n
    if (*(v32) < 8)\n
    {\n
        if (cgc_sendline(1, &v9[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v31 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v11 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-306, size=2, endness=Iend_LE)))));\n
    v10 = v11 | 0xc00;\n
    v16 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v30, 21, v16);\n
    v0 = &v30;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v84 = v32;\n
    *(v84) = *(v84) - 8;\n
    v85 = v33;\n
    *(v85) = *(v85) + 1;\n
    v20 ^= v9->field_260;\n
    if (v20)\n
        cgc___stack_cookie_fail();\n
    v86 = a0;\n
    if (*(v86) > 0 && v19 >= 0 && v19 < 0)\n
        v86 = *((&v21 + 0x4 * v19))(v61);\n
    v87 = v60;\n
    return v86;\n
}\n
", "4897744:cgc_process_llamaateuchus": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaateuchus(unsigned int v5, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    struct struct_1 **v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc__cookie;\n
    v1 = -1;\n
    if (cgc_sendline(1, \"===llamaateuchus===\", 19) < 0)\n
        cgc__terminate();\n
    v2 ^= v0->field_260;\n
    if (v2)\n
        cgc___stack_cookie_fail();\n
    v7 = a0;\n
    if (*(v7) > 0 && v1 >= 0 && v1 < 0)\n
        v7 = *((&v3 + 0x4 * v1))(v5);\n
    v8 = v4;\n
    return v7;\n
}\n
", "4897947:sub_4abc9b": null, "4897952:cgc_process_llamadebadge": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadebadge(struct struct_1 **v190, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x384]\n
    char v1;  // [bp-0x37d]\n
    struct_0 *v2;  // [bp-0x37c]\n
    char v3;  // [bp-0x375]\n
    struct_0 *v4;  // [bp-0x374]\n
    struct_0 *v5;  // [bp-0x370]\n
    struct_0 *v6;  // [bp-0x36c]\n
    struct_0 *v7;  // [bp-0x368]\n
    char v8;  // [bp-0x361]\n
    struct_0 *v9;  // [bp-0x360]\n
    struct_0 *v10;  // [bp-0x35c]\n
    struct_0 *v11;  // [bp-0x358]\n
    char v12;  // [bp-0x351]\n
    struct_0 *v13;  // [bp-0x350]\n
    char v14;  // [bp-0x349]\n
    unsigned int v15;  // [bp-0x348]\n
    struct_0 *v16;  // [bp-0x344]\n
    struct_0 *v17;  // [bp-0x340]\n
    struct_0 *v18;  // [bp-0x33c]\n
    struct_0 *v19;  // [bp-0x338]\n
    struct_0 *v20;  // [bp-0x334]\n
    struct_0 *v21;  // [bp-0x330]\n
    struct_0 *v22;  // [bp-0x32c]\n
    char v23;  // [bp-0x325]\n
    unsigned int v24;  // [bp-0x324]\n
    struct_0 *v25;  // [bp-0x320]\n
    struct_0 *v26;  // [bp-0x31c]\n
    struct_0 *v27;  // [bp-0x318]\n
    char v28;  // [bp-0x311]\n
    unsigned int v29;  // [bp-0x310]\n
    struct_3 *v30;  // [bp-0x30c]\n
    unsigned short v31;  // [bp-0x308]\n
    unsigned short v32;  // [bp-0x306]\n
    unsigned short v33;  // [bp-0x304]\n
    unsigned short v34;  // [bp-0x302]\n
    unsigned short v35;  // [bp-0x300]\n
    unsigned short v36;  // [bp-0x2fe]\n
    unsigned short v37;  // [bp-0x2fc]\n
    unsigned short v38;  // [bp-0x2fa]\n
    unsigned short v39;  // [bp-0x2f8]\n
    unsigned short v40;  // [bp-0x2f6]\n
    unsigned long v41;  // [bp-0x2f4]\n
    unsigned long v42;  // [bp-0x2ec]\n
    unsigned long v43;  // [bp-0x2e4]\n
    unsigned long v44;  // [bp-0x2dc]\n
    unsigned long v45;  // [bp-0x2d4]\n
    struct struct_2 **v46;  // [bp-0x2c8]\n
    unsigned int v47;  // [bp-0x2c4]\n
    char v48;  // [bp-0x2c0]\n
    char v49;  // [bp-0x2be]\n
    char v50[2];  // [bp-0x2b8]\n
    unsigned short v51;  // [bp-0x2b2]\n
    unsigned int *v52;  // [bp-0x2b0]\n
    struct struct_1 **v53;  // [bp-0x2ac]\n
    char v54;  // [bp-0x2a6]\n
    char *v55;  // [bp-0x2a0]\n
    unsigned short v56;  // [bp-0x29a]\n
    unsigned int *v57;  // [bp-0x298]\n
    struct struct_1 **v58;  // [bp-0x294]\n
    char v59;  // [bp-0x28e]\n
    char v60[2];  // [bp-0x288]\n
    unsigned short v61;  // [bp-0x282]\n
    unsigned int *v62;  // [bp-0x280]\n
    struct struct_1 **v63;  // [bp-0x27c]\n
    char v64;  // [bp-0x275]\n
    char v65[8];  // [bp-0x260]\n
    unsigned int v66;  // [bp-0x25c]\n
    void* v67;  // [bp-0x258]\n
    unsigned int *v68;  // [bp-0x254]\n
    struct struct_1 **v69;  // [bp-0x250]\n
    unsigned int v70;  // [bp-0x24c]\n
    char v71;  // [bp-0x245]\n
    unsigned int *v72;  // [bp-0x244]\n
    struct struct_1 **v73;  // [bp-0x240]\n
    char *v74;  // [bp-0x23c]\n
    unsigned int v75;  // [bp-0x238]\n
    unsigned int *v76;  // [bp-0x234]\n
    struct struct_1 **v77;  // [bp-0x230]\n
    char *v78;  // [bp-0x22c]\n
    unsigned int v79;  // [bp-0x228]\n
    unsigned int *v80;  // [bp-0x224]\n
    struct struct_1 **v81;  // [bp-0x220]\n
    char v82;  // [bp-0x21c]\n
    unsigned short v83;  // [bp-0x216]\n
    unsigned int *v84;  // [bp-0x214]\n
    struct struct_1 **v85;  // [bp-0x210]\n
    char v86;  // [bp-0x20c]\n
    unsigned short v87;  // [bp-0x206]\n
    unsigned int *v88;  // [bp-0x204]\n
    struct struct_1 **v89;  // [bp-0x200]\n
    char v90;  // [bp-0x1fc]\n
    unsigned short v91;  // [bp-0x1f6]\n
    unsigned int *v92;  // [bp-0x1f4]\n
    struct struct_1 **v93;  // [bp-0x1f0]\n
    char v94;  // [bp-0x1ec]\n
    unsigned short v95;  // [bp-0x1e6]\n
    unsigned int *v96;  // [bp-0x1e4]\n
    struct struct_1 **v97;  // [bp-0x1e0]\n
    char v98;  // [bp-0x1d9]\n
    char v99;  // [bp-0x1d5]\n
    unsigned int *v100;  // [bp-0x1d4]\n
    struct struct_1 **v101;  // [bp-0x1d0]\n
    char v102;  // [bp-0x1c9]\n
    char v103;  // [bp-0x1c5]\n
    unsigned int *v104;  // [bp-0x1c4]\n
    struct struct_1 **v105;  // [bp-0x1c0]\n
    char v106;  // [bp-0x1b9]\n
    char v107;  // [bp-0x1b5]\n
    unsigned int *v108;  // [bp-0x1b4]\n
    struct struct_1 **v109;  // [bp-0x1b0]\n
    char v110;  // [bp-0x1a9]\n
    unsigned long v111;  // [bp-0x194]\n
    unsigned int *v112;  // [bp-0x18c]\n
    struct struct_1 **v113;  // [bp-0x188]\n
    char v114;  // [bp-0x181]\n
    unsigned long v115;  // [bp-0x16c]\n
    unsigned int *v116;  // [bp-0x164]\n
    struct struct_1 **v117;  // [bp-0x160]\n
    char v118;  // [bp-0x15c]\n
    unsigned int v119;  // [bp-0x150]\n
    unsigned int *v120;  // [bp-0x14c]\n
    struct struct_1 **v121;  // [bp-0x148]\n
    char v122;  // [bp-0x144]\n
    unsigned int v123;  // [bp-0x138]\n
    unsigned int *v124;  // [bp-0x134]\n
    struct struct_1 **v125;  // [bp-0x130]\n
    char v126;  // [bp-0x12c]\n
    unsigned int v127;  // [bp-0x120]\n
    unsigned int *v128;  // [bp-0x11c]\n
    struct struct_1 **v129;  // [bp-0x118]\n
    char v130;  // [bp-0x114]\n
    unsigned int v131;  // [bp-0x108]\n
    unsigned int *v132;  // [bp-0x104]\n
    struct struct_1 **v133;  // [bp-0x100]\n
    unsigned int v134;  // [bp-0xfc]\n
    unsigned short v135;  // [bp-0xf6]\n
    unsigned int *v136;  // [bp-0xf4]\n
    struct struct_1 **v137;  // [bp-0xf0]\n
    unsigned int v138;  // [bp-0xec]\n
    unsigned short v139;  // [bp-0xe6]\n
    unsigned int *v140;  // [bp-0xe4]\n
    struct struct_1 **v141;  // [bp-0xe0]\n
    unsigned int v142;  // [bp-0xdc]\n
    unsigned short v143;  // [bp-0xd6]\n
    unsigned int *v144;  // [bp-0xd4]\n
    struct struct_1 **v145;  // [bp-0xd0]\n
    unsigned int v146;  // [bp-0xcc]\n
    unsigned short v147;  // [bp-0xc6]\n
    unsigned int *v148;  // [bp-0xc4]\n
    struct struct_1 **v149;  // [bp-0xc0]\n
    char v150;  // [bp-0xbc]\n
    char v151[4];  // [bp-0xb0]\n
    unsigned int v152;  // [bp-0xac]\n
    unsigned int *v153;  // [bp-0xa8]\n
    struct struct_1 **v154;  // [bp-0xa4]\n
    char v155;  // [bp-0xa0]\n
    char v156[4];  // [bp-0x94]\n
    unsigned int v157;  // [bp-0x90]\n
    unsigned int *v158;  // [bp-0x8c]\n
    struct struct_1 **v159;  // [bp-0x88]\n
    char v160;  // [bp-0x84]\n
    char v161[4];  // [bp-0x78]\n
    unsigned int v162;  // [bp-0x74]\n
    unsigned int *v163;  // [bp-0x70]\n
    struct struct_1 **v164;  // [bp-0x6c]\n
    char *v165;  // [bp-0x68]\n
    unsigned int v166;  // [bp-0x64]\n
    unsigned int *v167;  // [bp-0x60]\n
    struct struct_1 **v168;  // [bp-0x5c]\n
    unsigned int v169;  // [bp-0x58]\n
    char v170;  // [bp-0x51]\n
    unsigned int *v171;  // [bp-0x50]\n
    struct struct_1 **v172;  // [bp-0x4c]\n
    unsigned int v173;  // [bp-0x48]\n
    char v174;  // [bp-0x41]\n
    unsigned int *v175;  // [bp-0x40]\n
    struct struct_1 **v176;  // [bp-0x3c]\n
    unsigned int v177;  // [bp-0x38]\n
    char v178;  // [bp-0x31]\n
    unsigned int *v179;  // [bp-0x30]\n
    struct struct_1 **v180;  // [bp-0x2c]\n
    unsigned int v181;  // [bp-0x28]\n
    char v182;  // [bp-0x21]\n
    unsigned int *v183;  // [bp-0x20]\n
    struct struct_1 **v184;  // [bp-0x1c]\n
    unsigned int v185;  // [bp-0x18]\n
    char v186;  // [bp-0x11]\n
    unsigned int *v187;  // [bp-0x10]\n
    struct struct_1 **v188;  // [bp-0xc]\n
    unsigned int v189;  // [bp-0x8]\n
    unsigned int v191;  // ebx\n
    struct struct_1 **v193;  // eax\n
    unsigned int *v195;  // eax\n
    unsigned int *v196;  // eax\n
    struct struct_1 **v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_1 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_1 **v201;  // eax\n
    struct struct_1 **v202;  // eax\n
    unsigned int *v203;  // eax\n
    unsigned int *v204;  // eax\n
    struct struct_1 **v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_1 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_1 **v209;  // eax\n
    struct struct_1 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_1 **v213;  // eax\n
    unsigned int *v214;  // eax\n
    struct struct_1 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    struct struct_1 **v217;  // eax\n
    struct struct_1 **v219;  // eax\n
    unsigned int *v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_1 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_1 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_1 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_1 **v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_1 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_1 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_1 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_1 **v237;  // eax\n
    struct struct_1 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    unsigned int *v240;  // eax\n
    struct struct_1 **v241;  // eax\n
    struct struct_1 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_1 **v245;  // eax\n
    unsigned int *v247;  // eax\n
    unsigned int *v248;  // eax\n
    struct struct_1 **v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_1 **v251;  // eax\n
    unsigned int *v252;  // eax\n
    struct struct_1 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_1 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_1 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    struct struct_1 **v259;  // eax\n
    unsigned int *v260;  // eax\n
    struct struct_1 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_1 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_1 **v265;  // eax\n
    struct struct_1 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_1 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_1 **v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_1 **v273;  // eax\n
    struct struct_1 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_1 **v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_1 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_1 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    struct struct_1 **v283;  // eax\n
    unsigned int *v284;  // eax, Other Possible Types: unsigned int\n
    unsigned int v285;  // ebx\n
\n
    v189 = v191;\n
    v30 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v47 = cgc__cookie;\n
    v46 = -1;\n
    if (cgc_sendline(1, \"===llamadebadge===\", 18) < 0)\n
        cgc__terminate();\n
    v81 = v190;\n
    v80 = a0;\n
    if (*(v80) <= 0)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v80) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v80);\n
    v79 = v29;\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v78 = cgc_calloc(134);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v78, &v30[18].padding_0[182]);\n
    cgc_strncpy(v78 + 5, *(v81), v79);\n
    v193 = v81;\n
    *(v193) = &(&*(v193)->field_4)[cgc_strlen(v78)];\n
    v195 = v80;\n
    *(v195) = *(v195) - (cgc_strlen(v78) + -4);\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    if (cgc_sendline(1, &v30[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v149 = v190;\n
    v148 = a0;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v147 = *(&*(v149)->field_0);\n
    v196 = v148;\n
    *(v196) = *(v196) - 2;\n
    v197 = v149;\n
    *(v197) = &*(v197)->padding_1[1];\n
    if (v147 <= *(v148) && !(!v147))\n
        goto LABEL_4ac0ae;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ac0ae:\n
    v146 = cgc_calloc(v147);\n
    if (!v146)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v146, *(v149), v147);\n
    if (cgc_sendline(1, &v30[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v198 = v148;\n
    *(v198) = *(v198) - v147;\n
    v199 = v149;\n
    *(v199) = &(&*(v199)->field_0)[v147];\n
    cgc_checkheap();\n
    cgc_free(v146);\n
    v188 = v190;\n
    v187 = a0;\n
    if (*(v187) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v186 = *(v188)->field_0;\n
    v200 = v187;\n
    *(v200) = *(v200) - 1;\n
    v201 = v188;\n
    *(v201) = &*(v201)->padding_1;\n
    if (v186 <= *(v187) && !(!v186))\n
        goto LABEL_4ac2c8;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ac2c8:\n
    v185 = cgc_calloc(v186);\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v185, *(v188), v186);\n
    if (cgc_sendline(1, &v30[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v202 = v188;\n
    *(v202) = &(&*(v202)->field_0)[v186];\n
    v203 = v187;\n
    *(v203) = *(v203) - v186;\n
    cgc_checkheap();\n
    cgc_free(v185);\n
    v145 = v190;\n
    v144 = a0;\n
    if (*(v144) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    v204 = v144;\n
    *(v204) = *(v204) - 2;\n
    v205 = v145;\n
    *(v205) = &*(v205)->padding_1[1];\n
    if (v143 <= *(v144) && !(!v143))\n
        goto LABEL_4ac4e1;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ac4e1:\n
    v142 = cgc_calloc(v143);\n
    if (!v142)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v142, *(v145), v143);\n
    if (cgc_sendline(1, &v30[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v206 = v144;\n
    *(v206) = *(v206) - v143;\n
    v207 = v145;\n
    *(v207) = &(&*(v207)->field_0)[v143];\n
    cgc_checkheap();\n
    cgc_free(v142);\n
    v184 = v190;\n
    v183 = a0;\n
    if (*(v183) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = *(v184)->field_0;\n
    v208 = v183;\n
    *(v208) = *(v208) - 1;\n
    v209 = v184;\n
    *(v209) = &*(v209)->padding_1;\n
    if (v182 <= *(v183) && !(!v182))\n
        goto LABEL_4ac6fb;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ac6fb:\n
    v181 = cgc_calloc(v182);\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v181, *(v184), v182);\n
    if (cgc_sendline(1, &v30[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v210 = v184;\n
    *(v210) = &(&*(v210)->field_0)[v182];\n
    v211 = v183;\n
    *(v211) = *(v211) - v182;\n
    cgc_checkheap();\n
    cgc_free(v181);\n
    v164 = v190;\n
    v163 = a0;\n
    *(&v161[0]) = *(v164);\n
    memset(&v160, 0, 12);\n
    if (*(v163) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = 0;\n
    if (v161[0] << 24)\n
    {\n
        v28 = 0;\n
        if (v161[1] << 16)\n
        {\n
            v28 = 0;\n
            if (v161[2] << 8)\n
                v28 = v161[3];\n
        }\n
    }\n
    v162 = v28 & 1;\n
    cgc_uint2str(&v160, 12, v162);\n
    v27 = &v160;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v160)) < 0)\n
        cgc__terminate();\n
    v212 = v163;\n
    *(v212) = *(v212) - 4;\n
    v213 = v164;\n
    *(v213) = &*(v213)->field_4;\n
    v133 = v190;\n
    v132 = a0;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v131 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(fpround<4>);\n
    v39 = v40 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v130, 12, v45);\n
    v26 = &v130;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v214 = v132;\n
    *(v214) = *(v214) - 4;\n
    v215 = v133;\n
    *(v215) = &*(v215)->field_4;\n
    v129 = v190;\n
    v128 = a0;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v127 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-758, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v126, 12, v44);\n
    v25 = &v126;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v216 = v128;\n
    *(v216) = *(v216) - 4;\n
    v217 = v129;\n
    *(v217) = &*(v217)->field_4;\n
    v168 = v190;\n
    v167 = a0;\n
    if (*(v167) <= 0)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v167) >= 128)\n
        v24 = 128;\n
    else\n
        v24 = *(v167);\n
    v166 = v24;\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v165 = cgc_calloc(134);\n
    if (!v165)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v165, &v30[18].padding_0[182]);\n
    cgc_strncpy(v165 + 5, *(v168), v166);\n
    v219 = v168;\n
    *(v219) = &(&*(v219)->field_4)[cgc_strlen(v165)];\n
    v221 = v167;\n
    *(v221) = *(v221) - (cgc_strlen(v165) + -4);\n
    cgc_checkheap();\n
    cgc_free(v165);\n
    if (cgc_sendline(1, &v30[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v159 = v190;\n
    v158 = a0;\n
    *(&v156[0]) = *(v159);\n
    memset(&v155, 0, 12);\n
    if (*(v158) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = 0;\n
    if (v156[0] << 24)\n
    {\n
        v23 = 0;\n
        if (v156[1] << 16)\n
        {\n
            v23 = 0;\n
            if (v156[2] << 8)\n
                v23 = v156[3];\n
        }\n
    }\n
    v157 = v23 & 1;\n
    cgc_uint2str(&v155, 12, v157);\n
    v22 = &v155;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v155)) < 0)\n
        cgc__terminate();\n
    v222 = v158;\n
    *(v222) = *(v222) - 4;\n
    v223 = v159;\n
    *(v223) = &*(v223)->field_4;\n
    v97 = v190;\n
    v96 = a0;\n
    memset(&v94, 0, 6);\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(&*(v97)->field_0);\n
    cgc_uint2str(&v94, 6, v95);\n
    v21 = &v94;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v224 = v96;\n
    *(v224) = *(v224) - 2;\n
    v225 = v97;\n
    *(v225) = &*(v225)->padding_1[1];\n
    v93 = v190;\n
    v92 = a0;\n
    memset(&v90, 0, 6);\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(&*(v93)->field_0);\n
    cgc_uint2str(&v90, 6, v91);\n
    v20 = &v90;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v226 = v92;\n
    *(v226) = *(v226) - 2;\n
    v227 = v93;\n
    *(v227) = &*(v227)->padding_1[1];\n
    v109 = v190;\n
    v108 = a0;\n
    memset(&v106, 0, 4);\n
    if (*(v108) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(v109)->field_0;\n
    cgc_uint2str(&v106, 4, v107);\n
    v19 = &v106;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v228 = v108;\n
    *(v228) = *(v228) - 1;\n
    v229 = v109;\n
    *(v229) = &*(v229)->padding_1;\n
    v105 = v190;\n
    v104 = a0;\n
    memset(&v102, 0, 4);\n
    if (*(v104) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(v105)->field_0;\n
    cgc_uint2str(&v102, 4, v103);\n
    v18 = &v102;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v230 = v104;\n
    *(v230) = *(v230) - 1;\n
    v231 = v105;\n
    *(v231) = &*(v231)->padding_1;\n
    v101 = v190;\n
    v100 = a0;\n
    memset(&v98, 0, 4);\n
    if (*(v100) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(v101)->field_0;\n
    cgc_uint2str(&v98, 4, v99);\n
    v17 = &v98;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v232 = v100;\n
    *(v232) = *(v232) - 1;\n
    v233 = v101;\n
    *(v233) = &*(v233)->padding_1;\n
    v117 = v190;\n
    v116 = a0;\n
    memset(&v114, 0, 21);\n
    if (*(v116) < 8)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v115 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-762, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v114, 21, v43);\n
    v16 = &v114;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v234 = v116;\n
    *(v234) = *(v234) - 8;\n
    v235 = v117;\n
    *(v235) = *(v235) + 1;\n
    v180 = v190;\n
    v179 = a0;\n
    if (*(v179) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(v180)->field_0;\n
    v236 = v179;\n
    *(v236) = *(v236) - 1;\n
    v237 = v180;\n
    *(v237) = &*(v237)->padding_1;\n
    if (v178 <= *(v179) && !(!v178))\n
        goto LABEL_4ad942;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ad942:\n
    v177 = cgc_calloc(v178);\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v177, *(v180), v178);\n
    if (cgc_sendline(1, &v30[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v238 = v180;\n
    *(v238) = &(&*(v238)->field_0)[v178];\n
    v239 = v179;\n
    *(v239) = *(v239) - v178;\n
    cgc_checkheap();\n
    cgc_free(v177);\n
    v73 = v190;\n
    v72 = a0;\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(v73)->field_0;\n
    v240 = v72;\n
    *(v240) = *(v240) - 1;\n
    v241 = v73;\n
    *(v241) = &*(v241)->padding_1;\n
    if (v71 <= *(v72) && !(!v71))\n
        goto LABEL_4adb59;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4adb59:\n
    v70 = cgc_calloc(v71);\n
    if (!v70)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v70, *(v73), v71);\n
    if (cgc_sendline(1, &v30[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v242 = v73;\n
    *(v242) = &(&*(v242)->field_0)[v71];\n
    v243 = v72;\n
    *(v243) = *(v243) - v71;\n
    cgc_checkheap();\n
    cgc_free(v70);\n
    v77 = v190;\n
    v76 = a0;\n
    if (*(v76) <= 0)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v76) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v76);\n
    v75 = v15;\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v74 = cgc_calloc(134);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v74, &v30[18].padding_0[182]);\n
    cgc_strncpy(v74 + 5, *(v77), v75);\n
    v245 = v77;\n
    *(v245) = &(&*(v245)->field_4)[cgc_strlen(v74)];\n
    v247 = v76;\n
    *(v247) = *(v247) - (cgc_strlen(v74) + -4);\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    if (cgc_sendline(1, &v30[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v154 = v190;\n
    v153 = a0;\n
    *(&v151[0]) = *(v154);\n
    memset(&v150, 0, 12);\n
    if (*(v153) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v151[0] << 24)\n
    {\n
        v14 = 0;\n
        if (v151[1] << 16)\n
        {\n
            v14 = 0;\n
            if (v151[2] << 8)\n
                v14 = v151[3];\n
        }\n
    }\n
    v152 = v14 & 1;\n
    cgc_uint2str(&v150, 12, v152);\n
    v13 = &v150;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v248 = v153;\n
    *(v248) = *(v248) - 4;\n
    v249 = v154;\n
    *(v249) = &*(v249)->field_4;\n
    v141 = v190;\n
    v140 = a0;\n
    if (*(v140) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    v250 = v140;\n
    *(v250) = *(v250) - 2;\n
    v251 = v141;\n
    *(v251) = &*(v251)->padding_1[1];\n
    if (v139 <= *(v140) && !(!v139))\n
        goto LABEL_4ae1d5;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ae1d5:\n
    v138 = cgc_calloc(v139);\n
    if (!v138)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v138, *(v141), v139);\n
    if (cgc_sendline(1, &v30[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v252 = v140;\n
    *(v252) = *(v252) - v139;\n
    v253 = v141;\n
    *(v253) = &(&*(v253)->field_0)[v139];\n
    cgc_checkheap();\n
    cgc_free(v138);\n
    v69 = v190;\n
    v68 = a0;\n
    *(&v65[0]) = *(v69);\n
    memset(&v64, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v65[0])\n
    {\n
        v12 = 0;\n
        if (v65[1])\n
        {\n
            v12 = 0;\n
            if (v65[2])\n
            {\n
                v12 = 0;\n
                if (v65[3])\n
                {\n
                    v12 = 0;\n
                    if (v65[4] << 24)\n
                    {\n
                        v12 = 0;\n
                        if (v65[5] << 16)\n
                        {\n
                            v12 = 0;\n
                            if (v65[6] << 8)\n
                                v12 = v65[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v66 = v12 & 1;\n
    v67 = 0;\n
    cgc_uint2str(&v64, 21, v66);\n
    v11 = &v64;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v254 = v68;\n
    *(v254) = *(v254) - 8;\n
    v255 = v69;\n
    *(v255) = *(v255) + 1;\n
    v125 = v190;\n
    v124 = a0;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v123 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-766, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v122, 12, v42);\n
    v10 = &v122;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v256 = v124;\n
    *(v256) = *(v256) - 4;\n
    v257 = v125;\n
    *(v257) = &*(v257)->field_4;\n
    v113 = v190;\n
    v112 = a0;\n
    memset(&v110, 0, 21);\n
    if (*(v112) < 8)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v111 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v32 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-770, size=2, endness=Iend_LE)))));\n
    v31 = v32 | 0xc00;\n
    v41 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v110, 21, v41);\n
    v9 = &v110;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v258 = v112;\n
    *(v258) = *(v258) - 8;\n
    v259 = v113;\n
    *(v259) = *(v259) + 1;\n
    v137 = v190;\n
    v136 = a0;\n
    if (*(v136) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(&*(v137)->field_0);\n
    v260 = v136;\n
    *(v260) = *(v260) - 2;\n
    v261 = v137;\n
    *(v261) = &*(v261)->padding_1[1];\n
    if (v135 <= *(v136) && !(!v135))\n
        goto LABEL_4ae93f;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ae93f:\n
    v134 = cgc_calloc(v135);\n
    if (!v134)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v134, *(v137), v135);\n
    if (cgc_sendline(1, &v30[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v262 = v136;\n
    *(v262) = *(v262) - v135;\n
    v263 = v137;\n
    *(v263) = &(&*(v263)->field_0)[v135];\n
    cgc_checkheap();\n
    cgc_free(v134);\n
    v176 = v190;\n
    v175 = a0;\n
    if (*(v175) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v174 = *(v176)->field_0;\n
    v264 = v175;\n
    *(v264) = *(v264) - 1;\n
    v265 = v176;\n
    *(v265) = &*(v265)->padding_1;\n
    if (v174 <= *(v175) && !(!v174))\n
        goto LABEL_4aeb59;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4aeb59:\n
    v173 = cgc_calloc(v174);\n
    if (!v173)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v173, *(v176), v174);\n
    if (cgc_sendline(1, &v30[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v266 = v176;\n
    *(v266) = &(&*(v266)->field_0)[v174];\n
    v267 = v175;\n
    *(v267) = *(v267) - v174;\n
    cgc_checkheap();\n
    cgc_free(v173);\n
    v63 = v190;\n
    v62 = a0;\n
    *(&v60) = *(v63);\n
    memset(&v59, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v60[0] << 8)\n
        v8 = v60[1];\n
    v61 = v8 & 1;\n
    cgc_uint2str(&v59, 6, v61);\n
    v7 = &v59;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v268 = v62;\n
    *(v268) = *(v268) - 2;\n
    v269 = v63;\n
    *(v269) = &*(v269)->padding_1[1];\n
    v89 = v190;\n
    v88 = a0;\n
    memset(&v86, 0, 6);\n
    if (*(v88) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(&*(v89)->field_0);\n
    cgc_uint2str(&v86, 6, v87);\n
    v6 = &v86;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v86)) < 0)\n
        cgc__terminate();\n
    v270 = v88;\n
    *(v270) = *(v270) - 2;\n
    v271 = v89;\n
    *(v271) = &*(v271)->padding_1[1];\n
    v172 = v190;\n
    v171 = a0;\n
    if (*(v171) < 1)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v170 = *(v172)->field_0;\n
    v272 = v171;\n
    *(v272) = *(v272) - 1;\n
    v273 = v172;\n
    *(v273) = &*(v273)->padding_1;\n
    if (v170 <= *(v171) && !(!v170))\n
        goto LABEL_4af01f;\n
    if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4af01f:\n
    v169 = cgc_calloc(v170);\n
    if (!v169)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v169, *(v172), v170);\n
    if (cgc_sendline(1, &v30[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v274 = v172;\n
    *(v274) = &(&*(v274)->field_0)[v170];\n
    v275 = v171;\n
    *(v275) = *(v275) - v170;\n
    cgc_checkheap();\n
    cgc_free(v169);\n
    v121 = v190;\n
    v120 = a0;\n
    memset(&v118, 0, 12);\n
    if (*(v120) < 4)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = *(&*(v121)->field_0);\n
    cgc_uint2str(&v118, 12, v119);\n
    v5 = &v118;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v276 = v120;\n
    *(v276) = *(v276) - 4;\n
    v277 = v121;\n
    *(v277) = &*(v277)->field_4;\n
    v85 = v190;\n
    v84 = a0;\n
    memset(&v82, 0, 6);\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(&*(v85)->field_0);\n
    cgc_uint2str(&v82, 6, v83);\n
    v4 = &v82;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v278 = v84;\n
    *(v278) = *(v278) - 2;\n
    v279 = v85;\n
    *(v279) = &*(v279)->padding_1[1];\n
    v58 = v190;\n
    v57 = a0;\n
    v55 = &*(v58)->field_0;\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (*(v55) << 8)\n
        v3 = v55[1];\n
    v56 = v3 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v2 = &v54;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v280 = v57;\n
    *(v280) = *(v280) - 2;\n
    v281 = v58;\n
    *(v281) = &*(v281)->padding_1[1];\n
    v53 = v190;\n
    v52 = a0;\n
    *(&v50) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, &v30[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v50[0] << 8)\n
        v1 = v50[1];\n
    v51 = v1 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v0 = &v49;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v282 = v52;\n
    *(v282) = *(v282) - 2;\n
    v283 = v53;\n
    *(v283) = &*(v283)->padding_1[1];\n
    v47 ^= v30->field_260;\n
    if (v47)\n
        cgc___stack_cookie_fail();\n
    v284 = a0;\n
    if (*(v284) > 0 && v46 >= 0 && v46 < 0)\n
        v284 = *((&v48 + 0x4 * v46))(v190);\n
    v285 = v189;\n
    return v284;\n
}\n
", "4912954:sub_4af73a": null, "4912960:cgc_process_llamaDonia": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaDonia(struct struct_1 **v224, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x458]\n
    unsigned int v1;  // [bp-0x454]\n
    unsigned int v2;  // [bp-0x450]\n
    struct_0 *v3;  // [bp-0x44c]\n
    struct_0 *v4;  // [bp-0x448]\n
    struct_0 *v5;  // [bp-0x444]\n
    char v6;  // [bp-0x43d]\n
    unsigned int v7;  // [bp-0x43c]\n
    unsigned int v8;  // [bp-0x438]\n
    struct_0 *v9;  // [bp-0x434]\n
    struct_0 *v10;  // [bp-0x430]\n
    struct_0 *v11;  // [bp-0x42c]\n
    struct_0 *v12;  // [bp-0x428]\n
    struct_0 *v13;  // [bp-0x424]\n
    char v14;  // [bp-0x41d]\n
    struct_0 *v15;  // [bp-0x41c]\n
    char v16;  // [bp-0x415]\n
    struct_0 *v17;  // [bp-0x414]\n
    struct_0 *v18;  // [bp-0x410]\n
    char v19;  // [bp-0x409]\n
    struct_0 *v20;  // [bp-0x408]\n
    struct_0 *v21;  // [bp-0x404]\n
    struct_0 *v22;  // [bp-0x400]\n
    unsigned int v23;  // [bp-0x3fc]\n
    struct_0 *v24;  // [bp-0x3f8]\n
    struct_0 *v25;  // [bp-0x3f4]\n
    struct_0 *v26;  // [bp-0x3f0]\n
    struct_0 *v27;  // [bp-0x3ec]\n
    char v28;  // [bp-0x3e5]\n
    struct_0 *v29;  // [bp-0x3e4]\n
    struct_0 *v30;  // [bp-0x3e0]\n
    struct_0 *v31;  // [bp-0x3dc]\n
    struct_2 *v32;  // [bp-0x3d8]\n
    unsigned short v33;  // [bp-0x3d4]\n
    unsigned short v34;  // [bp-0x3d2]\n
    unsigned short v35;  // [bp-0x3d0]\n
    unsigned short v36;  // [bp-0x3ce]\n
    unsigned short v37;  // [bp-0x3cc]\n
    unsigned short v38;  // [bp-0x3ca]\n
    unsigned short v39;  // [bp-0x3c8]\n
    unsigned short v40;  // [bp-0x3c6]\n
    unsigned short v41;  // [bp-0x3c4]\n
    unsigned short v42;  // [bp-0x3c2]\n
    unsigned short v43;  // [bp-0x3c0]\n
    unsigned short v44;  // [bp-0x3be]\n
    unsigned long v45;  // [bp-0x3bc]\n
    unsigned long v46;  // [bp-0x3b4]\n
    unsigned long v47;  // [bp-0x3ac]\n
    unsigned long v48;  // [bp-0x3a4]\n
    unsigned long v49;  // [bp-0x39c]\n
    unsigned long v50;  // [bp-0x394]\n
    struct struct_4 **v51;  // [bp-0x388]\n
    unsigned int v52;  // [bp-0x384]\n
    char v53;  // [bp-0x380]\n
    char v54;  // [bp-0x37e]\n
    char v55[2];  // [bp-0x378]\n
    unsigned short v56;  // [bp-0x372]\n
    unsigned int *v57;  // [bp-0x370]\n
    struct struct_1 **v58;  // [bp-0x36c]\n
    char v59;  // [bp-0x366]\n
    char v60[2];  // [bp-0x360]\n
    unsigned short v61;  // [bp-0x35a]\n
    unsigned int *v62;  // [bp-0x358]\n
    struct struct_1 **v63;  // [bp-0x354]\n
    char v64;  // [bp-0x34e]\n
    struct_3 *v65;  // [bp-0x348]\n
    unsigned short v66;  // [bp-0x342]\n
    unsigned int *v67;  // [bp-0x340]\n
    struct struct_1 **v68;  // [bp-0x33c]\n
    char v69;  // [bp-0x335]\n
    char v70[8];  // [bp-0x320]\n
    unsigned int v71;  // [bp-0x31c]\n
    void* v72;  // [bp-0x318]\n
    unsigned int *v73;  // [bp-0x314]\n
    struct struct_1 **v74;  // [bp-0x310]\n
    unsigned int v75;  // [bp-0x30c]\n
    char v76;  // [bp-0x305]\n
    unsigned int *v77;  // [bp-0x304]\n
    struct struct_1 **v78;  // [bp-0x300]\n
    char *v79;  // [bp-0x2fc]\n
    unsigned int v80;  // [bp-0x2f8]\n
    unsigned int *v81;  // [bp-0x2f4]\n
    struct struct_1 **v82;  // [bp-0x2f0]\n
    char *v83;  // [bp-0x2ec]\n
    unsigned int v84;  // [bp-0x2e8]\n
    unsigned int *v85;  // [bp-0x2e4]\n
    struct struct_1 **v86;  // [bp-0x2e0]\n
    char v87;  // [bp-0x2dc]\n
    unsigned short v88;  // [bp-0x2d6]\n
    unsigned int *v89;  // [bp-0x2d4]\n
    struct struct_1 **v90;  // [bp-0x2d0]\n
    char v91;  // [bp-0x2cc]\n
    unsigned short v92;  // [bp-0x2c6]\n
    unsigned int *v93;  // [bp-0x2c4]\n
    struct struct_1 **v94;  // [bp-0x2c0]\n
    char v95;  // [bp-0x2bc]\n
    unsigned short v96;  // [bp-0x2b6]\n
    unsigned int *v97;  // [bp-0x2b4]\n
    struct struct_1 **v98;  // [bp-0x2b0]\n
    char v99;  // [bp-0x2ac]\n
    unsigned short v100;  // [bp-0x2a6]\n
    unsigned int *v101;  // [bp-0x2a4]\n
    struct struct_1 **v102;  // [bp-0x2a0]\n
    char v103;  // [bp-0x29c]\n
    unsigned short v104;  // [bp-0x296]\n
    unsigned int *v105;  // [bp-0x294]\n
    struct struct_1 **v106;  // [bp-0x290]\n
    char v107;  // [bp-0x289]\n
    char v108;  // [bp-0x285]\n
    unsigned int *v109;  // [bp-0x284]\n
    struct struct_1 **v110;  // [bp-0x280]\n
    char v111;  // [bp-0x279]\n
    char v112;  // [bp-0x275]\n
    unsigned int *v113;  // [bp-0x274]\n
    struct struct_1 **v114;  // [bp-0x270]\n
    char v115;  // [bp-0x269]\n
    unsigned long v116;  // [bp-0x254]\n
    unsigned int *v117;  // [bp-0x24c]\n
    struct struct_1 **v118;  // [bp-0x248]\n
    char v119;  // [bp-0x241]\n
    unsigned long v120;  // [bp-0x22c]\n
    unsigned int *v121;  // [bp-0x224]\n
    struct struct_1 **v122;  // [bp-0x220]\n
    char v123;  // [bp-0x219]\n
    unsigned long v124;  // [bp-0x204]\n
    unsigned int *v125;  // [bp-0x1f8]\n
    struct struct_1 **v126;  // [bp-0x1f4]\n
    char v127;  // [bp-0x1f0]\n
    unsigned int v128;  // [bp-0x1e4]\n
    unsigned int *v129;  // [bp-0x1e0]\n
    struct struct_1 **v130;  // [bp-0x1dc]\n
    char v131;  // [bp-0x1d8]\n
    unsigned int v132;  // [bp-0x1cc]\n
    unsigned int *v133;  // [bp-0x1c8]\n
    struct struct_1 **v134;  // [bp-0x1c4]\n
    char v135;  // [bp-0x1c0]\n
    unsigned int v136;  // [bp-0x1b4]\n
    unsigned int *v137;  // [bp-0x1b0]\n
    struct struct_1 **v138;  // [bp-0x1ac]\n
    char v139;  // [bp-0x1a8]\n
    unsigned int v140;  // [bp-0x19c]\n
    unsigned int *v141;  // [bp-0x198]\n
    struct struct_1 **v142;  // [bp-0x194]\n
    unsigned int v143;  // [bp-0x190]\n
    unsigned short v144;  // [bp-0x18a]\n
    unsigned int *v145;  // [bp-0x188]\n
    struct struct_1 **v146;  // [bp-0x184]\n
    unsigned int v147;  // [bp-0x180]\n
    unsigned short v148;  // [bp-0x17a]\n
    unsigned int *v149;  // [bp-0x178]\n
    struct struct_1 **v150;  // [bp-0x174]\n
    unsigned int v151;  // [bp-0x170]\n
    unsigned short v152;  // [bp-0x16a]\n
    unsigned int *v153;  // [bp-0x168]\n
    struct struct_1 **v154;  // [bp-0x164]\n
    unsigned int v155;  // [bp-0x160]\n
    unsigned short v156;  // [bp-0x15a]\n
    unsigned int *v157;  // [bp-0x158]\n
    struct struct_1 **v158;  // [bp-0x154]\n
    unsigned int v159;  // [bp-0x150]\n
    unsigned short v160;  // [bp-0x14a]\n
    unsigned int *v161;  // [bp-0x148]\n
    struct struct_1 **v162;  // [bp-0x144]\n
    unsigned int v163;  // [bp-0x140]\n
    unsigned short v164;  // [bp-0x13a]\n
    unsigned int *v165;  // [bp-0x138]\n
    struct struct_1 **v166;  // [bp-0x134]\n
    unsigned int v167;  // [bp-0x130]\n
    unsigned short v168;  // [bp-0x12a]\n
    unsigned int *v169;  // [bp-0x128]\n
    struct struct_1 **v170;  // [bp-0x124]\n
    unsigned int v171;  // [bp-0x120]\n
    unsigned short v172;  // [bp-0x11a]\n
    unsigned int *v173;  // [bp-0x118]\n
    struct struct_1 **v174;  // [bp-0x114]\n
    char v175;  // [bp-0x110]\n
    char v176[4];  // [bp-0x104]\n
    unsigned int v177;  // [bp-0x100]\n
    unsigned int *v178;  // [bp-0xfc]\n
    struct struct_1 **v179;  // [bp-0xf8]\n
    char *v180;  // [bp-0xf4]\n
    unsigned int v181;  // [bp-0xf0]\n
    unsigned int *v182;  // [bp-0xec]\n
    struct struct_1 **v183;  // [bp-0xe8]\n
    char *v184;  // [bp-0xe4]\n
    unsigned int v185;  // [bp-0xe0]\n
    unsigned int *v186;  // [bp-0xdc]\n
    struct struct_1 **v187;  // [bp-0xd8]\n
    char *v188;  // [bp-0xd4]\n
    unsigned int v189;  // [bp-0xd0]\n
    unsigned int *v190;  // [bp-0xcc]\n
    struct struct_1 **v191;  // [bp-0xc8]\n
    char v192;  // [bp-0xc1]\n
    unsigned int v193;  // [bp-0xac]\n
    unsigned int v194;  // [bp-0xa8]\n
    unsigned int *v195;  // [bp-0xa4]\n
    struct struct_1 **v196;  // [bp-0xa0]\n
    char v197;  // [bp-0x99]\n
    unsigned int v198;  // [bp-0x84]\n
    unsigned int v199;  // [bp-0x80]\n
    unsigned int *v200;  // [bp-0x7c]\n
    struct struct_1 **v201;  // [bp-0x78]\n
    char v202;  // [bp-0x71]\n
    unsigned int v203;  // [bp-0x5c]\n
    unsigned int v204;  // [bp-0x58]\n
    unsigned int *v205;  // [bp-0x50]\n
    struct struct_1 **v206;  // [bp-0x4c]\n
    unsigned int v207;  // [bp-0x48]\n
    char v208;  // [bp-0x41]\n
    unsigned int *v209;  // [bp-0x40]\n
    struct struct_1 **v210;  // [bp-0x3c]\n
    unsigned int v211;  // [bp-0x38]\n
    char v212;  // [bp-0x31]\n
    unsigned int *v213;  // [bp-0x30]\n
    struct struct_1 **v214;  // [bp-0x2c]\n
    unsigned int v215;  // [bp-0x28]\n
    char v216;  // [bp-0x21]\n
    unsigned int *v217;  // [bp-0x20]\n
    struct struct_1 **v218;  // [bp-0x1c]\n
    unsigned int v219;  // [bp-0x18]\n
    char v220;  // [bp-0x11]\n
    unsigned int *v221;  // [bp-0x10]\n
    struct struct_1 **v222;  // [bp-0xc]\n
    unsigned int v223;  // [bp-0x8]\n
    unsigned int v225;  // ebx\n
    unsigned int v226[2];  // ecx\n
    unsigned int *v227;  // eax\n
    struct struct_1 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_1 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_1 **v232;  // eax\n
    unsigned int *v233;  // eax\n
    struct struct_1 **v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_1 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_1 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_1 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_1 **v242;  // eax\n
    struct struct_1 **v243;  // eax\n
    unsigned int *v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_1 **v246;  // eax\n
    unsigned int *v247;  // eax\n
    struct struct_1 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_1 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_1 **v252;  // eax\n
    struct struct_1 **v254;  // eax\n
    unsigned int *v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_1 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_1 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    struct struct_1 **v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_1 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_1 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_1 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_1 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_1 **v272;  // eax\n
    unsigned int *v273;  // eax\n
    struct struct_1 **v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_1 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_1 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_1 **v280;  // eax\n
    unsigned int v281[2];  // ecx\n
    unsigned int *v282;  // eax\n
    struct struct_1 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_1 **v285;  // eax\n
    struct struct_1 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_1 **v289;  // eax\n
    struct struct_1 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_1 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    struct struct_1 **v295;  // eax\n
    struct struct_1 **v297;  // eax\n
    unsigned int *v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_1 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_1 **v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_1 **v305;  // eax\n
    struct struct_1 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    unsigned int *v308;  // eax\n
    struct struct_1 **v309;  // eax\n
    struct struct_1 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_1 **v313;  // eax\n
    unsigned int *v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_1 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    struct struct_1 **v319;  // eax\n
    unsigned int *v320;  // eax\n
    struct struct_1 **v321;  // eax\n
    struct_3 *v322;  // ecx\n
    unsigned int *v323;  // eax\n
    struct struct_1 **v324;  // eax\n
    unsigned int *v325;  // eax\n
    struct struct_1 **v326;  // eax\n
    struct struct_1 **v328;  // eax\n
    unsigned int *v330;  // eax\n
    struct struct_1 **v332;  // eax\n
    unsigned int *v334;  // eax\n
    unsigned int *v335;  // eax\n
    struct struct_1 **v336;  // eax\n
    unsigned int *v337;  // eax\n
    struct struct_1 **v338;  // eax\n
    unsigned int *v339;  // eax\n
    struct struct_1 **v340;  // eax\n
    unsigned int *v341;  // eax\n
    struct struct_1 **v342;  // eax\n
    unsigned int *v343;  // eax\n
    struct struct_1 **v344;  // eax\n
    unsigned int *v345;  // eax, Other Possible Types: unsigned int\n
    unsigned int v346;  // ebx\n
\n
    v223 = v225;\n
    v32 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v52 = cgc__cookie;\n
    v51 = -1;\n
    if (cgc_sendline(1, \"===llamaDonia===\", 16) < 0)\n
        cgc__terminate();\n
    v206 = v224;\n
    v205 = a0;\n
    memset(&v202, 0, 21);\n
    if (*(v205) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v226 = *(v206);\n
    v204 = v226[1];\n
    v203 = v226[0];\n
    cgc_uint2str(&v202, 21, v203);\n
    v31 = &v202;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v202)) < 0)\n
        cgc__terminate();\n
    v227 = v205;\n
    *(v227) = *(v227) - 8;\n
    v228 = v206;\n
    *(v228) = &(*(v228))[1].padding_1[2];\n
    v142 = v224;\n
    v141 = a0;\n
    memset(&v139, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v140 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(fpround<4>);\n
    v43 = v44 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v139, 12, v50);\n
    v30 = &v139;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v229 = v141;\n
    *(v229) = *(v229) - 4;\n
    v230 = v142;\n
    *(v230) = &*(v230)->field_4;\n
    v126 = v224;\n
    v125 = a0;\n
    memset(&v123, 0, 21);\n
    if (*(v125) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v124 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-958, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v123, 21, v49);\n
    v29 = &v123;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v231 = v125;\n
    *(v231) = *(v231) - 8;\n
    v232 = v126;\n
    *(v232) = &(*(v232))[1].padding_1[2];\n
    v68 = v224;\n
    v67 = a0;\n
    v65 = &*(v68);\n
    memset(&v64, 0, 6);\n
    if (*(v67) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = 0;\n
    if (v65->field_0 << 8)\n
        v28 = v65->padding_1[0];\n
    v66 = v28 & 1;\n
    cgc_uint2str(&v64, 6, v66);\n
    v27 = &v64;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v233 = v67;\n
    *(v233) = *(v233) - 2;\n
    v234 = v68;\n
    *(v234) = &*(v234)->padding_1[1];\n
    v106 = v224;\n
    v105 = a0;\n
    memset(&v103, 0, 6);\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(&*(v106)->field_0);\n
    cgc_uint2str(&v103, 6, v104);\n
    v26 = &v103;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v235 = v105;\n
    *(v235) = *(v235) - 2;\n
    v236 = v106;\n
    *(v236) = &*(v236)->padding_1[1];\n
    v154 = v224;\n
    v153 = a0;\n
    if (*(v153) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v152 = *(&*(v154)->field_0);\n
    v237 = v153;\n
    *(v237) = *(v237) - 2;\n
    v238 = v154;\n
    *(v238) = &*(v238)->padding_1[1];\n
    if (v152 <= *(v153) && !(!v152))\n
        goto LABEL_4affa7;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4affa7:\n
    v151 = cgc_calloc(v152);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v151, *(v154), v152);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v239 = v153;\n
    *(v239) = *(v239) - v152;\n
    v240 = v154;\n
    *(v240) = &(&*(v240)->field_0)[v152];\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    v222 = v224;\n
    v221 = a0;\n
    if (*(v221) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v220 = *(v222)->field_0;\n
    v241 = v221;\n
    *(v241) = *(v241) - 1;\n
    v242 = v222;\n
    *(v242) = &*(v242)->padding_1;\n
    if (v220 <= *(v221) && !(!v220))\n
        goto LABEL_4b01c1;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b01c1:\n
    v219 = cgc_calloc(v220);\n
    if (!v219)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v219, *(v222), v220);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v243 = v222;\n
    *(v243) = &(&*(v243)->field_0)[v220];\n
    v244 = v221;\n
    *(v244) = *(v244) - v220;\n
    cgc_checkheap();\n
    cgc_free(v219);\n
    v122 = v224;\n
    v121 = a0;\n
    memset(&v119, 0, 21);\n
    if (*(v121) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-962, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v119, 21, v48);\n
    v25 = &v119;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v245 = v121;\n
    *(v245) = *(v245) - 8;\n
    v246 = v122;\n
    *(v246) = &(*(v246))[1].padding_1[2];\n
    v114 = v224;\n
    v113 = a0;\n
    memset(&v111, 0, 4);\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(v114)->field_0;\n
    cgc_uint2str(&v111, 4, v112);\n
    v24 = &v111;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v247 = v113;\n
    *(v247) = *(v247) - 1;\n
    v248 = v114;\n
    *(v248) = &*(v248)->padding_1;\n
    v174 = v224;\n
    v173 = a0;\n
    if (*(v173) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(&*(v174)->field_0);\n
    v249 = v173;\n
    *(v249) = *(v249) - 2;\n
    v250 = v174;\n
    *(v250) = &*(v250)->padding_1[1];\n
    if (v172 <= *(v173) && !(!v172))\n
        goto LABEL_4b0692;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b0692:\n
    v171 = cgc_calloc(v172);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v171, *(v174), v172);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v251 = v173;\n
    *(v251) = *(v251) - v172;\n
    v252 = v174;\n
    *(v252) = &(&*(v252)->field_0)[v172];\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    v191 = v224;\n
    v190 = a0;\n
    if (*(v190) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v190) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v190);\n
    v189 = v23;\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v188 = cgc_calloc(134);\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v188, &v32[18].padding_0[182]);\n
    cgc_strncpy(v188 + 5, *(v191), v189);\n
    v254 = v191;\n
    *(v254) = &(&*(v254)->field_4)[cgc_strlen(v188)];\n
    v256 = v190;\n
    *(v256) = *(v256) - (cgc_strlen(v188) + -4);\n
    cgc_checkheap();\n
    cgc_free(v188);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v150 = v224;\n
    v149 = a0;\n
    if (*(v149) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = *(&*(v150)->field_0);\n
    v257 = v149;\n
    *(v257) = *(v257) - 2;\n
    v258 = v150;\n
    *(v258) = &*(v258)->padding_1[1];\n
    if (v148 <= *(v149) && !(!v148))\n
        goto LABEL_4b0b4d;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b0b4d:\n
    v147 = cgc_calloc(v148);\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v147, *(v150), v148);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v259 = v149;\n
    *(v259) = *(v259) - v148;\n
    v260 = v150;\n
    *(v260) = &(&*(v260)->field_0)[v148];\n
    cgc_checkheap();\n
    cgc_free(v147);\n
    v138 = v224;\n
    v137 = a0;\n
    memset(&v135, 0, 12);\n
    if (*(v137) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v136 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-966, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v135, 12, v47);\n
    v22 = &v135;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v261 = v137;\n
    *(v261) = *(v261) - 4;\n
    v262 = v138;\n
    *(v262) = &*(v262)->field_4;\n
    v134 = v224;\n
    v133 = a0;\n
    memset(&v131, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v132 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-970, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v131, 12, v46);\n
    v21 = &v131;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v263 = v133;\n
    *(v263) = *(v263) - 4;\n
    v264 = v134;\n
    *(v264) = &*(v264)->field_4;\n
    v102 = v224;\n
    v101 = a0;\n
    memset(&v99, 0, 6);\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(&*(v102)->field_0);\n
    cgc_uint2str(&v99, 6, v100);\n
    v20 = &v99;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v265 = v101;\n
    *(v265) = *(v265) - 2;\n
    v266 = v102;\n
    *(v266) = &*(v266)->padding_1[1];\n
    v74 = v224;\n
    v73 = a0;\n
    *(&v70[0]) = *(v74);\n
    memset(&v69, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v70[0])\n
    {\n
        v19 = 0;\n
        if (v70[1])\n
        {\n
            v19 = 0;\n
            if (v70[2])\n
            {\n
                v19 = 0;\n
                if (v70[3])\n
                {\n
                    v19 = 0;\n
                    if (v70[4] << 24)\n
                    {\n
                        v19 = 0;\n
                        if (v70[5] << 16)\n
                        {\n
                            v19 = 0;\n
                            if (v70[6] << 8)\n
                                v19 = v70[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v71 = v19 & 1;\n
    v72 = 0;\n
    cgc_uint2str(&v69, 21, v71);\n
    v18 = &v69;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v267 = v73;\n
    *(v267) = *(v267) - 8;\n
    v268 = v74;\n
    *(v268) = &(*(v268))[1].padding_1[2];\n
    v98 = v224;\n
    v97 = a0;\n
    memset(&v95, 0, 6);\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    cgc_uint2str(&v95, 6, v96);\n
    v17 = &v95;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v269 = v97;\n
    *(v269) = *(v269) - 2;\n
    v270 = v98;\n
    *(v270) = &*(v270)->padding_1[1];\n
    v63 = v224;\n
    v62 = a0;\n
    *(&v60) = *(v63);\n
    memset(&v59, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v60[0] << 8)\n
        v16 = v60[1];\n
    v61 = v16 & 1;\n
    cgc_uint2str(&v59, 6, v61);\n
    v15 = &v59;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v271 = v62;\n
    *(v271) = *(v271) - 2;\n
    v272 = v63;\n
    *(v272) = &*(v272)->padding_1[1];\n
    v170 = v224;\n
    v169 = a0;\n
    if (*(v169) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v168 = *(&*(v170)->field_0);\n
    v273 = v169;\n
    *(v273) = *(v273) - 2;\n
    v274 = v170;\n
    *(v274) = &*(v274)->padding_1[1];\n
    if (v168 <= *(v169) && !(!v168))\n
        goto LABEL_4b16ca;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b16ca:\n
    v167 = cgc_calloc(v168);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v167, *(v170), v168);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v275 = v169;\n
    *(v275) = *(v275) - v168;\n
    v276 = v170;\n
    *(v276) = &(&*(v276)->field_0)[v168];\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    v58 = v224;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v55[0] << 8)\n
        v14 = v55[1];\n
    v56 = v14 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v13 = &v54;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v277 = v57;\n
    *(v277) = *(v277) - 2;\n
    v278 = v58;\n
    *(v278) = &*(v278)->padding_1[1];\n
    v130 = v224;\n
    v129 = a0;\n
    memset(&v127, 0, 12);\n
    if (*(v129) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(&*(v130)->field_0);\n
    cgc_uint2str(&v127, 12, v128);\n
    v12 = &v127;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v279 = v129;\n
    *(v279) = *(v279) - 4;\n
    v280 = v130;\n
    *(v280) = &*(v280)->field_4;\n
    v201 = v224;\n
    v200 = a0;\n
    memset(&v197, 0, 21);\n
    if (*(v200) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v281 = *(v201);\n
    v199 = v281[1];\n
    v198 = v281[0];\n
    cgc_uint2str(&v197, 21, v198);\n
    v11 = &v197;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v197)) < 0)\n
        cgc__terminate();\n
    v282 = v200;\n
    *(v282) = *(v282) - 8;\n
    v283 = v201;\n
    *(v283) = &(*(v283))[1].padding_1[2];\n
    v218 = v224;\n
    v217 = a0;\n
    if (*(v217) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v216 = *(v218)->field_0;\n
    v284 = v217;\n
    *(v284) = *(v284) - 1;\n
    v285 = v218;\n
    *(v285) = &*(v285)->padding_1;\n
    if (v216 <= *(v217) && !(!v216))\n
        goto LABEL_4b1cdf;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b1cdf:\n
    v215 = cgc_calloc(v216);\n
    if (!v215)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v215, *(v218), v216);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v286 = v218;\n
    *(v286) = &(&*(v286)->field_0)[v216];\n
    v287 = v217;\n
    *(v287) = *(v287) - v216;\n
    cgc_checkheap();\n
    cgc_free(v215);\n
    v214 = v224;\n
    v213 = a0;\n
    if (*(v213) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v212 = *(v214)->field_0;\n
    v288 = v213;\n
    *(v288) = *(v288) - 1;\n
    v289 = v214;\n
    *(v289) = &*(v289)->padding_1;\n
    if (v212 <= *(v213) && !(!v212))\n
        goto LABEL_4b1ed8;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b1ed8:\n
    v211 = cgc_calloc(v212);\n
    if (!v211)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v211, *(v214), v212);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v290 = v214;\n
    *(v290) = &(&*(v290)->field_0)[v212];\n
    v291 = v213;\n
    *(v291) = *(v291) - v212;\n
    cgc_checkheap();\n
    cgc_free(v211);\n
    v110 = v224;\n
    v109 = a0;\n
    memset(&v107, 0, 4);\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(v110)->field_0;\n
    cgc_uint2str(&v107, 4, v108);\n
    v10 = &v107;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v292 = v109;\n
    *(v292) = *(v292) - 1;\n
    v293 = v110;\n
    *(v293) = &*(v293)->padding_1;\n
    v94 = v224;\n
    v93 = a0;\n
    memset(&v91, 0, 6);\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 6, v92);\n
    v9 = &v91;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v294 = v93;\n
    *(v294) = *(v294) - 2;\n
    v295 = v94;\n
    *(v295) = &*(v295)->padding_1[1];\n
    v86 = v224;\n
    v85 = a0;\n
    if (*(v85) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v85) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v85);\n
    v84 = v8;\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = cgc_calloc(134);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v83, &v32[18].padding_0[182]);\n
    cgc_strncpy(v83 + 5, *(v86), v84);\n
    v297 = v86;\n
    *(v297) = &(&*(v297)->field_4)[cgc_strlen(v83)];\n
    v299 = v85;\n
    *(v299) = *(v299) - (cgc_strlen(v83) + -4);\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v166 = v224;\n
    v165 = a0;\n
    if (*(v165) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v164 = *(&*(v166)->field_0);\n
    v300 = v165;\n
    *(v300) = *(v300) - 2;\n
    v301 = v166;\n
    *(v301) = &*(v301)->padding_1[1];\n
    if (v164 <= *(v165) && !(!v164))\n
        goto LABEL_4b25fc;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b25fc:\n
    v163 = cgc_calloc(v164);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v163, *(v166), v164);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v302 = v165;\n
    *(v302) = *(v302) - v164;\n
    v303 = v166;\n
    *(v303) = &(&*(v303)->field_0)[v164];\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    v210 = v224;\n
    v209 = a0;\n
    if (*(v209) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v208 = *(v210)->field_0;\n
    v304 = v209;\n
    *(v304) = *(v304) - 1;\n
    v305 = v210;\n
    *(v305) = &*(v305)->padding_1;\n
    if (v208 <= *(v209) && !(!v208))\n
        goto LABEL_4b2816;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b2816:\n
    v207 = cgc_calloc(v208);\n
    if (!v207)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v207, *(v210), v208);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v306 = v210;\n
    *(v306) = &(&*(v306)->field_0)[v208];\n
    v307 = v209;\n
    *(v307) = *(v307) - v208;\n
    cgc_checkheap();\n
    cgc_free(v207);\n
    v78 = v224;\n
    v77 = a0;\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    v308 = v77;\n
    *(v308) = *(v308) - 1;\n
    v309 = v78;\n
    *(v309) = &*(v309)->padding_1;\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_4b2a2d;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b2a2d:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v310 = v78;\n
    *(v310) = &(&*(v310)->field_0)[v76];\n
    v311 = v77;\n
    *(v311) = *(v311) - v76;\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v82 = v224;\n
    v81 = a0;\n
    if (*(v81) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v81) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v81);\n
    v80 = v7;\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = cgc_calloc(134);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v79, &v32[18].padding_0[182]);\n
    cgc_strncpy(v79 + 5, *(v82), v80);\n
    v313 = v82;\n
    *(v313) = &(&*(v313)->field_4)[cgc_strlen(v79)];\n
    v315 = v81;\n
    *(v315) = *(v315) - (cgc_strlen(v79) + -4);\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v179 = v224;\n
    v178 = a0;\n
    *(&v176[0]) = *(v179);\n
    memset(&v175, 0, 12);\n
    if (*(v178) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v176[0] << 24)\n
    {\n
        v6 = 0;\n
        if (v176[1] << 16)\n
        {\n
            v6 = 0;\n
            if (v176[2] << 8)\n
                v6 = v176[3];\n
        }\n
    }\n
    v177 = v6 & 1;\n
    cgc_uint2str(&v175, 12, v177);\n
    v5 = &v175;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v175)) < 0)\n
        cgc__terminate();\n
    v316 = v178;\n
    *(v316) = *(v316) - 4;\n
    v317 = v179;\n
    *(v317) = &*(v317)->field_4;\n
    v162 = v224;\n
    v161 = a0;\n
    if (*(v161) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v160 = *(&*(v162)->field_0);\n
    v318 = v161;\n
    *(v318) = *(v318) - 2;\n
    v319 = v162;\n
    *(v319) = &*(v319)->padding_1[1];\n
    if (v160 <= *(v161) && !(!v160))\n
        goto LABEL_4b30a9;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b30a9:\n
    v159 = cgc_calloc(v160);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v159, *(v162), v160);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v320 = v161;\n
    *(v320) = *(v320) - v160;\n
    v321 = v162;\n
    *(v321) = &(&*(v321)->field_0)[v160];\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    v196 = v224;\n
    v195 = a0;\n
    memset(&v192, 0, 21);\n
    if (*(v195) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v322 = *(v196);\n
    v194 = v322->field_4;\n
    v193 = *(&v322->field_0);\n
    cgc_uint2str(&v192, 21, v193);\n
    v4 = &v192;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v192)) < 0)\n
        cgc__terminate();\n
    v323 = v195;\n
    *(v323) = *(v323) - 8;\n
    v324 = v196;\n
    *(v324) = &(*(v324))[1].padding_1[2];\n
    v118 = v224;\n
    v117 = a0;\n
    memset(&v115, 0, 21);\n
    if (*(v117) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v116 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-974, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v115, 21, v45);\n
    v3 = &v115;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v325 = v117;\n
    *(v325) = *(v325) - 8;\n
    v326 = v118;\n
    *(v326) = &(*(v326))[1].padding_1[2];\n
    v187 = v224;\n
    v186 = a0;\n
    if (*(v186) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v186) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v186);\n
    v185 = v2;\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v184 = cgc_calloc(134);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v184, &v32[18].padding_0[182]);\n
    cgc_strncpy(v184 + 5, *(v187), v185);\n
    v328 = v187;\n
    *(v328) = &(&*(v328)->field_4)[cgc_strlen(v184)];\n
    v330 = v186;\n
    *(v330) = *(v330) - (cgc_strlen(v184) + -4);\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v183 = v224;\n
    v182 = a0;\n
    if (*(v182) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v182) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v182);\n
    v181 = v1;\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v180 = cgc_calloc(134);\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v180, &v32[18].padding_0[182]);\n
    cgc_strncpy(v180 + 5, *(v183), v181);\n
    v332 = v183;\n
    *(v332) = &(&*(v332)->field_4)[cgc_strlen(v180)];\n
    v334 = v182;\n
    *(v334) = *(v334) - (cgc_strlen(v180) + -4);\n
    cgc_checkheap();\n
    cgc_free(v180);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v158 = v224;\n
    v157 = a0;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = *(&*(v158)->field_0);\n
    v335 = v157;\n
    *(v335) = *(v335) - 2;\n
    v336 = v158;\n
    *(v336) = &*(v336)->padding_1[1];\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_4b3aa5;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b3aa5:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v337 = v157;\n
    *(v337) = *(v337) - v156;\n
    v338 = v158;\n
    *(v338) = &(&*(v338)->field_0)[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v146 = v224;\n
    v145 = a0;\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(&*(v146)->field_0);\n
    v339 = v145;\n
    *(v339) = *(v339) - 2;\n
    v340 = v146;\n
    *(v340) = &*(v340)->padding_1[1];\n
    if (v144 <= *(v145) && !(!v144))\n
        goto LABEL_4b3cdf;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b3cdf:\n
    v143 = cgc_calloc(v144);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v143, *(v146), v144);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v341 = v145;\n
    *(v341) = *(v341) - v144;\n
    v342 = v146;\n
    *(v342) = &(&*(v342)->field_0)[v144];\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    v90 = v224;\n
    v89 = a0;\n
    memset(&v87, 0, 6);\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 6, v88);\n
    v0 = &v87;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v343 = v89;\n
    *(v343) = *(v343) - 2;\n
    v344 = v90;\n
    *(v344) = &*(v344)->padding_1[1];\n
    v52 ^= v32->field_260;\n
    if (v52)\n
        cgc___stack_cookie_fail();\n
    v345 = a0;\n
    if (*(v345) > 0 && v51 >= 0 && v51 < 0)\n
        v345 = *((&v53 + 0x4 * v51))(v224);\n
    v346 = v223;\n
    return v345;\n
}\n
", "4931530:sub_4b3fca": null, "4931536:cgc_process_llamacolophonite": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamacolophonite(struct struct_0 **v131, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x27c]\n
    struct_1 *v1;  // [bp-0x278]\n
    char v2;  // [bp-0x271]\n
    struct_1 *v3;  // [bp-0x270]\n
    struct_1 *v4;  // [bp-0x26c]\n
    char v5;  // [bp-0x265]\n
    struct_1 *v6;  // [bp-0x264]\n
    struct_1 *v7;  // [bp-0x260]\n
    struct_1 *v8;  // [bp-0x25c]\n
    struct_1 *v9;  // [bp-0x258]\n
    unsigned int v10;  // [bp-0x254]\n
    unsigned int v11;  // [bp-0x250]\n
    unsigned int v12;  // [bp-0x24c]\n
    unsigned int v13;  // [bp-0x248]\n
    unsigned int v14;  // [bp-0x244]\n
    struct_1 *v15;  // [bp-0x240]\n
    unsigned int v16;  // [bp-0x23c]\n
    struct_1 *v17;  // [bp-0x238]\n
    struct_1 *v18;  // [bp-0x234]\n
    char v19;  // [bp-0x22d]\n
    struct_1 *v20;  // [bp-0x22c]\n
    struct_1 *v21;  // [bp-0x228]\n
    struct_1 *v22;  // [bp-0x224]\n
    struct_2 *v23;  // [bp-0x220]\n
    unsigned short v24;  // [bp-0x21c]\n
    unsigned short v25;  // [bp-0x21a]\n
    unsigned short v26;  // [bp-0x218]\n
    unsigned short v27;  // [bp-0x216]\n
    unsigned long v28;  // [bp-0x214]\n
    unsigned long v29;  // [bp-0x20c]\n
    struct struct_3 **v30;  // [bp-0x200]\n
    unsigned int v31;  // [bp-0x1fc]\n
    char v32;  // [bp-0x1f8]\n
    char v33;  // [bp-0x1f6]\n
    char *v34;  // [bp-0x1f0]\n
    unsigned short v35;  // [bp-0x1ea]\n
    unsigned int *v36;  // [bp-0x1e8]\n
    struct struct_0 **v37;  // [bp-0x1e4]\n
    char v38;  // [bp-0x1dd]\n
    char v39[8];  // [bp-0x1c8]\n
    unsigned int v40;  // [bp-0x1c4]\n
    void* v41;  // [bp-0x1c0]\n
    unsigned int *v42;  // [bp-0x1b8]\n
    struct struct_0 **v43;  // [bp-0x1b4]\n
    char v44;  // [bp-0x1ad]\n
    char v45[8];  // [bp-0x198]\n
    unsigned int v46;  // [bp-0x194]\n
    void* v47;  // [bp-0x190]\n
    unsigned int *v48;  // [bp-0x18c]\n
    struct struct_0 **v49;  // [bp-0x188]\n
    char *v50;  // [bp-0x184]\n
    unsigned int v51;  // [bp-0x180]\n
    unsigned int *v52;  // [bp-0x17c]\n
    struct struct_0 **v53;  // [bp-0x178]\n
    char *v54;  // [bp-0x174]\n
    unsigned int v55;  // [bp-0x170]\n
    unsigned int *v56;  // [bp-0x16c]\n
    struct struct_0 **v57;  // [bp-0x168]\n
    char *v58;  // [bp-0x164]\n
    unsigned int v59;  // [bp-0x160]\n
    unsigned int *v60;  // [bp-0x15c]\n
    struct struct_0 **v61;  // [bp-0x158]\n
    char v62;  // [bp-0x154]\n
    unsigned short v63;  // [bp-0x14e]\n
    unsigned int *v64;  // [bp-0x14c]\n
    struct struct_0 **v65;  // [bp-0x148]\n
    char v66;  // [bp-0x144]\n
    unsigned short v67;  // [bp-0x13e]\n
    unsigned int *v68;  // [bp-0x13c]\n
    struct struct_0 **v69;  // [bp-0x138]\n
    char v70;  // [bp-0x131]\n
    char v71;  // [bp-0x12d]\n
    unsigned int *v72;  // [bp-0x12c]\n
    struct struct_0 **v73;  // [bp-0x128]\n
    char v74;  // [bp-0x121]\n
    char v75;  // [bp-0x11d]\n
    unsigned int *v76;  // [bp-0x11c]\n
    struct struct_0 **v77;  // [bp-0x118]\n
    char v78;  // [bp-0x111]\n
    char v79;  // [bp-0x10d]\n
    unsigned int *v80;  // [bp-0x10c]\n
    struct struct_0 **v81;  // [bp-0x108]\n
    char v82;  // [bp-0x101]\n
    char v83;  // [bp-0xfd]\n
    unsigned int *v84;  // [bp-0xfc]\n
    struct struct_0 **v85;  // [bp-0xf8]\n
    char v86;  // [bp-0xf1]\n
    unsigned long v87;  // [bp-0xdc]\n
    unsigned int *v88;  // [bp-0xd0]\n
    struct struct_0 **v89;  // [bp-0xcc]\n
    char v90;  // [bp-0xc8]\n
    unsigned int v91;  // [bp-0xbc]\n
    unsigned int *v92;  // [bp-0xb8]\n
    struct struct_0 **v93;  // [bp-0xb4]\n
    char v94;  // [bp-0xb0]\n
    unsigned int v95;  // [bp-0xa4]\n
    unsigned int *v96;  // [bp-0xa0]\n
    struct struct_0 **v97;  // [bp-0x9c]\n
    char v98;  // [bp-0x98]\n
    unsigned int v99;  // [bp-0x8c]\n
    unsigned int *v100;  // [bp-0x88]\n
    struct struct_0 **v101;  // [bp-0x84]\n
    char v102;  // [bp-0x80]\n
    unsigned int v103;  // [bp-0x74]\n
    unsigned int *v104;  // [bp-0x70]\n
    struct struct_0 **v105;  // [bp-0x6c]\n
    unsigned int v106;  // [bp-0x68]\n
    unsigned short v107;  // [bp-0x62]\n
    unsigned int *v108;  // [bp-0x60]\n
    struct struct_0 **v109;  // [bp-0x5c]\n
    unsigned int v110;  // [bp-0x58]\n
    unsigned short v111;  // [bp-0x52]\n
    unsigned int *v112;  // [bp-0x50]\n
    struct struct_0 **v113;  // [bp-0x4c]\n
    char *v114;  // [bp-0x48]\n
    unsigned int v115;  // [bp-0x44]\n
    unsigned int *v116;  // [bp-0x40]\n
    struct struct_0 **v117;  // [bp-0x3c]\n
    char *v118;  // [bp-0x38]\n
    unsigned int v119;  // [bp-0x34]\n
    unsigned int *v120;  // [bp-0x30]\n
    struct struct_0 **v121;  // [bp-0x2c]\n
    char *v122;  // [bp-0x28]\n
    unsigned int v123;  // [bp-0x24]\n
    unsigned int *v124;  // [bp-0x20]\n
    struct struct_0 **v125;  // [bp-0x1c]\n
    unsigned int v126;  // [bp-0x18]\n
    char v127;  // [bp-0x11]\n
    unsigned int *v128;  // [bp-0x10]\n
    struct struct_0 **v129;  // [bp-0xc]\n
    unsigned int v130;  // [bp-0x8]\n
    unsigned int v132;  // ebx\n
    unsigned int *v133;  // eax\n
    struct struct_0 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_0 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_0 **v138;  // eax\n
    unsigned int *v139;  // eax\n
    struct struct_0 **v140;  // eax\n
    unsigned int *v141;  // eax\n
    struct struct_0 **v142;  // eax\n
    struct struct_0 **v144;  // eax\n
    unsigned int *v146;  // eax\n
    unsigned int *v147;  // eax\n
    struct struct_0 **v148;  // eax\n
    struct struct_0 **v150;  // eax\n
    unsigned int *v152;  // eax\n
    unsigned int *v153;  // eax\n
    struct struct_0 **v154;  // eax\n
    unsigned int *v155;  // eax\n
    struct struct_0 **v156;  // eax\n
    struct struct_0 **v158;  // eax\n
    unsigned int *v160;  // eax\n
    unsigned int *v161;  // eax\n
    struct struct_0 **v162;  // eax\n
    unsigned int *v163;  // eax\n
    struct struct_0 **v164;  // eax\n
    struct struct_0 **v166;  // eax\n
    unsigned int *v168;  // eax\n
    struct struct_0 **v170;  // eax\n
    unsigned int *v172;  // eax\n
    struct struct_0 **v174;  // eax\n
    unsigned int *v176;  // eax\n
    unsigned int *v177;  // eax\n
    struct struct_0 **v178;  // eax\n
    struct struct_0 **v179;  // eax\n
    unsigned int *v180;  // eax\n
    unsigned int *v181;  // eax\n
    struct struct_0 **v182;  // eax\n
    unsigned int *v183;  // eax\n
    struct struct_0 **v184;  // eax\n
    unsigned int *v185;  // eax\n
    struct struct_0 **v186;  // eax\n
    unsigned int *v187;  // eax\n
    struct struct_0 **v188;  // eax\n
    unsigned int *v189;  // eax\n
    struct struct_0 **v190;  // eax\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    unsigned int *v195;  // eax\n
    struct struct_0 **v196;  // eax\n
    unsigned int *v197;  // eax, Other Possible Types: unsigned int\n
    unsigned int v198;  // ebx\n
\n
    v130 = v132;\n
    v23 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v31 = cgc__cookie;\n
    v30 = -1;\n
    if (cgc_sendline(1, \"===llamacolophonite===\", 22) < 0)\n
        cgc__terminate();\n
    v69 = v131;\n
    v68 = a0;\n
    memset(&v66, 0, 6);\n
    if (*(v68) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(&*(v69)->field_0);\n
    cgc_uint2str(&v66, 6, v67);\n
    v22 = &v66;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v133 = v68;\n
    *(v133) = *(v133) - 2;\n
    v134 = v69;\n
    *(v134) = &*(v134)->padding_1[1];\n
    v101 = v131;\n
    v100 = a0;\n
    memset(&v98, 0, 12);\n
    if (*(v100) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(&*(v101)->field_0);\n
    cgc_uint2str(&v98, 12, v99);\n
    v21 = &v98;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v135 = v100;\n
    *(v135) = *(v135) - 4;\n
    v136 = v101;\n
    *(v136) = &*(v136)->field_4;\n
    v85 = v131;\n
    v84 = a0;\n
    memset(&v82, 0, 4);\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(v85)->field_0;\n
    cgc_uint2str(&v82, 4, v83);\n
    v20 = &v82;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v137 = v84;\n
    *(v137) = *(v137) - 1;\n
    v138 = v85;\n
    *(v138) = &*(v138)->padding_1;\n
    v49 = v131;\n
    v48 = a0;\n
    *(&v45[0]) = *(v49);\n
    memset(&v44, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v45[0])\n
    {\n
        v19 = 0;\n
        if (v45[1])\n
        {\n
            v19 = 0;\n
            if (v45[2])\n
            {\n
                v19 = 0;\n
                if (v45[3])\n
                {\n
                    v19 = 0;\n
                    if (v45[4] << 24)\n
                    {\n
                        v19 = 0;\n
                        if (v45[5] << 16)\n
                        {\n
                            v19 = 0;\n
                            if (v45[6] << 8)\n
                                v19 = v45[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v46 = v19 & 1;\n
    v47 = 0;\n
    cgc_uint2str(&v44, 21, v46);\n
    v18 = &v44;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v139 = v48;\n
    *(v139) = *(v139) - 8;\n
    v140 = v49;\n
    *(v140) = *(v140) + 1;\n
    v81 = v131;\n
    v80 = a0;\n
    memset(&v78, 0, 4);\n
    if (*(v80) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(v81)->field_0;\n
    cgc_uint2str(&v78, 4, v79);\n
    v17 = &v78;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v141 = v80;\n
    *(v141) = *(v141) - 1;\n
    v142 = v81;\n
    *(v142) = &*(v142)->padding_1;\n
    v125 = v131;\n
    v124 = a0;\n
    if (*(v124) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v124) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v124);\n
    v123 = v16;\n
    if (!v123)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = cgc_calloc(134);\n
    if (!v122)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v122, &v23[18].padding_0[182]);\n
    cgc_strncpy(v122 + 5, *(v125), v123);\n
    v144 = v125;\n
    *(v144) = &(&*(v144)->field_4)[cgc_strlen(v122)];\n
    v146 = v124;\n
    *(v146) = *(v146) - (cgc_strlen(v122) + -4);\n
    cgc_checkheap();\n
    cgc_free(v122);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v77 = v131;\n
    v76 = a0;\n
    memset(&v74, 0, 4);\n
    if (*(v76) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(v77)->field_0;\n
    cgc_uint2str(&v74, 4, v75);\n
    v15 = &v74;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v147 = v76;\n
    *(v147) = *(v147) - 1;\n
    v148 = v77;\n
    *(v148) = &*(v148)->padding_1;\n
    v61 = v131;\n
    v60 = a0;\n
    if (*(v60) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v60) >= 128)\n
        v14 = 128;\n
    else\n
        v14 = *(v60);\n
    v59 = v14;\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = cgc_calloc(134);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v58, &v23[18].padding_0[182]);\n
    cgc_strncpy(v58 + 5, *(v61), v59);\n
    v150 = v61;\n
    *(v150) = &(&*(v150)->field_4)[cgc_strlen(v58)];\n
    v152 = v60;\n
    *(v152) = *(v152) - (cgc_strlen(v58) + -4);\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v113 = v131;\n
    v112 = a0;\n
    if (*(v112) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = *(&*(v113)->field_0);\n
    v153 = v112;\n
    *(v153) = *(v153) - 2;\n
    v154 = v113;\n
    *(v154) = &*(v154)->padding_1[1];\n
    if (v111 <= *(v112) && !(!v111))\n
        goto LABEL_4b4e9f;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b4e9f:\n
    v110 = cgc_calloc(v111);\n
    if (!v110)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v110, *(v113), v111);\n
    if (cgc_sendline(1, &v23[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v155 = v112;\n
    *(v155) = *(v155) - v111;\n
    v156 = v113;\n
    *(v156) = &(&*(v156)->field_0)[v111];\n
    cgc_checkheap();\n
    cgc_free(v110);\n
    v121 = v131;\n
    v120 = a0;\n
    if (*(v120) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v120) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v120);\n
    v119 = v13;\n
    if (!v119)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = cgc_calloc(134);\n
    if (!v118)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v118, &v23[18].padding_0[182]);\n
    cgc_strncpy(v118 + 5, *(v121), v119);\n
    v158 = v121;\n
    *(v158) = &(&*(v158)->field_4)[cgc_strlen(v118)];\n
    v160 = v120;\n
    *(v160) = *(v160) - (cgc_strlen(v118) + -4);\n
    cgc_checkheap();\n
    cgc_free(v118);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v109 = v131;\n
    v108 = a0;\n
    if (*(v108) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(&*(v109)->field_0);\n
    v161 = v108;\n
    *(v161) = *(v161) - 2;\n
    v162 = v109;\n
    *(v162) = &*(v162)->padding_1[1];\n
    if (v107 <= *(v108) && !(!v107))\n
        goto LABEL_4b52e5;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b52e5:\n
    v106 = cgc_calloc(v107);\n
    if (!v106)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v106, *(v109), v107);\n
    if (cgc_sendline(1, &v23[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v163 = v108;\n
    *(v163) = *(v163) - v107;\n
    v164 = v109;\n
    *(v164) = &(&*(v164)->field_0)[v107];\n
    cgc_checkheap();\n
    cgc_free(v106);\n
    v57 = v131;\n
    v56 = a0;\n
    if (*(v56) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v56) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v56);\n
    v55 = v12;\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = cgc_calloc(134);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v54, &v23[18].padding_0[182]);\n
    cgc_strncpy(v54 + 5, *(v57), v55);\n
    v166 = v57;\n
    *(v166) = &(&*(v166)->field_4)[cgc_strlen(v54)];\n
    v168 = v56;\n
    *(v168) = *(v168) - (cgc_strlen(v54) + -4);\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v117 = v131;\n
    v116 = a0;\n
    if (*(v116) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v116) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v116);\n
    v115 = v11;\n
    if (!v115)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = cgc_calloc(134);\n
    if (!v114)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v114, &v23[18].padding_0[182]);\n
    cgc_strncpy(v114 + 5, *(v117), v115);\n
    v170 = v117;\n
    *(v170) = &(&*(v170)->field_4)[cgc_strlen(v114)];\n
    v172 = v116;\n
    *(v172) = *(v172) - (cgc_strlen(v114) + -4);\n
    cgc_checkheap();\n
    cgc_free(v114);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v53 = v131;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v52);\n
    v51 = v10;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v23[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v174 = v53;\n
    *(v174) = &(&*(v174)->field_4)[cgc_strlen(v50)];\n
    v176 = v52;\n
    *(v176) = *(v176) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v23[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v129 = v131;\n
    v128 = a0;\n
    if (*(v128) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(v129)->field_0;\n
    v177 = v128;\n
    *(v177) = *(v177) - 1;\n
    v178 = v129;\n
    *(v178) = &*(v178)->padding_1;\n
    if (v127 <= *(v128) && !(!v127))\n
        goto LABEL_4b5c2b;\n
    if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b5c2b:\n
    v126 = cgc_calloc(v127);\n
    if (!v126)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v126, *(v129), v127);\n
    if (cgc_sendline(1, &v23[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v179 = v129;\n
    *(v179) = &(&*(v179)->field_0)[v127];\n
    v180 = v128;\n
    *(v180) = *(v180) - v127;\n
    cgc_checkheap();\n
    cgc_free(v126);\n
    v89 = v131;\n
    v88 = a0;\n
    memset(&v86, 0, 21);\n
    if (*(v88) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v87 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v27 = [D] x86g_create_fpucw(fpround<4>);\n
    v26 = v27 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v86, 21, v29);\n
    v9 = &v86;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v86)) < 0)\n
        cgc__terminate();\n
    v181 = v88;\n
    *(v181) = *(v181) - 8;\n
    v182 = v89;\n
    *(v182) = *(v182) + 1;\n
    v105 = v131;\n
    v104 = a0;\n
    memset(&v102, 0, 12);\n
    if (*(v104) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v103 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v25 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-534, size=2, endness=Iend_LE)))));\n
    v24 = v25 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v102, 12, v28);\n
    v8 = &v102;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v183 = v104;\n
    *(v183) = *(v183) - 4;\n
    v184 = v105;\n
    *(v184) = &*(v184)->field_4;\n
    v97 = v131;\n
    v96 = a0;\n
    memset(&v94, 0, 12);\n
    if (*(v96) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(&*(v97)->field_0);\n
    cgc_uint2str(&v94, 12, v95);\n
    v7 = &v94;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v94)) < 0)\n
        cgc__terminate();\n
    v185 = v96;\n
    *(v185) = *(v185) - 4;\n
    v186 = v97;\n
    *(v186) = &*(v186)->field_4;\n
    v73 = v131;\n
    v72 = a0;\n
    memset(&v70, 0, 4);\n
    if (*(v72) < 1)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(v73)->field_0;\n
    cgc_uint2str(&v70, 4, v71);\n
    v6 = &v70;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v187 = v72;\n
    *(v187) = *(v187) - 1;\n
    v188 = v73;\n
    *(v188) = &*(v188)->padding_1;\n
    v37 = v131;\n
    v36 = a0;\n
    v34 = &*(v37)->field_0;\n
    memset(&v33, 0, 6);\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (*(v34) << 8)\n
        v5 = v34[1];\n
    v35 = v5 & 1;\n
    cgc_uint2str(&v33, 6, v35);\n
    v4 = &v33;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v33)) < 0)\n
        cgc__terminate();\n
    v189 = v36;\n
    *(v189) = *(v189) - 2;\n
    v190 = v37;\n
    *(v190) = &*(v190)->padding_1[1];\n
    v93 = v131;\n
    v92 = a0;\n
    memset(&v90, 0, 12);\n
    if (*(v92) < 4)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(&*(v93)->field_0);\n
    cgc_uint2str(&v90, 12, v91);\n
    v3 = &v90;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v90)) < 0)\n
        cgc__terminate();\n
    v191 = v92;\n
    *(v191) = *(v191) - 4;\n
    v192 = v93;\n
    *(v192) = &*(v192)->field_4;\n
    v43 = v131;\n
    v42 = a0;\n
    *(&v39[0]) = *(v43);\n
    memset(&v38, 0, 21);\n
    if (*(v42) < 8)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v39[0])\n
    {\n
        v2 = 0;\n
        if (v39[1])\n
        {\n
            v2 = 0;\n
            if (v39[2])\n
            {\n
                v2 = 0;\n
                if (v39[3])\n
                {\n
                    v2 = 0;\n
                    if (v39[4] << 24)\n
                    {\n
                        v2 = 0;\n
                        if (v39[5] << 16)\n
                        {\n
                            v2 = 0;\n
                            if (v39[6] << 8)\n
                                v2 = v39[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v40 = v2 & 1;\n
    v41 = 0;\n
    cgc_uint2str(&v38, 21, v40);\n
    v1 = &v38;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v193 = v42;\n
    *(v193) = *(v193) - 8;\n
    v194 = v43;\n
    *(v194) = *(v194) + 1;\n
    v65 = v131;\n
    v64 = a0;\n
    memset(&v62, 0, 6);\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, &v23[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(&*(v65)->field_0);\n
    cgc_uint2str(&v62, 6, v63);\n
    v0 = &v62;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v195 = v64;\n
    *(v195) = *(v195) - 2;\n
    v196 = v65;\n
    *(v196) = &*(v196)->padding_1[1];\n
    v31 ^= v23->field_260;\n
    if (v31)\n
        cgc___stack_cookie_fail();\n
    v197 = a0;\n
    if (*(v197) > 0 && v30 >= 0 && v30 < 0)\n
        v197 = *((&v32 + 0x4 * v30))(v131);\n
    v198 = v130;\n
    return v197;\n
}\n
", "4942162:sub_4b6952": null, "4942176:cgc_process_llamadiscretion": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamadiscretion(struct struct_0 **v42, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xc4]\n
    struct_1 *v1;  // [bp-0xc0]\n
    char v2;  // [bp-0xb9]\n
    struct_1 *v3;  // [bp-0xb8]\n
    struct_1 *v4;  // [bp-0xb4]\n
    char v5;  // [bp-0xad]\n
    struct_2 *v6;  // [bp-0xac]\n
    struct struct_3 **v7;  // [bp-0xa8]\n
    unsigned int v8;  // [bp-0xa4]\n
    char v9;  // [bp-0xa0]\n
    char v10;  // [bp-0x9e]\n
    char v11[2];  // [bp-0x98]\n
    unsigned short v12;  // [bp-0x92]\n
    unsigned int *v13;  // [bp-0x90]\n
    struct struct_0 **v14;  // [bp-0x8c]\n
    char v15;  // [bp-0x85]\n
    char v16[8];  // [bp-0x70]\n
    unsigned int v17;  // [bp-0x6c]\n
    void* v18;  // [bp-0x68]\n
    unsigned int *v19;  // [bp-0x60]\n
    struct struct_0 **v20;  // [bp-0x5c]\n
    unsigned int v21;  // [bp-0x58]\n
    char v22;  // [bp-0x51]\n
    unsigned int *v23;  // [bp-0x50]\n
    struct struct_0 **v24;  // [bp-0x4c]\n
    char v25;  // [bp-0x48]\n
    unsigned short v26;  // [bp-0x42]\n
    unsigned int *v27;  // [bp-0x40]\n
    struct struct_0 **v28;  // [bp-0x3c]\n
    char v29;  // [bp-0x35]\n
    char v30;  // [bp-0x31]\n
    unsigned int *v31;  // [bp-0x30]\n
    struct struct_0 **v32;  // [bp-0x2c]\n
    unsigned int v33;  // [bp-0x28]\n
    unsigned short v34;  // [bp-0x22]\n
    unsigned int *v35;  // [bp-0x20]\n
    struct struct_0 **v36;  // [bp-0x1c]\n
    unsigned int v37;  // [bp-0x18]\n
    char v38;  // [bp-0x11]\n
    unsigned int *v39;  // [bp-0x10]\n
    struct struct_0 **v40;  // [bp-0xc]\n
    unsigned int v41;  // [bp-0x8]\n
    unsigned int v43;  // ebx\n
    unsigned int *v44;  // eax\n
    struct struct_0 **v45;  // eax\n
    struct struct_0 **v46;  // eax\n
    unsigned int *v47;  // eax\n
    unsigned int *v48;  // eax\n
    struct struct_0 **v49;  // eax\n
    unsigned int *v50;  // eax\n
    struct struct_0 **v51;  // eax\n
    unsigned int *v52;  // eax\n
    struct struct_0 **v53;  // eax\n
    unsigned int *v54;  // eax\n
    struct struct_0 **v55;  // eax\n
    unsigned int *v56;  // eax\n
    struct struct_0 **v57;  // eax\n
    unsigned int *v58;  // eax\n
    struct struct_0 **v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    unsigned int *v61;  // eax\n
    unsigned int *v62;  // eax\n
    struct struct_0 **v63;  // eax\n
    unsigned int *v64;  // eax, Other Possible Types: unsigned int\n
    unsigned int v65;  // ebx\n
\n
    v41 = v43;\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc__cookie;\n
    v7 = -1;\n
    if (cgc_sendline(1, \"===llamadiscretion===\", 21) < 0)\n
        cgc__terminate();\n
    v24 = v42;\n
    v23 = a0;\n
    if (*(v23) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = *(v24)->field_0;\n
    v44 = v23;\n
    *(v44) = *(v44) - 1;\n
    v45 = v24;\n
    *(v45) = &*(v45)->padding_1;\n
    if (v22 <= *(v23) && !(!v22))\n
        goto LABEL_4b6acd;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b6acd:\n
    v21 = cgc_calloc(v22);\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v21, *(v24), v22);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v46 = v24;\n
    *(v46) = &(&*(v46)->field_0)[v22];\n
    v47 = v23;\n
    *(v47) = *(v47) - v22;\n
    cgc_checkheap();\n
    cgc_free(v21);\n
    v20 = v42;\n
    v19 = a0;\n
    *(&v16[0]) = *(v20);\n
    memset(&v15, 0, 21);\n
    if (*(v19) < 8)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v16[0])\n
    {\n
        v5 = 0;\n
        if (v16[1])\n
        {\n
            v5 = 0;\n
            if (v16[2])\n
            {\n
                v5 = 0;\n
                if (v16[3])\n
                {\n
                    v5 = 0;\n
                    if (v16[4] << 24)\n
                    {\n
                        v5 = 0;\n
                        if (v16[5] << 16)\n
                        {\n
                            v5 = 0;\n
                            if (v16[6] << 8)\n
                                v5 = v16[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v17 = v5 & 1;\n
    v18 = 0;\n
    cgc_uint2str(&v15, 21, v17);\n
    v4 = &v15;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v15)) < 0)\n
        cgc__terminate();\n
    v48 = v19;\n
    *(v48) = *(v48) - 8;\n
    v49 = v20;\n
    *(v49) = *(v49) + 1;\n
    v32 = v42;\n
    v31 = a0;\n
    memset(&v29, 0, 4);\n
    if (*(v31) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = *(v32)->field_0;\n
    cgc_uint2str(&v29, 4, v30);\n
    v3 = &v29;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v50 = v31;\n
    *(v50) = *(v50) - 1;\n
    v51 = v32;\n
    *(v51) = &*(v51)->padding_1;\n
    v14 = v42;\n
    v13 = a0;\n
    *(&v11) = *(v14);\n
    memset(&v10, 0, 6);\n
    if (*(v13) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v11[0] << 8)\n
        v2 = v11[1];\n
    v12 = v2 & 1;\n
    cgc_uint2str(&v10, 6, v12);\n
    v1 = &v10;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v10)) < 0)\n
        cgc__terminate();\n
    v52 = v13;\n
    *(v52) = *(v52) - 2;\n
    v53 = v14;\n
    *(v53) = &*(v53)->field_2;\n
    v36 = v42;\n
    v35 = a0;\n
    if (*(v35) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v34 = *(&*(v36)->field_0);\n
    v54 = v35;\n
    *(v54) = *(v54) - 2;\n
    v55 = v36;\n
    *(v55) = &*(v55)->field_2;\n
    if (v34 <= *(v35) && !(!v34))\n
        goto LABEL_4b7181;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b7181:\n
    v33 = cgc_calloc(v34);\n
    if (!v33)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v33, *(v36), v34);\n
    if (cgc_sendline(1, &v6[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v56 = v35;\n
    *(v56) = *(v56) - v34;\n
    v57 = v36;\n
    *(v57) = &(&*(v57)->field_0)[v34];\n
    cgc_checkheap();\n
    cgc_free(v33);\n
    v40 = v42;\n
    v39 = a0;\n
    if (*(v39) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v38 = *(v40)->field_0;\n
    v58 = v39;\n
    *(v58) = *(v58) - 1;\n
    v59 = v40;\n
    *(v59) = &*(v59)->padding_1;\n
    if (v38 <= *(v39) && !(!v38))\n
        goto LABEL_4b737a;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b737a:\n
    v37 = cgc_calloc(v38);\n
    if (!v37)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v37, *(v40), v38);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v60 = v40;\n
    *(v60) = &(&*(v60)->field_0)[v38];\n
    v61 = v39;\n
    *(v61) = *(v61) - v38;\n
    cgc_checkheap();\n
    cgc_free(v37);\n
    v28 = v42;\n
    v27 = a0;\n
    memset(&v25, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = *(&*(v28)->field_0);\n
    cgc_uint2str(&v25, 6, v26);\n
    v0 = &v25;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v62 = v27;\n
    *(v62) = *(v62) - 2;\n
    v63 = v28;\n
    *(v63) = &*(v63)->field_2;\n
    v8 ^= v6->field_260;\n
    if (v8)\n
        cgc___stack_cookie_fail();\n
    v64 = a0;\n
    if (*(v64) > 0 && v7 >= 0 && v7 < 0)\n
        v64 = *((&v9 + 0x4 * v7))(v42);\n
    v65 = v41;\n
    return v64;\n
}\n
", "4945440:cgc_process_llamafurnishable": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamafurnishable(unsigned int v5, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct struct_0 **v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc__cookie;\n
    v1 = -1;\n
    if (cgc_sendline(1, \"===llamafurnishable===\", 22) < 0)\n
        cgc__terminate();\n
    v2 ^= v0->field_260;\n
    if (v2)\n
        cgc___stack_cookie_fail();\n
    v7 = a0;\n
    if (*(v7) > 0 && v1 >= 0 && v1 < 0)\n
        v7 = *((&v3 + 0x4 * v1))(v5);\n
    v8 = v4;\n
    return v7;\n
}\n
", "4945643:sub_4b76eb": null, "4945648:cgc_process_llamacombatable": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamacombatable(struct struct_0 **v101, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x21c]\n
    struct_1 *v1;  // [bp-0x218]\n
    char v2;  // [bp-0x211]\n
    struct_1 *v3;  // [bp-0x210]\n
    struct_1 *v4;  // [bp-0x20c]\n
    unsigned int v5;  // [bp-0x208]\n
    struct_1 *v6;  // [bp-0x204]\n
    char v7;  // [bp-0x1fd]\n
    struct_1 *v8;  // [bp-0x1fc]\n
    struct_1 *v9;  // [bp-0x1f8]\n
    struct_1 *v10;  // [bp-0x1f4]\n
    struct_1 *v11;  // [bp-0x1f0]\n
    char v12;  // [bp-0x1e9]\n
    struct_1 *v13;  // [bp-0x1e8]\n
    char v14;  // [bp-0x1e1]\n
    struct_1 *v15;  // [bp-0x1e0]\n
    char v16;  // [bp-0x1d9]\n
    struct_1 *v17;  // [bp-0x1d8]\n
    struct_1 *v18;  // [bp-0x1d4]\n
    struct_2 *v19;  // [bp-0x1d0]\n
    unsigned short v20;  // [bp-0x1cc]\n
    unsigned short v21;  // [bp-0x1ca]\n
    unsigned short v22;  // [bp-0x1c8]\n
    unsigned short v23;  // [bp-0x1c6]\n
    unsigned long v24;  // [bp-0x1c4]\n
    unsigned long v25;  // [bp-0x1bc]\n
    struct struct_3 **v26;  // [bp-0x1b0]\n
    unsigned int v27;  // [bp-0x1ac]\n
    char v28;  // [bp-0x1a8]\n
    char v29;  // [bp-0x1a6]\n
    char v30[2];  // [bp-0x1a0]\n
    unsigned short v31;  // [bp-0x19a]\n
    unsigned int *v32;  // [bp-0x198]\n
    struct struct_0 **v33;  // [bp-0x194]\n
    char v34;  // [bp-0x18d]\n
    char v35[8];  // [bp-0x178]\n
    unsigned int v36;  // [bp-0x174]\n
    void* v37;  // [bp-0x170]\n
    unsigned int *v38;  // [bp-0x168]\n
    struct struct_0 **v39;  // [bp-0x164]\n
    char v40;  // [bp-0x15d]\n
    char v41[8];  // [bp-0x148]\n
    unsigned int v42;  // [bp-0x144]\n
    void* v43;  // [bp-0x140]\n
    unsigned int *v44;  // [bp-0x13c]\n
    struct struct_0 **v45;  // [bp-0x138]\n
    char v46;  // [bp-0x134]\n
    unsigned short v47;  // [bp-0x12e]\n
    unsigned int *v48;  // [bp-0x12c]\n
    struct struct_0 **v49;  // [bp-0x128]\n
    char v50;  // [bp-0x121]\n
    char v51;  // [bp-0x11d]\n
    unsigned int *v52;  // [bp-0x11c]\n
    struct struct_0 **v53;  // [bp-0x118]\n
    char v54;  // [bp-0x111]\n
    unsigned long v55;  // [bp-0xfc]\n
    unsigned int *v56;  // [bp-0xf0]\n
    struct struct_0 **v57;  // [bp-0xec]\n
    char v58;  // [bp-0xe8]\n
    unsigned int v59;  // [bp-0xdc]\n
    unsigned int *v60;  // [bp-0xd8]\n
    struct struct_0 **v61;  // [bp-0xd4]\n
    char v62;  // [bp-0xd0]\n
    unsigned int v63;  // [bp-0xc4]\n
    unsigned int *v64;  // [bp-0xc0]\n
    struct struct_0 **v65;  // [bp-0xbc]\n
    char v66;  // [bp-0xb8]\n
    unsigned int v67;  // [bp-0xac]\n
    unsigned int *v68;  // [bp-0xa8]\n
    struct struct_0 **v69;  // [bp-0xa4]\n
    char v70;  // [bp-0xa0]\n
    unsigned int v71;  // [bp-0x94]\n
    unsigned int *v72;  // [bp-0x90]\n
    struct struct_0 **v73;  // [bp-0x8c]\n
    char v74;  // [bp-0x88]\n
    unsigned int v75;  // [bp-0x7c]\n
    unsigned int *v76;  // [bp-0x78]\n
    struct struct_0 **v77;  // [bp-0x74]\n
    unsigned int v78;  // [bp-0x70]\n
    unsigned short v79;  // [bp-0x6a]\n
    unsigned int *v80;  // [bp-0x68]\n
    struct struct_0 **v81;  // [bp-0x64]\n
    char v82;  // [bp-0x60]\n
    char v83[4];  // [bp-0x54]\n
    unsigned int v84;  // [bp-0x50]\n
    unsigned int *v85;  // [bp-0x4c]\n
    struct struct_0 **v86;  // [bp-0x48]\n
    char v87;  // [bp-0x44]\n
    char v88[4];  // [bp-0x38]\n
    unsigned int v89;  // [bp-0x34]\n
    unsigned int *v90;  // [bp-0x30]\n
    struct struct_0 **v91;  // [bp-0x2c]\n
    char *v92;  // [bp-0x28]\n
    unsigned int v93;  // [bp-0x24]\n
    unsigned int *v94;  // [bp-0x20]\n
    struct struct_0 **v95;  // [bp-0x1c]\n
    unsigned int v96;  // [bp-0x18]\n
    char v97;  // [bp-0x11]\n
    unsigned int *v98;  // [bp-0x10]\n
    struct struct_0 **v99;  // [bp-0xc]\n
    unsigned int v100;  // [bp-0x8]\n
    unsigned int v102;  // ebx\n
    unsigned int *v103;  // eax\n
    struct struct_0 **v104;  // eax\n
    unsigned int *v105;  // eax\n
    struct struct_0 **v106;  // eax\n
    unsigned int *v107;  // eax\n
    struct struct_0 **v108;  // eax\n
    unsigned int *v109;  // eax\n
    struct struct_0 **v110;  // eax\n
    unsigned int *v111;  // eax\n
    struct struct_0 **v112;  // eax\n
    unsigned int *v113;  // eax\n
    struct struct_0 **v114;  // eax\n
    unsigned int *v115;  // eax\n
    struct struct_0 **v116;  // eax\n
    unsigned int *v117;  // eax\n
    struct struct_0 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    struct struct_0 **v120;  // eax\n
    unsigned int *v121;  // eax\n
    struct struct_0 **v122;  // eax\n
    unsigned int *v123;  // eax\n
    struct struct_0 **v124;  // eax\n
    struct struct_0 **v126;  // eax\n
    unsigned int *v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_0 **v130;  // eax\n
    struct struct_0 **v131;  // eax\n
    unsigned int *v132;  // eax\n
    unsigned int *v133;  // eax\n
    struct struct_0 **v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_0 **v136;  // eax\n
    unsigned int *v137;  // eax\n
    struct struct_0 **v138;  // eax\n
    unsigned int *v139;  // eax\n
    struct struct_0 **v140;  // eax\n
    unsigned int *v141;  // eax, Other Possible Types: unsigned int\n
    unsigned int v142;  // ebx\n
\n
    v100 = v102;\n
    v19 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v27 = cgc__cookie;\n
    v26 = -1;\n
    if (cgc_sendline(1, \"===llamacombatable===\", 21) < 0)\n
        cgc__terminate();\n
    v73 = v101;\n
    v72 = a0;\n
    memset(&v70, 0, 12);\n
    if (*(v72) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = *(&*(v73)->field_0);\n
    cgc_uint2str(&v70, 12, v71);\n
    v18 = &v70;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v103 = v72;\n
    *(v103) = *(v103) - 4;\n
    v104 = v73;\n
    *(v104) = &*(v104)->field_4;\n
    v49 = v101;\n
    v48 = a0;\n
    memset(&v46, 0, 6);\n
    if (*(v48) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v47 = *(&*(v49)->field_0);\n
    cgc_uint2str(&v46, 6, v47);\n
    v17 = &v46;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v105 = v48;\n
    *(v105) = *(v105) - 2;\n
    v106 = v49;\n
    *(v106) = &*(v106)->padding_1[1];\n
    v91 = v101;\n
    v90 = a0;\n
    *(&v88[0]) = *(v91);\n
    memset(&v87, 0, 12);\n
    if (*(v90) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v88[0] << 24)\n
    {\n
        v16 = 0;\n
        if (v88[1] << 16)\n
        {\n
            v16 = 0;\n
            if (v88[2] << 8)\n
                v16 = v88[3];\n
        }\n
    }\n
    v89 = v16 & 1;\n
    cgc_uint2str(&v87, 12, v89);\n
    v15 = &v87;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v107 = v90;\n
    *(v107) = *(v107) - 4;\n
    v108 = v91;\n
    *(v108) = &*(v108)->field_4;\n
    v45 = v101;\n
    v44 = a0;\n
    *(&v41[0]) = *(v45);\n
    memset(&v40, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v41[0])\n
    {\n
        v14 = 0;\n
        if (v41[1])\n
        {\n
            v14 = 0;\n
            if (v41[2])\n
            {\n
                v14 = 0;\n
                if (v41[3])\n
                {\n
                    v14 = 0;\n
                    if (v41[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v41[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v41[6] << 8)\n
                                v14 = v41[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v42 = v14 & 1;\n
    v43 = 0;\n
    cgc_uint2str(&v40, 21, v42);\n
    v13 = &v40;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v40)) < 0)\n
        cgc__terminate();\n
    v109 = v44;\n
    *(v109) = *(v109) - 8;\n
    v110 = v45;\n
    *(v110) = *(v110) + 1;\n
    v86 = v101;\n
    v85 = a0;\n
    *(&v83[0]) = *(v86);\n
    memset(&v82, 0, 12);\n
    if (*(v85) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v12 = 0;\n
    if (v83[0] << 24)\n
    {\n
        v12 = 0;\n
        if (v83[1] << 16)\n
        {\n
            v12 = 0;\n
            if (v83[2] << 8)\n
                v12 = v83[3];\n
        }\n
    }\n
    v84 = v12 & 1;\n
    cgc_uint2str(&v82, 12, v84);\n
    v11 = &v82;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v111 = v85;\n
    *(v111) = *(v111) - 4;\n
    v112 = v86;\n
    *(v112) = &*(v112)->field_4;\n
    v57 = v101;\n
    v56 = a0;\n
    memset(&v54, 0, 21);\n
    if (*(v56) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v55 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v23 = [D] x86g_create_fpucw(fpround<4>);\n
    v22 = v23 | 0xc00;\n
    v25 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v54, 21, v25);\n
    v10 = &v54;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v113 = v56;\n
    *(v113) = *(v113) - 8;\n
    v114 = v57;\n
    *(v114) = *(v114) + 1;\n
    v81 = v101;\n
    v80 = a0;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(&*(v81)->field_0);\n
    v115 = v80;\n
    *(v115) = *(v115) - 2;\n
    v116 = v81;\n
    *(v116) = &*(v116)->padding_1[1];\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_4b81c0;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b81c0:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, &v19[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v117 = v80;\n
    *(v117) = *(v117) - v79;\n
    v118 = v81;\n
    *(v118) = &(&*(v118)->field_0)[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v53 = v101;\n
    v52 = a0;\n
    memset(&v50, 0, 4);\n
    if (*(v52) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v51 = *(v53)->field_0;\n
    cgc_uint2str(&v50, 4, v51);\n
    v9 = &v50;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v50)) < 0)\n
        cgc__terminate();\n
    v119 = v52;\n
    *(v119) = *(v119) - 1;\n
    v120 = v53;\n
    *(v120) = &*(v120)->padding_1;\n
    v69 = v101;\n
    v68 = a0;\n
    memset(&v66, 0, 12);\n
    if (*(v68) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(&*(v69)->field_0);\n
    cgc_uint2str(&v66, 12, v67);\n
    v8 = &v66;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v121 = v68;\n
    *(v121) = *(v121) - 4;\n
    v122 = v69;\n
    *(v122) = &*(v122)->field_4;\n
    v33 = v101;\n
    v32 = a0;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v30[0] << 8)\n
        v7 = v30[1];\n
    v31 = v7 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v6 = &v29;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v123 = v32;\n
    *(v123) = *(v123) - 2;\n
    v124 = v33;\n
    *(v124) = &*(v124)->padding_1[1];\n
    v95 = v101;\n
    v94 = a0;\n
    if (*(v94) <= 0)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v94) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v94);\n
    v93 = v5;\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = cgc_calloc(134);\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v92, &v19[18].padding_0[182]);\n
    cgc_strncpy(v92 + 5, *(v95), v93);\n
    v126 = v95;\n
    *(v126) = &(&*(v126)->field_4)[cgc_strlen(v92)];\n
    v128 = v94;\n
    *(v128) = *(v128) - (cgc_strlen(v92) + -4);\n
    cgc_checkheap();\n
    cgc_free(v92);\n
    if (cgc_sendline(1, &v19[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v99 = v101;\n
    v98 = a0;\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v97 = *(v99)->field_0;\n
    v129 = v98;\n
    *(v129) = *(v129) - 1;\n
    v130 = v99;\n
    *(v130) = &*(v130)->padding_1;\n
    if (v97 <= *(v98) && !(!v97))\n
        goto LABEL_4b8a12;\n
    if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b8a12:\n
    v96 = cgc_calloc(v97);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v96, *(v99), v97);\n
    if (cgc_sendline(1, &v19[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v131 = v99;\n
    *(v131) = &(&*(v131)->field_0)[v97];\n
    v132 = v98;\n
    *(v132) = *(v132) - v97;\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    v65 = v101;\n
    v64 = a0;\n
    memset(&v62, 0, 12);\n
    if (*(v64) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(&*(v65)->field_0);\n
    cgc_uint2str(&v62, 12, v63);\n
    v4 = &v62;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v133 = v64;\n
    *(v133) = *(v133) - 4;\n
    v134 = v65;\n
    *(v134) = &*(v134)->field_4;\n
    v77 = v101;\n
    v76 = a0;\n
    memset(&v74, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v75 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v21 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-454, size=2, endness=Iend_LE)))));\n
    v20 = v21 | 0xc00;\n
    v24 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v74, 12, v24);\n
    v3 = &v74;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v135 = v76;\n
    *(v135) = *(v135) - 4;\n
    v136 = v77;\n
    *(v136) = &*(v136)->field_4;\n
    v39 = v101;\n
    v38 = a0;\n
    *(&v35[0]) = *(v39);\n
    memset(&v34, 0, 21);\n
    if (*(v38) < 8)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v35[0])\n
    {\n
        v2 = 0;\n
        if (v35[1])\n
        {\n
            v2 = 0;\n
            if (v35[2])\n
            {\n
                v2 = 0;\n
                if (v35[3])\n
                {\n
                    v2 = 0;\n
                    if (v35[4] << 24)\n
                    {\n
                        v2 = 0;\n
                        if (v35[5] << 16)\n
                        {\n
                            v2 = 0;\n
                            if (v35[6] << 8)\n
                                v2 = v35[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v36 = v2 & 1;\n
    v37 = 0;\n
    cgc_uint2str(&v34, 21, v36);\n
    v1 = &v34;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v137 = v38;\n
    *(v137) = *(v137) - 8;\n
    v138 = v39;\n
    *(v138) = *(v138) + 1;\n
    v61 = v101;\n
    v60 = a0;\n
    memset(&v58, 0, 12);\n
    if (*(v60) < 4)\n
    {\n
        if (cgc_sendline(1, &v19[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(&*(v61)->field_0);\n
    cgc_uint2str(&v58, 12, v59);\n
    v0 = &v58;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v139 = v60;\n
    *(v139) = *(v139) - 4;\n
    v140 = v61;\n
    *(v140) = &*(v140)->field_4;\n
    v27 ^= v19->field_260;\n
    if (v27)\n
        cgc___stack_cookie_fail();\n
    v141 = a0;\n
    if (*(v141) > 0 && v26 >= 0 && v26 < 0)\n
        v141 = *((&v28 + 0x4 * v26))(v101);\n
    v142 = v100;\n
    return v141;\n
}\n
", "4952512:cgc_process_llamakirombo": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f03a0;\n
extern unsigned int g_4f03a4;\n
\n
int cgc_process_llamakirombo(struct struct_1 **v232, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x4a4]\n
    char v1;  // [bp-0x49d]\n
    struct_2 *v2;  // [bp-0x49c]\n
    struct_2 *v3;  // [bp-0x498]\n
    char v4;  // [bp-0x491]\n
    unsigned int v5;  // [bp-0x490]\n
    struct_2 *v6;  // [bp-0x48c]\n
    struct_2 *v7;  // [bp-0x488]\n
    struct_2 *v8;  // [bp-0x484]\n
    struct_2 *v9;  // [bp-0x480]\n
    struct_2 *v10;  // [bp-0x47c]\n
    unsigned int v11;  // [bp-0x478]\n
    struct_2 *v12;  // [bp-0x474]\n
    struct_2 *v13;  // [bp-0x470]\n
    char v14;  // [bp-0x469]\n
    unsigned int v15;  // [bp-0x468]\n
    unsigned int v16;  // [bp-0x464]\n
    struct_2 *v17;  // [bp-0x460]\n
    struct_2 *v18;  // [bp-0x45c]\n
    unsigned int v19;  // [bp-0x458]\n
    struct_2 *v20;  // [bp-0x454]\n
    struct_2 *v21;  // [bp-0x450]\n
    char v22;  // [bp-0x449]\n
    struct_2 *v23;  // [bp-0x448]\n
    struct_2 *v24;  // [bp-0x444]\n
    char v25;  // [bp-0x43d]\n
    unsigned int v26;  // [bp-0x43c]\n
    struct_2 *v27;  // [bp-0x438]\n
    struct_2 *v28;  // [bp-0x434]\n
    struct_2 *v29;  // [bp-0x430]\n
    struct_2 *v30;  // [bp-0x42c]\n
    struct_2 *v31;  // [bp-0x428]\n
    struct_2 *v32;  // [bp-0x424]\n
    char v33;  // [bp-0x41d]\n
    struct_2 *v34;  // [bp-0x41c]\n
    struct_3 *v35;  // [bp-0x418]\n
    unsigned short v36;  // [bp-0x414]\n
    unsigned short v37;  // [bp-0x412]\n
    unsigned short v38;  // [bp-0x410]\n
    unsigned short v39;  // [bp-0x40e]\n
    unsigned short v40;  // [bp-0x40c]\n
    unsigned short v41;  // [bp-0x40a]\n
    unsigned short v42;  // [bp-0x408]\n
    unsigned short v43;  // [bp-0x406]\n
    unsigned short v44;  // [bp-0x404]\n
    unsigned short v45;  // [bp-0x402]\n
    unsigned short v46;  // [bp-0x400]\n
    unsigned short v47;  // [bp-0x3fe]\n
    unsigned long v48;  // [bp-0x3fc]\n
    unsigned long v49;  // [bp-0x3f4]\n
    unsigned long v50;  // [bp-0x3ec]\n
    unsigned long v51;  // [bp-0x3e4]\n
    unsigned long v52;  // [bp-0x3dc]\n
    unsigned long v53;  // [bp-0x3d4]\n
    struct struct_0 **v54;  // [bp-0x3c8], Other Possible Types: unsigned int\n
    unsigned int v55;  // [bp-0x3c4]\n
    unsigned int v56;  // [bp-0x3c0]\n
    unsigned int v57;  // [bp-0x3bc]\n
    char v58;  // [bp-0x3b6]\n
    char v59[2];  // [bp-0x3b0]\n
    unsigned short v60;  // [bp-0x3aa]\n
    unsigned int *v61;  // [bp-0x3a8]\n
    struct struct_1 **v62;  // [bp-0x3a4]\n
    char v63;  // [bp-0x39d]\n
    char v64[8];  // [bp-0x388]\n
    unsigned int v65;  // [bp-0x384]\n
    void* v66;  // [bp-0x380]\n
    unsigned int *v67;  // [bp-0x378]\n
    struct struct_1 **v68;  // [bp-0x374]\n
    char v69;  // [bp-0x36d]\n
    char v70[8];  // [bp-0x358]\n
    unsigned int v71;  // [bp-0x354]\n
    void* v72;  // [bp-0x350]\n
    unsigned int *v73;  // [bp-0x348]\n
    struct struct_1 **v74;  // [bp-0x344]\n
    char v75;  // [bp-0x33d]\n
    char v76[8];  // [bp-0x328]\n
    unsigned int v77;  // [bp-0x324]\n
    void* v78;  // [bp-0x320]\n
    unsigned int *v79;  // [bp-0x31c]\n
    struct struct_1 **v80;  // [bp-0x318]\n
    unsigned int v81;  // [bp-0x314]\n
    char v82;  // [bp-0x30d]\n
    unsigned int *v83;  // [bp-0x30c]\n
    struct struct_1 **v84;  // [bp-0x308]\n
    unsigned int v85;  // [bp-0x304]\n
    char v86;  // [bp-0x2fd]\n
    unsigned int *v87;  // [bp-0x2fc]\n
    struct struct_1 **v88;  // [bp-0x2f8]\n
    unsigned int v89;  // [bp-0x2f4]\n
    char v90;  // [bp-0x2ed]\n
    unsigned int *v91;  // [bp-0x2ec]\n
    struct struct_1 **v92;  // [bp-0x2e8]\n
    unsigned int v93;  // [bp-0x2e4]\n
    char v94;  // [bp-0x2dd]\n
    unsigned int *v95;  // [bp-0x2dc]\n
    struct struct_1 **v96;  // [bp-0x2d8]\n
    char *v97;  // [bp-0x2d4]\n
    unsigned int *v98;  // [bp-0x2d0]\n
    struct struct_1 **v99;  // [bp-0x2cc]\n
    char *v100;  // [bp-0x2c8]\n
    unsigned int v101;  // [bp-0x2c4]\n
    unsigned int *v102;  // [bp-0x2c0]\n
    struct struct_1 **v103;  // [bp-0x2bc]\n
    char *v104;  // [bp-0x2b8]\n
    unsigned int v105;  // [bp-0x2b4]\n
    unsigned int *v106;  // [bp-0x2b0]\n
    struct struct_1 **v107;  // [bp-0x2ac]\n
    char *v108;  // [bp-0x2a8]\n
    unsigned int v109;  // [bp-0x2a4]\n
    unsigned int *v110;  // [bp-0x2a0]\n
    struct struct_1 **v111;  // [bp-0x29c]\n
    char *v112;  // [bp-0x298]\n
    unsigned int v113;  // [bp-0x294]\n
    unsigned int *v114;  // [bp-0x290]\n
    struct struct_1 **v115;  // [bp-0x28c]\n
    char *v116;  // [bp-0x288]\n
    unsigned int v117;  // [bp-0x284]\n
    unsigned int *v118;  // [bp-0x280]\n
    struct struct_1 **v119;  // [bp-0x27c]\n
    char *v120;  // [bp-0x278]\n
    unsigned int v121;  // [bp-0x274]\n
    unsigned int *v122;  // [bp-0x270]\n
    struct struct_1 **v123;  // [bp-0x26c]\n
    char v124;  // [bp-0x268]\n
    unsigned short v125;  // [bp-0x262]\n
    unsigned int *v126;  // [bp-0x260]\n
    struct struct_1 **v127;  // [bp-0x25c]\n
    char v128;  // [bp-0x258]\n
    unsigned short v129;  // [bp-0x252]\n
    unsigned int *v130;  // [bp-0x250]\n
    struct struct_1 **v131;  // [bp-0x24c]\n
    char v132;  // [bp-0x245]\n
    char v133;  // [bp-0x241]\n
    unsigned int *v134;  // [bp-0x240]\n
    struct struct_1 **v135;  // [bp-0x23c]\n
    char v136;  // [bp-0x235]\n
    char v137;  // [bp-0x231]\n
    unsigned int *v138;  // [bp-0x230]\n
    struct struct_1 **v139;  // [bp-0x22c]\n
    char v140;  // [bp-0x225]\n
    char v141;  // [bp-0x221]\n
    unsigned int *v142;  // [bp-0x220]\n
    struct struct_1 **v143;  // [bp-0x21c]\n
    char v144[8];  // [bp-0x218]\n
    unsigned int *v145;  // [bp-0x214]\n
    struct struct_1 **v146;  // [bp-0x210]\n
    unsigned short *v147;  // [bp-0x20c]\n
    unsigned int *v148;  // [bp-0x208]\n
    struct struct_1 **v149;  // [bp-0x204]\n
    unsigned short *v150;  // [bp-0x200]\n
    unsigned int *v151;  // [bp-0x1fc]\n
    struct struct_1 **v152;  // [bp-0x1f8]\n
    char v153;  // [bp-0x1f1]\n
    unsigned long v154;  // [bp-0x1dc]\n
    unsigned int *v155;  // [bp-0x1d4]\n
    struct struct_1 **v156;  // [bp-0x1d0]\n
    char v157;  // [bp-0x1c9]\n
    unsigned long v158;  // [bp-0x1b4]\n
    unsigned int *v159;  // [bp-0x1ac]\n
    struct struct_1 **v160;  // [bp-0x1a8]\n
    char v161;  // [bp-0x1a1]\n
    unsigned long v162;  // [bp-0x18c]\n
    unsigned int *v163;  // [bp-0x184]\n
    struct struct_1 **v164;  // [bp-0x180]\n
    char v165;  // [bp-0x179]\n
    unsigned long v166;  // [bp-0x164]\n
    unsigned int *v167;  // [bp-0x158]\n
    struct struct_1 **v168;  // [bp-0x154]\n
    char v169;  // [bp-0x150]\n
    unsigned int v170;  // [bp-0x144]\n
    unsigned int *v171;  // [bp-0x140]\n
    struct struct_1 **v172;  // [bp-0x13c]\n
    char v173;  // [bp-0x138]\n
    unsigned int v174;  // [bp-0x12c]\n
    unsigned int *v175;  // [bp-0x128]\n
    struct struct_1 **v176;  // [bp-0x124]\n
    char v177;  // [bp-0x120]\n
    unsigned int v178;  // [bp-0x114]\n
    unsigned int *v179;  // [bp-0x110]\n
    struct struct_1 **v180;  // [bp-0x10c]\n
    char v181;  // [bp-0x108]\n
    unsigned int v182;  // [bp-0xfc]\n
    unsigned int *v183;  // [bp-0xf8]\n
    struct struct_1 **v184;  // [bp-0xf4]\n
    char v185;  // [bp-0xf0]\n
    unsigned int v186;  // [bp-0xe4]\n
    unsigned int *v187;  // [bp-0xe0]\n
    struct struct_1 **v188;  // [bp-0xdc]\n
    char v189;  // [bp-0xd8]\n
    unsigned int v190;  // [bp-0xcc]\n
    unsigned int *v191;  // [bp-0xc8]\n
    struct struct_1 **v192;  // [bp-0xc4]\n
    char v193;  // [bp-0xc0]\n
    unsigned int v194;  // [bp-0xb4]\n
    unsigned int *v195;  // [bp-0xb0]\n
    struct struct_1 **v196;  // [bp-0xac]\n
    char v197;  // [bp-0xa8]\n
    unsigned int v198;  // [bp-0x9c]\n
    unsigned int *v199;  // [bp-0x98]\n
    struct struct_1 **v200;  // [bp-0x94]\n
    unsigned int v201;  // [bp-0x90]\n
    unsigned short v202;  // [bp-0x8a]\n
    unsigned int *v203;  // [bp-0x88]\n
    struct struct_1 **v204;  // [bp-0x84]\n
    unsigned int v205;  // [bp-0x80]\n
    unsigned short v206;  // [bp-0x7a]\n
    unsigned int *v207;  // [bp-0x78]\n
    struct struct_1 **v208;  // [bp-0x74]\n
    unsigned int v209;  // [bp-0x70]\n
    unsigned short v210;  // [bp-0x6a]\n
    unsigned int *v211;  // [bp-0x68]\n
    struct struct_1 **v212;  // [bp-0x64]\n
    unsigned int v213;  // [bp-0x60]\n
    unsigned short v214;  // [bp-0x5a]\n
    unsigned int *v215;  // [bp-0x58]\n
    struct struct_1 **v216;  // [bp-0x54]\n
    char v217;  // [bp-0x50]\n
    char *v218;  // [bp-0x44]\n
    unsigned int v219;  // [bp-0x40]\n
    unsigned int *v220;  // [bp-0x3c]\n
    struct struct_1 **v221;  // [bp-0x38]\n
    char v222;  // [bp-0x34]\n
    char v223[4];  // [bp-0x28]\n
    unsigned int v224;  // [bp-0x24]\n
    unsigned int *v225;  // [bp-0x20]\n
    struct struct_1 **v226;  // [bp-0x1c]\n
    unsigned int v227;  // [bp-0x18]\n
    char v228;  // [bp-0x11]\n
    unsigned int *v229;  // [bp-0x10]\n
    struct struct_1 **v230;  // [bp-0xc]\n
    unsigned int v231;  // [bp-0x8]\n
    unsigned int v233;  // ebx\n
    unsigned int *v234;  // eax\n
    struct struct_1 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_1 **v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_1 **v239;  // eax\n
    unsigned int *v240;  // eax\n
    struct struct_1 **v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_1 **v243;  // eax\n
    unsigned int *v244;  // eax\n
    struct struct_1 **v245;  // eax\n
    unsigned int *v246;  // eax\n
    struct struct_1 **v247;  // eax\n
    struct struct_1 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_1 **v251;  // eax\n
    struct struct_1 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_1 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_1 **v257;  // eax\n
    struct struct_1 **v259;  // eax\n
    unsigned int *v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_1 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_1 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    struct struct_1 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_1 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_1 **v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_1 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_1 **v275;  // eax\n
    struct struct_1 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_1 **v279;  // eax\n
    struct struct_1 **v281;  // eax\n
    unsigned int *v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_1 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    struct struct_1 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_1 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    struct struct_1 **v291;  // eax\n
    struct struct_1 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    unsigned int *v294;  // eax\n
    struct struct_1 **v295;  // eax\n
    unsigned int *v296;  // eax\n
    struct struct_1 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    struct struct_1 **v299;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_1 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_1 **v303;  // eax\n
    struct struct_1 **v305;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_1 **v309;  // eax\n
    unsigned int *v311;  // eax\n
    unsigned int *v312;  // eax\n
    struct struct_1 **v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_1 **v315;  // eax\n
    unsigned int *v316;  // eax\n
    struct struct_1 **v317;  // eax\n
    unsigned int *v318;  // eax\n
    struct struct_1 **v319;  // eax\n
    struct struct_1 **v321;  // eax\n
    unsigned int *v323;  // eax\n
    unsigned int *v324;  // eax\n
    struct struct_1 **v325;  // eax\n
    unsigned int *v326;  // eax\n
    struct struct_1 **v327;  // eax\n
    unsigned int *v328;  // eax\n
    struct struct_1 **v329;  // eax\n
    unsigned int *v330;  // eax\n
    struct struct_1 **v331;  // eax\n
    unsigned int *v332;  // eax\n
    struct struct_1 **v333;  // eax\n
    struct struct_1 **v335;  // eax\n
    unsigned int *v337;  // eax\n
    unsigned int *v338;  // eax\n
    struct struct_1 **v339;  // eax\n
    unsigned int *v340;  // eax\n
    struct struct_1 **v341;  // eax\n
    unsigned int *v342;  // eax\n
    struct struct_1 **v343;  // eax\n
    struct struct_1 **v344;  // eax\n
    unsigned int *v345;  // eax\n
    unsigned int *v346;  // eax\n
    struct struct_1 **v347;  // eax\n
    unsigned int *v348;  // eax, Other Possible Types: unsigned int\n
    unsigned int v349;  // ebx\n
\n
    v231 = v233;\n
    v35 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v56 = g_4f03a0;\n
    v57 = g_4f03a4;\n
    v55 = cgc__cookie;\n
    v54 = -1;\n
    if (cgc_sendline(1, \"===llamakirombo===\", 18) < 0)\n
        cgc__terminate();\n
    v143 = v232;\n
    v142 = a0;\n
    memset(&v140, 0, 4);\n
    if (*(v142) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = *(v143)->field_0;\n
    cgc_uint2str(&v140, 4, v141);\n
    v34 = &v140;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v140)) < 0)\n
        cgc__terminate();\n
    v234 = v142;\n
    *(v234) = *(v234) - 1;\n
    v235 = v143;\n
    *(v235) = &*(v235)->padding_1;\n
    v80 = v232;\n
    v79 = a0;\n
    *(&v76[0]) = *(v80);\n
    memset(&v75, 0, 21);\n
    if (*(v79) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v33 = 0;\n
    if (v76[0])\n
    {\n
        v33 = 0;\n
        if (v76[1])\n
        {\n
            v33 = 0;\n
            if (v76[2])\n
            {\n
                v33 = 0;\n
                if (v76[3])\n
                {\n
                    v33 = 0;\n
                    if (v76[4] << 24)\n
                    {\n
                        v33 = 0;\n
                        if (v76[5] << 16)\n
                        {\n
                            v33 = 0;\n
                            if (v76[6] << 8)\n
                                v33 = v76[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v77 = v33 & 1;\n
    v78 = 0;\n
    cgc_uint2str(&v75, 21, v77);\n
    v32 = &v75;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v236 = v79;\n
    *(v236) = *(v236) - 8;\n
    v237 = v80;\n
    *(v237) = *(v237) + 1;\n
    v192 = v232;\n
    v191 = a0;\n
    memset(&v189, 0, 12);\n
    if (*(v191) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v190 = *(&*(v192)->field_0);\n
    cgc_uint2str(&v189, 12, v190);\n
    v31 = &v189;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v189)) < 0)\n
        cgc__terminate();\n
    v238 = v191;\n
    *(v238) = *(v238) - 4;\n
    v239 = v192;\n
    *(v239) = &*(v239)->field_4;\n
    v168 = v232;\n
    v167 = a0;\n
    memset(&v165, 0, 21);\n
    if (*(v167) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v166 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v47 = [D] x86g_create_fpucw(fpround<4>);\n
    v46 = v47 | 0xc00;\n
    v53 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v165, 21, v53);\n
    v30 = &v165;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v165)) < 0)\n
        cgc__terminate();\n
    v240 = v167;\n
    *(v240) = *(v240) - 8;\n
    v241 = v168;\n
    *(v241) = *(v241) + 1;\n
    v131 = v232;\n
    v130 = a0;\n
    memset(&v128, 0, 6);\n
    if (*(v130) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = *(&*(v131)->field_0);\n
    cgc_uint2str(&v128, 6, v129);\n
    v29 = &v128;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v242 = v130;\n
    *(v242) = *(v242) - 2;\n
    v243 = v131;\n
    *(v243) = &*(v243)->padding_1[1];\n
    v152 = v232;\n
    v151 = a0;\n
    v150 = &*(v152)->field_0;\n
    if (*(v151) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v244 = v151;\n
    *(v244) = *(v244) - 2;\n
    v245 = v152;\n
    *(v245) = &*(v245)->padding_1[1];\n
    v54 = *(v150);\n
    v230 = v232;\n
    v229 = a0;\n
    if (*(v229) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v228 = *(v230)->field_0;\n
    v246 = v229;\n
    *(v246) = *(v246) - 1;\n
    v247 = v230;\n
    *(v247) = &*(v247)->padding_1;\n
    if (v228 <= *(v229) && !(!v228))\n
        goto LABEL_4b9b77;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b9b77:\n
    v227 = cgc_calloc(v228);\n
    if (!v227)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v227, *(v230), v228);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v248 = v230;\n
    *(v248) = &(&*(v248)->field_0)[v228];\n
    v249 = v229;\n
    *(v249) = *(v249) - v228;\n
    cgc_checkheap();\n
    cgc_free(v227);\n
    v96 = v232;\n
    v95 = a0;\n
    if (*(v95) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = *(v96)->field_0;\n
    v250 = v95;\n
    *(v250) = *(v250) - 1;\n
    v251 = v96;\n
    *(v251) = &*(v251)->padding_1;\n
    if (v94 <= *(v95) && !(!v94))\n
        goto LABEL_4b9d8e;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4b9d8e:\n
    v93 = cgc_calloc(v94);\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v93, *(v96), v94);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v252 = v96;\n
    *(v252) = &(&*(v252)->field_0)[v94];\n
    v253 = v95;\n
    *(v253) = *(v253) - v94;\n
    cgc_checkheap();\n
    cgc_free(v93);\n
    v188 = v232;\n
    v187 = a0;\n
    memset(&v185, 0, 12);\n
    if (*(v187) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v186 = *(&*(v188)->field_0);\n
    cgc_uint2str(&v185, 12, v186);\n
    v28 = &v185;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v185)) < 0)\n
        cgc__terminate();\n
    v254 = v187;\n
    *(v254) = *(v254) - 4;\n
    v255 = v188;\n
    *(v255) = &*(v255)->field_4;\n
    v139 = v232;\n
    v138 = a0;\n
    memset(&v136, 0, 4);\n
    if (*(v138) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v137 = *(v139)->field_0;\n
    cgc_uint2str(&v136, 4, v137);\n
    v27 = &v136;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v136)) < 0)\n
        cgc__terminate();\n
    v256 = v138;\n
    *(v256) = *(v256) - 1;\n
    v257 = v139;\n
    *(v257) = &*(v257)->padding_1;\n
    v123 = v232;\n
    v122 = a0;\n
    if (*(v122) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v122) >= 128)\n
        v26 = 128;\n
    else\n
        v26 = *(v122);\n
    v121 = v26;\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v120 = cgc_calloc(134);\n
    if (!v120)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v120, &v35[18].padding_0[182]);\n
    cgc_strncpy(v120 + 5, *(v123), v121);\n
    v259 = v123;\n
    *(v259) = &(&*(v259)->field_4)[cgc_strlen(v120)];\n
    v261 = v122;\n
    *(v261) = *(v261) - (cgc_strlen(v120) + -4);\n
    cgc_checkheap();\n
    cgc_free(v120);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v74 = v232;\n
    v73 = a0;\n
    *(&v70[0]) = *(v74);\n
    memset(&v69, 0, 21);\n
    if (*(v73) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = 0;\n
    if (v70[0])\n
    {\n
        v25 = 0;\n
        if (v70[1])\n
        {\n
            v25 = 0;\n
            if (v70[2])\n
            {\n
                v25 = 0;\n
                if (v70[3])\n
                {\n
                    v25 = 0;\n
                    if (v70[4] << 24)\n
                    {\n
                        v25 = 0;\n
                        if (v70[5] << 16)\n
                        {\n
                            v25 = 0;\n
                            if (v70[6] << 8)\n
                                v25 = v70[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v71 = v25 & 1;\n
    v72 = 0;\n
    cgc_uint2str(&v69, 21, v71);\n
    v24 = &v69;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v262 = v73;\n
    *(v262) = *(v262) - 8;\n
    v263 = v74;\n
    *(v263) = *(v263) + 1;\n
    v164 = v232;\n
    v163 = a0;\n
    memset(&v161, 0, 21);\n
    if (*(v163) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v162 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v45 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1022, size=2, endness=Iend_LE)))));\n
    v44 = v45 | 0xc00;\n
    v52 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v161, 21, v52);\n
    v23 = &v161;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v161)) < 0)\n
        cgc__terminate();\n
    v264 = v163;\n
    *(v264) = *(v264) - 8;\n
    v265 = v164;\n
    *(v265) = *(v265) + 1;\n
    v68 = v232;\n
    v67 = a0;\n
    *(&v64[0]) = *(v68);\n
    memset(&v63, 0, 21);\n
    if (*(v67) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v64[0])\n
    {\n
        v22 = 0;\n
        if (v64[1])\n
        {\n
            v22 = 0;\n
            if (v64[2])\n
            {\n
                v22 = 0;\n
                if (v64[3])\n
                {\n
                    v22 = 0;\n
                    if (v64[4] << 24)\n
                    {\n
                        v22 = 0;\n
                        if (v64[5] << 16)\n
                        {\n
                            v22 = 0;\n
                            if (v64[6] << 8)\n
                                v22 = v64[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v65 = v22 & 1;\n
    v66 = 0;\n
    cgc_uint2str(&v63, 21, v65);\n
    v21 = &v63;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v266 = v67;\n
    *(v266) = *(v266) - 8;\n
    v267 = v68;\n
    *(v267) = *(v267) + 1;\n
    v212 = v232;\n
    v211 = a0;\n
    if (*(v211) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v210 = *(&*(v212)->field_0);\n
    v268 = v211;\n
    *(v268) = *(v268) - 2;\n
    v269 = v212;\n
    *(v269) = &*(v269)->padding_1[1];\n
    if (v210 <= *(v211) && !(!v210))\n
        goto LABEL_4baab6;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4baab6:\n
    v209 = cgc_calloc(v210);\n
    if (!v209)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v209, *(v212), v210);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v270 = v211;\n
    *(v270) = *(v270) - v210;\n
    v271 = v212;\n
    *(v271) = &(&*(v271)->field_0)[v210];\n
    cgc_checkheap();\n
    cgc_free(v209);\n
    v149 = v232;\n
    v148 = a0;\n
    v147 = &*(v149)->field_0;\n
    if (*(v148) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v272 = v148;\n
    *(v272) = *(v272) - 2;\n
    v273 = v149;\n
    *(v273) = &*(v273)->padding_1[1];\n
    v54 = *(v147);\n
    v92 = v232;\n
    v91 = a0;\n
    if (*(v91) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = *(v92)->field_0;\n
    v274 = v91;\n
    *(v274) = *(v274) - 1;\n
    v275 = v92;\n
    *(v275) = &*(v275)->padding_1;\n
    if (v90 <= *(v91) && !(!v90))\n
        goto LABEL_4bad76;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bad76:\n
    v89 = cgc_calloc(v90);\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v89, *(v92), v90);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v276 = v92;\n
    *(v276) = &(&*(v276)->field_0)[v90];\n
    v277 = v91;\n
    *(v277) = *(v277) - v90;\n
    cgc_checkheap();\n
    cgc_free(v89);\n
    v184 = v232;\n
    v183 = a0;\n
    memset(&v181, 0, 12);\n
    if (*(v183) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v182 = *(&*(v184)->field_0);\n
    cgc_uint2str(&v181, 12, v182);\n
    v20 = &v181;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v181)) < 0)\n
        cgc__terminate();\n
    v278 = v183;\n
    *(v278) = *(v278) - 4;\n
    v279 = v184;\n
    *(v279) = &*(v279)->field_4;\n
    v119 = v232;\n
    v118 = a0;\n
    if (*(v118) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v118) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v118);\n
    v117 = v19;\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = cgc_calloc(134);\n
    if (!v116)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v116, &v35[18].padding_0[182]);\n
    cgc_strncpy(v116 + 5, *(v119), v117);\n
    v281 = v119;\n
    *(v281) = &(&*(v281)->field_4)[cgc_strlen(v116)];\n
    v283 = v118;\n
    *(v283) = *(v283) - (cgc_strlen(v116) + -4);\n
    cgc_checkheap();\n
    cgc_free(v116);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v135 = v232;\n
    v134 = a0;\n
    memset(&v132, 0, 4);\n
    if (*(v134) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = *(v135)->field_0;\n
    cgc_uint2str(&v132, 4, v133);\n
    v18 = &v132;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v284 = v134;\n
    *(v284) = *(v284) - 1;\n
    v285 = v135;\n
    *(v285) = &*(v285)->padding_1;\n
    v146 = v232;\n
    v145 = a0;\n
    *(&v144[0]) = *(v146);\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v286 = v145;\n
    *(v286) = *(v286) - 2;\n
    v287 = v146;\n
    *(v287) = &*(v287)->padding_1[1];\n
    v54 = *(&v144[0]);\n
    v180 = v232;\n
    v179 = a0;\n
    memset(&v177, 0, 12);\n
    if (*(v179) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v178 = *(&*(v180)->field_0);\n
    cgc_uint2str(&v177, 12, v178);\n
    v17 = &v177;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v177)) < 0)\n
        cgc__terminate();\n
    v288 = v179;\n
    *(v288) = *(v288) - 4;\n
    v289 = v180;\n
    *(v289) = &*(v289)->field_4;\n
    v88 = v232;\n
    v87 = a0;\n
    if (*(v87) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v86 = *(v88)->field_0;\n
    v290 = v87;\n
    *(v290) = *(v290) - 1;\n
    v291 = v88;\n
    *(v291) = &*(v291)->padding_1;\n
    if (v86 <= *(v87) && !(!v86))\n
        goto LABEL_4bb6a2;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bb6a2:\n
    v85 = cgc_calloc(v86);\n
    if (!v85)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v85, *(v88), v86);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v292 = v88;\n
    *(v292) = &(&*(v292)->field_0)[v86];\n
    v293 = v87;\n
    *(v293) = *(v293) - v86;\n
    cgc_checkheap();\n
    cgc_free(v85);\n
    v216 = v232;\n
    v215 = a0;\n
    if (*(v215) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v214 = *(&*(v216)->field_0);\n
    v294 = v215;\n
    *(v294) = *(v294) - 2;\n
    v295 = v216;\n
    *(v295) = &*(v295)->padding_1[1];\n
    if (v214 <= *(v215) && !(!v214))\n
        goto LABEL_4bb8be;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bb8be:\n
    v213 = cgc_calloc(v214);\n
    if (!v213)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v213, *(v216), v214);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v296 = v215;\n
    *(v296) = *(v296) - v214;\n
    v297 = v216;\n
    *(v297) = &(&*(v297)->field_0)[v214];\n
    cgc_checkheap();\n
    cgc_free(v213);\n
    v208 = v232;\n
    v207 = a0;\n
    if (*(v207) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v206 = *(&*(v208)->field_0);\n
    v298 = v207;\n
    *(v298) = *(v298) - 2;\n
    v299 = v208;\n
    *(v299) = &*(v299)->padding_1[1];\n
    if (v206 <= *(v207) && !(!v206))\n
        goto LABEL_4bbab9;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bbab9:\n
    v205 = cgc_calloc(v206);\n
    if (!v205)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v205, *(v208), v206);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v300 = v207;\n
    *(v300) = *(v300) - v206;\n
    v301 = v208;\n
    *(v301) = &(&*(v301)->field_0)[v206];\n
    cgc_checkheap();\n
    cgc_free(v205);\n
    v99 = v232;\n
    v98 = a0;\n
    v97 = &*(v99)->field_0;\n
    if (*(v98) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v302 = v98;\n
    *(v302) = *(v302) - 1;\n
    v303 = v99;\n
    *(v303) = &*(v303)->padding_1;\n
    v54 = *(v97);\n
    v115 = v232;\n
    v114 = a0;\n
    if (*(v114) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v114) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v114);\n
    v113 = v16;\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = cgc_calloc(134);\n
    if (!v112)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v112, &v35[18].padding_0[182]);\n
    cgc_strncpy(v112 + 5, *(v115), v113);\n
    v305 = v115;\n
    *(v305) = &(&*(v305)->field_4)[cgc_strlen(v112)];\n
    v307 = v114;\n
    *(v307) = *(v307) - (cgc_strlen(v112) + -4);\n
    cgc_checkheap();\n
    cgc_free(v112);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v111 = v232;\n
    v110 = a0;\n
    if (*(v110) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v110) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v110);\n
    v109 = v15;\n
    if (!v109)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = cgc_calloc(134);\n
    if (!v108)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v108, &v35[18].padding_0[182]);\n
    cgc_strncpy(v108 + 5, *(v111), v109);\n
    v309 = v111;\n
    *(v309) = &(&*(v309)->field_4)[cgc_strlen(v108)];\n
    v311 = v110;\n
    *(v311) = *(v311) - (cgc_strlen(v108) + -4);\n
    cgc_checkheap();\n
    cgc_free(v108);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v62 = v232;\n
    v61 = a0;\n
    *(&v59) = *(v62);\n
    memset(&v58, 0, 6);\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v59[0] << 8)\n
        v14 = v59[1];\n
    v60 = v14 & 1;\n
    cgc_uint2str(&v58, 6, v60);\n
    v13 = &v58;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v312 = v61;\n
    *(v312) = *(v312) - 2;\n
    v313 = v62;\n
    *(v313) = &*(v313)->padding_1[1];\n
    v127 = v232;\n
    v126 = a0;\n
    memset(&v124, 0, 6);\n
    if (*(v126) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v125 = *(&*(v127)->field_0);\n
    cgc_uint2str(&v124, 6, v125);\n
    v12 = &v124;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v314 = v126;\n
    *(v314) = *(v314) - 2;\n
    v315 = v127;\n
    *(v315) = &*(v315)->padding_1[1];\n
    v204 = v232;\n
    v203 = a0;\n
    if (*(v203) < 2)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = *(&*(v204)->field_0);\n
    v316 = v203;\n
    *(v316) = *(v316) - 2;\n
    v317 = v204;\n
    *(v317) = &*(v317)->padding_1[1];\n
    if (v202 <= *(v203) && !(!v202))\n
        goto LABEL_4bc541;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bc541:\n
    v201 = cgc_calloc(v202);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v201, *(v204), v202);\n
    if (cgc_sendline(1, &v35[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v318 = v203;\n
    *(v318) = *(v318) - v202;\n
    v319 = v204;\n
    *(v319) = &(&*(v319)->field_0)[v202];\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    v107 = v232;\n
    v106 = a0;\n
    if (*(v106) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v106) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v106);\n
    v105 = v11;\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = cgc_calloc(134);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v104, &v35[18].padding_0[182]);\n
    cgc_strncpy(v104 + 5, *(v107), v105);\n
    v321 = v107;\n
    *(v321) = &(&*(v321)->field_4)[cgc_strlen(v104)];\n
    v323 = v106;\n
    *(v323) = *(v323) - (cgc_strlen(v104) + -4);\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v200 = v232;\n
    v199 = a0;\n
    memset(&v197, 0, 12);\n
    if (*(v199) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v198 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1026, size=2, endness=Iend_LE)))));\n
    v42 = v43 | 0xc00;\n
    v51 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v197, 12, v51);\n
    v10 = &v197;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v197)) < 0)\n
        cgc__terminate();\n
    v324 = v199;\n
    *(v324) = *(v324) - 4;\n
    v325 = v200;\n
    *(v325) = &*(v325)->field_4;\n
    v160 = v232;\n
    v159 = a0;\n
    memset(&v157, 0, 21);\n
    if (*(v159) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v158 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1030, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v157, 21, v50);\n
    v9 = &v157;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v157)) < 0)\n
        cgc__terminate();\n
    v326 = v159;\n
    *(v326) = *(v326) - 8;\n
    v327 = v160;\n
    *(v327) = *(v327) + 1;\n
    v156 = v232;\n
    v155 = a0;\n
    memset(&v153, 0, 21);\n
    if (*(v155) < 8)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v154 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1034, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v153, 21, v49);\n
    v8 = &v153;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v153)) < 0)\n
        cgc__terminate();\n
    v328 = v155;\n
    *(v328) = *(v328) - 8;\n
    v329 = v156;\n
    *(v329) = *(v329) + 1;\n
    v196 = v232;\n
    v195 = a0;\n
    memset(&v193, 0, 12);\n
    if (*(v195) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v194 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1038, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v193, 12, v48);\n
    v7 = &v193;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v330 = v195;\n
    *(v330) = *(v330) - 4;\n
    v331 = v196;\n
    *(v331) = &*(v331)->field_4;\n
    v176 = v232;\n
    v175 = a0;\n
    memset(&v173, 0, 12);\n
    if (*(v175) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v174 = *(&*(v176)->field_0);\n
    cgc_uint2str(&v173, 12, v174);\n
    v6 = &v173;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v173)) < 0)\n
        cgc__terminate();\n
    v332 = v175;\n
    *(v332) = *(v332) - 4;\n
    v333 = v176;\n
    *(v333) = &*(v333)->field_4;\n
    v103 = v232;\n
    v102 = a0;\n
    if (*(v102) <= 0)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v102) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v102);\n
    v101 = v5;\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = cgc_calloc(134);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v100, &v35[18].padding_0[182]);\n
    cgc_strncpy(v100 + 5, *(v103), v101);\n
    v335 = v103;\n
    *(v335) = &(&*(v335)->field_4)[cgc_strlen(v100)];\n
    v337 = v102;\n
    *(v337) = *(v337) - (cgc_strlen(v100) + -4);\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    if (cgc_sendline(1, &v35[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v226 = v232;\n
    v225 = a0;\n
    *(&v223[0]) = *(v226);\n
    memset(&v222, 0, 12);\n
    if (*(v225) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v223[0] << 24)\n
    {\n
        v4 = 0;\n
        if (v223[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v223[2] << 8)\n
                v4 = v223[3];\n
        }\n
    }\n
    v224 = v4 & 1;\n
    cgc_uint2str(&v222, 12, v224);\n
    v3 = &v222;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v222)) < 0)\n
        cgc__terminate();\n
    v338 = v225;\n
    *(v338) = *(v338) - 4;\n
    v339 = v226;\n
    *(v339) = &*(v339)->field_4;\n
    v172 = v232;\n
    v171 = a0;\n
    memset(&v169, 0, 12);\n
    if (*(v171) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v170 = *(&*(v172)->field_0);\n
    cgc_uint2str(&v169, 12, v170);\n
    v2 = &v169;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v169)) < 0)\n
        cgc__terminate();\n
    v340 = v171;\n
    *(v340) = *(v340) - 4;\n
    v341 = v172;\n
    *(v341) = &*(v341)->field_4;\n
    v84 = v232;\n
    v83 = a0;\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v82 = *(v84)->field_0;\n
    v342 = v83;\n
    *(v342) = *(v342) - 1;\n
    v343 = v84;\n
    *(v343) = &*(v343)->padding_1;\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_4bd659;\n
    if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bd659:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, &v35[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v344 = v84;\n
    *(v344) = &(&*(v344)->field_0)[v82];\n
    v345 = v83;\n
    *(v345) = *(v345) - v82;\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v221 = v232;\n
    v220 = a0;\n
    v218 = &*(v221)->field_0;\n
    memset(&v217, 0, 12);\n
    if (*(v220) < 4)\n
    {\n
        if (cgc_sendline(1, &v35[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (*(v218) << 24)\n
    {\n
        v1 = 0;\n
        if (v218[1] << 16)\n
        {\n
            v1 = 0;\n
            if (v218[2] << 8)\n
                v1 = v218[3];\n
        }\n
    }\n
    v219 = v1 & 1;\n
    cgc_uint2str(&v217, 12, v219);\n
    v0 = &v217;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v217)) < 0)\n
        cgc__terminate();\n
    v346 = v220;\n
    *(v346) = *(v346) - 4;\n
    v347 = v221;\n
    *(v347) = &*(v347)->field_4;\n
    v55 ^= v35->field_260;\n
    if (v55)\n
        cgc___stack_cookie_fail();\n
    v348 = a0;\n
    if (*(v348) > 0 && v54 >= 0 && v54 < 2)\n
        v348 = (&v56)[v54](v232);\n
    v349 = v231;\n
    return v348;\n
}\n
", "4970892:sub_4bd98c": null, "4970896:cgc_process_llamaworshipability": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaworshipability(struct struct_0 **v206, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x40c]\n
    char v1;  // [bp-0x405]\n
    unsigned int v2;  // [bp-0x404]\n
    struct_1 *v3;  // [bp-0x400]\n
    struct_1 *v4;  // [bp-0x3fc]\n
    struct_1 *v5;  // [bp-0x3f8]\n
    char v6;  // [bp-0x3f1]\n
    unsigned int v7;  // [bp-0x3f0]\n
    struct_1 *v8;  // [bp-0x3ec]\n
    struct_1 *v9;  // [bp-0x3e8]\n
    char v10;  // [bp-0x3e1]\n
    struct_1 *v11;  // [bp-0x3e0]\n
    struct_1 *v12;  // [bp-0x3dc]\n
    struct_1 *v13;  // [bp-0x3d8]\n
    char v14;  // [bp-0x3d1]\n
    struct_1 *v15;  // [bp-0x3d0]\n
    struct_1 *v16;  // [bp-0x3cc]\n
    struct_1 *v17;  // [bp-0x3c8]\n
    struct_1 *v18;  // [bp-0x3c4]\n
    char v19;  // [bp-0x3bd]\n
    unsigned int v20;  // [bp-0x3bc]\n
    struct_1 *v21;  // [bp-0x3b8]\n
    char v22;  // [bp-0x3b1]\n
    struct_1 *v23;  // [bp-0x3b0]\n
    struct_1 *v24;  // [bp-0x3ac]\n
    struct_1 *v25;  // [bp-0x3a8]\n
    struct_1 *v26;  // [bp-0x3a4]\n
    struct_1 *v27;  // [bp-0x3a0]\n
    char v28;  // [bp-0x399]\n
    struct_1 *v29;  // [bp-0x398]\n
    struct_1 *v30;  // [bp-0x394]\n
    struct_1 *v31;  // [bp-0x390]\n
    char v32;  // [bp-0x389]\n
    struct_3 *v33;  // [bp-0x388]\n
    unsigned short v34;  // [bp-0x384]\n
    unsigned short v35;  // [bp-0x382]\n
    unsigned short v36;  // [bp-0x380]\n
    unsigned short v37;  // [bp-0x37e]\n
    unsigned short v38;  // [bp-0x37c]\n
    unsigned short v39;  // [bp-0x37a]\n
    unsigned short v40;  // [bp-0x378]\n
    unsigned short v41;  // [bp-0x376]\n
    unsigned long v42;  // [bp-0x374]\n
    unsigned long v43;  // [bp-0x36c]\n
    unsigned long v44;  // [bp-0x364]\n
    unsigned long v45;  // [bp-0x35c]\n
    struct struct_2 **v46;  // [bp-0x350]\n
    unsigned int v47;  // [bp-0x34c]\n
    char v48;  // [bp-0x348]\n
    char v49;  // [bp-0x346]\n
    char v50[2];  // [bp-0x340]\n
    unsigned short v51;  // [bp-0x33a]\n
    unsigned int *v52;  // [bp-0x338]\n
    struct struct_0 **v53;  // [bp-0x334]\n
    char v54;  // [bp-0x32e]\n
    char v55[2];  // [bp-0x328]\n
    unsigned short v56;  // [bp-0x322]\n
    unsigned int *v57;  // [bp-0x320]\n
    struct struct_0 **v58;  // [bp-0x31c]\n
    char v59;  // [bp-0x316]\n
    char *v60;  // [bp-0x310]\n
    unsigned short v61;  // [bp-0x30a]\n
    unsigned int *v62;  // [bp-0x308]\n
    struct struct_0 **v63;  // [bp-0x304]\n
    char v64;  // [bp-0x2fd]\n
    char v65[8];  // [bp-0x2e8]\n
    unsigned int v66;  // [bp-0x2e4]\n
    void* v67;  // [bp-0x2e0]\n
    unsigned int *v68;  // [bp-0x2d8]\n
    struct struct_0 **v69;  // [bp-0x2d4]\n
    char v70;  // [bp-0x2cd]\n
    char v71[8];  // [bp-0x2b8]\n
    unsigned int v72;  // [bp-0x2b4]\n
    void* v73;  // [bp-0x2b0]\n
    unsigned int *v74;  // [bp-0x2a8]\n
    struct struct_0 **v75;  // [bp-0x2a4]\n
    char v76;  // [bp-0x29d]\n
    char v77[8];  // [bp-0x288]\n
    unsigned int v78;  // [bp-0x284]\n
    void* v79;  // [bp-0x280]\n
    unsigned int *v80;  // [bp-0x27c]\n
    struct struct_0 **v81;  // [bp-0x278]\n
    unsigned int v82;  // [bp-0x274]\n
    char v83;  // [bp-0x26d]\n
    unsigned int *v84;  // [bp-0x26c]\n
    struct struct_0 **v85;  // [bp-0x268]\n
    unsigned int v86;  // [bp-0x264]\n
    char v87;  // [bp-0x25d]\n
    unsigned int *v88;  // [bp-0x25c]\n
    struct struct_0 **v89;  // [bp-0x258]\n
    char *v90;  // [bp-0x254]\n
    unsigned int v91;  // [bp-0x250]\n
    unsigned int *v92;  // [bp-0x24c]\n
    struct struct_0 **v93;  // [bp-0x248]\n
    char *v94;  // [bp-0x244]\n
    unsigned int v95;  // [bp-0x240]\n
    unsigned int *v96;  // [bp-0x23c]\n
    struct struct_0 **v97;  // [bp-0x238]\n
    char *v98;  // [bp-0x234]\n
    unsigned int v99;  // [bp-0x230]\n
    unsigned int *v100;  // [bp-0x22c]\n
    struct struct_0 **v101;  // [bp-0x228]\n
    char v102;  // [bp-0x224]\n
    unsigned short v103;  // [bp-0x21e]\n
    unsigned int *v104;  // [bp-0x21c]\n
    struct struct_0 **v105;  // [bp-0x218]\n
    char v106;  // [bp-0x214]\n
    unsigned short v107;  // [bp-0x20e]\n
    unsigned int *v108;  // [bp-0x20c]\n
    struct struct_0 **v109;  // [bp-0x208]\n
    char v110;  // [bp-0x204]\n
    unsigned short v111;  // [bp-0x1fe]\n
    unsigned int *v112;  // [bp-0x1fc]\n
    struct struct_0 **v113;  // [bp-0x1f8]\n
    char v114;  // [bp-0x1f4]\n
    unsigned short v115;  // [bp-0x1ee]\n
    unsigned int *v116;  // [bp-0x1ec]\n
    struct struct_0 **v117;  // [bp-0x1e8]\n
    char v118;  // [bp-0x1e1]\n
    char v119;  // [bp-0x1dd]\n
    unsigned int *v120;  // [bp-0x1dc]\n
    struct struct_0 **v121;  // [bp-0x1d8]\n
    char v122;  // [bp-0x1d1]\n
    char v123;  // [bp-0x1cd]\n
    unsigned int *v124;  // [bp-0x1cc]\n
    struct struct_0 **v125;  // [bp-0x1c8]\n
    char v126;  // [bp-0x1c1]\n
    unsigned long v127;  // [bp-0x1ac]\n
    unsigned int *v128;  // [bp-0x1a4]\n
    struct struct_0 **v129;  // [bp-0x1a0]\n
    char v130;  // [bp-0x199]\n
    unsigned long v131;  // [bp-0x184]\n
    unsigned int *v132;  // [bp-0x17c]\n
    struct struct_0 **v133;  // [bp-0x178]\n
    char v134;  // [bp-0x174]\n
    unsigned int v135;  // [bp-0x168]\n
    unsigned int *v136;  // [bp-0x164]\n
    struct struct_0 **v137;  // [bp-0x160]\n
    char v138;  // [bp-0x15c]\n
    unsigned int v139;  // [bp-0x150]\n
    unsigned int *v140;  // [bp-0x14c]\n
    struct struct_0 **v141;  // [bp-0x148]\n
    char v142;  // [bp-0x144]\n
    unsigned int v143;  // [bp-0x138]\n
    unsigned int *v144;  // [bp-0x134]\n
    struct struct_0 **v145;  // [bp-0x130]\n
    char v146;  // [bp-0x12c]\n
    unsigned int v147;  // [bp-0x120]\n
    unsigned int *v148;  // [bp-0x11c]\n
    struct struct_0 **v149;  // [bp-0x118]\n
    char v150;  // [bp-0x114]\n
    unsigned int v151;  // [bp-0x108]\n
    unsigned int *v152;  // [bp-0x104]\n
    struct struct_0 **v153;  // [bp-0x100]\n
    unsigned int v154;  // [bp-0xfc]\n
    unsigned short v155;  // [bp-0xf6]\n
    unsigned int *v156;  // [bp-0xf4]\n
    struct struct_0 **v157;  // [bp-0xf0]\n
    unsigned int v158;  // [bp-0xec]\n
    unsigned short v159;  // [bp-0xe6]\n
    unsigned int *v160;  // [bp-0xe4]\n
    struct struct_0 **v161;  // [bp-0xe0]\n
    unsigned int v162;  // [bp-0xdc]\n
    unsigned short v163;  // [bp-0xd6]\n
    unsigned int *v164;  // [bp-0xd4]\n
    struct struct_0 **v165;  // [bp-0xd0]\n
    unsigned int v166;  // [bp-0xcc]\n
    unsigned short v167;  // [bp-0xc6]\n
    unsigned int *v168;  // [bp-0xc4]\n
    struct struct_0 **v169;  // [bp-0xc0]\n
    unsigned int v170;  // [bp-0xbc]\n
    unsigned short v171;  // [bp-0xb6]\n
    unsigned int *v172;  // [bp-0xb4]\n
    struct struct_0 **v173;  // [bp-0xb0]\n
    char v174;  // [bp-0xac]\n
    char v175[4];  // [bp-0xa0]\n
    unsigned int v176;  // [bp-0x9c]\n
    unsigned int *v177;  // [bp-0x98]\n
    struct struct_0 **v178;  // [bp-0x94]\n
    char v179;  // [bp-0x90]\n
    char v180[4];  // [bp-0x84]\n
    unsigned int v181;  // [bp-0x80]\n
    unsigned int *v182;  // [bp-0x7c]\n
    struct struct_0 **v183;  // [bp-0x78]\n
    char v184;  // [bp-0x71]\n
    unsigned int v185;  // [bp-0x5c]\n
    unsigned int v186;  // [bp-0x58]\n
    unsigned int *v187;  // [bp-0x50]\n
    struct struct_0 **v188;  // [bp-0x4c]\n
    unsigned int v189;  // [bp-0x48]\n
    char v190;  // [bp-0x41]\n
    unsigned int *v191;  // [bp-0x40]\n
    struct struct_0 **v192;  // [bp-0x3c]\n
    unsigned int v193;  // [bp-0x38]\n
    char v194;  // [bp-0x31]\n
    unsigned int *v195;  // [bp-0x30]\n
    struct struct_0 **v196;  // [bp-0x2c]\n
    unsigned int v197;  // [bp-0x28]\n
    char v198;  // [bp-0x21]\n
    unsigned int *v199;  // [bp-0x20]\n
    struct struct_0 **v200;  // [bp-0x1c]\n
    unsigned int v201;  // [bp-0x18]\n
    char v202;  // [bp-0x11]\n
    unsigned int *v203;  // [bp-0x10]\n
    struct struct_0 **v204;  // [bp-0xc]\n
    unsigned int v205;  // [bp-0x8]\n
    unsigned int v207;  // ebx\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_0 **v213;  // eax\n
    unsigned int v214[2];  // ecx\n
    unsigned int *v215;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    unsigned int *v227;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    struct struct_0 **v232;  // eax\n
    unsigned int *v233;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v246;  // eax\n
    unsigned int *v247;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v249;  // eax\n
    struct struct_0 **v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    struct struct_0 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    unsigned int *v275;  // eax\n
    struct struct_0 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    struct struct_0 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    unsigned int *v283;  // eax\n
    struct struct_0 **v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    struct struct_0 **v291;  // eax\n
    unsigned int *v292;  // eax\n
    struct struct_0 **v294;  // eax\n
    unsigned int *v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_0 **v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_0 **v302;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax, Other Possible Types: unsigned int\n
    unsigned int v310;  // ebx\n
\n
    v205 = v207;\n
    v33 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v47 = cgc__cookie;\n
    v46 = -1;\n
    if (cgc_sendline(1, \"===llamaworshipability===\", 25) < 0)\n
        cgc__terminate();\n
    v161 = v206;\n
    v160 = a0;\n
    if (*(v160) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v159 = *(&*(v161)->field_0);\n
    v208 = v160;\n
    *(v208) = *(v208) - 2;\n
    v209 = v161;\n
    *(v209) = &*(v209)->padding_1[1];\n
    if (v159 <= *(v160) && !(!v159))\n
        goto LABEL_4bdb1d;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bdb1d:\n
    v158 = cgc_calloc(v159);\n
    if (!v158)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v158, *(v161), v159);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v210 = v160;\n
    *(v210) = *(v210) - v159;\n
    v211 = v161;\n
    *(v211) = &(&*(v211)->field_0)[v159];\n
    cgc_checkheap();\n
    cgc_free(v158);\n
    v81 = v206;\n
    v80 = a0;\n
    *(&v77[0]) = *(v81);\n
    memset(&v76, 0, 21);\n
    if (*(v80) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v77[0])\n
    {\n
        v32 = 0;\n
        if (v77[1])\n
        {\n
            v32 = 0;\n
            if (v77[2])\n
            {\n
                v32 = 0;\n
                if (v77[3])\n
                {\n
                    v32 = 0;\n
                    if (v77[4] << 24)\n
                    {\n
                        v32 = 0;\n
                        if (v77[5] << 16)\n
                        {\n
                            v32 = 0;\n
                            if (v77[6] << 8)\n
                                v32 = v77[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v78 = v32 & 1;\n
    v79 = 0;\n
    cgc_uint2str(&v76, 21, v78);\n
    v31 = &v76;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v76)) < 0)\n
        cgc__terminate();\n
    v212 = v80;\n
    *(v212) = *(v212) - 8;\n
    v213 = v81;\n
    *(v213) = &(*(v213))[1].padding_1[2];\n
    v188 = v206;\n
    v187 = a0;\n
    memset(&v184, 0, 21);\n
    if (*(v187) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v214 = *(v188);\n
    v186 = v214[1];\n
    v185 = v214[0];\n
    cgc_uint2str(&v184, 21, v185);\n
    v30 = &v184;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v184)) < 0)\n
        cgc__terminate();\n
    v215 = v187;\n
    *(v215) = *(v215) - 8;\n
    v216 = v188;\n
    *(v216) = &(*(v216))[1].padding_1[2];\n
    v145 = v206;\n
    v144 = a0;\n
    memset(&v142, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    cgc_uint2str(&v142, 12, v143);\n
    v29 = &v142;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v217 = v144;\n
    *(v217) = *(v217) - 4;\n
    v218 = v145;\n
    *(v218) = &*(v218)->field_4;\n
    v63 = v206;\n
    v62 = a0;\n
    v60 = &*(v63)->field_0;\n
    memset(&v59, 0, 6);\n
    if (*(v62) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = 0;\n
    if (*(v60) << 8)\n
        v28 = v60[1];\n
    v61 = v28 & 1;\n
    cgc_uint2str(&v59, 6, v61);\n
    v27 = &v59;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v219 = v62;\n
    *(v219) = *(v219) - 2;\n
    v220 = v63;\n
    *(v220) = &*(v220)->padding_1[1];\n
    v117 = v206;\n
    v116 = a0;\n
    memset(&v114, 0, 6);\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = *(&*(v117)->field_0);\n
    cgc_uint2str(&v114, 6, v115);\n
    v26 = &v114;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v221 = v116;\n
    *(v221) = *(v221) - 2;\n
    v222 = v117;\n
    *(v222) = &*(v222)->padding_1[1];\n
    v204 = v206;\n
    v203 = a0;\n
    if (*(v203) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = *(v204)->field_0;\n
    v223 = v203;\n
    *(v223) = *(v223) - 1;\n
    v224 = v204;\n
    *(v224) = &*(v224)->padding_1;\n
    if (v202 <= *(v203) && !(!v202))\n
        goto LABEL_4be4b4;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4be4b4:\n
    v201 = cgc_calloc(v202);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v201, *(v204), v202);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v225 = v204;\n
    *(v225) = &(&*(v225)->field_0)[v202];\n
    v226 = v203;\n
    *(v226) = *(v226) - v202;\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    v173 = v206;\n
    v172 = a0;\n
    if (*(v172) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v171 = *(&*(v173)->field_0);\n
    v227 = v172;\n
    *(v227) = *(v227) - 2;\n
    v228 = v173;\n
    *(v228) = &*(v228)->padding_1[1];\n
    if (v171 <= *(v172) && !(!v171))\n
        goto LABEL_4be6cd;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4be6cd:\n
    v170 = cgc_calloc(v171);\n
    if (!v170)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v170, *(v173), v171);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v229 = v172;\n
    *(v229) = *(v229) - v171;\n
    v230 = v173;\n
    *(v230) = &(&*(v230)->field_0)[v171];\n
    cgc_checkheap();\n
    cgc_free(v170);\n
    v169 = v206;\n
    v168 = a0;\n
    if (*(v168) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v167 = *(&*(v169)->field_0);\n
    v231 = v168;\n
    *(v231) = *(v231) - 2;\n
    v232 = v169;\n
    *(v232) = &*(v232)->padding_1[1];\n
    if (v167 <= *(v168) && !(!v167))\n
        goto LABEL_4be907;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4be907:\n
    v166 = cgc_calloc(v167);\n
    if (!v166)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v166, *(v169), v167);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v233 = v168;\n
    *(v233) = *(v233) - v167;\n
    v234 = v169;\n
    *(v234) = &(&*(v234)->field_0)[v167];\n
    cgc_checkheap();\n
    cgc_free(v166);\n
    v125 = v206;\n
    v124 = a0;\n
    memset(&v122, 0, 4);\n
    if (*(v124) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(v125)->field_0;\n
    cgc_uint2str(&v122, 4, v123);\n
    v25 = &v122;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v235 = v124;\n
    *(v235) = *(v235) - 1;\n
    v236 = v125;\n
    *(v236) = &*(v236)->padding_1;\n
    v153 = v206;\n
    v152 = a0;\n
    memset(&v150, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v151 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(fpround<4>);\n
    v40 = v41 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v150, 12, v45);\n
    v24 = &v150;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v237 = v152;\n
    *(v237) = *(v237) - 4;\n
    v238 = v153;\n
    *(v238) = &*(v238)->field_4;\n
    v149 = v206;\n
    v148 = a0;\n
    memset(&v146, 0, 12);\n
    if (*(v148) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v147 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-886, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v146, 12, v44);\n
    v23 = &v146;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v239 = v148;\n
    *(v239) = *(v239) - 4;\n
    v240 = v149;\n
    *(v240) = &*(v240)->field_4;\n
    v58 = v206;\n
    v57 = a0;\n
    *(&v55) = *(v58);\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v55[0] << 8)\n
        v22 = v55[1];\n
    v56 = v22 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v21 = &v54;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v241 = v57;\n
    *(v241) = *(v241) - 2;\n
    v242 = v58;\n
    *(v242) = &*(v242)->padding_1[1];\n
    v101 = v206;\n
    v100 = a0;\n
    if (*(v100) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v100) >= 128)\n
        v20 = 128;\n
    else\n
        v20 = *(v100);\n
    v99 = v20;\n
    if (!v99)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v98 = cgc_calloc(134);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v98, &v33[18].padding_0[182]);\n
    cgc_strncpy(v98 + 5, *(v101), v99);\n
    v244 = v101;\n
    *(v244) = &(&*(v244)->field_4)[cgc_strlen(v98)];\n
    v246 = v100;\n
    *(v246) = *(v246) - (cgc_strlen(v98) + -4);\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v183 = v206;\n
    v182 = a0;\n
    *(&v180[0]) = *(v183);\n
    memset(&v179, 0, 12);\n
    if (*(v182) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v19 = 0;\n
    if (v180[0] << 24)\n
    {\n
        v19 = 0;\n
        if (v180[1] << 16)\n
        {\n
            v19 = 0;\n
            if (v180[2] << 8)\n
                v19 = v180[3];\n
        }\n
    }\n
    v181 = v19 & 1;\n
    cgc_uint2str(&v179, 12, v181);\n
    v18 = &v179;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v179)) < 0)\n
        cgc__terminate();\n
    v247 = v182;\n
    *(v247) = *(v247) - 4;\n
    v248 = v183;\n
    *(v248) = &*(v248)->field_4;\n
    v133 = v206;\n
    v132 = a0;\n
    memset(&v130, 0, 21);\n
    if (*(v132) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v131 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-890, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v130, 21, v43);\n
    v17 = &v130;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v249 = v132;\n
    *(v249) = *(v249) - 8;\n
    v250 = v133;\n
    *(v250) = &(*(v250))[1].padding_1[2];\n
    v89 = v206;\n
    v88 = a0;\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(v89)->field_0;\n
    v251 = v88;\n
    *(v251) = *(v251) - 1;\n
    v252 = v89;\n
    *(v252) = &*(v252)->padding_1;\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_4bf681;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bf681:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v253 = v89;\n
    *(v253) = &(&*(v253)->field_0)[v87];\n
    v254 = v88;\n
    *(v254) = *(v254) - v87;\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v113 = v206;\n
    v112 = a0;\n
    memset(&v110, 0, 6);\n
    if (*(v112) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = *(&*(v113)->field_0);\n
    cgc_uint2str(&v110, 6, v111);\n
    v16 = &v110;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v255 = v112;\n
    *(v255) = *(v255) - 2;\n
    v256 = v113;\n
    *(v256) = &*(v256)->padding_1[1];\n
    v141 = v206;\n
    v140 = a0;\n
    memset(&v138, 0, 12);\n
    if (*(v140) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    cgc_uint2str(&v138, 12, v139);\n
    v15 = &v138;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v257 = v140;\n
    *(v257) = *(v257) - 4;\n
    v258 = v141;\n
    *(v258) = &*(v258)->field_4;\n
    v200 = v206;\n
    v199 = a0;\n
    if (*(v199) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v198 = *(v200)->field_0;\n
    v259 = v199;\n
    *(v259) = *(v259) - 1;\n
    v260 = v200;\n
    *(v260) = &*(v260)->padding_1;\n
    if (v198 <= *(v199) && !(!v198))\n
        goto LABEL_4bfb24;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4bfb24:\n
    v197 = cgc_calloc(v198);\n
    if (!v197)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v197, *(v200), v198);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v261 = v200;\n
    *(v261) = &(&*(v261)->field_0)[v198];\n
    v262 = v199;\n
    *(v262) = *(v262) - v198;\n
    cgc_checkheap();\n
    cgc_free(v197);\n
    v75 = v206;\n
    v74 = a0;\n
    *(&v71[0]) = *(v75);\n
    memset(&v70, 0, 21);\n
    if (*(v74) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v71[0])\n
    {\n
        v14 = 0;\n
        if (v71[1])\n
        {\n
            v14 = 0;\n
            if (v71[2])\n
            {\n
                v14 = 0;\n
                if (v71[3])\n
                {\n
                    v14 = 0;\n
                    if (v71[4] << 24)\n
                    {\n
                        v14 = 0;\n
                        if (v71[5] << 16)\n
                        {\n
                            v14 = 0;\n
                            if (v71[6] << 8)\n
                                v14 = v71[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v72 = v14 & 1;\n
    v73 = 0;\n
    cgc_uint2str(&v70, 21, v72);\n
    v13 = &v70;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v263 = v74;\n
    *(v263) = *(v263) - 8;\n
    v264 = v75;\n
    *(v264) = &(*(v264))[1].padding_1[2];\n
    v129 = v206;\n
    v128 = a0;\n
    memset(&v126, 0, 21);\n
    if (*(v128) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v127 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-894, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v126, 21, v42);\n
    v12 = &v126;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v265 = v128;\n
    *(v265) = *(v265) - 8;\n
    v266 = v129;\n
    *(v266) = &(*(v266))[1].padding_1[2];\n
    v157 = v206;\n
    v156 = a0;\n
    if (*(v156) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v155 = *(&*(v157)->field_0);\n
    v267 = v156;\n
    *(v267) = *(v267) - 2;\n
    v268 = v157;\n
    *(v268) = &*(v268)->padding_1[1];\n
    if (v155 <= *(v156) && !(!v155))\n
        goto LABEL_4c00f9;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c00f9:\n
    v154 = cgc_calloc(v155);\n
    if (!v154)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v154, *(v157), v155);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v269 = v156;\n
    *(v269) = *(v269) - v155;\n
    v270 = v157;\n
    *(v270) = &(&*(v270)->field_0)[v155];\n
    cgc_checkheap();\n
    cgc_free(v154);\n
    v85 = v206;\n
    v84 = a0;\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(v85)->field_0;\n
    v271 = v84;\n
    *(v271) = *(v271) - 1;\n
    v272 = v85;\n
    *(v272) = &*(v272)->padding_1;\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_4c0331;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c0331:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v273 = v85;\n
    *(v273) = &(&*(v273)->field_0)[v83];\n
    v274 = v84;\n
    *(v274) = *(v274) - v83;\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v109 = v206;\n
    v108 = a0;\n
    memset(&v106, 0, 6);\n
    if (*(v108) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(&*(v109)->field_0);\n
    cgc_uint2str(&v106, 6, v107);\n
    v11 = &v106;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v275 = v108;\n
    *(v275) = *(v275) - 2;\n
    v276 = v109;\n
    *(v276) = &*(v276)->padding_1[1];\n
    v196 = v206;\n
    v195 = a0;\n
    if (*(v195) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v194 = *(v196)->field_0;\n
    v277 = v195;\n
    *(v277) = *(v277) - 1;\n
    v278 = v196;\n
    *(v278) = &*(v278)->padding_1;\n
    if (v194 <= *(v195) && !(!v194))\n
        goto LABEL_4c0691;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c0691:\n
    v193 = cgc_calloc(v194);\n
    if (!v193)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v193, *(v196), v194);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v279 = v196;\n
    *(v279) = &(&*(v279)->field_0)[v194];\n
    v280 = v195;\n
    *(v280) = *(v280) - v194;\n
    cgc_checkheap();\n
    cgc_free(v193);\n
    v178 = v206;\n
    v177 = a0;\n
    *(&v175[0]) = *(v178);\n
    memset(&v174, 0, 12);\n
    if (*(v177) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v175[0] << 24)\n
    {\n
        v10 = 0;\n
        if (v175[1] << 16)\n
        {\n
            v10 = 0;\n
            if (v175[2] << 8)\n
                v10 = v175[3];\n
        }\n
    }\n
    v176 = v10 & 1;\n
    cgc_uint2str(&v174, 12, v176);\n
    v9 = &v174;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v174)) < 0)\n
        cgc__terminate();\n
    v281 = v177;\n
    *(v281) = *(v281) - 4;\n
    v282 = v178;\n
    *(v282) = &*(v282)->field_4;\n
    v165 = v206;\n
    v164 = a0;\n
    if (*(v164) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = *(&*(v165)->field_0);\n
    v283 = v164;\n
    *(v283) = *(v283) - 2;\n
    v284 = v165;\n
    *(v284) = &*(v284)->padding_1[1];\n
    if (v163 <= *(v164) && !(!v163))\n
        goto LABEL_4c0a6b;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c0a6b:\n
    v162 = cgc_calloc(v163);\n
    if (!v162)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v162, *(v165), v163);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v285 = v164;\n
    *(v285) = *(v285) - v163;\n
    v286 = v165;\n
    *(v286) = &(&*(v286)->field_0)[v163];\n
    cgc_checkheap();\n
    cgc_free(v162);\n
    v105 = v206;\n
    v104 = a0;\n
    memset(&v102, 0, 6);\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(&*(v105)->field_0);\n
    cgc_uint2str(&v102, 6, v103);\n
    v8 = &v102;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v287 = v104;\n
    *(v287) = *(v287) - 2;\n
    v288 = v105;\n
    *(v288) = &*(v288)->padding_1[1];\n
    v192 = v206;\n
    v191 = a0;\n
    if (*(v191) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v190 = *(v192)->field_0;\n
    v289 = v191;\n
    *(v289) = *(v289) - 1;\n
    v290 = v192;\n
    *(v290) = &*(v290)->padding_1;\n
    if (v190 <= *(v191) && !(!v190))\n
        goto LABEL_4c0dcb;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c0dcb:\n
    v189 = cgc_calloc(v190);\n
    if (!v189)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v189, *(v192), v190);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v291 = v192;\n
    *(v291) = &(&*(v291)->field_0)[v190];\n
    v292 = v191;\n
    *(v292) = *(v292) - v190;\n
    cgc_checkheap();\n
    cgc_free(v189);\n
    v97 = v206;\n
    v96 = a0;\n
    if (*(v96) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v96) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v96);\n
    v95 = v7;\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = cgc_calloc(134);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v94, &v33[18].padding_0[182]);\n
    cgc_strncpy(v94 + 5, *(v97), v95);\n
    v294 = v97;\n
    *(v294) = &(&*(v294)->field_4)[cgc_strlen(v94)];\n
    v296 = v96;\n
    *(v296) = *(v296) - (cgc_strlen(v94) + -4);\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v69 = v206;\n
    v68 = a0;\n
    *(&v65[0]) = *(v69);\n
    memset(&v64, 0, 21);\n
    if (*(v68) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v65[0])\n
    {\n
        v6 = 0;\n
        if (v65[1])\n
        {\n
            v6 = 0;\n
            if (v65[2])\n
            {\n
                v6 = 0;\n
                if (v65[3])\n
                {\n
                    v6 = 0;\n
                    if (v65[4] << 24)\n
                    {\n
                        v6 = 0;\n
                        if (v65[5] << 16)\n
                        {\n
                            v6 = 0;\n
                            if (v65[6] << 8)\n
                                v6 = v65[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v66 = v6 & 1;\n
    v67 = 0;\n
    cgc_uint2str(&v64, 21, v66);\n
    v5 = &v64;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v64)) < 0)\n
        cgc__terminate();\n
    v297 = v68;\n
    *(v297) = *(v297) - 8;\n
    v298 = v69;\n
    *(v298) = &(*(v298))[1].padding_1[2];\n
    v121 = v206;\n
    v120 = a0;\n
    memset(&v118, 0, 4);\n
    if (*(v120) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v119 = *(v121)->field_0;\n
    cgc_uint2str(&v118, 4, v119);\n
    v4 = &v118;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v299 = v120;\n
    *(v299) = *(v299) - 1;\n
    v300 = v121;\n
    *(v300) = &*(v300)->padding_1;\n
    v137 = v206;\n
    v136 = a0;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(&*(v137)->field_0);\n
    cgc_uint2str(&v134, 12, v135);\n
    v3 = &v134;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v301 = v136;\n
    *(v301) = *(v301) - 4;\n
    v302 = v137;\n
    *(v302) = &*(v302)->field_4;\n
    v93 = v206;\n
    v92 = a0;\n
    if (*(v92) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v92) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v92);\n
    v91 = v2;\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = cgc_calloc(134);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v90, &v33[18].padding_0[182]);\n
    cgc_strncpy(v90 + 5, *(v93), v91);\n
    v304 = v93;\n
    *(v304) = &(&*(v304)->field_4)[cgc_strlen(v90)];\n
    v306 = v92;\n
    *(v306) = *(v306) - (cgc_strlen(v90) + -4);\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v53 = v206;\n
    v52 = a0;\n
    *(&v50) = *(v53);\n
    memset(&v49, 0, 6);\n
    if (*(v52) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v50[0] << 8)\n
        v1 = v50[1];\n
    v51 = v1 & 1;\n
    cgc_uint2str(&v49, 6, v51);\n
    v0 = &v49;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v49)) < 0)\n
        cgc__terminate();\n
    v307 = v52;\n
    *(v307) = *(v307) - 2;\n
    v308 = v53;\n
    *(v308) = &*(v308)->padding_1[1];\n
    v47 ^= v33->field_260;\n
    if (v47)\n
        cgc___stack_cookie_fail();\n
    v309 = a0;\n
    if (*(v309) > 0 && v46 >= 0 && v46 < 0)\n
        v309 = *((&v48 + 0x4 * v46))(v206);\n
    v310 = v205;\n
    return v309;\n
}\n
", "4987559:sub_4c1aa7": null, "4987568:cgc_process_llamaparmacety": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaparmacety(struct struct_0 **v59, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x148]\n
    unsigned int v1;  // [bp-0x144]\n
    struct_3 *v2;  // [bp-0x140]\n
    struct_3 *v3;  // [bp-0x13c]\n
    unsigned int v4;  // [bp-0x138]\n
    struct_3 *v5;  // [bp-0x134]\n
    struct_3 *v6;  // [bp-0x130]\n
    char v7;  // [bp-0x129]\n
    struct_1 *v8;  // [bp-0x128]\n
    unsigned short v9;  // [bp-0x124]\n
    unsigned short v10;  // [bp-0x122]\n
    unsigned short v11;  // [bp-0x120]\n
    unsigned short v12;  // [bp-0x11e]\n
    unsigned short v13;  // [bp-0x11c]\n
    unsigned short v14;  // [bp-0x11a]\n
    unsigned short v15;  // [bp-0x118]\n
    unsigned short v16;  // [bp-0x116]\n
    unsigned long v17;  // [bp-0x114]\n
    unsigned long v18;  // [bp-0x10c]\n
    unsigned long v19;  // [bp-0x104]\n
    unsigned long v20;  // [bp-0xfc]\n
    struct struct_2 **v21;  // [bp-0xf0]\n
    unsigned int v22;  // [bp-0xec]\n
    char v23;  // [bp-0xe8]\n
    char v24;  // [bp-0xe5]\n
    char v25[8];  // [bp-0xd0]\n
    unsigned int v26;  // [bp-0xcc]\n
    void* v27;  // [bp-0xc8]\n
    unsigned int *v28;  // [bp-0xc4]\n
    struct struct_0 **v29;  // [bp-0xc0]\n
    unsigned int v30;  // [bp-0xbc]\n
    char v31;  // [bp-0xb5]\n
    unsigned int *v32;  // [bp-0xb4]\n
    struct struct_0 **v33;  // [bp-0xb0]\n
    char *v34;  // [bp-0xac]\n
    unsigned int v35;  // [bp-0xa8]\n
    unsigned int *v36;  // [bp-0xa4]\n
    struct struct_0 **v37;  // [bp-0xa0]\n
    char *v38;  // [bp-0x9c]\n
    unsigned int v39;  // [bp-0x98]\n
    unsigned int *v40;  // [bp-0x94]\n
    struct struct_0 **v41;  // [bp-0x90]\n
    char v42;  // [bp-0x89]\n
    unsigned long v43;  // [bp-0x74]\n
    unsigned int *v44;  // [bp-0x6c]\n
    struct struct_0 **v45;  // [bp-0x68]\n
    char v46;  // [bp-0x61]\n
    unsigned long v47;  // [bp-0x4c]\n
    unsigned int *v48;  // [bp-0x40]\n
    struct struct_0 **v49;  // [bp-0x3c]\n
    char v50;  // [bp-0x38]\n
    unsigned int v51;  // [bp-0x2c]\n
    unsigned int *v52;  // [bp-0x28]\n
    struct struct_0 **v53;  // [bp-0x24]\n
    char v54;  // [bp-0x20]\n
    unsigned int v55;  // [bp-0x14]\n
    unsigned int *v56;  // [bp-0x10]\n
    struct struct_0 **v57;  // [bp-0xc]\n
    unsigned int v58;  // [bp-0x8]\n
    unsigned int v60;  // ebx\n
    unsigned int *v61;  // eax\n
    struct struct_0 **v62;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v64;  // eax\n
    struct struct_0 **v66;  // eax\n
    unsigned int *v68;  // eax\n
    unsigned int *v69;  // eax\n
    struct struct_0 **v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_0 **v72;  // eax\n
    unsigned int *v73;  // eax\n
    struct struct_0 **v74;  // eax\n
    struct struct_0 **v75;  // eax\n
    unsigned int *v76;  // eax\n
    struct struct_0 **v78;  // eax\n
    unsigned int *v80;  // eax\n
    unsigned int *v81;  // eax\n
    struct struct_0 **v82;  // eax\n
    unsigned int *v83;  // eax, Other Possible Types: unsigned int\n
    unsigned int v84;  // ebx\n
\n
    v58 = v60;\n
    v8 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v22 = cgc__cookie;\n
    v21 = -1;\n
    if (cgc_sendline(1, \"===llamaparmacety===\", 20) < 0)\n
        cgc__terminate();\n
    v29 = v59;\n
    v28 = a0;\n
    *(&v25[0]) = *(v29);\n
    memset(&v24, 0, 21);\n
    if (*(v28) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v25[0])\n
    {\n
        v7 = 0;\n
        if (v25[1])\n
        {\n
            v7 = 0;\n
            if (v25[2])\n
            {\n
                v7 = 0;\n
                if (v25[3])\n
                {\n
                    v7 = 0;\n
                    if (v25[4] << 24)\n
                    {\n
                        v7 = 0;\n
                        if (v25[5] << 16)\n
                        {\n
                            v7 = 0;\n
                            if (v25[6] << 8)\n
                                v7 = v25[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v26 = v7 & 1;\n
    v27 = 0;\n
    cgc_uint2str(&v24, 21, v26);\n
    v6 = &v24;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v61 = v28;\n
    *(v61) = *(v61) - 8;\n
    v62 = v29;\n
    *(v62) = *(v62) + 1;\n
    v57 = v59;\n
    v56 = a0;\n
    memset(&v54, 0, 12);\n
    if (*(v56) < 4)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v55 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v16 = [D] x86g_create_fpucw(fpround<4>);\n
    v15 = v16 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v54, 12, v20);\n
    v5 = &v54;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v63 = v56;\n
    *(v63) = *(v63) - 4;\n
    v64 = v57;\n
    *(v64) = &*(v64)->field_4;\n
    v41 = v59;\n
    v40 = a0;\n
    if (*(v40) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v40) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v40);\n
    v39 = v4;\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v38 = cgc_calloc(134);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v38, &v8[18].padding_0[182]);\n
    cgc_strncpy(v38 + 5, *(v41), v39);\n
    v66 = v41;\n
    *(v66) = &(&*(v66)->field_4)[cgc_strlen(v38)];\n
    v68 = v40;\n
    *(v68) = *(v68) - (cgc_strlen(v38) + -4);\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v53 = v59;\n
    v52 = a0;\n
    memset(&v50, 0, 12);\n
    if (*(v52) < 4)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v51 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v14 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-278, size=2, endness=Iend_LE)))));\n
    v13 = v14 | 0xc00;\n
    v19 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v50, 12, v19);\n
    v3 = &v50;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v50)) < 0)\n
        cgc__terminate();\n
    v69 = v52;\n
    *(v69) = *(v69) - 4;\n
    v70 = v53;\n
    *(v70) = &*(v70)->field_4;\n
    v49 = v59;\n
    v48 = a0;\n
    memset(&v46, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v47 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v12 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-282, size=2, endness=Iend_LE)))));\n
    v11 = v12 | 0xc00;\n
    v18 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v46, 21, v18);\n
    v2 = &v46;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v71 = v48;\n
    *(v71) = *(v71) - 8;\n
    v72 = v49;\n
    *(v72) = *(v72) + 1;\n
    v33 = v59;\n
    v32 = a0;\n
    if (*(v32) < 1)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = *(v33)->field_0;\n
    v73 = v32;\n
    *(v73) = *(v73) - 1;\n
    v74 = v33;\n
    *(v74) = &*(v74)->field_1;\n
    if (v31 <= *(v32) && !(!v31))\n
        goto LABEL_4c24f4;\n
    if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c24f4:\n
    v30 = cgc_calloc(v31);\n
    if (!v30)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v30, *(v33), v31);\n
    if (cgc_sendline(1, &v8[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v75 = v33;\n
    *(v75) = &(&*(v75)->field_0)[v31];\n
    v76 = v32;\n
    *(v76) = *(v76) - v31;\n
    cgc_checkheap();\n
    cgc_free(v30);\n
    v37 = v59;\n
    v36 = a0;\n
    if (*(v36) <= 0)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v36) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v36);\n
    v35 = v1;\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v34 = cgc_calloc(134);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v34, &v8[18].padding_0[182]);\n
    cgc_strncpy(v34 + 5, *(v37), v35);\n
    v78 = v37;\n
    *(v78) = &(&*(v78)->field_4)[cgc_strlen(v34)];\n
    v80 = v36;\n
    *(v80) = *(v80) - (cgc_strlen(v34) + -4);\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    if (cgc_sendline(1, &v8[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v45 = v59;\n
    v44 = a0;\n
    memset(&v42, 0, 21);\n
    if (*(v44) < 8)\n
    {\n
        if (cgc_sendline(1, &v8[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v43 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v10 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-286, size=2, endness=Iend_LE)))));\n
    v9 = v10 | 0xc00;\n
    v17 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v42, 21, v17);\n
    v0 = &v42;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v42)) < 0)\n
        cgc__terminate();\n
    v81 = v44;\n
    *(v81) = *(v81) - 8;\n
    v82 = v45;\n
    *(v82) = *(v82) + 1;\n
    v22 ^= v8->field_260;\n
    if (v22)\n
        cgc___stack_cookie_fail();\n
    v83 = a0;\n
    if (*(v83) > 0 && v21 >= 0 && v21 < 0)\n
        v83 = *((&v23 + 0x4 * v21))(v59);\n
    v84 = v58;\n
    return v83;\n
}\n
", "4991606:sub_4c2a76": null, "4991616:cgc_process_llamapronephros": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamapronephros(struct struct_0 **v207, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x448]\n
    char v1;  // [bp-0x441]\n
    unsigned int v2;  // [bp-0x440]\n
    struct_1 *v3;  // [bp-0x43c]\n
    struct_1 *v4;  // [bp-0x438]\n
    struct_1 *v5;  // [bp-0x434]\n
    char v6;  // [bp-0x42d]\n
    unsigned int v7;  // [bp-0x42c]\n
    unsigned int v8;  // [bp-0x428]\n
    unsigned int v9;  // [bp-0x424]\n
    struct_1 *v10;  // [bp-0x420]\n
    struct_1 *v11;  // [bp-0x41c]\n
    unsigned int v12;  // [bp-0x418]\n
    struct_1 *v13;  // [bp-0x414]\n
    struct_1 *v14;  // [bp-0x410]\n
    char v15;  // [bp-0x409]\n
    struct_1 *v16;  // [bp-0x408]\n
    struct_1 *v17;  // [bp-0x404]\n
    char v18;  // [bp-0x3fd]\n
    struct_1 *v19;  // [bp-0x3fc]\n
    char v20;  // [bp-0x3f5]\n
    struct_1 *v21;  // [bp-0x3f4]\n
    struct_1 *v22;  // [bp-0x3f0]\n
    unsigned int v23;  // [bp-0x3ec]\n
    struct_1 *v24;  // [bp-0x3e8]\n
    struct_1 *v25;  // [bp-0x3e4]\n
    struct_1 *v26;  // [bp-0x3e0]\n
    struct_1 *v27;  // [bp-0x3dc]\n
    struct_1 *v28;  // [bp-0x3d8]\n
    struct_1 *v29;  // [bp-0x3d4]\n
    struct_1 *v30;  // [bp-0x3d0]\n
    struct_2 *v31;  // [bp-0x3cc]\n
    unsigned short v32;  // [bp-0x3c8]\n
    unsigned short v33;  // [bp-0x3c6]\n
    unsigned short v34;  // [bp-0x3c4]\n
    unsigned short v35;  // [bp-0x3c2]\n
    unsigned short v36;  // [bp-0x3c0]\n
    unsigned short v37;  // [bp-0x3be]\n
    unsigned short v38;  // [bp-0x3bc]\n
    unsigned short v39;  // [bp-0x3ba]\n
    unsigned short v40;  // [bp-0x3b8]\n
    unsigned short v41;  // [bp-0x3b6]\n
    unsigned long v42;  // [bp-0x3b4]\n
    unsigned long v43;  // [bp-0x3ac]\n
    unsigned long v44;  // [bp-0x3a4]\n
    unsigned long v45;  // [bp-0x39c]\n
    unsigned long v46;  // [bp-0x394]\n
    struct struct_3 **v47;  // [bp-0x388]\n
    unsigned int v48;  // [bp-0x384]\n
    char v49;  // [bp-0x380]\n
    char v50;  // [bp-0x37e]\n
    char v51[2];  // [bp-0x378]\n
    unsigned short v52;  // [bp-0x372]\n
    unsigned int *v53;  // [bp-0x370]\n
    struct struct_0 **v54;  // [bp-0x36c]\n
    char v55;  // [bp-0x365]\n
    char v56[8];  // [bp-0x350]\n
    unsigned int v57;  // [bp-0x34c]\n
    void* v58;  // [bp-0x348]\n
    unsigned int *v59;  // [bp-0x340]\n
    struct struct_0 **v60;  // [bp-0x33c]\n
    char v61;  // [bp-0x335]\n
    char v62[8];  // [bp-0x320]\n
    unsigned int v63;  // [bp-0x31c]\n
    void* v64;  // [bp-0x318]\n
    unsigned int *v65;  // [bp-0x310]\n
    struct struct_0 **v66;  // [bp-0x30c]\n
    char v67;  // [bp-0x305]\n
    char v68[8];  // [bp-0x2f0]\n
    unsigned int v69;  // [bp-0x2ec]\n
    void* v70;  // [bp-0x2e8]\n
    unsigned int *v71;  // [bp-0x2e0]\n
    struct struct_0 **v72;  // [bp-0x2dc]\n
    char v73;  // [bp-0x2d5]\n
    char v74[8];  // [bp-0x2c0]\n
    unsigned int v75;  // [bp-0x2bc]\n
    void* v76;  // [bp-0x2b8]\n
    unsigned int *v77;  // [bp-0x2b4]\n
    struct struct_0 **v78;  // [bp-0x2b0]\n
    unsigned int v79;  // [bp-0x2ac]\n
    char v80;  // [bp-0x2a5]\n
    unsigned int *v81;  // [bp-0x2a4]\n
    struct struct_0 **v82;  // [bp-0x2a0]\n
    unsigned int v83;  // [bp-0x29c]\n
    char v84;  // [bp-0x295]\n
    unsigned int *v85;  // [bp-0x294]\n
    struct struct_0 **v86;  // [bp-0x290]\n
    char *v87;  // [bp-0x28c]\n
    unsigned int v88;  // [bp-0x288]\n
    unsigned int *v89;  // [bp-0x284]\n
    struct struct_0 **v90;  // [bp-0x280]\n
    char v91;  // [bp-0x27c]\n
    unsigned short v92;  // [bp-0x276]\n
    unsigned int *v93;  // [bp-0x274]\n
    struct struct_0 **v94;  // [bp-0x270]\n
    char v95;  // [bp-0x26c]\n
    unsigned short v96;  // [bp-0x266]\n
    unsigned int *v97;  // [bp-0x264]\n
    struct struct_0 **v98;  // [bp-0x260]\n
    char v99;  // [bp-0x25c]\n
    unsigned short v100;  // [bp-0x256]\n
    unsigned int *v101;  // [bp-0x254]\n
    struct struct_0 **v102;  // [bp-0x250]\n
    char v103;  // [bp-0x24c]\n
    unsigned short v104;  // [bp-0x246]\n
    unsigned int *v105;  // [bp-0x244]\n
    struct struct_0 **v106;  // [bp-0x240]\n
    char v107;  // [bp-0x239]\n
    char v108;  // [bp-0x235]\n
    unsigned int *v109;  // [bp-0x234]\n
    struct struct_0 **v110;  // [bp-0x230]\n
    char v111;  // [bp-0x229]\n
    unsigned long v112;  // [bp-0x214]\n
    unsigned int *v113;  // [bp-0x20c]\n
    struct struct_0 **v114;  // [bp-0x208]\n
    char v115;  // [bp-0x201]\n
    unsigned long v116;  // [bp-0x1ec]\n
    unsigned int *v117;  // [bp-0x1e4]\n
    struct struct_0 **v118;  // [bp-0x1e0]\n
    char v119;  // [bp-0x1d9]\n
    unsigned long v120;  // [bp-0x1c4]\n
    unsigned int *v121;  // [bp-0x1bc]\n
    struct struct_0 **v122;  // [bp-0x1b8]\n
    char v123;  // [bp-0x1b4]\n
    unsigned int v124;  // [bp-0x1a8]\n
    unsigned int *v125;  // [bp-0x1a4]\n
    struct struct_0 **v126;  // [bp-0x1a0]\n
    char v127;  // [bp-0x19c]\n
    unsigned int v128;  // [bp-0x190]\n
    unsigned int *v129;  // [bp-0x18c]\n
    struct struct_0 **v130;  // [bp-0x188]\n
    char v131;  // [bp-0x184]\n
    unsigned int v132;  // [bp-0x178]\n
    unsigned int *v133;  // [bp-0x174]\n
    struct struct_0 **v134;  // [bp-0x170]\n
    char v135;  // [bp-0x16c]\n
    unsigned int v136;  // [bp-0x160]\n
    unsigned int *v137;  // [bp-0x15c]\n
    struct struct_0 **v138;  // [bp-0x158]\n
    unsigned int v139;  // [bp-0x154]\n
    unsigned short v140;  // [bp-0x14e]\n
    unsigned int *v141;  // [bp-0x14c]\n
    struct struct_0 **v142;  // [bp-0x148]\n
    unsigned int v143;  // [bp-0x144]\n
    unsigned short v144;  // [bp-0x13e]\n
    unsigned int *v145;  // [bp-0x13c]\n
    struct struct_0 **v146;  // [bp-0x138]\n
    unsigned int v147;  // [bp-0x134]\n
    unsigned short v148;  // [bp-0x12e]\n
    unsigned int *v149;  // [bp-0x12c]\n
    struct struct_0 **v150;  // [bp-0x128]\n
    unsigned int v151;  // [bp-0x124]\n
    unsigned short v152;  // [bp-0x11e]\n
    unsigned int *v153;  // [bp-0x11c]\n
    struct struct_0 **v154;  // [bp-0x118]\n
    unsigned int v155;  // [bp-0x114]\n
    unsigned short v156;  // [bp-0x10e]\n
    unsigned int *v157;  // [bp-0x10c]\n
    struct struct_0 **v158;  // [bp-0x108]\n
    unsigned int v159;  // [bp-0x104]\n
    unsigned short v160;  // [bp-0xfe]\n
    unsigned int *v161;  // [bp-0xfc]\n
    struct struct_0 **v162;  // [bp-0xf8]\n
    unsigned int v163;  // [bp-0xf4]\n
    unsigned short v164;  // [bp-0xee]\n
    unsigned int *v165;  // [bp-0xec]\n
    struct struct_0 **v166;  // [bp-0xe8]\n
    char *v167;  // [bp-0xe4]\n
    unsigned int v168;  // [bp-0xe0]\n
    unsigned int *v169;  // [bp-0xdc]\n
    struct struct_0 **v170;  // [bp-0xd8]\n
    char *v171;  // [bp-0xd4]\n
    unsigned int v172;  // [bp-0xd0]\n
    unsigned int *v173;  // [bp-0xcc]\n
    struct struct_0 **v174;  // [bp-0xc8]\n
    char *v175;  // [bp-0xc4]\n
    unsigned int v176;  // [bp-0xc0]\n
    unsigned int *v177;  // [bp-0xbc]\n
    struct struct_0 **v178;  // [bp-0xb8]\n
    char *v179;  // [bp-0xb4]\n
    unsigned int v180;  // [bp-0xb0]\n
    unsigned int *v181;  // [bp-0xac]\n
    struct struct_0 **v182;  // [bp-0xa8]\n
    char *v183;  // [bp-0xa4]\n
    unsigned int v184;  // [bp-0xa0]\n
    unsigned int *v185;  // [bp-0x9c]\n
    struct struct_0 **v186;  // [bp-0x98]\n
    char v187;  // [bp-0x91]\n
    unsigned int v188;  // [bp-0x7c]\n
    unsigned int v189;  // [bp-0x78]\n
    unsigned int *v190;  // [bp-0x74]\n
    struct struct_0 **v191;  // [bp-0x70]\n
    char v192;  // [bp-0x69]\n
    unsigned int v193;  // [bp-0x54]\n
    unsigned int v194;  // [bp-0x50]\n
    unsigned int *v195;  // [bp-0x4c]\n
    struct struct_0 **v196;  // [bp-0x48]\n
    char v197;  // [bp-0x41]\n
    unsigned int v198;  // [bp-0x2c]\n
    unsigned int v199;  // [bp-0x28]\n
    unsigned int *v200;  // [bp-0x20]\n
    struct struct_0 **v201;  // [bp-0x1c]\n
    unsigned int v202;  // [bp-0x18]\n
    char v203;  // [bp-0x11]\n
    unsigned int *v204;  // [bp-0x10]\n
    struct struct_0 **v205;  // [bp-0xc]\n
    unsigned int v206;  // [bp-0x8]\n
    unsigned int v208;  // ebx\n
    unsigned int *v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    unsigned int v215[2];  // ecx\n
    unsigned int *v216;  // eax\n
    struct struct_0 **v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    unsigned int v234[2];  // ecx\n
    unsigned int *v235;  // eax\n
    struct struct_0 **v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    unsigned int v247[2];  // ecx\n
    unsigned int *v248;  // eax\n
    struct struct_0 **v249;  // eax\n
    struct struct_0 **v251;  // eax\n
    unsigned int *v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_0 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    struct struct_0 **v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    unsigned int *v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_0 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    struct struct_0 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_0 **v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_0 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_0 **v279;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_0 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_0 **v289;  // eax\n
    unsigned int *v290;  // eax\n
    struct struct_0 **v291;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v303;  // eax\n
    unsigned int *v304;  // eax\n
    struct struct_0 **v305;  // eax\n
    unsigned int *v306;  // eax\n
    struct struct_0 **v307;  // eax\n
    unsigned int *v308;  // eax\n
    struct struct_0 **v309;  // eax\n
    struct struct_0 **v311;  // eax\n
    unsigned int *v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_0 **v315;  // eax\n
    unsigned int *v316;  // eax, Other Possible Types: unsigned int\n
    unsigned int v317;  // ebx\n
\n
    v206 = v208;\n
    v31 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v48 = cgc__cookie;\n
    v47 = -1;\n
    if (cgc_sendline(1, \"===llamapronephros===\", 21) < 0)\n
        cgc__terminate();\n
    v150 = v207;\n
    v149 = a0;\n
    if (*(v149) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = *(&*(v150)->field_0);\n
    v209 = v149;\n
    *(v209) = *(v209) - 2;\n
    v210 = v150;\n
    *(v210) = &*(v210)->padding_1[1];\n
    if (v148 <= *(v149) && !(!v148))\n
        goto LABEL_4c2c0d;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c2c0d:\n
    v147 = cgc_calloc(v148);\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v147, *(v150), v148);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v211 = v149;\n
    *(v211) = *(v211) - v148;\n
    v212 = v150;\n
    *(v212) = &(&*(v212)->field_0)[v148];\n
    cgc_checkheap();\n
    cgc_free(v147);\n
    v138 = v207;\n
    v137 = a0;\n
    memset(&v135, 0, 12);\n
    if (*(v137) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v136 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(fpround<4>);\n
    v40 = v41 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v135, 12, v46);\n
    v30 = &v135;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v213 = v137;\n
    *(v213) = *(v213) - 4;\n
    v214 = v138;\n
    *(v214) = &*(v214)->field_4;\n
    v201 = v207;\n
    v200 = a0;\n
    memset(&v197, 0, 21);\n
    if (*(v200) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v215 = *(v201);\n
    v199 = v215[1];\n
    v198 = v215[0];\n
    cgc_uint2str(&v197, 21, v198);\n
    v29 = &v197;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v197)) < 0)\n
        cgc__terminate();\n
    v216 = v200;\n
    *(v216) = *(v216) - 8;\n
    v217 = v201;\n
    *(v217) = &(*(v217))[1].padding_1[2];\n
    v86 = v207;\n
    v85 = a0;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(v86)->field_0;\n
    v218 = v85;\n
    *(v218) = *(v218) - 1;\n
    v219 = v86;\n
    *(v219) = &*(v219)->padding_1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_4c30de;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c30de:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v220 = v86;\n
    *(v220) = &(&*(v220)->field_0)[v84];\n
    v221 = v85;\n
    *(v221) = *(v221) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v166 = v207;\n
    v165 = a0;\n
    if (*(v165) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v164 = *(&*(v166)->field_0);\n
    v222 = v165;\n
    *(v222) = *(v222) - 2;\n
    v223 = v166;\n
    *(v223) = &*(v223)->padding_1[1];\n
    if (v164 <= *(v165) && !(!v164))\n
        goto LABEL_4c3318;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c3318:\n
    v163 = cgc_calloc(v164);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v163, *(v166), v164);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v224 = v165;\n
    *(v224) = *(v224) - v164;\n
    v225 = v166;\n
    *(v225) = &(&*(v225)->field_0)[v164];\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    v205 = v207;\n
    v204 = a0;\n
    if (*(v204) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v203 = *(v205)->field_0;\n
    v226 = v204;\n
    *(v226) = *(v226) - 1;\n
    v227 = v205;\n
    *(v227) = &*(v227)->padding_1;\n
    if (v203 <= *(v204) && !(!v203))\n
        goto LABEL_4c3532;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c3532:\n
    v202 = cgc_calloc(v203);\n
    if (!v202)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v202, *(v205), v203);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v228 = v205;\n
    *(v228) = &(&*(v228)->field_0)[v203];\n
    v229 = v204;\n
    *(v229) = *(v229) - v203;\n
    cgc_checkheap();\n
    cgc_free(v202);\n
    v106 = v207;\n
    v105 = a0;\n
    memset(&v103, 0, 6);\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(&*(v106)->field_0);\n
    cgc_uint2str(&v103, 6, v104);\n
    v28 = &v103;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v230 = v105;\n
    *(v230) = *(v230) - 2;\n
    v231 = v106;\n
    *(v231) = &*(v231)->padding_1[1];\n
    v122 = v207;\n
    v121 = a0;\n
    memset(&v119, 0, 21);\n
    if (*(v121) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-950, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v119, 21, v45);\n
    v27 = &v119;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v232 = v121;\n
    *(v232) = *(v232) - 8;\n
    v233 = v122;\n
    *(v233) = &(*(v233))[1].padding_1[2];\n
    v196 = v207;\n
    v195 = a0;\n
    memset(&v192, 0, 21);\n
    if (*(v195) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v234 = *(v196);\n
    v194 = v234[1];\n
    v193 = v234[0];\n
    cgc_uint2str(&v192, 21, v193);\n
    v26 = &v192;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v192)) < 0)\n
        cgc__terminate();\n
    v235 = v195;\n
    *(v235) = *(v235) - 8;\n
    v236 = v196;\n
    *(v236) = &(*(v236))[1].padding_1[2];\n
    v162 = v207;\n
    v161 = a0;\n
    if (*(v161) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v160 = *(&*(v162)->field_0);\n
    v237 = v161;\n
    *(v237) = *(v237) - 2;\n
    v238 = v162;\n
    *(v238) = &*(v238)->padding_1[1];\n
    if (v160 <= *(v161) && !(!v160))\n
        goto LABEL_4c3b2a;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c3b2a:\n
    v159 = cgc_calloc(v160);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v159, *(v162), v160);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v239 = v161;\n
    *(v239) = *(v239) - v160;\n
    v240 = v162;\n
    *(v240) = &(&*(v240)->field_0)[v160];\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    v146 = v207;\n
    v145 = a0;\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(&*(v146)->field_0);\n
    v241 = v145;\n
    *(v241) = *(v241) - 2;\n
    v242 = v146;\n
    *(v242) = &*(v242)->padding_1[1];\n
    if (v144 <= *(v145) && !(!v144))\n
        goto LABEL_4c3d64;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c3d64:\n
    v143 = cgc_calloc(v144);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v143, *(v146), v144);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v243 = v145;\n
    *(v243) = *(v243) - v144;\n
    v244 = v146;\n
    *(v244) = &(&*(v244)->field_0)[v144];\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    v110 = v207;\n
    v109 = a0;\n
    memset(&v107, 0, 4);\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(v110)->field_0;\n
    cgc_uint2str(&v107, 4, v108);\n
    v25 = &v107;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v245 = v109;\n
    *(v245) = *(v245) - 1;\n
    v246 = v110;\n
    *(v246) = &*(v246)->padding_1;\n
    v191 = v207;\n
    v190 = a0;\n
    memset(&v187, 0, 21);\n
    if (*(v190) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v247 = *(v191);\n
    v189 = v247[1];\n
    v188 = v247[0];\n
    cgc_uint2str(&v187, 21, v188);\n
    v24 = &v187;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v187)) < 0)\n
        cgc__terminate();\n
    v248 = v190;\n
    *(v248) = *(v248) - 8;\n
    v249 = v191;\n
    *(v249) = &(*(v249))[1].padding_1[2];\n
    v90 = v207;\n
    v89 = a0;\n
    if (*(v89) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v89) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v89);\n
    v88 = v23;\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = cgc_calloc(134);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v87, &v31[18].padding_0[182]);\n
    cgc_strncpy(v87 + 5, *(v90), v88);\n
    v251 = v90;\n
    *(v251) = &(&*(v251)->field_4)[cgc_strlen(v87)];\n
    v253 = v89;\n
    *(v253) = *(v253) - (cgc_strlen(v87) + -4);\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v102 = v207;\n
    v101 = a0;\n
    memset(&v99, 0, 6);\n
    if (*(v101) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(&*(v102)->field_0);\n
    cgc_uint2str(&v99, 6, v100);\n
    v22 = &v99;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v254 = v101;\n
    *(v254) = *(v254) - 2;\n
    v255 = v102;\n
    *(v255) = &*(v255)->padding_1[1];\n
    v134 = v207;\n
    v133 = a0;\n
    memset(&v131, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v132 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-954, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v131, 12, v44);\n
    v21 = &v131;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v256 = v133;\n
    *(v256) = *(v256) - 4;\n
    v257 = v134;\n
    *(v257) = &*(v257)->field_4;\n
    v82 = v207;\n
    v81 = a0;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(v82)->field_0;\n
    v258 = v81;\n
    *(v258) = *(v258) - 1;\n
    v259 = v82;\n
    *(v259) = &*(v259)->padding_1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_4c474c;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c474c:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v260 = v82;\n
    *(v260) = &(&*(v260)->field_0)[v80];\n
    v261 = v81;\n
    *(v261) = *(v261) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v158 = v207;\n
    v157 = a0;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = *(&*(v158)->field_0);\n
    v262 = v157;\n
    *(v262) = *(v262) - 2;\n
    v263 = v158;\n
    *(v263) = &*(v263)->padding_1[1];\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_4c4986;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c4986:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v264 = v157;\n
    *(v264) = *(v264) - v156;\n
    v265 = v158;\n
    *(v265) = &(&*(v265)->field_0)[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v78 = v207;\n
    v77 = a0;\n
    *(&v74[0]) = *(v78);\n
    memset(&v73, 0, 21);\n
    if (*(v77) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v74[0])\n
    {\n
        v20 = 0;\n
        if (v74[1])\n
        {\n
            v20 = 0;\n
            if (v74[2])\n
            {\n
                v20 = 0;\n
                if (v74[3])\n
                {\n
                    v20 = 0;\n
                    if (v74[4] << 24)\n
                    {\n
                        v20 = 0;\n
                        if (v74[5] << 16)\n
                        {\n
                            v20 = 0;\n
                            if (v74[6] << 8)\n
                                v20 = v74[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v75 = v20 & 1;\n
    v76 = 0;\n
    cgc_uint2str(&v73, 21, v75);\n
    v19 = &v73;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v266 = v77;\n
    *(v266) = *(v266) - 8;\n
    v267 = v78;\n
    *(v267) = &(*(v267))[1].padding_1[2];\n
    v72 = v207;\n
    v71 = a0;\n
    *(&v68[0]) = *(v72);\n
    memset(&v67, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v68[0])\n
    {\n
        v18 = 0;\n
        if (v68[1])\n
        {\n
            v18 = 0;\n
            if (v68[2])\n
            {\n
                v18 = 0;\n
                if (v68[3])\n
                {\n
                    v18 = 0;\n
                    if (v68[4] << 24)\n
                    {\n
                        v18 = 0;\n
                        if (v68[5] << 16)\n
                        {\n
                            v18 = 0;\n
                            if (v68[6] << 8)\n
                                v18 = v68[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v69 = v18 & 1;\n
    v70 = 0;\n
    cgc_uint2str(&v67, 21, v69);\n
    v17 = &v67;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v268 = v71;\n
    *(v268) = *(v268) - 8;\n
    v269 = v72;\n
    *(v269) = &(*(v269))[1].padding_1[2];\n
    v98 = v207;\n
    v97 = a0;\n
    memset(&v95, 0, 6);\n
    if (*(v97) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    cgc_uint2str(&v95, 6, v96);\n
    v16 = &v95;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v270 = v97;\n
    *(v270) = *(v270) - 2;\n
    v271 = v98;\n
    *(v271) = &*(v271)->padding_1[1];\n
    v142 = v207;\n
    v141 = a0;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = *(&*(v142)->field_0);\n
    v272 = v141;\n
    *(v272) = *(v272) - 2;\n
    v273 = v142;\n
    *(v273) = &*(v273)->padding_1[1];\n
    if (v140 <= *(v141) && !(!v140))\n
        goto LABEL_4c5196;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c5196:\n
    v139 = cgc_calloc(v140);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v139, *(v142), v140);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v274 = v141;\n
    *(v274) = *(v274) - v140;\n
    v275 = v142;\n
    *(v275) = &(&*(v275)->field_0)[v140];\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    v54 = v207;\n
    v53 = a0;\n
    *(&v51) = *(v54);\n
    memset(&v50, 0, 6);\n
    if (*(v53) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v51[0] << 8)\n
        v15 = v51[1];\n
    v52 = v15 & 1;\n
    cgc_uint2str(&v50, 6, v52);\n
    v14 = &v50;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v50)) < 0)\n
        cgc__terminate();\n
    v276 = v53;\n
    *(v276) = *(v276) - 2;\n
    v277 = v54;\n
    *(v277) = &*(v277)->padding_1[1];\n
    v130 = v207;\n
    v129 = a0;\n
    memset(&v127, 0, 12);\n
    if (*(v129) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(&*(v130)->field_0);\n
    cgc_uint2str(&v127, 12, v128);\n
    v13 = &v127;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v278 = v129;\n
    *(v278) = *(v278) - 4;\n
    v279 = v130;\n
    *(v279) = &*(v279)->field_4;\n
    v186 = v207;\n
    v185 = a0;\n
    if (*(v185) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v185) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v185);\n
    v184 = v12;\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v183 = cgc_calloc(134);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v183, &v31[18].padding_0[182]);\n
    cgc_strncpy(v183 + 5, *(v186), v184);\n
    v281 = v186;\n
    *(v281) = &(&*(v281)->field_4)[cgc_strlen(v183)];\n
    v283 = v185;\n
    *(v283) = *(v283) - (cgc_strlen(v183) + -4);\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v154 = v207;\n
    v153 = a0;\n
    if (*(v153) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v152 = *(&*(v154)->field_0);\n
    v284 = v153;\n
    *(v284) = *(v284) - 2;\n
    v285 = v154;\n
    *(v285) = &*(v285)->padding_1[1];\n
    if (v152 <= *(v153) && !(!v152))\n
        goto LABEL_4c591b;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c591b:\n
    v151 = cgc_calloc(v152);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v151, *(v154), v152);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v286 = v153;\n
    *(v286) = *(v286) - v152;\n
    v287 = v154;\n
    *(v287) = &(&*(v287)->field_0)[v152];\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    v94 = v207;\n
    v93 = a0;\n
    memset(&v91, 0, 6);\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 6, v92);\n
    v11 = &v91;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v288 = v93;\n
    *(v288) = *(v288) - 2;\n
    v289 = v94;\n
    *(v289) = &*(v289)->padding_1[1];\n
    v126 = v207;\n
    v125 = a0;\n
    memset(&v123, 0, 12);\n
    if (*(v125) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v124 = *(&*(v126)->field_0);\n
    cgc_uint2str(&v123, 12, v124);\n
    v10 = &v123;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v290 = v125;\n
    *(v290) = *(v290) - 4;\n
    v291 = v126;\n
    *(v291) = &*(v291)->field_4;\n
    v182 = v207;\n
    v181 = a0;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v181) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v181);\n
    v180 = v9;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v179, &v31[18].padding_0[182]);\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v293 = v182;\n
    *(v293) = &(&*(v293)->field_4)[cgc_strlen(v179)];\n
    v295 = v181;\n
    *(v295) = *(v295) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v178 = v207;\n
    v177 = a0;\n
    if (*(v177) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v177) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v177);\n
    v176 = v8;\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v175 = cgc_calloc(134);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v175, &v31[18].padding_0[182]);\n
    cgc_strncpy(v175 + 5, *(v178), v176);\n
    v297 = v178;\n
    *(v297) = &(&*(v297)->field_4)[cgc_strlen(v175)];\n
    v299 = v177;\n
    *(v299) = *(v299) - (cgc_strlen(v175) + -4);\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v174 = v207;\n
    v173 = a0;\n
    if (*(v173) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v173) >= 128)\n
        v7 = 128;\n
    else\n
        v7 = *(v173);\n
    v172 = v7;\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v171 = cgc_calloc(134);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v171, &v31[18].padding_0[182]);\n
    cgc_strncpy(v171 + 5, *(v174), v172);\n
    v301 = v174;\n
    *(v301) = &(&*(v301)->field_4)[cgc_strlen(v171)];\n
    v303 = v173;\n
    *(v303) = *(v303) - (cgc_strlen(v171) + -4);\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v66 = v207;\n
    v65 = a0;\n
    *(&v62[0]) = *(v66);\n
    memset(&v61, 0, 21);\n
    if (*(v65) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v62[0])\n
    {\n
        v6 = 0;\n
        if (v62[1])\n
        {\n
            v6 = 0;\n
            if (v62[2])\n
            {\n
                v6 = 0;\n
                if (v62[3])\n
                {\n
                    v6 = 0;\n
                    if (v62[4] << 24)\n
                    {\n
                        v6 = 0;\n
                        if (v62[5] << 16)\n
                        {\n
                            v6 = 0;\n
                            if (v62[6] << 8)\n
                                v6 = v62[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v63 = v6 & 1;\n
    v64 = 0;\n
    cgc_uint2str(&v61, 21, v63);\n
    v5 = &v61;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v304 = v65;\n
    *(v304) = *(v304) - 8;\n
    v305 = v66;\n
    *(v305) = &(*(v305))[1].padding_1[2];\n
    v118 = v207;\n
    v117 = a0;\n
    memset(&v115, 0, 21);\n
    if (*(v117) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v116 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-958, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v43 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v115, 21, v43);\n
    v4 = &v115;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v306 = v117;\n
    *(v306) = *(v306) - 8;\n
    v307 = v118;\n
    *(v307) = &(*(v307))[1].padding_1[2];\n
    v114 = v207;\n
    v113 = a0;\n
    memset(&v111, 0, 21);\n
    if (*(v113) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v112 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-962, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v42 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v111, 21, v42);\n
    v3 = &v111;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v308 = v113;\n
    *(v308) = *(v308) - 8;\n
    v309 = v114;\n
    *(v309) = &(*(v309))[1].padding_1[2];\n
    v170 = v207;\n
    v169 = a0;\n
    if (*(v169) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v169) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v169);\n
    v168 = v2;\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v167 = cgc_calloc(134);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v167, &v31[18].padding_0[182]);\n
    cgc_strncpy(v167 + 5, *(v170), v168);\n
    v311 = v170;\n
    *(v311) = &(&*(v311)->field_4)[cgc_strlen(v167)];\n
    v313 = v169;\n
    *(v313) = *(v313) - (cgc_strlen(v167) + -4);\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v60 = v207;\n
    v59 = a0;\n
    *(&v56[0]) = *(v60);\n
    memset(&v55, 0, 21);\n
    if (*(v59) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v56[0])\n
    {\n
        v1 = 0;\n
        if (v56[1])\n
        {\n
            v1 = 0;\n
            if (v56[2])\n
            {\n
                v1 = 0;\n
                if (v56[3])\n
                {\n
                    v1 = 0;\n
                    if (v56[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v56[5] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v56[6] << 8)\n
                                v1 = v56[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v57 = v1 & 1;\n
    v58 = 0;\n
    cgc_uint2str(&v55, 21, v57);\n
    v0 = &v55;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v314 = v59;\n
    *(v314) = *(v314) - 8;\n
    v315 = v60;\n
    *(v315) = &(*(v315))[1].padding_1[2];\n
    v48 ^= v31->field_260;\n
    if (v48)\n
        cgc___stack_cookie_fail();\n
    v316 = a0;\n
    if (*(v316) > 0 && v47 >= 0 && v47 < 0)\n
        v316 = *((&v49 + 0x4 * v47))(v207);\n
    v317 = v206;\n
    return v316;\n
}\n
", "5009093:sub_4c6ec5": null, "5009104:cgc_process_llamasmolt": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamasmolt(struct struct_1 **v232, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x4b8]\n
    struct_0 *v1;  // [bp-0x4b4]\n
    char v2;  // [bp-0x4ad]\n
    struct_0 *v3;  // [bp-0x4ac]\n
    struct_0 *v4;  // [bp-0x4a8]\n
    char v5;  // [bp-0x4a1]\n
    struct_0 *v6;  // [bp-0x4a0]\n
    char v7;  // [bp-0x499]\n
    struct_0 *v8;  // [bp-0x498]\n
    char v9;  // [bp-0x491]\n
    unsigned int v10;  // [bp-0x490]\n
    struct_0 *v11;  // [bp-0x48c]\n
    struct_0 *v12;  // [bp-0x488]\n
    struct_0 *v13;  // [bp-0x484]\n
    struct_0 *v14;  // [bp-0x480]\n
    char v15;  // [bp-0x479]\n
    struct_0 *v16;  // [bp-0x478]\n
    char v17;  // [bp-0x471]\n
    struct_0 *v18;  // [bp-0x470]\n
    struct_0 *v19;  // [bp-0x46c]\n
    char v20;  // [bp-0x465]\n
    struct_0 *v21;  // [bp-0x464]\n
    char v22;  // [bp-0x45d]\n
    struct_0 *v23;  // [bp-0x45c]\n
    struct_0 *v24;  // [bp-0x458]\n
    struct_0 *v25;  // [bp-0x454]\n
    struct_0 *v26;  // [bp-0x450]\n
    struct_0 *v27;  // [bp-0x44c]\n
    struct_0 *v28;  // [bp-0x448]\n
    struct_0 *v29;  // [bp-0x444]\n
    struct_0 *v30;  // [bp-0x440]\n
    char v31;  // [bp-0x439]\n
    struct_0 *v32;  // [bp-0x438]\n
    struct_0 *v33;  // [bp-0x434]\n
    struct_0 *v34;  // [bp-0x430]\n
    unsigned int v35;  // [bp-0x42c]\n
    struct_3 *v36;  // [bp-0x428]\n
    unsigned short v37;  // [bp-0x424]\n
    unsigned short v38;  // [bp-0x422]\n
    unsigned short v39;  // [bp-0x420]\n
    unsigned short v40;  // [bp-0x41e]\n
    unsigned short v41;  // [bp-0x41c]\n
    unsigned short v42;  // [bp-0x41a]\n
    unsigned short v43;  // [bp-0x418]\n
    unsigned short v44;  // [bp-0x416]\n
    unsigned long v45;  // [bp-0x414]\n
    unsigned long v46;  // [bp-0x40c]\n
    unsigned long v47;  // [bp-0x404]\n
    unsigned long v48;  // [bp-0x3fc]\n
    struct struct_2 **v49;  // [bp-0x3f0]\n
    unsigned int v50;  // [bp-0x3ec]\n
    char v51;  // [bp-0x3e8]\n
    char v52;  // [bp-0x3e6]\n
    char v53[2];  // [bp-0x3e0]\n
    unsigned short v54;  // [bp-0x3da]\n
    unsigned int *v55;  // [bp-0x3d8]\n
    struct struct_1 **v56;  // [bp-0x3d4]\n
    char v57;  // [bp-0x3ce]\n
    char v58[2];  // [bp-0x3c8]\n
    unsigned short v59;  // [bp-0x3c2]\n
    unsigned int *v60;  // [bp-0x3c0]\n
    struct struct_1 **v61;  // [bp-0x3bc]\n
    char v62;  // [bp-0x3b6]\n
    char v63[2];  // [bp-0x3b0]\n
    unsigned short v64;  // [bp-0x3aa]\n
    unsigned int *v65;  // [bp-0x3a8]\n
    struct struct_1 **v66;  // [bp-0x3a4]\n
    char v67;  // [bp-0x39d]\n
    char v68[8];  // [bp-0x388]\n
    unsigned int v69;  // [bp-0x384]\n
    void* v70;  // [bp-0x380]\n
    unsigned int *v71;  // [bp-0x378]\n
    struct struct_1 **v72;  // [bp-0x374]\n
    char v73;  // [bp-0x36d]\n
    char v74[8];  // [bp-0x358]\n
    unsigned int v75;  // [bp-0x354]\n
    void* v76;  // [bp-0x350]\n
    unsigned int *v77;  // [bp-0x34c]\n
    struct struct_1 **v78;  // [bp-0x348]\n
    unsigned int v79;  // [bp-0x344]\n
    char v80;  // [bp-0x33d]\n
    unsigned int *v81;  // [bp-0x33c]\n
    struct struct_1 **v82;  // [bp-0x338]\n
    unsigned int v83;  // [bp-0x334]\n
    char v84;  // [bp-0x32d]\n
    unsigned int *v85;  // [bp-0x32c]\n
    struct struct_1 **v86;  // [bp-0x328]\n
    unsigned int v87;  // [bp-0x324]\n
    char v88;  // [bp-0x31d]\n
    unsigned int *v89;  // [bp-0x31c]\n
    struct struct_1 **v90;  // [bp-0x318]\n
    char *v91;  // [bp-0x314]\n
    unsigned int v92;  // [bp-0x310]\n
    unsigned int *v93;  // [bp-0x30c]\n
    struct struct_1 **v94;  // [bp-0x308]\n
    char *v95;  // [bp-0x304]\n
    unsigned int v96;  // [bp-0x300]\n
    unsigned int *v97;  // [bp-0x2fc]\n
    struct struct_1 **v98;  // [bp-0x2f8]\n
    char v99;  // [bp-0x2f1]\n
    char v100;  // [bp-0x2ed]\n
    unsigned int *v101;  // [bp-0x2ec]\n
    struct struct_1 **v102;  // [bp-0x2e8]\n
    char v103;  // [bp-0x2e1]\n
    char v104;  // [bp-0x2dd]\n
    unsigned int *v105;  // [bp-0x2dc]\n
    struct struct_1 **v106;  // [bp-0x2d8]\n
    char v107;  // [bp-0x2d1]\n
    char v108;  // [bp-0x2cd]\n
    unsigned int *v109;  // [bp-0x2cc]\n
    struct struct_1 **v110;  // [bp-0x2c8]\n
    char v111;  // [bp-0x2c1]\n
    char v112;  // [bp-0x2bd]\n
    unsigned int *v113;  // [bp-0x2bc]\n
    struct struct_1 **v114;  // [bp-0x2b8]\n
    char v115;  // [bp-0x2b1]\n
    unsigned long v116;  // [bp-0x29c]\n
    unsigned int *v117;  // [bp-0x294]\n
    struct struct_1 **v118;  // [bp-0x290]\n
    char v119;  // [bp-0x289]\n
    unsigned long v120;  // [bp-0x274]\n
    unsigned int *v121;  // [bp-0x26c]\n
    struct struct_1 **v122;  // [bp-0x268]\n
    char v123;  // [bp-0x261]\n
    unsigned long v124;  // [bp-0x24c]\n
    unsigned int *v125;  // [bp-0x244]\n
    struct struct_1 **v126;  // [bp-0x240]\n
    char v127;  // [bp-0x23c]\n
    unsigned int v128;  // [bp-0x230]\n
    unsigned int *v129;  // [bp-0x22c]\n
    struct struct_1 **v130;  // [bp-0x228]\n
    char v131;  // [bp-0x224]\n
    unsigned int v132;  // [bp-0x218]\n
    unsigned int *v133;  // [bp-0x214]\n
    struct struct_1 **v134;  // [bp-0x210]\n
    char v135;  // [bp-0x20c]\n
    unsigned int v136;  // [bp-0x200]\n
    unsigned int *v137;  // [bp-0x1fc]\n
    struct struct_1 **v138;  // [bp-0x1f8]\n
    char v139;  // [bp-0x1f4]\n
    unsigned int v140;  // [bp-0x1e8]\n
    unsigned int *v141;  // [bp-0x1e4]\n
    struct struct_1 **v142;  // [bp-0x1e0]\n
    unsigned int v143;  // [bp-0x1dc]\n
    unsigned short v144;  // [bp-0x1d6]\n
    unsigned int *v145;  // [bp-0x1d4]\n
    struct struct_1 **v146;  // [bp-0x1d0]\n
    unsigned int v147;  // [bp-0x1cc]\n
    unsigned short v148;  // [bp-0x1c6]\n
    unsigned int *v149;  // [bp-0x1c4]\n
    struct struct_1 **v150;  // [bp-0x1c0]\n
    unsigned int v151;  // [bp-0x1bc]\n
    unsigned short v152;  // [bp-0x1b6]\n
    unsigned int *v153;  // [bp-0x1b4]\n
    struct struct_1 **v154;  // [bp-0x1b0]\n
    unsigned int v155;  // [bp-0x1ac]\n
    unsigned short v156;  // [bp-0x1a6]\n
    unsigned int *v157;  // [bp-0x1a4]\n
    struct struct_1 **v158;  // [bp-0x1a0]\n
    unsigned int v159;  // [bp-0x19c]\n
    unsigned short v160;  // [bp-0x196]\n
    unsigned int *v161;  // [bp-0x194]\n
    struct struct_1 **v162;  // [bp-0x190]\n
    unsigned int v163;  // [bp-0x18c]\n
    unsigned short v164;  // [bp-0x186]\n
    unsigned int *v165;  // [bp-0x184]\n
    struct struct_1 **v166;  // [bp-0x180]\n
    unsigned int v167;  // [bp-0x17c]\n
    unsigned short v168;  // [bp-0x176]\n
    unsigned int *v169;  // [bp-0x174]\n
    struct struct_1 **v170;  // [bp-0x170]\n
    unsigned int v171;  // [bp-0x16c]\n
    unsigned short v172;  // [bp-0x166]\n
    unsigned int *v173;  // [bp-0x164]\n
    struct struct_1 **v174;  // [bp-0x160]\n
    unsigned int v175;  // [bp-0x15c]\n
    unsigned short v176;  // [bp-0x156]\n
    unsigned int *v177;  // [bp-0x154]\n
    struct struct_1 **v178;  // [bp-0x150]\n
    unsigned int v179;  // [bp-0x14c]\n
    unsigned short v180;  // [bp-0x146]\n
    unsigned int *v181;  // [bp-0x144]\n
    struct struct_1 **v182;  // [bp-0x140]\n
    char v183;  // [bp-0x13c]\n
    char v184[4];  // [bp-0x130]\n
    unsigned int v185;  // [bp-0x12c]\n
    unsigned int *v186;  // [bp-0x128]\n
    struct struct_1 **v187;  // [bp-0x124]\n
    char v188;  // [bp-0x120]\n
    char v189[4];  // [bp-0x114]\n
    unsigned int v190;  // [bp-0x110]\n
    unsigned int *v191;  // [bp-0x10c]\n
    struct struct_1 **v192;  // [bp-0x108]\n
    char v193;  // [bp-0x104]\n
    char v194[4];  // [bp-0xf8]\n
    unsigned int v195;  // [bp-0xf4]\n
    unsigned int *v196;  // [bp-0xf0]\n
    struct struct_1 **v197;  // [bp-0xec]\n
    char v198;  // [bp-0xe8]\n
    char v199[4];  // [bp-0xdc]\n
    unsigned int v200;  // [bp-0xd8]\n
    unsigned int *v201;  // [bp-0xd4]\n
    struct struct_1 **v202;  // [bp-0xd0]\n
    char *v203;  // [bp-0xcc]\n
    unsigned int v204;  // [bp-0xc8]\n
    unsigned int *v205;  // [bp-0xc4]\n
    struct struct_1 **v206;  // [bp-0xc0]\n
    char v207;  // [bp-0xb9]\n
    unsigned int v208;  // [bp-0xa4]\n
    unsigned int v209;  // [bp-0xa0]\n
    unsigned int *v210;  // [bp-0x9c]\n
    struct struct_1 **v211;  // [bp-0x98]\n
    char v212;  // [bp-0x91]\n
    unsigned int v213;  // [bp-0x7c]\n
    unsigned int v214;  // [bp-0x78]\n
    unsigned int *v215;  // [bp-0x74]\n
    struct struct_1 **v216;  // [bp-0x70]\n
    char v217;  // [bp-0x69]\n
    unsigned int v218;  // [bp-0x54]\n
    unsigned int v219;  // [bp-0x50]\n
    unsigned int *v220;  // [bp-0x4c]\n
    struct struct_1 **v221;  // [bp-0x48]\n
    char v222;  // [bp-0x41]\n
    unsigned int v223;  // [bp-0x2c]\n
    unsigned int v224;  // [bp-0x28]\n
    unsigned int *v225;  // [bp-0x20]\n
    struct struct_1 **v226;  // [bp-0x1c]\n
    unsigned int v227;  // [bp-0x18]\n
    char v228;  // [bp-0x11]\n
    unsigned int *v229;  // [bp-0x10]\n
    struct struct_1 **v230;  // [bp-0xc]\n
    unsigned int v231;  // [bp-0x8]\n
    unsigned int v233;  // ebx\n
    unsigned int *v234;  // eax\n
    struct struct_1 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_1 **v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_1 **v239;  // eax\n
    struct struct_1 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_1 **v243;  // eax\n
    struct struct_1 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_1 **v247;  // eax\n
    unsigned int *v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_1 **v251;  // eax\n
    unsigned int v252[2];  // ecx\n
    unsigned int *v253;  // eax\n
    struct struct_1 **v254;  // eax\n
    unsigned int v255[2];  // ecx\n
    unsigned int *v256;  // eax\n
    struct struct_1 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    struct struct_1 **v259;  // eax\n
    unsigned int *v260;  // eax\n
    struct struct_1 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_1 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_1 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    struct struct_1 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_1 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_1 **v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_1 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_1 **v275;  // eax\n
    struct struct_1 **v276;  // eax\n
    unsigned int *v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_1 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_1 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    struct struct_1 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    struct struct_1 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    struct struct_1 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_1 **v289;  // eax\n
    unsigned int v290[2];  // ecx\n
    unsigned int *v291;  // eax\n
    struct struct_1 **v292;  // eax\n
    unsigned int *v293;  // eax\n
    struct struct_1 **v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_1 **v296;  // eax\n
    unsigned int *v297;  // eax\n
    struct struct_1 **v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_1 **v300;  // eax\n
    unsigned int *v301;  // eax\n
    struct struct_1 **v302;  // eax\n
    unsigned int *v303;  // eax\n
    struct struct_1 **v304;  // eax\n
    unsigned int *v305;  // eax\n
    struct struct_1 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_1 **v308;  // eax\n
    unsigned int *v309;  // eax\n
    struct struct_1 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_1 **v312;  // eax\n
    unsigned int *v313;  // eax\n
    struct struct_1 **v314;  // eax\n
    unsigned int *v315;  // eax\n
    struct struct_1 **v316;  // eax\n
    unsigned int *v317;  // eax\n
    struct struct_1 **v318;  // eax\n
    unsigned int *v319;  // eax\n
    struct struct_1 **v320;  // eax\n
    unsigned int *v321;  // eax\n
    struct struct_1 **v322;  // eax\n
    struct struct_1 **v324;  // eax\n
    unsigned int *v326;  // eax\n
    unsigned int *v327;  // eax\n
    struct struct_1 **v328;  // eax\n
    unsigned int *v329;  // eax\n
    struct struct_1 **v330;  // eax\n
    unsigned int *v331;  // eax\n
    struct struct_1 **v332;  // eax\n
    struct struct_1 **v333;  // eax\n
    unsigned int *v334;  // eax\n
    unsigned int *v335;  // eax\n
    struct struct_1 **v336;  // eax\n
    unsigned int *v337;  // eax\n
    struct struct_1 **v338;  // eax\n
    unsigned int *v339;  // eax\n
    struct struct_1 **v340;  // eax\n
    unsigned int *v341;  // eax\n
    struct struct_1 **v342;  // eax\n
    unsigned int *v343;  // eax\n
    struct struct_1 **v344;  // eax\n
    unsigned int v345[2];  // ecx\n
    unsigned int *v346;  // eax\n
    struct struct_1 **v347;  // eax\n
    unsigned int *v348;  // eax\n
    struct struct_1 **v349;  // eax\n
    struct struct_1 **v351;  // eax\n
    unsigned int *v353;  // eax\n
    unsigned int *v354;  // eax, Other Possible Types: unsigned int\n
    unsigned int v355;  // ebx\n
\n
    v231 = v233;\n
    v36 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v50 = cgc__cookie;\n
    v49 = -1;\n
    if (cgc_sendline(1, \"===llamasmolt===\", 16) < 0)\n
        cgc__terminate();\n
    v182 = v232;\n
    v181 = a0;\n
    if (*(v181) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v180 = *(&*(v182)->field_0);\n
    v234 = v181;\n
    *(v234) = *(v234) - 2;\n
    v235 = v182;\n
    *(v235) = &*(v235)->padding_1[1];\n
    if (v180 <= *(v181) && !(!v180))\n
        goto LABEL_4c705d;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c705d:\n
    v179 = cgc_calloc(v180);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v179, *(v182), v180);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v236 = v181;\n
    *(v236) = *(v236) - v180;\n
    v237 = v182;\n
    *(v237) = &(&*(v237)->field_0)[v180];\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    v90 = v232;\n
    v89 = a0;\n
    if (*(v89) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(v90)->field_0;\n
    v238 = v89;\n
    *(v238) = *(v238) - 1;\n
    v239 = v90;\n
    *(v239) = &*(v239)->padding_1;\n
    if (v88 <= *(v89) && !(!v88))\n
        goto LABEL_4c7295;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c7295:\n
    v87 = cgc_calloc(v88);\n
    if (!v87)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v87, *(v90), v88);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v240 = v90;\n
    *(v240) = &(&*(v240)->field_0)[v88];\n
    v241 = v89;\n
    *(v241) = *(v241) - v88;\n
    cgc_checkheap();\n
    cgc_free(v87);\n
    v230 = v232;\n
    v229 = a0;\n
    if (*(v229) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v228 = *(v230)->field_0;\n
    v242 = v229;\n
    *(v242) = *(v242) - 1;\n
    v243 = v230;\n
    *(v243) = &*(v243)->padding_1;\n
    if (v228 <= *(v229) && !(!v228))\n
        goto LABEL_4c74af;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c74af:\n
    v227 = cgc_calloc(v228);\n
    if (!v227)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v227, *(v230), v228);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v244 = v230;\n
    *(v244) = &(&*(v244)->field_0)[v228];\n
    v245 = v229;\n
    *(v245) = *(v245) - v228;\n
    cgc_checkheap();\n
    cgc_free(v227);\n
    v206 = v232;\n
    v205 = a0;\n
    if (*(v205) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v205) >= 128)\n
        v35 = 128;\n
    else\n
        v35 = *(v205);\n
    v204 = v35;\n
    if (!v204)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v203 = cgc_calloc(134);\n
    if (!v203)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v203, &v36[18].padding_0[182]);\n
    cgc_strncpy(v203 + 5, *(v206), v204);\n
    v247 = v206;\n
    *(v247) = &(&*(v247)->field_4)[cgc_strlen(v203)];\n
    v249 = v205;\n
    *(v249) = *(v249) - (cgc_strlen(v203) + -4);\n
    cgc_checkheap();\n
    cgc_free(v203);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v114 = v232;\n
    v113 = a0;\n
    memset(&v111, 0, 4);\n
    if (*(v113) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(v114)->field_0;\n
    cgc_uint2str(&v111, 4, v112);\n
    v34 = &v111;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v250 = v113;\n
    *(v250) = *(v250) - 1;\n
    v251 = v114;\n
    *(v251) = &*(v251)->padding_1;\n
    v226 = v232;\n
    v225 = a0;\n
    memset(&v222, 0, 21);\n
    if (*(v225) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v252 = *(v226);\n
    v224 = v252[1];\n
    v223 = v252[0];\n
    cgc_uint2str(&v222, 21, v223);\n
    v33 = &v222;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v222)) < 0)\n
        cgc__terminate();\n
    v253 = v225;\n
    *(v253) = *(v253) - 8;\n
    v254 = v226;\n
    *(v254) = &(*(v254))[1].padding_1[2];\n
    v221 = v232;\n
    v220 = a0;\n
    memset(&v217, 0, 21);\n
    if (*(v220) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v255 = *(v221);\n
    v219 = v255[1];\n
    v218 = v255[0];\n
    cgc_uint2str(&v217, 21, v218);\n
    v32 = &v217;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v217)) < 0)\n
        cgc__terminate();\n
    v256 = v220;\n
    *(v256) = *(v256) - 8;\n
    v257 = v221;\n
    *(v257) = &(*(v257))[1].padding_1[2];\n
    v154 = v232;\n
    v153 = a0;\n
    if (*(v153) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v152 = *(&*(v154)->field_0);\n
    v258 = v153;\n
    *(v258) = *(v258) - 2;\n
    v259 = v154;\n
    *(v259) = &*(v259)->padding_1[1];\n
    if (v152 <= *(v153) && !(!v152))\n
        goto LABEL_4c7cd7;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c7cd7:\n
    v151 = cgc_calloc(v152);\n
    if (!v151)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v151, *(v154), v152);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v260 = v153;\n
    *(v260) = *(v260) - v152;\n
    v261 = v154;\n
    *(v261) = &(&*(v261)->field_0)[v152];\n
    cgc_checkheap();\n
    cgc_free(v151);\n
    v78 = v232;\n
    v77 = a0;\n
    *(&v74[0]) = *(v78);\n
    memset(&v73, 0, 21);\n
    if (*(v77) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (v74[0])\n
    {\n
        v31 = 0;\n
        if (v74[1])\n
        {\n
            v31 = 0;\n
            if (v74[2])\n
            {\n
                v31 = 0;\n
                if (v74[3])\n
                {\n
                    v31 = 0;\n
                    if (v74[4] << 24)\n
                    {\n
                        v31 = 0;\n
                        if (v74[5] << 16)\n
                        {\n
                            v31 = 0;\n
                            if (v74[6] << 8)\n
                                v31 = v74[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v75 = v31 & 1;\n
    v76 = 0;\n
    cgc_uint2str(&v73, 21, v75);\n
    v30 = &v73;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v262 = v77;\n
    *(v262) = *(v262) - 8;\n
    v263 = v78;\n
    *(v263) = &(*(v263))[1].padding_1[2];\n
    v126 = v232;\n
    v125 = a0;\n
    memset(&v123, 0, 21);\n
    if (*(v125) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v124 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(fpround<4>);\n
    v43 = v44 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v123, 21, v48);\n
    v29 = &v123;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v264 = v125;\n
    *(v264) = *(v264) - 8;\n
    v265 = v126;\n
    *(v265) = &(*(v265))[1].padding_1[2];\n
    v138 = v232;\n
    v137 = a0;\n
    memset(&v135, 0, 12);\n
    if (*(v137) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v136 = *(&*(v138)->field_0);\n
    cgc_uint2str(&v135, 12, v136);\n
    v28 = &v135;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v135)) < 0)\n
        cgc__terminate();\n
    v266 = v137;\n
    *(v266) = *(v266) - 4;\n
    v267 = v138;\n
    *(v267) = &*(v267)->field_4;\n
    v178 = v232;\n
    v177 = a0;\n
    if (*(v177) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = *(&*(v178)->field_0);\n
    v268 = v177;\n
    *(v268) = *(v268) - 2;\n
    v269 = v178;\n
    *(v269) = &*(v269)->padding_1[1];\n
    if (v176 <= *(v177) && !(!v176))\n
        goto LABEL_4c8410;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c8410:\n
    v175 = cgc_calloc(v176);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v175, *(v178), v176);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v270 = v177;\n
    *(v270) = *(v270) - v176;\n
    v271 = v178;\n
    *(v271) = &(&*(v271)->field_0)[v176];\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    v122 = v232;\n
    v121 = a0;\n
    memset(&v119, 0, 21);\n
    if (*(v121) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1046, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v119, 21, v47);\n
    v27 = &v119;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v272 = v121;\n
    *(v272) = *(v272) - 8;\n
    v273 = v122;\n
    *(v273) = &(*(v273))[1].padding_1[2];\n
    v86 = v232;\n
    v85 = a0;\n
    if (*(v85) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(v86)->field_0;\n
    v274 = v85;\n
    *(v274) = *(v274) - 1;\n
    v275 = v86;\n
    *(v275) = &*(v275)->padding_1;\n
    if (v84 <= *(v85) && !(!v84))\n
        goto LABEL_4c87bc;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c87bc:\n
    v83 = cgc_calloc(v84);\n
    if (!v83)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v83, *(v86), v84);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v276 = v86;\n
    *(v276) = &(&*(v276)->field_0)[v84];\n
    v277 = v85;\n
    *(v277) = *(v277) - v84;\n
    cgc_checkheap();\n
    cgc_free(v83);\n
    v142 = v232;\n
    v141 = a0;\n
    memset(&v139, 0, 12);\n
    if (*(v141) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v140 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1050, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v139, 12, v46);\n
    v26 = &v139;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v139)) < 0)\n
        cgc__terminate();\n
    v278 = v141;\n
    *(v278) = *(v278) - 4;\n
    v279 = v142;\n
    *(v279) = &*(v279)->field_4;\n
    v150 = v232;\n
    v149 = a0;\n
    if (*(v149) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v148 = *(&*(v150)->field_0);\n
    v280 = v149;\n
    *(v280) = *(v280) - 2;\n
    v281 = v150;\n
    *(v281) = &*(v281)->padding_1[1];\n
    if (v148 <= *(v149) && !(!v148))\n
        goto LABEL_4c8b6a;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c8b6a:\n
    v147 = cgc_calloc(v148);\n
    if (!v147)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v147, *(v150), v148);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v282 = v149;\n
    *(v282) = *(v282) - v148;\n
    v283 = v150;\n
    *(v283) = &(&*(v283)->field_0)[v148];\n
    cgc_checkheap();\n
    cgc_free(v147);\n
    v118 = v232;\n
    v117 = a0;\n
    memset(&v115, 0, 21);\n
    if (*(v117) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v116 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-1054, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v115, 21, v45);\n
    v25 = &v115;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v284 = v117;\n
    *(v284) = *(v284) - 8;\n
    v285 = v118;\n
    *(v285) = &(*(v285))[1].padding_1[2];\n
    v174 = v232;\n
    v173 = a0;\n
    if (*(v173) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v172 = *(&*(v174)->field_0);\n
    v286 = v173;\n
    *(v286) = *(v286) - 2;\n
    v287 = v174;\n
    *(v287) = &*(v287)->padding_1[1];\n
    if (v172 <= *(v173) && !(!v172))\n
        goto LABEL_4c8f18;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c8f18:\n
    v171 = cgc_calloc(v172);\n
    if (!v171)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v171, *(v174), v172);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v288 = v173;\n
    *(v288) = *(v288) - v172;\n
    v289 = v174;\n
    *(v289) = &(&*(v289)->field_0)[v172];\n
    cgc_checkheap();\n
    cgc_free(v171);\n
    v216 = v232;\n
    v215 = a0;\n
    memset(&v212, 0, 21);\n
    if (*(v215) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v290 = *(v216);\n
    v214 = v290[1];\n
    v213 = v290[0];\n
    cgc_uint2str(&v212, 21, v213);\n
    v24 = &v212;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v212)) < 0)\n
        cgc__terminate();\n
    v291 = v215;\n
    *(v291) = *(v291) - 8;\n
    v292 = v216;\n
    *(v292) = &(*(v292))[1].padding_1[2];\n
    v134 = v232;\n
    v133 = a0;\n
    memset(&v131, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(&*(v134)->field_0);\n
    cgc_uint2str(&v131, 12, v132);\n
    v23 = &v131;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v131)) < 0)\n
        cgc__terminate();\n
    v293 = v133;\n
    *(v293) = *(v293) - 4;\n
    v294 = v134;\n
    *(v294) = &*(v294)->field_4;\n
    v66 = v232;\n
    v65 = a0;\n
    *(&v63) = *(v66);\n
    memset(&v62, 0, 6);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v63[0] << 8)\n
        v22 = v63[1];\n
    v64 = v22 & 1;\n
    cgc_uint2str(&v62, 6, v64);\n
    v21 = &v62;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v295 = v65;\n
    *(v295) = *(v295) - 2;\n
    v296 = v66;\n
    *(v296) = &*(v296)->padding_1[1];\n
    v170 = v232;\n
    v169 = a0;\n
    if (*(v169) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v168 = *(&*(v170)->field_0);\n
    v297 = v169;\n
    *(v297) = *(v297) - 2;\n
    v298 = v170;\n
    *(v298) = &*(v298)->padding_1[1];\n
    if (v168 <= *(v169) && !(!v168))\n
        goto LABEL_4c954d;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c954d:\n
    v167 = cgc_calloc(v168);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v167, *(v170), v168);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v299 = v169;\n
    *(v299) = *(v299) - v168;\n
    v300 = v170;\n
    *(v300) = &(&*(v300)->field_0)[v168];\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    v202 = v232;\n
    v201 = a0;\n
    *(&v199[0]) = *(v202);\n
    memset(&v198, 0, 12);\n
    if (*(v201) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v199[0] << 24)\n
    {\n
        v20 = 0;\n
        if (v199[1] << 16)\n
        {\n
            v20 = 0;\n
            if (v199[2] << 8)\n
                v20 = v199[3];\n
        }\n
    }\n
    v200 = v20 & 1;\n
    cgc_uint2str(&v198, 12, v200);\n
    v19 = &v198;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v198)) < 0)\n
        cgc__terminate();\n
    v301 = v201;\n
    *(v301) = *(v301) - 4;\n
    v302 = v202;\n
    *(v302) = &*(v302)->field_4;\n
    v146 = v232;\n
    v145 = a0;\n
    if (*(v145) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v144 = *(&*(v146)->field_0);\n
    v303 = v145;\n
    *(v303) = *(v303) - 2;\n
    v304 = v146;\n
    *(v304) = &*(v304)->padding_1[1];\n
    if (v144 <= *(v145) && !(!v144))\n
        goto LABEL_4c9948;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c9948:\n
    v143 = cgc_calloc(v144);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v143, *(v146), v144);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v305 = v145;\n
    *(v305) = *(v305) - v144;\n
    v306 = v146;\n
    *(v306) = &(&*(v306)->field_0)[v144];\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    v130 = v232;\n
    v129 = a0;\n
    memset(&v127, 0, 12);\n
    if (*(v129) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(&*(v130)->field_0);\n
    cgc_uint2str(&v127, 12, v128);\n
    v18 = &v127;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v127)) < 0)\n
        cgc__terminate();\n
    v307 = v129;\n
    *(v307) = *(v307) - 4;\n
    v308 = v130;\n
    *(v308) = &*(v308)->field_4;\n
    v166 = v232;\n
    v165 = a0;\n
    if (*(v165) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v164 = *(&*(v166)->field_0);\n
    v309 = v165;\n
    *(v309) = *(v309) - 2;\n
    v310 = v166;\n
    *(v310) = &*(v310)->padding_1[1];\n
    if (v164 <= *(v165) && !(!v164))\n
        goto LABEL_4c9cc5;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4c9cc5:\n
    v163 = cgc_calloc(v164);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v163, *(v166), v164);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v311 = v165;\n
    *(v311) = *(v311) - v164;\n
    v312 = v166;\n
    *(v312) = &(&*(v312)->field_0)[v164];\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    v197 = v232;\n
    v196 = a0;\n
    *(&v194[0]) = *(v197);\n
    memset(&v193, 0, 12);\n
    if (*(v196) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v194[0] << 24)\n
    {\n
        v17 = 0;\n
        if (v194[1] << 16)\n
        {\n
            v17 = 0;\n
            if (v194[2] << 8)\n
                v17 = v194[3];\n
        }\n
    }\n
    v195 = v17 & 1;\n
    cgc_uint2str(&v193, 12, v195);\n
    v16 = &v193;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v193)) < 0)\n
        cgc__terminate();\n
    v313 = v196;\n
    *(v313) = *(v313) - 4;\n
    v314 = v197;\n
    *(v314) = &*(v314)->field_4;\n
    v192 = v232;\n
    v191 = a0;\n
    *(&v189[0]) = *(v192);\n
    memset(&v188, 0, 12);\n
    if (*(v191) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v189[0] << 24)\n
    {\n
        v15 = 0;\n
        if (v189[1] << 16)\n
        {\n
            v15 = 0;\n
            if (v189[2] << 8)\n
                v15 = v189[3];\n
        }\n
    }\n
    v190 = v15 & 1;\n
    cgc_uint2str(&v188, 12, v190);\n
    v14 = &v188;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v188)) < 0)\n
        cgc__terminate();\n
    v315 = v191;\n
    *(v315) = *(v315) - 4;\n
    v316 = v192;\n
    *(v316) = &*(v316)->field_4;\n
    v110 = v232;\n
    v109 = a0;\n
    memset(&v107, 0, 4);\n
    if (*(v109) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(v110)->field_0;\n
    cgc_uint2str(&v107, 4, v108);\n
    v13 = &v107;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v317 = v109;\n
    *(v317) = *(v317) - 1;\n
    v318 = v110;\n
    *(v318) = &*(v318)->padding_1;\n
    v106 = v232;\n
    v105 = a0;\n
    memset(&v103, 0, 4);\n
    if (*(v105) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(v106)->field_0;\n
    cgc_uint2str(&v103, 4, v104);\n
    v12 = &v103;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v319 = v105;\n
    *(v319) = *(v319) - 1;\n
    v320 = v106;\n
    *(v320) = &*(v320)->padding_1;\n
    v102 = v232;\n
    v101 = a0;\n
    memset(&v99, 0, 4);\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(v102)->field_0;\n
    cgc_uint2str(&v99, 4, v100);\n
    v11 = &v99;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v321 = v101;\n
    *(v321) = *(v321) - 1;\n
    v322 = v102;\n
    *(v322) = &*(v322)->padding_1;\n
    v98 = v232;\n
    v97 = a0;\n
    if (*(v97) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v97) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v97);\n
    v96 = v10;\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = cgc_calloc(134);\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v95, &v36[18].padding_0[182]);\n
    cgc_strncpy(v95 + 5, *(v98), v96);\n
    v324 = v98;\n
    *(v324) = &(&*(v324)->field_4)[cgc_strlen(v95)];\n
    v326 = v97;\n
    *(v326) = *(v326) - (cgc_strlen(v95) + -4);\n
    cgc_checkheap();\n
    cgc_free(v95);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v162 = v232;\n
    v161 = a0;\n
    if (*(v161) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v160 = *(&*(v162)->field_0);\n
    v327 = v161;\n
    *(v327) = *(v327) - 2;\n
    v328 = v162;\n
    *(v328) = &*(v328)->padding_1[1];\n
    if (v160 <= *(v161) && !(!v160))\n
        goto LABEL_4ca8ce;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ca8ce:\n
    v159 = cgc_calloc(v160);\n
    if (!v159)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v159, *(v162), v160);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v329 = v161;\n
    *(v329) = *(v329) - v160;\n
    v330 = v162;\n
    *(v330) = &(&*(v330)->field_0)[v160];\n
    cgc_checkheap();\n
    cgc_free(v159);\n
    v82 = v232;\n
    v81 = a0;\n
    if (*(v81) < 1)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v80 = *(v82)->field_0;\n
    v331 = v81;\n
    *(v331) = *(v331) - 1;\n
    v332 = v82;\n
    *(v332) = &*(v332)->padding_1;\n
    if (v80 <= *(v81) && !(!v80))\n
        goto LABEL_4cab06;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4cab06:\n
    v79 = cgc_calloc(v80);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v79, *(v82), v80);\n
    if (cgc_sendline(1, &v36[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v333 = v82;\n
    *(v333) = &(&*(v333)->field_0)[v80];\n
    v334 = v81;\n
    *(v334) = *(v334) - v80;\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    v61 = v232;\n
    v60 = a0;\n
    *(&v58) = *(v61);\n
    memset(&v57, 0, 6);\n
    if (*(v60) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v58[0] << 8)\n
        v9 = v58[1];\n
    v59 = v9 & 1;\n
    cgc_uint2str(&v57, 6, v59);\n
    v8 = &v57;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v57)) < 0)\n
        cgc__terminate();\n
    v335 = v60;\n
    *(v335) = *(v335) - 2;\n
    v336 = v61;\n
    *(v336) = &*(v336)->padding_1[1];\n
    v158 = v232;\n
    v157 = a0;\n
    if (*(v157) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v156 = *(&*(v158)->field_0);\n
    v337 = v157;\n
    *(v337) = *(v337) - 2;\n
    v338 = v158;\n
    *(v338) = &*(v338)->padding_1[1];\n
    if (v156 <= *(v157) && !(!v156))\n
        goto LABEL_4caec7;\n
    if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4caec7:\n
    v155 = cgc_calloc(v156);\n
    if (!v155)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v155, *(v158), v156);\n
    if (cgc_sendline(1, &v36[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v339 = v157;\n
    *(v339) = *(v339) - v156;\n
    v340 = v158;\n
    *(v340) = &(&*(v340)->field_0)[v156];\n
    cgc_checkheap();\n
    cgc_free(v155);\n
    v56 = v232;\n
    v55 = a0;\n
    *(&v53) = *(v56);\n
    memset(&v52, 0, 6);\n
    if (*(v55) < 2)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v53[0] << 8)\n
        v7 = v53[1];\n
    v54 = v7 & 1;\n
    cgc_uint2str(&v52, 6, v54);\n
    v6 = &v52;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v52)) < 0)\n
        cgc__terminate();\n
    v341 = v55;\n
    *(v341) = *(v341) - 2;\n
    v342 = v56;\n
    *(v342) = &*(v342)->padding_1[1];\n
    v187 = v232;\n
    v186 = a0;\n
    *(&v184[0]) = *(v187);\n
    memset(&v183, 0, 12);\n
    if (*(v186) < 4)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v184[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v184[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v184[2] << 8)\n
                v5 = v184[3];\n
        }\n
    }\n
    v185 = v5 & 1;\n
    cgc_uint2str(&v183, 12, v185);\n
    v4 = &v183;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v183)) < 0)\n
        cgc__terminate();\n
    v343 = v186;\n
    *(v343) = *(v343) - 4;\n
    v344 = v187;\n
    *(v344) = &*(v344)->field_4;\n
    v211 = v232;\n
    v210 = a0;\n
    memset(&v207, 0, 21);\n
    if (*(v210) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v345 = *(v211);\n
    v209 = v345[1];\n
    v208 = v345[0];\n
    cgc_uint2str(&v207, 21, v208);\n
    v3 = &v207;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v207)) < 0)\n
        cgc__terminate();\n
    v346 = v210;\n
    *(v346) = *(v346) - 8;\n
    v347 = v211;\n
    *(v347) = &(*(v347))[1].padding_1[2];\n
    v72 = v232;\n
    v71 = a0;\n
    *(&v68[0]) = *(v72);\n
    memset(&v67, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (v68[0])\n
    {\n
        v2 = 0;\n
        if (v68[1])\n
        {\n
            v2 = 0;\n
            if (v68[2])\n
            {\n
                v2 = 0;\n
                if (v68[3])\n
                {\n
                    v2 = 0;\n
                    if (v68[4] << 24)\n
                    {\n
                        v2 = 0;\n
                        if (v68[5] << 16)\n
                        {\n
                            v2 = 0;\n
                            if (v68[6] << 8)\n
                                v2 = v68[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v69 = v2 & 1;\n
    v70 = 0;\n
    cgc_uint2str(&v67, 21, v69);\n
    v1 = &v67;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v348 = v71;\n
    *(v348) = *(v348) - 8;\n
    v349 = v72;\n
    *(v349) = &(*(v349))[1].padding_1[2];\n
    v94 = v232;\n
    v93 = a0;\n
    if (*(v93) <= 0)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v93) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v93);\n
    v92 = v0;\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = cgc_calloc(134);\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v36[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v91, &v36[18].padding_0[182]);\n
    cgc_strncpy(v91 + 5, *(v94), v92);\n
    v351 = v94;\n
    *(v351) = &(&*(v351)->field_4)[cgc_strlen(v91)];\n
    v353 = v93;\n
    *(v353) = *(v353) - (cgc_strlen(v91) + -4);\n
    cgc_checkheap();\n
    cgc_free(v91);\n
    if (cgc_sendline(1, &v36[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v50 ^= v36->field_260;\n
    if (v50)\n
        cgc___stack_cookie_fail();\n
    v354 = a0;\n
    if (*(v354) > 0 && v49 >= 0 && v49 < 0)\n
        v354 = *((&v51 + 0x4 * v49))(v232);\n
    v355 = v231;\n
    return v354;\n
}\n
", "5028297:sub_4cb9c9": null, "5028304:cgc_process_llamaJuletta": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f03a8;\n
extern unsigned int g_4f03ac;\n
extern unsigned int g_4f03b0;\n
\n
int cgc_process_llamaJuletta(struct struct_0 **v196, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x3d8]\n
    struct_2 *v1;  // [bp-0x3d4]\n
    struct_2 *v2;  // [bp-0x3d0]\n
    unsigned int v3;  // [bp-0x3cc]\n
    struct_2 *v4;  // [bp-0x3c8]\n
    unsigned int v5;  // [bp-0x3c4]\n
    struct_2 *v6;  // [bp-0x3c0]\n
    struct_2 *v7;  // [bp-0x3bc]\n
    struct_2 *v8;  // [bp-0x3b8]\n
    struct_2 *v9;  // [bp-0x3b4]\n
    unsigned int v10;  // [bp-0x3b0]\n
    unsigned int v11;  // [bp-0x3ac]\n
    struct_2 *v12;  // [bp-0x3a8]\n
    char v13;  // [bp-0x3a1]\n
    struct_2 *v14;  // [bp-0x3a0]\n
    struct_2 *v15;  // [bp-0x39c]\n
    char v16;  // [bp-0x395]\n
    struct_2 *v17;  // [bp-0x394]\n
    char v18;  // [bp-0x38d]\n
    struct_2 *v19;  // [bp-0x38c]\n
    char v20;  // [bp-0x385]\n
    struct_2 *v21;  // [bp-0x384]\n
    char v22;  // [bp-0x37d]\n
    struct_2 *v23;  // [bp-0x37c]\n
    char v24;  // [bp-0x375]\n
    unsigned int v25;  // [bp-0x374]\n
    struct_2 *v26;  // [bp-0x370]\n
    struct_2 *v27;  // [bp-0x36c]\n
    struct_2 *v28;  // [bp-0x368]\n
    unsigned int v29;  // [bp-0x364]\n
    struct_2 *v30;  // [bp-0x360]\n
    char v31;  // [bp-0x359]\n
    struct_2 *v32;  // [bp-0x358]\n
    struct_3 *v33;  // [bp-0x354]\n
    unsigned short v34;  // [bp-0x350]\n
    unsigned short v35;  // [bp-0x34e]\n
    unsigned short v36;  // [bp-0x34c]\n
    unsigned short v37;  // [bp-0x34a]\n
    unsigned short v38;  // [bp-0x348]\n
    unsigned short v39;  // [bp-0x346]\n
    unsigned short v40;  // [bp-0x344]\n
    unsigned short v41;  // [bp-0x342]\n
    unsigned short v42;  // [bp-0x340]\n
    unsigned short v43;  // [bp-0x33e]\n
    unsigned long v44;  // [bp-0x33c]\n
    unsigned long v45;  // [bp-0x334]\n
    unsigned long v46;  // [bp-0x32c]\n
    unsigned long v47;  // [bp-0x324]\n
    unsigned long v48;  // [bp-0x31c]\n
    struct struct_1 **v49;  // [bp-0x314], Other Possible Types: unsigned int\n
    unsigned int v50;  // [bp-0x310]\n
    unsigned int v51;  // [bp-0x30c]\n
    unsigned int v52;  // [bp-0x308]\n
    unsigned int v53;  // [bp-0x304]\n
    char v54;  // [bp-0x2fe]\n
    char *v55;  // [bp-0x2f8]\n
    unsigned short v56;  // [bp-0x2f2]\n
    unsigned int *v57;  // [bp-0x2f0]\n
    struct struct_0 **v58;  // [bp-0x2ec]\n
    char v59;  // [bp-0x2e5]\n
    char v60[8];  // [bp-0x2d0]\n
    unsigned int v61;  // [bp-0x2cc]\n
    void* v62;  // [bp-0x2c8]\n
    unsigned int *v63;  // [bp-0x2c0]\n
    struct struct_0 **v64;  // [bp-0x2bc]\n
    char v65;  // [bp-0x2b5]\n
    char v66[8];  // [bp-0x2a0]\n
    unsigned int v67;  // [bp-0x29c]\n
    void* v68;  // [bp-0x298]\n
    unsigned int *v69;  // [bp-0x290]\n
    struct struct_0 **v70;  // [bp-0x28c]\n
    char v71;  // [bp-0x285]\n
    char v72[8];  // [bp-0x270]\n
    unsigned int v73;  // [bp-0x26c]\n
    void* v74;  // [bp-0x268]\n
    unsigned int *v75;  // [bp-0x260]\n
    struct struct_0 **v76;  // [bp-0x25c]\n
    unsigned int v77;  // [bp-0x258]\n
    char v78;  // [bp-0x251]\n
    unsigned int *v79;  // [bp-0x250]\n
    struct struct_0 **v80;  // [bp-0x24c]\n
    unsigned int v81;  // [bp-0x248]\n
    char v82;  // [bp-0x241]\n
    unsigned int *v83;  // [bp-0x240]\n
    struct struct_0 **v84;  // [bp-0x23c]\n
    char *v85;  // [bp-0x238]\n
    unsigned int *v86;  // [bp-0x234]\n
    struct struct_0 **v87;  // [bp-0x230]\n
    char *v88;  // [bp-0x22c]\n
    unsigned int v89;  // [bp-0x228]\n
    unsigned int *v90;  // [bp-0x224]\n
    struct struct_0 **v91;  // [bp-0x220]\n
    char v92;  // [bp-0x21c]\n
    unsigned short v93;  // [bp-0x216]\n
    unsigned int *v94;  // [bp-0x214]\n
    struct struct_0 **v95;  // [bp-0x210]\n
    char v96;  // [bp-0x20c]\n
    unsigned short v97;  // [bp-0x206]\n
    unsigned int *v98;  // [bp-0x204]\n
    struct struct_0 **v99;  // [bp-0x200]\n
    char v100;  // [bp-0x1fc]\n
    unsigned short v101;  // [bp-0x1f6]\n
    unsigned int *v102;  // [bp-0x1f4]\n
    struct struct_0 **v103;  // [bp-0x1f0]\n
    char v104;  // [bp-0x1ec]\n
    unsigned short v105;  // [bp-0x1e6]\n
    unsigned int *v106;  // [bp-0x1e4]\n
    struct struct_0 **v107;  // [bp-0x1e0]\n
    char v108;  // [bp-0x1d9]\n
    char v109;  // [bp-0x1d5]\n
    unsigned int *v110;  // [bp-0x1d4]\n
    struct struct_0 **v111;  // [bp-0x1d0]\n
    char v112[4];  // [bp-0x1cc]\n
    unsigned int *v113;  // [bp-0x1c8]\n
    struct struct_0 **v114;  // [bp-0x1c4]\n
    char *v115;  // [bp-0x1c0]\n
    unsigned int *v116;  // [bp-0x1bc]\n
    struct struct_0 **v117;  // [bp-0x1b8]\n
    unsigned short *v118;  // [bp-0x1b4]\n
    unsigned int *v119;  // [bp-0x1b0]\n
    struct struct_0 **v120;  // [bp-0x1ac]\n
    char v121[4];  // [bp-0x1a8]\n
    unsigned int *v122;  // [bp-0x1a4]\n
    struct struct_0 **v123;  // [bp-0x1a0]\n
    char v124;  // [bp-0x199]\n
    unsigned long v125;  // [bp-0x184]\n
    unsigned int *v126;  // [bp-0x17c]\n
    struct struct_0 **v127;  // [bp-0x178]\n
    char v128;  // [bp-0x171]\n
    unsigned long v129;  // [bp-0x15c]\n
    unsigned int *v130;  // [bp-0x154]\n
    struct struct_0 **v131;  // [bp-0x150]\n
    char v132;  // [bp-0x14c]\n
    unsigned int v133;  // [bp-0x140]\n
    unsigned int *v134;  // [bp-0x13c]\n
    struct struct_0 **v135;  // [bp-0x138]\n
    char v136;  // [bp-0x134]\n
    unsigned int v137;  // [bp-0x128]\n
    unsigned int *v138;  // [bp-0x124]\n
    struct struct_0 **v139;  // [bp-0x120]\n
    char v140;  // [bp-0x11c]\n
    unsigned int v141;  // [bp-0x110]\n
    unsigned int *v142;  // [bp-0x10c]\n
    struct struct_0 **v143;  // [bp-0x108]\n
    char v144;  // [bp-0x104]\n
    unsigned int v145;  // [bp-0xf8]\n
    unsigned int *v146;  // [bp-0xf4]\n
    struct struct_0 **v147;  // [bp-0xf0]\n
    char v148;  // [bp-0xec]\n
    unsigned int v149;  // [bp-0xe0]\n
    unsigned int *v150;  // [bp-0xdc]\n
    struct struct_0 **v151;  // [bp-0xd8]\n
    char v152;  // [bp-0xd4]\n
    unsigned int v153;  // [bp-0xc8]\n
    unsigned int *v154;  // [bp-0xc4]\n
    struct struct_0 **v155;  // [bp-0xc0]\n
    unsigned int v156;  // [bp-0xbc]\n
    unsigned short v157;  // [bp-0xb6]\n
    unsigned int *v158;  // [bp-0xb4]\n
    struct struct_0 **v159;  // [bp-0xb0]\n
    char v160;  // [bp-0xac]\n
    char v161[4];  // [bp-0xa0]\n
    unsigned int v162;  // [bp-0x9c]\n
    unsigned int *v163;  // [bp-0x98]\n
    struct struct_0 **v164;  // [bp-0x94]\n
    char v165;  // [bp-0x90]\n
    char v166[4];  // [bp-0x84]\n
    unsigned int v167;  // [bp-0x80]\n
    unsigned int *v168;  // [bp-0x7c]\n
    struct struct_0 **v169;  // [bp-0x78]\n
    char v170;  // [bp-0x74]\n
    char v171[4];  // [bp-0x68]\n
    unsigned int v172;  // [bp-0x64]\n
    unsigned int *v173;  // [bp-0x60]\n
    struct struct_0 **v174;  // [bp-0x5c]\n
    char *v175;  // [bp-0x58]\n
    unsigned int v176;  // [bp-0x54]\n
    unsigned int *v177;  // [bp-0x50]\n
    struct struct_0 **v178;  // [bp-0x4c]\n
    char *v179;  // [bp-0x48]\n
    unsigned int v180;  // [bp-0x44]\n
    unsigned int *v181;  // [bp-0x40]\n
    struct struct_0 **v182;  // [bp-0x3c]\n
    char *v183;  // [bp-0x38]\n
    unsigned int v184;  // [bp-0x34]\n
    unsigned int *v185;  // [bp-0x30]\n
    struct struct_0 **v186;  // [bp-0x2c]\n
    char *v187;  // [bp-0x28]\n
    unsigned int v188;  // [bp-0x24]\n
    unsigned int *v189;  // [bp-0x20]\n
    struct struct_0 **v190;  // [bp-0x1c]\n
    char *v191;  // [bp-0x18]\n
    unsigned int v192;  // [bp-0x14]\n
    unsigned int *v193;  // [bp-0x10]\n
    struct struct_0 **v194;  // [bp-0xc]\n
    unsigned int v195;  // [bp-0x8]\n
    unsigned int v197;  // ebx\n
    unsigned int *v198;  // eax\n
    struct struct_0 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int *v204;  // eax\n
    struct struct_0 **v205;  // eax\n
    struct struct_0 **v207;  // eax\n
    unsigned int *v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_0 **v213;  // eax\n
    unsigned int *v214;  // eax\n
    struct struct_0 **v215;  // eax\n
    struct struct_0 **v217;  // eax\n
    unsigned int *v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_0 **v237;  // eax\n
    struct struct_0 **v239;  // eax\n
    unsigned int *v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_0 **v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v247;  // eax\n
    unsigned int *v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_0 **v251;  // eax\n
    unsigned int *v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_0 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    struct struct_0 **v259;  // eax\n
    unsigned int *v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_0 **v263;  // eax\n
    struct struct_0 **v265;  // eax\n
    unsigned int *v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_0 **v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_0 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    unsigned int *v278;  // eax\n
    struct struct_0 **v279;  // eax\n
    unsigned int *v280;  // eax\n
    struct struct_0 **v281;  // eax\n
    unsigned int *v282;  // eax\n
    struct struct_0 **v283;  // eax\n
    unsigned int *v284;  // eax, Other Possible Types: unsigned int\n
    unsigned int v285;  // ebx\n
\n
    v195 = v197;\n
    v33 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v51 = g_4f03a8;\n
    v52 = g_4f03ac;\n
    v53 = g_4f03b0;\n
    v50 = cgc__cookie;\n
    v49 = -1;\n
    if (cgc_sendline(1, \"===llamaJuletta===\", 18) < 0)\n
        cgc__terminate();\n
    v123 = v196;\n
    v122 = a0;\n
    *(&v121[0]) = *(v123);\n
    if (*(v122) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v198 = v122;\n
    *(v198) = *(v198) - 2;\n
    v199 = v123;\n
    *(v199) = &*(v199)->padding_1[1];\n
    v49 = *(&v121[0]);\n
    v107 = v196;\n
    v106 = a0;\n
    memset(&v104, 0, 6);\n
    if (*(v106) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(&*(v107)->field_0);\n
    cgc_uint2str(&v104, 6, v105);\n
    v32 = &v104;\n
    if (cgc_sendline(1, v32, cgc_strlen(&v104)) < 0)\n
        cgc__terminate();\n
    v200 = v106;\n
    *(v200) = *(v200) - 2;\n
    v201 = v107;\n
    *(v201) = &*(v201)->padding_1[1];\n
    v58 = v196;\n
    v57 = a0;\n
    v55 = &*(v58)->field_0;\n
    memset(&v54, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (*(v55) << 8)\n
        v31 = v55[1];\n
    v56 = v31 & 1;\n
    cgc_uint2str(&v54, 6, v56);\n
    v30 = &v54;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v202 = v57;\n
    *(v202) = *(v202) - 2;\n
    v203 = v58;\n
    *(v203) = &*(v203)->padding_1[1];\n
    v120 = v196;\n
    v119 = a0;\n
    v118 = &*(v120)->field_0;\n
    if (*(v119) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v204 = v119;\n
    *(v204) = *(v204) - 2;\n
    v205 = v120;\n
    *(v205) = &*(v205)->padding_1[1];\n
    v49 = *(v118);\n
    v91 = v196;\n
    v90 = a0;\n
    if (*(v90) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v90) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v90);\n
    v89 = v29;\n
    if (!v89)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = cgc_calloc(134);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v88, &v33[18].padding_0[182]);\n
    cgc_strncpy(v88 + 5, *(v91), v89);\n
    v207 = v91;\n
    *(v207) = &(&*(v207)->field_4)[cgc_strlen(v88)];\n
    v209 = v90;\n
    *(v209) = *(v209) - (cgc_strlen(v88) + -4);\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v103 = v196;\n
    v102 = a0;\n
    memset(&v100, 0, 6);\n
    if (*(v102) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v101 = *(&*(v103)->field_0);\n
    cgc_uint2str(&v100, 6, v101);\n
    v28 = &v100;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v100)) < 0)\n
        cgc__terminate();\n
    v210 = v102;\n
    *(v210) = *(v210) - 2;\n
    v211 = v103;\n
    *(v211) = &*(v211)->padding_1[1];\n
    v155 = v196;\n
    v154 = a0;\n
    memset(&v152, 0, 12);\n
    if (*(v154) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v153 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v43 = [D] x86g_create_fpucw(fpround<4>);\n
    v42 = v43 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v152, 12, v48);\n
    v27 = &v152;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v152)) < 0)\n
        cgc__terminate();\n
    v212 = v154;\n
    *(v212) = *(v212) - 4;\n
    v213 = v155;\n
    *(v213) = &*(v213)->field_4;\n
    v143 = v196;\n
    v142 = a0;\n
    memset(&v140, 0, 12);\n
    if (*(v142) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v141 = *(&*(v143)->field_0);\n
    cgc_uint2str(&v140, 12, v141);\n
    v26 = &v140;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v140)) < 0)\n
        cgc__terminate();\n
    v214 = v142;\n
    *(v214) = *(v214) - 4;\n
    v215 = v143;\n
    *(v215) = &*(v215)->field_4;\n
    v194 = v196;\n
    v193 = a0;\n
    if (*(v193) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v193) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v193);\n
    v192 = v25;\n
    if (!v192)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v191 = cgc_calloc(134);\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v191, &v33[18].padding_0[182]);\n
    cgc_strncpy(v191 + 5, *(v194), v192);\n
    v217 = v194;\n
    *(v217) = &(&*(v217)->field_4)[cgc_strlen(v191)];\n
    v219 = v193;\n
    *(v219) = *(v219) - (cgc_strlen(v191) + -4);\n
    cgc_checkheap();\n
    cgc_free(v191);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v174 = v196;\n
    v173 = a0;\n
    *(&v171[0]) = *(v174);\n
    memset(&v170, 0, 12);\n
    if (*(v173) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = 0;\n
    if (v171[0] << 24)\n
    {\n
        v24 = 0;\n
        if (v171[1] << 16)\n
        {\n
            v24 = 0;\n
            if (v171[2] << 8)\n
                v24 = v171[3];\n
        }\n
    }\n
    v172 = v24 & 1;\n
    cgc_uint2str(&v170, 12, v172);\n
    v23 = &v170;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v170)) < 0)\n
        cgc__terminate();\n
    v220 = v173;\n
    *(v220) = *(v220) - 4;\n
    v221 = v174;\n
    *(v221) = &*(v221)->field_4;\n
    v76 = v196;\n
    v75 = a0;\n
    *(&v72[0]) = *(v76);\n
    memset(&v71, 0, 21);\n
    if (*(v75) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v22 = 0;\n
    if (v72[0])\n
    {\n
        v22 = 0;\n
        if (v72[1])\n
        {\n
            v22 = 0;\n
            if (v72[2])\n
            {\n
                v22 = 0;\n
                if (v72[3])\n
                {\n
                    v22 = 0;\n
                    if (v72[4] << 24)\n
                    {\n
                        v22 = 0;\n
                        if (v72[5] << 16)\n
                        {\n
                            v22 = 0;\n
                            if (v72[6] << 8)\n
                                v22 = v72[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v73 = v22 & 1;\n
    v74 = 0;\n
    cgc_uint2str(&v71, 21, v73);\n
    v21 = &v71;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v222 = v75;\n
    *(v222) = *(v222) - 8;\n
    v223 = v76;\n
    *(v223) = *(v223) + 1;\n
    v70 = v196;\n
    v69 = a0;\n
    *(&v66[0]) = *(v70);\n
    memset(&v65, 0, 21);\n
    if (*(v69) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = 0;\n
    if (v66[0])\n
    {\n
        v20 = 0;\n
        if (v66[1])\n
        {\n
            v20 = 0;\n
            if (v66[2])\n
            {\n
                v20 = 0;\n
                if (v66[3])\n
                {\n
                    v20 = 0;\n
                    if (v66[4] << 24)\n
                    {\n
                        v20 = 0;\n
                        if (v66[5] << 16)\n
                        {\n
                            v20 = 0;\n
                            if (v66[6] << 8)\n
                                v20 = v66[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v67 = v20 & 1;\n
    v68 = 0;\n
    cgc_uint2str(&v65, 21, v67);\n
    v19 = &v65;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v224 = v69;\n
    *(v224) = *(v224) - 8;\n
    v225 = v70;\n
    *(v225) = *(v225) + 1;\n
    v169 = v196;\n
    v168 = a0;\n
    *(&v166[0]) = *(v169);\n
    memset(&v165, 0, 12);\n
    if (*(v168) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v166[0] << 24)\n
    {\n
        v18 = 0;\n
        if (v166[1] << 16)\n
        {\n
            v18 = 0;\n
            if (v166[2] << 8)\n
                v18 = v166[3];\n
        }\n
    }\n
    v167 = v18 & 1;\n
    cgc_uint2str(&v165, 12, v167);\n
    v17 = &v165;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v165)) < 0)\n
        cgc__terminate();\n
    v226 = v168;\n
    *(v226) = *(v226) - 4;\n
    v227 = v169;\n
    *(v227) = &*(v227)->field_4;\n
    v84 = v196;\n
    v83 = a0;\n
    if (*(v83) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v82 = *(v84)->field_0;\n
    v228 = v83;\n
    *(v228) = *(v228) - 1;\n
    v229 = v84;\n
    *(v229) = &*(v229)->padding_1;\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_4cd01f;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4cd01f:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v230 = v84;\n
    *(v230) = &(&*(v230)->field_0)[v82];\n
    v231 = v83;\n
    *(v231) = *(v231) - v82;\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v64 = v196;\n
    v63 = a0;\n
    *(&v60[0]) = *(v64);\n
    memset(&v59, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v60[0])\n
    {\n
        v16 = 0;\n
        if (v60[1])\n
        {\n
            v16 = 0;\n
            if (v60[2])\n
            {\n
                v16 = 0;\n
                if (v60[3])\n
                {\n
                    v16 = 0;\n
                    if (v60[4] << 24)\n
                    {\n
                        v16 = 0;\n
                        if (v60[5] << 16)\n
                        {\n
                            v16 = 0;\n
                            if (v60[6] << 8)\n
                                v16 = v60[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v61 = v16 & 1;\n
    v62 = 0;\n
    cgc_uint2str(&v59, 21, v61);\n
    v15 = &v59;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v232 = v63;\n
    *(v232) = *(v232) - 8;\n
    v233 = v64;\n
    *(v233) = *(v233) + 1;\n
    v99 = v196;\n
    v98 = a0;\n
    memset(&v96, 0, 6);\n
    if (*(v98) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v97 = *(&*(v99)->field_0);\n
    cgc_uint2str(&v96, 6, v97);\n
    v14 = &v96;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v96)) < 0)\n
        cgc__terminate();\n
    v234 = v98;\n
    *(v234) = *(v234) - 2;\n
    v235 = v99;\n
    *(v235) = &*(v235)->padding_1[1];\n
    v164 = v196;\n
    v163 = a0;\n
    *(&v161[0]) = *(v164);\n
    memset(&v160, 0, 12);\n
    if (*(v163) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v161[0] << 24)\n
    {\n
        v13 = 0;\n
        if (v161[1] << 16)\n
        {\n
            v13 = 0;\n
            if (v161[2] << 8)\n
                v13 = v161[3];\n
        }\n
    }\n
    v162 = v13 & 1;\n
    cgc_uint2str(&v160, 12, v162);\n
    v12 = &v160;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v160)) < 0)\n
        cgc__terminate();\n
    v236 = v163;\n
    *(v236) = *(v236) - 4;\n
    v237 = v164;\n
    *(v237) = &*(v237)->field_4;\n
    v190 = v196;\n
    v189 = a0;\n
    if (*(v189) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v189) >= 128)\n
        v11 = 128;\n
    else\n
        v11 = *(v189);\n
    v188 = v11;\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v187 = cgc_calloc(134);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v187, &v33[18].padding_0[182]);\n
    cgc_strncpy(v187 + 5, *(v190), v188);\n
    v239 = v190;\n
    *(v239) = &(&*(v239)->field_4)[cgc_strlen(v187)];\n
    v241 = v189;\n
    *(v241) = *(v241) - (cgc_strlen(v187) + -4);\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v80 = v196;\n
    v79 = a0;\n
    if (*(v79) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v78 = *(v80)->field_0;\n
    v242 = v79;\n
    *(v242) = *(v242) - 1;\n
    v243 = v80;\n
    *(v243) = &*(v243)->padding_1;\n
    if (v78 <= *(v79) && !(!v78))\n
        goto LABEL_4cd9f1;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4cd9f1:\n
    v77 = cgc_calloc(v78);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v77, *(v80), v78);\n
    if (cgc_sendline(1, &v33[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v244 = v80;\n
    *(v244) = &(&*(v244)->field_0)[v78];\n
    v245 = v79;\n
    *(v245) = *(v245) - v78;\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    v186 = v196;\n
    v185 = a0;\n
    if (*(v185) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v185) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v185);\n
    v184 = v10;\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v183 = cgc_calloc(134);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v183, &v33[18].padding_0[182]);\n
    cgc_strncpy(v183 + 5, *(v186), v184);\n
    v247 = v186;\n
    *(v247) = &(&*(v247)->field_4)[cgc_strlen(v183)];\n
    v249 = v185;\n
    *(v249) = *(v249) - (cgc_strlen(v183) + -4);\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v151 = v196;\n
    v150 = a0;\n
    memset(&v148, 0, 12);\n
    if (*(v150) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v149 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v41 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-830, size=2, endness=Iend_LE)))));\n
    v40 = v41 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v148, 12, v47);\n
    v9 = &v148;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v148)) < 0)\n
        cgc__terminate();\n
    v250 = v150;\n
    *(v250) = *(v250) - 4;\n
    v251 = v151;\n
    *(v251) = &*(v251)->field_4;\n
    v147 = v196;\n
    v146 = a0;\n
    memset(&v144, 0, 12);\n
    if (*(v146) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v145 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v39 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-834, size=2, endness=Iend_LE)))));\n
    v38 = v39 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v144, 12, v46);\n
    v8 = &v144;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v144)) < 0)\n
        cgc__terminate();\n
    v252 = v146;\n
    *(v252) = *(v252) - 4;\n
    v253 = v147;\n
    *(v253) = &*(v253)->field_4;\n
    v139 = v196;\n
    v138 = a0;\n
    memset(&v136, 0, 12);\n
    if (*(v138) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v137 = *(&*(v139)->field_0);\n
    cgc_uint2str(&v136, 12, v137);\n
    v7 = &v136;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v136)) < 0)\n
        cgc__terminate();\n
    v254 = v138;\n
    *(v254) = *(v254) - 4;\n
    v255 = v139;\n
    *(v255) = &*(v255)->field_4;\n
    v95 = v196;\n
    v94 = a0;\n
    memset(&v92, 0, 6);\n
    if (*(v94) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v93 = *(&*(v95)->field_0);\n
    cgc_uint2str(&v92, 6, v93);\n
    v6 = &v92;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v92)) < 0)\n
        cgc__terminate();\n
    v256 = v94;\n
    *(v256) = *(v256) - 2;\n
    v257 = v95;\n
    *(v257) = &*(v257)->padding_1[1];\n
    v182 = v196;\n
    v181 = a0;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v181) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v181);\n
    v180 = v5;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v179, &v33[18].padding_0[182]);\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v259 = v182;\n
    *(v259) = &(&*(v259)->field_4)[cgc_strlen(v179)];\n
    v261 = v181;\n
    *(v261) = *(v261) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v131 = v196;\n
    v130 = a0;\n
    memset(&v128, 0, 21);\n
    if (*(v130) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v129 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v37 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-838, size=2, endness=Iend_LE)))));\n
    v36 = v37 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v128, 21, v45);\n
    v4 = &v128;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v262 = v130;\n
    *(v262) = *(v262) - 8;\n
    v263 = v131;\n
    *(v263) = *(v263) + 1;\n
    v178 = v196;\n
    v177 = a0;\n
    if (*(v177) <= 0)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v177) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v177);\n
    v176 = v3;\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v175 = cgc_calloc(134);\n
    if (!v175)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v175, &v33[18].padding_0[182]);\n
    cgc_strncpy(v175 + 5, *(v178), v176);\n
    v265 = v178;\n
    *(v265) = &(&*(v265)->field_4)[cgc_strlen(v175)];\n
    v267 = v177;\n
    *(v267) = *(v267) - (cgc_strlen(v175) + -4);\n
    cgc_checkheap();\n
    cgc_free(v175);\n
    if (cgc_sendline(1, &v33[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v117 = v196;\n
    v116 = a0;\n
    v115 = &*(v117)->field_0;\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v268 = v116;\n
    *(v268) = *(v268) - 2;\n
    v269 = v117;\n
    *(v269) = &*(v269)->padding_1[1];\n
    v49 = *(&v115);\n
    v159 = v196;\n
    v158 = a0;\n
    if (*(v158) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v157 = *(&*(v159)->field_0);\n
    v270 = v158;\n
    *(v270) = *(v270) - 2;\n
    v271 = v159;\n
    *(v271) = &*(v271)->padding_1[1];\n
    if (v157 <= *(v158) && !(!v157))\n
        goto LABEL_4cea9a;\n
    if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4cea9a:\n
    v156 = cgc_calloc(v157);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v156, *(v159), v157);\n
    if (cgc_sendline(1, &v33[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v272 = v158;\n
    *(v272) = *(v272) - v157;\n
    v273 = v159;\n
    *(v273) = &(&*(v273)->field_0)[v157];\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    v114 = v196;\n
    v113 = a0;\n
    *(&v112[0]) = *(v114);\n
    if (*(v113) < 2)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v274 = v113;\n
    *(v274) = *(v274) - 2;\n
    v275 = v114;\n
    *(v275) = &*(v275)->padding_1[1];\n
    v49 = *(&v112[0]);\n
    v111 = v196;\n
    v110 = a0;\n
    memset(&v108, 0, 4);\n
    if (*(v110) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v109 = *(v111)->field_0;\n
    cgc_uint2str(&v108, 4, v109);\n
    v2 = &v108;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v108)) < 0)\n
        cgc__terminate();\n
    v276 = v110;\n
    *(v276) = *(v276) - 1;\n
    v277 = v111;\n
    *(v277) = &*(v277)->padding_1;\n
    v135 = v196;\n
    v134 = a0;\n
    memset(&v132, 0, 12);\n
    if (*(v134) < 4)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = *(&*(v135)->field_0);\n
    cgc_uint2str(&v132, 12, v133);\n
    v1 = &v132;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v278 = v134;\n
    *(v278) = *(v278) - 4;\n
    v279 = v135;\n
    *(v279) = &*(v279)->field_4;\n
    v127 = v196;\n
    v126 = a0;\n
    memset(&v124, 0, 21);\n
    if (*(v126) < 8)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v125 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-842, size=2, endness=Iend_LE)))));\n
    v34 = v35 | 0xc00;\n
    v44 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v124, 21, v44);\n
    v0 = &v124;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v280 = v126;\n
    *(v280) = *(v280) - 8;\n
    v281 = v127;\n
    *(v281) = *(v281) + 1;\n
    v87 = v196;\n
    v86 = a0;\n
    v85 = &*(v87)->field_0;\n
    if (*(v86) < 1)\n
    {\n
        if (cgc_sendline(1, &v33[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v282 = v86;\n
    *(v282) = *(v282) - 1;\n
    v283 = v87;\n
    *(v283) = &*(v283)->padding_1;\n
    v49 = *(v85);\n
    v50 ^= v33->field_260;\n
    if (v50)\n
        cgc___stack_cookie_fail();\n
    v284 = a0;\n
    if (*(v284) > 0 && v49 >= 0 && v49 < 3)\n
        v284 = (&v51)[v49](v196);\n
    v285 = v195;\n
    return v284;\n
}\n
", "5042572:sub_4cf18c": null, "5042576:cgc_process_llamaaalii": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaaalii(struct struct_0 **v206, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x3ec]\n
    struct_1 *v1;  // [bp-0x3e8]\n
    struct_1 *v2;  // [bp-0x3e4]\n
    char v3;  // [bp-0x3dd]\n
    struct_1 *v4;  // [bp-0x3dc]\n
    char v5;  // [bp-0x3d5]\n
    struct_1 *v6;  // [bp-0x3d4]\n
    struct_1 *v7;  // [bp-0x3d0]\n
    unsigned int v8;  // [bp-0x3cc]\n
    struct_1 *v9;  // [bp-0x3c8]\n
    struct_1 *v10;  // [bp-0x3c4]\n
    struct_1 *v11;  // [bp-0x3c0]\n
    struct_1 *v12;  // [bp-0x3bc]\n
    char v13;  // [bp-0x3b5]\n
    struct_1 *v14;  // [bp-0x3b4]\n
    struct_1 *v15;  // [bp-0x3b0]\n
    char v16;  // [bp-0x3a9]\n
    struct_1 *v17;  // [bp-0x3a8]\n
    struct_1 *v18;  // [bp-0x3a4]\n
    struct_1 *v19;  // [bp-0x3a0]\n
    struct_1 *v20;  // [bp-0x39c]\n
    struct_1 *v21;  // [bp-0x398]\n
    struct_1 *v22;  // [bp-0x394]\n
    char v23;  // [bp-0x38d]\n
    struct_1 *v24;  // [bp-0x38c]\n
    struct_1 *v25;  // [bp-0x388]\n
    struct_1 *v26;  // [bp-0x384]\n
    struct_1 *v27;  // [bp-0x380]\n
    char v28;  // [bp-0x379]\n
    unsigned int v29;  // [bp-0x378]\n
    unsigned int v30;  // [bp-0x374]\n
    struct_1 *v31;  // [bp-0x370]\n
    unsigned int v32;  // [bp-0x36c]\n
    struct_1 *v33;  // [bp-0x368]\n
    struct_2 *v34;  // [bp-0x364]\n
    unsigned short v35;  // [bp-0x360]\n
    unsigned short v36;  // [bp-0x35e]\n
    unsigned short v37;  // [bp-0x35c]\n
    unsigned short v38;  // [bp-0x35a]\n
    unsigned short v39;  // [bp-0x358]\n
    unsigned short v40;  // [bp-0x356]\n
    unsigned short v41;  // [bp-0x354]\n
    unsigned short v42;  // [bp-0x352]\n
    unsigned short v43;  // [bp-0x350]\n
    unsigned short v44;  // [bp-0x34e]\n
    unsigned long v45;  // [bp-0x34c]\n
    unsigned long v46;  // [bp-0x344]\n
    unsigned long v47;  // [bp-0x33c]\n
    unsigned long v48;  // [bp-0x334]\n
    unsigned long v49;  // [bp-0x32c]\n
    struct struct_3 **v50;  // [bp-0x320]\n
    unsigned int v51;  // [bp-0x31c]\n
    char v52;  // [bp-0x318]\n
    char v53;  // [bp-0x316]\n
    char v54[8];  // [bp-0x310]\n
    unsigned short v55;  // [bp-0x30a]\n
    unsigned int *v56;  // [bp-0x308]\n
    struct struct_0 **v57;  // [bp-0x304]\n
    char v58;  // [bp-0x2fe]\n
    char v59[2];  // [bp-0x2f8]\n
    unsigned short v60;  // [bp-0x2f2]\n
    unsigned int *v61;  // [bp-0x2f0]\n
    struct struct_0 **v62;  // [bp-0x2ec]\n
    char v63;  // [bp-0x2e6]\n
    char v64[2];  // [bp-0x2e0]\n
    unsigned short v65;  // [bp-0x2da]\n
    unsigned int *v66;  // [bp-0x2d8]\n
    struct struct_0 **v67;  // [bp-0x2d4]\n
    char v68;  // [bp-0x2cd]\n
    char v69[8];  // [bp-0x2b8]\n
    unsigned int v70;  // [bp-0x2b4]\n
    void* v71;  // [bp-0x2b0]\n
    unsigned int *v72;  // [bp-0x2ac]\n
    struct struct_0 **v73;  // [bp-0x2a8]\n
    unsigned int v74;  // [bp-0x2a4]\n
    char v75;  // [bp-0x29d]\n
    unsigned int *v76;  // [bp-0x29c]\n
    struct struct_0 **v77;  // [bp-0x298]\n
    unsigned int v78;  // [bp-0x294]\n
    char v79;  // [bp-0x28d]\n
    unsigned int *v80;  // [bp-0x28c]\n
    struct struct_0 **v81;  // [bp-0x288]\n
    unsigned int v82;  // [bp-0x284]\n
    char v83;  // [bp-0x27d]\n
    unsigned int *v84;  // [bp-0x27c]\n
    struct struct_0 **v85;  // [bp-0x278]\n
    unsigned int v86;  // [bp-0x274]\n
    char v87;  // [bp-0x26d]\n
    unsigned int *v88;  // [bp-0x26c]\n
    struct struct_0 **v89;  // [bp-0x268]\n
    char *v90;  // [bp-0x264]\n
    unsigned int v91;  // [bp-0x260]\n
    unsigned int *v92;  // [bp-0x25c]\n
    struct struct_0 **v93;  // [bp-0x258]\n
    char *v94;  // [bp-0x254]\n
    unsigned int v95;  // [bp-0x250]\n
    unsigned int *v96;  // [bp-0x24c]\n
    struct struct_0 **v97;  // [bp-0x248]\n
    char v98;  // [bp-0x244]\n
    unsigned short v99;  // [bp-0x23e]\n
    unsigned int *v100;  // [bp-0x23c]\n
    struct struct_0 **v101;  // [bp-0x238]\n
    char v102;  // [bp-0x234]\n
    unsigned short v103;  // [bp-0x22e]\n
    unsigned int *v104;  // [bp-0x22c]\n
    struct struct_0 **v105;  // [bp-0x228]\n
    char v106;  // [bp-0x224]\n
    unsigned short v107;  // [bp-0x21e]\n
    unsigned int *v108;  // [bp-0x21c]\n
    struct struct_0 **v109;  // [bp-0x218]\n
    char v110;  // [bp-0x214]\n
    unsigned short v111;  // [bp-0x20e]\n
    unsigned int *v112;  // [bp-0x20c]\n
    struct struct_0 **v113;  // [bp-0x208]\n
    char v114;  // [bp-0x204]\n
    unsigned short v115;  // [bp-0x1fe]\n
    unsigned int *v116;  // [bp-0x1fc]\n
    struct struct_0 **v117;  // [bp-0x1f8]\n
    char v118;  // [bp-0x1f1]\n
    unsigned long v119;  // [bp-0x1dc]\n
    unsigned int *v120;  // [bp-0x1d4]\n
    struct struct_0 **v121;  // [bp-0x1d0]\n
    char v122;  // [bp-0x1cc]\n
    unsigned int v123;  // [bp-0x1c0]\n
    unsigned int *v124;  // [bp-0x1bc]\n
    struct struct_0 **v125;  // [bp-0x1b8]\n
    char v126;  // [bp-0x1b4]\n
    unsigned int v127;  // [bp-0x1a8]\n
    unsigned int *v128;  // [bp-0x1a4]\n
    struct struct_0 **v129;  // [bp-0x1a0]\n
    char v130;  // [bp-0x19c]\n
    unsigned int v131;  // [bp-0x190]\n
    unsigned int *v132;  // [bp-0x18c]\n
    struct struct_0 **v133;  // [bp-0x188]\n
    char v134;  // [bp-0x184]\n
    unsigned int v135;  // [bp-0x178]\n
    unsigned int *v136;  // [bp-0x174]\n
    struct struct_0 **v137;  // [bp-0x170]\n
    char v138;  // [bp-0x16c]\n
    unsigned int v139;  // [bp-0x160]\n
    unsigned int *v140;  // [bp-0x15c]\n
    struct struct_0 **v141;  // [bp-0x158]\n
    char v142;  // [bp-0x154]\n
    unsigned int v143;  // [bp-0x148]\n
    unsigned int *v144;  // [bp-0x144]\n
    struct struct_0 **v145;  // [bp-0x140]\n
    char v146;  // [bp-0x13c]\n
    unsigned int v147;  // [bp-0x130]\n
    unsigned int *v148;  // [bp-0x12c]\n
    struct struct_0 **v149;  // [bp-0x128]\n
    char v150;  // [bp-0x124]\n
    unsigned int v151;  // [bp-0x118]\n
    unsigned int *v152;  // [bp-0x114]\n
    struct struct_0 **v153;  // [bp-0x110]\n
    char v154;  // [bp-0x10c]\n
    unsigned int v155;  // [bp-0x100]\n
    unsigned int *v156;  // [bp-0xfc]\n
    struct struct_0 **v157;  // [bp-0xf8]\n
    char v158;  // [bp-0xf4]\n
    unsigned int v159;  // [bp-0xe8]\n
    unsigned int *v160;  // [bp-0xe4]\n
    struct struct_0 **v161;  // [bp-0xe0]\n
    unsigned int v162;  // [bp-0xdc]\n
    unsigned short v163;  // [bp-0xd6]\n
    unsigned int *v164;  // [bp-0xd4]\n
    struct struct_0 **v165;  // [bp-0xd0]\n
    char v166;  // [bp-0xcc]\n
    char v167[4];  // [bp-0xc0]\n
    unsigned int v168;  // [bp-0xbc]\n
    unsigned int *v169;  // [bp-0xb8]\n
    struct struct_0 **v170;  // [bp-0xb4]\n
    char v171;  // [bp-0xb0]\n
    char v172[4];  // [bp-0xa4]\n
    unsigned int v173;  // [bp-0xa0]\n
    unsigned int *v174;  // [bp-0x9c]\n
    struct struct_0 **v175;  // [bp-0x98]\n
    char *v176;  // [bp-0x94]\n
    unsigned int v177;  // [bp-0x90]\n
    unsigned int *v178;  // [bp-0x8c]\n
    struct struct_0 **v179;  // [bp-0x88]\n
    char *v180;  // [bp-0x84]\n
    unsigned int v181;  // [bp-0x80]\n
    unsigned int *v182;  // [bp-0x7c]\n
    struct struct_0 **v183;  // [bp-0x78]\n
    char *v184;  // [bp-0x74]\n
    unsigned int v185;  // [bp-0x70]\n
    unsigned int *v186;  // [bp-0x6c]\n
    struct struct_0 **v187;  // [bp-0x68]\n
    char v188;  // [bp-0x61]\n
    unsigned int v189;  // [bp-0x4c]\n
    unsigned int v190;  // [bp-0x48]\n
    unsigned int *v191;  // [bp-0x40]\n
    struct struct_0 **v192;  // [bp-0x3c]\n
    unsigned int v193;  // [bp-0x38]\n
    char v194;  // [bp-0x31]\n
    unsigned int *v195;  // [bp-0x30]\n
    struct struct_0 **v196;  // [bp-0x2c]\n
    unsigned int v197;  // [bp-0x28]\n
    char v198;  // [bp-0x21]\n
    unsigned int *v199;  // [bp-0x20]\n
    struct struct_0 **v200;  // [bp-0x1c]\n
    unsigned int v201;  // [bp-0x18]\n
    char v202;  // [bp-0x11]\n
    unsigned int *v203;  // [bp-0x10]\n
    struct struct_0 **v204;  // [bp-0xc]\n
    unsigned int v205;  // [bp-0x8]\n
    unsigned int v207;  // ebx\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_0 **v213;  // eax\n
    struct struct_0 **v215;  // eax\n
    unsigned int *v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v219;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_0 **v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_0 **v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    unsigned int *v241;  // eax\n
    unsigned int *v242;  // eax\n
    struct struct_0 **v243;  // eax\n
    unsigned int *v244;  // eax\n
    struct struct_0 **v245;  // eax\n
    unsigned int *v246;  // eax\n
    struct struct_0 **v247;  // eax\n
    unsigned int *v248;  // eax\n
    struct struct_0 **v249;  // eax\n
    unsigned int *v250;  // eax\n
    struct struct_0 **v251;  // eax\n
    unsigned int *v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct struct_0 **v255;  // eax\n
    unsigned int *v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    struct struct_0 **v259;  // eax\n
    unsigned int *v260;  // eax\n
    struct struct_0 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_0 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    unsigned int *v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    unsigned int *v270;  // eax\n
    struct struct_0 **v271;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    unsigned int v278[2];  // ecx\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    struct struct_0 **v283;  // eax\n
    unsigned int *v284;  // eax\n
    unsigned int *v285;  // eax\n
    struct struct_0 **v286;  // eax\n
    unsigned int *v287;  // eax\n
    struct struct_0 **v288;  // eax\n
    unsigned int *v289;  // eax\n
    struct struct_0 **v290;  // eax\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    struct struct_0 **v293;  // eax\n
    unsigned int *v294;  // eax\n
    unsigned int *v295;  // eax\n
    struct struct_0 **v296;  // eax\n
    struct struct_0 **v297;  // eax\n
    unsigned int *v298;  // eax\n
    unsigned int *v299;  // eax\n
    struct struct_0 **v300;  // eax\n
    struct struct_0 **v301;  // eax\n
    unsigned int *v302;  // eax\n
    struct struct_0 **v304;  // eax\n
    unsigned int *v306;  // eax\n
    unsigned int *v307;  // eax, Other Possible Types: unsigned int\n
    unsigned int v308;  // ebx\n
\n
    v205 = v207;\n
    v34 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v51 = cgc__cookie;\n
    v50 = -1;\n
    if (cgc_sendline(1, \"===llamaaalii===\", 16) < 0)\n
        cgc__terminate();\n
    v89 = v206;\n
    v88 = a0;\n
    if (*(v88) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(v89)->field_0;\n
    v208 = v88;\n
    *(v208) = *(v208) - 1;\n
    v209 = v89;\n
    *(v209) = &*(v209)->padding_1;\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_4cf31b;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4cf31b:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v210 = v89;\n
    *(v210) = &(&*(v210)->field_0)[v87];\n
    v211 = v88;\n
    *(v211) = *(v211) - v87;\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v121 = v206;\n
    v120 = a0;\n
    memset(&v118, 0, 21);\n
    if (*(v120) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v119 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(fpround<4>);\n
    v43 = v44 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v118, 21, v49);\n
    v33 = &v118;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v118)) < 0)\n
        cgc__terminate();\n
    v212 = v120;\n
    *(v212) = *(v212) - 8;\n
    v213 = v121;\n
    *(v213) = &(*(v213))[1].padding_1[2];\n
    v187 = v206;\n
    v186 = a0;\n
    if (*(v186) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v186) >= 128)\n
        v32 = 128;\n
    else\n
        v32 = *(v186);\n
    v185 = v32;\n
    if (!v185)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v184 = cgc_calloc(134);\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v184, &v34[18].padding_0[182]);\n
    cgc_strncpy(v184 + 5, *(v187), v185);\n
    v215 = v187;\n
    *(v215) = &(&*(v215)->field_4)[cgc_strlen(v184)];\n
    v217 = v186;\n
    *(v217) = *(v217) - (cgc_strlen(v184) + -4);\n
    cgc_checkheap();\n
    cgc_free(v184);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v117 = v206;\n
    v116 = a0;\n
    memset(&v114, 0, 6);\n
    if (*(v116) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v115 = *(&*(v117)->field_0);\n
    cgc_uint2str(&v114, 6, v115);\n
    v31 = &v114;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v114)) < 0)\n
        cgc__terminate();\n
    v218 = v116;\n
    *(v218) = *(v218) - 2;\n
    v219 = v117;\n
    *(v219) = &*(v219)->padding_1[1];\n
    v183 = v206;\n
    v182 = a0;\n
    if (*(v182) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v182) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v182);\n
    v181 = v30;\n
    if (!v181)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v180 = cgc_calloc(134);\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v180, &v34[18].padding_0[182]);\n
    cgc_strncpy(v180 + 5, *(v183), v181);\n
    v221 = v183;\n
    *(v221) = &(&*(v221)->field_4)[cgc_strlen(v180)];\n
    v223 = v182;\n
    *(v223) = *(v223) - (cgc_strlen(v180) + -4);\n
    cgc_checkheap();\n
    cgc_free(v180);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v97 = v206;\n
    v96 = a0;\n
    if (*(v96) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v96) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v96);\n
    v95 = v29;\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = cgc_calloc(134);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v94, &v34[18].padding_0[182]);\n
    cgc_strncpy(v94 + 5, *(v97), v95);\n
    v225 = v97;\n
    *(v225) = &(&*(v225)->field_4)[cgc_strlen(v94)];\n
    v227 = v96;\n
    *(v227) = *(v227) - (cgc_strlen(v94) + -4);\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v175 = v206;\n
    v174 = a0;\n
    *(&v172[0]) = *(v175);\n
    memset(&v171, 0, 12);\n
    if (*(v174) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v28 = 0;\n
    if (v172[0] << 24)\n
    {\n
        v28 = 0;\n
        if (v172[1] << 16)\n
        {\n
            v28 = 0;\n
            if (v172[2] << 8)\n
                v28 = v172[3];\n
        }\n
    }\n
    v173 = v28 & 1;\n
    cgc_uint2str(&v171, 12, v173);\n
    v27 = &v171;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v171)) < 0)\n
        cgc__terminate();\n
    v228 = v174;\n
    *(v228) = *(v228) - 4;\n
    v229 = v175;\n
    *(v229) = &*(v229)->field_4;\n
    v165 = v206;\n
    v164 = a0;\n
    if (*(v164) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = *(&*(v165)->field_0);\n
    v230 = v164;\n
    *(v230) = *(v230) - 2;\n
    v231 = v165;\n
    *(v231) = &*(v231)->padding_1[1];\n
    if (v163 <= *(v164) && !(!v163))\n
        goto LABEL_4d00e7;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d00e7:\n
    v162 = cgc_calloc(v163);\n
    if (!v162)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v162, *(v165), v163);\n
    if (cgc_sendline(1, &v34[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v232 = v164;\n
    *(v232) = *(v232) - v163;\n
    v233 = v165;\n
    *(v233) = &(&*(v233)->field_0)[v163];\n
    cgc_checkheap();\n
    cgc_free(v162);\n
    v145 = v206;\n
    v144 = a0;\n
    memset(&v142, 0, 12);\n
    if (*(v144) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = *(&*(v145)->field_0);\n
    cgc_uint2str(&v142, 12, v143);\n
    v26 = &v142;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v142)) < 0)\n
        cgc__terminate();\n
    v234 = v144;\n
    *(v234) = *(v234) - 4;\n
    v235 = v145;\n
    *(v235) = &*(v235)->field_4;\n
    v161 = v206;\n
    v160 = a0;\n
    memset(&v158, 0, 12);\n
    if (*(v160) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v159 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-846, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v48 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v158, 12, v48);\n
    v25 = &v158;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v158)) < 0)\n
        cgc__terminate();\n
    v236 = v160;\n
    *(v236) = *(v236) - 4;\n
    v237 = v161;\n
    *(v237) = &*(v237)->field_4;\n
    v204 = v206;\n
    v203 = a0;\n
    if (*(v203) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v202 = *(v204)->field_0;\n
    v238 = v203;\n
    *(v238) = *(v238) - 1;\n
    v239 = v204;\n
    *(v239) = &*(v239)->padding_1;\n
    if (v202 <= *(v203) && !(!v202))\n
        goto LABEL_4d05b8;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d05b8:\n
    v201 = cgc_calloc(v202);\n
    if (!v201)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v201, *(v204), v202);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v240 = v204;\n
    *(v240) = &(&*(v240)->field_0)[v202];\n
    v241 = v203;\n
    *(v241) = *(v241) - v202;\n
    cgc_checkheap();\n
    cgc_free(v201);\n
    v113 = v206;\n
    v112 = a0;\n
    memset(&v110, 0, 6);\n
    if (*(v112) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v111 = *(&*(v113)->field_0);\n
    cgc_uint2str(&v110, 6, v111);\n
    v24 = &v110;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v110)) < 0)\n
        cgc__terminate();\n
    v242 = v112;\n
    *(v242) = *(v242) - 2;\n
    v243 = v113;\n
    *(v243) = &*(v243)->padding_1[1];\n
    v73 = v206;\n
    v72 = a0;\n
    *(&v69[0]) = *(v73);\n
    memset(&v68, 0, 21);\n
    if (*(v72) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = 0;\n
    if (v69[0])\n
    {\n
        v23 = 0;\n
        if (v69[1])\n
        {\n
            v23 = 0;\n
            if (v69[2])\n
            {\n
                v23 = 0;\n
                if (v69[3])\n
                {\n
                    v23 = 0;\n
                    if (v69[4] << 24)\n
                    {\n
                        v23 = 0;\n
                        if (v69[5] << 16)\n
                        {\n
                            v23 = 0;\n
                            if (v69[6] << 8)\n
                                v23 = v69[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v70 = v23 & 1;\n
    v71 = 0;\n
    cgc_uint2str(&v68, 21, v70);\n
    v22 = &v68;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v68)) < 0)\n
        cgc__terminate();\n
    v244 = v72;\n
    *(v244) = *(v244) - 8;\n
    v245 = v73;\n
    *(v245) = &(*(v245))[1].padding_1[2];\n
    v141 = v206;\n
    v140 = a0;\n
    memset(&v138, 0, 12);\n
    if (*(v140) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = *(&*(v141)->field_0);\n
    cgc_uint2str(&v138, 12, v139);\n
    v21 = &v138;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v138)) < 0)\n
        cgc__terminate();\n
    v246 = v140;\n
    *(v246) = *(v246) - 4;\n
    v247 = v141;\n
    *(v247) = &*(v247)->field_4;\n
    v157 = v206;\n
    v156 = a0;\n
    memset(&v154, 0, 12);\n
    if (*(v156) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v155 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v40 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-850, size=2, endness=Iend_LE)))));\n
    v39 = v40 | 0xc00;\n
    v47 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v154, 12, v47);\n
    v20 = &v154;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v154)) < 0)\n
        cgc__terminate();\n
    v248 = v156;\n
    *(v248) = *(v248) - 4;\n
    v249 = v157;\n
    *(v249) = &*(v249)->field_4;\n
    v137 = v206;\n
    v136 = a0;\n
    memset(&v134, 0, 12);\n
    if (*(v136) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = *(&*(v137)->field_0);\n
    cgc_uint2str(&v134, 12, v135);\n
    v19 = &v134;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v134)) < 0)\n
        cgc__terminate();\n
    v250 = v136;\n
    *(v250) = *(v250) - 4;\n
    v251 = v137;\n
    *(v251) = &*(v251)->field_4;\n
    v153 = v206;\n
    v152 = a0;\n
    memset(&v150, 0, 12);\n
    if (*(v152) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v151 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v38 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-854, size=2, endness=Iend_LE)))));\n
    v37 = v38 | 0xc00;\n
    v46 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v150, 12, v46);\n
    v18 = &v150;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v150)) < 0)\n
        cgc__terminate();\n
    v252 = v152;\n
    *(v252) = *(v252) - 4;\n
    v253 = v153;\n
    *(v253) = &*(v253)->field_4;\n
    v133 = v206;\n
    v132 = a0;\n
    memset(&v130, 0, 12);\n
    if (*(v132) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(&*(v133)->field_0);\n
    cgc_uint2str(&v130, 12, v131);\n
    v17 = &v130;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v254 = v132;\n
    *(v254) = *(v254) - 4;\n
    v255 = v133;\n
    *(v255) = &*(v255)->field_4;\n
    v67 = v206;\n
    v66 = a0;\n
    *(&v64) = *(v67);\n
    memset(&v63, 0, 6);\n
    if (*(v66) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v64[0] << 8)\n
        v16 = v64[1];\n
    v65 = v16 & 1;\n
    cgc_uint2str(&v63, 6, v65);\n
    v15 = &v63;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v256 = v66;\n
    *(v256) = *(v256) - 2;\n
    v257 = v67;\n
    *(v257) = &*(v257)->padding_1[1];\n
    v149 = v206;\n
    v148 = a0;\n
    memset(&v146, 0, 12);\n
    if (*(v148) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v147 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-858, size=2, endness=Iend_LE)))));\n
    v35 = v36 | 0xc00;\n
    v45 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v146, 12, v45);\n
    v14 = &v146;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v146)) < 0)\n
        cgc__terminate();\n
    v258 = v148;\n
    *(v258) = *(v258) - 4;\n
    v259 = v149;\n
    *(v259) = &*(v259)->field_4;\n
    v62 = v206;\n
    v61 = a0;\n
    *(&v59) = *(v62);\n
    memset(&v58, 0, 6);\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v59[0] << 8)\n
        v13 = v59[1];\n
    v60 = v13 & 1;\n
    cgc_uint2str(&v58, 6, v60);\n
    v12 = &v58;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v260 = v61;\n
    *(v260) = *(v260) - 2;\n
    v261 = v62;\n
    *(v261) = &*(v261)->padding_1[1];\n
    v109 = v206;\n
    v108 = a0;\n
    memset(&v106, 0, 6);\n
    if (*(v108) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v107 = *(&*(v109)->field_0);\n
    cgc_uint2str(&v106, 6, v107);\n
    v11 = &v106;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v106)) < 0)\n
        cgc__terminate();\n
    v262 = v108;\n
    *(v262) = *(v262) - 2;\n
    v263 = v109;\n
    *(v263) = &*(v263)->padding_1[1];\n
    v85 = v206;\n
    v84 = a0;\n
    if (*(v84) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(v85)->field_0;\n
    v264 = v84;\n
    *(v264) = *(v264) - 1;\n
    v265 = v85;\n
    *(v265) = &*(v265)->padding_1;\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_4d17d6;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d17d6:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v266 = v85;\n
    *(v266) = &(&*(v266)->field_0)[v83];\n
    v267 = v84;\n
    *(v267) = *(v267) - v83;\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v129 = v206;\n
    v128 = a0;\n
    memset(&v126, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v127 = *(&*(v129)->field_0);\n
    cgc_uint2str(&v126, 12, v127);\n
    v10 = &v126;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v126)) < 0)\n
        cgc__terminate();\n
    v268 = v128;\n
    *(v268) = *(v268) - 4;\n
    v269 = v129;\n
    *(v269) = &*(v269)->field_4;\n
    v125 = v206;\n
    v124 = a0;\n
    memset(&v122, 0, 12);\n
    if (*(v124) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v123 = *(&*(v125)->field_0);\n
    cgc_uint2str(&v122, 12, v123);\n
    v9 = &v122;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v122)) < 0)\n
        cgc__terminate();\n
    v270 = v124;\n
    *(v270) = *(v270) - 4;\n
    v271 = v125;\n
    *(v271) = &*(v271)->field_4;\n
    v93 = v206;\n
    v92 = a0;\n
    if (*(v92) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v92) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v92);\n
    v91 = v8;\n
    if (!v91)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v90 = cgc_calloc(134);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v90, &v34[18].padding_0[182]);\n
    cgc_strncpy(v90 + 5, *(v93), v91);\n
    v273 = v93;\n
    *(v273) = &(&*(v273)->field_4)[cgc_strlen(v90)];\n
    v275 = v92;\n
    *(v275) = *(v275) - (cgc_strlen(v90) + -4);\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v105 = v206;\n
    v104 = a0;\n
    memset(&v102, 0, 6);\n
    if (*(v104) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v103 = *(&*(v105)->field_0);\n
    cgc_uint2str(&v102, 6, v103);\n
    v7 = &v102;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v276 = v104;\n
    *(v276) = *(v276) - 2;\n
    v277 = v105;\n
    *(v277) = &*(v277)->padding_1[1];\n
    v192 = v206;\n
    v191 = a0;\n
    memset(&v188, 0, 21);\n
    if (*(v191) < 8)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v278 = *(v192);\n
    v190 = v278[1];\n
    v189 = v278[0];\n
    cgc_uint2str(&v188, 21, v189);\n
    v6 = &v188;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v188)) < 0)\n
        cgc__terminate();\n
    v279 = v191;\n
    *(v279) = *(v279) - 8;\n
    v280 = v192;\n
    *(v280) = &(*(v280))[1].padding_1[2];\n
    v200 = v206;\n
    v199 = a0;\n
    if (*(v199) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v198 = *(v200)->field_0;\n
    v281 = v199;\n
    *(v281) = *(v281) - 1;\n
    v282 = v200;\n
    *(v282) = &*(v282)->padding_1;\n
    if (v198 <= *(v199) && !(!v198))\n
        goto LABEL_4d2162;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d2162:\n
    v197 = cgc_calloc(v198);\n
    if (!v197)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v197, *(v200), v198);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v283 = v200;\n
    *(v283) = &(&*(v283)->field_0)[v198];\n
    v284 = v199;\n
    *(v284) = *(v284) - v198;\n
    cgc_checkheap();\n
    cgc_free(v197);\n
    v170 = v206;\n
    v169 = a0;\n
    *(&v167[0]) = *(v170);\n
    memset(&v166, 0, 12);\n
    if (*(v169) < 4)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = 0;\n
    if (v167[0] << 24)\n
    {\n
        v5 = 0;\n
        if (v167[1] << 16)\n
        {\n
            v5 = 0;\n
            if (v167[2] << 8)\n
                v5 = v167[3];\n
        }\n
    }\n
    v168 = v5 & 1;\n
    cgc_uint2str(&v166, 12, v168);\n
    v4 = &v166;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v166)) < 0)\n
        cgc__terminate();\n
    v285 = v169;\n
    *(v285) = *(v285) - 4;\n
    v286 = v170;\n
    *(v286) = &*(v286)->field_4;\n
    v57 = v206;\n
    v56 = a0;\n
    *(&v54[0]) = *(v57);\n
    memset(&v53, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (v54[0] << 8)\n
        v3 = v54[1];\n
    v55 = v3 & 1;\n
    cgc_uint2str(&v53, 6, v55);\n
    v2 = &v53;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v287 = v56;\n
    *(v287) = *(v287) - 2;\n
    v288 = v57;\n
    *(v288) = &*(v288)->padding_1[1];\n
    v101 = v206;\n
    v100 = a0;\n
    memset(&v98, 0, 6);\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(&*(v101)->field_0);\n
    cgc_uint2str(&v98, 6, v99);\n
    v1 = &v98;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v289 = v100;\n
    *(v289) = *(v289) - 2;\n
    v290 = v101;\n
    *(v290) = &*(v290)->padding_1[1];\n
    v196 = v206;\n
    v195 = a0;\n
    if (*(v195) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v194 = *(v196)->field_0;\n
    v291 = v195;\n
    *(v291) = *(v291) - 1;\n
    v292 = v196;\n
    *(v292) = &*(v292)->padding_1;\n
    if (v194 <= *(v195) && !(!v194))\n
        goto LABEL_4d27e9;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d27e9:\n
    v193 = cgc_calloc(v194);\n
    if (!v193)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v193, *(v196), v194);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v293 = v196;\n
    *(v293) = &(&*(v293)->field_0)[v194];\n
    v294 = v195;\n
    *(v294) = *(v294) - v194;\n
    cgc_checkheap();\n
    cgc_free(v193);\n
    v81 = v206;\n
    v80 = a0;\n
    if (*(v80) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(v81)->field_0;\n
    v295 = v80;\n
    *(v295) = *(v295) - 1;\n
    v296 = v81;\n
    *(v296) = &*(v296)->padding_1;\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_4d2a00;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d2a00:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v297 = v81;\n
    *(v297) = &(&*(v297)->field_0)[v79];\n
    v298 = v80;\n
    *(v298) = *(v298) - v79;\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v77 = v206;\n
    v76 = a0;\n
    if (*(v76) < 1)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(v77)->field_0;\n
    v299 = v76;\n
    *(v299) = *(v299) - 1;\n
    v300 = v77;\n
    *(v300) = &*(v300)->padding_1;\n
    if (v75 <= *(v76) && !(!v75))\n
        goto LABEL_4d2c38;\n
    if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d2c38:\n
    v74 = cgc_calloc(v75);\n
    if (!v74)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v74, *(v77), v75);\n
    if (cgc_sendline(1, &v34[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v301 = v77;\n
    *(v301) = &(&*(v301)->field_0)[v75];\n
    v302 = v76;\n
    *(v302) = *(v302) - v75;\n
    cgc_checkheap();\n
    cgc_free(v74);\n
    v179 = v206;\n
    v178 = a0;\n
    if (*(v178) <= 0)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v178) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v178);\n
    v177 = v0;\n
    if (!v177)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v176 = cgc_calloc(134);\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, &v34[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v176, &v34[18].padding_0[182]);\n
    cgc_strncpy(v176 + 5, *(v179), v177);\n
    v304 = v179;\n
    *(v304) = &(&*(v304)->field_4)[cgc_strlen(v176)];\n
    v306 = v178;\n
    *(v306) = *(v306) - (cgc_strlen(v176) + -4);\n
    cgc_checkheap();\n
    cgc_free(v176);\n
    if (cgc_sendline(1, &v34[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v51 ^= v34->field_260;\n
    if (v51)\n
        cgc___stack_cookie_fail();\n
    v307 = a0;\n
    if (*(v307) > 0 && v50 >= 0 && v50 < 0)\n
        v307 = *((&v52 + 0x4 * v50))(v206);\n
    v308 = v205;\n
    return v307;\n
}\n
", "5058654:sub_4d305e": null, "5058656:cgc_process_llamalutecia": "typedef struct struct_1 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamalutecia(struct struct_0 **v21, unsigned int *a0)\n
{\n
    struct_3 *v0;  // [bp-0x60]\n
    struct_1 *v1;  // [bp-0x5c]\n
    unsigned short v2;  // [bp-0x58]\n
    unsigned short v3;  // [bp-0x56]\n
    unsigned long v4;  // [bp-0x54]\n
    struct struct_2 **v5;  // [bp-0x4c]\n
    unsigned int v6;  // [bp-0x48]\n
    char v7;  // [bp-0x44]\n
    unsigned int v8;  // [bp-0x40]\n
    char v9;  // [bp-0x39]\n
    unsigned int *v10;  // [bp-0x38]\n
    struct struct_0 **v11;  // [bp-0x34]\n
    char v12;  // [bp-0x30]\n
    unsigned int v13;  // [bp-0x24]\n
    unsigned int *v14;  // [bp-0x20]\n
    struct struct_0 **v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    unsigned short v17;  // [bp-0x12]\n
    unsigned int *v18;  // [bp-0x10]\n
    struct struct_0 **v19;  // [bp-0xc]\n
    unsigned int v20;  // [bp-0x8]\n
    unsigned int v22;  // ebx\n
    unsigned int *v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    unsigned int *v25;  // eax\n
    struct struct_0 **v26;  // eax\n
    unsigned int *v27;  // eax\n
    struct struct_0 **v28;  // eax\n
    unsigned int *v29;  // eax\n
    struct struct_0 **v30;  // eax\n
    struct struct_0 **v31;  // eax\n
    unsigned int *v32;  // eax\n
    unsigned int *v33;  // eax, Other Possible Types: unsigned int\n
    unsigned int v34;  // ebx\n
\n
    v20 = v22;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = cgc__cookie;\n
    v5 = -1;\n
    if (cgc_sendline(1, \"===llamalutecia===\", 18) < 0)\n
        cgc__terminate();\n
    v15 = v21;\n
    v14 = a0;\n
    memset(&v12, 0, 12);\n
    if (*(v14) < 4)\n
    {\n
        if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v13 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v3 = [D] x86g_create_fpucw(fpround<4>);\n
    v2 = v3 | 0xc00;\n
    v4 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v12, 12, v4);\n
    v0 = &v12;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v12)) < 0)\n
        cgc__terminate();\n
    v23 = v14;\n
    *(v23) = *(v23) - 4;\n
    v24 = v15;\n
    *(v24) = *(v24) + 4;\n
    v19 = v21;\n
    v18 = a0;\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = *(&*(v19));\n
    v25 = v18;\n
    *(v25) = *(v25) - 2;\n
    v26 = v19;\n
    *(v26) = *(v26) + 2;\n
    if (v17 <= *(v18) && !(!v17))\n
        goto LABEL_4d32cb;\n
    if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d32cb:\n
    v16 = cgc_calloc(v17);\n
    if (!v16)\n
    {\n
        if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v16, *(v19), v17);\n
    if (cgc_sendline(1, &v1[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v27 = v18;\n
    *(v27) = *(v27) - v17;\n
    v28 = v19;\n
    *(v28) = &(*(v28))[v17];\n
    cgc_checkheap();\n
    cgc_free(v16);\n
    v11 = v21;\n
    v10 = a0;\n
    if (*(v10) < 1)\n
    {\n
        if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = *(v11)->field_0;\n
    v29 = v10;\n
    *(v29) = *(v29) - 1;\n
    v30 = v11;\n
    *(v30) = *(v30) + 1;\n
    if (v9 <= *(v10) && !(!v9))\n
        goto LABEL_4d3497;\n
    if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d3497:\n
    v8 = cgc_calloc(v9);\n
    if (!v8)\n
    {\n
        if (cgc_sendline(1, &v1[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v8, *(v11), v9);\n
    if (cgc_sendline(1, &v1[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v31 = v11;\n
    *(v31) = &(*(v31))[v9];\n
    v32 = v10;\n
    *(v32) = *(v32) - v9;\n
    cgc_checkheap();\n
    cgc_free(v8);\n
    v6 ^= v1->field_260;\n
    if (v6)\n
        cgc___stack_cookie_fail();\n
    v33 = a0;\n
    if (*(v33) > 0 && v5 >= 0 && v5 < 0)\n
        v33 = *((&v7 + 0x4 * v5))(v21);\n
    v34 = v20;\n
    return v33;\n
}\n
", "5060066:sub_4d35e2": null, "5060080:cgc_process_llamaposit": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaposit(struct struct_0 **v185, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x3c4]\n
    struct_1 *v1;  // [bp-0x3c0]\n
    struct_1 *v2;  // [bp-0x3bc]\n
    struct_1 *v3;  // [bp-0x3b8]\n
    char v4;  // [bp-0x3b1]\n
    struct_1 *v5;  // [bp-0x3b0]\n
    char v6;  // [bp-0x3a9]\n
    struct_1 *v7;  // [bp-0x3a8]\n
    unsigned int v8;  // [bp-0x3a4]\n
    struct_1 *v9;  // [bp-0x3a0]\n
    unsigned int v10;  // [bp-0x39c]\n
    struct_1 *v11;  // [bp-0x398]\n
    struct_1 *v12;  // [bp-0x394]\n
    unsigned int v13;  // [bp-0x390]\n
    struct_1 *v14;  // [bp-0x38c]\n
    struct_1 *v15;  // [bp-0x388]\n
    char v16;  // [bp-0x381]\n
    struct_1 *v17;  // [bp-0x380]\n
    char v18;  // [bp-0x379]\n
    struct_1 *v19;  // [bp-0x378]\n
    struct_1 *v20;  // [bp-0x374]\n
    struct_1 *v21;  // [bp-0x370]\n
    struct_1 *v22;  // [bp-0x36c]\n
    struct_1 *v23;  // [bp-0x368]\n
    char v24;  // [bp-0x361]\n
    struct_1 *v25;  // [bp-0x360]\n
    struct_1 *v26;  // [bp-0x35c]\n
    struct_1 *v27;  // [bp-0x358]\n
    struct_1 *v28;  // [bp-0x354]\n
    struct_1 *v29;  // [bp-0x350]\n
    char v30;  // [bp-0x349]\n
    struct_2 *v31;  // [bp-0x348]\n
    unsigned short v32;  // [bp-0x344]\n
    unsigned short v33;  // [bp-0x342]\n
    unsigned short v34;  // [bp-0x340]\n
    unsigned short v35;  // [bp-0x33e]\n
    unsigned long v36;  // [bp-0x33c]\n
    unsigned long v37;  // [bp-0x334]\n
    struct struct_3 **v38;  // [bp-0x32c]\n
    unsigned int v39;  // [bp-0x328]\n
    char v40;  // [bp-0x324]\n
    char v41;  // [bp-0x322]\n
    struct_0 *v42;  // [bp-0x31c]\n
    unsigned short v43;  // [bp-0x316]\n
    unsigned int *v44;  // [bp-0x314]\n
    struct struct_0 **v45;  // [bp-0x310]\n
    char v46;  // [bp-0x30a]\n
    char v47[2];  // [bp-0x304]\n
    unsigned short v48;  // [bp-0x2fe]\n
    unsigned int *v49;  // [bp-0x2fc]\n
    struct struct_0 **v50;  // [bp-0x2f8]\n
    unsigned int v51;  // [bp-0x2f4]\n
    char v52;  // [bp-0x2ed]\n
    unsigned int *v53;  // [bp-0x2ec]\n
    struct struct_0 **v54;  // [bp-0x2e8]\n
    unsigned int v55;  // [bp-0x2e4]\n
    char v56;  // [bp-0x2dd]\n
    unsigned int *v57;  // [bp-0x2dc]\n
    struct struct_0 **v58;  // [bp-0x2d8]\n
    char *v59;  // [bp-0x2d4]\n
    unsigned int v60;  // [bp-0x2d0]\n
    unsigned int *v61;  // [bp-0x2cc]\n
    struct struct_0 **v62;  // [bp-0x2c8]\n
    char v63;  // [bp-0x2c4]\n
    unsigned short v64;  // [bp-0x2be]\n
    unsigned int *v65;  // [bp-0x2bc]\n
    struct struct_0 **v66;  // [bp-0x2b8]\n
    char v67;  // [bp-0x2b4]\n
    unsigned short v68;  // [bp-0x2ae]\n
    unsigned int *v69;  // [bp-0x2ac]\n
    struct struct_0 **v70;  // [bp-0x2a8]\n
    char v71;  // [bp-0x2a1]\n
    char v72;  // [bp-0x29d]\n
    unsigned int *v73;  // [bp-0x29c]\n
    struct struct_0 **v74;  // [bp-0x298]\n
    char v75;  // [bp-0x291]\n
    char v76;  // [bp-0x28d]\n
    unsigned int *v77;  // [bp-0x28c]\n
    struct struct_0 **v78;  // [bp-0x288]\n
    char v79;  // [bp-0x281]\n
    unsigned long v80;  // [bp-0x26c]\n
    unsigned int *v81;  // [bp-0x264]\n
    struct struct_0 **v82;  // [bp-0x260]\n
    char v83;  // [bp-0x259]\n
    unsigned long v84;  // [bp-0x244]\n
    unsigned int *v85;  // [bp-0x23c]\n
    struct struct_0 **v86;  // [bp-0x238]\n
    char v87;  // [bp-0x234]\n
    unsigned int v88;  // [bp-0x228]\n
    unsigned int *v89;  // [bp-0x224]\n
    struct struct_0 **v90;  // [bp-0x220]\n
    char v91;  // [bp-0x21c]\n
    unsigned int v92;  // [bp-0x210]\n
    unsigned int *v93;  // [bp-0x20c]\n
    struct struct_0 **v94;  // [bp-0x208]\n
    char v95;  // [bp-0x204]\n
    unsigned int v96;  // [bp-0x1f8]\n
    unsigned int *v97;  // [bp-0x1f4]\n
    struct struct_0 **v98;  // [bp-0x1f0]\n
    char v99;  // [bp-0x1ec]\n
    unsigned int v100;  // [bp-0x1e0]\n
    unsigned int *v101;  // [bp-0x1dc]\n
    struct struct_0 **v102;  // [bp-0x1d8]\n
    unsigned int v103;  // [bp-0x1d4]\n
    unsigned short v104;  // [bp-0x1ce]\n
    unsigned int *v105;  // [bp-0x1cc]\n
    struct struct_0 **v106;  // [bp-0x1c8]\n
    unsigned int v107;  // [bp-0x1c4]\n
    unsigned short v108;  // [bp-0x1be]\n
    unsigned int *v109;  // [bp-0x1bc]\n
    struct struct_0 **v110;  // [bp-0x1b8]\n
    unsigned int v111;  // [bp-0x1b4]\n
    unsigned short v112;  // [bp-0x1ae]\n
    unsigned int *v113;  // [bp-0x1ac]\n
    struct struct_0 **v114;  // [bp-0x1a8]\n
    char v115;  // [bp-0x1a4]\n
    char *v116;  // [bp-0x198]\n
    unsigned int v117;  // [bp-0x194]\n
    unsigned int *v118;  // [bp-0x190]\n
    struct struct_0 **v119;  // [bp-0x18c]\n
    char v120;  // [bp-0x188]\n
    char v121[4];  // [bp-0x17c]\n
    unsigned int v122;  // [bp-0x178]\n
    unsigned int *v123;  // [bp-0x174]\n
    struct struct_0 **v124;  // [bp-0x170]\n
    char v125;  // [bp-0x16c]\n
    char v126[4];  // [bp-0x160]\n
    unsigned int v127;  // [bp-0x15c]\n
    unsigned int *v128;  // [bp-0x158]\n
    struct struct_0 **v129;  // [bp-0x154]\n
    char v130;  // [bp-0x150]\n
    char v131[4];  // [bp-0x144]\n
    unsigned int v132;  // [bp-0x140]\n
    unsigned int *v133;  // [bp-0x13c]\n
    struct struct_0 **v134;  // [bp-0x138]\n
    char *v135;  // [bp-0x134]\n
    unsigned int v136;  // [bp-0x130]\n
    unsigned int *v137;  // [bp-0x12c]\n
    struct struct_0 **v138;  // [bp-0x128]\n
    char *v139;  // [bp-0x124]\n
    unsigned int v140;  // [bp-0x120]\n
    unsigned int *v141;  // [bp-0x11c]\n
    struct struct_0 **v142;  // [bp-0x118]\n
    char *v143;  // [bp-0x114]\n
    unsigned int v144;  // [bp-0x110]\n
    unsigned int *v145;  // [bp-0x10c]\n
    struct struct_0 **v146;  // [bp-0x108]\n
    char v147;  // [bp-0x101]\n
    unsigned int v148;  // [bp-0xec]\n
    unsigned int v149;  // [bp-0xe8]\n
    unsigned int *v150;  // [bp-0xe4]\n
    struct struct_0 **v151;  // [bp-0xe0]\n
    char v152;  // [bp-0xd9]\n
    unsigned int v153;  // [bp-0xc4]\n
    unsigned int v154;  // [bp-0xc0]\n
    unsigned int *v155;  // [bp-0xbc]\n
    struct struct_0 **v156;  // [bp-0xb8]\n
    char v157;  // [bp-0xb1]\n
    unsigned int v158;  // [bp-0x9c]\n
    unsigned int v159;  // [bp-0x98]\n
    unsigned int *v160;  // [bp-0x94]\n
    struct struct_0 **v161;  // [bp-0x90]\n
    char v162;  // [bp-0x89]\n
    unsigned int v163;  // [bp-0x74]\n
    unsigned int v164;  // [bp-0x70]\n
    unsigned int *v165;  // [bp-0x6c]\n
    struct struct_0 **v166;  // [bp-0x68]\n
    char v167;  // [bp-0x61]\n
    unsigned int v168;  // [bp-0x4c]\n
    unsigned int v169;  // [bp-0x48]\n
    unsigned int *v170;  // [bp-0x40]\n
    struct struct_0 **v171;  // [bp-0x3c]\n
    unsigned int v172;  // [bp-0x38]\n
    char v173;  // [bp-0x31]\n
    unsigned int *v174;  // [bp-0x30]\n
    struct struct_0 **v175;  // [bp-0x2c]\n
    unsigned int v176;  // [bp-0x28]\n
    char v177;  // [bp-0x21]\n
    unsigned int *v178;  // [bp-0x20]\n
    struct struct_0 **v179;  // [bp-0x1c]\n
    unsigned int v180;  // [bp-0x18]\n
    char v181;  // [bp-0x11]\n
    unsigned int *v182;  // [bp-0x10]\n
    struct struct_0 **v183;  // [bp-0xc]\n
    unsigned int v184;  // [bp-0x8]\n
    unsigned int v186;  // ebx\n
    unsigned int *v187;  // eax\n
    struct struct_0 **v188;  // eax\n
    unsigned int *v189;  // eax\n
    struct struct_0 **v190;  // eax\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    struct struct_0 **v195;  // eax\n
    unsigned int *v196;  // eax\n
    unsigned int *v197;  // eax\n
    struct struct_0 **v198;  // eax\n
    unsigned int v199[2];  // ecx\n
    unsigned int *v200;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    struct struct_0 **v204;  // eax\n
    unsigned int *v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_0 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_0 **v213;  // eax\n
    struct_0 *v214;  // ecx\n
    unsigned int *v215;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    unsigned int *v223;  // eax\n
    struct struct_0 **v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v228;  // eax\n
    unsigned int *v230;  // eax\n
    unsigned int v231[2];  // ecx\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_0 **v237;  // eax\n
    unsigned int v238[2];  // ecx\n
    unsigned int *v239;  // eax\n
    struct struct_0 **v240;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    struct struct_0 **v253;  // eax\n
    unsigned int *v254;  // eax\n
    struct_0 *v255;  // ecx\n
    unsigned int *v256;  // eax\n
    struct struct_0 **v257;  // eax\n
    unsigned int *v258;  // eax\n
    struct struct_0 **v259;  // eax\n
    unsigned int *v260;  // eax\n
    struct struct_0 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    struct struct_0 **v263;  // eax\n
    unsigned int *v264;  // eax\n
    struct struct_0 **v265;  // eax\n
    unsigned int *v266;  // eax\n
    struct struct_0 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    struct struct_0 **v270;  // eax\n
    unsigned int *v271;  // eax\n
    unsigned int *v272;  // eax\n
    struct struct_0 **v273;  // eax\n
    unsigned int *v274;  // eax\n
    struct struct_0 **v275;  // eax\n
    unsigned int *v276;  // eax\n
    struct struct_0 **v277;  // eax\n
    struct struct_0 **v279;  // eax\n
    unsigned int *v281;  // eax\n
    unsigned int *v282;  // eax, Other Possible Types: unsigned int\n
    unsigned int v283;  // ebx\n
\n
    v184 = v186;\n
    v31 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v39 = cgc__cookie;\n
    v38 = -1;\n
    if (cgc_sendline(1, \"===llamaposit===\", 16) < 0)\n
        cgc__terminate();\n
    v50 = v185;\n
    v49 = a0;\n
    *(&v47) = *(v50);\n
    memset(&v46, 0, 6);\n
    if (*(v49) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v30 = 0;\n
    if (v47[0] << 8)\n
        v30 = v47[1];\n
    v48 = v30 & 1;\n
    cgc_uint2str(&v46, 6, v48);\n
    v29 = &v46;\n
    if (cgc_sendline(1, v29, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v187 = v49;\n
    *(v187) = *(v187) - 2;\n
    v188 = v50;\n
    *(v188) = &*(v188)->padding_1[1];\n
    v70 = v185;\n
    v69 = a0;\n
    memset(&v67, 0, 6);\n
    if (*(v69) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(&*(v70)->field_0);\n
    cgc_uint2str(&v67, 6, v68);\n
    v28 = &v67;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v189 = v69;\n
    *(v189) = *(v189) - 2;\n
    v190 = v70;\n
    *(v190) = &*(v190)->padding_1[1];\n
    v102 = v185;\n
    v101 = a0;\n
    memset(&v99, 0, 12);\n
    if (*(v101) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(&*(v102)->field_0);\n
    cgc_uint2str(&v99, 12, v100);\n
    v27 = &v99;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v191 = v101;\n
    *(v191) = *(v191) - 4;\n
    v192 = v102;\n
    *(v192) = &*(v192)->field_4;\n
    v58 = v185;\n
    v57 = a0;\n
    if (*(v57) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(v58)->field_0;\n
    v193 = v57;\n
    *(v193) = *(v193) - 1;\n
    v194 = v58;\n
    *(v194) = &*(v194)->padding_1;\n
    if (v56 <= *(v57) && !(!v56))\n
        goto LABEL_4d3b8b;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d3b8b:\n
    v55 = cgc_calloc(v56);\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v55, *(v58), v56);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v195 = v58;\n
    *(v195) = &(&*(v195)->field_0)[v56];\n
    v196 = v57;\n
    *(v196) = *(v196) - v56;\n
    cgc_checkheap();\n
    cgc_free(v55);\n
    v66 = v185;\n
    v65 = a0;\n
    memset(&v63, 0, 6);\n
    if (*(v65) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    cgc_uint2str(&v63, 6, v64);\n
    v26 = &v63;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v197 = v65;\n
    *(v197) = *(v197) - 2;\n
    v198 = v66;\n
    *(v198) = &*(v198)->padding_1[1];\n
    v171 = v185;\n
    v170 = a0;\n
    memset(&v167, 0, 21);\n
    if (*(v170) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v199 = *(v171);\n
    v169 = v199[1];\n
    v168 = v199[0];\n
    cgc_uint2str(&v167, 21, v168);\n
    v25 = &v167;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v167)) < 0)\n
        cgc__terminate();\n
    v200 = v170;\n
    *(v200) = *(v200) - 8;\n
    v201 = v171;\n
    *(v201) = *(v201) + 1;\n
    v183 = v185;\n
    v182 = a0;\n
    if (*(v182) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v181 = *(v183)->field_0;\n
    v202 = v182;\n
    *(v202) = *(v202) - 1;\n
    v203 = v183;\n
    *(v203) = &*(v203)->padding_1;\n
    if (v181 <= *(v182) && !(!v181))\n
        goto LABEL_4d4010;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d4010:\n
    v180 = cgc_calloc(v181);\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v180, *(v183), v181);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v204 = v183;\n
    *(v204) = &(&*(v204)->field_0)[v181];\n
    v205 = v182;\n
    *(v205) = *(v205) - v181;\n
    cgc_checkheap();\n
    cgc_free(v180);\n
    v134 = v185;\n
    v133 = a0;\n
    *(&v131[0]) = *(v134);\n
    memset(&v130, 0, 12);\n
    if (*(v133) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = 0;\n
    if (v131[0] << 24)\n
    {\n
        v24 = 0;\n
        if (v131[1] << 16)\n
        {\n
            v24 = 0;\n
            if (v131[2] << 8)\n
                v24 = v131[3];\n
        }\n
    }\n
    v132 = v24 & 1;\n
    cgc_uint2str(&v130, 12, v132);\n
    v23 = &v130;\n
    if (cgc_sendline(1, v23, cgc_strlen(&v130)) < 0)\n
        cgc__terminate();\n
    v206 = v133;\n
    *(v206) = *(v206) - 4;\n
    v207 = v134;\n
    *(v207) = &*(v207)->field_4;\n
    v98 = v185;\n
    v97 = a0;\n
    memset(&v95, 0, 12);\n
    if (*(v97) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(&*(v98)->field_0);\n
    cgc_uint2str(&v95, 12, v96);\n
    v22 = &v95;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v208 = v97;\n
    *(v208) = *(v208) - 4;\n
    v209 = v98;\n
    *(v209) = &*(v209)->field_4;\n
    v86 = v185;\n
    v85 = a0;\n
    memset(&v83, 0, 21);\n
    if (*(v85) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v84 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v35 = [D] x86g_create_fpucw(fpround<4>);\n
    v34 = v35 | 0xc00;\n
    v37 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v83, 21, v37);\n
    v21 = &v83;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v210 = v85;\n
    *(v210) = *(v210) - 8;\n
    v211 = v86;\n
    *(v211) = *(v211) + 1;\n
    v78 = v185;\n
    v77 = a0;\n
    memset(&v75, 0, 4);\n
    if (*(v77) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(v78)->field_0;\n
    cgc_uint2str(&v75, 4, v76);\n
    v20 = &v75;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v75)) < 0)\n
        cgc__terminate();\n
    v212 = v77;\n
    *(v212) = *(v212) - 1;\n
    v213 = v78;\n
    *(v213) = &*(v213)->padding_1;\n
    v166 = v185;\n
    v165 = a0;\n
    memset(&v162, 0, 21);\n
    if (*(v165) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v214 = *(v166);\n
    v164 = v214->field_4;\n
    v163 = *(&v214->field_0);\n
    cgc_uint2str(&v162, 21, v163);\n
    v19 = &v162;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v162)) < 0)\n
        cgc__terminate();\n
    v215 = v165;\n
    *(v215) = *(v215) - 8;\n
    v216 = v166;\n
    *(v216) = *(v216) + 1;\n
    v129 = v185;\n
    v128 = a0;\n
    *(&v126[0]) = *(v129);\n
    memset(&v125, 0, 12);\n
    if (*(v128) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v126[0] << 24)\n
    {\n
        v18 = 0;\n
        if (v126[1] << 16)\n
        {\n
            v18 = 0;\n
            if (v126[2] << 8)\n
                v18 = v126[3];\n
        }\n
    }\n
    v127 = v18 & 1;\n
    cgc_uint2str(&v125, 12, v127);\n
    v17 = &v125;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v125)) < 0)\n
        cgc__terminate();\n
    v217 = v128;\n
    *(v217) = *(v217) - 4;\n
    v218 = v129;\n
    *(v218) = &*(v218)->field_4;\n
    v124 = v185;\n
    v123 = a0;\n
    *(&v121[0]) = *(v124);\n
    memset(&v120, 0, 12);\n
    if (*(v123) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v121[0] << 24)\n
    {\n
        v16 = 0;\n
        if (v121[1] << 16)\n
        {\n
            v16 = 0;\n
            if (v121[2] << 8)\n
                v16 = v121[3];\n
        }\n
    }\n
    v122 = v16 & 1;\n
    cgc_uint2str(&v120, 12, v122);\n
    v15 = &v120;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v120)) < 0)\n
        cgc__terminate();\n
    v219 = v123;\n
    *(v219) = *(v219) - 4;\n
    v220 = v124;\n
    *(v220) = &*(v220)->field_4;\n
    v94 = v185;\n
    v93 = a0;\n
    memset(&v91, 0, 12);\n
    if (*(v93) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 12, v92);\n
    v14 = &v91;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v221 = v93;\n
    *(v221) = *(v221) - 4;\n
    v222 = v94;\n
    *(v222) = &*(v222)->field_4;\n
    v179 = v185;\n
    v178 = a0;\n
    if (*(v178) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v177 = *(v179)->field_0;\n
    v223 = v178;\n
    *(v223) = *(v223) - 1;\n
    v224 = v179;\n
    *(v224) = &*(v224)->padding_1;\n
    if (v177 <= *(v178) && !(!v177))\n
        goto LABEL_4d4dbb;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d4dbb:\n
    v176 = cgc_calloc(v177);\n
    if (!v176)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v176, *(v179), v177);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v225 = v179;\n
    *(v225) = &(&*(v225)->field_0)[v177];\n
    v226 = v178;\n
    *(v226) = *(v226) - v177;\n
    cgc_checkheap();\n
    cgc_free(v176);\n
    v146 = v185;\n
    v145 = a0;\n
    if (*(v145) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v145) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v145);\n
    v144 = v13;\n
    if (!v144)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v143 = cgc_calloc(134);\n
    if (!v143)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v143, &v31[18].padding_0[182]);\n
    cgc_strncpy(v143 + 5, *(v146), v144);\n
    v228 = v146;\n
    *(v228) = -4 + cgc_strlen(v143) + *(v228);\n
    v230 = v145;\n
    *(v230) = *(v230) - (cgc_strlen(v143) + -4);\n
    cgc_checkheap();\n
    cgc_free(v143);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v161 = v185;\n
    v160 = a0;\n
    memset(&v157, 0, 21);\n
    if (*(v160) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v231 = *(v161);\n
    v159 = v231[1];\n
    v158 = v231[0];\n
    cgc_uint2str(&v157, 21, v158);\n
    v12 = &v157;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v157)) < 0)\n
        cgc__terminate();\n
    v232 = v160;\n
    *(v232) = *(v232) - 8;\n
    v233 = v161;\n
    *(v233) = *(v233) + 1;\n
    v110 = v185;\n
    v109 = a0;\n
    if (*(v109) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(&*(v110)->field_0);\n
    v234 = v109;\n
    *(v234) = *(v234) - 2;\n
    v235 = v110;\n
    *(v235) = &*(v235)->padding_1[1];\n
    if (v108 <= *(v109) && !(!v108))\n
        goto LABEL_4d53a1;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d53a1:\n
    v107 = cgc_calloc(v108);\n
    if (!v107)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v107, *(v110), v108);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v236 = v109;\n
    *(v236) = *(v236) - v108;\n
    v237 = v110;\n
    *(v237) = &(&*(v237)->field_0)[v108];\n
    cgc_checkheap();\n
    cgc_free(v107);\n
    v156 = v185;\n
    v155 = a0;\n
    memset(&v152, 0, 21);\n
    if (*(v155) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v238 = *(v156);\n
    v154 = v238[1];\n
    v153 = v238[0];\n
    cgc_uint2str(&v152, 21, v153);\n
    v11 = &v152;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v152)) < 0)\n
        cgc__terminate();\n
    v239 = v155;\n
    *(v239) = *(v239) - 8;\n
    v240 = v156;\n
    *(v240) = *(v240) + 1;\n
    v142 = v185;\n
    v141 = a0;\n
    if (*(v141) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v141) >= 128)\n
        v10 = 128;\n
    else\n
        v10 = *(v141);\n
    v140 = v10;\n
    if (!v140)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v139 = cgc_calloc(134);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v139, &v31[18].padding_0[182]);\n
    cgc_strncpy(v139 + 5, *(v142), v140);\n
    v242 = v142;\n
    *(v242) = -4 + cgc_strlen(v139) + *(v242);\n
    v244 = v141;\n
    *(v244) = *(v244) - (cgc_strlen(v139) + -4);\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v82 = v185;\n
    v81 = a0;\n
    memset(&v79, 0, 21);\n
    if (*(v81) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v80 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v33 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-830, size=2, endness=Iend_LE)))));\n
    v32 = v33 | 0xc00;\n
    v36 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v79, 21, v36);\n
    v9 = &v79;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v79)) < 0)\n
        cgc__terminate();\n
    v245 = v81;\n
    *(v245) = *(v245) - 8;\n
    v246 = v82;\n
    *(v246) = *(v246) + 1;\n
    v62 = v185;\n
    v61 = a0;\n
    if (*(v61) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v61) >= 128)\n
        v8 = 128;\n
    else\n
        v8 = *(v61);\n
    v60 = v8;\n
    if (!v60)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = cgc_calloc(134);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v59, &v31[18].padding_0[182]);\n
    cgc_strncpy(v59 + 5, *(v62), v60);\n
    v248 = v62;\n
    *(v248) = -4 + cgc_strlen(v59) + *(v248);\n
    v250 = v61;\n
    *(v250) = *(v250) - (cgc_strlen(v59) + -4);\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v175 = v185;\n
    v174 = a0;\n
    if (*(v174) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v173 = *(v175)->field_0;\n
    v251 = v174;\n
    *(v251) = *(v251) - 1;\n
    v252 = v175;\n
    *(v252) = &*(v252)->padding_1;\n
    if (v173 <= *(v174) && !(!v173))\n
        goto LABEL_4d5d7d;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d5d7d:\n
    v172 = cgc_calloc(v173);\n
    if (!v172)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v172, *(v175), v173);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v253 = v175;\n
    *(v253) = &(&*(v253)->field_0)[v173];\n
    v254 = v174;\n
    *(v254) = *(v254) - v173;\n
    cgc_checkheap();\n
    cgc_free(v172);\n
    v151 = v185;\n
    v150 = a0;\n
    memset(&v147, 0, 21);\n
    if (*(v150) < 8)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v255 = *(v151);\n
    v149 = v255->field_4;\n
    v148 = *(&v255->field_0);\n
    cgc_uint2str(&v147, 21, v148);\n
    v7 = &v147;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v147)) < 0)\n
        cgc__terminate();\n
    v256 = v150;\n
    *(v256) = *(v256) - 8;\n
    v257 = v151;\n
    *(v257) = *(v257) + 1;\n
    v106 = v185;\n
    v105 = a0;\n
    if (*(v105) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(&*(v106)->field_0);\n
    v258 = v105;\n
    *(v258) = *(v258) - 2;\n
    v259 = v106;\n
    *(v259) = &*(v259)->padding_1[1];\n
    if (v104 <= *(v105) && !(!v104))\n
        goto LABEL_4d60e2;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d60e2:\n
    v103 = cgc_calloc(v104);\n
    if (!v103)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v103, *(v106), v104);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v260 = v105;\n
    *(v260) = *(v260) - v104;\n
    v261 = v106;\n
    *(v261) = &(&*(v261)->field_0)[v104];\n
    cgc_checkheap();\n
    cgc_free(v103);\n
    v114 = v185;\n
    v113 = a0;\n
    if (*(v113) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(&*(v114)->field_0);\n
    v262 = v113;\n
    *(v262) = *(v262) - 2;\n
    v263 = v114;\n
    *(v263) = &*(v263)->padding_1[1];\n
    if (v112 <= *(v113) && !(!v112))\n
        goto LABEL_4d631c;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d631c:\n
    v111 = cgc_calloc(v112);\n
    if (!v111)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v111, *(v114), v112);\n
    if (cgc_sendline(1, &v31[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v264 = v113;\n
    *(v264) = *(v264) - v112;\n
    v265 = v114;\n
    *(v265) = &(&*(v265)->field_0)[v112];\n
    cgc_checkheap();\n
    cgc_free(v111);\n
    v45 = v185;\n
    v44 = a0;\n
    v42 = *(v45);\n
    memset(&v41, 0, 6);\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v42->field_0 << 8)\n
        v6 = v42->padding_1[0];\n
    v43 = v6 & 1;\n
    cgc_uint2str(&v41, 6, v43);\n
    v5 = &v41;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v41)) < 0)\n
        cgc__terminate();\n
    v266 = v44;\n
    *(v266) = *(v266) - 2;\n
    v267 = v45;\n
    *(v267) = &*(v267)->padding_1[1];\n
    v54 = v185;\n
    v53 = a0;\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = *(v54)->field_0;\n
    v268 = v53;\n
    *(v268) = *(v268) - 1;\n
    v269 = v54;\n
    *(v269) = &*(v269)->padding_1;\n
    if (v52 <= *(v53) && !(!v52))\n
        goto LABEL_4d66db;\n
    if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d66db:\n
    v51 = cgc_calloc(v52);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v51, *(v54), v52);\n
    if (cgc_sendline(1, &v31[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v270 = v54;\n
    *(v270) = &(&*(v270)->field_0)[v52];\n
    v271 = v53;\n
    *(v271) = *(v271) - v52;\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    v119 = v185;\n
    v118 = a0;\n
    v116 = &*(v119)->field_0;\n
    memset(&v115, 0, 12);\n
    if (*(v118) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (*(v116) << 24)\n
    {\n
        v4 = 0;\n
        if (v116[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v116[2] << 8)\n
                v4 = v116[3];\n
        }\n
    }\n
    v117 = v4 & 1;\n
    cgc_uint2str(&v115, 12, v117);\n
    v3 = &v115;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v272 = v118;\n
    *(v272) = *(v272) - 4;\n
    v273 = v119;\n
    *(v273) = &*(v273)->field_4;\n
    v90 = v185;\n
    v89 = a0;\n
    memset(&v87, 0, 12);\n
    if (*(v89) < 4)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 12, v88);\n
    v2 = &v87;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v274 = v89;\n
    *(v274) = *(v274) - 4;\n
    v275 = v90;\n
    *(v275) = &*(v275)->field_4;\n
    v74 = v185;\n
    v73 = a0;\n
    memset(&v71, 0, 4);\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(v74)->field_0;\n
    cgc_uint2str(&v71, 4, v72);\n
    v1 = &v71;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v276 = v73;\n
    *(v276) = *(v276) - 1;\n
    v277 = v74;\n
    *(v277) = &*(v277)->padding_1;\n
    v138 = v185;\n
    v137 = a0;\n
    if (*(v137) <= 0)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v137) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v137);\n
    v136 = v0;\n
    if (!v136)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v135 = cgc_calloc(134);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, &v31[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v135, &v31[18].padding_0[182]);\n
    cgc_strncpy(v135 + 5, *(v138), v136);\n
    v279 = v138;\n
    *(v279) = -4 + cgc_strlen(v135) + *(v279);\n
    v281 = v137;\n
    *(v281) = *(v281) - (cgc_strlen(v135) + -4);\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    if (cgc_sendline(1, &v31[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v39 ^= v31->field_260;\n
    if (v39)\n
        cgc___stack_cookie_fail();\n
    v282 = a0;\n
    if (*(v282) > 0 && v38 >= 0 && v38 < 0)\n
        v282 = *((&v40 + 0x4 * v38))(v185);\n
    v283 = v184;\n
    return v282;\n
}\n
", "5074761:sub_4d6f49": null, "5074768:cgc_process_llamacarnaptious": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamacarnaptious(struct struct_0 **v182, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x388]\n
    struct_1 *v1;  // [bp-0x384]\n
    struct_1 *v2;  // [bp-0x380]\n
    struct_1 *v3;  // [bp-0x37c]\n
    unsigned int v4;  // [bp-0x378]\n
    struct_1 *v5;  // [bp-0x374]\n
    unsigned int v6;  // [bp-0x370]\n
    struct_1 *v7;  // [bp-0x36c]\n
    struct_1 *v8;  // [bp-0x368]\n
    char v9;  // [bp-0x361]\n
    struct_1 *v10;  // [bp-0x360]\n
    char v11;  // [bp-0x359]\n
    struct_1 *v12;  // [bp-0x358]\n
    char v13;  // [bp-0x351]\n
    struct_1 *v14;  // [bp-0x350]\n
    struct_1 *v15;  // [bp-0x34c]\n
    char v16;  // [bp-0x345]\n
    struct_1 *v17;  // [bp-0x344]\n
    struct_1 *v18;  // [bp-0x340]\n
    struct_1 *v19;  // [bp-0x33c]\n
    struct_1 *v20;  // [bp-0x338]\n
    struct_1 *v21;  // [bp-0x334]\n
    struct_1 *v22;  // [bp-0x330]\n
    char v23;  // [bp-0x329]\n
    struct_1 *v24;  // [bp-0x328]\n
    unsigned int v25;  // [bp-0x324]\n
    struct_1 *v26;  // [bp-0x320]\n
    char v27;  // [bp-0x319]\n
    struct_1 *v28;  // [bp-0x318]\n
    unsigned int v29;  // [bp-0x314]\n
    struct_1 *v30;  // [bp-0x310]\n
    char v31;  // [bp-0x309]\n
    struct_2 *v32;  // [bp-0x308]\n
    unsigned short v33;  // [bp-0x304]\n
    unsigned short v34;  // [bp-0x302]\n
    unsigned short v35;  // [bp-0x300]\n
    unsigned short v36;  // [bp-0x2fe]\n
    unsigned long v37;  // [bp-0x2fc]\n
    unsigned long v38;  // [bp-0x2f4]\n
    struct struct_3 **v39;  // [bp-0x2e8]\n
    unsigned int v40;  // [bp-0x2e4]\n
    char v41;  // [bp-0x2e0]\n
    char v42;  // [bp-0x2de]\n
    char v43[2];  // [bp-0x2d8]\n
    unsigned short v44;  // [bp-0x2d2]\n
    unsigned int *v45;  // [bp-0x2d0]\n
    struct struct_0 **v46;  // [bp-0x2cc]\n
    char v47;  // [bp-0x2c5]\n
    char v48[8];  // [bp-0x2b0]\n
    unsigned int v49;  // [bp-0x2ac]\n
    void* v50;  // [bp-0x2a8]\n
    unsigned int *v51;  // [bp-0x2a0]\n
    struct struct_0 **v52;  // [bp-0x29c]\n
    char v53;  // [bp-0x295]\n
    char v54[8];  // [bp-0x280]\n
    unsigned int v55;  // [bp-0x27c]\n
    void* v56;  // [bp-0x278]\n
    unsigned int *v57;  // [bp-0x274]\n
    struct struct_0 **v58;  // [bp-0x270]\n
    unsigned int v59;  // [bp-0x26c]\n
    char v60;  // [bp-0x265]\n
    unsigned int *v61;  // [bp-0x264]\n
    struct struct_0 **v62;  // [bp-0x260]\n
    unsigned int v63;  // [bp-0x25c]\n
    char v64;  // [bp-0x255]\n
    unsigned int *v65;  // [bp-0x254]\n
    struct struct_0 **v66;  // [bp-0x250]\n
    unsigned int v67;  // [bp-0x24c]\n
    char v68;  // [bp-0x245]\n
    unsigned int *v69;  // [bp-0x244]\n
    struct struct_0 **v70;  // [bp-0x240]\n
    char *v71;  // [bp-0x23c]\n
    unsigned int v72;  // [bp-0x238]\n
    unsigned int *v73;  // [bp-0x234]\n
    struct struct_0 **v74;  // [bp-0x230]\n
    char *v75;  // [bp-0x22c]\n
    unsigned int v76;  // [bp-0x228]\n
    unsigned int *v77;  // [bp-0x224]\n
    struct struct_0 **v78;  // [bp-0x220]\n
    char *v79;  // [bp-0x21c]\n
    unsigned int v80;  // [bp-0x218]\n
    unsigned int *v81;  // [bp-0x214]\n
    struct struct_0 **v82;  // [bp-0x210]\n
    char v83;  // [bp-0x20c]\n
    unsigned short v84;  // [bp-0x206]\n
    unsigned int *v85;  // [bp-0x204]\n
    struct struct_0 **v86;  // [bp-0x200]\n
    char v87;  // [bp-0x1fc]\n
    unsigned short v88;  // [bp-0x1f6]\n
    unsigned int *v89;  // [bp-0x1f4]\n
    struct struct_0 **v90;  // [bp-0x1f0]\n
    char v91;  // [bp-0x1ec]\n
    unsigned short v92;  // [bp-0x1e6]\n
    unsigned int *v93;  // [bp-0x1e4]\n
    struct struct_0 **v94;  // [bp-0x1e0]\n
    char v95;  // [bp-0x1d9]\n
    char v96;  // [bp-0x1d5]\n
    unsigned int *v97;  // [bp-0x1d4]\n
    struct struct_0 **v98;  // [bp-0x1d0]\n
    char v99;  // [bp-0x1c9]\n
    char v100;  // [bp-0x1c5]\n
    unsigned int *v101;  // [bp-0x1c4]\n
    struct struct_0 **v102;  // [bp-0x1c0]\n
    char v103;  // [bp-0x1bc]\n
    unsigned int v104;  // [bp-0x1b0]\n
    unsigned int *v105;  // [bp-0x1ac]\n
    struct struct_0 **v106;  // [bp-0x1a8]\n
    char v107;  // [bp-0x1a4]\n
    unsigned int v108;  // [bp-0x198]\n
    unsigned int *v109;  // [bp-0x194]\n
    struct struct_0 **v110;  // [bp-0x190]\n
    char v111;  // [bp-0x18c]\n
    unsigned int v112;  // [bp-0x180]\n
    unsigned int *v113;  // [bp-0x17c]\n
    struct struct_0 **v114;  // [bp-0x178]\n
    char v115;  // [bp-0x174]\n
    unsigned int v116;  // [bp-0x168]\n
    unsigned int *v117;  // [bp-0x164]\n
    struct struct_0 **v118;  // [bp-0x160]\n
    char v119;  // [bp-0x15c]\n
    unsigned int v120;  // [bp-0x150]\n
    unsigned int *v121;  // [bp-0x14c]\n
    struct struct_0 **v122;  // [bp-0x148]\n
    char v123;  // [bp-0x144]\n
    unsigned int v124;  // [bp-0x138]\n
    unsigned int *v125;  // [bp-0x134]\n
    struct struct_0 **v126;  // [bp-0x130]\n
    unsigned int v127;  // [bp-0x12c]\n
    unsigned short v128;  // [bp-0x126]\n
    unsigned int *v129;  // [bp-0x124]\n
    struct struct_0 **v130;  // [bp-0x120]\n
    unsigned int v131;  // [bp-0x11c]\n
    unsigned short v132;  // [bp-0x116]\n
    unsigned int *v133;  // [bp-0x114]\n
    struct struct_0 **v134;  // [bp-0x110]\n
    unsigned int v135;  // [bp-0x10c]\n
    unsigned short v136;  // [bp-0x106]\n
    unsigned int *v137;  // [bp-0x104]\n
    struct struct_0 **v138;  // [bp-0x100]\n
    unsigned int v139;  // [bp-0xfc]\n
    unsigned short v140;  // [bp-0xf6]\n
    unsigned int *v141;  // [bp-0xf4]\n
    struct struct_0 **v142;  // [bp-0xf0]\n
    char v143;  // [bp-0xec]\n
    char v144[4];  // [bp-0xe0]\n
    unsigned int v145;  // [bp-0xdc]\n
    unsigned int *v146;  // [bp-0xd8]\n
    struct struct_0 **v147;  // [bp-0xd4]\n
    char v148;  // [bp-0xd0]\n
    char *v149;  // [bp-0xc4]\n
    unsigned int v150;  // [bp-0xc0]\n
    unsigned int *v151;  // [bp-0xbc]\n
    struct struct_0 **v152;  // [bp-0xb8]\n
    char v153;  // [bp-0xb4]\n
    char v154[4];  // [bp-0xa8]\n
    unsigned int v155;  // [bp-0xa4]\n
    unsigned int *v156;  // [bp-0xa0]\n
    struct struct_0 **v157;  // [bp-0x9c]\n
    char v158;  // [bp-0x98]\n
    char v159[4];  // [bp-0x8c]\n
    unsigned int v160;  // [bp-0x88]\n
    unsigned int *v161;  // [bp-0x84]\n
    struct struct_0 **v162;  // [bp-0x80]\n
    char *v163;  // [bp-0x7c]\n
    unsigned int v164;  // [bp-0x78]\n
    unsigned int *v165;  // [bp-0x74]\n
    struct struct_0 **v166;  // [bp-0x70]\n
    char *v167;  // [bp-0x6c]\n
    unsigned int v168;  // [bp-0x68]\n
    unsigned int *v169;  // [bp-0x64]\n
    struct struct_0 **v170;  // [bp-0x60]\n
    char v171;  // [bp-0x59]\n
    unsigned int v172;  // [bp-0x44]\n
    unsigned int v173;  // [bp-0x40]\n
    unsigned int *v174;  // [bp-0x3c]\n
    struct struct_0 **v175;  // [bp-0x38]\n
    char v176;  // [bp-0x31]\n
    unsigned int v177;  // [bp-0x1c]\n
    unsigned int v178;  // [bp-0x18]\n
    unsigned int *v179;  // [bp-0x10]\n
    struct struct_0 **v180;  // [bp-0xc]\n
    unsigned int v181;  // [bp-0x8]\n
    unsigned int v183;  // ebx\n
    unsigned int *v184;  // eax\n
    struct struct_0 **v185;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v189;  // eax\n
    unsigned int *v190;  // eax\n
    struct struct_0 **v191;  // eax\n
    unsigned int *v192;  // eax\n
    struct struct_0 **v193;  // eax\n
    struct struct_0 **v195;  // eax\n
    unsigned int *v197;  // eax\n
    unsigned int *v198;  // eax\n
    struct struct_0 **v199;  // eax\n
    unsigned int *v200;  // eax\n
    struct struct_0 **v201;  // eax\n
    unsigned int *v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int *v204;  // eax\n
    struct struct_0 **v205;  // eax\n
    unsigned int *v206;  // eax\n
    struct struct_0 **v207;  // eax\n
    unsigned int *v208;  // eax\n
    struct struct_0 **v209;  // eax\n
    unsigned int *v210;  // eax\n
    struct struct_0 **v211;  // eax\n
    unsigned int *v212;  // eax\n
    struct struct_0 **v213;  // eax\n
    unsigned int *v214;  // eax\n
    struct struct_0 **v215;  // eax\n
    struct struct_0 **v216;  // eax\n
    unsigned int *v217;  // eax\n
    unsigned int *v218;  // eax\n
    struct struct_0 **v219;  // eax\n
    unsigned int *v220;  // eax\n
    struct struct_0 **v221;  // eax\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    unsigned int v230[2];  // ecx\n
    unsigned int *v231;  // eax\n
    struct struct_0 **v232;  // eax\n
    struct struct_0 **v234;  // eax\n
    unsigned int *v236;  // eax\n
    unsigned int *v237;  // eax\n
    struct struct_0 **v238;  // eax\n
    struct struct_0 **v239;  // eax\n
    unsigned int *v240;  // eax\n
    unsigned int *v241;  // eax\n
    struct struct_0 **v242;  // eax\n
    unsigned int *v243;  // eax\n
    struct struct_0 **v244;  // eax\n
    unsigned int *v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    struct struct_0 **v248;  // eax\n
    unsigned int *v250;  // eax\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    unsigned int *v257;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v259;  // eax\n
    struct struct_0 **v260;  // eax\n
    struct struct_0 **v261;  // eax\n
    unsigned int *v262;  // eax\n
    unsigned int *v263;  // eax\n
    struct struct_0 **v264;  // eax\n
    unsigned int v265[2];  // ecx\n
    unsigned int *v266;  // eax\n
    struct struct_0 **v267;  // eax\n
    unsigned int *v268;  // eax\n
    struct struct_0 **v269;  // eax\n
    struct struct_0 **v271;  // eax\n
    unsigned int *v273;  // eax\n
    unsigned int *v274;  // eax, Other Possible Types: unsigned int\n
    unsigned int v275;  // ebx\n
\n
    v181 = v183;\n
    v32 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v40 = cgc__cookie;\n
    v39 = -1;\n
    if (cgc_sendline(1, \"===llamacarnaptious===\", 22) < 0)\n
        cgc__terminate();\n
    v58 = v182;\n
    v57 = a0;\n
    *(&v54[0]) = *(v58);\n
    memset(&v53, 0, 21);\n
    if (*(v57) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = 0;\n
    if (v54[0])\n
    {\n
        v31 = 0;\n
        if (v54[1])\n
        {\n
            v31 = 0;\n
            if (v54[2])\n
            {\n
                v31 = 0;\n
                if (v54[3])\n
                {\n
                    v31 = 0;\n
                    if (v54[4] << 24)\n
                    {\n
                        v31 = 0;\n
                        if (v54[5] << 16)\n
                        {\n
                            v31 = 0;\n
                            if (v54[6] << 8)\n
                                v31 = v54[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v55 = v31 & 1;\n
    v56 = 0;\n
    cgc_uint2str(&v53, 21, v55);\n
    v30 = &v53;\n
    if (cgc_sendline(1, v30, cgc_strlen(&v53)) < 0)\n
        cgc__terminate();\n
    v184 = v57;\n
    *(v184) = *(v184) - 8;\n
    v185 = v58;\n
    *(v185) = &(*(v185))[1].padding_1[2];\n
    v82 = v182;\n
    v81 = a0;\n
    if (*(v81) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v81) >= 128)\n
        v29 = 128;\n
    else\n
        v29 = *(v81);\n
    v80 = v29;\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = cgc_calloc(134);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v79, &v32[18].padding_0[182]);\n
    cgc_strncpy(v79 + 5, *(v82), v80);\n
    v187 = v82;\n
    *(v187) = &(&*(v187)->field_4)[cgc_strlen(v79)];\n
    v189 = v81;\n
    *(v189) = *(v189) - (cgc_strlen(v79) + -4);\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v94 = v182;\n
    v93 = a0;\n
    memset(&v91, 0, 6);\n
    if (*(v93) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = *(&*(v94)->field_0);\n
    cgc_uint2str(&v91, 6, v92);\n
    v28 = &v91;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v91)) < 0)\n
        cgc__terminate();\n
    v190 = v93;\n
    *(v190) = *(v190) - 2;\n
    v191 = v94;\n
    *(v191) = &*(v191)->padding_1[1];\n
    v46 = v182;\n
    v45 = a0;\n
    *(&v43) = *(v46);\n
    memset(&v42, 0, 6);\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = 0;\n
    if (v43[0] << 8)\n
        v27 = v43[1];\n
    v44 = v27 & 1;\n
    cgc_uint2str(&v42, 6, v44);\n
    v26 = &v42;\n
    if (cgc_sendline(1, v26, cgc_strlen(&v42)) < 0)\n
        cgc__terminate();\n
    v192 = v45;\n
    *(v192) = *(v192) - 2;\n
    v193 = v46;\n
    *(v193) = &*(v193)->padding_1[1];\n
    v78 = v182;\n
    v77 = a0;\n
    if (*(v77) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v77) >= 128)\n
        v25 = 128;\n
    else\n
        v25 = *(v77);\n
    v76 = v25;\n
    if (!v76)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = cgc_calloc(134);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v75, &v32[18].padding_0[182]);\n
    cgc_strncpy(v75 + 5, *(v78), v76);\n
    v195 = v78;\n
    *(v195) = &(&*(v195)->field_4)[cgc_strlen(v75)];\n
    v197 = v77;\n
    *(v197) = *(v197) - (cgc_strlen(v75) + -4);\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v126 = v182;\n
    v125 = a0;\n
    memset(&v123, 0, 12);\n
    if (*(v125) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v124 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v36 = [D] x86g_create_fpucw(fpround<4>);\n
    v35 = v36 | 0xc00;\n
    v38 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v123, 12, v38);\n
    v24 = &v123;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v123)) < 0)\n
        cgc__terminate();\n
    v198 = v125;\n
    *(v198) = *(v198) - 4;\n
    v199 = v126;\n
    *(v199) = &*(v199)->field_4;\n
    v162 = v182;\n
    v161 = a0;\n
    *(&v159[0]) = *(v162);\n
    memset(&v158, 0, 12);\n
    if (*(v161) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = 0;\n
    if (v159[0] << 24)\n
    {\n
        v23 = 0;\n
        if (v159[1] << 16)\n
        {\n
            v23 = 0;\n
            if (v159[2] << 8)\n
                v23 = v159[3];\n
        }\n
    }\n
    v160 = v23 & 1;\n
    cgc_uint2str(&v158, 12, v160);\n
    v22 = &v158;\n
    if (cgc_sendline(1, v22, cgc_strlen(&v158)) < 0)\n
        cgc__terminate();\n
    v200 = v161;\n
    *(v200) = *(v200) - 4;\n
    v201 = v162;\n
    *(v201) = &*(v201)->field_4;\n
    v122 = v182;\n
    v121 = a0;\n
    memset(&v119, 0, 12);\n
    if (*(v121) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v120 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v34 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-766, size=2, endness=Iend_LE)))));\n
    v33 = v34 | 0xc00;\n
    v37 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v119, 12, v37);\n
    v21 = &v119;\n
    if (cgc_sendline(1, v21, cgc_strlen(&v119)) < 0)\n
        cgc__terminate();\n
    v202 = v121;\n
    *(v202) = *(v202) - 4;\n
    v203 = v122;\n
    *(v203) = &*(v203)->field_4;\n
    v118 = v182;\n
    v117 = a0;\n
    memset(&v115, 0, 12);\n
    if (*(v117) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v116 = *(&*(v118)->field_0);\n
    cgc_uint2str(&v115, 12, v116);\n
    v20 = &v115;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v115)) < 0)\n
        cgc__terminate();\n
    v204 = v117;\n
    *(v204) = *(v204) - 4;\n
    v205 = v118;\n
    *(v205) = &*(v205)->field_4;\n
    v90 = v182;\n
    v89 = a0;\n
    memset(&v87, 0, 6);\n
    if (*(v89) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v88 = *(&*(v90)->field_0);\n
    cgc_uint2str(&v87, 6, v88);\n
    v19 = &v87;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v87)) < 0)\n
        cgc__terminate();\n
    v206 = v89;\n
    *(v206) = *(v206) - 2;\n
    v207 = v90;\n
    *(v207) = &*(v207)->padding_1[1];\n
    v142 = v182;\n
    v141 = a0;\n
    if (*(v141) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v140 = *(&*(v142)->field_0);\n
    v208 = v141;\n
    *(v208) = *(v208) - 2;\n
    v209 = v142;\n
    *(v209) = &*(v209)->padding_1[1];\n
    if (v140 <= *(v141) && !(!v140))\n
        goto LABEL_4d8214;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d8214:\n
    v139 = cgc_calloc(v140);\n
    if (!v139)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v139, *(v142), v140);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v210 = v141;\n
    *(v210) = *(v210) - v140;\n
    v211 = v142;\n
    *(v211) = &(&*(v211)->field_0)[v140];\n
    cgc_checkheap();\n
    cgc_free(v139);\n
    v114 = v182;\n
    v113 = a0;\n
    memset(&v111, 0, 12);\n
    if (*(v113) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v112 = *(&*(v114)->field_0);\n
    cgc_uint2str(&v111, 12, v112);\n
    v18 = &v111;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v111)) < 0)\n
        cgc__terminate();\n
    v212 = v113;\n
    *(v212) = *(v212) - 4;\n
    v213 = v114;\n
    *(v213) = &*(v213)->field_4;\n
    v70 = v182;\n
    v69 = a0;\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(v70)->field_0;\n
    v214 = v69;\n
    *(v214) = *(v214) - 1;\n
    v215 = v70;\n
    *(v215) = &*(v215)->padding_1;\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_4d858f;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d858f:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v216 = v70;\n
    *(v216) = &(&*(v216)->field_0)[v68];\n
    v217 = v69;\n
    *(v217) = *(v217) - v68;\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v110 = v182;\n
    v109 = a0;\n
    memset(&v107, 0, 12);\n
    if (*(v109) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v108 = *(&*(v110)->field_0);\n
    cgc_uint2str(&v107, 12, v108);\n
    v17 = &v107;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v218 = v109;\n
    *(v218) = *(v218) - 4;\n
    v219 = v110;\n
    *(v219) = &*(v219)->field_4;\n
    v157 = v182;\n
    v156 = a0;\n
    *(&v154[0]) = *(v157);\n
    memset(&v153, 0, 12);\n
    if (*(v156) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v16 = 0;\n
    if (v154[0] << 24)\n
    {\n
        v16 = 0;\n
        if (v154[1] << 16)\n
        {\n
            v16 = 0;\n
            if (v154[2] << 8)\n
                v16 = v154[3];\n
        }\n
    }\n
    v155 = v16 & 1;\n
    cgc_uint2str(&v153, 12, v155);\n
    v15 = &v153;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v153)) < 0)\n
        cgc__terminate();\n
    v220 = v156;\n
    *(v220) = *(v220) - 4;\n
    v221 = v157;\n
    *(v221) = &*(v221)->field_4;\n
    v106 = v182;\n
    v105 = a0;\n
    memset(&v103, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = *(&*(v106)->field_0);\n
    cgc_uint2str(&v103, 12, v104);\n
    v14 = &v103;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v222 = v105;\n
    *(v222) = *(v222) - 4;\n
    v223 = v106;\n
    *(v223) = &*(v223)->field_4;\n
    v52 = v182;\n
    v51 = a0;\n
    *(&v48[0]) = *(v52);\n
    memset(&v47, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v13 = 0;\n
    if (v48[0])\n
    {\n
        v13 = 0;\n
        if (v48[1])\n
        {\n
            v13 = 0;\n
            if (v48[2])\n
            {\n
                v13 = 0;\n
                if (v48[3])\n
                {\n
                    v13 = 0;\n
                    if (v48[4] << 24)\n
                    {\n
                        v13 = 0;\n
                        if (v48[5] << 16)\n
                        {\n
                            v13 = 0;\n
                            if (v48[6] << 8)\n
                                v13 = v48[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v49 = v13 & 1;\n
    v50 = 0;\n
    cgc_uint2str(&v47, 21, v49);\n
    v12 = &v47;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v224 = v51;\n
    *(v224) = *(v224) - 8;\n
    v225 = v52;\n
    *(v225) = &(*(v225))[1].padding_1[2];\n
    v152 = v182;\n
    v151 = a0;\n
    v149 = &*(v152)->field_0;\n
    memset(&v148, 0, 12);\n
    if (*(v151) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (*(v149) << 24)\n
    {\n
        v11 = 0;\n
        if (v149[1] << 16)\n
        {\n
            v11 = 0;\n
            if (v149[2] << 8)\n
                v11 = v149[3];\n
        }\n
    }\n
    v150 = v11 & 1;\n
    cgc_uint2str(&v148, 12, v150);\n
    v10 = &v148;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v148)) < 0)\n
        cgc__terminate();\n
    v226 = v151;\n
    *(v226) = *(v226) - 4;\n
    v227 = v152;\n
    *(v227) = &*(v227)->field_4;\n
    v147 = v182;\n
    v146 = a0;\n
    *(&v144[0]) = *(v147);\n
    memset(&v143, 0, 12);\n
    if (*(v146) < 4)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v144[0] << 24)\n
    {\n
        v9 = 0;\n
        if (v144[1] << 16)\n
        {\n
            v9 = 0;\n
            if (v144[2] << 8)\n
                v9 = v144[3];\n
        }\n
    }\n
    v145 = v9 & 1;\n
    cgc_uint2str(&v143, 12, v145);\n
    v8 = &v143;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v143)) < 0)\n
        cgc__terminate();\n
    v228 = v146;\n
    *(v228) = *(v228) - 4;\n
    v229 = v147;\n
    *(v229) = &*(v229)->field_4;\n
    v180 = v182;\n
    v179 = a0;\n
    memset(&v176, 0, 21);\n
    if (*(v179) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v230 = *(v180);\n
    v178 = v230[1];\n
    v177 = v230[0];\n
    cgc_uint2str(&v176, 21, v177);\n
    v7 = &v176;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v176)) < 0)\n
        cgc__terminate();\n
    v231 = v179;\n
    *(v231) = *(v231) - 8;\n
    v232 = v180;\n
    *(v232) = &(*(v232))[1].padding_1[2];\n
    v170 = v182;\n
    v169 = a0;\n
    if (*(v169) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v169) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v169);\n
    v168 = v6;\n
    if (!v168)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v167 = cgc_calloc(134);\n
    if (!v167)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v167, &v32[18].padding_0[182]);\n
    cgc_strncpy(v167 + 5, *(v170), v168);\n
    v234 = v170;\n
    *(v234) = &(&*(v234)->field_4)[cgc_strlen(v167)];\n
    v236 = v169;\n
    *(v236) = *(v236) - (cgc_strlen(v167) + -4);\n
    cgc_checkheap();\n
    cgc_free(v167);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v66 = v182;\n
    v65 = a0;\n
    if (*(v65) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(v66)->field_0;\n
    v237 = v65;\n
    *(v237) = *(v237) - 1;\n
    v238 = v66;\n
    *(v238) = &*(v238)->padding_1;\n
    if (v64 <= *(v65) && !(!v64))\n
        goto LABEL_4d9548;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d9548:\n
    v63 = cgc_calloc(v64);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v63, *(v66), v64);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v239 = v66;\n
    *(v239) = &(&*(v239)->field_0)[v64];\n
    v240 = v65;\n
    *(v240) = *(v240) - v64;\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    v138 = v182;\n
    v137 = a0;\n
    if (*(v137) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v136 = *(&*(v138)->field_0);\n
    v241 = v137;\n
    *(v241) = *(v241) - 2;\n
    v242 = v138;\n
    *(v242) = &*(v242)->padding_1[1];\n
    if (v136 <= *(v137) && !(!v136))\n
        goto LABEL_4d9782;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d9782:\n
    v135 = cgc_calloc(v136);\n
    if (!v135)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v135, *(v138), v136);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v243 = v137;\n
    *(v243) = *(v243) - v136;\n
    v244 = v138;\n
    *(v244) = &(&*(v244)->field_0)[v136];\n
    cgc_checkheap();\n
    cgc_free(v135);\n
    v102 = v182;\n
    v101 = a0;\n
    memset(&v99, 0, 4);\n
    if (*(v101) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = *(v102)->field_0;\n
    cgc_uint2str(&v99, 4, v100);\n
    v5 = &v99;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v99)) < 0)\n
        cgc__terminate();\n
    v245 = v101;\n
    *(v245) = *(v245) - 1;\n
    v246 = v102;\n
    *(v246) = &*(v246)->padding_1;\n
    v74 = v182;\n
    v73 = a0;\n
    if (*(v73) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v73) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v73);\n
    v72 = v4;\n
    if (!v72)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v71 = cgc_calloc(134);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v71, &v32[18].padding_0[182]);\n
    cgc_strncpy(v71 + 5, *(v74), v72);\n
    v248 = v74;\n
    *(v248) = &(&*(v248)->field_4)[cgc_strlen(v71)];\n
    v250 = v73;\n
    *(v250) = *(v250) - (cgc_strlen(v71) + -4);\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v134 = v182;\n
    v133 = a0;\n
    if (*(v133) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v132 = *(&*(v134)->field_0);\n
    v251 = v133;\n
    *(v251) = *(v251) - 2;\n
    v252 = v134;\n
    *(v252) = &*(v252)->padding_1[1];\n
    if (v132 <= *(v133) && !(!v132))\n
        goto LABEL_4d9d81;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d9d81:\n
    v131 = cgc_calloc(v132);\n
    if (!v131)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v131, *(v134), v132);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v253 = v133;\n
    *(v253) = *(v253) - v132;\n
    v254 = v134;\n
    *(v254) = &(&*(v254)->field_0)[v132];\n
    cgc_checkheap();\n
    cgc_free(v131);\n
    v130 = v182;\n
    v129 = a0;\n
    if (*(v129) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v128 = *(&*(v130)->field_0);\n
    v255 = v129;\n
    *(v255) = *(v255) - 2;\n
    v256 = v130;\n
    *(v256) = &*(v256)->padding_1[1];\n
    if (v128 <= *(v129) && !(!v128))\n
        goto LABEL_4d9fbb;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4d9fbb:\n
    v127 = cgc_calloc(v128);\n
    if (!v127)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v127, *(v130), v128);\n
    if (cgc_sendline(1, &v32[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v257 = v129;\n
    *(v257) = *(v257) - v128;\n
    v258 = v130;\n
    *(v258) = &(&*(v258)->field_0)[v128];\n
    cgc_checkheap();\n
    cgc_free(v127);\n
    v62 = v182;\n
    v61 = a0;\n
    if (*(v61) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(v62)->field_0;\n
    v259 = v61;\n
    *(v259) = *(v259) - 1;\n
    v260 = v62;\n
    *(v260) = &*(v260)->padding_1;\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_4da1f3;\n
    if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4da1f3:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, &v32[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v261 = v62;\n
    *(v261) = &(&*(v261)->field_0)[v60];\n
    v262 = v61;\n
    *(v262) = *(v262) - v60;\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v86 = v182;\n
    v85 = a0;\n
    memset(&v83, 0, 6);\n
    if (*(v85) < 2)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v84 = *(&*(v86)->field_0);\n
    cgc_uint2str(&v83, 6, v84);\n
    v3 = &v83;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v263 = v85;\n
    *(v263) = *(v263) - 2;\n
    v264 = v86;\n
    *(v264) = &*(v264)->padding_1[1];\n
    v175 = v182;\n
    v174 = a0;\n
    memset(&v171, 0, 21);\n
    if (*(v174) < 8)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v265 = *(v175);\n
    v173 = v265[1];\n
    v172 = v265[0];\n
    cgc_uint2str(&v171, 21, v172);\n
    v2 = &v171;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v171)) < 0)\n
        cgc__terminate();\n
    v266 = v174;\n
    *(v266) = *(v266) - 8;\n
    v267 = v175;\n
    *(v267) = &(*(v267))[1].padding_1[2];\n
    v98 = v182;\n
    v97 = a0;\n
    memset(&v95, 0, 4);\n
    if (*(v97) < 1)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = *(v98)->field_0;\n
    cgc_uint2str(&v95, 4, v96);\n
    v1 = &v95;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v95)) < 0)\n
        cgc__terminate();\n
    v268 = v97;\n
    *(v268) = *(v268) - 1;\n
    v269 = v98;\n
    *(v269) = &*(v269)->padding_1;\n
    v166 = v182;\n
    v165 = a0;\n
    if (*(v165) <= 0)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v165) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v165);\n
    v164 = v0;\n
    if (!v164)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v163 = cgc_calloc(134);\n
    if (!v163)\n
    {\n
        if (cgc_sendline(1, &v32[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v163, &v32[18].padding_0[182]);\n
    cgc_strncpy(v163 + 5, *(v166), v164);\n
    v271 = v166;\n
    *(v271) = &(&*(v271)->field_4)[cgc_strlen(v163)];\n
    v273 = v165;\n
    *(v273) = *(v273) - (cgc_strlen(v163) + -4);\n
    cgc_checkheap();\n
    cgc_free(v163);\n
    if (cgc_sendline(1, &v32[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v40 ^= v32->field_260;\n
    if (v40)\n
        cgc___stack_cookie_fail();\n
    v274 = a0;\n
    if (*(v274) > 0 && v39 >= 0 && v39 < 0)\n
        v274 = *((&v41 + 0x4 * v39))(v182);\n
    v275 = v181;\n
    return v274;\n
}\n
", "5089682:sub_4da992": null, "5089696:cgc_process_llamaferocity": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaferocity(struct struct_0 **v61, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x12c]\n
    struct_1 *v1;  // [bp-0x128]\n
    struct_1 *v2;  // [bp-0x124]\n
    struct_1 *v3;  // [bp-0x120]\n
    char v4;  // [bp-0x119]\n
    struct_1 *v5;  // [bp-0x118]\n
    char v6;  // [bp-0x111]\n
    struct_1 *v7;  // [bp-0x110]\n
    struct_1 *v8;  // [bp-0x10c]\n
    struct_1 *v9;  // [bp-0x108]\n
    struct_2 *v10;  // [bp-0x104]\n
    unsigned short v11;  // [bp-0x100]\n
    unsigned short v12;  // [bp-0xfe]\n
    unsigned long v13;  // [bp-0xfc]\n
    struct struct_3 **v14;  // [bp-0xf0]\n
    unsigned int v15;  // [bp-0xec]\n
    char v16;  // [bp-0xe8]\n
    char v17;  // [bp-0xe6]\n
    struct_0 *v18;  // [bp-0xe0]\n
    unsigned short v19;  // [bp-0xda]\n
    unsigned int *v20;  // [bp-0xd8]\n
    struct struct_0 **v21;  // [bp-0xd4]\n
    unsigned int v22;  // [bp-0xd0]\n
    char v23;  // [bp-0xc9]\n
    unsigned int *v24;  // [bp-0xc8]\n
    struct struct_0 **v25;  // [bp-0xc4]\n
    char v26;  // [bp-0xc0]\n
    unsigned short v27;  // [bp-0xba]\n
    unsigned int *v28;  // [bp-0xb8]\n
    struct struct_0 **v29;  // [bp-0xb4]\n
    char v30;  // [bp-0xb0]\n
    unsigned short v31;  // [bp-0xaa]\n
    unsigned int *v32;  // [bp-0xa8]\n
    struct struct_0 **v33;  // [bp-0xa4]\n
    char v34;  // [bp-0xa0]\n
    unsigned int v35;  // [bp-0x94]\n
    unsigned int *v36;  // [bp-0x90]\n
    struct struct_0 **v37;  // [bp-0x8c]\n
    char v38;  // [bp-0x88]\n
    unsigned int v39;  // [bp-0x7c]\n
    unsigned int *v40;  // [bp-0x78]\n
    struct struct_0 **v41;  // [bp-0x74]\n
    unsigned int v42;  // [bp-0x70]\n
    unsigned short v43;  // [bp-0x6a]\n
    unsigned int *v44;  // [bp-0x68]\n
    struct struct_0 **v45;  // [bp-0x64]\n
    char v46;  // [bp-0x60]\n
    char v47[4];  // [bp-0x54]\n
    unsigned int v48;  // [bp-0x50]\n
    unsigned int *v49;  // [bp-0x4c]\n
    struct struct_0 **v50;  // [bp-0x48]\n
    char *v51;  // [bp-0x44]\n
    unsigned int v52;  // [bp-0x40]\n
    unsigned int *v53;  // [bp-0x3c]\n
    struct struct_0 **v54;  // [bp-0x38]\n
    char v55;  // [bp-0x31]\n
    unsigned int v56;  // [bp-0x1c]\n
    unsigned int v57;  // [bp-0x18]\n
    unsigned int *v58;  // [bp-0x10]\n
    struct struct_0 **v59;  // [bp-0xc]\n
    unsigned int v60;  // [bp-0x8]\n
    unsigned int v62;  // ebx\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v64;  // eax\n
    unsigned int *v65;  // eax\n
    struct struct_0 **v66;  // eax\n
    unsigned int *v67;  // eax\n
    struct struct_0 **v68;  // eax\n
    struct struct_0 **v69;  // eax\n
    unsigned int *v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_0 **v72;  // eax\n
    unsigned int *v73;  // eax\n
    struct struct_0 **v74;  // eax\n
    unsigned int *v75;  // eax\n
    struct struct_0 **v76;  // eax\n
    unsigned int *v77;  // eax\n
    struct struct_0 **v78;  // eax\n
    struct_0 *v79;  // ecx\n
    unsigned int *v80;  // eax\n
    struct struct_0 **v81;  // eax\n
    struct struct_0 **v83;  // eax\n
    unsigned int *v85;  // eax\n
    unsigned int *v86;  // eax\n
    struct struct_0 **v87;  // eax\n
    unsigned int *v88;  // eax\n
    struct struct_0 **v89;  // eax\n
    unsigned int *v90;  // eax, Other Possible Types: unsigned int\n
    unsigned int v91;  // ebx\n
\n
    v60 = v62;\n
    v10 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamaferocity===\", 19) < 0)\n
        cgc__terminate();\n
    v33 = v61;\n
    v32 = a0;\n
    memset(&v30, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v31 = *(&*(v33)->field_0);\n
    cgc_uint2str(&v30, 6, v31);\n
    v9 = &v30;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v63 = v32;\n
    *(v63) = *(v63) - 2;\n
    v64 = v33;\n
    *(v64) = &*(v64)->padding_1[1];\n
    v29 = v61;\n
    v28 = a0;\n
    memset(&v26, 0, 6);\n
    if (*(v28) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = *(&*(v29)->field_0);\n
    cgc_uint2str(&v26, 6, v27);\n
    v8 = &v26;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v26)) < 0)\n
        cgc__terminate();\n
    v65 = v28;\n
    *(v65) = *(v65) - 2;\n
    v66 = v29;\n
    *(v66) = &*(v66)->padding_1[1];\n
    v25 = v61;\n
    v24 = a0;\n
    if (*(v24) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v23 = *(v25)->field_0;\n
    v67 = v24;\n
    *(v67) = *(v67) - 1;\n
    v68 = v25;\n
    *(v68) = &*(v68)->padding_1;\n
    if (v23 <= *(v24) && !(!v23))\n
        goto LABEL_4dadb7;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dadb7:\n
    v22 = cgc_calloc(v23);\n
    if (!v22)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v22, *(v25), v23);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v69 = v25;\n
    *(v69) = &(&*(v69)->field_0)[v23];\n
    v70 = v24;\n
    *(v70) = *(v70) - v23;\n
    cgc_checkheap();\n
    cgc_free(v22);\n
    v41 = v61;\n
    v40 = a0;\n
    memset(&v38, 0, 12);\n
    if (*(v40) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v39 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v12 = [D] x86g_create_fpucw(fpround<4>);\n
    v11 = v12 | 0xc00;\n
    v13 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v38, 12, v13);\n
    v7 = &v38;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v71 = v40;\n
    *(v71) = *(v71) - 4;\n
    v72 = v41;\n
    *(v72) = &*(v72)->field_4;\n
    v50 = v61;\n
    v49 = a0;\n
    *(&v47[0]) = *(v50);\n
    memset(&v46, 0, 12);\n
    if (*(v49) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v47[0] << 24)\n
    {\n
        v6 = 0;\n
        if (v47[1] << 16)\n
        {\n
            v6 = 0;\n
            if (v47[2] << 8)\n
                v6 = v47[3];\n
        }\n
    }\n
    v48 = v6 & 1;\n
    cgc_uint2str(&v46, 12, v48);\n
    v5 = &v46;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v46)) < 0)\n
        cgc__terminate();\n
    v73 = v49;\n
    *(v73) = *(v73) - 4;\n
    v74 = v50;\n
    *(v74) = &*(v74)->field_4;\n
    v21 = v61;\n
    v20 = a0;\n
    v18 = *(v21);\n
    memset(&v17, 0, 6);\n
    if (*(v20) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v18->field_0 << 8)\n
        v4 = v18->padding_1[0];\n
    v19 = v4 & 1;\n
    cgc_uint2str(&v17, 6, v19);\n
    v3 = &v17;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v17)) < 0)\n
        cgc__terminate();\n
    v75 = v20;\n
    *(v75) = *(v75) - 2;\n
    v76 = v21;\n
    *(v76) = &*(v76)->padding_1[1];\n
    v37 = v61;\n
    v36 = a0;\n
    memset(&v34, 0, 12);\n
    if (*(v36) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = *(&*(v37)->field_0);\n
    cgc_uint2str(&v34, 12, v35);\n
    v2 = &v34;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v77 = v36;\n
    *(v77) = *(v77) - 4;\n
    v78 = v37;\n
    *(v78) = &*(v78)->field_4;\n
    v59 = v61;\n
    v58 = a0;\n
    memset(&v55, 0, 21);\n
    if (*(v58) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(v59);\n
    v57 = v79->field_4;\n
    v56 = *(&v79->field_0);\n
    cgc_uint2str(&v55, 21, v56);\n
    v1 = &v55;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v80 = v58;\n
    *(v80) = *(v80) - 8;\n
    v81 = v59;\n
    *(v81) = *(v81) + 1;\n
    v54 = v61;\n
    v53 = a0;\n
    if (*(v53) <= 0)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v53) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v53);\n
    v52 = v0;\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v51 = cgc_calloc(134);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v51, &v10[18].padding_0[182]);\n
    cgc_strncpy(v51 + 5, *(v54), v52);\n
    v83 = v54;\n
    *(v83) = -4 + cgc_strlen(v51) + *(v83);\n
    v85 = v53;\n
    *(v85) = *(v85) - (cgc_strlen(v51) + -4);\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    if (cgc_sendline(1, &v10[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v45 = v61;\n
    v44 = a0;\n
    if (*(v44) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v43 = *(&*(v45)->field_0);\n
    v86 = v44;\n
    *(v86) = *(v86) - 2;\n
    v87 = v45;\n
    *(v87) = &*(v87)->padding_1[1];\n
    if (v43 <= *(v44) && !(!v43))\n
        goto LABEL_4db8f7;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4db8f7:\n
    v42 = cgc_calloc(v43);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v42, *(v45), v43);\n
    if (cgc_sendline(1, &v10[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v88 = v44;\n
    *(v88) = *(v88) - v43;\n
    v89 = v45;\n
    *(v89) = &(&*(v89)->field_0)[v43];\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    v15 ^= v10->field_260;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v90 = a0;\n
    if (*(v90) > 0 && v14 >= 0 && v14 < 0)\n
        v90 = *((&v16 + 0x4 * v14))(v61);\n
    v91 = v60;\n
    return v90;\n
}\n
", "5094011:sub_4dba7b": null, "5094016:cgc_process_llamacoruscant": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamacoruscant(struct struct_0 **v76, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x188]\n
    struct_3 *v1;  // [bp-0x184]\n
    char v2;  // [bp-0x17d]\n
    unsigned int v3;  // [bp-0x17c]\n
    struct_3 *v4;  // [bp-0x178]\n
    unsigned int v5;  // [bp-0x174]\n
    struct_3 *v6;  // [bp-0x170]\n
    struct_3 *v7;  // [bp-0x16c]\n
    struct_3 *v8;  // [bp-0x168]\n
    char v9;  // [bp-0x161]\n
    struct_2 *v10;  // [bp-0x160]\n
    unsigned short v11;  // [bp-0x15c]\n
    unsigned short v12;  // [bp-0x15a]\n
    unsigned short v13;  // [bp-0x158]\n
    unsigned short v14;  // [bp-0x156]\n
    unsigned long v15;  // [bp-0x154]\n
    unsigned long v16;  // [bp-0x14c]\n
    struct struct_1 **v17;  // [bp-0x140]\n
    unsigned int v18;  // [bp-0x13c]\n
    char v19;  // [bp-0x138]\n
    char v20;  // [bp-0x136]\n
    char *v21;  // [bp-0x130]\n
    unsigned short v22;  // [bp-0x12a]\n
    unsigned int *v23;  // [bp-0x128]\n
    struct struct_0 **v24;  // [bp-0x124]\n
    char v25;  // [bp-0x11d]\n
    char v26[8];  // [bp-0x108]\n
    unsigned int v27;  // [bp-0x104]\n
    void* v28;  // [bp-0x100]\n
    unsigned int *v29;  // [bp-0xfc]\n
    struct struct_0 **v30;  // [bp-0xf8]\n
    unsigned int v31;  // [bp-0xf4]\n
    char v32;  // [bp-0xed]\n
    unsigned int *v33;  // [bp-0xec]\n
    struct struct_0 **v34;  // [bp-0xe8]\n
    unsigned int v35;  // [bp-0xe4]\n
    char v36;  // [bp-0xdd]\n
    unsigned int *v37;  // [bp-0xdc]\n
    struct struct_0 **v38;  // [bp-0xd8]\n
    char *v39;  // [bp-0xd4]\n
    unsigned int v40;  // [bp-0xd0]\n
    unsigned int *v41;  // [bp-0xcc]\n
    struct struct_0 **v42;  // [bp-0xc8]\n
    char *v43;  // [bp-0xc4]\n
    unsigned int v44;  // [bp-0xc0]\n
    unsigned int *v45;  // [bp-0xbc]\n
    struct struct_0 **v46;  // [bp-0xb8]\n
    char v47;  // [bp-0xb1]\n
    unsigned long v48;  // [bp-0x9c]\n
    unsigned int *v49;  // [bp-0x94]\n
    struct struct_0 **v50;  // [bp-0x90]\n
    char v51;  // [bp-0x89]\n
    unsigned long v52;  // [bp-0x74]\n
    unsigned int *v53;  // [bp-0x68]\n
    struct struct_0 **v54;  // [bp-0x64]\n
    char v55;  // [bp-0x60]\n
    unsigned int v56;  // [bp-0x54]\n
    unsigned int *v57;  // [bp-0x50]\n
    struct struct_0 **v58;  // [bp-0x4c]\n
    unsigned int v59;  // [bp-0x48]\n
    unsigned short v60;  // [bp-0x42]\n
    unsigned int *v61;  // [bp-0x40]\n
    struct struct_0 **v62;  // [bp-0x3c]\n
    char *v63;  // [bp-0x38]\n
    unsigned int v64;  // [bp-0x34]\n
    unsigned int *v65;  // [bp-0x30]\n
    struct struct_0 **v66;  // [bp-0x2c]\n
    unsigned int v67;  // [bp-0x28]\n
    char v68;  // [bp-0x21]\n
    unsigned int *v69;  // [bp-0x20]\n
    struct struct_0 **v70;  // [bp-0x1c]\n
    unsigned int v71;  // [bp-0x18]\n
    char v72;  // [bp-0x11]\n
    unsigned int *v73;  // [bp-0x10]\n
    struct struct_0 **v74;  // [bp-0xc]\n
    unsigned int v75;  // [bp-0x8]\n
    unsigned int v77;  // ebx\n
    unsigned int *v78;  // eax\n
    struct struct_0 **v79;  // eax\n
    unsigned int *v80;  // eax\n
    struct struct_0 **v81;  // eax\n
    unsigned int *v82;  // eax\n
    struct struct_0 **v83;  // eax\n
    unsigned int *v84;  // eax\n
    struct struct_0 **v85;  // eax\n
    struct struct_0 **v86;  // eax\n
    unsigned int *v87;  // eax\n
    unsigned int *v88;  // eax\n
    struct struct_0 **v89;  // eax\n
    unsigned int *v90;  // eax\n
    struct struct_0 **v91;  // eax\n
    unsigned int *v92;  // eax\n
    struct struct_0 **v93;  // eax\n
    struct struct_0 **v94;  // eax\n
    unsigned int *v95;  // eax\n
    struct struct_0 **v97;  // eax\n
    unsigned int *v99;  // eax\n
    unsigned int *v100;  // eax\n
    struct struct_0 **v101;  // eax\n
    unsigned int *v102;  // eax\n
    struct struct_0 **v103;  // eax\n
    struct struct_0 **v104;  // eax\n
    unsigned int *v105;  // eax\n
    struct struct_0 **v107;  // eax\n
    unsigned int *v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_0 **v111;  // eax\n
    struct struct_0 **v113;  // eax\n
    unsigned int *v115;  // eax\n
    unsigned int *v116;  // eax\n
    struct struct_0 **v117;  // eax\n
    struct struct_0 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    unsigned int *v120;  // eax, Other Possible Types: unsigned int\n
    unsigned int v121;  // ebx\n
\n
    v75 = v77;\n
    v10 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v18 = cgc__cookie;\n
    v17 = -1;\n
    if (cgc_sendline(1, \"===llamacoruscant===\", 20) < 0)\n
        cgc__terminate();\n
    v62 = v76;\n
    v61 = a0;\n
    if (*(v61) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(&*(v62)->field_0);\n
    v78 = v61;\n
    *(v78) = *(v78) - 2;\n
    v79 = v62;\n
    *(v79) = &*(v79)->padding_1[1];\n
    if (v60 <= *(v61) && !(!v60))\n
        goto LABEL_4dbbef;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dbbef:\n
    v59 = cgc_calloc(v60);\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v59, *(v62), v60);\n
    if (cgc_sendline(1, &v10[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v80 = v61;\n
    *(v80) = *(v80) - v60;\n
    v81 = v62;\n
    *(v81) = &(&*(v81)->field_0)[v60];\n
    cgc_checkheap();\n
    cgc_free(v59);\n
    v30 = v76;\n
    v29 = a0;\n
    *(&v26[0]) = *(v30);\n
    memset(&v25, 0, 21);\n
    if (*(v29) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v26[0])\n
    {\n
        v9 = 0;\n
        if (v26[1])\n
        {\n
            v9 = 0;\n
            if (v26[2])\n
            {\n
                v9 = 0;\n
                if (v26[3])\n
                {\n
                    v9 = 0;\n
                    if (v26[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v26[5] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v26[6] << 8)\n
                                v9 = v26[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v27 = v9 & 1;\n
    v28 = 0;\n
    cgc_uint2str(&v25, 21, v27);\n
    v8 = &v25;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v25)) < 0)\n
        cgc__terminate();\n
    v82 = v29;\n
    *(v82) = *(v82) - 8;\n
    v83 = v30;\n
    *(v83) = *(v83) + 1;\n
    v74 = v76;\n
    v73 = a0;\n
    if (*(v73) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v72 = *(v74)->field_0;\n
    v84 = v73;\n
    *(v84) = *(v84) - 1;\n
    v85 = v74;\n
    *(v85) = &*(v85)->padding_1;\n
    if (v72 <= *(v73) && !(!v72))\n
        goto LABEL_4dc030;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dc030:\n
    v71 = cgc_calloc(v72);\n
    if (!v71)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v71, *(v74), v72);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v86 = v74;\n
    *(v86) = &(&*(v86)->field_0)[v72];\n
    v87 = v73;\n
    *(v87) = *(v87) - v72;\n
    cgc_checkheap();\n
    cgc_free(v71);\n
    v54 = v76;\n
    v53 = a0;\n
    memset(&v51, 0, 21);\n
    if (*(v53) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v52 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v14 = [D] x86g_create_fpucw(fpround<4>);\n
    v13 = v14 | 0xc00;\n
    v16 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v51, 21, v16);\n
    v7 = &v51;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v51)) < 0)\n
        cgc__terminate();\n
    v88 = v53;\n
    *(v88) = *(v88) - 8;\n
    v89 = v54;\n
    *(v89) = *(v89) + 1;\n
    v58 = v76;\n
    v57 = a0;\n
    memset(&v55, 0, 12);\n
    if (*(v57) < 4)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(&*(v58)->field_0);\n
    cgc_uint2str(&v55, 12, v56);\n
    v6 = &v55;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v90 = v57;\n
    *(v90) = *(v90) - 4;\n
    v91 = v58;\n
    *(v91) = &*(v91)->field_4;\n
    v70 = v76;\n
    v69 = a0;\n
    if (*(v69) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(v70)->field_0;\n
    v92 = v69;\n
    *(v92) = *(v92) - 1;\n
    v93 = v70;\n
    *(v93) = &*(v93)->padding_1;\n
    if (v68 <= *(v69) && !(!v68))\n
        goto LABEL_4dc4a4;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dc4a4:\n
    v67 = cgc_calloc(v68);\n
    if (!v67)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v67, *(v70), v68);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v94 = v70;\n
    *(v94) = &(&*(v94)->field_0)[v68];\n
    v95 = v69;\n
    *(v95) = *(v95) - v68;\n
    cgc_checkheap();\n
    cgc_free(v67);\n
    v66 = v76;\n
    v65 = a0;\n
    if (*(v65) <= 0)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v65) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v65);\n
    v64 = v5;\n
    if (!v64)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = cgc_calloc(134);\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v63, &v10[18].padding_0[182]);\n
    cgc_strncpy(v63 + 5, *(v66), v64);\n
    v97 = v66;\n
    *(v97) = &(&*(v97)->field_4)[cgc_strlen(v63)];\n
    v99 = v65;\n
    *(v99) = *(v99) - (cgc_strlen(v63) + -4);\n
    cgc_checkheap();\n
    cgc_free(v63);\n
    if (cgc_sendline(1, &v10[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v50 = v76;\n
    v49 = a0;\n
    memset(&v47, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v48 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v12 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-342, size=2, endness=Iend_LE)))));\n
    v11 = v12 | 0xc00;\n
    v15 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v47, 21, v15);\n
    v4 = &v47;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v100 = v49;\n
    *(v100) = *(v100) - 8;\n
    v101 = v50;\n
    *(v101) = *(v101) + 1;\n
    v38 = v76;\n
    v37 = a0;\n
    if (*(v37) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = *(v38)->field_0;\n
    v102 = v37;\n
    *(v102) = *(v102) - 1;\n
    v103 = v38;\n
    *(v103) = &*(v103)->padding_1;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_4dca7a;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dca7a:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v104 = v38;\n
    *(v104) = &(&*(v104)->field_0)[v36];\n
    v105 = v37;\n
    *(v105) = *(v105) - v36;\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v46 = v76;\n
    v45 = a0;\n
    if (*(v45) <= 0)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v45) >= 128)\n
        v3 = 128;\n
    else\n
        v3 = *(v45);\n
    v44 = v3;\n
    if (!v44)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v43 = cgc_calloc(134);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v43, &v10[18].padding_0[182]);\n
    cgc_strncpy(v43 + 5, *(v46), v44);\n
    v107 = v46;\n
    *(v107) = &(&*(v107)->field_4)[cgc_strlen(v43)];\n
    v109 = v45;\n
    *(v109) = *(v109) - (cgc_strlen(v43) + -4);\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    if (cgc_sendline(1, &v10[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v24 = v76;\n
    v23 = a0;\n
    v21 = &*(v24)->field_0;\n
    memset(&v20, 0, 6);\n
    if (*(v23) < 2)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v2 = 0;\n
    if (*(v21) << 8)\n
        v2 = v21[1];\n
    v22 = v2 & 1;\n
    cgc_uint2str(&v20, 6, v22);\n
    v1 = &v20;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v20)) < 0)\n
        cgc__terminate();\n
    v110 = v23;\n
    *(v110) = *(v110) - 2;\n
    v111 = v24;\n
    *(v111) = &*(v111)->padding_1[1];\n
    v42 = v76;\n
    v41 = a0;\n
    if (*(v41) <= 0)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v41) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v41);\n
    v40 = v0;\n
    if (!v40)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = cgc_calloc(134);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v39, &v10[18].padding_0[182]);\n
    cgc_strncpy(v39 + 5, *(v42), v40);\n
    v113 = v42;\n
    *(v113) = &(&*(v113)->field_4)[cgc_strlen(v39)];\n
    v115 = v41;\n
    *(v115) = *(v115) - (cgc_strlen(v39) + -4);\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    if (cgc_sendline(1, &v10[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v34 = v76;\n
    v33 = a0;\n
    if (*(v33) < 1)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = *(v34)->field_0;\n
    v116 = v33;\n
    *(v116) = *(v116) - 1;\n
    v117 = v34;\n
    *(v117) = &*(v117)->padding_1;\n
    if (v32 <= *(v33) && !(!v32))\n
        goto LABEL_4dd33b;\n
    if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dd33b:\n
    v31 = cgc_calloc(v32);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, &v10[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v31, *(v34), v32);\n
    if (cgc_sendline(1, &v10[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v118 = v34;\n
    *(v118) = &(&*(v118)->field_0)[v32];\n
    v119 = v33;\n
    *(v119) = *(v119) - v32;\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    v18 ^= v10->field_260;\n
    if (v18)\n
        cgc___stack_cookie_fail();\n
    v120 = a0;\n
    if (*(v120) > 0 && v17 >= 0 && v17 < 0)\n
        v120 = *((&v19 + 0x4 * v17))(v76);\n
    v121 = v75;\n
    return v120;\n
}\n
", "5100768:cgc_process_llamaParthenon": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaParthenon(struct struct_0 **v220, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x468]\n
    struct_1 *v1;  // [bp-0x464]\n
    unsigned int v2;  // [bp-0x460]\n
    struct_1 *v3;  // [bp-0x45c]\n
    unsigned int v4;  // [bp-0x458]\n
    unsigned int v5;  // [bp-0x454]\n
    unsigned int v6;  // [bp-0x450]\n
    struct_1 *v7;  // [bp-0x44c]\n
    struct_1 *v8;  // [bp-0x448]\n
    char v9;  // [bp-0x441]\n
    struct_1 *v10;  // [bp-0x440]\n
    struct_1 *v11;  // [bp-0x43c]\n
    struct_1 *v12;  // [bp-0x438]\n
    struct_1 *v13;  // [bp-0x434]\n
    struct_1 *v14;  // [bp-0x430]\n
    char v15;  // [bp-0x429]\n
    unsigned int v16;  // [bp-0x428]\n
    struct_1 *v17;  // [bp-0x424]\n
    char v18;  // [bp-0x41d]\n
    unsigned int v19;  // [bp-0x41c]\n
    struct_1 *v20;  // [bp-0x418]\n
    char v21;  // [bp-0x411]\n
    unsigned int v22;  // [bp-0x410]\n
    unsigned int v23;  // [bp-0x40c]\n
    struct_1 *v24;  // [bp-0x408]\n
    struct_1 *v25;  // [bp-0x404]\n
    char v26;  // [bp-0x3fd]\n
    struct_1 *v27;  // [bp-0x3fc]\n
    struct_1 *v28;  // [bp-0x3f8]\n
    char v29;  // [bp-0x3f1]\n
    unsigned int v30;  // [bp-0x3f0]\n
    struct_1 *v31;  // [bp-0x3ec]\n
    char v32;  // [bp-0x3e5]\n
    struct_1 *v33;  // [bp-0x3e4]\n
    struct_1 *v34;  // [bp-0x3e0]\n
    char v35;  // [bp-0x3d9]\n
    struct_1 *v36;  // [bp-0x3d8]\n
    struct_1 *v37;  // [bp-0x3d4]\n
    struct_1 *v38;  // [bp-0x3d0]\n
    struct_1 *v39;  // [bp-0x3cc]\n
    struct_3 *v40;  // [bp-0x3c8]\n
    unsigned short v41;  // [bp-0x3c4]\n
    unsigned short v42;  // [bp-0x3c2]\n
    unsigned short v43;  // [bp-0x3c0]\n
    unsigned short v44;  // [bp-0x3be]\n
    unsigned short v45;  // [bp-0x3bc]\n
    unsigned short v46;  // [bp-0x3ba]\n
    unsigned short v47;  // [bp-0x3b8]\n
    unsigned short v48;  // [bp-0x3b6]\n
    unsigned long v49;  // [bp-0x3b4]\n
    unsigned long v50;  // [bp-0x3ac]\n
    unsigned long v51;  // [bp-0x3a4]\n
    unsigned long v52;  // [bp-0x39c]\n
    struct struct_2 **v53;  // [bp-0x390]\n
    unsigned int v54;  // [bp-0x38c]\n
    char v55;  // [bp-0x388]\n
    char v56;  // [bp-0x386]\n
    char v57[2];  // [bp-0x380]\n
    unsigned short v58;  // [bp-0x37a]\n
    unsigned int *v59;  // [bp-0x378]\n
    struct struct_0 **v60;  // [bp-0x374]\n
    char v61;  // [bp-0x36e]\n
    char v62[2];  // [bp-0x368]\n
    unsigned short v63;  // [bp-0x362]\n
    unsigned int *v64;  // [bp-0x360]\n
    struct struct_0 **v65;  // [bp-0x35c]\n
    char v66;  // [bp-0x355]\n
    char v67[5];  // [bp-0x340]\n
    unsigned int v68;  // [bp-0x33c]\n
    void* v69;  // [bp-0x338]\n
    unsigned int *v70;  // [bp-0x330]\n
    struct struct_0 **v71;  // [bp-0x32c]\n
    char v72;  // [bp-0x325]\n
    char v73[5];  // [bp-0x310]\n
    unsigned int v74;  // [bp-0x30c]\n
    void* v75;  // [bp-0x308]\n
    unsigned int *v76;  // [bp-0x300]\n
    struct struct_0 **v77;  // [bp-0x2fc]\n
    char v78;  // [bp-0x2f5]\n
    char v79[8];  // [bp-0x2e0]\n
    unsigned int v80;  // [bp-0x2dc]\n
    void* v81;  // [bp-0x2d8]\n
    unsigned int *v82;  // [bp-0x2d0]\n
    struct struct_0 **v83;  // [bp-0x2cc]\n
    unsigned int v84;  // [bp-0x2c8]\n
    char v85;  // [bp-0x2c1]\n
    unsigned int *v86;  // [bp-0x2c0]\n
    struct struct_0 **v87;  // [bp-0x2bc]\n
    unsigned int v88;  // [bp-0x2b8]\n
    char v89;  // [bp-0x2b1]\n
    unsigned int *v90;  // [bp-0x2b0]\n
    struct struct_0 **v91;  // [bp-0x2ac]\n
    char *v92;  // [bp-0x2a8]\n
    unsigned int v93;  // [bp-0x2a4]\n
    unsigned int *v94;  // [bp-0x2a0]\n
    struct struct_0 **v95;  // [bp-0x29c]\n
    char *v96;  // [bp-0x298]\n
    unsigned int v97;  // [bp-0x294]\n
    unsigned int *v98;  // [bp-0x290]\n
    struct struct_0 **v99;  // [bp-0x28c]\n
    char *v100;  // [bp-0x288]\n
    unsigned int v101;  // [bp-0x284]\n
    unsigned int *v102;  // [bp-0x280]\n
    struct struct_0 **v103;  // [bp-0x27c]\n
    char *v104;  // [bp-0x278]\n
    unsigned int v105;  // [bp-0x274]\n
    unsigned int *v106;  // [bp-0x270]\n
    struct struct_0 **v107;  // [bp-0x26c]\n
    char v108;  // [bp-0x268]\n
    unsigned short v109;  // [bp-0x262]\n
    unsigned int *v110;  // [bp-0x260]\n
    struct struct_0 **v111;  // [bp-0x25c]\n
    char v112;  // [bp-0x255]\n
    char v113;  // [bp-0x251]\n
    unsigned int *v114;  // [bp-0x250]\n
    struct struct_0 **v115;  // [bp-0x24c]\n
    char v116;  // [bp-0x245]\n
    char v117;  // [bp-0x241]\n
    unsigned int *v118;  // [bp-0x240]\n
    struct struct_0 **v119;  // [bp-0x23c]\n
    char v120;  // [bp-0x235]\n
    char v121;  // [bp-0x231]\n
    unsigned int *v122;  // [bp-0x230]\n
    struct struct_0 **v123;  // [bp-0x22c]\n
    char v124;  // [bp-0x228]\n
    unsigned int v125;  // [bp-0x21c]\n
    unsigned int *v126;  // [bp-0x218]\n
    struct struct_0 **v127;  // [bp-0x214]\n
    char v128;  // [bp-0x210]\n
    unsigned int v129;  // [bp-0x204]\n
    unsigned int *v130;  // [bp-0x200]\n
    struct struct_0 **v131;  // [bp-0x1fc]\n
    char v132;  // [bp-0x1f8]\n
    unsigned int v133;  // [bp-0x1ec]\n
    unsigned int *v134;  // [bp-0x1e8]\n
    struct struct_0 **v135;  // [bp-0x1e4]\n
    char v136;  // [bp-0x1e0]\n
    unsigned int v137;  // [bp-0x1d4]\n
    unsigned int *v138;  // [bp-0x1d0]\n
    struct struct_0 **v139;  // [bp-0x1cc]\n
    char v140;  // [bp-0x1c8]\n
    unsigned int v141;  // [bp-0x1bc]\n
    unsigned int *v142;  // [bp-0x1b8]\n
    struct struct_0 **v143;  // [bp-0x1b4]\n
    char v144;  // [bp-0x1b0]\n
    unsigned int v145;  // [bp-0x1a4]\n
    unsigned int *v146;  // [bp-0x1a0]\n
    struct struct_0 **v147;  // [bp-0x19c]\n
    char v148;  // [bp-0x198]\n
    unsigned int v149;  // [bp-0x18c]\n
    unsigned int *v150;  // [bp-0x188]\n
    struct struct_0 **v151;  // [bp-0x184]\n
    unsigned int v152;  // [bp-0x180]\n
    unsigned short v153;  // [bp-0x17a]\n
    unsigned int *v154;  // [bp-0x178]\n
    struct struct_0 **v155;  // [bp-0x174]\n
    unsigned int v156;  // [bp-0x170]\n
    unsigned short v157;  // [bp-0x16a]\n
    unsigned int *v158;  // [bp-0x168]\n
    struct struct_0 **v159;  // [bp-0x164]\n
    unsigned int v160;  // [bp-0x160]\n
    unsigned short v161;  // [bp-0x15a]\n
    unsigned int *v162;  // [bp-0x158]\n
    struct struct_0 **v163;  // [bp-0x154]\n
    char v164;  // [bp-0x150]\n
    char v165[4];  // [bp-0x144]\n
    unsigned int v166;  // [bp-0x140]\n
    unsigned int *v167;  // [bp-0x13c]\n
    struct struct_0 **v168;  // [bp-0x138]\n
    char v169;  // [bp-0x134]\n
    char v170[4];  // [bp-0x128]\n
    unsigned int v171;  // [bp-0x124]\n
    unsigned int *v172;  // [bp-0x120]\n
    struct struct_0 **v173;  // [bp-0x11c]\n
    char v174;  // [bp-0x118]\n
    char v175[4];  // [bp-0x10c]\n
    unsigned int v176;  // [bp-0x108]\n
    unsigned int *v177;  // [bp-0x104]\n
    struct struct_0 **v178;  // [bp-0x100]\n
    char *v179;  // [bp-0xfc]\n
    unsigned int v180;  // [bp-0xf8]\n
    unsigned int *v181;  // [bp-0xf4]\n
    struct struct_0 **v182;  // [bp-0xf0]\n
    char *v183;  // [bp-0xec]\n
    unsigned int v184;  // [bp-0xe8]\n
    unsigned int *v185;  // [bp-0xe4]\n
    struct struct_0 **v186;  // [bp-0xe0]\n
    char *v187;  // [bp-0xdc]\n
    unsigned int v188;  // [bp-0xd8]\n
    unsigned int *v189;  // [bp-0xd4]\n
    struct struct_0 **v190;  // [bp-0xd0]\n
    char *v191;  // [bp-0xcc]\n
    unsigned int v192;  // [bp-0xc8]\n
    unsigned int *v193;  // [bp-0xc4]\n
    struct struct_0 **v194;  // [bp-0xc0]\n
    char *v195;  // [bp-0xbc]\n
    unsigned int v196;  // [bp-0xb8]\n
    unsigned int *v197;  // [bp-0xb4]\n
    struct struct_0 **v198;  // [bp-0xb0]\n
    char v199;  // [bp-0xa9]\n
    unsigned int v200;  // [bp-0x94]\n
    unsigned int v201;  // [bp-0x90]\n
    unsigned int *v202;  // [bp-0x8c]\n
    struct struct_0 **v203;  // [bp-0x88]\n
    char v204;  // [bp-0x81]\n
    unsigned int v205;  // [bp-0x6c]\n
    unsigned int v206;  // [bp-0x68]\n
    unsigned int *v207;  // [bp-0x64]\n
    struct struct_0 **v208;  // [bp-0x60]\n
    char v209;  // [bp-0x59]\n
    unsigned int v210;  // [bp-0x44]\n
    unsigned int v211;  // [bp-0x40]\n
    unsigned int *v212;  // [bp-0x3c]\n
    struct struct_0 **v213;  // [bp-0x38]\n
    char v214;  // [bp-0x31]\n
    unsigned int v215;  // [bp-0x1c]\n
    unsigned int v216;  // [bp-0x18]\n
    unsigned int *v217;  // [bp-0x10]\n
    struct struct_0 **v218;  // [bp-0xc]\n
    unsigned int v219;  // [bp-0x8]\n
    unsigned int v221;  // ebx\n
    unsigned int *v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_0 **v225;  // eax\n
    unsigned int *v226;  // eax\n
    struct struct_0 **v227;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v229;  // eax\n
    unsigned int *v230;  // eax\n
    struct struct_0 **v231;  // eax\n
    unsigned int *v232;  // eax\n
    struct struct_0 **v233;  // eax\n
    unsigned int *v234;  // eax\n
    struct struct_0 **v235;  // eax\n
    unsigned int *v236;  // eax\n
    struct struct_0 **v237;  // eax\n
    unsigned int *v238;  // eax\n
    struct struct_0 **v239;  // eax\n
    struct struct_0 **v241;  // eax\n
    unsigned int *v243;  // eax\n
    unsigned int *v244;  // eax\n
    struct struct_0 **v245;  // eax\n
    struct struct_0 **v246;  // eax\n
    unsigned int *v247;  // eax\n
    unsigned int *v248;  // eax\n
    struct struct_0 **v249;  // eax\n
    char v250[5];  // ecx\n
    unsigned int *v251;  // eax\n
    struct struct_0 **v252;  // eax\n
    unsigned int *v253;  // eax\n
    struct struct_0 **v254;  // eax\n
    unsigned int *v255;  // eax\n
    struct struct_0 **v256;  // eax\n
    struct struct_0 **v258;  // eax\n
    unsigned int *v260;  // eax\n
    struct struct_0 **v262;  // eax\n
    unsigned int *v264;  // eax\n
    unsigned int *v265;  // eax\n
    struct struct_0 **v266;  // eax\n
    struct struct_0 **v268;  // eax\n
    unsigned int *v270;  // eax\n
    unsigned int *v271;  // eax\n
    struct struct_0 **v272;  // eax\n
    struct struct_0 **v274;  // eax\n
    unsigned int *v276;  // eax\n
    unsigned int *v277;  // eax\n
    struct struct_0 **v278;  // eax\n
    unsigned int *v279;  // eax\n
    struct struct_0 **v280;  // eax\n
    unsigned int *v281;  // eax\n
    struct struct_0 **v282;  // eax\n
    char v283[5];  // ecx\n
    unsigned int *v284;  // eax\n
    struct struct_0 **v285;  // eax\n
    unsigned int *v286;  // eax\n
    struct struct_0 **v287;  // eax\n
    unsigned int *v288;  // eax\n
    struct struct_0 **v289;  // eax\n
    unsigned int v290[2];  // ecx\n
    unsigned int *v291;  // eax\n
    struct struct_0 **v292;  // eax\n
    struct struct_0 **v294;  // eax\n
    unsigned int *v296;  // eax\n
    struct struct_0 **v298;  // eax\n
    unsigned int *v300;  // eax\n
    struct struct_0 **v302;  // eax\n
    unsigned int *v304;  // eax\n
    unsigned int *v305;  // eax\n
    struct struct_0 **v306;  // eax\n
    unsigned int *v307;  // eax\n
    struct struct_0 **v308;  // eax\n
    unsigned int *v309;  // eax\n
    struct struct_0 **v310;  // eax\n
    unsigned int *v311;  // eax\n
    struct struct_0 **v312;  // eax\n
    struct struct_0 **v313;  // eax\n
    unsigned int *v314;  // eax\n
    struct struct_0 **v316;  // eax\n
    unsigned int *v318;  // eax\n
    unsigned int *v319;  // eax\n
    struct struct_0 **v320;  // eax\n
    unsigned int *v321;  // eax\n
    struct struct_0 **v322;  // eax\n
    unsigned int v323[2];  // ecx\n
    unsigned int *v324;  // eax\n
    struct struct_0 **v325;  // eax\n
    unsigned int *v326;  // eax\n
    struct struct_0 **v327;  // eax\n
    unsigned int *v328;  // eax, Other Possible Types: unsigned int\n
    unsigned int v329;  // ebx\n
\n
    v219 = v221;\n
    v40 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v54 = cgc__cookie;\n
    v53 = -1;\n
    if (cgc_sendline(1, \"===llamaParthenon===\", 20) < 0)\n
        cgc__terminate();\n
    v123 = v220;\n
    v122 = a0;\n
    memset(&v120, 0, 4);\n
    if (*(v122) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v121 = *(v123)->field_0;\n
    cgc_uint2str(&v120, 4, v121);\n
    v39 = &v120;\n
    if (cgc_sendline(1, v39, cgc_strlen(&v120)) < 0)\n
        cgc__terminate();\n
    v222 = v122;\n
    *(v222) = *(v222) - 1;\n
    v223 = v123;\n
    *(v223) = &*(v223)->padding_1;\n
    v119 = v220;\n
    v118 = a0;\n
    memset(&v116, 0, 4);\n
    if (*(v118) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v117 = *(v119)->field_0;\n
    cgc_uint2str(&v116, 4, v117);\n
    v38 = &v116;\n
    if (cgc_sendline(1, v38, cgc_strlen(&v116)) < 0)\n
        cgc__terminate();\n
    v224 = v118;\n
    *(v224) = *(v224) - 1;\n
    v225 = v119;\n
    *(v225) = &*(v225)->padding_1;\n
    v155 = v220;\n
    v154 = a0;\n
    if (*(v154) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v153 = *(&*(v155)->field_0);\n
    v226 = v154;\n
    *(v226) = *(v226) - 2;\n
    v227 = v155;\n
    *(v227) = &*(v227)->padding_1[1];\n
    if (v153 <= *(v154) && !(!v153))\n
        goto LABEL_4dd8f5;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4dd8f5:\n
    v152 = cgc_calloc(v153);\n
    if (!v152)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v152, *(v155), v153);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v228 = v154;\n
    *(v228) = *(v228) - v153;\n
    v229 = v155;\n
    *(v229) = &(&*(v229)->field_0)[v153];\n
    cgc_checkheap();\n
    cgc_free(v152);\n
    v115 = v220;\n
    v114 = a0;\n
    memset(&v112, 0, 4);\n
    if (*(v114) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v113 = *(v115)->field_0;\n
    cgc_uint2str(&v112, 4, v113);\n
    v37 = &v112;\n
    if (cgc_sendline(1, v37, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v230 = v114;\n
    *(v230) = *(v230) - 1;\n
    v231 = v115;\n
    *(v231) = &*(v231)->padding_1;\n
    v151 = v220;\n
    v150 = a0;\n
    memset(&v148, 0, 12);\n
    if (*(v150) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v149 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v48 = [D] x86g_create_fpucw(fpround<4>);\n
    v47 = v48 | 0xc00;\n
    v52 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v148, 12, v52);\n
    v36 = &v148;\n
    if (cgc_sendline(1, v36, cgc_strlen(&v148)) < 0)\n
        cgc__terminate();\n
    v232 = v150;\n
    *(v232) = *(v232) - 4;\n
    v233 = v151;\n
    *(v233) = &*(v233)->field_4;\n
    v65 = v220;\n
    v64 = a0;\n
    *(&v62) = *(v65);\n
    memset(&v61, 0, 6);\n
    if (*(v64) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = 0;\n
    if (v62[0] << 8)\n
        v35 = v62[1];\n
    v63 = v35 & 1;\n
    cgc_uint2str(&v61, 6, v63);\n
    v34 = &v61;\n
    if (cgc_sendline(1, v34, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v234 = v64;\n
    *(v234) = *(v234) - 2;\n
    v235 = v65;\n
    *(v235) = &*(v235)->padding_1[1];\n
    v147 = v220;\n
    v146 = a0;\n
    memset(&v144, 0, 12);\n
    if (*(v146) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v145 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v46 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-950, size=2, endness=Iend_LE)))));\n
    v45 = v46 | 0xc00;\n
    v51 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v144, 12, v51);\n
    v33 = &v144;\n
    if (cgc_sendline(1, v33, cgc_strlen(&v144)) < 0)\n
        cgc__terminate();\n
    v236 = v146;\n
    *(v236) = *(v236) - 4;\n
    v237 = v147;\n
    *(v237) = &*(v237)->field_4;\n
    v60 = v220;\n
    v59 = a0;\n
    *(&v57) = *(v60);\n
    memset(&v56, 0, 6);\n
    if (*(v59) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = 0;\n
    if (v57[0] << 8)\n
        v32 = v57[1];\n
    v58 = v32 & 1;\n
    cgc_uint2str(&v56, 6, v58);\n
    v31 = &v56;\n
    if (cgc_sendline(1, v31, cgc_strlen(&v56)) < 0)\n
        cgc__terminate();\n
    v238 = v59;\n
    *(v238) = *(v238) - 2;\n
    v239 = v60;\n
    *(v239) = &*(v239)->padding_1[1];\n
    v198 = v220;\n
    v197 = a0;\n
    if (*(v197) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v197) >= 128)\n
        v30 = 128;\n
    else\n
        v30 = *(v197);\n
    v196 = v30;\n
    if (!v196)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v195 = cgc_calloc(134);\n
    if (!v195)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v195, &v40[18].padding_0[182]);\n
    cgc_strncpy(v195 + 5, *(v198), v196);\n
    v241 = v198;\n
    *(v241) = &(&*(v241)->field_4)[cgc_strlen(v195)];\n
    v243 = v197;\n
    *(v243) = *(v243) - (cgc_strlen(v195) + -4);\n
    cgc_checkheap();\n
    cgc_free(v195);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v91 = v220;\n
    v90 = a0;\n
    if (*(v90) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = *(v91)->field_0;\n
    v244 = v90;\n
    *(v244) = *(v244) - 1;\n
    v245 = v91;\n
    *(v245) = &*(v245)->padding_1;\n
    if (v89 <= *(v90) && !(!v89))\n
        goto LABEL_4de4e8;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4de4e8:\n
    v88 = cgc_calloc(v89);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v88, *(v91), v89);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v246 = v91;\n
    *(v246) = &(&*(v246)->field_0)[v89];\n
    v247 = v90;\n
    *(v247) = *(v247) - v89;\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    v178 = v220;\n
    v177 = a0;\n
    *(&v175[0]) = *(v178);\n
    memset(&v174, 0, 12);\n
    if (*(v177) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v29 = 0;\n
    if (v175[0] << 24)\n
    {\n
        v29 = 0;\n
        if (v175[1] << 16)\n
        {\n
            v29 = 0;\n
            if (v175[2] << 8)\n
                v29 = v175[3];\n
        }\n
    }\n
    v176 = v29 & 1;\n
    cgc_uint2str(&v174, 12, v176);\n
    v28 = &v174;\n
    if (cgc_sendline(1, v28, cgc_strlen(&v174)) < 0)\n
        cgc__terminate();\n
    v248 = v177;\n
    *(v248) = *(v248) - 4;\n
    v249 = v178;\n
    *(v249) = &*(v249)->field_4;\n
    v218 = v220;\n
    v217 = a0;\n
    memset(&v214, 0, 21);\n
    if (*(v217) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v250 = *(v218);\n
    v216 = *(&v250[4]);\n
    v215 = *(&v250[0]);\n
    cgc_uint2str(&v214, 21, v215);\n
    v27 = &v214;\n
    if (cgc_sendline(1, v27, cgc_strlen(&v214)) < 0)\n
        cgc__terminate();\n
    v251 = v217;\n
    *(v251) = *(v251) - 8;\n
    v252 = v218;\n
    *(v252) = &(*(v252))[1].padding_1[2];\n
    v83 = v220;\n
    v82 = a0;\n
    *(&v79[0]) = *(v83);\n
    memset(&v78, 0, 21);\n
    if (*(v82) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v26 = 0;\n
    if (v79[0])\n
    {\n
        v26 = 0;\n
        if (v79[1])\n
        {\n
            v26 = 0;\n
            if (v79[2])\n
            {\n
                v26 = 0;\n
                if (v79[3])\n
                {\n
                    v26 = 0;\n
                    if (v79[4] << 24)\n
                    {\n
                        v26 = 0;\n
                        if (v79[5] << 16)\n
                        {\n
                            v26 = 0;\n
                            if (v79[6] << 8)\n
                                v26 = v79[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v80 = v26 & 1;\n
    v81 = 0;\n
    cgc_uint2str(&v78, 21, v80);\n
    v25 = &v78;\n
    if (cgc_sendline(1, v25, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v253 = v82;\n
    *(v253) = *(v253) - 8;\n
    v254 = v83;\n
    *(v254) = &(*(v254))[1].padding_1[2];\n
    v135 = v220;\n
    v134 = a0;\n
    memset(&v132, 0, 12);\n
    if (*(v134) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v133 = *(&*(v135)->field_0);\n
    cgc_uint2str(&v132, 12, v133);\n
    v24 = &v132;\n
    if (cgc_sendline(1, v24, cgc_strlen(&v132)) < 0)\n
        cgc__terminate();\n
    v255 = v134;\n
    *(v255) = *(v255) - 4;\n
    v256 = v135;\n
    *(v256) = &*(v256)->field_4;\n
    v107 = v220;\n
    v106 = a0;\n
    if (*(v106) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v106) >= 128)\n
        v23 = 128;\n
    else\n
        v23 = *(v106);\n
    v105 = v23;\n
    if (!v105)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v104 = cgc_calloc(134);\n
    if (!v104)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v104, &v40[18].padding_0[182]);\n
    cgc_strncpy(v104 + 5, *(v107), v105);\n
    v258 = v107;\n
    *(v258) = &(&*(v258)->field_4)[cgc_strlen(v104)];\n
    v260 = v106;\n
    *(v260) = *(v260) - (cgc_strlen(v104) + -4);\n
    cgc_checkheap();\n
    cgc_free(v104);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v194 = v220;\n
    v193 = a0;\n
    if (*(v193) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v193) >= 128)\n
        v22 = 128;\n
    else\n
        v22 = *(v193);\n
    v192 = v22;\n
    if (!v192)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v191 = cgc_calloc(134);\n
    if (!v191)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v191, &v40[18].padding_0[182]);\n
    cgc_strncpy(v191 + 5, *(v194), v192);\n
    v262 = v194;\n
    *(v262) = &(&*(v262)->field_4)[cgc_strlen(v191)];\n
    v264 = v193;\n
    *(v264) = *(v264) - (cgc_strlen(v191) + -4);\n
    cgc_checkheap();\n
    cgc_free(v191);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v173 = v220;\n
    v172 = a0;\n
    *(&v170[0]) = *(v173);\n
    memset(&v169, 0, 12);\n
    if (*(v172) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v21 = 0;\n
    if (v170[0] << 24)\n
    {\n
        v21 = 0;\n
        if (v170[1] << 16)\n
        {\n
            v21 = 0;\n
            if (v170[2] << 8)\n
                v21 = v170[3];\n
        }\n
    }\n
    v171 = v21 & 1;\n
    cgc_uint2str(&v169, 12, v171);\n
    v20 = &v169;\n
    if (cgc_sendline(1, v20, cgc_strlen(&v169)) < 0)\n
        cgc__terminate();\n
    v265 = v172;\n
    *(v265) = *(v265) - 4;\n
    v266 = v173;\n
    *(v266) = &*(v266)->field_4;\n
    v190 = v220;\n
    v189 = a0;\n
    if (*(v189) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v189) >= 128)\n
        v19 = 128;\n
    else\n
        v19 = *(v189);\n
    v188 = v19;\n
    if (!v188)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v187 = cgc_calloc(134);\n
    if (!v187)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v187, &v40[18].padding_0[182]);\n
    cgc_strncpy(v187 + 5, *(v190), v188);\n
    v268 = v190;\n
    *(v268) = &(&*(v268)->field_4)[cgc_strlen(v187)];\n
    v270 = v189;\n
    *(v270) = *(v270) - (cgc_strlen(v187) + -4);\n
    cgc_checkheap();\n
    cgc_free(v187);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v77 = v220;\n
    v76 = a0;\n
    *(&v73[0]) = *(v77);\n
    memset(&v72, 0, 21);\n
    if (*(v76) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v18 = 0;\n
    if (v73[0])\n
    {\n
        v18 = 0;\n
        if (v73[1])\n
        {\n
            v18 = 0;\n
            if (v73[2])\n
            {\n
                v18 = 0;\n
                if (v73[3])\n
                {\n
                    v18 = 0;\n
                    if (v73[4] << 24)\n
                    {\n
                        v18 = 0;\n
                        if (v73[1] << 16)\n
                        {\n
                            v18 = 0;\n
                            if (v73[1 + 1] << 8)\n
                                v18 = v73[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v74 = v18 & 1;\n
    v75 = 0;\n
    cgc_uint2str(&v72, 21, v74);\n
    v17 = &v72;\n
    if (cgc_sendline(1, v17, cgc_strlen(&v72)) < 0)\n
        cgc__terminate();\n
    v271 = v76;\n
    *(v271) = *(v271) - 8;\n
    v272 = v77;\n
    *(v272) = &(*(v272))[1].padding_1[2];\n
    v103 = v220;\n
    v102 = a0;\n
    if (*(v102) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v102) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v102);\n
    v101 = v16;\n
    if (!v101)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v100 = cgc_calloc(134);\n
    if (!v100)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v100, &v40[18].padding_0[182]);\n
    cgc_strncpy(v100 + 5, *(v103), v101);\n
    v274 = v103;\n
    *(v274) = &(&*(v274)->field_4)[cgc_strlen(v100)];\n
    v276 = v102;\n
    *(v276) = *(v276) - (cgc_strlen(v100) + -4);\n
    cgc_checkheap();\n
    cgc_free(v100);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v71 = v220;\n
    v70 = a0;\n
    *(&v67[0]) = *(v71);\n
    memset(&v66, 0, 21);\n
    if (*(v70) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (v67[0])\n
    {\n
        v15 = 0;\n
        if (v67[1])\n
        {\n
            v15 = 0;\n
            if (v67[2])\n
            {\n
                v15 = 0;\n
                if (v67[3])\n
                {\n
                    v15 = 0;\n
                    if (v67[4] << 24)\n
                    {\n
                        v15 = 0;\n
                        if (v67[1] << 16)\n
                        {\n
                            v15 = 0;\n
                            if (v67[1 + 1] << 8)\n
                                v15 = v67[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v68 = v15 & 1;\n
    v69 = 0;\n
    cgc_uint2str(&v66, 21, v68);\n
    v14 = &v66;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v277 = v70;\n
    *(v277) = *(v277) - 8;\n
    v278 = v71;\n
    *(v278) = &(*(v278))[1].padding_1[2];\n
    v143 = v220;\n
    v142 = a0;\n
    memset(&v140, 0, 12);\n
    if (*(v142) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v141 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v44 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-954, size=2, endness=Iend_LE)))));\n
    v43 = v44 | 0xc00;\n
    v50 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v140, 12, v50);\n
    v13 = &v140;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v140)) < 0)\n
        cgc__terminate();\n
    v279 = v142;\n
    *(v279) = *(v279) - 4;\n
    v280 = v143;\n
    *(v280) = &*(v280)->field_4;\n
    v131 = v220;\n
    v130 = a0;\n
    memset(&v128, 0, 12);\n
    if (*(v130) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v129 = *(&*(v131)->field_0);\n
    cgc_uint2str(&v128, 12, v129);\n
    v12 = &v128;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v128)) < 0)\n
        cgc__terminate();\n
    v281 = v130;\n
    *(v281) = *(v281) - 4;\n
    v282 = v131;\n
    *(v282) = &*(v282)->field_4;\n
    v213 = v220;\n
    v212 = a0;\n
    memset(&v209, 0, 21);\n
    if (*(v212) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v283 = *(v213);\n
    v211 = *(&v283[4]);\n
    v210 = *(&v283[0]);\n
    cgc_uint2str(&v209, 21, v210);\n
    v11 = &v209;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v209)) < 0)\n
        cgc__terminate();\n
    v284 = v212;\n
    *(v284) = *(v284) - 8;\n
    v285 = v213;\n
    *(v285) = &(*(v285))[1].padding_1[2];\n
    v111 = v220;\n
    v110 = a0;\n
    memset(&v108, 0, 6);\n
    if (*(v110) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v109 = *(&*(v111)->field_0);\n
    cgc_uint2str(&v108, 6, v109);\n
    v10 = &v108;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v108)) < 0)\n
        cgc__terminate();\n
    v286 = v110;\n
    *(v286) = *(v286) - 2;\n
    v287 = v111;\n
    *(v287) = &*(v287)->padding_1[1];\n
    v168 = v220;\n
    v167 = a0;\n
    *(&v165[0]) = *(v168);\n
    memset(&v164, 0, 12);\n
    if (*(v167) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v165[0] << 24)\n
    {\n
        v9 = 0;\n
        if (v165[1] << 16)\n
        {\n
            v9 = 0;\n
            if (v165[2] << 8)\n
                v9 = v165[3];\n
        }\n
    }\n
    v166 = v9 & 1;\n
    cgc_uint2str(&v164, 12, v166);\n
    v8 = &v164;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v164)) < 0)\n
        cgc__terminate();\n
    v288 = v167;\n
    *(v288) = *(v288) - 4;\n
    v289 = v168;\n
    *(v289) = &*(v289)->field_4;\n
    v208 = v220;\n
    v207 = a0;\n
    memset(&v204, 0, 21);\n
    if (*(v207) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v290 = *(v208);\n
    v206 = v290[1];\n
    v205 = v290[0];\n
    cgc_uint2str(&v204, 21, v205);\n
    v7 = &v204;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v204)) < 0)\n
        cgc__terminate();\n
    v291 = v207;\n
    *(v291) = *(v291) - 8;\n
    v292 = v208;\n
    *(v292) = &(*(v292))[1].padding_1[2];\n
    v186 = v220;\n
    v185 = a0;\n
    if (*(v185) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v185) >= 128)\n
        v6 = 128;\n
    else\n
        v6 = *(v185);\n
    v184 = v6;\n
    if (!v184)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v183 = cgc_calloc(134);\n
    if (!v183)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v183, &v40[18].padding_0[182]);\n
    cgc_strncpy(v183 + 5, *(v186), v184);\n
    v294 = v186;\n
    *(v294) = &(&*(v294)->field_4)[cgc_strlen(v183)];\n
    v296 = v185;\n
    *(v296) = *(v296) - (cgc_strlen(v183) + -4);\n
    cgc_checkheap();\n
    cgc_free(v183);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v182 = v220;\n
    v181 = a0;\n
    if (*(v181) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v181) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v181);\n
    v180 = v5;\n
    if (!v180)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v179 = cgc_calloc(134);\n
    if (!v179)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v179, &v40[18].padding_0[182]);\n
    cgc_strncpy(v179 + 5, *(v182), v180);\n
    v298 = v182;\n
    *(v298) = &(&*(v298)->field_4)[cgc_strlen(v179)];\n
    v300 = v181;\n
    *(v300) = *(v300) - (cgc_strlen(v179) + -4);\n
    cgc_checkheap();\n
    cgc_free(v179);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v99 = v220;\n
    v98 = a0;\n
    if (*(v98) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v98) >= 128)\n
        v4 = 128;\n
    else\n
        v4 = *(v98);\n
    v97 = v4;\n
    if (!v97)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v96 = cgc_calloc(134);\n
    if (!v96)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v96, &v40[18].padding_0[182]);\n
    cgc_strncpy(v96 + 5, *(v99), v97);\n
    v302 = v99;\n
    *(v302) = &(&*(v302)->field_4)[cgc_strlen(v96)];\n
    v304 = v98;\n
    *(v304) = *(v304) - (cgc_strlen(v96) + -4);\n
    cgc_checkheap();\n
    cgc_free(v96);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v163 = v220;\n
    v162 = a0;\n
    if (*(v162) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v161 = *(&*(v163)->field_0);\n
    v305 = v162;\n
    *(v305) = *(v305) - 2;\n
    v306 = v163;\n
    *(v306) = &*(v306)->padding_1[1];\n
    if (v161 <= *(v162) && !(!v161))\n
        goto LABEL_4e0d73;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e0d73:\n
    v160 = cgc_calloc(v161);\n
    if (!v160)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v160, *(v163), v161);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v307 = v162;\n
    *(v307) = *(v307) - v161;\n
    v308 = v163;\n
    *(v308) = &(&*(v308)->field_0)[v161];\n
    cgc_checkheap();\n
    cgc_free(v160);\n
    v127 = v220;\n
    v126 = a0;\n
    memset(&v124, 0, 12);\n
    if (*(v126) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v125 = *(&*(v127)->field_0);\n
    cgc_uint2str(&v124, 12, v125);\n
    v3 = &v124;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v124)) < 0)\n
        cgc__terminate();\n
    v309 = v126;\n
    *(v309) = *(v309) - 4;\n
    v310 = v127;\n
    *(v310) = &*(v310)->field_4;\n
    v87 = v220;\n
    v86 = a0;\n
    if (*(v86) < 1)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v85 = *(v87)->field_0;\n
    v311 = v86;\n
    *(v311) = *(v311) - 1;\n
    v312 = v87;\n
    *(v312) = &*(v312)->padding_1;\n
    if (v85 <= *(v86) && !(!v85))\n
        goto LABEL_4e10ee;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e10ee:\n
    v84 = cgc_calloc(v85);\n
    if (!v84)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v84, *(v87), v85);\n
    if (cgc_sendline(1, &v40[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v313 = v87;\n
    *(v313) = &(&*(v313)->field_0)[v85];\n
    v314 = v86;\n
    *(v314) = *(v314) - v85;\n
    cgc_checkheap();\n
    cgc_free(v84);\n
    v95 = v220;\n
    v94 = a0;\n
    if (*(v94) <= 0)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v94) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v94);\n
    v93 = v2;\n
    if (!v93)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v92 = cgc_calloc(134);\n
    if (!v92)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v92, &v40[18].padding_0[182]);\n
    cgc_strncpy(v92 + 5, *(v95), v93);\n
    v316 = v95;\n
    *(v316) = &(&*(v316)->field_4)[cgc_strlen(v92)];\n
    v318 = v94;\n
    *(v318) = *(v318) - (cgc_strlen(v92) + -4);\n
    cgc_checkheap();\n
    cgc_free(v92);\n
    if (cgc_sendline(1, &v40[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v159 = v220;\n
    v158 = a0;\n
    if (*(v158) < 2)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v157 = *(&*(v159)->field_0);\n
    v319 = v158;\n
    *(v319) = *(v319) - 2;\n
    v320 = v159;\n
    *(v320) = &*(v320)->padding_1[1];\n
    if (v157 <= *(v158) && !(!v157))\n
        goto LABEL_4e15a9;\n
    if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e15a9:\n
    v156 = cgc_calloc(v157);\n
    if (!v156)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v156, *(v159), v157);\n
    if (cgc_sendline(1, &v40[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v321 = v158;\n
    *(v321) = *(v321) - v157;\n
    v322 = v159;\n
    *(v322) = &(&*(v322)->field_0)[v157];\n
    cgc_checkheap();\n
    cgc_free(v156);\n
    v203 = v220;\n
    v202 = a0;\n
    memset(&v199, 0, 21);\n
    if (*(v202) < 8)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v323 = *(v203);\n
    v201 = v323[1];\n
    v200 = v323[0];\n
    cgc_uint2str(&v199, 21, v200);\n
    v1 = &v199;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v199)) < 0)\n
        cgc__terminate();\n
    v324 = v202;\n
    *(v324) = *(v324) - 8;\n
    v325 = v203;\n
    *(v325) = &(*(v325))[1].padding_1[2];\n
    v139 = v220;\n
    v138 = a0;\n
    memset(&v136, 0, 12);\n
    if (*(v138) < 4)\n
    {\n
        if (cgc_sendline(1, &v40[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v137 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v42 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-958, size=2, endness=Iend_LE)))));\n
    v41 = v42 | 0xc00;\n
    v49 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v136, 12, v49);\n
    v0 = &v136;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v136)) < 0)\n
        cgc__terminate();\n
    v326 = v138;\n
    *(v326) = *(v326) - 4;\n
    v327 = v139;\n
    *(v327) = &*(v327)->field_4;\n
    v54 ^= v40->field_260;\n
    if (v54)\n
        cgc___stack_cookie_fail();\n
    v328 = a0;\n
    if (*(v328) > 0 && v53 >= 0 && v53 < 0)\n
        v328 = *((&v55 + 0x4 * v53))(v220);\n
    v329 = v219;\n
    return v328;\n
}\n
", "5118478:sub_4e1a0e": null, "5118480:cgc_process_llamahemostat": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamahemostat(struct struct_0 **v57, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0x114]\n
    struct_1 *v1;  // [bp-0x110]\n
    unsigned int v2;  // [bp-0x10c]\n
    struct_1 *v3;  // [bp-0x108]\n
    char v4;  // [bp-0x101]\n
    struct_1 *v5;  // [bp-0x100]\n
    char v6;  // [bp-0xf9]\n
    struct_2 *v7;  // [bp-0xf8]\n
    unsigned short v8;  // [bp-0xf4]\n
    unsigned short v9;  // [bp-0xf2]\n
    unsigned short v10;  // [bp-0xf0]\n
    unsigned short v11;  // [bp-0xee]\n
    unsigned long v12;  // [bp-0xec]\n
    unsigned long v13;  // [bp-0xe4]\n
    struct struct_3 **v14;  // [bp-0xd8]\n
    unsigned int v15;  // [bp-0xd4]\n
    char v16;  // [bp-0xd0]\n
    char v17;  // [bp-0xcd]\n
    char v18[8];  // [bp-0xb8]\n
    unsigned int v19;  // [bp-0xb4]\n
    void* v20;  // [bp-0xb0]\n
    unsigned int *v21;  // [bp-0xac]\n
    struct struct_0 **v22;  // [bp-0xa8]\n
    unsigned int v23;  // [bp-0xa4]\n
    char v24;  // [bp-0x9d]\n
    unsigned int *v25;  // [bp-0x9c]\n
    struct struct_0 **v26;  // [bp-0x98]\n
    char *v27;  // [bp-0x94]\n
    unsigned int v28;  // [bp-0x90]\n
    unsigned int *v29;  // [bp-0x8c]\n
    struct struct_0 **v30;  // [bp-0x88]\n
    char v31;  // [bp-0x84]\n
    unsigned int v32;  // [bp-0x78]\n
    unsigned int *v33;  // [bp-0x74]\n
    struct struct_0 **v34;  // [bp-0x70]\n
    char v35;  // [bp-0x6c]\n
    unsigned int v36;  // [bp-0x60]\n
    unsigned int *v37;  // [bp-0x5c]\n
    struct struct_0 **v38;  // [bp-0x58]\n
    unsigned int v39;  // [bp-0x54]\n
    unsigned short v40;  // [bp-0x4e]\n
    unsigned int *v41;  // [bp-0x4c]\n
    struct struct_0 **v42;  // [bp-0x48]\n
    unsigned int v43;  // [bp-0x44]\n
    unsigned short v44;  // [bp-0x3e]\n
    unsigned int *v45;  // [bp-0x3c]\n
    struct struct_0 **v46;  // [bp-0x38]\n
    char v47;  // [bp-0x34]\n
    char v48[4];  // [bp-0x28]\n
    unsigned int v49;  // [bp-0x24]\n
    unsigned int *v50;  // [bp-0x20]\n
    struct struct_0 **v51;  // [bp-0x1c]\n
    unsigned int v52;  // [bp-0x18]\n
    char v53;  // [bp-0x11]\n
    unsigned int *v54;  // [bp-0x10]\n
    struct struct_0 **v55;  // [bp-0xc]\n
    unsigned int v56;  // [bp-0x8]\n
    unsigned int v58;  // ebx\n
    unsigned int *v59;  // eax\n
    struct struct_0 **v60;  // eax\n
    struct struct_0 **v61;  // eax\n
    unsigned int *v62;  // eax\n
    unsigned int *v63;  // eax\n
    struct struct_0 **v64;  // eax\n
    unsigned int *v65;  // eax\n
    struct struct_0 **v66;  // eax\n
    unsigned int *v67;  // eax\n
    struct struct_0 **v68;  // eax\n
    unsigned int *v69;  // eax\n
    struct struct_0 **v70;  // eax\n
    unsigned int *v71;  // eax\n
    struct struct_0 **v72;  // eax\n
    unsigned int *v73;  // eax\n
    struct struct_0 **v74;  // eax\n
    unsigned int *v75;  // eax\n
    struct struct_0 **v76;  // eax\n
    struct struct_0 **v77;  // eax\n
    unsigned int *v78;  // eax\n
    struct struct_0 **v80;  // eax\n
    unsigned int *v82;  // eax\n
    unsigned int *v83;  // eax\n
    struct struct_0 **v84;  // eax\n
    unsigned int *v85;  // eax\n
    struct struct_0 **v86;  // eax\n
    unsigned int *v87;  // eax, Other Possible Types: unsigned int\n
    unsigned int v88;  // ebx\n
\n
    v56 = v58;\n
    v7 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v15 = cgc__cookie;\n
    v14 = -1;\n
    if (cgc_sendline(1, \"===llamahemostat===\", 19) < 0)\n
        cgc__terminate();\n
    v55 = v57;\n
    v54 = a0;\n
    if (*(v54) < 1)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v53 = *(v55)->field_0;\n
    v59 = v54;\n
    *(v59) = *(v59) - 1;\n
    v60 = v55;\n
    *(v60) = &*(v60)->padding_1;\n
    if (v53 <= *(v54) && !(!v53))\n
        goto LABEL_4e1b7d;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e1b7d:\n
    v52 = cgc_calloc(v53);\n
    if (!v52)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v52, *(v55), v53);\n
    if (cgc_sendline(1, &v7[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v61 = v55;\n
    *(v61) = &(&*(v61)->field_0)[v53];\n
    v62 = v54;\n
    *(v62) = *(v62) - v53;\n
    cgc_checkheap();\n
    cgc_free(v52);\n
    v22 = v57;\n
    v21 = a0;\n
    *(&v18[0]) = *(v22);\n
    memset(&v17, 0, 21);\n
    if (*(v21) < 8)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v18[0])\n
    {\n
        v6 = 0;\n
        if (v18[1])\n
        {\n
            v6 = 0;\n
            if (v18[2])\n
            {\n
                v6 = 0;\n
                if (v18[3])\n
                {\n
                    v6 = 0;\n
                    if (v18[4] << 24)\n
                    {\n
                        v6 = 0;\n
                        if (v18[5] << 16)\n
                        {\n
                            v6 = 0;\n
                            if (v18[6] << 8)\n
                                v6 = v18[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v19 = v6 & 1;\n
    v20 = 0;\n
    cgc_uint2str(&v17, 21, v19);\n
    v5 = &v17;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v17)) < 0)\n
        cgc__terminate();\n
    v63 = v21;\n
    *(v63) = *(v63) - 8;\n
    v64 = v22;\n
    *(v64) = *(v64) + 1;\n
    v46 = v57;\n
    v45 = a0;\n
    if (*(v45) < 2)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v44 = *(&*(v46)->field_0);\n
    v65 = v45;\n
    *(v65) = *(v65) - 2;\n
    v66 = v46;\n
    *(v66) = &*(v66)->field_2;\n
    if (v44 <= *(v45) && !(!v44))\n
        goto LABEL_4e1fc0;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e1fc0:\n
    v43 = cgc_calloc(v44);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v43, *(v46), v44);\n
    if (cgc_sendline(1, &v7[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v67 = v45;\n
    *(v67) = *(v67) - v44;\n
    v68 = v46;\n
    *(v68) = &(&*(v68)->field_0)[v44];\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    v42 = v57;\n
    v41 = a0;\n
    if (*(v41) < 2)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = *(&*(v42)->field_0);\n
    v69 = v41;\n
    *(v69) = *(v69) - 2;\n
    v70 = v42;\n
    *(v70) = &*(v70)->field_2;\n
    if (v40 <= *(v41) && !(!v40))\n
        goto LABEL_4e21bb;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e21bb:\n
    v39 = cgc_calloc(v40);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v39, *(v42), v40);\n
    if (cgc_sendline(1, &v7[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v71 = v41;\n
    *(v71) = *(v71) - v40;\n
    v72 = v42;\n
    *(v72) = &(&*(v72)->field_0)[v40];\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    v51 = v57;\n
    v50 = a0;\n
    *(&v48[0]) = *(v51);\n
    memset(&v47, 0, 12);\n
    if (*(v50) < 4)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v48[0] << 24)\n
    {\n
        v4 = 0;\n
        if (v48[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v48[2] << 8)\n
                v4 = v48[3];\n
        }\n
    }\n
    v49 = v4 & 1;\n
    cgc_uint2str(&v47, 12, v49);\n
    v3 = &v47;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v73 = v50;\n
    *(v73) = *(v73) - 4;\n
    v74 = v51;\n
    *(v74) = &*(v74)->field_4;\n
    v26 = v57;\n
    v25 = a0;\n
    if (*(v25) < 1)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v24 = *(v26)->field_0;\n
    v75 = v25;\n
    *(v75) = *(v75) - 1;\n
    v76 = v26;\n
    *(v76) = &*(v76)->padding_1;\n
    if (v24 <= *(v25) && !(!v24))\n
        goto LABEL_4e2560;\n
    if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e2560:\n
    v23 = cgc_calloc(v24);\n
    if (!v23)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v23, *(v26), v24);\n
    if (cgc_sendline(1, &v7[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v77 = v26;\n
    *(v77) = &(&*(v77)->field_0)[v24];\n
    v78 = v25;\n
    *(v78) = *(v78) - v24;\n
    cgc_checkheap();\n
    cgc_free(v23);\n
    v30 = v57;\n
    v29 = a0;\n
    if (*(v29) <= 0)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v29) >= 128)\n
        v2 = 128;\n
    else\n
        v2 = *(v29);\n
    v28 = v2;\n
    if (!v28)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v27 = cgc_calloc(134);\n
    if (!v27)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v27, &v7[18].padding_0[182]);\n
    cgc_strncpy(v27 + 5, *(v30), v28);\n
    v80 = v30;\n
    *(v80) = &(&*(v80)->field_4)[cgc_strlen(v27)];\n
    v82 = v29;\n
    *(v82) = *(v82) - (cgc_strlen(v27) + -4);\n
    cgc_checkheap();\n
    cgc_free(v27);\n
    if (cgc_sendline(1, &v7[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v38 = v57;\n
    v37 = a0;\n
    memset(&v35, 0, 12);\n
    if (*(v37) < 4)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v36 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v11 = [D] x86g_create_fpucw(fpround<4>);\n
    v10 = v11 | 0xc00;\n
    v13 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v35, 12, v13);\n
    v1 = &v35;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v83 = v37;\n
    *(v83) = *(v83) - 4;\n
    v84 = v38;\n
    *(v84) = &*(v84)->field_4;\n
    v34 = v57;\n
    v33 = a0;\n
    memset(&v31, 0, 12);\n
    if (*(v33) < 4)\n
    {\n
        if (cgc_sendline(1, &v7[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v32 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v9 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-238, size=2, endness=Iend_LE)))));\n
    v8 = v9 | 0xc00;\n
    v12 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v31, 12, v12);\n
    v0 = &v31;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v31)) < 0)\n
        cgc__terminate();\n
    v85 = v33;\n
    *(v85) = *(v85) - 4;\n
    v86 = v34;\n
    *(v86) = &*(v86)->field_4;\n
    v15 ^= v7->field_260;\n
    if (v15)\n
        cgc___stack_cookie_fail();\n
    v87 = a0;\n
    if (*(v87) > 0 && v14 >= 0 && v14 < 0)\n
        v87 = *((&v16 + 0x4 * v14))(v57);\n
    v88 = v56;\n
    return v87;\n
}\n
", "5123110:sub_4e2c26": null, "5123120:cgc_process_llamamitigate": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamamitigate(struct struct_1 **v9, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x28]\n
    struct struct_0 **v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned short v5;  // [bp-0x12]\n
    unsigned int *v6;  // [bp-0x10]\n
    struct struct_1 **v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int *v11;  // eax\n
    struct struct_1 **v12;  // eax\n
    unsigned int *v13;  // eax\n
    struct struct_1 **v14;  // eax\n
    unsigned int *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v16;  // ebx\n
\n
    v8 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = cgc__cookie;\n
    v1 = -1;\n
    if (cgc_sendline(1, \"===llamamitigate===\", 19) < 0)\n
        cgc__terminate();\n
    v7 = v9;\n
    v6 = a0;\n
    if (*(v6) < 2)\n
    {\n
        if (cgc_sendline(1, &v0[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v5 = *(v7)->field_0;\n
    v11 = v6;\n
    *(v11) = *(v11) - 2;\n
    v12 = v7;\n
    *(v12) = *(v12) + 1;\n
    if (v5 <= *(v6) && !(!v5))\n
        goto LABEL_4e2d7e;\n
    if (cgc_sendline(1, &v0[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e2d7e:\n
    v4 = cgc_calloc(v5);\n
    if (!v4)\n
    {\n
        if (cgc_sendline(1, &v0[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v4, *(v7), v5);\n
    if (cgc_sendline(1, &v0[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v13 = v6;\n
    *(v13) = *(v13) - v5;\n
    v14 = v7;\n
    *(v14) = v5 + *(v14);\n
    cgc_checkheap();\n
    cgc_free(v4);\n
    v2 ^= v0->field_260;\n
    if (v2)\n
        cgc___stack_cookie_fail();\n
    v15 = a0;\n
    if (*(v15) > 0 && v1 >= 0 && v1 < 0)\n
        v15 = *((&v3 + 0x4 * v1))(v9);\n
    v16 = v8;\n
    return v15;\n
}\n
", "5123785:sub_4e2ec9": null, "5123792:cgc_process_llamamachar": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamamachar(struct struct_1 **v95, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x230]\n
    char v1;  // [bp-0x229]\n
    struct_0 *v2;  // [bp-0x228]\n
    struct_0 *v3;  // [bp-0x224]\n
    char v4;  // [bp-0x21d]\n
    struct_0 *v5;  // [bp-0x21c]\n
    struct_0 *v6;  // [bp-0x218]\n
    struct_0 *v7;  // [bp-0x214]\n
    char v8;  // [bp-0x20d]\n
    struct_0 *v9;  // [bp-0x20c]\n
    char v10;  // [bp-0x205]\n
    struct_0 *v11;  // [bp-0x204]\n
    unsigned int v12;  // [bp-0x200]\n
    struct_0 *v13;  // [bp-0x1fc]\n
    struct_2 *v14;  // [bp-0x1f8]\n
    unsigned short v15;  // [bp-0x1f4]\n
    unsigned short v16;  // [bp-0x1f2]\n
    unsigned short v17;  // [bp-0x1f0]\n
    unsigned short v18;  // [bp-0x1ee]\n
    unsigned short v19;  // [bp-0x1ec]\n
    unsigned short v20;  // [bp-0x1ea]\n
    unsigned short v21;  // [bp-0x1e8]\n
    unsigned short v22;  // [bp-0x1e6]\n
    unsigned long v23;  // [bp-0x1e4]\n
    unsigned long v24;  // [bp-0x1dc]\n
    unsigned long v25;  // [bp-0x1d4]\n
    unsigned long v26;  // [bp-0x1cc]\n
    struct struct_3 **v27;  // [bp-0x1c0]\n
    unsigned int v28;  // [bp-0x1bc]\n
    char v29;  // [bp-0x1b8]\n
    char v30;  // [bp-0x1b6]\n
    char v31[2];  // [bp-0x1b0]\n
    unsigned short v32;  // [bp-0x1aa]\n
    unsigned int *v33;  // [bp-0x1a8]\n
    struct struct_1 **v34;  // [bp-0x1a4]\n
    char v35;  // [bp-0x19d]\n
    char v36[5];  // [bp-0x188]\n
    unsigned int v37;  // [bp-0x184]\n
    void* v38;  // [bp-0x180]\n
    unsigned int *v39;  // [bp-0x178]\n
    struct struct_1 **v40;  // [bp-0x174]\n
    char v41;  // [bp-0x16d]\n
    char v42[8];  // [bp-0x158]\n
    unsigned int v43;  // [bp-0x154]\n
    void* v44;  // [bp-0x150]\n
    unsigned int *v45;  // [bp-0x148]\n
    struct struct_1 **v46;  // [bp-0x144]\n
    char v47;  // [bp-0x13d]\n
    char v48[8];  // [bp-0x128]\n
    unsigned int v49;  // [bp-0x124]\n
    void* v50;  // [bp-0x120]\n
    unsigned int *v51;  // [bp-0x11c]\n
    struct struct_1 **v52;  // [bp-0x118]\n
    unsigned int v53;  // [bp-0x114]\n
    char v54;  // [bp-0x10d]\n
    unsigned int *v55;  // [bp-0x10c]\n
    struct struct_1 **v56;  // [bp-0x108]\n
    char *v57;  // [bp-0x104]\n
    unsigned int v58;  // [bp-0x100]\n
    unsigned int *v59;  // [bp-0xfc]\n
    struct struct_1 **v60;  // [bp-0xf8]\n
    char v61;  // [bp-0xf1]\n
    unsigned long v62;  // [bp-0xdc]\n
    unsigned int *v63;  // [bp-0xd4]\n
    struct struct_1 **v64;  // [bp-0xd0]\n
    char v65;  // [bp-0xc9]\n
    unsigned long v66;  // [bp-0xb4]\n
    unsigned int *v67;  // [bp-0xac]\n
    struct struct_1 **v68;  // [bp-0xa8]\n
    char v69;  // [bp-0xa1]\n
    unsigned long v70;  // [bp-0x8c]\n
    unsigned int *v71;  // [bp-0x84]\n
    struct struct_1 **v72;  // [bp-0x80]\n
    char v73;  // [bp-0x7c]\n
    unsigned int v74;  // [bp-0x70]\n
    unsigned int *v75;  // [bp-0x6c]\n
    struct struct_1 **v76;  // [bp-0x68]\n
    unsigned int v77;  // [bp-0x64]\n
    unsigned short v78;  // [bp-0x5e]\n
    unsigned int *v79;  // [bp-0x5c]\n
    struct struct_1 **v80;  // [bp-0x58]\n
    unsigned int v81;  // [bp-0x54]\n
    unsigned short v82;  // [bp-0x4e]\n
    unsigned int *v83;  // [bp-0x4c]\n
    struct struct_1 **v84;  // [bp-0x48]\n
    char v85;  // [bp-0x41]\n
    unsigned int v86;  // [bp-0x2c]\n
    unsigned int v87;  // [bp-0x28]\n
    unsigned int *v88;  // [bp-0x20]\n
    struct struct_1 **v89;  // [bp-0x1c]\n
    unsigned int v90;  // [bp-0x18]\n
    char v91;  // [bp-0x11]\n
    unsigned int *v92;  // [bp-0x10]\n
    struct struct_1 **v93;  // [bp-0xc]\n
    unsigned int v94;  // [bp-0x8]\n
    unsigned int v96;  // ebx\n
    unsigned int *v97;  // eax\n
    struct struct_1 **v98;  // eax\n
    unsigned int *v99;  // eax\n
    struct struct_1 **v100;  // eax\n
    unsigned int *v101;  // eax\n
    struct struct_1 **v102;  // eax\n
    struct struct_1 **v104;  // eax\n
    unsigned int *v106;  // eax\n
    unsigned int *v107;  // eax\n
    struct struct_1 **v108;  // eax\n
    unsigned int *v109;  // eax\n
    struct struct_1 **v110;  // eax\n
    unsigned int *v111;  // eax\n
    struct struct_1 **v112;  // eax\n
    unsigned int *v113;  // eax\n
    struct struct_1 **v114;  // eax\n
    struct struct_1 **v115;  // eax\n
    unsigned int *v116;  // eax\n
    unsigned int *v117;  // eax\n
    struct struct_1 **v118;  // eax\n
    unsigned int *v119;  // eax\n
    struct struct_1 **v120;  // eax\n
    unsigned int *v121;  // eax\n
    struct struct_1 **v122;  // eax\n
    struct struct_1 **v123;  // eax\n
    unsigned int *v124;  // eax\n
    unsigned int *v125;  // eax\n
    struct struct_1 **v126;  // eax\n
    unsigned int *v127;  // eax\n
    struct struct_1 **v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_1 **v130;  // eax\n
    char v131[5];  // ecx\n
    unsigned int *v132;  // eax\n
    struct struct_1 **v133;  // eax\n
    unsigned int *v134;  // eax\n
    struct struct_1 **v135;  // eax\n
    unsigned int *v136;  // eax, Other Possible Types: unsigned int\n
    unsigned int v137;  // ebx\n
\n
    v94 = v96;\n
    v14 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v28 = cgc__cookie;\n
    v27 = -1;\n
    if (cgc_sendline(1, \"===llamamachar===\", 17) < 0)\n
        cgc__terminate();\n
    v72 = v95;\n
    v71 = a0;\n
    memset(&v69, 0, 21);\n
    if (*(v71) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v70 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v22 = [D] x86g_create_fpucw(fpround<4>);\n
    v21 = v22 | 0xc00;\n
    v26 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v69, 21, v26);\n
    v13 = &v69;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v69)) < 0)\n
        cgc__terminate();\n
    v97 = v71;\n
    *(v97) = *(v97) - 8;\n
    v98 = v72;\n
    *(v98) = &(*(v98))[1].padding_1[2];\n
    v84 = v95;\n
    v83 = a0;\n
    if (*(v83) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v82 = *(&*(v84)->field_0);\n
    v99 = v83;\n
    *(v99) = *(v99) - 2;\n
    v100 = v84;\n
    *(v100) = &*(v100)->padding_1[1];\n
    if (v82 <= *(v83) && !(!v82))\n
        goto LABEL_4e31a1;\n
    if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e31a1:\n
    v81 = cgc_calloc(v82);\n
    if (!v81)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v81, *(v84), v82);\n
    if (cgc_sendline(1, &v14[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v101 = v83;\n
    *(v101) = *(v101) - v82;\n
    v102 = v84;\n
    *(v102) = &(&*(v102)->field_0)[v82];\n
    cgc_checkheap();\n
    cgc_free(v81);\n
    v60 = v95;\n
    v59 = a0;\n
    if (*(v59) <= 0)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v59) >= 128)\n
        v12 = 128;\n
    else\n
        v12 = *(v59);\n
    v58 = v12;\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v57 = cgc_calloc(134);\n
    if (!v57)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v57, &v14[18].padding_0[182]);\n
    cgc_strncpy(v57 + 5, *(v60), v58);\n
    v104 = v60;\n
    *(v104) = &(&*(v104)->field_4)[cgc_strlen(v57)];\n
    v106 = v59;\n
    *(v106) = *(v106) - (cgc_strlen(v57) + -4);\n
    cgc_checkheap();\n
    cgc_free(v57);\n
    if (cgc_sendline(1, &v14[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v68 = v95;\n
    v67 = a0;\n
    memset(&v65, 0, 21);\n
    if (*(v67) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v66 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v20 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-486, size=2, endness=Iend_LE)))));\n
    v19 = v20 | 0xc00;\n
    v25 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v65, 21, v25);\n
    v11 = &v65;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v65)) < 0)\n
        cgc__terminate();\n
    v107 = v67;\n
    *(v107) = *(v107) - 8;\n
    v108 = v68;\n
    *(v108) = &(*(v108))[1].padding_1[2];\n
    v34 = v95;\n
    v33 = a0;\n
    *(&v31) = *(v34);\n
    memset(&v30, 0, 6);\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (v31[0] << 8)\n
        v10 = v31[1];\n
    v32 = v10 & 1;\n
    cgc_uint2str(&v30, 6, v32);\n
    v9 = &v30;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v30)) < 0)\n
        cgc__terminate();\n
    v109 = v33;\n
    *(v109) = *(v109) - 2;\n
    v110 = v34;\n
    *(v110) = &*(v110)->padding_1[1];\n
    v52 = v95;\n
    v51 = a0;\n
    *(&v48[0]) = *(v52);\n
    memset(&v47, 0, 21);\n
    if (*(v51) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v48[0])\n
    {\n
        v8 = 0;\n
        if (v48[1])\n
        {\n
            v8 = 0;\n
            if (v48[2])\n
            {\n
                v8 = 0;\n
                if (v48[3])\n
                {\n
                    v8 = 0;\n
                    if (v48[4] << 24)\n
                    {\n
                        v8 = 0;\n
                        if (v48[5] << 16)\n
                        {\n
                            v8 = 0;\n
                            if (v48[6] << 8)\n
                                v8 = v48[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v49 = v8 & 1;\n
    v50 = 0;\n
    cgc_uint2str(&v47, 21, v49);\n
    v7 = &v47;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v47)) < 0)\n
        cgc__terminate();\n
    v111 = v51;\n
    *(v111) = *(v111) - 8;\n
    v112 = v52;\n
    *(v112) = &(*(v112))[1].padding_1[2];\n
    v93 = v95;\n
    v92 = a0;\n
    if (*(v92) < 1)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(v93)->field_0;\n
    v113 = v92;\n
    *(v113) = *(v113) - 1;\n
    v114 = v93;\n
    *(v114) = &*(v114)->padding_1;\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_4e3b5e;\n
    if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e3b5e:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, &v14[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v115 = v93;\n
    *(v115) = &(&*(v115)->field_0)[v91];\n
    v116 = v92;\n
    *(v116) = *(v116) - v91;\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v80 = v95;\n
    v79 = a0;\n
    if (*(v79) < 2)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v78 = *(&*(v80)->field_0);\n
    v117 = v79;\n
    *(v117) = *(v117) - 2;\n
    v118 = v80;\n
    *(v118) = &*(v118)->padding_1[1];\n
    if (v78 <= *(v79) && !(!v78))\n
        goto LABEL_4e3d59;\n
    if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e3d59:\n
    v77 = cgc_calloc(v78);\n
    if (!v77)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v77, *(v80), v78);\n
    if (cgc_sendline(1, &v14[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v119 = v79;\n
    *(v119) = *(v119) - v78;\n
    v120 = v80;\n
    *(v120) = &(&*(v120)->field_0)[v78];\n
    cgc_checkheap();\n
    cgc_free(v77);\n
    v56 = v95;\n
    v55 = a0;\n
    if (*(v55) < 1)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = *(v56)->field_0;\n
    v121 = v55;\n
    *(v121) = *(v121) - 1;\n
    v122 = v56;\n
    *(v122) = &*(v122)->padding_1;\n
    if (v54 <= *(v55) && !(!v54))\n
        goto LABEL_4e3f70;\n
    if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e3f70:\n
    v53 = cgc_calloc(v54);\n
    if (!v53)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v53, *(v56), v54);\n
    if (cgc_sendline(1, &v14[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v123 = v56;\n
    *(v123) = &(&*(v123)->field_0)[v54];\n
    v124 = v55;\n
    *(v124) = *(v124) - v54;\n
    cgc_checkheap();\n
    cgc_free(v53);\n
    v64 = v95;\n
    v63 = a0;\n
    memset(&v61, 0, 21);\n
    if (*(v63) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v62 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v18 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-490, size=2, endness=Iend_LE)))));\n
    v17 = v18 | 0xc00;\n
    v24 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v61, 21, v24);\n
    v6 = &v61;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v61)) < 0)\n
        cgc__terminate();\n
    v125 = v63;\n
    *(v125) = *(v125) - 8;\n
    v126 = v64;\n
    *(v126) = &(*(v126))[1].padding_1[2];\n
    v76 = v95;\n
    v75 = a0;\n
    memset(&v73, 0, 12);\n
    if (*(v75) < 4)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v74 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v16 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-494, size=2, endness=Iend_LE)))));\n
    v15 = v16 | 0xc00;\n
    v23 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v73, 12, v23);\n
    v5 = &v73;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v73)) < 0)\n
        cgc__terminate();\n
    v127 = v75;\n
    *(v127) = *(v127) - 4;\n
    v128 = v76;\n
    *(v128) = &*(v128)->field_4;\n
    v46 = v95;\n
    v45 = a0;\n
    *(&v42[0]) = *(v46);\n
    memset(&v41, 0, 21);\n
    if (*(v45) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v42[0])\n
    {\n
        v4 = 0;\n
        if (v42[1])\n
        {\n
            v4 = 0;\n
            if (v42[2])\n
            {\n
                v4 = 0;\n
                if (v42[3])\n
                {\n
                    v4 = 0;\n
                    if (v42[4] << 24)\n
                    {\n
                        v4 = 0;\n
                        if (v42[5] << 16)\n
                        {\n
                            v4 = 0;\n
                            if (v42[6] << 8)\n
                                v4 = v42[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v43 = v4 & 1;\n
    v44 = 0;\n
    cgc_uint2str(&v41, 21, v43);\n
    v3 = &v41;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v41)) < 0)\n
        cgc__terminate();\n
    v129 = v45;\n
    *(v129) = *(v129) - 8;\n
    v130 = v46;\n
    *(v130) = &(*(v130))[1].padding_1[2];\n
    v89 = v95;\n
    v88 = a0;\n
    memset(&v85, 0, 21);\n
    if (*(v88) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v131 = *(v89);\n
    v87 = *(&v131[4]);\n
    v86 = *(&v131[0]);\n
    cgc_uint2str(&v85, 21, v86);\n
    v2 = &v85;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v85)) < 0)\n
        cgc__terminate();\n
    v132 = v88;\n
    *(v132) = *(v132) - 8;\n
    v133 = v89;\n
    *(v133) = &(*(v133))[1].padding_1[2];\n
    v40 = v95;\n
    v39 = a0;\n
    *(&v36[0]) = *(v40);\n
    memset(&v35, 0, 21);\n
    if (*(v39) < 8)\n
    {\n
        if (cgc_sendline(1, &v14[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v36[0])\n
    {\n
        v1 = 0;\n
        if (v36[1])\n
        {\n
            v1 = 0;\n
            if (v36[2])\n
            {\n
                v1 = 0;\n
                if (v36[3])\n
                {\n
                    v1 = 0;\n
                    if (v36[4] << 24)\n
                    {\n
                        v1 = 0;\n
                        if (v36[1] << 16)\n
                        {\n
                            v1 = 0;\n
                            if (v36[1 + 1] << 8)\n
                                v1 = v36[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v37 = v1 & 1;\n
    v38 = 0;\n
    cgc_uint2str(&v35, 21, v37);\n
    v0 = &v35;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v35)) < 0)\n
        cgc__terminate();\n
    v134 = v39;\n
    *(v134) = *(v134) - 8;\n
    v135 = v40;\n
    *(v135) = &(*(v135))[1].padding_1[2];\n
    v28 ^= v14->field_260;\n
    if (v28)\n
        cgc___stack_cookie_fail();\n
    v136 = a0;\n
    if (*(v136) > 0 && v27 >= 0 && v27 < 0)\n
        v136 = *((&v29 + 0x4 * v27))(v95);\n
    v137 = v94;\n
    return v136;\n
}\n
", "5130638:sub_4e498e": null, "5130640:cgc_process_llamafactorization": "typedef struct struct_3 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamafactorization(struct struct_1 **v93, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x1e8]\n
    struct_0 *v1;  // [bp-0x1e4]\n
    struct_0 *v2;  // [bp-0x1e0]\n
    struct_0 *v3;  // [bp-0x1dc]\n
    char v4;  // [bp-0x1d5]\n
    struct_0 *v5;  // [bp-0x1d4]\n
    char v6;  // [bp-0x1cd]\n
    struct_0 *v7;  // [bp-0x1cc]\n
    struct_0 *v8;  // [bp-0x1c8]\n
    char v9;  // [bp-0x1c1]\n
    struct_0 *v10;  // [bp-0x1c0]\n
    char v11;  // [bp-0x1b9]\n
    struct_0 *v12;  // [bp-0x1b8]\n
    struct_0 *v13;  // [bp-0x1b4]\n
    char v14;  // [bp-0x1ad]\n
    struct_0 *v15;  // [bp-0x1ac]\n
    struct_0 *v16;  // [bp-0x1a8]\n
    struct_3 *v17;  // [bp-0x1a4]\n
    unsigned short v18;  // [bp-0x1a0]\n
    unsigned short v19;  // [bp-0x19e]\n
    unsigned long v20;  // [bp-0x19c]\n
    struct struct_2 **v21;  // [bp-0x190]\n
    unsigned int v22;  // [bp-0x18c]\n
    char v23;  // [bp-0x188]\n
    char v24;  // [bp-0x186]\n
    char v25[2];  // [bp-0x180]\n
    unsigned short v26;  // [bp-0x17a]\n
    unsigned int *v27;  // [bp-0x178]\n
    struct struct_1 **v28;  // [bp-0x174]\n
    char v29;  // [bp-0x16e]\n
    char v30[2];  // [bp-0x168]\n
    unsigned short v31;  // [bp-0x162]\n
    unsigned int *v32;  // [bp-0x160]\n
    struct struct_1 **v33;  // [bp-0x15c]\n
    char v34;  // [bp-0x156]\n
    char v35[2];  // [bp-0x150]\n
    unsigned short v36;  // [bp-0x14a]\n
    unsigned int *v37;  // [bp-0x148]\n
    struct struct_1 **v38;  // [bp-0x144]\n
    char v39;  // [bp-0x13d]\n
    char v40[5];  // [bp-0x128]\n
    unsigned int v41;  // [bp-0x124]\n
    void* v42;  // [bp-0x120]\n
    unsigned int *v43;  // [bp-0x118]\n
    struct struct_1 **v44;  // [bp-0x114]\n
    char v45;  // [bp-0x10d]\n
    char v46[8];  // [bp-0xf8]\n
    unsigned int v47;  // [bp-0xf4]\n
    void* v48;  // [bp-0xf0]\n
    unsigned int *v49;  // [bp-0xec]\n
    struct struct_1 **v50;  // [bp-0xe8]\n
    unsigned int v51;  // [bp-0xe4]\n
    char v52;  // [bp-0xdd]\n
    unsigned int *v53;  // [bp-0xdc]\n
    struct struct_1 **v54;  // [bp-0xd8]\n
    char v55;  // [bp-0xd4]\n
    unsigned short v56;  // [bp-0xce]\n
    unsigned int *v57;  // [bp-0xcc]\n
    struct struct_1 **v58;  // [bp-0xc8]\n
    char v59;  // [bp-0xc4]\n
    unsigned int v60;  // [bp-0xb8]\n
    unsigned int *v61;  // [bp-0xb4]\n
    struct struct_1 **v62;  // [bp-0xb0]\n
    char v63;  // [bp-0xac]\n
    unsigned int v64;  // [bp-0xa0]\n
    unsigned int *v65;  // [bp-0x9c]\n
    struct struct_1 **v66;  // [bp-0x98]\n
    char v67;  // [bp-0x94]\n
    unsigned int v68;  // [bp-0x88]\n
    unsigned int *v69;  // [bp-0x84]\n
    struct struct_1 **v70;  // [bp-0x80]\n
    char v71;  // [bp-0x7c]\n
    unsigned int v72;  // [bp-0x70]\n
    unsigned int *v73;  // [bp-0x6c]\n
    struct struct_1 **v74;  // [bp-0x68]\n
    unsigned int v75;  // [bp-0x64]\n
    unsigned short v76;  // [bp-0x5e]\n
    unsigned int *v77;  // [bp-0x5c]\n
    struct struct_1 **v78;  // [bp-0x58]\n
    char *v79;  // [bp-0x54]\n
    unsigned int v80;  // [bp-0x50]\n
    unsigned int *v81;  // [bp-0x4c]\n
    struct struct_1 **v82;  // [bp-0x48]\n
    char v83;  // [bp-0x41]\n
    unsigned int v84;  // [bp-0x2c]\n
    unsigned int v85;  // [bp-0x28]\n
    unsigned int *v86;  // [bp-0x20]\n
    struct struct_1 **v87;  // [bp-0x1c]\n
    unsigned int v88;  // [bp-0x18]\n
    char v89;  // [bp-0x11]\n
    unsigned int *v90;  // [bp-0x10]\n
    struct struct_1 **v91;  // [bp-0xc]\n
    unsigned int v92;  // [bp-0x8]\n
    unsigned int v94;  // ebx\n
    unsigned int *v95;  // eax\n
    struct struct_1 **v96;  // eax\n
    unsigned int *v97;  // eax\n
    struct struct_1 **v98;  // eax\n
    unsigned int *v99;  // eax\n
    struct struct_1 **v100;  // eax\n
    unsigned int *v101;  // eax\n
    struct struct_1 **v102;  // eax\n
    struct struct_1 **v103;  // eax\n
    unsigned int *v104;  // eax\n
    char v105[5];  // ecx\n
    unsigned int *v106;  // eax\n
    struct struct_1 **v107;  // eax\n
    unsigned int *v108;  // eax\n
    struct struct_1 **v109;  // eax\n
    unsigned int *v110;  // eax\n
    struct struct_1 **v111;  // eax\n
    unsigned int *v112;  // eax\n
    struct struct_1 **v113;  // eax\n
    unsigned int *v114;  // eax\n
    struct struct_1 **v115;  // eax\n
    unsigned int *v116;  // eax\n
    struct struct_1 **v117;  // eax\n
    unsigned int *v118;  // eax\n
    struct struct_1 **v119;  // eax\n
    unsigned int *v120;  // eax\n
    struct struct_1 **v121;  // eax\n
    unsigned int *v122;  // eax\n
    struct struct_1 **v123;  // eax\n
    unsigned int *v124;  // eax\n
    struct struct_1 **v125;  // eax\n
    struct struct_1 **v127;  // eax\n
    unsigned int *v129;  // eax\n
    unsigned int *v130;  // eax\n
    struct struct_1 **v131;  // eax\n
    struct struct_1 **v132;  // eax\n
    unsigned int *v133;  // eax\n
    unsigned int *v134;  // eax, Other Possible Types: unsigned int\n
    unsigned int v135;  // ebx\n
\n
    v92 = v94;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v22 = cgc__cookie;\n
    v21 = -1;\n
    if (cgc_sendline(1, \"===llamafactorization===\", 24) < 0)\n
        cgc__terminate();\n
    v74 = v93;\n
    v73 = a0;\n
    memset(&v71, 0, 12);\n
    if (*(v73) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v72 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v71, 12, v20);\n
    v16 = &v71;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v71)) < 0)\n
        cgc__terminate();\n
    v95 = v73;\n
    *(v95) = *(v95) - 4;\n
    v96 = v74;\n
    *(v96) = &*(v96)->field_4;\n
    v78 = v93;\n
    v77 = a0;\n
    if (*(v77) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v76 = *(&*(v78)->field_0);\n
    v97 = v77;\n
    *(v97) = *(v97) - 2;\n
    v98 = v78;\n
    *(v98) = &*(v98)->padding_1[1];\n
    if (v76 <= *(v77) && !(!v76))\n
        goto LABEL_4e4c4f;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e4c4f:\n
    v75 = cgc_calloc(v76);\n
    if (!v75)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v75, *(v78), v76);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v99 = v77;\n
    *(v99) = *(v99) - v76;\n
    v100 = v78;\n
    *(v100) = &(&*(v100)->field_0)[v76];\n
    cgc_checkheap();\n
    cgc_free(v75);\n
    v54 = v93;\n
    v53 = a0;\n
    if (*(v53) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v52 = *(v54)->field_0;\n
    v101 = v53;\n
    *(v101) = *(v101) - 1;\n
    v102 = v54;\n
    *(v102) = &*(v102)->padding_1;\n
    if (v52 <= *(v53) && !(!v52))\n
        goto LABEL_4e4e66;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e4e66:\n
    v51 = cgc_calloc(v52);\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v51, *(v54), v52);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v103 = v54;\n
    *(v103) = &(&*(v103)->field_0)[v52];\n
    v104 = v53;\n
    *(v104) = *(v104) - v52;\n
    cgc_checkheap();\n
    cgc_free(v51);\n
    v87 = v93;\n
    v86 = a0;\n
    memset(&v83, 0, 21);\n
    if (*(v86) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v105 = *(v87);\n
    v85 = *(&v105[4]);\n
    v84 = *(&v105[0]);\n
    cgc_uint2str(&v83, 21, v84);\n
    v15 = &v83;\n
    if (cgc_sendline(1, v15, cgc_strlen(&v83)) < 0)\n
        cgc__terminate();\n
    v106 = v86;\n
    *(v106) = *(v106) - 8;\n
    v107 = v87;\n
    *(v107) = &(*(v107))[1].padding_1[2];\n
    v38 = v93;\n
    v37 = a0;\n
    *(&v35) = *(v38);\n
    memset(&v34, 0, 6);\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v14 = 0;\n
    if (v35[0] << 8)\n
        v14 = v35[1];\n
    v36 = v14 & 1;\n
    cgc_uint2str(&v34, 6, v36);\n
    v13 = &v34;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v34)) < 0)\n
        cgc__terminate();\n
    v108 = v37;\n
    *(v108) = *(v108) - 2;\n
    v109 = v38;\n
    *(v109) = &*(v109)->padding_1[1];\n
    v70 = v93;\n
    v69 = a0;\n
    memset(&v67, 0, 12);\n
    if (*(v69) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v68 = *(&*(v70)->field_0);\n
    cgc_uint2str(&v67, 12, v68);\n
    v12 = &v67;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v67)) < 0)\n
        cgc__terminate();\n
    v110 = v69;\n
    *(v110) = *(v110) - 4;\n
    v111 = v70;\n
    *(v111) = &*(v111)->field_4;\n
    v50 = v93;\n
    v49 = a0;\n
    *(&v46[0]) = *(v50);\n
    memset(&v45, 0, 21);\n
    if (*(v49) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v46[0])\n
    {\n
        v11 = 0;\n
        if (v46[1])\n
        {\n
            v11 = 0;\n
            if (v46[2])\n
            {\n
                v11 = 0;\n
                if (v46[3])\n
                {\n
                    v11 = 0;\n
                    if (v46[4] << 24)\n
                    {\n
                        v11 = 0;\n
                        if (v46[5] << 16)\n
                        {\n
                            v11 = 0;\n
                            if (v46[6] << 8)\n
                                v11 = v46[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v47 = v11 & 1;\n
    v48 = 0;\n
    cgc_uint2str(&v45, 21, v47);\n
    v10 = &v45;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v45)) < 0)\n
        cgc__terminate();\n
    v112 = v49;\n
    *(v112) = *(v112) - 8;\n
    v113 = v50;\n
    *(v113) = &(*(v113))[1].padding_1[2];\n
    v44 = v93;\n
    v43 = a0;\n
    *(&v40[0]) = *(v44);\n
    memset(&v39, 0, 21);\n
    if (*(v43) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v9 = 0;\n
    if (v40[0])\n
    {\n
        v9 = 0;\n
        if (v40[1])\n
        {\n
            v9 = 0;\n
            if (v40[2])\n
            {\n
                v9 = 0;\n
                if (v40[3])\n
                {\n
                    v9 = 0;\n
                    if (v40[4] << 24)\n
                    {\n
                        v9 = 0;\n
                        if (v40[1] << 16)\n
                        {\n
                            v9 = 0;\n
                            if (v40[1 + 1] << 8)\n
                                v9 = v40[1 + 2];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v41 = v9 & 1;\n
    v42 = 0;\n
    cgc_uint2str(&v39, 21, v41);\n
    v8 = &v39;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v39)) < 0)\n
        cgc__terminate();\n
    v114 = v43;\n
    *(v114) = *(v114) - 8;\n
    v115 = v44;\n
    *(v115) = &(*(v115))[1].padding_1[2];\n
    v66 = v93;\n
    v65 = a0;\n
    memset(&v63, 0, 12);\n
    if (*(v65) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v64 = *(&*(v66)->field_0);\n
    cgc_uint2str(&v63, 12, v64);\n
    v7 = &v63;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v63)) < 0)\n
        cgc__terminate();\n
    v116 = v65;\n
    *(v116) = *(v116) - 4;\n
    v117 = v66;\n
    *(v117) = &*(v117)->field_4;\n
    v33 = v93;\n
    v32 = a0;\n
    *(&v30) = *(v33);\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v6 = 0;\n
    if (v30[0] << 8)\n
        v6 = v30[1];\n
    v31 = v6 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v5 = &v29;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v118 = v32;\n
    *(v118) = *(v118) - 2;\n
    v119 = v33;\n
    *(v119) = &*(v119)->padding_1[1];\n
    v28 = v93;\n
    v27 = a0;\n
    *(&v25) = *(v28);\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v25[0] << 8)\n
        v4 = v25[1];\n
    v26 = v4 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v3 = &v24;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v120 = v27;\n
    *(v120) = *(v120) - 2;\n
    v121 = v28;\n
    *(v121) = &*(v121)->padding_1[1];\n
    v58 = v93;\n
    v57 = a0;\n
    memset(&v55, 0, 6);\n
    if (*(v57) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v56 = *(&*(v58)->field_0);\n
    cgc_uint2str(&v55, 6, v56);\n
    v2 = &v55;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v55)) < 0)\n
        cgc__terminate();\n
    v122 = v57;\n
    *(v122) = *(v122) - 2;\n
    v123 = v58;\n
    *(v123) = &*(v123)->padding_1[1];\n
    v62 = v93;\n
    v61 = a0;\n
    memset(&v59, 0, 12);\n
    if (*(v61) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v60 = *(&*(v62)->field_0);\n
    cgc_uint2str(&v59, 12, v60);\n
    v1 = &v59;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v59)) < 0)\n
        cgc__terminate();\n
    v124 = v61;\n
    *(v124) = *(v124) - 4;\n
    v125 = v62;\n
    *(v125) = &*(v125)->field_4;\n
    v82 = v93;\n
    v81 = a0;\n
    if (*(v81) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v81) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v81);\n
    v80 = v0;\n
    if (!v80)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = cgc_calloc(134);\n
    if (!v79)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v79, &v17[18].padding_0[182]);\n
    cgc_strncpy(v79 + 5, *(v82), v80);\n
    v127 = v82;\n
    *(v127) = &(&*(v127)->field_4)[cgc_strlen(v79)];\n
    v129 = v81;\n
    *(v129) = *(v129) - (cgc_strlen(v79) + -4);\n
    cgc_checkheap();\n
    cgc_free(v79);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v91 = v93;\n
    v90 = a0;\n
    if (*(v90) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v89 = *(v91)->field_0;\n
    v130 = v90;\n
    *(v130) = *(v130) - 1;\n
    v131 = v91;\n
    *(v131) = &*(v131)->padding_1;\n
    if (v89 <= *(v90) && !(!v89))\n
        goto LABEL_4e6212;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e6212:\n
    v88 = cgc_calloc(v89);\n
    if (!v88)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v88, *(v91), v89);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v132 = v91;\n
    *(v132) = &(&*(v132)->field_0)[v89];\n
    v133 = v90;\n
    *(v133) = *(v133) - v89;\n
    cgc_checkheap();\n
    cgc_free(v88);\n
    v22 ^= v17->field_260;\n
    if (v22)\n
        cgc___stack_cookie_fail();\n
    v134 = a0;\n
    if (*(v134) > 0 && v21 >= 0 && v21 < 0)\n
        v134 = *((&v23 + 0x4 * v21))(v93);\n
    v135 = v92;\n
    return v134;\n
}\n
", "5137302:sub_4e6396": null, "5137312:cgc_process_llamaantimaterialistic": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamaantimaterialistic(struct struct_0 **v138, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x278]\n
    unsigned int v1;  // [bp-0x274]\n
    struct_3 *v2;  // [bp-0x270]\n
    struct_3 *v3;  // [bp-0x26c]\n
    char v4;  // [bp-0x265]\n
    unsigned int v5;  // [bp-0x264]\n
    struct_3 *v6;  // [bp-0x260]\n
    struct_3 *v7;  // [bp-0x25c]\n
    char v8;  // [bp-0x255]\n
    struct_3 *v9;  // [bp-0x254]\n
    char v10;  // [bp-0x24d]\n
    struct_3 *v11;  // [bp-0x24c]\n
    struct_3 *v12;  // [bp-0x248]\n
    unsigned int v13;  // [bp-0x244]\n
    struct_3 *v14;  // [bp-0x240]\n
    char v15;  // [bp-0x239]\n
    unsigned int v16;  // [bp-0x238]\n
    struct_2 *v17;  // [bp-0x234]\n
    unsigned short v18;  // [bp-0x230]\n
    unsigned short v19;  // [bp-0x22e]\n
    unsigned long v20;  // [bp-0x22c]\n
    struct struct_1 **v21;  // [bp-0x224]\n
    unsigned int v22;  // [bp-0x220]\n
    char v23;  // [bp-0x21c]\n
    char v24;  // [bp-0x21a]\n
    char *v25;  // [bp-0x214]\n
    unsigned short v26;  // [bp-0x20e]\n
    unsigned int *v27;  // [bp-0x20c]\n
    struct struct_0 **v28;  // [bp-0x208]\n
    char v29;  // [bp-0x202]\n
    char *v30;  // [bp-0x1fc]\n
    unsigned short v31;  // [bp-0x1f6]\n
    unsigned int *v32;  // [bp-0x1f4]\n
    struct struct_0 **v33;  // [bp-0x1f0]\n
    unsigned int v34;  // [bp-0x1ec]\n
    char v35;  // [bp-0x1e5]\n
    unsigned int *v36;  // [bp-0x1e4]\n
    struct struct_0 **v37;  // [bp-0x1e0]\n
    unsigned int v38;  // [bp-0x1dc]\n
    char v39;  // [bp-0x1d5]\n
    unsigned int *v40;  // [bp-0x1d4]\n
    struct struct_0 **v41;  // [bp-0x1d0]\n
    unsigned int v42;  // [bp-0x1cc]\n
    char v43;  // [bp-0x1c5]\n
    unsigned int *v44;  // [bp-0x1c4]\n
    struct struct_0 **v45;  // [bp-0x1c0]\n
    char *v46;  // [bp-0x1bc]\n
    unsigned int v47;  // [bp-0x1b8]\n
    unsigned int *v48;  // [bp-0x1b4]\n
    struct struct_0 **v49;  // [bp-0x1b0]\n
    char *v50;  // [bp-0x1ac]\n
    unsigned int v51;  // [bp-0x1a8]\n
    unsigned int *v52;  // [bp-0x1a4]\n
    struct struct_0 **v53;  // [bp-0x1a0]\n
    char *v54;  // [bp-0x19c]\n
    unsigned int v55;  // [bp-0x198]\n
    unsigned int *v56;  // [bp-0x194]\n
    struct struct_0 **v57;  // [bp-0x190]\n
    char *v58;  // [bp-0x18c]\n
    unsigned int v59;  // [bp-0x188]\n
    unsigned int *v60;  // [bp-0x184]\n
    struct struct_0 **v61;  // [bp-0x180]\n
    char *v62;  // [bp-0x17c]\n
    unsigned int v63;  // [bp-0x178]\n
    unsigned int *v64;  // [bp-0x174]\n
    struct struct_0 **v65;  // [bp-0x170]\n
    char v66;  // [bp-0x169]\n
    char v67;  // [bp-0x165]\n
    unsigned int *v68;  // [bp-0x164]\n
    struct struct_0 **v69;  // [bp-0x160]\n
    char v70;  // [bp-0x159]\n
    unsigned long v71;  // [bp-0x144]\n
    unsigned int *v72;  // [bp-0x13c]\n
    struct struct_0 **v73;  // [bp-0x138]\n
    char v74;  // [bp-0x134]\n
    unsigned int v75;  // [bp-0x128]\n
    unsigned int *v76;  // [bp-0x124]\n
    struct struct_0 **v77;  // [bp-0x120]\n
    unsigned int v78;  // [bp-0x11c]\n
    unsigned short v79;  // [bp-0x116]\n
    unsigned int *v80;  // [bp-0x114]\n
    struct struct_0 **v81;  // [bp-0x110]\n
    unsigned int v82;  // [bp-0x10c]\n
    unsigned short v83;  // [bp-0x106]\n
    unsigned int *v84;  // [bp-0x104]\n
    struct struct_0 **v85;  // [bp-0x100]\n
    unsigned int v86;  // [bp-0xfc]\n
    unsigned short v87;  // [bp-0xf6]\n
    unsigned int *v88;  // [bp-0xf4]\n
    struct struct_0 **v89;  // [bp-0xf0]\n
    unsigned int v90;  // [bp-0xec]\n
    unsigned short v91;  // [bp-0xe6]\n
    unsigned int *v92;  // [bp-0xe4]\n
    struct struct_0 **v93;  // [bp-0xe0]\n
    unsigned int v94;  // [bp-0xdc]\n
    unsigned short v95;  // [bp-0xd6]\n
    unsigned int *v96;  // [bp-0xd4]\n
    struct struct_0 **v97;  // [bp-0xd0]\n
    unsigned int v98;  // [bp-0xcc]\n
    unsigned short v99;  // [bp-0xc6]\n
    unsigned int *v100;  // [bp-0xc4]\n
    struct struct_0 **v101;  // [bp-0xc0]\n
    char v102;  // [bp-0xbc]\n
    char v103[4];  // [bp-0xb0]\n
    unsigned int v104;  // [bp-0xac]\n
    unsigned int *v105;  // [bp-0xa8]\n
    struct struct_0 **v106;  // [bp-0xa4]\n
    char v107;  // [bp-0xa0]\n
    char v108[4];  // [bp-0x94]\n
    unsigned int v109;  // [bp-0x90]\n
    unsigned int *v110;  // [bp-0x8c]\n
    struct struct_0 **v111;  // [bp-0x88]\n
    char v112;  // [bp-0x81]\n
    unsigned int v113;  // [bp-0x6c]\n
    unsigned int v114;  // [bp-0x68]\n
    unsigned int *v115;  // [bp-0x60]\n
    struct struct_0 **v116;  // [bp-0x5c]\n
    unsigned int v117;  // [bp-0x58]\n
    char v118;  // [bp-0x51]\n
    unsigned int *v119;  // [bp-0x50]\n
    struct struct_0 **v120;  // [bp-0x4c]\n
    unsigned int v121;  // [bp-0x48]\n
    char v122;  // [bp-0x41]\n
    unsigned int *v123;  // [bp-0x40]\n
    struct struct_0 **v124;  // [bp-0x3c]\n
    unsigned int v125;  // [bp-0x38]\n
    char v126;  // [bp-0x31]\n
    unsigned int *v127;  // [bp-0x30]\n
    struct struct_0 **v128;  // [bp-0x2c]\n
    unsigned int v129;  // [bp-0x28]\n
    char v130;  // [bp-0x21]\n
    unsigned int *v131;  // [bp-0x20]\n
    struct struct_0 **v132;  // [bp-0x1c]\n
    unsigned int v133;  // [bp-0x18]\n
    char v134;  // [bp-0x11]\n
    unsigned int *v135;  // [bp-0x10]\n
    struct struct_0 **v136;  // [bp-0xc]\n
    unsigned int v137;  // [bp-0x8]\n
    unsigned int v139;  // ebx\n
    struct struct_0 **v141;  // eax\n
    unsigned int *v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_0 **v145;  // eax\n
    struct struct_0 **v147;  // eax\n
    unsigned int *v149;  // eax\n
    unsigned int *v150;  // eax\n
    struct struct_0 **v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_0 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_0 **v155;  // eax\n
    unsigned int *v156;  // eax\n
    struct struct_0 **v157;  // eax\n
    struct struct_0 **v158;  // eax\n
    unsigned int *v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_0 **v161;  // eax\n
    unsigned int *v162;  // eax\n
    struct struct_0 **v163;  // eax\n
    struct struct_0 **v164;  // eax\n
    unsigned int *v165;  // eax\n
    unsigned int v166[2];  // ecx\n
    unsigned int *v167;  // eax\n
    struct struct_0 **v168;  // eax\n
    unsigned int *v169;  // eax\n
    struct struct_0 **v170;  // eax\n
    struct struct_0 **v171;  // eax\n
    unsigned int *v172;  // eax\n
    unsigned int *v173;  // eax\n
    struct struct_0 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    struct struct_0 **v176;  // eax\n
    struct struct_0 **v178;  // eax\n
    unsigned int *v180;  // eax\n
    unsigned int *v181;  // eax\n
    struct struct_0 **v182;  // eax\n
    struct struct_0 **v183;  // eax\n
    unsigned int *v184;  // eax\n
    unsigned int *v185;  // eax\n
    struct struct_0 **v186;  // eax\n
    struct struct_0 **v187;  // eax\n
    unsigned int *v188;  // eax\n
    unsigned int *v189;  // eax\n
    struct struct_0 **v190;  // eax\n
    unsigned int *v191;  // eax\n
    struct struct_0 **v192;  // eax\n
    unsigned int *v193;  // eax\n
    struct struct_0 **v194;  // eax\n
    unsigned int *v195;  // eax\n
    struct struct_0 **v196;  // eax\n
    unsigned int *v197;  // eax\n
    struct struct_0 **v198;  // eax\n
    unsigned int *v199;  // eax\n
    struct struct_0 **v200;  // eax\n
    unsigned int *v201;  // eax\n
    struct struct_0 **v202;  // eax\n
    struct struct_0 **v203;  // eax\n
    unsigned int *v204;  // eax\n
    unsigned int *v205;  // eax\n
    struct struct_0 **v206;  // eax\n
    unsigned int *v207;  // eax\n
    struct struct_0 **v208;  // eax\n
    unsigned int *v209;  // eax\n
    struct struct_0 **v210;  // eax\n
    unsigned int *v211;  // eax\n
    struct struct_0 **v212;  // eax\n
    unsigned int *v213;  // eax\n
    struct struct_0 **v214;  // eax\n
    struct struct_0 **v215;  // eax\n
    unsigned int *v216;  // eax\n
    unsigned int *v217;  // eax\n
    struct struct_0 **v218;  // eax\n
    unsigned int *v219;  // eax\n
    struct struct_0 **v220;  // eax\n
    unsigned int *v221;  // eax\n
    struct struct_0 **v222;  // eax\n
    struct struct_0 **v223;  // eax\n
    unsigned int *v224;  // eax\n
    struct struct_0 **v226;  // eax\n
    unsigned int *v228;  // eax\n
    struct struct_0 **v230;  // eax\n
    unsigned int *v232;  // eax\n
    unsigned int *v233;  // eax, Other Possible Types: unsigned int\n
    unsigned int v234;  // ebx\n
\n
    v137 = v139;\n
    v17 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v22 = cgc__cookie;\n
    v21 = -1;\n
    if (cgc_sendline(1, \"===llamaantimaterialistic===\", 28) < 0)\n
        cgc__terminate();\n
    v65 = v138;\n
    v64 = a0;\n
    if (*(v64) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v64) >= 128)\n
        v16 = 128;\n
    else\n
        v16 = *(v64);\n
    v63 = v16;\n
    if (!v63)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v62 = cgc_calloc(134);\n
    if (!v62)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v62, &v17[18].padding_0[182]);\n
    cgc_strncpy(v62 + 5, *(v65), v63);\n
    v141 = v65;\n
    *(v141) = -4 + cgc_strlen(v62) + *(v141);\n
    v143 = v64;\n
    *(v143) = *(v143) - (cgc_strlen(v62) + -4);\n
    cgc_checkheap();\n
    cgc_free(v62);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v33 = v138;\n
    v32 = a0;\n
    v30 = &*(v33)->field_0;\n
    memset(&v29, 0, 6);\n
    if (*(v32) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v15 = 0;\n
    if (*(v30) << 8)\n
        v15 = v30[1];\n
    v31 = v15 & 1;\n
    cgc_uint2str(&v29, 6, v31);\n
    v14 = &v29;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v29)) < 0)\n
        cgc__terminate();\n
    v144 = v32;\n
    *(v144) = *(v144) - 2;\n
    v145 = v33;\n
    *(v145) = &*(v145)->padding_1[1];\n
    v61 = v138;\n
    v60 = a0;\n
    if (*(v60) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v60) >= 128)\n
        v13 = 128;\n
    else\n
        v13 = *(v60);\n
    v59 = v13;\n
    if (!v59)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v58 = cgc_calloc(134);\n
    if (!v58)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v58, &v17[18].padding_0[182]);\n
    cgc_strncpy(v58 + 5, *(v61), v59);\n
    v147 = v61;\n
    *(v147) = -4 + cgc_strlen(v58) + *(v147);\n
    v149 = v60;\n
    *(v149) = *(v149) - (cgc_strlen(v58) + -4);\n
    cgc_checkheap();\n
    cgc_free(v58);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v69 = v138;\n
    v68 = a0;\n
    memset(&v66, 0, 4);\n
    if (*(v68) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(v69)->field_0;\n
    cgc_uint2str(&v66, 4, v67);\n
    v12 = &v66;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v150 = v68;\n
    *(v150) = *(v150) - 1;\n
    v151 = v69;\n
    *(v151) = &*(v151)->padding_1;\n
    v77 = v138;\n
    v76 = a0;\n
    memset(&v74, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    cgc_uint2str(&v74, 12, v75);\n
    v11 = &v74;\n
    if (cgc_sendline(1, v11, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v152 = v76;\n
    *(v152) = *(v152) - 4;\n
    v153 = v77;\n
    *(v153) = &*(v153)->field_4;\n
    v28 = v138;\n
    v27 = a0;\n
    v25 = &*(v28)->field_0;\n
    memset(&v24, 0, 6);\n
    if (*(v27) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v10 = 0;\n
    if (*(v25) << 8)\n
        v10 = v25[1];\n
    v26 = v10 & 1;\n
    cgc_uint2str(&v24, 6, v26);\n
    v9 = &v24;\n
    if (cgc_sendline(1, v9, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v154 = v27;\n
    *(v154) = *(v154) - 2;\n
    v155 = v28;\n
    *(v155) = &*(v155)->padding_1[1];\n
    v136 = v138;\n
    v135 = a0;\n
    if (*(v135) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v134 = *(v136)->field_0;\n
    v156 = v135;\n
    *(v156) = *(v156) - 1;\n
    v157 = v136;\n
    *(v157) = &*(v157)->padding_1;\n
    if (v134 <= *(v135) && !(!v134))\n
        goto LABEL_4e6fa4;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e6fa4:\n
    v133 = cgc_calloc(v134);\n
    if (!v133)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v133, *(v136), v134);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v158 = v136;\n
    *(v158) = &(&*(v158)->field_0)[v134];\n
    v159 = v135;\n
    *(v159) = *(v159) - v134;\n
    cgc_checkheap();\n
    cgc_free(v133);\n
    v111 = v138;\n
    v110 = a0;\n
    *(&v108[0]) = *(v111);\n
    memset(&v107, 0, 12);\n
    if (*(v110) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v8 = 0;\n
    if (v108[0] << 24)\n
    {\n
        v8 = 0;\n
        if (v108[1] << 16)\n
        {\n
            v8 = 0;\n
            if (v108[2] << 8)\n
                v8 = v108[3];\n
        }\n
    }\n
    v109 = v8 & 1;\n
    cgc_uint2str(&v107, 12, v109);\n
    v7 = &v107;\n
    if (cgc_sendline(1, v7, cgc_strlen(&v107)) < 0)\n
        cgc__terminate();\n
    v160 = v110;\n
    *(v160) = *(v160) - 4;\n
    v161 = v111;\n
    *(v161) = &*(v161)->field_4;\n
    v132 = v138;\n
    v131 = a0;\n
    if (*(v131) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v130 = *(v132)->field_0;\n
    v162 = v131;\n
    *(v162) = *(v162) - 1;\n
    v163 = v132;\n
    *(v163) = &*(v163)->padding_1;\n
    if (v130 <= *(v131) && !(!v130))\n
        goto LABEL_4e735e;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e735e:\n
    v129 = cgc_calloc(v130);\n
    if (!v129)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v129, *(v132), v130);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v164 = v132;\n
    *(v164) = &(&*(v164)->field_0)[v130];\n
    v165 = v131;\n
    *(v165) = *(v165) - v130;\n
    cgc_checkheap();\n
    cgc_free(v129);\n
    v116 = v138;\n
    v115 = a0;\n
    memset(&v112, 0, 21);\n
    if (*(v115) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v166 = *(v116);\n
    v114 = v166[1];\n
    v113 = v166[0];\n
    cgc_uint2str(&v112, 21, v113);\n
    v6 = &v112;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v112)) < 0)\n
        cgc__terminate();\n
    v167 = v115;\n
    *(v167) = *(v167) - 8;\n
    v168 = v116;\n
    *(v168) = *(v168) + 1;\n
    v45 = v138;\n
    v44 = a0;\n
    if (*(v44) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v43 = *(v45)->field_0;\n
    v169 = v44;\n
    *(v169) = *(v169) - 1;\n
    v170 = v45;\n
    *(v170) = &*(v170)->padding_1;\n
    if (v43 <= *(v44) && !(!v43))\n
        goto LABEL_4e769a;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e769a:\n
    v42 = cgc_calloc(v43);\n
    if (!v42)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v42, *(v45), v43);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v171 = v45;\n
    *(v171) = &(&*(v171)->field_0)[v43];\n
    v172 = v44;\n
    *(v172) = *(v172) - v43;\n
    cgc_checkheap();\n
    cgc_free(v42);\n
    v101 = v138;\n
    v100 = a0;\n
    if (*(v100) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v99 = *(&*(v101)->field_0);\n
    v173 = v100;\n
    *(v173) = *(v173) - 2;\n
    v174 = v101;\n
    *(v174) = &*(v174)->padding_1[1];\n
    if (v99 <= *(v100) && !(!v99))\n
        goto LABEL_4e78d4;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e78d4:\n
    v98 = cgc_calloc(v99);\n
    if (!v98)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v98, *(v101), v99);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v175 = v100;\n
    *(v175) = *(v175) - v99;\n
    v176 = v101;\n
    *(v176) = &(&*(v176)->field_0)[v99];\n
    cgc_checkheap();\n
    cgc_free(v98);\n
    v57 = v138;\n
    v56 = a0;\n
    if (*(v56) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v56) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v56);\n
    v55 = v5;\n
    if (!v55)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v54 = cgc_calloc(134);\n
    if (!v54)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v54, &v17[18].padding_0[182]);\n
    cgc_strncpy(v54 + 5, *(v57), v55);\n
    v178 = v57;\n
    *(v178) = -4 + cgc_strlen(v54) + *(v178);\n
    v180 = v56;\n
    *(v180) = *(v180) - (cgc_strlen(v54) + -4);\n
    cgc_checkheap();\n
    cgc_free(v54);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v128 = v138;\n
    v127 = a0;\n
    if (*(v127) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v126 = *(v128)->field_0;\n
    v181 = v127;\n
    *(v181) = *(v181) - 1;\n
    v182 = v128;\n
    *(v182) = &*(v182)->padding_1;\n
    if (v126 <= *(v127) && !(!v126))\n
        goto LABEL_4e7d6f;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e7d6f:\n
    v125 = cgc_calloc(v126);\n
    if (!v125)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v125, *(v128), v126);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v183 = v128;\n
    *(v183) = &(&*(v183)->field_0)[v126];\n
    v184 = v127;\n
    *(v184) = *(v184) - v126;\n
    cgc_checkheap();\n
    cgc_free(v125);\n
    v41 = v138;\n
    v40 = a0;\n
    if (*(v40) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v39 = *(v41)->field_0;\n
    v185 = v40;\n
    *(v185) = *(v185) - 1;\n
    v186 = v41;\n
    *(v186) = &*(v186)->padding_1;\n
    if (v39 <= *(v40) && !(!v39))\n
        goto LABEL_4e7f86;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e7f86:\n
    v38 = cgc_calloc(v39);\n
    if (!v38)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v38, *(v41), v39);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v187 = v41;\n
    *(v187) = &(&*(v187)->field_0)[v39];\n
    v188 = v40;\n
    *(v188) = *(v188) - v39;\n
    cgc_checkheap();\n
    cgc_free(v38);\n
    v97 = v138;\n
    v96 = a0;\n
    if (*(v96) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v95 = *(&*(v97)->field_0);\n
    v189 = v96;\n
    *(v189) = *(v189) - 2;\n
    v190 = v97;\n
    *(v190) = &*(v190)->padding_1[1];\n
    if (v95 <= *(v96) && !(!v95))\n
        goto LABEL_4e81c0;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e81c0:\n
    v94 = cgc_calloc(v95);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v94, *(v97), v95);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v191 = v96;\n
    *(v191) = *(v191) - v95;\n
    v192 = v97;\n
    *(v192) = &(&*(v192)->field_0)[v95];\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    v89 = v138;\n
    v88 = a0;\n
    if (*(v88) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v87 = *(&*(v89)->field_0);\n
    v193 = v88;\n
    *(v193) = *(v193) - 2;\n
    v194 = v89;\n
    *(v194) = &*(v194)->padding_1[1];\n
    if (v87 <= *(v88) && !(!v87))\n
        goto LABEL_4e83fa;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e83fa:\n
    v86 = cgc_calloc(v87);\n
    if (!v86)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v86, *(v89), v87);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v195 = v88;\n
    *(v195) = *(v195) - v87;\n
    v196 = v89;\n
    *(v196) = &(&*(v196)->field_0)[v87];\n
    cgc_checkheap();\n
    cgc_free(v86);\n
    v93 = v138;\n
    v92 = a0;\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(&*(v93)->field_0);\n
    v197 = v92;\n
    *(v197) = *(v197) - 2;\n
    v198 = v93;\n
    *(v198) = &*(v198)->padding_1[1];\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_4e8634;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e8634:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v199 = v92;\n
    *(v199) = *(v199) - v91;\n
    v200 = v93;\n
    *(v200) = &(&*(v200)->field_0)[v91];\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v124 = v138;\n
    v123 = a0;\n
    if (*(v123) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v122 = *(v124)->field_0;\n
    v201 = v123;\n
    *(v201) = *(v201) - 1;\n
    v202 = v124;\n
    *(v202) = &*(v202)->padding_1;\n
    if (v122 <= *(v123) && !(!v122))\n
        goto LABEL_4e884e;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e884e:\n
    v121 = cgc_calloc(v122);\n
    if (!v121)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v121, *(v124), v122);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v203 = v124;\n
    *(v203) = &(&*(v203)->field_0)[v122];\n
    v204 = v123;\n
    *(v204) = *(v204) - v122;\n
    cgc_checkheap();\n
    cgc_free(v121);\n
    v85 = v138;\n
    v84 = a0;\n
    if (*(v84) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v83 = *(&*(v85)->field_0);\n
    v205 = v84;\n
    *(v205) = *(v205) - 2;\n
    v206 = v85;\n
    *(v206) = &*(v206)->padding_1[1];\n
    if (v83 <= *(v84) && !(!v83))\n
        goto LABEL_4e8a67;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e8a67:\n
    v82 = cgc_calloc(v83);\n
    if (!v82)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v82, *(v85), v83);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v207 = v84;\n
    *(v207) = *(v207) - v83;\n
    v208 = v85;\n
    *(v208) = &(&*(v208)->field_0)[v83];\n
    cgc_checkheap();\n
    cgc_free(v82);\n
    v106 = v138;\n
    v105 = a0;\n
    *(&v103[0]) = *(v106);\n
    memset(&v102, 0, 12);\n
    if (*(v105) < 4)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v4 = 0;\n
    if (v103[0] << 24)\n
    {\n
        v4 = 0;\n
        if (v103[1] << 16)\n
        {\n
            v4 = 0;\n
            if (v103[2] << 8)\n
                v4 = v103[3];\n
        }\n
    }\n
    v104 = v4 & 1;\n
    cgc_uint2str(&v102, 12, v104);\n
    v3 = &v102;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v102)) < 0)\n
        cgc__terminate();\n
    v209 = v105;\n
    *(v209) = *(v209) - 4;\n
    v210 = v106;\n
    *(v210) = &*(v210)->field_4;\n
    v73 = v138;\n
    v72 = a0;\n
    memset(&v70, 0, 21);\n
    if (*(v72) < 8)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v71 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v19 = [D] x86g_create_fpucw(fpround<4>);\n
    v18 = v19 | 0xc00;\n
    v20 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v70, 21, v20);\n
    v2 = &v70;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v211 = v72;\n
    *(v211) = *(v211) - 8;\n
    v212 = v73;\n
    *(v212) = *(v212) + 1;\n
    v120 = v138;\n
    v119 = a0;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(v120)->field_0;\n
    v213 = v119;\n
    *(v213) = *(v213) - 1;\n
    v214 = v120;\n
    *(v214) = &*(v214)->padding_1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_4e8fb6;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e8fb6:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v215 = v120;\n
    *(v215) = &(&*(v215)->field_0)[v118];\n
    v216 = v119;\n
    *(v216) = *(v216) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v81 = v138;\n
    v80 = a0;\n
    if (*(v80) < 2)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(&*(v81)->field_0);\n
    v217 = v80;\n
    *(v217) = *(v217) - 2;\n
    v218 = v81;\n
    *(v218) = &*(v218)->padding_1[1];\n
    if (v79 <= *(v80) && !(!v79))\n
        goto LABEL_4e91cf;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e91cf:\n
    v78 = cgc_calloc(v79);\n
    if (!v78)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v78, *(v81), v79);\n
    if (cgc_sendline(1, &v17[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v219 = v80;\n
    *(v219) = *(v219) - v79;\n
    v220 = v81;\n
    *(v220) = &(&*(v220)->field_0)[v79];\n
    cgc_checkheap();\n
    cgc_free(v78);\n
    v37 = v138;\n
    v36 = a0;\n
    if (*(v36) < 1)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v35 = *(v37)->field_0;\n
    v221 = v36;\n
    *(v221) = *(v221) - 1;\n
    v222 = v37;\n
    *(v222) = &*(v222)->padding_1;\n
    if (v35 <= *(v36) && !(!v35))\n
        goto LABEL_4e9407;\n
    if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4e9407:\n
    v34 = cgc_calloc(v35);\n
    if (!v34)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v34, *(v37), v35);\n
    if (cgc_sendline(1, &v17[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v223 = v37;\n
    *(v223) = &(&*(v223)->field_0)[v35];\n
    v224 = v36;\n
    *(v224) = *(v224) - v35;\n
    cgc_checkheap();\n
    cgc_free(v34);\n
    v53 = v138;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v1 = 128;\n
    else\n
        v1 = *(v52);\n
    v51 = v1;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v17[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v226 = v53;\n
    *(v226) = -4 + cgc_strlen(v50) + *(v226);\n
    v228 = v52;\n
    *(v228) = *(v228) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v49 = v138;\n
    v48 = a0;\n
    if (*(v48) <= 0)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v48) >= 128)\n
        v0 = 128;\n
    else\n
        v0 = *(v48);\n
    v47 = v0;\n
    if (!v47)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v46 = cgc_calloc(134);\n
    if (!v46)\n
    {\n
        if (cgc_sendline(1, &v17[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v46, &v17[18].padding_0[182]);\n
    cgc_strncpy(v46 + 5, *(v49), v47);\n
    v230 = v49;\n
    *(v230) = -4 + cgc_strlen(v46) + *(v230);\n
    v232 = v48;\n
    *(v232) = *(v232) - (cgc_strlen(v46) + -4);\n
    cgc_checkheap();\n
    cgc_free(v46);\n
    if (cgc_sendline(1, &v17[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v22 ^= v17->field_260;\n
    if (v22)\n
        cgc___stack_cookie_fail();\n
    v233 = a0;\n
    if (*(v233) > 0 && v21 >= 0 && v21 < 0)\n
        v233 = *((&v23 + 0x4 * v21))(v138);\n
    v234 = v137;\n
    return v233;\n
}\n
", "5151406:sub_4e9aae": null, "5151408:cgc_process_llamalowermost": "typedef struct struct_0 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_3;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
\n
int cgc_process_llamalowermost(struct struct_1 **v122, unsigned int *a0)\n
{\n
    struct_2 *v0;  // [bp-0x294]\n
    struct_2 *v1;  // [bp-0x290]\n
    struct_2 *v2;  // [bp-0x28c]\n
    struct_2 *v3;  // [bp-0x288]\n
    struct_2 *v4;  // [bp-0x284]\n
    struct_2 *v5;  // [bp-0x280]\n
    struct_2 *v6;  // [bp-0x27c]\n
    char v7;  // [bp-0x275]\n
    struct_2 *v8;  // [bp-0x274]\n
    unsigned int v9;  // [bp-0x270]\n
    struct_2 *v10;  // [bp-0x26c]\n
    char v11;  // [bp-0x265]\n
    struct_2 *v12;  // [bp-0x264]\n
    struct_2 *v13;  // [bp-0x260]\n
    struct_2 *v14;  // [bp-0x25c]\n
    unsigned int v15;  // [bp-0x258]\n
    struct_2 *v16;  // [bp-0x254]\n
    char v17;  // [bp-0x24d]\n
    struct_2 *v18;  // [bp-0x24c]\n
    struct_2 *v19;  // [bp-0x248]\n
    struct_0 *v20;  // [bp-0x244]\n
    unsigned short v21;  // [bp-0x240]\n
    unsigned short v22;  // [bp-0x23e]\n
    unsigned short v23;  // [bp-0x23c]\n
    unsigned short v24;  // [bp-0x23a]\n
    unsigned short v25;  // [bp-0x238]\n
    unsigned short v26;  // [bp-0x236]\n
    unsigned long v27;  // [bp-0x234]\n
    unsigned long v28;  // [bp-0x22c]\n
    unsigned long v29;  // [bp-0x224]\n
    struct struct_4 **v30;  // [bp-0x218]\n
    unsigned int v31;  // [bp-0x214]\n
    char v32;  // [bp-0x210]\n
    char v33;  // [bp-0x20e]\n
    char v34[2];  // [bp-0x208]\n
    unsigned short v35;  // [bp-0x202]\n
    unsigned int *v36;  // [bp-0x200]\n
    struct struct_1 **v37;  // [bp-0x1fc]\n
    char v38;  // [bp-0x1f5]\n
    char v39[8];  // [bp-0x1e0]\n
    unsigned int v40;  // [bp-0x1dc]\n
    void* v41;  // [bp-0x1d8]\n
    unsigned int *v42;  // [bp-0x1d0]\n
    struct struct_1 **v43;  // [bp-0x1cc]\n
    char v44;  // [bp-0x1c5]\n
    char v45[8];  // [bp-0x1b0]\n
    unsigned int v46;  // [bp-0x1ac]\n
    void* v47;  // [bp-0x1a8]\n
    unsigned int *v48;  // [bp-0x1a4]\n
    struct struct_1 **v49;  // [bp-0x1a0]\n
    char *v50;  // [bp-0x19c]\n
    unsigned int v51;  // [bp-0x198]\n
    unsigned int *v52;  // [bp-0x194]\n
    struct struct_1 **v53;  // [bp-0x190]\n
    char v54;  // [bp-0x18c]\n
    unsigned short v55;  // [bp-0x186]\n
    unsigned int *v56;  // [bp-0x184]\n
    struct struct_1 **v57;  // [bp-0x180]\n
    char v58;  // [bp-0x17c]\n
    unsigned short v59;  // [bp-0x176]\n
    unsigned int *v60;  // [bp-0x174]\n
    struct struct_1 **v61;  // [bp-0x170]\n
    char v62;  // [bp-0x169]\n
    char v63;  // [bp-0x165]\n
    unsigned int *v64;  // [bp-0x164]\n
    struct struct_1 **v65;  // [bp-0x160]\n
    char v66;  // [bp-0x159]\n
    char v67;  // [bp-0x155]\n
    unsigned int *v68;  // [bp-0x154]\n
    struct struct_1 **v69;  // [bp-0x150]\n
    char v70;  // [bp-0x149]\n
    unsigned long v71;  // [bp-0x134]\n
    unsigned int *v72;  // [bp-0x12c]\n
    struct struct_1 **v73;  // [bp-0x128]\n
    char v74;  // [bp-0x124]\n
    unsigned int v75;  // [bp-0x118]\n
    unsigned int *v76;  // [bp-0x114]\n
    struct struct_1 **v77;  // [bp-0x110]\n
    char v78;  // [bp-0x10c]\n
    unsigned int v79;  // [bp-0x100]\n
    unsigned int *v80;  // [bp-0xfc]\n
    struct struct_1 **v81;  // [bp-0xf8]\n
    char v82;  // [bp-0xf4]\n
    unsigned int v83;  // [bp-0xe8]\n
    unsigned int *v84;  // [bp-0xe4]\n
    struct struct_1 **v85;  // [bp-0xe0]\n
    char v86;  // [bp-0xdc]\n
    unsigned int v87;  // [bp-0xd0]\n
    unsigned int *v88;  // [bp-0xcc]\n
    struct struct_1 **v89;  // [bp-0xc8]\n
    unsigned int v90;  // [bp-0xc4]\n
    unsigned short v91;  // [bp-0xbe]\n
    unsigned int *v92;  // [bp-0xbc]\n
    struct struct_1 **v93;  // [bp-0xb8]\n
    char *v94;  // [bp-0xb4]\n
    unsigned int v95;  // [bp-0xb0]\n
    unsigned int *v96;  // [bp-0xac]\n
    struct struct_1 **v97;  // [bp-0xa8]\n
    char v98;  // [bp-0xa1]\n
    unsigned int v99;  // [bp-0x8c]\n
    unsigned int v100;  // [bp-0x88]\n
    unsigned int *v101;  // [bp-0x84]\n
    struct struct_1 **v102;  // [bp-0x80]\n
    char v103;  // [bp-0x79]\n
    unsigned int v104;  // [bp-0x64]\n
    unsigned int v105;  // [bp-0x60]\n
    unsigned int *v106;  // [bp-0x5c]\n
    struct struct_1 **v107;  // [bp-0x58]\n
    char v108;  // [bp-0x51]\n
    unsigned int v109;  // [bp-0x3c]\n
    unsigned int v110;  // [bp-0x38]\n
    unsigned int *v111;  // [bp-0x30]\n
    struct struct_1 **v112;  // [bp-0x2c]\n
    unsigned int v113;  // [bp-0x28]\n
    char v114;  // [bp-0x21]\n
    unsigned int *v115;  // [bp-0x20]\n
    struct struct_1 **v116;  // [bp-0x1c]\n
    unsigned int v117;  // [bp-0x18]\n
    char v118;  // [bp-0x11]\n
    unsigned int *v119;  // [bp-0x10]\n
    struct struct_1 **v120;  // [bp-0xc]\n
    unsigned int v121;  // [bp-0x8]\n
    unsigned int v123;  // ebx\n
    unsigned int *v124;  // eax\n
    struct struct_1 **v125;  // eax\n
    struct_3 *v126;  // ecx\n
    unsigned int *v127;  // eax\n
    struct struct_1 **v128;  // eax\n
    unsigned int *v129;  // eax\n
    struct struct_1 **v130;  // eax\n
    struct struct_1 **v132;  // eax\n
    unsigned int *v134;  // eax\n
    unsigned int *v135;  // eax\n
    struct struct_1 **v136;  // eax\n
    struct_3 *v137;  // ecx\n
    unsigned int *v138;  // eax\n
    struct struct_1 **v139;  // eax\n
    unsigned int *v140;  // eax\n
    struct struct_1 **v141;  // eax\n
    struct struct_1 **v142;  // eax\n
    unsigned int *v143;  // eax\n
    unsigned int *v144;  // eax\n
    struct struct_1 **v145;  // eax\n
    struct struct_1 **v146;  // eax\n
    unsigned int *v147;  // eax\n
    unsigned int *v148;  // eax\n
    struct struct_1 **v149;  // eax\n
    unsigned int *v150;  // eax\n
    struct struct_1 **v151;  // eax\n
    unsigned int *v152;  // eax\n
    struct struct_1 **v153;  // eax\n
    unsigned int *v154;  // eax\n
    struct struct_1 **v155;  // eax\n
    struct struct_1 **v157;  // eax\n
    unsigned int *v159;  // eax\n
    unsigned int *v160;  // eax\n
    struct struct_1 **v161;  // eax\n
    unsigned int *v162;  // eax\n
    struct struct_1 **v163;  // eax\n
    unsigned int *v164;  // eax\n
    struct struct_1 **v165;  // eax\n
    unsigned int v166[2];  // ecx\n
    unsigned int *v167;  // eax\n
    struct struct_1 **v168;  // eax\n
    unsigned int *v169;  // eax\n
    struct struct_1 **v170;  // eax\n
    unsigned int *v171;  // eax\n
    struct struct_1 **v172;  // eax\n
    unsigned int *v173;  // eax\n
    struct struct_1 **v174;  // eax\n
    unsigned int *v175;  // eax\n
    struct struct_1 **v176;  // eax\n
    unsigned int *v177;  // eax, Other Possible Types: unsigned int\n
    unsigned int v178;  // ebx\n
\n
    v121 = v123;\n
    v20 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v31 = cgc__cookie;\n
    v30 = -1;\n
    if (cgc_sendline(1, \"===llamalowermost===\", 20) < 0)\n
        cgc__terminate();\n
    v69 = v122;\n
    v68 = a0;\n
    memset(&v66, 0, 4);\n
    if (*(v68) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v67 = *(v69)->field_0;\n
    cgc_uint2str(&v66, 4, v67);\n
    v19 = &v66;\n
    if (cgc_sendline(1, v19, cgc_strlen(&v66)) < 0)\n
        cgc__terminate();\n
    v124 = v68;\n
    *(v124) = *(v124) - 1;\n
    v125 = v69;\n
    *(v125) = &*(v125)->padding_1;\n
    v112 = v122;\n
    v111 = a0;\n
    memset(&v108, 0, 21);\n
    if (*(v111) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v126 = *(v112);\n
    v110 = v126->field_4;\n
    v109 = *(&v126->field_0);\n
    cgc_uint2str(&v108, 21, v109);\n
    v18 = &v108;\n
    if (cgc_sendline(1, v18, cgc_strlen(&v108)) < 0)\n
        cgc__terminate();\n
    v127 = v111;\n
    *(v127) = *(v127) - 8;\n
    v128 = v112;\n
    *(v128) = &(*(v128))[1].padding_1[2];\n
    v49 = v122;\n
    v48 = a0;\n
    *(&v45[0]) = *(v49);\n
    memset(&v44, 0, 21);\n
    if (*(v48) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v17 = 0;\n
    if (v45[0])\n
    {\n
        v17 = 0;\n
        if (v45[1])\n
        {\n
            v17 = 0;\n
            if (v45[2])\n
            {\n
                v17 = 0;\n
                if (v45[3])\n
                {\n
                    v17 = 0;\n
                    if (v45[4] << 24)\n
                    {\n
                        v17 = 0;\n
                        if (v45[5] << 16)\n
                        {\n
                            v17 = 0;\n
                            if (v45[6] << 8)\n
                                v17 = v45[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v46 = v17 & 1;\n
    v47 = 0;\n
    cgc_uint2str(&v44, 21, v46);\n
    v16 = &v44;\n
    if (cgc_sendline(1, v16, cgc_strlen(&v44)) < 0)\n
        cgc__terminate();\n
    v129 = v48;\n
    *(v129) = *(v129) - 8;\n
    v130 = v49;\n
    *(v130) = &(*(v130))[1].padding_1[2];\n
    v53 = v122;\n
    v52 = a0;\n
    if (*(v52) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v52) >= 128)\n
        v15 = 128;\n
    else\n
        v15 = *(v52);\n
    v51 = v15;\n
    if (!v51)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = cgc_calloc(134);\n
    if (!v50)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v50, &v20[18].padding_0[182]);\n
    cgc_strncpy(v50 + 5, *(v53), v51);\n
    v132 = v53;\n
    *(v132) = &(&*(v132)->field_4)[cgc_strlen(v50)];\n
    v134 = v52;\n
    *(v134) = *(v134) - (cgc_strlen(v50) + -4);\n
    cgc_checkheap();\n
    cgc_free(v50);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v89 = v122;\n
    v88 = a0;\n
    memset(&v86, 0, 12);\n
    if (*(v88) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v87 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v26 = [D] x86g_create_fpucw(fpround<4>);\n
    v25 = v26 | 0xc00;\n
    v29 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v86, 12, v29);\n
    v14 = &v86;\n
    if (cgc_sendline(1, v14, cgc_strlen(&v86)) < 0)\n
        cgc__terminate();\n
    v135 = v88;\n
    *(v135) = *(v135) - 4;\n
    v136 = v89;\n
    *(v136) = &*(v136)->field_4;\n
    v107 = v122;\n
    v106 = a0;\n
    memset(&v103, 0, 21);\n
    if (*(v106) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v137 = *(v107);\n
    v105 = v137->field_4;\n
    v104 = *(&v137->field_0);\n
    cgc_uint2str(&v103, 21, v104);\n
    v13 = &v103;\n
    if (cgc_sendline(1, v13, cgc_strlen(&v103)) < 0)\n
        cgc__terminate();\n
    v138 = v106;\n
    *(v138) = *(v138) - 8;\n
    v139 = v107;\n
    *(v139) = &(*(v139))[1].padding_1[2];\n
    v120 = v122;\n
    v119 = a0;\n
    if (*(v119) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v118 = *(v120)->field_0;\n
    v140 = v119;\n
    *(v140) = *(v140) - 1;\n
    v141 = v120;\n
    *(v141) = &*(v141)->padding_1;\n
    if (v118 <= *(v119) && !(!v118))\n
        goto LABEL_4ea5e8;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ea5e8:\n
    v117 = cgc_calloc(v118);\n
    if (!v117)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v117, *(v120), v118);\n
    if (cgc_sendline(1, &v20[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v142 = v120;\n
    *(v142) = &(&*(v142)->field_0)[v118];\n
    v143 = v119;\n
    *(v143) = *(v143) - v118;\n
    cgc_checkheap();\n
    cgc_free(v117);\n
    v116 = v122;\n
    v115 = a0;\n
    if (*(v115) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v114 = *(v116)->field_0;\n
    v144 = v115;\n
    *(v144) = *(v144) - 1;\n
    v145 = v116;\n
    *(v145) = &*(v145)->padding_1;\n
    if (v114 <= *(v115) && !(!v114))\n
        goto LABEL_4ea7e1;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ea7e1:\n
    v113 = cgc_calloc(v114);\n
    if (!v113)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v113, *(v116), v114);\n
    if (cgc_sendline(1, &v20[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v146 = v116;\n
    *(v146) = &(&*(v146)->field_0)[v114];\n
    v147 = v115;\n
    *(v147) = *(v147) - v114;\n
    cgc_checkheap();\n
    cgc_free(v113);\n
    v93 = v122;\n
    v92 = a0;\n
    if (*(v92) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v91 = *(&*(v93)->field_0);\n
    v148 = v92;\n
    *(v148) = *(v148) - 2;\n
    v149 = v93;\n
    *(v149) = &*(v149)->padding_1[1];\n
    if (v91 <= *(v92) && !(!v91))\n
        goto LABEL_4ea9fa;\n
    if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ea9fa:\n
    v90 = cgc_calloc(v91);\n
    if (!v90)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v90, *(v93), v91);\n
    if (cgc_sendline(1, &v20[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v150 = v92;\n
    *(v150) = *(v150) - v91;\n
    v151 = v93;\n
    *(v151) = &(&*(v151)->field_0)[v91];\n
    cgc_checkheap();\n
    cgc_free(v90);\n
    v81 = v122;\n
    v80 = a0;\n
    memset(&v78, 0, 12);\n
    if (*(v80) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v79 = *(&*(v81)->field_0);\n
    cgc_uint2str(&v78, 12, v79);\n
    v12 = &v78;\n
    if (cgc_sendline(1, v12, cgc_strlen(&v78)) < 0)\n
        cgc__terminate();\n
    v152 = v80;\n
    *(v152) = *(v152) - 4;\n
    v153 = v81;\n
    *(v153) = &*(v153)->field_4;\n
    v43 = v122;\n
    v42 = a0;\n
    *(&v39[0]) = *(v43);\n
    memset(&v38, 0, 21);\n
    if (*(v42) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v11 = 0;\n
    if (v39[0])\n
    {\n
        v11 = 0;\n
        if (v39[1])\n
        {\n
            v11 = 0;\n
            if (v39[2])\n
            {\n
                v11 = 0;\n
                if (v39[3])\n
                {\n
                    v11 = 0;\n
                    if (v39[4] << 24)\n
                    {\n
                        v11 = 0;\n
                        if (v39[5] << 16)\n
                        {\n
                            v11 = 0;\n
                            if (v39[6] << 8)\n
                                v11 = v39[7];\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v40 = v11 & 1;\n
    v41 = 0;\n
    cgc_uint2str(&v38, 21, v40);\n
    v10 = &v38;\n
    if (cgc_sendline(1, v10, cgc_strlen(&v38)) < 0)\n
        cgc__terminate();\n
    v154 = v42;\n
    *(v154) = *(v154) - 8;\n
    v155 = v43;\n
    *(v155) = &(*(v155))[1].padding_1[2];\n
    v97 = v122;\n
    v96 = a0;\n
    if (*(v96) <= 0)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v96) >= 128)\n
        v9 = 128;\n
    else\n
        v9 = *(v96);\n
    v95 = v9;\n
    if (!v95)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v94 = cgc_calloc(134);\n
    if (!v94)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v94, &v20[18].padding_0[182]);\n
    cgc_strncpy(v94 + 5, *(v97), v95);\n
    v157 = v97;\n
    *(v157) = &(&*(v157)->field_4)[cgc_strlen(v94)];\n
    v159 = v96;\n
    *(v159) = *(v159) - (cgc_strlen(v94) + -4);\n
    cgc_checkheap();\n
    cgc_free(v94);\n
    if (cgc_sendline(1, &v20[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v61 = v122;\n
    v60 = a0;\n
    memset(&v58, 0, 6);\n
    if (*(v60) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v59 = *(&*(v61)->field_0);\n
    cgc_uint2str(&v58, 6, v59);\n
    v8 = &v58;\n
    if (cgc_sendline(1, v8, cgc_strlen(&v58)) < 0)\n
        cgc__terminate();\n
    v160 = v60;\n
    *(v160) = *(v160) - 2;\n
    v161 = v61;\n
    *(v161) = &*(v161)->padding_1[1];\n
    v37 = v122;\n
    v36 = a0;\n
    *(&v34) = *(v37);\n
    memset(&v33, 0, 6);\n
    if (*(v36) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v7 = 0;\n
    if (v34[0] << 8)\n
        v7 = v34[1];\n
    v35 = v7 & 1;\n
    cgc_uint2str(&v33, 6, v35);\n
    v6 = &v33;\n
    if (cgc_sendline(1, v6, cgc_strlen(&v33)) < 0)\n
        cgc__terminate();\n
    v162 = v36;\n
    *(v162) = *(v162) - 2;\n
    v163 = v37;\n
    *(v163) = &*(v163)->padding_1[1];\n
    v57 = v122;\n
    v56 = a0;\n
    memset(&v54, 0, 6);\n
    if (*(v56) < 2)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v55 = *(&*(v57)->field_0);\n
    cgc_uint2str(&v54, 6, v55);\n
    v5 = &v54;\n
    if (cgc_sendline(1, v5, cgc_strlen(&v54)) < 0)\n
        cgc__terminate();\n
    v164 = v56;\n
    *(v164) = *(v164) - 2;\n
    v165 = v57;\n
    *(v165) = &*(v165)->padding_1[1];\n
    v102 = v122;\n
    v101 = a0;\n
    memset(&v98, 0, 21);\n
    if (*(v101) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v166 = *(v102);\n
    v100 = v166[1];\n
    v99 = v166[0];\n
    cgc_uint2str(&v98, 21, v99);\n
    v4 = &v98;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v98)) < 0)\n
        cgc__terminate();\n
    v167 = v101;\n
    *(v167) = *(v167) - 8;\n
    v168 = v102;\n
    *(v168) = &(*(v168))[1].padding_1[2];\n
    v77 = v122;\n
    v76 = a0;\n
    memset(&v74, 0, 12);\n
    if (*(v76) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v75 = *(&*(v77)->field_0);\n
    cgc_uint2str(&v74, 12, v75);\n
    v3 = &v74;\n
    if (cgc_sendline(1, v3, cgc_strlen(&v74)) < 0)\n
        cgc__terminate();\n
    v169 = v76;\n
    *(v169) = *(v169) - 4;\n
    v170 = v77;\n
    *(v170) = &*(v170)->field_4;\n
    v65 = v122;\n
    v64 = a0;\n
    memset(&v62, 0, 4);\n
    if (*(v64) < 1)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v63 = *(v65)->field_0;\n
    cgc_uint2str(&v62, 4, v63);\n
    v2 = &v62;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v62)) < 0)\n
        cgc__terminate();\n
    v171 = v64;\n
    *(v171) = *(v171) - 1;\n
    v172 = v65;\n
    *(v172) = &*(v172)->padding_1;\n
    v85 = v122;\n
    v84 = a0;\n
    memset(&v82, 0, 12);\n
    if (*(v84) < 4)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v83 = ([D] GetI(136:I8x8)[t49,0] ? [D] GetI(72:F64x8)[t49,0] : nan);\n
    [D] PutI(136:I8x8)[t49,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    v24 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-566, size=2, endness=Iend_LE)))));\n
    v23 = v24 | 0xc00;\n
    v28 = ([D] GetI(136:I8x8)[t99,0] ? [D] GetI(72:F64x8)[t99,0] : nan);\n
    [D] PutI(136:I8x8)[t99,0] = 0x00\n
    cgc_uint2str(&v82, 12, v28);\n
    v1 = &v82;\n
    if (cgc_sendline(1, v1, cgc_strlen(&v82)) < 0)\n
        cgc__terminate();\n
    v173 = v84;\n
    *(v173) = *(v173) - 4;\n
    v174 = v85;\n
    *(v174) = &*(v174)->field_4;\n
    v73 = v122;\n
    v72 = a0;\n
    memset(&v70, 0, 21);\n
    if (*(v72) < 8)\n
    {\n
        if (cgc_sendline(1, &v20[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    [D] PutI(72:F64x8)[t32,0] = t35\n
    [D] PutI(136:I8x8)[t32,0] = 0x01\n
    v71 = ([D] GetI(136:I8x8)[t47,0] ? [D] GetI(72:F64x8)[t47,0] : nan);\n
    [D] PutI(136:I8x8)[t47,0] = 0x00\n
    [D] PutI(72:F64x8)[t58,0] = t61\n
    [D] PutI(136:I8x8)[t58,0] = 0x01\n
    v22 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-570, size=2, endness=Iend_LE)))));\n
    v21 = v22 | 0xc00;\n
    v27 = ([D] GetI(136:I8x8)[t94,0] ? [D] GetI(72:F64x8)[t94,0] : nan);\n
    [D] PutI(136:I8x8)[t94,0] = 0x00\n
    cgc_uint2str(&v70, 21, v27);\n
    v0 = &v70;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v70)) < 0)\n
        cgc__terminate();\n
    v175 = v72;\n
    *(v175) = *(v175) - 8;\n
    v176 = v73;\n
    *(v176) = &(*(v176))[1].padding_1[2];\n
    v31 ^= v20->field_260;\n
    if (v31)\n
        cgc___stack_cookie_fail();\n
    v177 = a0;\n
    if (*(v177) > 0 && v30 >= 0 && v30 < 0)\n
        v177 = *((&v32 + 0x4 * v30))(v122);\n
    v178 = v121;\n
    return v177;\n
}\n
", "5160039:sub_4ebc67": null, "5160048:cgc_process_llamamononomial": "typedef struct struct_2 {\n
    char padding_0[608];\n
    unsigned int field_260;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc__cookie;\n
extern unsigned int g_4f03b4;\n
\n
int cgc_process_llamamononomial(struct struct_0 **v48, unsigned int *a0)\n
{\n
    struct_1 *v0;  // [bp-0xcc]\n
    char v1;  // [bp-0xc5]\n
    struct_1 *v2;  // [bp-0xc4]\n
    char v3;  // [bp-0xbd]\n
    struct_1 *v4;  // [bp-0xbc]\n
    unsigned int v5;  // [bp-0xb8]\n
    struct_2 *v6;  // [bp-0xb4]\n
    struct struct_3 **v7;  // [bp-0xb0], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xac]\n
    unsigned int v9;  // [bp-0xa8]\n
    char v10;  // [bp-0xa2]\n
    char v11[2];  // [bp-0x9c]\n
    unsigned short v12;  // [bp-0x96]\n
    unsigned int *v13;  // [bp-0x94]\n
    struct struct_0 **v14;  // [bp-0x90]\n
    char v15;  // [bp-0x8a]\n
    char *v16;  // [bp-0x84]\n
    unsigned short v17;  // [bp-0x7e]\n
    unsigned int *v18;  // [bp-0x7c]\n
    struct struct_0 **v19;  // [bp-0x78]\n
    char *v20;  // [bp-0x74]\n
    unsigned int v21;  // [bp-0x70]\n
    unsigned int *v22;  // [bp-0x6c]\n
    struct struct_0 **v23;  // [bp-0x68]\n
    char v24;  // [bp-0x61]\n
    char v25;  // [bp-0x5d]\n
    unsigned int *v26;  // [bp-0x5c]\n
    struct struct_0 **v27;  // [bp-0x58]\n
    unsigned short *v28;  // [bp-0x54]\n
    unsigned int *v29;  // [bp-0x50]\n
    struct struct_0 **v30;  // [bp-0x4c]\n
    unsigned int v31;  // [bp-0x48]\n
    unsigned short v32;  // [bp-0x42]\n
    unsigned int *v33;  // [bp-0x40]\n
    struct struct_0 **v34;  // [bp-0x3c]\n
    unsigned int v35;  // [bp-0x38]\n
    unsigned short v36;  // [bp-0x32]\n
    unsigned int *v37;  // [bp-0x30]\n
    struct struct_0 **v38;  // [bp-0x2c]\n
    unsigned int v39;  // [bp-0x28]\n
    char v40;  // [bp-0x21]\n
    unsigned int *v41;  // [bp-0x20]\n
    struct struct_0 **v42;  // [bp-0x1c]\n
    unsigned int v43;  // [bp-0x18]\n
    char v44;  // [bp-0x11]\n
    unsigned int *v45;  // [bp-0x10]\n
    struct struct_0 **v46;  // [bp-0xc]\n
    unsigned int v47;  // [bp-0x8]\n
    unsigned int v49;  // ebx\n
    unsigned int *v50;  // eax\n
    struct struct_0 **v51;  // eax\n
    struct struct_0 **v53;  // eax\n
    unsigned int *v55;  // eax\n
    unsigned int *v56;  // eax\n
    struct struct_0 **v57;  // eax\n
    struct struct_0 **v58;  // eax\n
    unsigned int *v59;  // eax\n
    unsigned int *v60;  // eax\n
    struct struct_0 **v61;  // eax\n
    struct struct_0 **v62;  // eax\n
    unsigned int *v63;  // eax\n
    unsigned int *v64;  // eax\n
    struct struct_0 **v65;  // eax\n
    unsigned int *v66;  // eax\n
    struct struct_0 **v67;  // eax\n
    unsigned int *v68;  // eax\n
    struct struct_0 **v69;  // eax\n
    unsigned int *v70;  // eax\n
    struct struct_0 **v71;  // eax\n
    unsigned int *v72;  // eax\n
    struct struct_0 **v73;  // eax\n
    unsigned int *v74;  // eax\n
    struct struct_0 **v75;  // eax\n
    unsigned int *v76;  // eax\n
    struct struct_0 **v77;  // eax\n
    unsigned int *v78;  // eax, Other Possible Types: unsigned int\n
    unsigned int v79;  // ebx\n
\n
    v47 = v49;\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v9 = g_4f03b4;\n
    v8 = cgc__cookie;\n
    v7 = -1;\n
    if (cgc_sendline(1, \"===llamamononomial===\", 21) < 0)\n
        cgc__terminate();\n
    v30 = v48;\n
    v29 = a0;\n
    v28 = &*(v30);\n
    if (*(v29) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v50 = v29;\n
    *(v50) = *(v50) - 2;\n
    v51 = v30;\n
    *(v51) = *(v51) + 2;\n
    v7 = *(v28);\n
    v23 = v48;\n
    v22 = a0;\n
    if (*(v22) <= 0)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(v22) >= 128)\n
        v5 = 128;\n
    else\n
        v5 = *(v22);\n
    v21 = v5;\n
    if (!v21)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v20 = cgc_calloc(134);\n
    if (!v20)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_strcpy(v20, &v6[18].padding_0[182]);\n
    cgc_strncpy(v20 + 5, *(v23), v21);\n
    v53 = v23;\n
    *(v53) = &(*(v53))[4 + cgc_strlen(v20)];\n
    v55 = v22;\n
    *(v55) = *(v55) - (cgc_strlen(v20) + -4);\n
    cgc_checkheap();\n
    cgc_free(v20);\n
    if (cgc_sendline(1, &v6[18].padding_0[176], 15) < 0)\n
        cgc__terminate();\n
    v46 = v48;\n
    v45 = a0;\n
    if (*(v45) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v44 = *(v46)->field_0;\n
    v56 = v45;\n
    *(v56) = *(v56) - 1;\n
    v57 = v46;\n
    *(v57) = *(v57) + 1;\n
    if (v44 <= *(v45) && !(!v44))\n
        goto LABEL_4ec0c5;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ec0c5:\n
    v43 = cgc_calloc(v44);\n
    if (!v43)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v43, *(v46), v44);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v58 = v46;\n
    *(v58) = &(*(v58))[v44];\n
    v59 = v45;\n
    *(v59) = *(v59) - v44;\n
    cgc_checkheap();\n
    cgc_free(v43);\n
    v42 = v48;\n
    v41 = a0;\n
    if (*(v41) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v40 = *(v42)->field_0;\n
    v60 = v41;\n
    *(v60) = *(v60) - 1;\n
    v61 = v42;\n
    *(v61) = *(v61) + 1;\n
    if (v40 <= *(v41) && !(!v40))\n
        goto LABEL_4ec2be;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ec2be:\n
    v39 = cgc_calloc(v40);\n
    if (!v39)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v39, *(v42), v40);\n
    if (cgc_sendline(1, &v6[18].padding_0[159], 17) < 0)\n
        cgc__terminate();\n
    v62 = v42;\n
    *(v62) = &(*(v62))[v40];\n
    v63 = v41;\n
    *(v63) = *(v63) - v40;\n
    cgc_checkheap();\n
    cgc_free(v39);\n
    v27 = v48;\n
    v26 = a0;\n
    memset(&v24, 0, 4);\n
    if (*(v26) < 1)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v25 = *(v27)->field_0;\n
    cgc_uint2str(&v24, 4, v25);\n
    v4 = &v24;\n
    if (cgc_sendline(1, v4, cgc_strlen(&v24)) < 0)\n
        cgc__terminate();\n
    v64 = v26;\n
    *(v64) = *(v64) - 1;\n
    v65 = v27;\n
    *(v65) = *(v65) + 1;\n
    v38 = v48;\n
    v37 = a0;\n
    if (*(v37) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v36 = *(&*(v38));\n
    v66 = v37;\n
    *(v66) = *(v66) - 2;\n
    v67 = v38;\n
    *(v67) = *(v67) + 2;\n
    if (v36 <= *(v37) && !(!v36))\n
        goto LABEL_4ec5d9;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ec5d9:\n
    v35 = cgc_calloc(v36);\n
    if (!v35)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v35, *(v38), v36);\n
    if (cgc_sendline(1, &v6[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v68 = v37;\n
    *(v68) = *(v68) - v36;\n
    v69 = v38;\n
    *(v69) = &(*(v69))[v36];\n
    cgc_checkheap();\n
    cgc_free(v35);\n
    v34 = v48;\n
    v33 = a0;\n
    if (*(v33) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v32 = *(&*(v34));\n
    v70 = v33;\n
    *(v70) = *(v70) - 2;\n
    v71 = v34;\n
    *(v71) = *(v71) + 2;\n
    if (v32 <= *(v33) && !(!v32))\n
        goto LABEL_4ec7d4;\n
    if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
        cgc__terminate();\n
    cgc__terminate();\n
LABEL_4ec7d4:\n
    v31 = cgc_calloc(v32);\n
    if (!v31)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    cgc_memcpy(v31, *(v34), v32);\n
    if (cgc_sendline(1, &v6[18].padding_0[160], 18) < 0)\n
        cgc__terminate();\n
    v72 = v33;\n
    *(v72) = *(v72) - v32;\n
    v73 = v34;\n
    *(v73) = &(*(v73))[v32];\n
    cgc_checkheap();\n
    cgc_free(v31);\n
    v19 = v48;\n
    v18 = a0;\n
    v16 = &*(v19)->field_0;\n
    memset(&v15, 0, 6);\n
    if (*(v18) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v3 = 0;\n
    if (*(v16) << 8)\n
        v3 = v16[1];\n
    v17 = v3 & 1;\n
    cgc_uint2str(&v15, 6, v17);\n
    v2 = &v15;\n
    if (cgc_sendline(1, v2, cgc_strlen(&v15)) < 0)\n
        cgc__terminate();\n
    v74 = v18;\n
    *(v74) = *(v74) - 2;\n
    v75 = v19;\n
    *(v75) = *(v75) + 2;\n
    v14 = v48;\n
    v13 = a0;\n
    *(&v11) = *(v14);\n
    memset(&v10, 0, 6);\n
    if (*(v13) < 2)\n
    {\n
        if (cgc_sendline(1, &v6[18].padding_0[192], 9) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = 0;\n
    if (v11[0] << 8)\n
        v1 = v11[1];\n
    v12 = v1 & 1;\n
    cgc_uint2str(&v10, 6, v12);\n
    v0 = &v10;\n
    if (cgc_sendline(1, v0, cgc_strlen(&v10)) < 0)\n
        cgc__terminate();\n
    v76 = v13;\n
    *(v76) = *(v76) - 2;\n
    v77 = v14;\n
    *(v77) = *(v77) + 2;\n
    v8 ^= v6->field_260;\n
    if (v8)\n
        cgc___stack_cookie_fail();\n
    v78 = a0;\n
    if (*(v78) > 0 && v7 >= 0 && v7 < 1)\n
        v78 = (&v9)[v7](v48);\n
    v79 = v47;\n
    return v78;\n
}\n
", "5164101:sub_4ecc45": null, "5164112:main": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3[6];  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    for (v5 = 0x400; v5 > 0; v5 -= 1)\n
    {\n
        v2 = cgc_malloc((v5 + 1) * 2);\n
        cgc_free(v2);\n
    }\n
    cgc___stack_cookie_init();\n
    if (cgc_recv(0, &v4, 4) < 0)\n
    {\n
        if (cgc_sendline(1, v0 - 13516, 30) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    if (*(&v4) > 0x300000)\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    cgc_setheap(0);\n
    v3[0] = cgc_malloc(*(&v4));\n
    if (!v3)\n
    {\n
        v6 = 2;\n
        return v6;\n
    }\n
    if (cgc_recv(0, v3, *(&v4)) < 0)\n
    {\n
        if (cgc_sendline(1, v0 - 13516, 30) < 0)\n
            cgc__terminate();\n
        cgc__terminate();\n
    }\n
    v1 = cgc_dupe_open(v3);\n
    if (v1 && v1->field_8 == *(&v4) - 24)\n
    {\n
        cgc_process_dupe(v1);\n
        cgc_setheap(0);\n
        cgc_dupe_close(v1);\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (cgc_sendline(1, v0 - 11157, 9) < 0)\n
        cgc__terminate();\n
    v6 = 3;\n
    return v6;\n
}\n
", "5164708:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_random": null, "5242900:cgc_allocate": null, "5242904:memset": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}