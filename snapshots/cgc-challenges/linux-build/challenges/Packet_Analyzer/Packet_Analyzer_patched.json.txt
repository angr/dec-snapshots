{"4198400:_init": "extern struct_0 *g_406118;\n
\n
int _init()\n
{\n
    if (g_406118)\n
    {\n
        g_406118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198528:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 20527;\n
    v6 = v5 + 29;\n
    v7 = v5 + 29;\n
    if (v7 == v6)\n
        return v5 + 29;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 20463;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 29;\n
    v9 = (v6 + 29 - (v6 + 29) >> 31) + (29 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4198935:sub_401217": null, "4198944:cgc_bzero": "int cgc_bzero(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v1 = v0; a0 > 0; a0 = v1)\n
    {\n
        v2 = v0;\n
        v0 = v2 + 1;\n
        *(v2) = 0;\n
        v1 = a0 - 1;\n
    }\n
    return v1;\n
}\n
", "4198993:sub_401251": null, "4199008:cgc_memcpy": "int cgc_memcpy(char *v0, char *a0, char *a1)\n
{\n
    int tmp_24;  // tmp #24\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    for (v1 = v0; a1 > 0; a1 = v1)\n
    {\n
        v2 = a0;\n
        a0 = v2 + 1;\n
        tmp_24 = *(v2);\n
        v3 = v0;\n
        v0 = v3 + 1;\n
        *(v3) = tmp_24;\n
        v1 = a1 + 1;\n
    }\n
    return v1;\n
}\n
", "4199072:cgc_atoi": "int cgc_atoi(char *v4)\n
{\n
    void* v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    for (v0 = 0; *(v4); v4 += 1)\n
    {\n
        if (*(v4) == 45 && !v1)\n
        {\n
            v2 = 1;\n
            continue;\n
        }\n
        if (*(v4) < 48)\n
        {\n
LABEL_40132f:\n
            v3 = v0;\n
            return v3;\n
        }\n
        if (!(*(v4) <= 57))\n
            goto LABEL_40132f;\n
        v0 = v0 * 10 + *(v4) - 48;\n
        v1 += 1;\n
        v4 += 1;\n
        if (v1 > 10)\n
        {\n
            v3 = v0;\n
            return v3;\n
        }\n
    }\n
    if (v2)\n
    {\n
        v3 = v0 * -1;\n
        return v3;\n
    }\n
    v3 = v0;\n
    return v3;\n
}\n
", "4199327:sub_40139f": null, "4199328:cgc_count_strings": "int cgc_count_strings(char v2[2])\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 1;\n
        if (!v2[0])\n
            v0 = v2[1];\n
        if (!(v0 & 1))\n
            break;\n
        if (!v2[1])\n
            v1 += 1;\n
        v2 = &v2[1];\n
    }\n
    return v1;\n
}\n
", "4199443:sub_401413": null, "4199456:cgc_next_string": "int cgc_next_string(char *v2)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v0); v0 += 1);\n
    v0 += 1;\n
    if (!*(v0))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4199550:sub_40147e": null, "4199552:cgc_FailAndTerminate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_FailAndTerminate()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v5 = &v3;\n
    v2 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    cgc_TransmitFormattedBytes(\"+s\\n
\");\n
    v7 = v1;\n
    cgc__terminate(-1);\n
    cgc_TransmitFormattedBytes();\n
    return;\n
}\n
", "4199616:cgc_TransmitFormattedBytes": "int cgc_TransmitFormattedBytes(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = v1;\n
    return cgc_vTransmitFormattedBytes(v2);\n
}\n
", "4199668:sub_4014f4": null, "4199680:cgc_ReceiveBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveBytes(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v5 = v4; a0 > 0; v4 = v5)\n
    {\n
        v0 = &v3;\n
        v2 = cgc_receive(0, v4, a0);\n
        if (v2)\n
            cgc_FailAndTerminate();\n
        if (!*(&v3))\n
            cgc_FailAndTerminate();\n
        a0 -= *(&v3);\n
        v5 = *(&v3) + v4;\n
    }\n
    return v5;\n
}\n
", "4199844:sub_4015a4": null, "4199856:cgc_itoh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoh(char v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v2;  // [bp-0x5]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 == 1)\n
        v3 >>= 4;\n
    v0 = (v3 & 15) - 10;\n
    if (v0 > 5)\n
    {\n
        v2 = (v3 & 15) + 48;\n
        return v2;\n
    }\n
    goto *(((stack_base)[12] + (stack_base)[16] * 4 - 4380)) + (stack_base)[12];\n
}\n
", "4200018:sub_401652": null, "4200032:cgc_HexDump": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_HexDump(char *v7, unsigned int a0)\n
{\n
    int tmp_23;  // tmp #23\n
    char v0;  // [bp-0x54]\n
    int tmp_17;  // tmp #17\n
    struct_0 *v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    struct_0 *v3;  // [bp-0x48], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x44], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x3a]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v5 = 0; v5 < a0; v5 += v4)\n
    {\n
        cgc_bzero(&v6, 0x32);\n
        v3 = 0;\n
        for (v4 = 0; v4 < 16; v4 += 1)\n
        {\n
            if (v5 + v4 >= a0)\n
                break;\n
            tmp_23 = cgc_itoh(*((v7 + v5 + v4)), 1, *(&v0), &v6);\n
            v8 = v3;\n
            v3 = v8 + 1;\n
            (&v6)[v8] = tmp_23;\n
            tmp_17 = cgc_itoh(*((v7 + v5 + v4)), 0, *(&v0), &v6);\n
            v9 = v3;\n
            v3 = v9 + 1;\n
            (&v6)[v9] = tmp_17;\n
            v10 = v3;\n
            v3 = v10 + 1;\n
            (&v6)[v10] = 32;\n
        }\n
        (&v6)[v3] = 10;\n
        v1 = &v6;\n
        cgc_strlen(&v6);\n
        cgc_TransmitBytes(v1);\n
    }\n
    return v5;\n
}\n
", "4200341:sub_401795": null, "4200352:cgc_TransmitBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_TransmitBytes(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v5 = v4; a0 > 0; a0 = v5)\n
    {\n
        v0 = &v3;\n
        v2 = cgc_transmit(1, v4, a0);\n
        if (v2)\n
            cgc__terminate();\n
        v4 = *(&v3) + v4;\n
        v5 = a0 - *(&v3);\n
    }\n
    return v5;\n
}\n
", "4200485:sub_401825": null, "4200496:cgc_vTransmitFormattedBytes": "typedef struct struct_1 {\n
    char field_0;\n
    struct struct_2 *field_1;\n
    unsigned int field_5;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vTransmitFormattedBytes()\n
{\n
    unsigned int v6;  // [bp-0x60]\n
    struct_1 *v24;  // [bp+0x4]\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!(!v24))\n
        goto LABEL_0x401863;\n
    return;\n
}\n
", "4201662:sub_401cbe": null, "4201664:cgc_DisplayFormatted": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DisplayFormatted(struct_0 *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if ((v3->field_2 & a0))\n
    {\n
        v2 = &v4;\n
        v0 = v2;\n
        cgc_vTransmitFormattedBytes(a1);\n
        return &v2;\n
    }\n
    return v3->field_2 & a0;\n
}\n
", "4201752:sub_401d18": null, "4201760:cgc_TransmitOptionHeader": "typedef struct struct_1 {\n
    char padding_0[8];\n
    char *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_TransmitOptionHeader()\n
{\n
    unsigned int v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v7;  // [bp+0xfffec]\n
    struct_1 *v11;  // [bp+0x10000c]\n
\n
    v2 = v7 - 3849;\n
    v3 = v11->field_8;\n
    cgc_TransmitFormattedBytes(v7 - 3849);\n
    return;\n
}\n
", "4202335:sub_401f5f": null, "4202336:cgc_DisplayStatistics": "typedef struct struct_2 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[40];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DisplayStatistics(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_TransmitFormattedBytes(\"Final Statistics:\\n
\");\n
    cgc_TransmitFormattedBytes(v0 - 3808);\n
    cgc_TransmitFormattedBytes(v0 - 3788);\n
    cgc_TransmitFormattedBytes(v0 - 3771);\n
    cgc_TransmitFormattedBytes(v0 - 3756);\n
    cgc_TransmitFormattedBytes(v0 - 3735);\n
    cgc_TransmitFormattedBytes(v0 - 3713);\n
    cgc_TransmitFormattedBytes(v0 - 3679);\n
    cgc_TransmitFormattedBytes(v0 - 3650);\n
    for (v1 = v3->field_48->field_28; v1; v1 = *((v1 + 4)))\n
    {\n
        cgc_TransmitOptionHeader();\n
    }\n
    v5 = v2;\n
    return cgc_TransmitBytes(v0 - 2746, 1);\n
}\n
", "4202682:sub_4020ba": null, "4202688:cgc_FilterMatch": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    unsigned int field_8;\n
} struct_1;\n
\n
int cgc_FilterMatch(struct_0 *v2, struct_1 *a0)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    if (v2->field_0 > a0->field_4)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a0->field_8)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= v2->field_0)\n
            {\n
                v1 = 1;\n
                return v1;\n
            }\n
            else if ((v0[a0->field_8] & v0[v2->field_4]) == (v0[v2->field_8] & v0[v2->field_4]))\n
            {\n
                v0 += 1;\n
            }\n
            else\n
            {\n
                v1 = 0;\n
                return v1;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4202894:sub_40218e": null, "4202896:cgc_ProcessAllFilters": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ProcessAllFilters(void* v5, struct_1 *a0, unsigned int *a1, unsigned int *a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < a0->field_4; v2 += 1)\n
    {\n
        v1 = *((8 + &a0->padding_0[0] + 0x4 * v2));\n
        if (cgc_FilterMatch(v1, v5) == 1)\n
        {\n
            if (v1->field_2 != 1)\n
                v3 += 1;\n
            else\n
                v4 += 1;\n
        }\n
    }\n
    *(a1) = v3;\n
    *(a2) = v4;\n
    return a2;\n
}\n
", "4203097:sub_402259": null, "4203104:cgc_CalculateChecksum": "int cgc_CalculateChecksum(unsigned int v2, unsigned short a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v1 = v0[v2] + v1;\n
    }\n
    return v1;\n
}\n
", "4203184:cgc_AnalyzePhysicalLayer": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    unsigned short field_e;\n
    unsigned int field_10;\n
    char padding_14[2];\n
    unsigned int field_16;\n
    unsigned int field_1a;\n
    unsigned int field_1e;\n
    unsigned int field_22;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AnalyzePhysicalLayer(struct_2 *v9, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned short v5;  // [bp-0x18]\n
    unsigned short v6;  // [bp-0x16]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // ebx\n
    struct_1 *v12;  // eax\n
    struct_1 *v13;  // eax\n
    struct_1 *v14;  // eax\n
    struct_1 *v15;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = a0->field_8->field_8;\n
    if (v7 > a0->field_4)\n
    {\n
        v0 = v7;\n
        v1 = a0->field_4;\n
        cgc_DisplayFormatted(v9, 1, v3 - 3633);\n
        v8 = -1;\n
        return v8;\n
    }\n
    else if (v7 >= 14)\n
    {\n
        v0 = v7;\n
        cgc_DisplayFormatted(v9, 1, v3 - 3579);\n
        v6 = a0->field_8->field_c - 1;\n
        if (v6 >= 3)\n
        {\n
            cgc_DisplayFormatted(v9, 1, v3 - 3559);\n
            v8 = -1;\n
            return v8;\n
        }\n
        v10 = v3;\n
        v0 = *((v10 + v6 * 4 + 64));\n
        cgc_DisplayFormatted(v9, 1, v10 - 3536);\n
        if (v6)\n
        {\n
            if (v6 != 1)\n
            {\n
                if (v6 == 2)\n
                {\n
                    if ((v9->field_2 & 1))\n
                        cgc_HexDump(&a0->field_8->field_c + 2, a0->field_4 - 14);\n
                    v8 = -1;\n
                    return v8;\n
                }\n
                else\n
                {\n
                    v0 = v6;\n
                    cgc_DisplayFormatted(v9, 1, v3 - 3559);\n
                    v8 = -1;\n
                    return v8;\n
                }\n
            }\n
            if (v7 < 42)\n
            {\n
                v0 = v7;\n
                cgc_DisplayFormatted(v9, 1, v3 - 3601);\n
                v8 = -1;\n
                return v8;\n
            }\n
            v0 = *((&a0->field_8->field_c + 2));\n
            cgc_DisplayFormatted(v9, 1, v3 - 3427);\n
            v0 = *(&(&a0->field_8->field_e)[1]);\n
            cgc_DisplayFormatted(v9, 1, v3 - 3407);\n
            v0 = *((&a0->field_8->field_10 + 2));\n
            cgc_DisplayFormatted(v9, 1, v3 - 3382);\n
            v0 = *(&(&a0->field_8->padding_14)[1]);\n
            cgc_DisplayFormatted(v9, 1, v3 - 3359);\n
            v0 = *((&a0->field_8->field_16 + 2));\n
            cgc_DisplayFormatted(v9, 1, v3 - 3337);\n
            v0 = *((&a0->field_8->field_1a + 2));\n
            cgc_DisplayFormatted(v9, 1, v3 - 3322);\n
            v14 = a0;\n
            v14->field_8 = &v14->field_8->field_22 + 2;\n
            v15 = a0;\n
            v15->field_4 = v15->field_4 - 42;\n
        }\n
        else if (v7 < 20)\n
        {\n
            v0 = v7;\n
            cgc_DisplayFormatted(v9, 1, v3 - 3601);\n
            v8 = -1;\n
            return v8;\n
        }\n
        else\n
        {\n
            v5 = *((&a0->field_8->field_c + 2)) - 1;\n
            if (v5 >= 4)\n
            {\n
                cgc_DisplayFormatted(v9, 1, v3 - 3517);\n
                v8 = -1;\n
                return v8;\n
            }\n
            v11 = v3;\n
            v0 = *((v11 + v5 * 4 + 76));\n
            cgc_DisplayFormatted(v9, 1, v11 - 3497);\n
            v4 = *(&a0->field_8->field_e);\n
            v12 = a0;\n
            v12->field_8 = &v12->field_8->field_10;\n
            v13 = a0;\n
            v13->field_4 = v13->field_4 - 20;\n
            if (cgc_CalculateChecksum(a0->field_8, a0->field_4) != v4)\n
            {\n
                v2 = v4;\n
                v0 = v2;\n
                v1 = cgc_CalculateChecksum(a0->field_8, a0->field_4);\n
                cgc_DisplayFormatted(v9, 1, v3 - 3481);\n
                v8 = -1;\n
                return v8;\n
            }\n
        }\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        v0 = v7;\n
        cgc_DisplayFormatted(v9, 1, v3 - 3601);\n
        v8 = -1;\n
        return v8;\n
    }\n
}\n
", "4204416:cgc_AnalyzeTransportLayer": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned short field_c;\n
    unsigned int field_e;\n
    unsigned int field_12;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AnalyzeTransportLayer(void* v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    struct_1 *v5;  // eax\n
    struct_1 *v6;  // eax\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0->field_4 < 4)\n
    {\n
        cgc_DisplayFormatted(v4, 2, v1 - 3313);\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 = a0->field_8->field_0;\n
    if (v2 != 1)\n
    {\n
        if (v2 != 2)\n
        {\n
            cgc_DisplayFormatted(v4, 2, v1 - 3153);\n
            v3 = -1;\n
            return v3;\n
        }\n
        if (a0->field_4 < 8)\n
        {\n
            cgc_DisplayFormatted(v4, 2, v1 - 3313);\n
            v3 = -1;\n
            return v3;\n
        }\n
        cgc_DisplayFormatted(v4, 2, v1 - 3178);\n
        v0 = a0->field_8->field_4;\n
        cgc_DisplayFormatted(v4, 2, v1 - 3190);\n
        v5 = a0;\n
        v5->field_8 = &v5->field_8->field_8;\n
        v6 = a0;\n
        v6->field_4 = v6->field_4 - 8;\n
    }\n
    else if (a0->field_4 >= 22)\n
    {\n
        cgc_DisplayFormatted(v4, 2, v1 - 3286);\n
        v0 = a0->field_8->field_4;\n
        cgc_DisplayFormatted(v4, 2, v1 - 3262);\n
        v0 = a0->field_8->field_8;\n
        cgc_DisplayFormatted(v4, 2, v1 - 3243);\n
        v0 = a0->field_8->field_c;\n
        cgc_DisplayFormatted(v4, 2, v1 - 3222);\n
        v0 = *(&(&a0->field_8->field_c)[1]);\n
        cgc_DisplayFormatted(v4, 2, v1 - 3210);\n
        v0 = *((&a0->field_8->field_e + 2));\n
        cgc_DisplayFormatted(v4, 2, v1 - 3190);\n
        v7 = a0;\n
        v7->field_8 = &v7->field_8->field_12 + 2;\n
        v8 = a0;\n
        v8->field_4 = v8->field_4 - 22;\n
    }\n
    else\n
    {\n
        cgc_DisplayFormatted(v4, 2, v1 - 3313);\n
        v3 = -1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4205117:sub_402a3d": null, "4205120:cgc_AnalyzeNetworkLayer": "typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned int field_8;\n
    unsigned int field_a;\n
    char padding_e[2];\n
    unsigned short field_10;\n
    unsigned int field_12;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AnalyzeNetworkLayer(void* v5, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0x10]\n
    unsigned short v3;  // [bp-0xe]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_1 *v6;  // eax\n
    struct_1 *v7;  // eax\n
    struct_1 *v8;  // eax\n
    struct_1 *v9;  // eax\n
    unsigned int v10;  // ebx\n
    struct_1 *v11;  // eax\n
    struct_1 *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0->field_4 < 6)\n
    {\n
        cgc_DisplayFormatted(v5, 4, v1 - 3129);\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = a0->field_8->field_4;\n
    if (v3 == 1)\n
    {\n
        cgc_DisplayFormatted(v5, 4, v1 - 3104);\n
        if (a0->field_4 < 14)\n
        {\n
            cgc_DisplayFormatted(v5, 4, v1 - 3129);\n
            v4 = -1;\n
            return v4;\n
        }\n
        v0 = *(&a0->field_8->field_6);\n
        cgc_DisplayFormatted(v5, 4, v1 - 3427);\n
        v0 = *((&a0->field_8->field_8 + 2));\n
        cgc_DisplayFormatted(v5, 4, v1 - 3407);\n
        v6 = a0;\n
        v6->field_8 = &v6->field_8->field_a + 2;\n
        v7 = a0;\n
        v7->field_4 = v7->field_4 - 14;\n
    }\n
    else if (v3 != 2)\n
    {\n
        if (v3 != 3)\n
        {\n
            cgc_DisplayFormatted(v5, 4, v1 - 2952);\n
            v4 = -1;\n
            return v4;\n
        }\n
        cgc_DisplayFormatted(v5, 4, v1 - 3055);\n
        if (a0->field_4 < 22)\n
        {\n
            cgc_DisplayFormatted(v5, 4, v1 - 3129);\n
            v4 = -1;\n
            return v4;\n
        }\n
        v2 = a0->field_8->field_6 - 1;\n
        if (v2 >= 6)\n
        {\n
            cgc_DisplayFormatted(v5, 4, v1 - 3034);\n
            v4 = -1;\n
            return v4;\n
        }\n
        v10 = v1;\n
        v0 = *((v10 + v2 * 4 + 92));\n
        cgc_DisplayFormatted(v5, 4, v10 - 3006);\n
        v0 = a0->field_8->field_8;\n
        cgc_DisplayFormatted(v5, 4, v1 - 3427);\n
        v0 = a0->field_8->field_a;\n
        cgc_DisplayFormatted(v5, 4, v1 - 3407);\n
        v0 = a0->field_8->padding_e;\n
        cgc_DisplayFormatted(v5, 4, v1 - 2982);\n
        v0 = *(&a0->field_8->field_10);\n
        cgc_DisplayFormatted(v5, 4, v1 - 2967);\n
        v11 = a0;\n
        v11->field_8 = &v11->field_8->field_12 + 2;\n
        v12 = a0;\n
        v12->field_4 = v12->field_4 - 22;\n
    }\n
    else\n
    {\n
        cgc_DisplayFormatted(v5, 4, v1 - 3080);\n
        if (a0->field_4 < 10)\n
        {\n
            cgc_DisplayFormatted(v5, 4, v1 - 3129);\n
            v4 = -1;\n
            return v4;\n
        }\n
        v0 = *(&a0->field_8->field_6);\n
        cgc_DisplayFormatted(v5, 4, v1 - 3427);\n
        v8 = a0;\n
        v8->field_8 = &v8->field_8->field_8 + 2;\n
        v9 = a0;\n
        v9->field_4 = v9->field_4 - 10;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4206137:sub_402e39": null, "4206144:cgc_AnalyzeApplicationLayer": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned short field_4;\n
    unsigned short field_6;\n
    unsigned short field_8;\n
    char padding_a[2];\n
    unsigned short field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AnalyzeApplicationLayer(void* v17, struct_2 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x260], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x251]\n
    unsigned int v2;  // [bp-0x250]\n
    unsigned short v3;  // [bp-0x24a]\n
    char v4;  // [bp-0x248]\n
    unsigned short v5;  // [bp-0x242]\n
    char v6;  // [bp-0x240]\n
    unsigned short v7;  // [bp-0x23a]\n
    char v8;  // [bp-0x237]\n
    char v9;  // [bp-0x137]\n
    char v10;  // [bp-0x136]\n
    char v11;  // [bp-0x115]\n
    char v12;  // [bp-0x114]\n
    unsigned short v13;  // [bp-0x14]\n
    unsigned short v14;  // [bp-0x12]\n
    unsigned int v15;  // [bp-0x10]\n
    unsigned int v16;  // [bp-0xc]\n
    struct_2 *v18;  // eax\n
    struct_2 *v19;  // eax\n
    struct_2 *v20;  // eax\n
    struct_2 *v21;  // eax\n
    struct_2 *v22;  // eax\n
    struct_2 *v23;  // eax\n
    struct_2 *v24;  // eax\n
    struct_2 *v25;  // eax\n
    struct_2 *v26;  // eax\n
    struct_2 *v27;  // eax\n
    struct_2 *v28;  // eax\n
    struct_2 *v29;  // eax\n
    struct_2 *v30;  // eax\n
    struct_2 *v31;  // eax\n
    struct_2 *v32;  // eax\n
    struct_2 *v33;  // eax\n
    struct_2 *v34;  // eax\n
    struct_2 *v35;  // eax\n
    struct_2 *v36;  // eax\n
    struct_2 *v37;  // eax\n
    struct_2 *v38;  // eax\n
    struct_2 *v39;  // eax\n
    struct_2 *v40;  // eax\n
    struct_2 *v41;  // eax\n
    struct_2 *v42;  // eax\n
    struct_2 *v43;  // eax\n
    struct_2 *v44;  // eax\n
    struct_2 *v45;  // eax\n
    struct_2 *v46;  // eax\n
    struct_2 *v47;  // eax\n
    struct_2 *v48;  // eax\n
    struct_2 *v49;  // eax\n
    struct_2 *v50;  // eax\n
    struct_2 *v51;  // eax\n
    struct_2 *v52;  // eax\n
    struct_2 *v53;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0->field_4 < 6)\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
        v16 = -1;\n
        return v16;\n
    }\n
    v15 = *(&a0->field_8->field_0);\n
    v14 = a0->field_8->field_4;\n
    if (v14 == 1)\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2901);\n
        if (a0->field_4 < 12)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        v0 = a0->field_8->field_6;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2869);\n
        v0 = *(&a0->field_8->field_8);\n
        cgc_DisplayFormatted(v17, 8, v2 - 2850);\n
        v18 = a0;\n
        v18->field_8 = &v18->field_8->field_c;\n
        v19 = a0;\n
        v19->field_4 = v19->field_4 - 12;\n
    }\n
    else if (v14 == 2)\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2836);\n
        if (a0->field_4 < 14)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        v0 = a0->field_8->field_8;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2804);\n
        v0 = a0->field_8->padding_a;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2786);\n
        cgc_DisplayFormatted(v17, 8, v2 - 2768);\n
        v13 = a0->field_8->field_c;\n
        v24 = a0;\n
        v24->field_8 = v24->field_8 + 1;\n
        v25 = a0;\n
        v25->field_4 = v25->field_4 - 14;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v13 > 0)\n
                v1 = a0->field_4;\n
            if (!(v1 & 1))\n
                break;\n
            cgc_bzero(&v12, 0x100);\n
            v11 = a0->field_8->field_0;\n
            v30 = a0;\n
            v30->field_8 = &v30->field_8->padding_1;\n
            v31 = a0;\n
            v31->field_4 = v31->field_4 - 1;\n
            if (v11 > a0->field_4)\n
            {\n
                cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
                v16 = -1;\n
                return v16;\n
            }\n
            cgc_memcpy(&v12, a0->field_8, v11);\n
            v0 = &v12;\n
            cgc_DisplayFormatted(v17, 8, v2 - 2744);\n
            v32 = a0;\n
            v32->field_8 = &(&v32->field_8->field_0)[v11];\n
            v33 = a0;\n
            v33->field_4 = v33->field_4 - v11;\n
            v13 -= 1;\n
        }\n
    }\n
    else if (v14 == 3)\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2739);\n
        if (a0->field_4 < 70)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        cgc_bzero(&v10, 0x21);\n
        cgc_memcpy(&v10, &a0->field_8->field_6, 0x20);\n
        v0 = &v10;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2715);\n
        cgc_memcpy(&v10, &a0->field_8[2].padding_a, 0x20);\n
        v0 = &v10;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2701);\n
        v34 = a0;\n
        v34->field_8 = v34->field_8 + 5;\n
        v35 = a0;\n
        v35->field_4 = v35->field_4 - 70;\n
    }\n
    else if (v14 == 4)\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2686);\n
        v20 = a0;\n
        v20->field_8 = &v20->field_8->field_6;\n
        v21 = a0;\n
        v21->field_4 = v21->field_4 - 6;\n
        if (!a0->field_4)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        v9 = a0->field_8->field_0;\n
        v22 = a0;\n
        v22->field_8 = &v22->field_8->padding_1;\n
        v23 = a0;\n
        v23->field_4 = v23->field_4 - 1;\n
        if (a0->field_4 < v9)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        cgc_bzero(&v8, 0x100);\n
        cgc_memcpy(&v8, a0->field_8, v9);\n
        v0 = &v8;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2661);\n
        v36 = a0;\n
        v36->field_8 = &(&v36->field_8->field_0)[v9];\n
        v37 = a0;\n
        v37->field_4 = v37->field_4 - v9;\n
        if (!a0->field_4)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        v9 = a0->field_8->field_0;\n
        v38 = a0;\n
        v38->field_8 = &v38->field_8->padding_1;\n
        v39 = a0;\n
        v39->field_4 = v39->field_4 - 1;\n
        if (a0->field_4 < v9)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        cgc_bzero(&v8, 0x100);\n
        cgc_memcpy(&v8, a0->field_8, v9);\n
        v0 = &v8;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2651);\n
        v40 = a0;\n
        v40->field_8 = &(&v40->field_8->field_0)[v9];\n
        v41 = a0;\n
        v41->field_4 = v41->field_4 - v9;\n
        if (!a0->field_4)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        v9 = a0->field_8->field_0;\n
        v44 = a0;\n
        v44->field_8 = &v44->field_8->padding_1;\n
        v45 = a0;\n
        v45->field_4 = v45->field_4 - 1;\n
        if (a0->field_4 < v9)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        cgc_bzero(&v8, 0x100);\n
        cgc_memcpy(&v8, a0->field_8, v9);\n
        v0 = &v8;\n
        cgc_DisplayFormatted(v17, 8, v2 - 2643);\n
        v48 = a0;\n
        v48->field_8 = &(&v48->field_8->field_0)[v9];\n
        v49 = a0;\n
        v49->field_4 = v49->field_4 - v9;\n
    }\n
    else if (v14 != 5)\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2521);\n
        v16 = -1;\n
        return v16;\n
    }\n
    else\n
    {\n
        cgc_DisplayFormatted(v17, 8, v2 - 2630);\n
        if (a0->field_4 < 8)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        v26 = a0;\n
        v26->field_8 = &v26->field_8->field_6;\n
        v27 = a0;\n
        v27->field_4 = v27->field_4 - 6;\n
        v7 = *(&a0->field_8->field_0);\n
        v28 = a0;\n
        v28->field_8 = &v28->field_8->padding_1[1];\n
        v29 = a0;\n
        v29->field_4 = v29->field_4 - 2;\n
        if (v7 > 0x400)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2603);\n
            v16 = -1;\n
            return v16;\n
        }\n
        else if (v7 > a0->field_4)\n
        {\n
            cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
            v16 = -1;\n
            return v16;\n
        }\n
        else\n
        {\n
            if (cgc_allocate(v7 + 1, 0))\n
                cgc__terminate();\n
            cgc_bzero(*(&v6), v7 + 1);\n
            cgc_memcpy(*(&v6), a0->field_8, v7);\n
            v0 = *(&v6);\n
            cgc_DisplayFormatted(v17, 8, v2 - 2590);\n
            v42 = a0;\n
            v42->field_8 = &(&v42->field_8->field_0)[v7];\n
            v43 = a0;\n
            v43->field_4 = v43->field_4 - v7;\n
            cgc_deallocate(*(&v6));\n
            if (a0->field_4 < 2)\n
            {\n
                cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
                v16 = -1;\n
                return v16;\n
            }\n
            v5 = *(&a0->field_8->field_0);\n
            v46 = a0;\n
            v46->field_8 = &v46->field_8->padding_1[1];\n
            v47 = a0;\n
            v47->field_4 = v47->field_4 - 2;\n
            if (v5 > 0x400)\n
            {\n
                cgc_DisplayFormatted(v17, 8, v2 - 2581);\n
                v16 = -1;\n
                return v16;\n
            }\n
            else if (v5 > a0->field_4)\n
            {\n
                cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
                v16 = -1;\n
                return v16;\n
            }\n
            else\n
            {\n
                if (cgc_allocate(v5 + 1, 0))\n
                    cgc__terminate();\n
                cgc_bzero(*(&v4), v5 + 1);\n
                cgc_memcpy(*(&v4), a0->field_8, v5);\n
                v0 = *(&v4);\n
                cgc_DisplayFormatted(v17, 8, v2 - 2558);\n
                v50 = a0;\n
                v50->field_8 = &(&v50->field_8->field_0)[v5];\n
                v51 = a0;\n
                v51->field_4 = v51->field_4 - v5;\n
                cgc_deallocate(*(&v4));\n
                if (a0->field_4 < 2)\n
                {\n
                    cgc_DisplayFormatted(v17, 8, v2 - 2930);\n
                    v16 = -1;\n
                    return v16;\n
                }\n
                v3 = *(&a0->field_8->field_0);\n
                v52 = a0;\n
                v52->field_8 = &v52->field_8->padding_1[1];\n
                v53 = a0;\n
                v53->field_4 = v53->field_4 - 2;\n
                if (v3 != a0->field_4)\n
                {\n
                    cgc_DisplayFormatted(v17, 8, v2 - 2545);\n
                    v16 = -1;\n
                    return v16;\n
                }\n
            }\n
        }\n
    }\n
    v16 = 0;\n
    return v16;\n
}\n
", "4209862:sub_403cc6": null, "4209872:cgc_AnalyzePacket": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
    char padding_6[2];\n
    char *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    char padding_4[68];\n
    struct struct_1 *field_48;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    char padding_18[4];\n
    unsigned int field_1c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AnalyzePacket(struct_0 *v6, struct_2 *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9[8];  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_ProcessAllFilters(a0, v6, &v2, &v1);\n
    if (v2 > 0)\n
    {\n
        cgc_TransmitBytes(v0 - 2491, 5);\n
        v3 = -1;\n
    }\n
    else\n
    {\n
        if (v6->field_48->field_14 > 0 && !v1)\n
        {\n
            cgc_TransmitBytes(v0 - 2491, 5);\n
            v3 = -1;\n
            goto LABEL_403e7a;\n
        }\n
        v9 = v6->field_48;\n
        v9[7] = v9[7] + 1;\n
        if (!cgc_AnalyzePhysicalLayer(v6, a0) && !cgc_AnalyzeTransportLayer(v6, a0) && !cgc_AnalyzeNetworkLayer(v6, a0) && !cgc_AnalyzeApplicationLayer(v6, a0))\n
        {\n
            if ((v6->field_2 & 32))\n
            {\n
                cgc_HexDump(a0->field_8, a0->field_4);\n
                cgc_TransmitBytes(v0 - 2746, 1);\n
            }\n
            v3 = 0;\n
            goto LABEL_403e7a;\n
        }\n
        v3 = -2;\n
    }\n
LABEL_403e7a:\n
    return v3;\n
}\n
", "4210308:sub_403e84": null, "4210320:cgc_ReceiveAndVerifyInitializationPacket": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    char field_4;\n
    char padding_5[67];\n
    char *field_48;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveAndVerifyInitializationPacket(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_ReceiveBytes(&v2, 4);\n
    if (*(&v2) != 2774181210)\n
        cgc_FailAndTerminate();\n
    cgc_ReceiveBytes(v4, 1);\n
    if (v4->field_0 > 2)\n
        cgc_FailAndTerminate();\n
    cgc_ReceiveBytes(&v4->padding_1[1], 2);\n
    cgc_ReceiveBytes(&v4->field_4, 1);\n
    if (v4->field_4 > 16)\n
        cgc_FailAndTerminate();\n
    v0 = &v4->field_48;\n
    if (cgc_allocate(44, 1))\n
        cgc_FailAndTerminate();\n
    cgc_bzero(v4->field_48, 0x2c);\n
    return 0;\n
}\n
", "4210623:sub_403fbf": null, "4210624:cgc_ReceiveAndVerifyFilters": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[67];\n
    struct struct_2 *field_48;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
    unsigned int field_18;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveAndVerifyFilters(struct_1 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[7];  // eax\n
    unsigned int v6[7];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < v4->field_4; v3 += 1)\n
    {\n
        v0 = &v2;\n
        if (cgc_allocate(12, 1))\n
            cgc_FailAndTerminate();\n
        *((8 + &v4->padding_0[0] + 0x4 * v3)) = *(&v2);\n
        cgc_ReceiveBytes(*(&v2), 2);\n
        if (*(*(&v2)) > 0x1000)\n
            cgc_FailAndTerminate();\n
        cgc_ReceiveBytes(*(&v2) + 2, 1);\n
        if (*((*(&v2) + 2)) > 2)\n
            cgc_FailAndTerminate();\n
        v0 = *(&v2) + 4;\n
        if (cgc_allocate(*(*(&v2)), 1))\n
            cgc_FailAndTerminate();\n
        cgc_bzero(*((*(&v2) + 4)), *(*(&v2)));\n
        v0 = *(&v2) + 8;\n
        if (cgc_allocate(*(*(&v2)), 1))\n
            cgc_FailAndTerminate();\n
        cgc_bzero(*((*(&v2) + 8)), *(*(&v2)));\n
        cgc_ReceiveBytes(*((*(&v2) + 4)), *(*(&v2)));\n
        cgc_ReceiveBytes(*((*(&v2) + 8)), *(*(&v2)));\n
        if (*((*(&v2) + 2)) != 1)\n
        {\n
            v6 = v4->field_48;\n
            v6[6] = v6[6] + 1;\n
        }\n
        else\n
        {\n
            v5 = v4->field_48;\n
            v5[5] = v5[5] + 1;\n
        }\n
    }\n
    return 0;\n
}\n
", "4211165:sub_4041dd": null, "4211168:cgc_ReceiveAndProcessFile": "typedef struct struct_2 {\n
    char padding_0[72];\n
    struct struct_1 *field_48;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    struct struct_4 *field_4;\n
    char *field_8;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[32];\n
    char field_24;\n
    char padding_25[3];\n
    struct struct_0 *field_28;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
    char padding_2[2];\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveAndProcessFile(struct_2 *v12)\n
{\n
    struct_3 *v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x2c]\n
    char v3;  // [bp-0x28]\n
    char v4;  // [bp-0x24]\n
    unsigned short v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_4 *v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v10;  // [bp-0xc]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebx\n
\n
    v11 = v13;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_ReceiveBytes(&v10, 4);\n
    if (*(&v10) != 3702512809)\n
        cgc_FailAndTerminate();\n
    cgc_ReceiveBytes(&v12->field_48->padding_4, 4);\n
    cgc_ReceiveBytes(&v12->field_48->padding_4[4], 4);\n
    cgc_ReceiveBytes(v12->field_48, 4);\n
    if (v12->field_48->field_0 > 0x800)\n
        cgc_FailAndTerminate();\n
    cgc_ReceiveBytes(&v12->field_48->field_24, 1);\n
    if (v12->field_48->field_24 > 50)\n
        cgc_FailAndTerminate();\n
    v9 = 0;\n
    for (v8 = 0; v8 < v12->field_48->field_24; v8 += 1)\n
    {\n
        if (v9)\n
        {\n
            v0 = &v9->field_4;\n
            if (cgc_allocate(12, 1))\n
                cgc_FailAndTerminate();\n
            v9 = v9->field_4;\n
        }\n
        else\n
        {\n
            v0 = &v12->field_48->field_28;\n
            if (cgc_allocate(12, 1))\n
                cgc_FailAndTerminate();\n
            v9 = v12->field_48->field_28;\n
        }\n
        cgc_bzero(v9, 0xc);\n
        cgc_ReceiveBytes(v9, 1);\n
        cgc_ReceiveBytes(v9 + 1, 1);\n
        v0 = v9 + 8;\n
        if (cgc_allocate(*((v9 + 1)) + 1, 1))\n
            cgc_FailAndTerminate();\n
        cgc_bzero(*((v9 + 8)), *((v9 + 1)) + 1);\n
        cgc_ReceiveBytes(*((v9 + 8)), *((v9 + 1)));\n
    }\n
    for (v7 = 0; v7 < v12->field_48->field_0; v7 += 1)\n
    {\n
        cgc_ReceiveBytes(&v2, 4);\n
        cgc_ReceiveBytes(&v3, 2);\n
        if (*(&v3) > 0x1000)\n
            cgc_FailAndTerminate();\n
        v0 = &v4;\n
        if (cgc_allocate(*(&v3), 1))\n
            cgc_FailAndTerminate();\n
        cgc_ReceiveBytes(*(&v4), *(&v3));\n
        v5 = *(&v3);\n
        v6 = *(&v4);\n
        cgc_AnalyzePacket(v12, &v2);\n
        cgc_deallocate(v6);\n
    }\n
    v14 = v11;\n
    return 0;\n
}\n
", "4212084:sub_404574": null, "4212096:cgc_ReceiveAndProcessStream": "typedef struct struct_1 {\n
    char padding_0[72];\n
    struct struct_2 *field_48;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveAndProcessStream(struct_1 *v9)\n
{\n
    struct_0 *v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned short v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int *v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ebx\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 1;\n
    while (true)\n
    {\n
        cgc_ReceiveBytes(&v4, 2);\n
        if (!*(&v4))\n
            break;\n
        if (*(&v4) > 0x1000)\n
            cgc_FailAndTerminate();\n
        v11 = v9->field_48;\n
        *(v11) = *(v11) + 1;\n
        v0 = &v5;\n
        if (cgc_allocate(*(&v4), 1))\n
            cgc_FailAndTerminate();\n
        cgc_ReceiveBytes(*(&v5), *(&v4));\n
        v12 = v2;\n
        v2 = v12 + 1;\n
        v3 = v12;\n
        v6 = *(&v4);\n
        v7 = *(&v5);\n
        cgc_AnalyzePacket(v9, &v3);\n
        cgc_deallocate(*(&v5));\n
    }\n
    v13 = v8;\n
    return 0;\n
}\n
", "4212398:sub_4046ae": null, "4212400:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x5c]\n
    char v3;  // [bp-0x5a]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (cgc_ReceiveAndVerifyInitializationPacket(&v2))\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (!cgc_ReceiveAndVerifyFilters(&v2))\n
    {\n
        v0 = v2;\n
        if (v0 == 1)\n
        {\n
            cgc_ReceiveAndProcessFile(&v2);\n
        }\n
        else if (v0 == 2)\n
        {\n
            cgc_ReceiveAndProcessStream(&v2);\n
        }\n
        if ((*(&v3) & 16))\n
            cgc_DisplayStatistics(&v2);\n
        cgc_TransmitFormattedBytes(v1 - 2044);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
}\n
", "4212648:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}