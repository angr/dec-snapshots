{"4198400:_init": "extern struct_0 *g_580118;\n
\n
int _init()\n
{\n
    if (g_580118)\n
    {\n
        g_580118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198528:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 1568815;\n
    v6 = v5 + 11;\n
    v7 = v5 + 11;\n
    if (v7 == v6)\n
        return v5 + 11;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 1568751;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 11;\n
    v9 = (v6 + 11 - (v6 + 11) >> 31) + (11 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_580114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_580114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_memset": "int cgc_memset(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1)\n
    {\n
        v0 = v2;\n
        while (true)\n
        {\n
            v3 = a1;\n
            a1 = v3 - 1;\n
            if (!v3)\n
                break;\n
            v4 = v0;\n
            v0 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v1 = v2;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = v2;\n
        return v1;\n
    }\n
}\n
", "4199001:sub_401259": null, "4199008:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(v2) == *(a0);\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        v1 = *(v2) - *(a0);\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4199173:sub_401305": null, "4199184:cgc_strncmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_strncmp(struct_0 *v1, struct_0 *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // eax\n
    struct_0 *v6;  // ecx\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (!a1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v3 = a1;\n
            a1 = v3 - 1;\n
            if (!v3)\n
            {\n
                v0 = 0;\n
                return v0;\n
            }\n
            v4 = v1;\n
            v1 = &v4->field_0;\n
            v5 = v4->field_-1;\n
            v6 = a0;\n
            a0 = &v6->field_0;\n
            if (v5 != v6->field_-1)\n
            {\n
                v0 = *((v1 - 1)) - *((a0 - 1));\n
                return v0;\n
            }\n
        }\n
    }\n
}\n
", "4199368:sub_4013c8": null, "4199376:cgc_strlcpy": "int cgc_strlcpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    else if (a1)\n
    {\n
        for (v0 = 0; v0 < a1 - 1; v0 += 1)\n
        {\n
            if (!*((a0 + v0)))\n
                break;\n
            *((v2 + v0)) = *((a0 + v0));\n
        }\n
        *((v2 + v0)) = 0;\n
        v1 = v0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4199566:sub_40148e": null, "4199568:cgc_strlcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strlcat(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a1)\n
    {\n
        v2 = cgc_strlen();\n
        v0 = v2;\n
        v3 = v0 + cgc_strlcpy(v4 + v2, a0, a1 - v2);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4199741:sub_40153d": null, "4199744:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    char *v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    for (v0 = v2; *(v2); v2 += 1);\n
    v1 = v2 - v0;\n
    return v1;\n
}\n
", "4199826:sub_401592": null, "4199840:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0 < 0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else if (a0 > 255)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            if (*(v1) != a0)\n
            {\n
                v3 = v1;\n
                v1 = v3 + 1;\n
                if (!*(v3))\n
                {\n
                    v0 = 0;\n
                    return v0;\n
                }\n
            }\n
            else\n
            {\n
                v0 = v1;\n
                return v0;\n
            }\n
        }\n
    }\n
}\n
", "4199995:sub_40163b": null, "4200000:cgc_strspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strspn(char *v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (*(v4))\n
            {\n
                v5 = v4;\n
                v4 = v5 + 1;\n
                v0 = cgc_strchr(a0, *(v5));\n
            }\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
        }\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4200190:sub_4016fe": null, "4200192:cgc_strcspn": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcspn(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (!a0)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        if (!*(v3))\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        else if (!cgc_strchr(a0, *(v3)))\n
        {\n
            v3 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4200370:sub_4017b2": null, "4200384:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[48];\n
    struct struct_1 *field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v4)\n
        v2->field_30 = v4;\n
    if (!v2->field_30)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v5 = v2;\n
        v0 = &v5->field_30->field_0;\n
        v4 = &v0[cgc_strspn(v5->field_30, a0)];\n
        v1 = v4;\n
        v6 = v2;\n
        v6->field_30 = v1 + cgc_strcspn(v4, a0);\n
        if (v6->field_30 == v4)\n
        {\n
            v2->field_30 = 0;\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!v2->field_30->field_0)\n
        {\n
            v2->field_30 = 0;\n
        }\n
        else\n
        {\n
            v7 = v2;\n
            v7->field_30->field_0 = 0;\n
            v7->field_30 = v7->field_30 + 1;\n
        }\n
        v3 = v4;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4200688:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_strlen(v5) + 1;\n
    v2 = cgc_malloc();\n
    if (v2)\n
    {\n
        v0 = v3;\n
        cgc_memcpy(v2, v5);\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4200839:sub_401987": null, "4200848:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4200934:sub_4019e6": null, "4200944:cgc_transmit_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    for (v2 = 0; v3 < a1; v3 = v2 + v3)\n
    {\n
        v0 = &v2;\n
        v4 = cgc_transmit(v5, a0 + v3, a1 - v3);\n
        if (v4 > 0)\n
            cgc_err(3);\n
    }\n
    return 1;\n
}\n
", "4201107:sub_401a93": null, "4201120:cgc_err": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_err()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v4;  // [bp+0x4]\n
    char v5;  // [bp+0x8]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v6 = &v3;\n
    v2 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = *(&v5);\n
    cgc_transmit_str(2);\n
    v8 = v1;\n
    cgc__terminate(v4);\n
    cgc_transmit_str();\n
    return;\n
}\n
", "4201184:cgc_transmit_str": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_str(unsigned int v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    v2 = a0;\n
    v6 = v3;\n
    return cgc_transmit_all(v1, v2, cgc_strlen(a0));\n
}\n
", "4201266:sub_401b32": null, "4201280:cgc_ffs_u": "int cgc_ffs_u(unsigned int v2)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
\n
    v0 = 0;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v0 = 0;\n
    while (v0 < 32)\n
    {\n
        v3 = 1 << (v0 & 31);\n
        if ((v0 & 32))\n
            v3 = 0;\n
        if ((v2 & v3))\n
        {\n
            if (!(!1))\n
                goto LABEL_401bc3;\n
            goto LABEL_401bbe;\n
        }\n
        else if (false)\n
        {\n
LABEL_401bc3:\n
            v0 += 1;\n
        }\n
        else\n
        {\n
LABEL_401bbe:\n
            break;\n
        }\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4201445:sub_401be5": null, "4201456:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned short field_38;\n
    char padding_3a[120];\n
    char field_b2;\n
} struct_0;\n
\n
typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    struct struct_2 *field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_2 *field_14;\n
    struct struct_1 *field_18;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x21]\n
    struct_0 *v2;  // [bp-0x20]\n
    struct_3 *v3;  // [bp-0x1c]\n
    struct_4 *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0xc]\n
    struct_0 *v9;  // ebx\n
    struct_0 *v10;  // ebx\n
    struct_3 *v11;  // eax\n
    unsigned int v12;  // edx\n
    struct_3 *v13;  // eax\n
    struct_0 *v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
    struct_0 *v17;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v8 <= 0)\n
    {\n
        v9 = v2;\n
        v0 = 160;\n
        cgc_printf(&v9[8628].padding_0[40], &v9[8628].padding_0[13]);\n
    }\n
    if (!v2->field_b2)\n
        cgc_malloc_init();\n
    if (v8 > v2->field_38)\n
    {\n
        v7 = cgc_malloc_large();\n
        return v7;\n
    }\n
    for (v6 = 0; v6 < 10; v6 += 1)\n
    {\n
        if (v8 <= *((66 + &v2->padding_0[0] + 0xc * v6)))\n
            break;\n
    }\n
    v4 = &v2->padding_3a[12 * v6];\n
    if (!v4->field_0)\n
    {\n
        v3 = cgc_malloc_request_chunk();\n
        v3->field_10 = v4;\n
        v3->field_4 = v4->field_8;\n
        v3->field_a = v4->field_a;\n
        if (!v3)\n
        {\n
            v10 = v2;\n
            v0 = 182;\n
            cgc_printf(&v10[8627].padding_3a[59], &v10[8628].padding_0[13]);\n
        }\n
        v3->field_18 = 0;\n
        v3->field_14 = &v4->field_0->padding_0;\n
        if (v4->field_0)\n
            v4->field_0->field_18 = &v3->padding_0;\n
        v4->field_0 = v3;\n
    }\n
    v3 = v4->field_0;\n
    v6 = cgc_ffs_u(v3->field_c);\n
    v11 = v3;\n
    v11->field_8 = v11->field_8 + 1;\n
    v1 = v6;\n
    v12 = 1 << (v6 & 31);\n
    if ((v1 & 32))\n
        v12 = 0;\n
    v13 = v3;\n
    v13->field_c = v13->field_c | v12;\n
    if (v3->field_8 == v3->field_a)\n
    {\n
        if (!v4->field_0)\n
        {\n
            v14 = v2;\n
            v0 = 193;\n
            cgc_printf(&v14[8627].padding_3a[25], &v14[8628].padding_0[13]);\n
        }\n
        if (!v3)\n
        {\n
            v15 = v2;\n
            v0 = 193;\n
            cgc_printf(&v15[8627].padding_3a[59], &v15[8628].padding_0[13]);\n
        }\n
        if (v3 == v4->field_0)\n
        {\n
            v4->field_0 = &v3->field_14->padding_0;\n
        }\n
        else\n
        {\n
            if (v3->field_18)\n
                v3->field_18->field_14 = v3->field_14;\n
            if (v3->field_14)\n
                v3->field_14->field_18 = v3->field_18;\n
        }\n
        if (!v3)\n
        {\n
            v16 = v2;\n
            v0 = 194;\n
            cgc_printf(&v16[8627].padding_3a[59], &v16[8628].padding_0[13]);\n
        }\n
        v3->field_18 = 0;\n
        v3->field_14 = v4->field_4;\n
        if (v4->field_4)\n
            v4->field_4->field_18 = v3;\n
        v4->field_4 = &v3->padding_0;\n
        if (!v4->field_4)\n
        {\n
            v17 = v2;\n
            v0 = 195;\n
            cgc_printf(&v17[8627].padding_0[36], &v17[8628].padding_0[13]);\n
        }\n
    }\n
    v5 = &v3->padding_0[1 + v6 * v4->field_8];\n
    v7 = v5;\n
    return v7;\n
}\n
", "4202404:sub_401fa4": null, "4202416:cgc_malloc_init": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned short field_38;\n
    char padding_3a[120];\n
    char field_b2;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* state;\n
\n
int cgc_malloc_init()\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned short v1;  // [bp-0x20]\n
    unsigned short v2;  // [bp-0x1e]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned short v5;  // [bp-0x12]\n
    unsigned short v6;  // [bp-0x10]\n
    unsigned short v7;  // [bp-0xe]\n
    unsigned short v8[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // ebx\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct_0 *v22;  // ebx\n
    struct_0 *v23;  // ebx\n
    struct_0 *v24;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    *(&v8[0]) = 0;\n
    v7 = 128;\n
    state = 0;\n
    cgc_memset(&state, 0, 127);\n
    v6 = 4068;\n
    for (v5 = 0; v5 < 10; v5 += 1)\n
    {\n
        v8 = &v0->padding_3a[12 * v5];\n
        *((v8 + 8)) = v7;\n
        v12 = v6;\n
        *((v8 + 10)) = (v12 >> 31 CONCAT v12) /m v7;\n
        if (*((v8 + 10)) <= 1)\n
        {\n
            v13 = v0;\n
            cgc_printf(&v13[8625].padding_3a[78], &v13[8628].padding_0[13]);\n
        }\n
        if (*((v8 + 10)) > 32)\n
        {\n
            v14 = v0;\n
            cgc_printf(&v14[8625].padding_3a[30], &v14[8628].padding_0[13]);\n
        }\n
        v4 = v7;\n
        v16 = ftop<4> - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v17 = v16 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v17 = v16 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v18 = v17 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v19 = v18 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v19 = v18 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t20,1] = t21\n
        [D] PutI(136:I8x8)[t20,1] = 0x01\n
        [D] PutI(136:I8x8)[t20,0] = 0x00\n
        v20 = v19 + 1;\n
        v2 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-30, size=2, endness=Iend_LE)))));\n
        v1 = v2 | 0xc00;\n
        v3 = ([D] GetI(136:I8x8)[t66,0] ? [D] GetI(72:F64x8)[t66,0] : nan);\n
        [D] PutI(136:I8x8)[t66,0] = 0x00\n
        v21 = v20 + 1;\n
        v7 = v3;\n
    }\n
    if (!v8)\n
    {\n
        v22 = v0;\n
        cgc_printf(&v22[8625].padding_0[38], &v22[8628].padding_0[13]);\n
    }\n
    if (v5 != 10)\n
    {\n
        v23 = v0;\n
        cgc_printf(&v23[8625].padding_0[5], &v23[8628].padding_0[13]);\n
    }\n
    v0->field_38 = *((v8 + 8));\n
    if (v0->field_38 <= 0)\n
    {\n
        v24 = v0;\n
        cgc_printf(&v24[8624].padding_3a[91], &v24[8628].padding_0[13]);\n
    }\n
    v0->field_b2 = 1;\n
    return v0;\n
}\n
", "4202966:sub_4021d6": null, "4202976:cgc_malloc_large": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_malloc_large(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v3 = v4 + 4123 >> 12;\n
    v0 = v3;\n
    v1 = cgc_malloc_request_chunk();\n
    v1->field_4 = v4;\n
    v2 = &v1[3].field_4;\n
    return v2;\n
}\n
", "4203056:cgc_malloc_request_chunk": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_request_chunk(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    struct_0 *v8;  // ebx\n
    struct_0 *v9;  // ebx\n
    struct_0 *v10;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = v5 * 0x1000;\n
    if (v3 <= 0)\n
    {\n
        v6 = v1;\n
        v0 = 120;\n
        cgc_printf(&v6[27579].padding_0[28], &v6[27579].padding_0[1]);\n
    }\n
    if ((0 CONCAT v3) /m v5 != 0x1000)\n
    {\n
        v7 = v1;\n
        v0 = 121;\n
        cgc_printf(&v7[27567].padding_0[50], &v7[27579].padding_0[1]);\n
    }\n
    v0 = &v4;\n
    v2 = cgc_allocate(v3, 0);\n
    if (v2)\n
    {\n
        v8 = v1;\n
        v0 = 124;\n
        cgc_printf(&v8[27567].padding_0[6], &v8[27579].padding_0[1]);\n
    }\n
    if (!v4)\n
    {\n
        v9 = v1;\n
        v0 = 125;\n
        cgc_printf(&v9[27566].padding_0[35], &v9[27579].padding_0[1]);\n
    }\n
    v10 = v1;\n
    *(v4) = v5;\n
    v10->field_34 = v5 + v10->field_34;\n
    return v4;\n
}\n
", "4203378:sub_402372": null, "4203392:cgc_free": "typedef struct struct_3 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
    unsigned short field_a;\n
    unsigned int field_c;\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_14;\n
    struct struct_2 *field_18;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    unsigned int field_4;\n
    unsigned short field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[24];\n
    unsigned int field_18;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(struct_3 *v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    struct_1 *v4;  // [bp-0x10]\n
    struct_3 *v5;  // [bp-0xc]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edx\n
    struct_3 *v13;  // eax\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // ebx\n
    struct_3 *v17;  // eax\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // ebx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v7 = v2;\n
        v0 = 206;\n
        cgc_printf(v7 - 1544225, v7 - 1544425);\n
    }\n
    v5 = v6 & -0x1000;\n
    if (!v5->field_10)\n
    {\n
        v8 = cgc_malloc_release_chunk();\n
        return v8;\n
    }\n
    v4 = v5->field_10;\n
    v3 = (0 CONCAT v6 - v5 - 28) /m v4->field_8;\n
    v9 = 1 << (v3 & 31);\n
    if ((v3 & 32))\n
        v9 = 0;\n
    if ((v5->field_c & v9))\n
    {\n
        if (!(!1))\n
            goto LABEL_402484;\n
    }\n
    else\n
    {\n
        if (!(!0))\n
            goto LABEL_402484;\n
    }\n
    v10 = v2;\n
    v0 = 216;\n
    cgc_printf(v10 - 1544195, v10 - 1544425);\n
LABEL_402484:\n
    v1 = v3;\n
    v11 = 1 << (v3 & 31);\n
    if ((v1 & 32))\n
        v11 = 0;\n
    v12 = ~(v11);\n
    v13 = v5;\n
    v13->field_c = v13->field_c & v12;\n
    if (v5->field_8 == v5->field_a)\n
    {\n
        if (!v4->field_4)\n
        {\n
            v14 = v2;\n
            v0 = 220;\n
            cgc_printf(v14 - 1544145, v14 - 1544425);\n
        }\n
        if (!v5)\n
        {\n
            v15 = v2;\n
            v0 = 220;\n
            cgc_printf(v15 - 1544350, v15 - 1544425);\n
        }\n
        if (v5 == v4->field_4)\n
        {\n
            v4->field_4 = v5->field_14;\n
        }\n
        else\n
        {\n
            if (v5->field_18)\n
                v5->field_18->field_14 = v5->field_14;\n
            if (v5->field_14)\n
                v5->field_14->field_18 = v5->field_18;\n
        }\n
        if (!v5)\n
        {\n
            v16 = v2;\n
            v0 = 221;\n
            cgc_printf(v16 - 1544350, v16 - 1544425);\n
        }\n
        v5->field_18 = 0;\n
        v5->field_14 = v4->field_0;\n
        if (v4->field_0)\n
            v4->field_0->field_18 = v5;\n
        v4->field_0 = &v5->padding_0;\n
    }\n
    v17 = v5;\n
    v17->field_8 = v17->field_8 - 1;\n
    v8 = v5->field_8;\n
    if (v8)\n
        return v5->field_8;\n
    if (!v4->field_0)\n
    {\n
        v18 = v2;\n
        v0 = 227;\n
        cgc_printf(v18 - 1544316, v18 - 1544425);\n
    }\n
    if (!v5)\n
    {\n
        v19 = v2;\n
        v0 = 227;\n
        cgc_printf(v19 - 1544350, v19 - 1544425);\n
    }\n
    if (v5 == v4->field_0)\n
    {\n
        v4->field_0 = v5->field_14;\n
    }\n
    else\n
    {\n
        if (v5->field_18)\n
            v5->field_18->field_14 = v5->field_14;\n
        if (v5->field_14)\n
            v5->field_14->field_18 = v5->field_18;\n
    }\n
    v8 = cgc_malloc_release_chunk();\n
    return v8;\n
}\n
", "4204313:sub_402719": null, "4204320:cgc_malloc_release_chunk": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_release_chunk(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    unsigned int v7;  // eax\n
    struct_0 *v8;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v3)\n
    {\n
        v4 = v1;\n
        v0 = 107;\n
        cgc_printf(&v4[27566].padding_0[2], &v4[27579].padding_0[1]);\n
    }\n
    if (*(v3) <= 0)\n
    {\n
        v5 = v1;\n
        v0 = 108;\n
        cgc_printf(&v5[27565].padding_0[26], &v5[27579].padding_0[1]);\n
    }\n
    v6 = v1;\n
    v6->field_34 = v6->field_34 - *(v3);\n
    v7 = cgc_deallocate(v3);\n
    v2 = v7;\n
    if (v2)\n
    {\n
        v8 = v1;\n
        v0 = 111;\n
        v7 = cgc_printf(&v8[27564].padding_0[47], &v8[27579].padding_0[1]);\n
        return v7;\n
    }\n
    return v7;\n
}\n
", "4204556:sub_40280c": null, "4204560:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 <= 0)\n
    {\n
        v4 = v1;\n
        cgc_printf(v4 - 1544099, v4 - 1544425);\n
    }\n
    if (a0 <= 0)\n
    {\n
        v5 = v1;\n
        cgc_printf(v5 - 1544452, v5 - 1544425);\n
    }\n
    v0 = a0;\n
    if (v0 >= (0 CONCAT -1) /m v3)\n
    {\n
        v6 = v1;\n
        cgc_printf(v6 - 1544071, v6 - 1544425);\n
    }\n
    a0 *= v3;\n
    v2 = cgc_malloc(a0);\n
    return cgc_memset(v2, 0, a0);\n
}\n
", "4204831:sub_40291f": null, "4204832:cgc_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf(char v5[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0xc]\n
    char v6;  // [bp+0x8]\n
    char v7[2];  // eax\n
    unsigned int *v8;  // eax\n
    unsigned int *v10;  // eax\n
    unsigned int *v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v4 = &v6;\n
    for (v3 = 0; *(v5); v5 += 1)\n
    {\n
        if (*(v5) != 37)\n
        {\n
            v0 = *(v5);\n
            v3 = cgc_transmit_char() + v3;\n
        }\n
        else\n
        {\n
            v7 = v5;\n
            v5 = &v7[1];\n
            v1 = v7[1];\n
            if (v1 == 99)\n
            {\n
                v8 = v4;\n
                v4 = v8 + 1;\n
                v0 = *(v8);\n
                v3 = cgc_transmit_char() + v3;\n
            }\n
            else if (v1 == 115)\n
            {\n
                v10 = v4;\n
                v4 = v10 + 1;\n
                v0 = *(v10);\n
                v3 = cgc_transmit_string() + v3;\n
            }\n
            else if (v1 != 117)\n
            {\n
                v0 = *(v5);\n
                v3 = cgc_transmit_char() + v3;\n
            }\n
            else\n
            {\n
                v11 = v4;\n
                v4 = v11 + 1;\n
                v0 = *(v11);\n
                v3 = cgc_transmit_unsigned() + v3;\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4205162:sub_402a6a": null, "4205168:cgc_transmit_char": "int cgc_transmit_char(char v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &v2;\n
    v1 = cgc_transmit(1, &v4, 1);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = *(&v2);\n
    return v3;\n
}\n
", "4205264:cgc_transmit_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_string(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_strlen(v5);\n
    v1 = cgc_transmit_all(1, v5, v2);\n
    if (v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205372:sub_402b3c": null, "4205376:cgc_transmit_unsigned": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_unsigned(unsigned int v5)\n
{\n
    void* v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = (0 CONCAT v5) /m 10;\n
    v3 = v5 - v2 * 10 + 48;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = cgc_transmit_unsigned(v2);\n
    v4 = v0;\n
    cgc_transmit_char(v3);\n
    return v4;\n
}\n
", "4205505:sub_402bc1": null, "4205520:cgc_register_book": "typedef struct struct_1 {\n
    char padding_0[116];\n
    char field_74;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_2 *field_c;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_register_book(struct_1 *v2, char *a0, char *a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_2 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = &v2[1].padding_0[50];\n
    v1 = &v3->field_0;\n
    if (!a0)\n
        v3 = cgc_err(1);\n
    if (!a1)\n
        v3 = cgc_err(1);\n
    if (!a2)\n
        v3 = cgc_err(1);\n
    while (true)\n
    {\n
        if (!v1)\n
            return v3;\n
        if (!cgc_strlen(*(v1)))\n
            break;\n
        v3 = *((v1 + 12));\n
        v1 = v3;\n
    }\n
    *(v1) = cgc_strdup(a0);\n
    *((v1 + 4)) = cgc_strdup(a1);\n
    *((v1 + 8)) = cgc_strdup(a2);\n
    *((v1 + 12)) = cgc_calloc(1, 16);\n
    if (!*((v1 + 12)))\n
        cgc_err(1);\n
    v3 = v2;\n
    *((v3 + 116)) = *((v3 + 116)) + 1;\n
    return v2;\n
}\n
", "4205884:sub_402d3c": null, "4205888:cgc_normalize_path": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_normalize_path(char v10[3])\n
{\n
    char v0;  // [bp-0x2d]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v5[3];  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v6[3];  // [bp-0x18], Other Possible Types: void*, unsigned int\n
    char v7[3];  // [bp-0x14], Other Possible Types: unsigned int\n
    char v8[3];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v6) = 0;\n
    *(&v5) = 0;\n
    v4 = 0;\n
    if (!v10)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    v3 = cgc_strlen(v10);\n
    v2 = &v10[v3];\n
    *(&v8) = v10;\n
    *(&v7) = v8;\n
    while (v8[0])\n
    {\n
        if (v8[0] == 124)\n
        {\n
            *(&v6) = v5;\n
            v5 = v8;\n
            v8 = &v8[1];\n
            continue;\n
        }\n
        if (v8[0] != 43)\n
        {\n
LABEL_402fd6:\n
            v8 = &v8[1];\n
        }\n
        else\n
        {\n
            if (v5 != &v8[1] && !(v8 == v10))\n
                goto LABEL_402fcc;\n
            if (v8[1] != 43)\n
            {\n
LABEL_402f0f:\n
                if (v8[1] != 124)\n
                {\n
                    if (v8[1])\n
                    {\n
                        if (v5)\n
                            v8 = v5;\n
                        *(v8) = 0;\n
                        break;\n
                    }\n
                }\n
                else\n
                {\n
                    if (!v5)\n
                    {\n
                        if (v8 >= v2)\n
                            break;\n
                        cgc_strlcpy(v8, v2 - v8, v3);\n
                        continue;\n
                    }\n
                    else\n
                    {\n
                        if (v5 >= v2)\n
                            break;\n
                        cgc_strlcpy(v5, v2 - v5, v3);\n
                        continue;\n
                    }\n
                }\n
LABEL_402fcc:\n
                goto LABEL_402fd6;\n
            }\n
            else\n
            {\n
                if (v8[2] != 124 && !(!v8[2]))\n
                    goto LABEL_402f0f;\n
                v4 += 1;\n
                if (v4 > 2)\n
                {\n
                    v9 = -1;\n
                    return v9;\n
                }\n
                if (!v6)\n
                    break;\n
                cgc_strlcpy(v6, &v8[2], v3);\n
                if (!v8[2])\n
                    break;\n
                *(&v5) = v6;\n
                *(&v8) = v6;\n
                *(&v7) = &v8[1];\n
                while (true)\n
                {\n
                    v0 = 0;\n
                    if (*(v7) != 124)\n
                        v0 = v7 != v10;\n
                    if (!(v0 & 1))\n
                        break;\n
                    v7 -= 1;\n
                }\n
                if (v8[0] != 124)\n
                    v6 = 0;\n
                else\n
                    *(&v6) = v7;\n
                goto LABEL_402fcc;\n
            }\n
        }\n
    }\n
    v9 = 0;\n
    return v9;\n
}\n
", "4206597:sub_403005": null, "4206608:cgc_get_command": "typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char field_c;\n
} struct_0;\n
\n
int cgc_get_command(unsigned int v2, char *a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v2 + 100;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!a0)\n
            return v0;\n
        if (v1->field_c != *(a0))\n
        {\n
            if (!v1->field_0)\n
                return v0;\n
            v1 = v1->field_0;\n
        }\n
        else\n
        {\n
            a0 += 1;\n
            if (v1->field_8)\n
            {\n
                v0 = *((v1 + 8));\n
                return v0;\n
            }\n
            if (!v1->padding_4)\n
                return v0;\n
            *(&v1) = v1->padding_4;\n
        }\n
    }\n
}\n
", "4206788:sub_4030c4": null, "4206800:cgc_cmd_cur_sec": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_cur_sec(char *v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_transmit_str(1, v2);\n
    cgc_transmit_str(1, v0 - 1543371);\n
    v4 = v1;\n
    return 1;\n
}\n
", "4206883:sub_403123": null, "4206896:cgc_skip_search": "int cgc_skip_search(unsigned int *v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v2 = a1 - 1;\n
    while (a3 >= a1)\n
    {\n
        v3 = v2;\n
        while (true)\n
        {\n
            v1 = *((a0 + v3));\n
            if (*((a2 + v3)) >= 65 && *((a2 + v3)) <= 90)\n
            {\n
                v0 = *((a2 + v3)) | 32;\n
                goto LABEL_4031b5;\n
            }\n
            v0 = *((a2 + v3));\n
LABEL_4031b5:\n
            if (v1 != v0)\n
            {\n
                a3 -= v5[v2[a2]];\n
                a2 = v5[v2[a2]] + a2;\n
                break;\n
            }\n
            else if (v3)\n
            {\n
                v3 -= 1;\n
            }\n
            else\n
            {\n
                v4 = 1;\n
                return v4;\n
            }\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207150:sub_40322e": null, "4207152:cgc_cmd_search": "typedef struct struct_1 {\n
    char padding_0[8];\n
    char *field_8;\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_search(unsigned int v11, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x434]\n
    unsigned int v1;  // [bp-0x430]\n
    unsigned int v2;  // [bp-0x42c]\n
    unsigned int v3;  // [bp-0x428]\n
    unsigned int v4;  // [bp-0x424]\n
    char v5;  // [bp-0x420]\n
    unsigned int v6;  // [bp-0x20]\n
    struct_0 *v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_1 *v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = v11 + 167;\n
    v4 = cgc_strlen(a0);\n
    if (!v4)\n
    {\n
        v9 = 1;\n
        return v9;\n
    }\n
    for (v7 = 0; v7 < v4; v7 += 1)\n
    {\n
        if (a0[v7].field_0 >= 65 && a0[v7].field_0 <= 90)\n
        {\n
            v2 = a0[v7].field_0 | 32;\n
            goto LABEL_4032ed;\n
        }\n
        v2 = a0[v7].field_0;\n
LABEL_4032ed:\n
        a0[v7].field_0 = v2;\n
    }\n
    for (v7 = 0; v7 <= 255; v7 += 1)\n
    {\n
        *(&(&v5)[4 * v7]) = v4;\n
    }\n
    v6 = v4 - 1;\n
    for (v7 = 0; v7 < v6; v7 += 1)\n
    {\n
        *(&(&v5)[4 * a0[v7].field_0]) = v6 - v7;\n
    }\n
    for (; v8; v8 = *((v8 + 12)))\n
    {\n
        v0 = v4;\n
        v1 = *((v8 + 8));\n
        if (cgc_skip_search(&v5, a0, v0, v1, cgc_strlen(*((v8 + 8)))) == 1)\n
            cgc_printf(v3 - 1543533);\n
    }\n
    v9 = 1;\n
    return v9;\n
}\n
", "4207683:sub_403443": null, "4207696:cgc_cmd_ch_sec": "typedef struct struct_0 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    void* field_0;\n
    char padding_4[8];\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_ch_sec(unsigned int v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x18], Other Possible Types: unsigned int, struct_1 *\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v5 = v10 + 167;\n
    v6 = cgc_strlen(a0);\n
    if (!v6)\n
    {\n
        v8 = 1;\n
        return v8;\n
    }\n
    if (*(a0) != 124)\n
    {\n
        v3 = cgc_strdup(a0);\n
        if (!v3)\n
            cgc_printf(v0 - 1543524);\n
        v4 = cgc_strlcpy(v10 + 117, v10, 50);\n
        if (v4 > 50)\n
            cgc_printf(v0 - 1543418);\n
        v4 = cgc_strlcat(v10 + 117, v3, 50);\n
        if (v4 > 50)\n
            cgc_printf(v0 - 1543418);\n
        a0 = v10 + 117;\n
        cgc_free(v3);\n
    }\n
    if (cgc_normalize_path(a0))\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    else if (*(a0) != 124)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (*((a0 + v6 - 1)) == 124)\n
    {\n
        for (v6 = cgc_strlen(a0); v5; v5 = *((v5 + 12)))\n
        {\n
            v2 = cgc_strlen(v5->field_0);\n
            if (v2 >= v6 && !cgc_strcmp(v5->field_0, a0))\n
            {\n
                cgc_strlcpy(v10, a0, 100);\n
                v7 = 1;\n
                break;\n
            }\n
        }\n
        if (!v7)\n
        {\n
            for (v5 = v10 + 167; v5; v5 = v5->field_c)\n
            {\n
                v1 = cgc_strlen(v5->field_0);\n
                if (v1 >= v6 && !cgc_strncmp(v5->field_0, a0, v6))\n
                {\n
                    cgc_strlcpy(v10, a0, 100);\n
                    v7 = 1;\n
                    break;\n
                }\n
            }\n
        }\n
        v8 = 1;\n
        return v8;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
}\n
", "4208497:sub_403771": null, "4208512:cgc_compress": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_compress(char v7[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char *v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1d]\n
    char *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x11]\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v8[2];  // ecx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 48;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v5 = v7[0];\n
    v4 = cgc_strlen(v7);\n
    if (!v3)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    for (v3 = cgc_calloc(v4 * 2 + 1, 1); *(v7); LABEL_403883:\n
)\n
    {\n
        v8 = v7;\n
        v7 = &v8[1];\n
        if (v5 == v8[1] && v2 < 57)\n
        {\n
            v2 += 1;\n
            goto LABEL_403883;\n
        }\n
        v9 = v1;\n
        v1 = v9 + 1;\n
        v3[v9] = v5;\n
        v10 = v1;\n
        v1 = v10 + 1;\n
        v3[v10] = v2;\n
        v2 = 1;\n
        v5 = *(v7);\n
    }\n
    v6 = v3;\n
    return v6;\n
}\n
", "4208792:sub_403898": null, "4208800:cgc_cmd_compress": "typedef struct struct_0 {\n
    char *field_0;\n
    char *field_4;\n
    char field_8[2];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_compress(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: char *\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v4[167];\n
    v1 = 0;\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (!cgc_strlen(a0))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (cgc_strlen(v4))\n
    {\n
        while (true)\n
        {\n
            if (!v2)\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            if (!cgc_strcmp(v2->field_0, v4) && !cgc_strcmp(v2->field_4, a0))\n
                break;\n
            v2 = *((v2 + 12));\n
        }\n
        v1 = cgc_compress(*((v2 + 8)));\n
        if (!v1)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        cgc_transmit_str(1, *((v2 + 4)));\n
        cgc_transmit_str(1, v0 - 1543371);\n
        cgc_transmit_str(1, v1);\n
        cgc_transmit_str(1, v0 - 1543372);\n
        cgc_free(v1);\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4209230:sub_403a4e": null, "4209232:cgc_cmd_quit": "int cgc_cmd_quit(unsigned int v0, unsigned int a0)\n
{\n
    return 0;\n
}\n
", "4209245:sub_403a5d": null, "4209248:cgc_cmd_get": "typedef struct struct_0 {\n
    char *field_0;\n
    char *field_4;\n
    char *field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_get(char *v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (!cgc_strlen(a0))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (!v4)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (cgc_strlen(v4))\n
    {\n
        for (v2 = &v4[167]; v2; v2 = v2->field_c)\n
        {\n
            v0 = cgc_strlen(v2->field_0);\n
            if (v0 == cgc_strlen(v4) && !cgc_strcmp(v2->field_0, v4) && !cgc_strcmp(v2->field_4, a0))\n
            {\n
                cgc_transmit_str(1, v2->field_4);\n
                cgc_transmit_str(1, v1 - 1543371);\n
                cgc_transmit_str(1, v2->field_8);\n
                cgc_transmit_str(1, v1 - 1543372);\n
            }\n
        }\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4209682:sub_403c12": null, "4209696:cgc_cmd_make_sec": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_make_sec(char *v8, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    char *v10;  // eax\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 3;\n
    if (!cgc_strlen(a0))\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v0 = -1 - v4;\n
    v1 = v0 - cgc_strlen(a0);\n
    if (v1 <= cgc_strlen(v8))\n
        cgc_printf(v2 - 1543369);\n
    v4 = cgc_strlen(v8) + v4;\n
    v4 = cgc_strlen(a0) + v4;\n
    v3 = cgc_calloc(1, v4);\n
    if (!v3)\n
        cgc_printf(v2 - 1543286);\n
    if (cgc_strlen(v8) > 0)\n
    {\n
        v5 = cgc_strlcat(v3, v8, v4);\n
        if (v5 > v4)\n
            cgc_printf(v2 - 1543255);\n
    }\n
    else\n
    {\n
        v5 = cgc_strlcat(v3, v2 - 122741, v4);\n
        if (v5 > v4)\n
            cgc_printf(v2 - 1543255);\n
    }\n
    v5 = cgc_strlcat(v3, a0, v4);\n
    if (v5 > v4)\n
        cgc_printf(v2 - 1543255);\n
    v5 = cgc_strlcat(v3, v2 - 122741, v4);\n
    if (v5 > v4)\n
        cgc_printf(v2 - 1543255);\n
    v10 = v2 - 1543370;\n
    cgc_register_book(v8, v3, v10, v10);\n
    v6 = 1;\n
    return v6;\n
}\n
", "4210414:sub_403eee": null, "4210416:cgc_cmd_put": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_put(char *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_strlen(v5))\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v2 = cgc_strtok(a0, v0 - 1543170);\n
    if (!v2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = cgc_strtok(0, v0 - 2669);\n
    if (!v1)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    cgc_register_book(v5, v5, v2, v1);\n
    v3 = 1;\n
    return v3;\n
}\n
", "4210630:sub_403fc6": null, "4210640:cgc_cmd_list": "typedef struct struct_0 {\n
    char *field_0;\n
    char *field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_list(char *v9, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    struct_0 *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = &v9[167];\n
    cgc_transmit_str(1, \"current section: \");\n
    cgc_transmit_str(1, v9);\n
    cgc_transmit_str(1, v6 - 1543371);\n
    for (; v7; v7 = *((v7 + 12)))\n
    {\n
        if (!cgc_strlen(*(v7)))\n
            break;\n
        v4 = *(v7);\n
        v5 = v9;\n
        if (!cgc_strncmp(v4, v5, cgc_strlen(v9)))\n
        {\n
            v3 = cgc_strlen(*(v7));\n
            if (v3 - cgc_strlen(v9) > 0)\n
            {\n
                v0 = *(v7);\n
                v1 = v0 + cgc_strlen(v9);\n
                v2 = cgc_strlen(*(v7));\n
                cgc_transmit_all(1, v1, v2 - cgc_strlen(v9));\n
                cgc_transmit_str(1, v6 - 1543208);\n
            }\n
            cgc_transmit_str(1, *((v7 + 4)));\n
            cgc_transmit_str(1, v6 - 1543371);\n
        }\n
    }\n
    cgc_transmit_str(1, v6 - 1543371);\n
    return 1;\n
}\n
", "4211128:sub_4041b8": null, "4211136:cgc_remove_newline": "int cgc_remove_newline(char *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = cgc_strlen(v1) - 1;\n
    v2 = v1[v0];\n
    if (v2 == 10)\n
    {\n
        v2 = v1;\n
        *((v2 + v0)) = 0;\n
        return v1;\n
    }\n
    return v1[v0];\n
}\n
", "4211210:sub_40420a": null, "4211216:cgc_receive_delim": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_delim(unsigned int v6, unsigned int a0, unsigned int a1, char a2)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (a1)\n
    {\n
        for (v3 = 0; v4 < a1; v4 = v3 + v4)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_receive(v6, &v4[a0], 1);\n
            if (!v3)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            if (v4[a0] == a2)\n
                break;\n
        }\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
}\n
", "4211468:sub_40430c": null, "4211472:cgc_process": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_process(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    struct struct_0 **v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        do\n
        {\n
            cgc_memset(v6 + 117, 0, 50);\n
            cgc_transmit_str(1, v0 - 1543206);\n
            if (cgc_receive_delim(0, v6 + 117, 49, 10))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            cgc_remove_newline(v6 + 117);\n
        } while (!cgc_strlen(v6 + 117));\n
        v3 = cgc_strtok(v6 + 117, v0 - 1543170);\n
        v2 = cgc_strtok(0, v0 - 2669);\n
        if (cgc_strlen(v3) >= 12)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v1 = cgc_get_command(v6, v3);\n
        if (!v1)\n
        {\n
            cgc_transmit_str(1, v0 - 1543203);\n
            cgc_transmit_str(1, v3);\n
            cgc_transmit_str(1, v0 - 1543371);\n
        }\n
        else\n
        {\n
            v4 = v1(v6);\n
            if (v4 == -1)\n
            {\n
                cgc_transmit_str(1, v0 - 1543185);\n
                cgc_transmit_str(1, v3);\n
                cgc_transmit_str(1, v0 - 1543371);\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (!v4)\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
}\n
", "4212032:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v145, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x3b0]\n
    char v1;  // [bp-0x3ac]\n
    unsigned int v2;  // [bp-0x3a8]\n
    char v3;  // [bp-0x3a0]\n
    char v4;  // [bp-0x39c]\n
    unsigned int v5;  // [bp-0x398]\n
    char v6;  // [bp-0x390]\n
    char v7;  // [bp-0x38c]\n
    unsigned int v8;  // [bp-0x388]\n
    char v9;  // [bp-0x380]\n
    char v10;  // [bp-0x37c]\n
    unsigned int v11;  // [bp-0x378]\n
    char v12;  // [bp-0x370]\n
    char v13;  // [bp-0x36c]\n
    unsigned int v14;  // [bp-0x364]\n
    char v15;  // [bp-0x360]\n
    struct struct_2 **v16;  // [bp-0x35c]\n
    unsigned int v17;  // [bp-0x358]\n
    char v18;  // [bp-0x350]\n
    char v19;  // [bp-0x34c]\n
    unsigned int v20;  // [bp-0x348]\n
    char v21;  // [bp-0x340]\n
    char v22;  // [bp-0x33c]\n
    unsigned int v23;  // [bp-0x338]\n
    char v24;  // [bp-0x330]\n
    char v25;  // [bp-0x32c]\n
    unsigned int v26;  // [bp-0x324]\n
    char v27;  // [bp-0x320]\n
    struct struct_1 **v28;  // [bp-0x31c]\n
    unsigned int v29;  // [bp-0x318]\n
    char v30;  // [bp-0x310]\n
    char v31;  // [bp-0x30c]\n
    unsigned int v32;  // [bp-0x308]\n
    char v33;  // [bp-0x300]\n
    char v34;  // [bp-0x2fc]\n
    unsigned int v35;  // [bp-0x2f4]\n
    char v36;  // [bp-0x2f0]\n
    struct struct_0 **v37;  // [bp-0x2ec]\n
    unsigned int v38;  // [bp-0x2e8]\n
    char v39;  // [bp-0x2e0]\n
    char v40;  // [bp-0x2dc]\n
    unsigned int v41;  // [bp-0x2d8]\n
    char v42;  // [bp-0x2d0]\n
    char v43;  // [bp-0x2cc]\n
    unsigned int v44;  // [bp-0x2c8]\n
    char v45;  // [bp-0x2c0]\n
    char v46;  // [bp-0x2bc]\n
    unsigned int v47;  // [bp-0x2b8]\n
    char v48;  // [bp-0x2b0]\n
    char v49;  // [bp-0x2ac]\n
    unsigned int v50;  // [bp-0x2a8]\n
    char v51;  // [bp-0x2a0]\n
    char v52;  // [bp-0x29c]\n
    unsigned int v53;  // [bp-0x298]\n
    char v54;  // [bp-0x290]\n
    char v55;  // [bp-0x28c]\n
    unsigned int v56;  // [bp-0x288]\n
    char v57;  // [bp-0x280]\n
    char v58;  // [bp-0x27c]\n
    unsigned int v59;  // [bp-0x274]\n
    char v60;  // [bp-0x270]\n
    struct_0 *v61;  // [bp-0x26c]\n
    unsigned int v62;  // [bp-0x268]\n
    char v63;  // [bp-0x260]\n
    char v64;  // [bp-0x25c]\n
    unsigned int v65;  // [bp-0x258]\n
    char v66;  // [bp-0x250]\n
    char v67;  // [bp-0x24c]\n
    unsigned int v68;  // [bp-0x248]\n
    char v69;  // [bp-0x240]\n
    char v70;  // [bp-0x23c]\n
    unsigned int v71;  // [bp-0x234]\n
    char v72;  // [bp-0x230]\n
    unsigned int v73;  // [bp-0x22c]\n
    unsigned int v74;  // [bp-0x228]\n
    char v75;  // [bp-0x220]\n
    char v76;  // [bp-0x21c]\n
    unsigned int v77;  // [bp-0x218]\n
    char v78;  // [bp-0x210]\n
    char v79;  // [bp-0x20c]\n
    unsigned int v80;  // [bp-0x204]\n
    char v81;  // [bp-0x200]\n
    char v82;  // [bp-0x1fc]\n
    struct struct_0 **v83;  // [bp-0x1f8]\n
    char v84;  // [bp-0x1f0]\n
    struct_0 *v85;  // [bp-0x1ec]\n
    unsigned int v86;  // [bp-0x1e8]\n
    char v87;  // [bp-0x1e0]\n
    char v88;  // [bp-0x1dc]\n
    unsigned int v89;  // [bp-0x1d8]\n
    char v90;  // [bp-0x1d0]\n
    char v91;  // [bp-0x1cc]\n
    unsigned int v92;  // [bp-0x1c8]\n
    char v93;  // [bp-0x1c0]\n
    char v94;  // [bp-0x1bc]\n
    unsigned int v95;  // [bp-0x1b8]\n
    char v96;  // [bp-0x1b0]\n
    char v97;  // [bp-0x1ac]\n
    unsigned int v98;  // [bp-0x1a8]\n
    char v99;  // [bp-0x1a0]\n
    char v100;  // [bp-0x19c]\n
    unsigned int v101;  // [bp-0x194]\n
    char v102;  // [bp-0x190]\n
    unsigned int v103;  // [bp-0x18c]\n
    unsigned int v104;  // [bp-0x188]\n
    char v105;  // [bp-0x180]\n
    char v106;  // [bp-0x17c]\n
    unsigned int v107;  // [bp-0x178]\n
    char v108;  // [bp-0x170]\n
    char v109;  // [bp-0x16c]\n
    unsigned int v110;  // [bp-0x168]\n
    char v111;  // [bp-0x160]\n
    char v112;  // [bp-0x15c]\n
    unsigned int v113;  // [bp-0x158]\n
    char v114;  // [bp-0x150]\n
    char v115;  // [bp-0x14c]\n
    unsigned int v116;  // [bp-0x148]\n
    char v117;  // [bp-0x140]\n
    char v118;  // [bp-0x13c]\n
    unsigned int v119;  // [bp-0x138]\n
    char v120;  // [bp-0x130]\n
    char v121;  // [bp-0x12c]\n
    unsigned int v122;  // [bp-0x124]\n
    char v123;  // [bp-0x120]\n
    char v124;  // [bp-0x11c]\n
    unsigned int v125;  // [bp-0x118]\n
    char v126;  // [bp-0x110]\n
    char v127;  // [bp-0x10c]\n
    unsigned int v128;  // [bp-0x108]\n
    char v129;  // [bp-0x100]\n
    char v130;  // [bp-0xfc]\n
    unsigned int v131;  // [bp-0xf8]\n
    char v132;  // [bp-0xf0]\n
    char v133;  // [bp-0xec]\n
    unsigned int v134;  // [bp-0xe8]\n
    char v135;  // [bp-0xe0]\n
    char v136;  // [bp-0xdc]\n
    unsigned int v137;  // [bp-0xd4]\n
    char v138;  // [bp-0xd0]\n
    char v139;  // [bp-0xcc]\n
    struct struct_3 **v140;  // [bp-0x68]\n
    unsigned int v141;  // [bp-0x64]\n
    char v142;  // [bp-0x5c]\n
    void* v143;  // [bp-0x10]\n
    unsigned int v144;  // [bp-0x8]\n
    unsigned int v146;  // ebx\n
    unsigned int v147;  // ebx\n
    char *v148;  // eax\n
    unsigned int v149;  // ebx\n
    unsigned int v150;  // ebx\n
    unsigned int v151;  // ebx\n
    unsigned int v152;  // ebx\n
    unsigned int v153;  // ebx\n
    unsigned int v154;  // ebx\n
    unsigned int v155;  // ebx\n
    unsigned int v156;  // ebx\n
    unsigned int v157;  // ebx\n
    unsigned int v158;  // ebx\n
    unsigned int v159;  // ebx\n
    unsigned int v160;  // ebx\n
    unsigned int v161;  // ebx\n
    unsigned int v162;  // ebx\n
    unsigned int v163;  // ebx\n
    unsigned int v164;  // ebx\n
    unsigned int v165;  // ebx\n
    unsigned int v166;  // ebx\n
    unsigned int v167;  // ebx\n
    unsigned int v168;  // ebx\n
    unsigned int v169;  // ebx\n
    unsigned int v170;  // ebx\n
    unsigned int v171;  // ebx\n
    unsigned int v172;  // ebx\n
    unsigned int v173;  // ebx\n
    unsigned int v174;  // ebx\n
    unsigned int v175;  // ebx\n
    unsigned int v176;  // ebx\n
    unsigned int v177;  // ebx\n
    unsigned int v178;  // ebx\n
    unsigned int v179;  // ebx\n
    unsigned int v180;  // ebx\n
    unsigned int v181;  // ebx\n
    unsigned int v182;  // ebx\n
    unsigned int v183;  // ebx\n
    unsigned int v184;  // ebx\n
    unsigned int v185;  // ebx\n
    unsigned int v186;  // ebx\n
    unsigned int v187;  // ebx\n
    unsigned int v188;  // ebx\n
    unsigned int v189;  // ebx\n
    unsigned int v190;  // ebx\n
    unsigned int v191;  // ebx\n
    unsigned int v192;  // ebx\n
    unsigned int v193;  // ebx\n
    unsigned int v194;  // ebx\n
    unsigned int v195;  // ebx\n
    unsigned int v196;  // ebx\n
    unsigned int v197;  // ebx\n
    unsigned int v198;  // ebx\n
    unsigned int v199;  // ebx\n
    unsigned int v200;  // ebx\n
    unsigned int v201;  // ebx\n
    unsigned int v202;  // ebx\n
    unsigned int v203;  // ebx\n
    unsigned int v204;  // ebx\n
    unsigned int v205;  // ebx\n
    unsigned int v206;  // ebx\n
    unsigned int v207;  // ebx\n
    unsigned int v208;  // ebx\n
    unsigned int v209;  // ebx\n
    unsigned int v210;  // ebx\n
    unsigned int v211;  // ebx\n
    unsigned int v212;  // ebx\n
    unsigned int v213;  // ebx\n
    unsigned int v214;  // ebx\n
    unsigned int v215;  // ebx\n
    unsigned int v216;  // ebx\n
    unsigned int v217;  // ebx\n
    unsigned int v218;  // ebx\n
    unsigned int v219;  // ebx\n
    unsigned int v220;  // ebx\n
    unsigned int v221;  // ebx\n
    unsigned int v222;  // ebx\n
    unsigned int v223;  // ebx\n
    unsigned int v224;  // ebx\n
    unsigned int v225;  // ebx\n
    unsigned int v226;  // ebx\n
    unsigned int v227;  // ebx\n
    unsigned int v228;  // ebx\n
    unsigned int v229;  // ebx\n
    unsigned int v230;  // ebx\n
    unsigned int v231;  // ebx\n
    unsigned int v232;  // ebx\n
    unsigned int v233;  // ebx\n
    unsigned int v234;  // ebx\n
    unsigned int v235;  // ebx\n
    unsigned int v236;  // ebx\n
    unsigned int v237;  // ebx\n
    unsigned int v238;  // ebx\n
    unsigned int v239;  // ebx\n
    unsigned int v240;  // ebx\n
    unsigned int v241;  // ebx\n
    unsigned int v242;  // ebx\n
    unsigned int v243;  // ebx\n
    unsigned int v244;  // ebx\n
    unsigned int v245;  // ebx\n
    unsigned int v246;  // ebx\n
    unsigned int v247;  // ebx\n
    unsigned int v248;  // ebx\n
    unsigned int v249;  // ebx\n
    unsigned int v250;  // ebx\n
    unsigned int v251;  // ebx\n
    unsigned int v252;  // ebx\n
    unsigned int v253;  // ebx\n
    unsigned int v254;  // ebx\n
    unsigned int v255;  // ebx\n
    unsigned int v256;  // ebx\n
    unsigned int v257;  // ebx\n
    unsigned int v258;  // ebx\n
    unsigned int v259;  // ebx\n
    unsigned int v260;  // ebx\n
    unsigned int v261;  // ebx\n
    unsigned int v262;  // ebx\n
    unsigned int v263;  // ebx\n
    unsigned int v264;  // ebx\n
    unsigned int v265;  // ebx\n
    unsigned int v266;  // ebx\n
    unsigned int v267;  // ebx\n
    unsigned int v268;  // ebx\n
    unsigned int v269;  // ebx\n
    unsigned int v270;  // ebx\n
    unsigned int v271;  // ebx\n
\n
    v144 = v146;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v143 = 0;\n
    cgc_memset(&v139, 0, 184);\n
    v147 = v0;\n
    v138 = 99;\n
    v137 = v147 - 1559764;\n
    v135 = 101;\n
    v134 = &v136;\n
    v132 = 115;\n
    v131 = &v133;\n
    v129 = 95;\n
    v128 = &v130;\n
    v126 = 104;\n
    v125 = &v127;\n
    v123 = 115;\n
    v122 = v147 - 1558660;\n
    v120 = 115;\n
    v119 = &v121;\n
    v117 = 101;\n
    v116 = &v118;\n
    v114 = 114;\n
    v113 = &v115;\n
    v111 = 112;\n
    v110 = &v112;\n
    v108 = 109;\n
    v107 = &v109;\n
    v105 = 111;\n
    v103 = &v124;\n
    v104 = &v106;\n
    v102 = 99;\n
    v101 = v147 - 1560660;\n
    v99 = 101;\n
    v98 = &v100;\n
    v96 = 115;\n
    v95 = &v97;\n
    v93 = 95;\n
    v92 = &v94;\n
    v90 = 114;\n
    v89 = &v91;\n
    v87 = 117;\n
    v85 = &v103;\n
    v86 = &v88;\n
    v84 = 99;\n
    v83 = &v85;\n
    v81 = 116;\n
    v80 = v147 - 1558212;\n
    v78 = 101;\n
    v77 = &v79;\n
    v75 = 103;\n
    v73 = &v82;\n
    v74 = &v76;\n
    v72 = 116;\n
    v71 = v147 - 1556820;\n
    v69 = 115;\n
    v68 = &v70;\n
    v66 = 105;\n
    v65 = &v67;\n
    v63 = 108;\n
    v61 = &v73;\n
    v62 = &v64;\n
    v60 = 99;\n
    v59 = v147 - 1557764;\n
    v57 = 101;\n
    v56 = &v58;\n
    v54 = 115;\n
    v53 = &v55;\n
    v51 = 95;\n
    v50 = &v52;\n
    v48 = 101;\n
    v47 = &v49;\n
    v45 = 107;\n
    v44 = &v46;\n
    v42 = 97;\n
    v41 = &v43;\n
    v39 = 109;\n
    v37 = &v61;\n
    v38 = &v40;\n
    v36 = 116;\n
    v35 = v147 - 1557044;\n
    v33 = 117;\n
    v32 = &v34;\n
    v30 = 112;\n
    v28 = &v37;\n
    v29 = &v31;\n
    v27 = 116;\n
    v26 = v147 - 1558228;\n
    v24 = 105;\n
    v23 = &v25;\n
    v21 = 117;\n
    v20 = &v22;\n
    v18 = 113;\n
    v16 = &v28;\n
    v17 = &v19;\n
    v15 = 104;\n
    v14 = v147 - 1560308;\n
    v12 = 99;\n
    v11 = &v13;\n
    v9 = 114;\n
    v8 = &v10;\n
    v6 = 97;\n
    v5 = &v7;\n
    v3 = 101;\n
    v2 = &v4;\n
    v142 = 115;\n
    v140 = &v16;\n
    v141 = &v1;\n
    v148 = v147 - 1543370;\n
    cgc_register_book(&v139, v147 - 122741, v148, v148);\n
    cgc_cmd_ch_sec(&v139, v0 - 122741);\n
    v149 = v0;\n
    cgc_register_book(&v139, v149 - 0x178c00, v149 - 1543162, v149 - 1543147);\n
    v150 = v0;\n
    cgc_register_book(&v139, v150 - 1539922, v150 - 1539916, v150 - 1539885);\n
    v151 = v0;\n
    cgc_register_book(&v139, v151 - 1534942, v151 - 1534936, v151 - 1534912);\n
    v152 = v0;\n
    cgc_register_book(&v139, v152 - 1529503, v152 - 1529497, v152 - 1529465);\n
    v153 = v0;\n
    cgc_register_book(&v139, v153 - 1527088, v153 - 1527082, v153 - 1527042);\n
    v154 = v0;\n
    cgc_register_book(&v139, v154 - 1516244, v154 - 1516238, v154 - 1516210);\n
    v155 = v0;\n
    cgc_register_book(&v139, v155 - 1512047, v155 - 1512041, v155 - 1512022);\n
    v156 = v0;\n
    cgc_register_book(&v139, v156 - 1511814, v156 - 1511808, v156 - 1511768);\n
    v157 = v0;\n
    cgc_register_book(&v139, v157 - 1509454, v157 - 1509448, v157 - 1509408);\n
    v158 = v0;\n
    cgc_register_book(&v139, v158 - 1504976, v158 - 1504970, v158 - 1504954);\n
    v159 = v0;\n
    cgc_register_book(&v139, v159 - 1500735, v159 - 1500729, v159 - 1500695);\n
    v160 = v0;\n
    cgc_register_book(&v139, v160 - 1491943, v160 - 1491937, v160 - 1491898);\n
    v161 = v0;\n
    cgc_register_book(&v139, v161 - 1489873, v161 - 1489867, v161 - 1489834);\n
    v162 = v0;\n
    cgc_register_book(&v139, v162 - 1480632, v162 - 1480626, v162 - 1480587);\n
    v163 = v0;\n
    cgc_register_book(&v139, v163 - 1468630, v163 - 1468624, v163 - 1468584);\n
    v164 = v0;\n
    cgc_register_book(&v139, v164 - 1444291, v164 - 1444284, v164 - 1444245);\n
    v165 = v0;\n
    cgc_register_book(&v139, v165 - 1439007, v165 - 1439000, v165 - 1438960);\n
    v166 = v0;\n
    cgc_register_book(&v139, v166 - 1429774, v166 - 1429768, v166 - 1429746);\n
    v167 = v0;\n
    cgc_register_book(&v139, v167 - 1425135, v167 - 1425129, v167 - 1425113);\n
    v168 = v0;\n
    cgc_register_book(&v139, v168 - 1423763, v168 - 1423757, v168 - 1423717);\n
    v169 = v0;\n
    cgc_register_book(&v139, v169 - 1419293, v169 - 1419287, v169 - 1419252);\n
    v170 = v0;\n
    cgc_register_book(&v139, v170 - 1416789, v170 - 1416783, v170 - 1416764);\n
    v171 = v0;\n
    cgc_register_book(&v139, v171 - 1402789, v171 - 1402783, v171 - 1402754);\n
    v172 = v0;\n
    cgc_register_book(&v139, v172 - 1393978, v172 - 1393972, v172 - 1393946);\n
    v173 = v0;\n
    cgc_register_book(&v139, v173 - 1373158, v173 - 1373152, v173 - 1373112);\n
    v174 = v0;\n
    cgc_register_book(&v139, v174 - 1370165, v174 - 1370158, v174 - 1370138);\n
    v175 = v0;\n
    cgc_register_book(&v139, v175 - 1369667, v175 - 1369660, v175 - 1369632);\n
    v176 = v0;\n
    cgc_register_book(&v139, v176 - 1361544, v176 - 1361537, v176 - 1361502);\n
    v177 = v0;\n
    cgc_register_book(&v139, v177 - 1356682, v177 - 1356675, v177 - 1356644);\n
    v178 = v0;\n
    cgc_register_book(&v139, v178 - 1352899, v178 - 1352892, v178 - 1352852);\n
    v179 = v0;\n
    cgc_register_book(&v139, v179 - 1349642, v179 - 1349635, v179 - 1349595);\n
    v180 = v0;\n
    cgc_register_book(&v139, v180 - 1346179, v180 - 1346172, v180 - 1346132);\n
    v181 = v0;\n
    cgc_register_book(&v139, v181 - 1341689, v181 - 1341683, v181 - 1341645);\n
    v182 = v0;\n
    cgc_register_book(&v139, v182 - 1320578, v182 - 1320572, v182 - 1320544);\n
    v183 = v0;\n
    cgc_register_book(&v139, v183 - 1315597, v183 - 1315591, v183 - 1315568);\n
    v184 = v0;\n
    cgc_register_book(&v139, v184 - 1309265, v184 - 1309259, v184 - 1309239);\n
    v185 = v0;\n
    cgc_register_book(&v139, v185 - 1305105, v185 - 1305099, v185 - 1305060);\n
    v186 = v0;\n
    cgc_register_book(&v139, v186 - 1303825, v186 - 1303819, v186 - 1303779);\n
    v187 = v0;\n
    cgc_register_book(&v139, v187 - 1297187, v187 - 1297181, v187 - 1297141);\n
    v188 = v0;\n
    cgc_register_book(&v139, v188 - 1291723, v188 - 1291717, v188 - 1291680);\n
    v189 = v0;\n
    cgc_register_book(&v139, v189 - 1261226, v189 - 1261220, v189 - 1261180);\n
    v190 = v0;\n
    cgc_register_book(&v139, v190 - 1259861, v190 - 1259855, v190 - 1259833);\n
    v191 = v0;\n
    cgc_register_book(&v139, v191 - 1256313, v191 - 1256307, v191 - 1256267);\n
    v192 = v0;\n
    cgc_register_book(&v139, v192 - 1253184, v192 - 1253178, v192 - 1253138);\n
    v193 = v0;\n
    cgc_register_book(&v139, v193 - 1250799, v193 - 1250793, v193 - 1250765);\n
    v194 = v0;\n
    cgc_register_book(&v139, v194 - 1247246, v194 - 1247240, v194 - 1247206);\n
    v195 = v0;\n
    cgc_register_book(&v139, v195 - 1238611, v195 - 1238605, v195 - 1238580);\n
    v196 = v0;\n
    cgc_register_book(&v139, v196 - 1175745, v196 - 1175739, v196 - 1175717);\n
    v197 = v0;\n
    cgc_register_book(&v139, v197 - 1173592, v197 - 1173586, v197 - 1173546);\n
    v198 = v0;\n
    cgc_register_book(&v139, v198 - 1165480, v198 - 1165474, v198 - 1165434);\n
    v199 = v0;\n
    cgc_register_book(&v139, v199 - 1147082, v199 - 1147076, v199 - 1147036);\n
    v200 = v0;\n
    cgc_register_book(&v139, v200 - 1144730, v200 - 1144723, v200 - 1144697);\n
    v201 = v0;\n
    cgc_register_book(&v139, v201 - 1140580, v201 - 1140574, v201 - 1140546);\n
    v202 = v0;\n
    cgc_register_book(&v139, v202 - 1120694, v202 - 1120688, v202 - 1120653);\n
    v203 = v0;\n
    cgc_register_book(&v139, v203 - 1110185, v203 - 1110179, v203 - 1110139);\n
    v204 = v0;\n
    cgc_register_book(&v139, v204 - 1065209, v204 - 1065203, v204 - 1065163);\n
    v205 = v0;\n
    cgc_register_book(&v139, v205 - 1044627, v205 - 1044621, v205 - 1044592);\n
    v206 = v0;\n
    cgc_register_book(&v139, v206 - 1042279, v206 - 1042273, v206 - 1042233);\n
    v207 = v0;\n
    cgc_register_book(&v139, v207 - 1039547, v207 - 1039540, v207 - 1039500);\n
    v208 = v0;\n
    cgc_register_book(&v139, v208 - 1032986, v208 - 1032979, v208 - 1032959);\n
    v209 = v0;\n
    cgc_register_book(&v139, v209 - 1027713, v209 - 1027706, v209 - 1027672);\n
    v210 = v0;\n
    cgc_register_book(&v139, v210 - 1019922, v210 - 1019915, v210 - 1019896);\n
    v211 = v0;\n
    cgc_register_book(&v139, v211 - 1015881, v211 - 1015874, v211 - 1015847);\n
    v212 = v0;\n
    cgc_register_book(&v139, v212 - 1010354, v212 - 1010347, v212 - 1010325);\n
    v213 = v0;\n
    cgc_register_book(&v139, v213 - 1006569, v213 - 1006562, v213 - 1006554);\n
    v214 = v0;\n
    cgc_register_book(&v139, v214 - 1006157, v214 - 1006150, v214 - 1006110);\n
    v215 = v0;\n
    cgc_register_book(&v139, v215 - 990724, v215 - 990717, v215 - 990677);\n
    v216 = v0;\n
    cgc_register_book(&v139, v216 - 979306, v216 - 979299, v216 - 979259);\n
    v217 = v0;\n
    cgc_register_book(&v139, v217 - 970035, v217 - 970028, v217 - 969988);\n
    v218 = v0;\n
    cgc_register_book(&v139, v218 - 961880, v218 - 961873, v218 - 961833);\n
    v219 = v0;\n
    cgc_register_book(&v139, v219 - 955397, v219 - 955390, v219 - 955351);\n
    v220 = v0;\n
    cgc_register_book(&v139, v220 - 950906, v220 - 950899, v220 - 950868);\n
    v221 = v0;\n
    cgc_register_book(&v139, v221 - 924466, v221 - 924459, v221 - 924436);\n
    v222 = v0;\n
    cgc_register_book(&v139, v222 - 0xe0c00, v222 - 920569, v222 - 920529);\n
    v223 = v0;\n
    cgc_register_book(&v139, v223 - 914979, v223 - 914972, v223 - 914951);\n
    v224 = v0;\n
    cgc_register_book(&v139, v224 - 878880, v224 - 878873, v224 - 878854);\n
    v225 = v0;\n
    cgc_register_book(&v139, v225 - 870690, v225 - 870683, v225 - 870645);\n
    v226 = v0;\n
    cgc_register_book(&v139, v226 - 828996, v226 - 828989, v226 - 828965);\n
    v227 = v0;\n
    cgc_register_book(&v139, v227 - 819654, v227 - 819647, v227 - 819607);\n
    v228 = v0;\n
    cgc_register_book(&v139, v228 - 792123, v228 - 792116, v228 - 792099);\n
    v229 = v0;\n
    cgc_register_book(&v139, v229 - 772411, v229 - 772404, v229 - 772387);\n
    v230 = v0;\n
    cgc_register_book(&v139, v230 - 649708, v230 - 649701, v230 - 649661);\n
    v231 = v0;\n
    cgc_register_book(&v139, v231 - 636357, v231 - 636350, v231 - 636328);\n
    v232 = v0;\n
    cgc_register_book(&v139, v232 - 619874, v232 - 619867, v232 - 619845);\n
    v233 = v0;\n
    cgc_register_book(&v139, v233 - 602643, v233 - 602636, v233 - 602607);\n
    v234 = v0;\n
    cgc_register_book(&v139, v234 - 592039, v234 - 592032, v234 - 592012);\n
    v235 = v0;\n
    cgc_register_book(&v139, v235 - 566965, v235 - 566958, v235 - 566928);\n
    v236 = v0;\n
    cgc_register_book(&v139, v236 - 526748, v236 - 526741, v236 - 526701);\n
    v237 = v0;\n
    cgc_register_book(&v139, v237 - 514307, v237 - 514300, v237 - 514289);\n
    v238 = v0;\n
    cgc_register_book(&v139, v238 - 505881, v238 - 505874, v238 - 505866);\n
    v239 = v0;\n
    cgc_register_book(&v139, v239 - 491399, v239 - 491392, v239 - 491365);\n
    v240 = v0;\n
    cgc_register_book(&v139, v240 - 488789, v240 - 488782, v240 - 488757);\n
    v241 = v0;\n
    cgc_register_book(&v139, v241 - 475352, v241 - 475345, v241 - 475310);\n
    v242 = v0;\n
    cgc_register_book(&v139, v242 - 469222, v242 - 469215, v242 - 469176);\n
    v243 = v0;\n
    cgc_register_book(&v139, v243 - 464157, v243 - 464150, v243 - 464114);\n
    v244 = v0;\n
    cgc_register_book(&v139, v244 - 460185, v244 - 460178, v244 - 460169);\n
    v245 = v0;\n
    cgc_register_book(&v139, v245 - 440211, v245 - 440204, v245 - 440165);\n
    v246 = v0;\n
    cgc_register_book(&v139, v246 - 395973, v246 - 395966, v246 - 395926);\n
    v247 = v0;\n
    cgc_register_book(&v139, v247 - 386873, v247 - 386866, v247 - 386836);\n
    v248 = v0;\n
    cgc_register_book(&v139, v248 - 364460, v248 - 364453, v248 - 364413);\n
    v249 = v0;\n
    cgc_register_book(&v139, v249 - 353397, v249 - 353390, v249 - 353350);\n
    v250 = v0;\n
    cgc_register_book(&v139, v250 - 307413, v250 - 307406, v250 - 307366);\n
    v251 = v0;\n
    cgc_register_book(&v139, v251 - 275036, v251 - 275028, v251 - 274988);\n
    v252 = v0;\n
    cgc_register_book(&v139, v252 - 271513, v252 - 271505, v252 - 271465);\n
    v253 = v0;\n
    cgc_register_book(&v139, v253 - 264803, v253 - 264795, v253 - 264755);\n
    v254 = v0;\n
    cgc_register_book(&v139, v254 - 252829, v254 - 252821, v254 - 252781);\n
    v255 = v0;\n
    cgc_register_book(&v139, v255 - 245498, v255 - 245490, v255 - 245450);\n
    v256 = v0;\n
    cgc_register_book(&v139, v256 - 235026, v256 - 235019, v256 - 235005);\n
    v257 = v0;\n
    cgc_register_book(&v139, v257 - 232078, v257 - 232071, v257 - 232031);\n
    v258 = v0;\n
    cgc_register_book(&v139, v258 - 227452, v258 - 227445, v258 - 227405);\n
    v259 = v0;\n
    cgc_register_book(&v139, v259 - 152658, v259 - 152651, v259 - 152617);\n
    v260 = v0;\n
    cgc_register_book(&v139, v260 - 146623, v260 - 146616, v260 - 146587);\n
    v261 = v0;\n
    cgc_register_book(&v139, v261 - 124102, v261 - 124095, v261 - 124062);\n
    v262 = v0;\n
    cgc_register_book(&v139, v262 - 122747, v262 - 122739, v262 - 122699);\n
    v263 = v0;\n
    cgc_register_book(&v139, v263 - 54069, v263 - 54061, v263 - 54026);\n
    v264 = v0;\n
    cgc_register_book(&v139, v264 - 51980, v264 - 51972, v264 - 51932);\n
    v265 = v0;\n
    cgc_register_book(&v139, v265 - 37896, v265 - 0x9400, v265 - 37848);\n
    v266 = v0;\n
    cgc_register_book(&v139, v266 - 32284, v266 - 32276, v266 - 32237);\n
    v267 = v0;\n
    cgc_register_book(&v139, v267 - 24136, v267 - 24128, v267 - 24088);\n
    v268 = v0;\n
    cgc_register_book(&v139, v268 - 20011, v268 - 20003, v268 - 19970);\n
    v269 = v0;\n
    cgc_register_book(&v139, v269 - 14286, v269 - 14278, v269 - 14242);\n
    v270 = v0;\n
    cgc_register_book(&v139, v270 - 7560, v270 - 7552, v270 - 7512);\n
    v271 = v0;\n
    cgc_register_book(&v139, v271 - 4753, v271 - 4745, v271 - 4706);\n
    return cgc_process(&v139);\n
}\n
", "4219340:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "6291456:__libc_start_main": null, "6291460:cgc__terminate": null, "6291464:cgc_transmit": null, "6291468:cgc_allocate": null, "6291472:cgc_deallocate": null, "6291476:cgc_receive": null, "7344204:UnresolvableJumpTarget": null, "7344208:UnresolvableCallTarget": null}