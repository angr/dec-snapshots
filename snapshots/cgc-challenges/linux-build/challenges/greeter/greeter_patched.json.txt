{"4198400:_init": "extern struct_0 *g_406d34;\n
\n
int _init()\n
{\n
    if (g_406d34)\n
    {\n
        g_406d34();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_fabs": "// attributes: PLT stub\n
int cgc_fabs()\n
{\n
    ::libc.so.0::cgc_fabs();\n
    return;\n
}\n
", "4198480:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198496:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198512:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4198528:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198544:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198560:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198576:strchr": "// attributes: PLT stub\n
char * strchr(char *v0, unsigned int string)\n
{\n
    return ::libc.so.0::strchr(v0, string);\n
}\n
", "4198592:strncpy": "// attributes: PLT stub\n
char * strncpy(char *v0, char *to, unsigned int from)\n
{\n
    return ::libc.so.0::strncpy(v0, to, from);\n
}\n
", "4198608:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4198624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198640:sub_4010f0": "int sub_4010f0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198646:sub_4010f6": null, "4198656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198699:sub_40112b": null, "4198700:sub_40112c": "int sub_40112c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198708:sub_401134": null, "4198720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 23547;\n
    v6 = v5 + 24;\n
    v7 = v5 + 24;\n
    if (v7 == v6)\n
        return v5 + 24;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198771:sub_401173": "int sub_401173()\n
{\n
}\n
", "4198777:sub_401179": "int sub_401179()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 23483;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 24;\n
    v9 = (v6 + 24 - (v6 + 24) >> 31) + (24 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198855:sub_4011c7": "int sub_4011c7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406d30;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406d30)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010f0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198939:sub_40121b": "int sub_40121b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198957:sub_40122d": null, "4198960:cgc_adler32ish": "int cgc_adler32ish(unsigned int v3, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned short v1;  // [bp-0x8]\n
    unsigned short v2;  // [bp-0x6]\n
\n
    v2 = 1;\n
    v1 = 0;\n
    for (v0 = 0; v0 < a0; v0 += 1)\n
    {\n
        v2 += *((v3 + v0));\n
        v1 += v2;\n
    }\n
    return v1 * 0x10000 | v2;\n
}\n
", "4199069:sub_40129d": null, "4199072:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"$l\";\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_receive(v5, a0 + v3, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a1 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199221:sub_401335": null, "4199232:cgc_write_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = \"$l\";\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(v5, a0 + v3, a1))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            a1 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            return v4;\n
        }\n
    }\n
}\n
", "4199381:sub_4013d5": null, "4199392:cgc_read_line": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_line(unsigned int v7, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x11]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = \"$l\";\n
    v5 = 0;\n
    v4 = 0;\n
    if (!a0)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v5 != 10)\n
            v1 = v4 < 4095;\n
        if (!(v1 & 1))\n
            break;\n
        v0 = &v3;\n
        if (cgc_receive(v7, &v5, 1))\n
        {\n
LABEL_401489:\n
            v6 = -1;\n
            return v6;\n
        }\n
        if (!(*(&v3) == 1))\n
            goto LABEL_401489;\n
        v8 = v4;\n
        v4 = v8 + 1;\n
        *((v2 + v8 + 100)) = v5;\n
    }\n
    v9 = cgc_calloc();\n
    *(a0) = v9;\n
    if (!v9)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    cgc_memcpy(*(a0), v2 + 100);\n
    v6 = v4;\n
    return v6;\n
}\n
", "4199694:sub_40150e": null, "4199696:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *(v5) = tmp_19;\n
    }\n
    return v2;\n
}\n
", "4199782:sub_401566": null, "4199792:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    unsigned int v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
        *(v4) = a0;\n
    }\n
    return v1;\n
}\n
", "4199862:sub_4015b6": null, "4199872:cgc_memmove": "int cgc_memmove(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
    char *v5;  // eax\n
    char *v6;  // eax\n
    char *v7;  // eax\n
\n
    v1 = v3;\n
    v0 = a0;\n
    if (v1 == v0)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    if (v0 < v1)\n
    {\n
        while (true)\n
        {\n
            v4 = a1;\n
            a1 = v4 + 1;\n
            if (!v4)\n
                break;\n
            v1[a1] = *((v0 + a1));\n
        }\n
    }\n
    else\n
    {\n
        while (true)\n
        {\n
            v5 = a1;\n
            a1 = v5 + 1;\n
            if (!v5)\n
                break;\n
            v6 = v0;\n
            v0 = v6 + 1;\n
            tmp_19 = *(v6);\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            *(v7) = tmp_19;\n
        }\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4200067:sub_401683": null, "4200080:cgc_memcmp": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
int cgc_memcmp(struct_0 *v3, struct_0 *a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
    struct_0 *v7;  // ecx\n
\n
    v1 = v3;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v4 = a1;\n
        a1 = v4 - 1;\n
        if (!v4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v5 = v1;\n
        v1 = &v5->field_0;\n
        v6 = v5->field_-1;\n
        v7 = v0;\n
        v0 = &v7->field_0;\n
        if (v6 != v7->field_-1)\n
        {\n
            v2 = *((v1 - 1)) - *((v0 - 1));\n
            return v2;\n
        }\n
    }\n
}\n
", "4200207:sub_40170f": null, "4200208:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4200264:sub_401748": null, "4200272:cgc_strnlen": "int cgc_strnlen(char *v2, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // ecx\n
    char *v4;  // eax\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v3 = a0;\n
        a0 = v3 - 1;\n
        v0 = 0;\n
        if (v3)\n
        {\n
            v4 = v2;\n
            v2 = v4 + 1;\n
            v0 = *(v4);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    return v1;\n
}\n
", "4200377:sub_4017b9": null, "4200384:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4200497:sub_401831": null, "4200512:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        v1 = 0;\n
        if (a1)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4200651:sub_4018cb": null, "4200656:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4200739:sub_401923": null, "4200752:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4200907:sub_4019cb": null, "4200912:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"$l\";\n
    v1 = v3;\n
    v3 = &v3[cgc_strlen(v3)];\n
    cgc_strcpy(v3, a0);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4200993:sub_401a21": null, "4201008:cgc_strncat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncat(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"$l\";\n
    v1 = v3;\n
    v3 = &v3[cgc_strlen(v3)];\n
    cgc_strncpy(v3, a0, a1);\n
    v3[a1] = 0;\n
    v5 = v2;\n
    return v1;\n
}\n
", "4201109:sub_401a95": null, "4201120:cgc_strchr": "int cgc_strchr(char *v1, char a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4201205:sub_401af5": null, "4201216:cgc_strrchr": "int cgc_strrchr(char *v2, char a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v2); v2 += 1);\n
    while (true)\n
    {\n
        if (v2 < v0)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*(v2) != a0)\n
        {\n
            v2 -= 1;\n
        }\n
        else\n
        {\n
            v1 = v2;\n
            return v1;\n
        }\n
    }\n
}\n
", "4201345:sub_401b81": null, "4201360:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[4196];\n
    struct struct_1 *field_1064;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(unsigned int v4, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // ebx\n
\n
    v0 = &\"$l\";\n
    if (v4)\n
    {\n
LABEL_401bec:\n
        if (v0->field_1064 && !(!cgc_strlen(v0->field_1064)))\n
            goto LABEL_401c22;\n
        v0->field_1064 = v4;\n
LABEL_401c22:\n
        for (; v0->field_1064->field_0 == a0; v5->field_1064 = v5->field_1064 + 1)\n
        {\n
            v5 = v0;\n
        }\n
        if (!cgc_strlen(v0->field_1064))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v6 = v0;\n
        v1 = v6->field_1064;\n
        v2 = cgc_strchr(v6->field_1064, a0);\n
        if (!v2)\n
        {\n
            v0->field_1064 = 0;\n
        }\n
        else\n
        {\n
            *(v2) = 0;\n
            v0->field_1064 = &v2[1];\n
        }\n
        v3 = v1;\n
        return v3;\n
    }\n
    else\n
    {\n
        if (v0->field_1064 && !(!cgc_strlen(v0->field_1064)))\n
            goto LABEL_401bec;\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4201696:cgc_to_hex": "int cgc_to_hex(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 < 10)\n
    {\n
        v1 = v2 + 48;\n
        return v1;\n
    }\n
    else if (v2 < 16)\n
    {\n
        v1 = v2 + 87;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
}\n
", "4201775:sub_401d2f": null, "4201776:cgc_to_bin": "int cgc_to_bin(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 >= 48 && v2 <= 57)\n
    {\n
        v1 = v2 - 48;\n
        return v1;\n
    }\n
    if (v2 >= 97 && v2 <= 102)\n
    {\n
        v1 = v2 + -87;\n
        return v1;\n
    }\n
    if (v2 >= 65 && v2 <= 70)\n
    {\n
        v1 = v2 + -55;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4201925:sub_401dc5": null, "4201936:cgc_bin_to_hex": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bin_to_hex(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_18;  // tmp #18\n
    int tmp_11;  // tmp #11\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v0 = \"$l\";\n
    v1 = a0;\n
    for (v2 = 0; v2 < a1; v2 += 1)\n
    {\n
        tmp_18 = cgc_to_hex(v1[v2] >> 4);\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = tmp_18;\n
        tmp_11 = cgc_to_hex(v1[v2] & 15);\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = tmp_11;\n
    }\n
    return v3;\n
}\n
", "4202099:sub_401e73": null, "4202112:cgc_hex_to_uint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_hex_to_uint(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"$l\";\n
    v3 = 0;\n
    for (v2 = 4; v2 > 0; v2 -= 1)\n
    {\n
        v0 = v3 * 0x100;\n
        v3 = v0 | cgc_to_bin(v4[2 + 2 * v2]) * 16;\n
        v3 = cgc_to_bin(v4[1 + 2 * v2]) | v3;\n
    }\n
    return v3;\n
}\n
", "4202273:sub_401f21": null, "4202288:cgc_itoa": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_itoa(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0xd]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v6;  // eax\n
    char *v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // eax\n
    char *v10;  // eax\n
    char *v11;  // eax\n
\n
    v0 = \"$l\";\n
    v3 = 0;\n
    v2 = a0;\n
    v1 = a0;\n
    if (!v5)\n
    {\n
        v4 = cgc_strcpy(a0, v0 - 7480);\n
        return v4;\n
    }\n
    if (v5 < 0)\n
    {\n
        a0 += 1;\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        *(v6) = 45;\n
        v5 = -(v5);\n
    }\n
    for (; v5; v5 = (v8 >> 31 CONCAT v8) /m 10)\n
    {\n
        v7 = v2;\n
        v2 = v7 + 1;\n
        *(v7) = ((v5 >> 31 CONCAT v5) /m 10 >> 32) + 48;\n
        v8 = v5;\n
    }\n
    v9 = v2;\n
    v2 = v9 + 1;\n
    for (*(v9) = 0; v2 - a0 > 0; *(v11) = v3)\n
    {\n
        v3 = *(a0);\n
        v10 = a0;\n
        a0 = v10 + 1;\n
        *(v10) = *(v2);\n
        v11 = v2;\n
        v2 = v11 + 1;\n
    }\n
    v4 = v1;\n
    return v4;\n
}\n
", "4202571:sub_40204b": null, "4202576:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x29]\n
    unsigned int v5;  // [bp-0x28]\n
    struct_0 *v6;  // [bp-0x24]\n
    unsigned int *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int *v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v6 = &\"$l\";\n
    v11 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < v6->field_40)\n
        v13 = v6->field_40;\n
    if (v13 > 4095)\n
    {\n
        v12 = cgc_allocate_large_chunk();\n
        return v12;\n
    }\n
    v5 = cgc_log_base_two();\n
    v10 = v5 - cgc_log_base_two();\n
    if (v10 >= 8)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (!v11)\n
            v4 = v10 < 8;\n
        if (!(v4 & 1))\n
            break;\n
        v14 = v6;\n
        v15 = v10;\n
        v10 = v15 + 1;\n
        v0 = v13;\n
        v9 = cgc_list_find(&v14[61].padding_0[52 + 8 * v15], &v14[276].padding_0[48]);\n
        if (!v9)\n
            v3 = 0;\n
        else\n
            v3 = -5 + v9;\n
        v8 = v3;\n
        v11 = v8;\n
    }\n
    if (!v11)\n
    {\n
        v11 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v7 = v11;\n
        v2 = &v6[61].padding_0[52 + 8 + 8 * v10];\n
        if (!v7)\n
            v1 = 0;\n
        else\n
            v1 = v7 + 1;\n
        cgc_list_remove(v2);\n
    }\n
    cgc_mark_allocated();\n
    if ((*(v11) & -2) > v13)\n
        v11 = cgc_split_chunk(v11);\n
    v12 = cgc_chunk_to_ptr();\n
    return v12;\n
}\n
", "4203134:sub_40227e": null, "4203136:cgc_allocate_large_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_large_chunk(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"$l\";\n
    v0 = &v2;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = v5;\n
    cgc_mark_allocated();\n
    v3 = cgc_chunk_to_ptr();\n
    return v3;\n
}\n
", "4203258:sub_4022fa": null, "4203264:cgc_log_base_two": "int cgc_log_base_two(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4203318:sub_402336": null, "4203328:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"$l\";\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = a1;\n
        if (a0(v2))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = *(v2);\n
    }\n
}\n
", "4203452:sub_4023bc": null, "4203456:cgc_find_fit": "int cgc_find_fit(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v4 = a0;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4203556:sub_402424": null, "4203568:cgc_grow_heap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_grow_heap()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"$l\";\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0x1000;\n
    cgc_mark_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4203678:sub_40249e": null, "4203680:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4203790:sub_40250e": null, "4203792:cgc_mark_allocated": "int cgc_mark_allocated(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) | 1;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4203830:sub_402536": null, "4203840:cgc_split_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_sizes;\n
\n
int cgc_split_chunk(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"$l\";\n
    v2 = v4 + a0;\n
    v1 = *(v4) & -2;\n
    if ((*(v4) & -2) <= a0 + size_class_sizes)\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
    *(v4) = a0;\n
    cgc_mark_allocated(v4);\n
    *(v2) = v1 - a0;\n
    cgc_mark_allocated(v2);\n
    cgc_chunk_to_ptr();\n
    cgc_free();\n
    v3 = v4;\n
    return v3;\n
}\n
", "4204011:sub_4025eb": null, "4204016:cgc_chunk_to_ptr": "int cgc_chunk_to_ptr(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4204034:sub_402602": null, "4204048:cgc_free": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &\"$l\";\n
    v8 = cgc_ptr_to_chunk();\n
    v4 = v8;\n
    if (!v6)\n
        return v8;\n
    cgc_mark_free();\n
    v4 = cgc_coalesce();\n
    v1 = cgc_log_base_two(*(v4) & -2);\n
    v3 = v1 - cgc_log_base_two(v2->field_40);\n
    if (v3 >= 8)\n
        v3 = 7;\n
    v9 = v2;\n
    v0 = &v9[252].padding_0[32];\n
    v8 = cgc_list_insert_in_order(&v9[61].padding_0[52 + 8 * v3], v4 + 1);\n
    return v8;\n
}\n
", "4204250:sub_4026da": null, "4204256:cgc_ptr_to_chunk": "int cgc_ptr_to_chunk(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4204325:sub_402725": null, "4204336:cgc_mark_free": "int cgc_mark_free(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) & -2;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4204374:sub_402756": null, "4204384:cgc_coalesce": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_1 *v12)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v6 = &\"$l\";\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v12 & 4095))\n
        v10 = v12 + -(v12->field_0 & -2);\n
    if (((v12 + (v12->field_-4 & -2)) & 4095))\n
        v11 = v12 + (v12->field_-4 & -2);\n
    if (v10 && !(*(v10) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v10) & -2);\n
        v9 = v5 - cgc_log_base_two(v6->field_40);\n
        if (v9 < 8)\n
        {\n
            v8 = v10;\n
            v4[0] = &v6[61].padding_0[52 + 8 * v9];\n
            if (!v8)\n
                v3 = 0;\n
            else\n
                v3 = v8 + 1;\n
            cgc_list_remove(v4, v3);\n
            *(v10) = (v12->field_-4 & -2) + (*(v10) & -2);\n
            cgc_mark_free(v10);\n
            v12 = v10;\n
        }\n
    }\n
    if (!v11)\n
    {\n
        return v12;\n
    }\n
    else if ((*(v11) & 1))\n
    {\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v11) & -2);\n
        v9 = v2 - cgc_log_base_two(v6->field_40);\n
        if (v9 >= 8)\n
            return v12;\n
        v7 = v11;\n
        v1[0] = &v6[61].padding_0[52 + 8 * v9];\n
        if (!v7)\n
            v0 = 0;\n
        else\n
            v0 = v7 + 1;\n
        cgc_list_remove(v1, v0);\n
        *(v12) = (*(v12) & -2) + (*(v11) & -2);\n
        cgc_mark_free(v12);\n
    }\n
}\n
", "4204937:sub_402989": null, "4204944:cgc_list_insert_in_order": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_in_order(struct struct_0 **v3, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = \"$l\";\n
    v2 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = cgc_list_push_back(v3);\n
            return v4;\n
        }\n
        else if (a1(a0) < 0)\n
        {\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v0 = a0;\n
            v4 = cgc_list_insert_before(v3, v2);\n
            return v4;\n
        }\n
    }\n
}\n
", "4205101:sub_402a2d": null, "4205104:cgc_size_cmp": "int cgc_size_cmp(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
\n
    v6 = v8;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4205255:sub_402ac7": null, "4205264:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"$l\";\n
    v1 = cgc_malloc(v3);\n
    if (v1)\n
    {\n
        cgc_memset(v1, 0, v3);\n
        return v1;\n
    }\n
    return v1;\n
}\n
", "4205353:sub_402b29": null, "4205360:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20]\n
    char *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v3 = \"$l\";\n
    if (!v7)\n
    {\n
        v6 = cgc_malloc(a0);\n
        return v6;\n
    }\n
    v5 = (*(cgc_ptr_to_chunk(v7)) & -2) - 8;\n
    if (a0 == v5)\n
    {\n
        v6 = v7;\n
        return v6;\n
    }\n
    v4 = cgc_malloc(a0);\n
    v1 = v4;\n
    v2 = v7;\n
    if (a0 < v5)\n
        v0 = a0;\n
    else\n
        v0 = v5;\n
    cgc_memcpy(v1, v2, v0);\n
    cgc_free(v7);\n
    v6 = v4;\n
    return v6;\n
}\n
", "4205583:sub_402c0f": null, "4205584:cgc_list_insert_before": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_insert_before(struct_1 *v0, struct_3 *a0, unsigned int a1[2])\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4205840:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push_back(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_list_insert_after(v1, v1->field_4);\n
}\n
", "4205899:sub_402d4b": null, "4205904:cgc_list_insert_after": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_after(void* *v1, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = \"$l\";\n
    if (a0)\n
    {\n
        v2 = cgc_list_insert_before(v1, *(a0), a1);\n
        return v2;\n
    }\n
    v2 = cgc_list_insert_before(v1, *(v1), a1);\n
    return v2;\n
}\n
", "4206016:cgc_md5": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_md5(unsigned int v8, unsigned int a0, unsigned int a1[4])\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // esi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // ebx\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v1 = \"$l\";\n
    v2 = 1732584193;\n
    v3 = 4023233417;\n
    v4 = 2562383102;\n
    v5 = 271733878;\n
    v0 = &v2;\n
    cgc_md5_update(v8, a0, a0);\n
    a1[0] = v2;\n
    a1[1] = v3;\n
    a1[2] = v4;\n
    a1[3] = v5;\n
    v11 = v6;\n
    v12 = v7;\n
    return cgc_memset(&v2, 0, 16);\n
}\n
", "4206182:sub_402e66": null, "4206192:cgc_md5_update": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_md5_update(unsigned int v4, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    void* v0;  // [bp-0x68], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x58]\n
    void* v2;  // [bp-0x54], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x50]\n
\n
    for (v1 = \"$l\"; a0 > 64; a0 -= 64)\n
    {\n
        v0 = 0;\n
        cgc_md5_pad(&v3, v4, a0, a1, 0);\n
        cgc_md5_chunk(&v3);\n
        v4 += 64;\n
    }\n
    v0 = 0;\n
    v2 = cgc_md5_pad(&v3, v4, a0, a1, 0);\n
    cgc_md5_chunk(&v3);\n
    if (v2)\n
    {\n
        v0 = a0 != 64;\n
        cgc_md5_pad(&v3, 0, 0, a1, 0);\n
        cgc_md5_chunk(&v3);\n
    }\n
    v2 = 0;\n
    a1 = 0;\n
    return cgc_memset(&v3, 0, 64);\n
}\n
", "4206538:sub_402fca": null, "4206544:cgc_md5_hmac": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_md5_hmac(char *v14, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3[4])\n
{\n
    unsigned int v0;  // [bp-0xf4]\n
    unsigned int v1;  // [bp-0xf0]\n
    char v2;  // [bp-0xec]\n
    char v3;  // [bp-0xac]\n
    char v4;  // [bp-0x6c]\n
    unsigned int v5;  // [bp-0x2c]\n
    unsigned int v6;  // [bp-0x28]\n
    unsigned int v7;  // [bp-0x24]\n
    unsigned int v8;  // [bp-0x20]\n
    unsigned int v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x18]\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
\n
    v13 = v15;\n
    v0 = \"$l\";\n
    cgc_memset(&v4, 0, 64);\n
    if (a0 > 64)\n
        cgc_md5(v14, a0, &v4);\n
    if (a0 < 64)\n
        cgc_memcpy(&v4, v14, a0);\n
    for (v1 = 0; v1 < 64; v1 += 1)\n
    {\n
        (&v3)[v1] = (&v4)[v1] ^ 92;\n
        (&v2)[v1] = (&v4)[v1] ^ 54;\n
    }\n
    v5 = 1732584193;\n
    v9 = 1732584193;\n
    v6 = 4023233417;\n
    v10 = 4023233417;\n
    v7 = 2562383102;\n
    v11 = 2562383102;\n
    v8 = 271733878;\n
    v12 = 271733878;\n
    cgc_md5_chunk(&v2);\n
    cgc_md5_update(a1, a2, a2 + 64, &v5);\n
    cgc_md5_chunk(&v3);\n
    cgc_md5_update(&v5, 16, 80, &v9);\n
    a3[0] = v9;\n
    a3[1] = v10;\n
    a3[2] = v11;\n
    a3[3] = v12;\n
    cgc_memset(&v9, 0, 16);\n
    cgc_memset(&v5, 0, 16);\n
    cgc_memset(&v4, 0, 64);\n
    cgc_memset(&v3, 0, 64);\n
    return cgc_memset(&v2, 0, 64);\n
}\n
", "4207217:sub_403271": null, "4207232:cgc_md5_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_406bf4;\n
extern unsigned int g_406bf8;\n
extern unsigned int g_406bfc;\n
extern unsigned int g_406c00;\n
\n
int cgc_md5_chunk(unsigned int *v20, unsigned int a0[4])\n
{\n
    unsigned int v0;  // [bp-0x68]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned int *v2;  // [bp-0x54]\n
    unsigned int v3;  // [bp-0x50]\n
    unsigned int v4;  // [bp-0x4c]\n
    unsigned int v5;  // [bp-0x48]\n
    unsigned int v6;  // [bp-0x44]\n
    unsigned int v7;  // [bp-0x40]\n
    void* v8;  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x38]\n
    unsigned int v10;  // [bp-0x34]\n
    unsigned int v11;  // [bp-0x30]\n
    unsigned int v12;  // [bp-0x2c]\n
    unsigned int v13;  // [bp-0x28]\n
    unsigned int v14;  // [bp-0x24]\n
    unsigned int v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x18]\n
    unsigned int v18;  // [bp-0x14]\n
    unsigned int *v19;  // [bp-0x10]\n
    unsigned int v21[4];  // eax\n
    unsigned int v22[4];  // eax\n
    unsigned int v23[4];  // eax\n
    unsigned int v24[4];  // eax\n
\n
    v7 = \"$l\";\n
    v19 = v20;\n
    v18 = a0[0];\n
    v17 = a0[1];\n
    v16 = a0[2];\n
    v15 = a0[3];\n
    v9 = g_406bf4;\n
    v10 = g_406bf8;\n
    v11 = g_406bfc;\n
    v12 = g_406c00;\n
    for (v8 = 0; v8 < 64; v8 += 1)\n
    {\n
        v0 = v16;\n
        v1 = v15;\n
        v14 = (&v9)[v8 >> 4](v17, v0);\n
        v13 = v15;\n
        v15 = v16;\n
        v16 = v17;\n
        v6 = v17;\n
        v3 = v18 + v14;\n
        v2 = v19;\n
        v4 = v3 + v2[cgc_k(v8, v0)];\n
        v5 = v4 + cgc_T();\n
        s();\n
        v17 = v6 + cgc_rotateleft(v5);\n
        v18 = v13;\n
    }\n
    v21 = a0;\n
    v21[0] = v18 + v21[0];\n
    v22 = a0;\n
    v22[1] = v17 + v22[1];\n
    v23 = a0;\n
    v23[2] = v16 + v23[2];\n
    v24 = a0;\n
    v24[3] = v15 + v24[3];\n
    return a0;\n
}\n
", "4207599:sub_4033ef": null, "4207600:cgc_md5_pad": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[3];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_md5_pad(struct_0 *v7, char *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_0 *v8;  // eax\n
    unsigned int v9;  // eax\n
    struct_0 *v12;  // eax\n
\n
    v2 = \"$l\";\n
    v4 = a2;\n
    v5 = a3;\n
    if (a1 >= 64)\n
    {\n
        cgc_memcpy(v7, a0, 64);\n
        v6 = a1 == 64;\n
        return v6;\n
    }\n
    v3 = 64 - a1;\n
    cgc_memcpy(v7, a0, a1);\n
    v7 = &(&v7->field_0)[a1];\n
    if (!a4)\n
    {\n
        v8 = v7;\n
        v7 = &v8->padding_1;\n
        v8->field_0 = 128;\n
        v3 -= 1;\n
    }\n
    v1 = v7;\n
    if (v3 < 8)\n
        v0 = v3;\n
    else\n
        v0 = v3 - 8;\n
    cgc_memset(v1, 0, v0);\n
    if (v3 < 8)\n
    {\n
        v6 = 1;\n
        return v6;\n
    }\n
    v7 = v3 + v7 - 8;\n
    v9 = v4;\n
    v12 = v7;\n
    v12->field_4 = (v5 CONCAT v9) * 8 >> 32;\n
    *(&v12->field_0) = v9 * 8;\n
    v6 = 0;\n
    return v6;\n
}\n
", "4207927:sub_403537": null, "4207936:cgc_F": "int cgc_F(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0 & a0 | (v0 ^ -1) & a1;\n
}\n
", "4207967:sub_40355f": null, "4207968:cgc_G": "int cgc_G(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0 & a1 | a0 & (a1 ^ -1);\n
}\n
", "4208001:sub_403581": null, "4208016:cgc_H": "int cgc_H(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return v0 ^ a0 ^ a1;\n
}\n
", "4208039:sub_4035a7": null, "4208048:cgc_I": "int cgc_I(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    return a0 ^ (v0 | a1 ^ -1);\n
}\n
", "4208078:sub_4035ce": null, "4208080:cgc_rotateleft": "int cgc_rotateleft(unsigned int v0, unsigned int a0)\n
{\n
    return v0 << (a0 & 31) | v0 >> ((32 - a0) & 31);\n
}\n
", "4208116:sub_4035f4": null, "4208128:cgc_k": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_k()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp+0x4]\n
\n
    v0 = \"$l\";\n
    v1 = v3 >> 4;\n
    if (v1 > 3)\n
    {\n
        v2 = 0;\n
        return;\n
    }\n
    goto *(((stack_base)[16] + (stack_base)[12] * 4 - 7476)) + (stack_base)[16];\n
}\n
", "4208264:sub_403688": null, "4208272:cgc_T": null, "4208416:s": "extern void g_40501c;\n
\n
int s(unsigned int *v1)\n
{\n
    char v0;  // [bp-0x48]\n
\n
    memcpy(&v0, &g_40501c, 64);\n
    return *(&(&v0)[16 * (v1 >> 4) + 4 * (v1 & 3)]);\n
}\n
", "4208496:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void g_406c04;\n
\n
int main(unsigned int v15, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x58]\n
    struct struct_0 **v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    struct struct_0 **v3;  // [bp-0x4c]\n
    unsigned int v4;  // [bp-0x48]\n
    char v5;  // [bp-0x44]\n
    char v6;  // [bp-0x40]\n
    unsigned int v7;  // [bp-0x28]\n
    char v8;  // [bp-0x21]\n
    char v9;  // [bp-0x19]\n
    unsigned int v10;  // [bp-0x18], Other Possible Types: char\n
    unsigned int v11;  // [bp-0x14]\n
    unsigned int v12;  // [bp-0x10]\n
    void* v13;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
\n
    v14 = v16;\n
    v4 = \"$l\";\n
    v13 = 0;\n
    memcpy(&v5, &g_406c04, 24);\n
    while (true)\n
    {\n
        v11 = cgc_read_line(0, &v12);\n
        if (v11 < 0)\n
        {\n
            v13 = -1;\n
            return v13;\n
        }\n
        if (*((v12 + v11 - 1)) == 10)\n
            *((v12 + v11 - 1)) = 0;\n
        v10 = -1;\n
        for (v7 = 0; v7 < 3; v7 += 1)\n
        {\n
            v2 = v12;\n
            v3 = *(&(&v5)[8 * v7]);\n
            if (!cgc_strncmp(v2, v3, cgc_strlen(*(&(&v5)[8 * v7]))))\n
            {\n
                v1 = *(&(&v6)[8 * v7]);\n
                v0 = v12;\n
                cgc_strlen(*(&(&v5)[8 * v7]));\n
                v10 = v1();\n
                break;\n
            }\n
        }\n
        cgc_memset(v12, 0, v11);\n
        cgc_free(v12);\n
        cgc_bin_to_hex(&v8, &v10, 4);\n
        v9 = 10;\n
        if (cgc_write_all(1, &v8, 9) != 9)\n
        {\n
            v13 = -1;\n
            return v13;\n
        }\n
    }\n
}\n
", "4208957:sub_40393d": null, "4208960:cgc_login": "typedef struct struct_0 {\n
    char padding_0[4264];\n
    unsigned int field_10a8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_406c1c;\n
\n
int cgc_login(char *v6)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v5 = v7;\n
    v0 = &\"$l\";\n
    v2 = g_406c1c;\n
    if (cgc_strlen(v6) <= 16 && !strchr(v6, 124))\n
    {\n
        v1 = 1;\n
        v8 = v0;\n
        v3 = (&v2)[v0->field_10a8]();\n
        v9 = v8->field_10a8 + 1;\n
        v8->field_10a8 = v9;\n
        if (v9 == v1)\n
            v0->field_10a8 = 0;\n
        v4 = v3;\n
        return v4;\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4209143:sub_4039f7": null, "4209152:cgc_greet": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_406c20;\n
\n
int cgc_greet(char *v19)\n
{\n
    unsigned int v0;  // [bp-0x180]\n
    struct_0 *v1;  // [bp-0x17c]\n
    struct_0 *v2;  // [bp-0x178]\n
    unsigned int v3;  // [bp-0x174]\n
    struct struct_1 **v4;  // [bp-0x170]\n
    unsigned int v5;  // [bp-0x16c]\n
    unsigned int v6;  // [bp-0x168]\n
    unsigned int v7;  // [bp-0x164]\n
    unsigned int v8;  // [bp-0x160]\n
    unsigned int v9;  // [bp-0x15c]\n
    unsigned int *v10;  // [bp-0x158], Other Possible Types: unsigned int\n
    char v11;  // [bp-0x151]\n
    char v12;  // [bp-0x140]\n
    char v13;  // [bp-0x78]\n
    char v14;  // [bp-0x38]\n
    char *v15;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v16;  // [bp-0x14]\n
    unsigned int v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0x8]\n
    unsigned int v20;  // ebx\n
    char *v21;  // eax\n
    unsigned int *v22;  // eax\n
\n
    v18 = v20;\n
    v5 = \"$l\";\n
    v10 = 0;\n
    v7 = 0;\n
    v6 = g_406c20;\n
    v16 = cgc_strrchr(v19, 124);\n
    if (!v16)\n
    {\n
        v17 = -1;\n
        return v17;\n
    }\n
    v21 = v16;\n
    v16 = v21 + 1;\n
    *(v21) = 0;\n
    for (v8 = 0; v8 < 1; v8 += 1)\n
    {\n
        v4 = (&v6)[v8];\n
        v9 = v4(v19, cgc_strlen(v19));\n
        cgc_bin_to_hex(&v13, &v14, v9);\n
        if (!cgc_strncmp(v16, &v13, v9 << 1))\n
        {\n
            v7 = 1;\n
            break;\n
        }\n
    }\n
    if (!v7)\n
    {\n
        v17 = -1;\n
        return v17;\n
    }\n
    cgc_memset(&v11, 0, 17);\n
    for (v15 = cgc_strtok(v19, 124); v15; v15 = cgc_strtok(0, 124))\n
    {\n
        if (!cgc_strncmp(v15, v5 - 7349, 5))\n
        {\n
            strncpy(&v11, v15 + 5, 16);\n
        }\n
        else if (!cgc_strncmp(v15, v5 - 7359, 8) && cgc_strlen(v15 + 8) == 8)\n
        {\n
            v10 = cgc_hex_to_uint(v15 + 8);\n
        }\n
    }\n
    if (cgc_strlen(&v11) && v10)\n
    {\n
        cgc_memset(&v12, 0, 200);\n
        v22 = v10;\n
        *(v22) = *(v22) + 1;\n
        cgc_strcpy(&v12, v5 - 7343);\n
        cgc_strcat(&v12, &v11);\n
        cgc_strcat(&v12, v5 - 7336);\n
        v0 = *(v10);\n
        v1 = &v12;\n
        cgc_itoa(v0, &v1[cgc_strlen(&v12)]);\n
        cgc_strcat(&v12, v5 - 7318);\n
        v2 = &v12;\n
        v3 = cgc_write_all(1, v2, cgc_strlen(&v12));\n
        if (v3 != cgc_strlen(&v12))\n
        {\n
            v17 = -1;\n
            return v17;\n
        }\n
        v17 = 0;\n
        return v17;\n
    }\n
    v17 = -1;\n
    return v17;\n
}\n
", "4210272:cgc_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_quit()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = \"$l\";\n
    cgc__terminate(0, v0);\n
    md5_hmac_login(v2, v3);\n
    return;\n
}\n
", "4210320:md5_hmac_login": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int md5_hmac_login(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x20]\n
    char *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    char *v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
\n
    v8 = v10;\n
    v0 = \"$l\";\n
    v3 = cgc_make_token();\n
    if (!v3)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6 = cgc_strlen(v3);\n
    v4 = v6 + 34;\n
    v2 = cgc_realloc(v3, v4);\n
    if (!v2)\n
    {\n
        cgc_free(v3);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v5 = md5_hmac_sig(v2, v6);\n
    if (!v5)\n
    {\n
        cgc_free(v2);\n
        v7 = -1;\n
        return v7;\n
    }\n
    v6[v2] = 124;\n
    cgc_bin_to_hex(&v6[v2 + 1], &v1, v5);\n
    *((v2 + v4 - 1)) = 10;\n
    if (cgc_write_all(1, v2, v4) != v4)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    cgc_memset(&v1, 0, v5);\n
    cgc_memset(v2, 0, v4);\n
    cgc_free(v2);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4210733:sub_40402d": null, "4210736:cgc_make_token": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_make_token(char *v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = \"$l\";\n
    v5 = 1;\n
    v4 = cgc_calloc(4);\n
    if (!v4)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    v5 = cgc_strlen(v2 - 7359) + 9 + v5;\n
    v1 = cgc_strlen(v2 - 7349);\n
    v5 = v1 + cgc_strlen(v8) + v5;\n
    v3 = cgc_calloc(v5);\n
    if (!v3)\n
    {\n
        cgc_free(v4);\n
        v6 = 0;\n
        return v6;\n
    }\n
    cgc_strcpy(v3, v2 - 7359);\n
    v0 = v3;\n
    cgc_bin_to_hex(v0 + cgc_strlen(v3), &v4, 4);\n
    cgc_strcat(v3, v2 - 7350);\n
    cgc_strcat(v3, v8);\n
    v6 = v3;\n
    return v6;\n
}\n
", "4211067:sub_40417b": null, "4211072:md5_hmac_sig": "int md5_hmac_sig(unsigned int v1, unsigned int a0, unsigned int a1[4])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // esi\n
\n
    v0 = v2;\n
    cgc_md5_hmac(\"s00pEr5eCretsAUc3\", 17, v1, a0, a1);\n
    return 16;\n
}\n
", "4211156:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_fabs": null, "5242884:cgc_pow": null, "5242888:__libc_start_main": null, "5242892:memcpy": null, "5242896:cgc__terminate": null, "5242900:cgc_transmit": null, "5242904:cgc_allocate": null, "5242908:strchr": null, "5242912:strncpy": null, "5242916:cgc_sin": null, "5242920:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}