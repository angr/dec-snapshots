{"4206592:_init": "extern struct_0 *g_40cda0;\n
\n
int _init()\n
{\n
    if (g_40cda0)\n
    {\n
        g_40cda0();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206704:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206720:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206736:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206752:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206768:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206784:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206800:sub_4030d0": "int sub_4030d0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206806:sub_4030d6": null, "4206816:__cxx_global_var_init": "extern unsigned int workers;\n
\n
int __cxx_global_var_init()\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::__base_ctor__(&workers, *(&v0));\n
}\n
", "4206853:sub_403105": null, "4206864:_GLOBAL__sub_I_service.cc": "int _GLOBAL__sub_I_service.cc()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    return __cxx_global_var_init();\n
}\n
", "4206892:sub_40312c": null, "4206896:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206939:sub_40315b": null, "4206940:sub_40315c": "int sub_40315c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206944:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206948:sub_403164": null, "4206960:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 39987;\n
    v6 = v5 + 876;\n
    v7 = v5 + 876;\n
    if (v7 == v6)\n
        return v5 + 876;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4207011:sub_4031a3": "int sub_4031a3()\n
{\n
}\n
", "4207017:sub_4031a9": "int sub_4031a9()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207024:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 39923;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 876;\n
    v9 = (v6 + 876 - (v6 + 876) >> 31) + (876 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207095:sub_4031f7": "int sub_4031f7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207104:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40cd94;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40cd94)\n
    {\n
        v0 = __dso_handle;\n
        sub_4030d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207179:sub_40324b": "int sub_40324b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207184:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207193:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207197:sub_40325d": null, "4207200:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    v3 = a0 * v5;\n
    if (v5 * a0 >> 32)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v2 = cgc_malloc_alloc(v1 + 4044);\n
    if (!v2)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v4 = v2;\n
    return v4;\n
}\n
", "4207368:sub_403308": null, "4207376:cgc_isascii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isascii(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 1;\n
}\n
", "4207416:sub_403338": null, "4207424:cgc_isdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isdigit(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 2;\n
}\n
", "4207464:sub_403368": null, "4207472:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 16;\n
}\n
", "4207512:sub_403398": null, "4207520:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 14;\n
}\n
", "4207560:sub_4033c8": null, "4207568:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 12;\n
}\n
", "4207608:sub_4033f8": null, "4207616:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 4;\n
}\n
", "4207656:sub_403428": null, "4207664:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 8;\n
}\n
", "4207704:sub_403458": null, "4207712:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 64;\n
}\n
", "4207752:sub_403488": null, "4207760:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 32;\n
}\n
", "4207800:sub_4034b8": null, "4207808:cgc_iscntrl": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_iscntrl(unsigned int v0)\n
{\n
    return *((4247008 + v0)) & 128;\n
}\n
", "4207850:sub_4034ea": null, "4207856:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v4)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"t\";\n
    v4 = cgc_toupper();\n
    v2 = 1;\n
    if (cgc_isdigit(v4))\n
        return v2 & 1;\n
    v0 = 0;\n
    if (v4 >= 65)\n
        v0 = v4 <= 70;\n
    v2 = v0;\n
    return v2 & 1;\n
}\n
", "4207970:sub_403562": null, "4207984:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v1 = v1;\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v1 ^= 32;\n
    v0 = v1;\n
    return v0;\n
}\n
", "4208069:sub_4035c5": null, "4208080:cgc_digittoint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_digittoint(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"t\";\n
    v3 = cgc_toupper(v3);\n
    if (cgc_isdigit(v3))\n
    {\n
        v1 = v3 - 48;\n
        return v1;\n
    }\n
    if (v3 >= 65 && v3 <= 70)\n
    {\n
        v1 = v3 + -55;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4208209:sub_403651": null, "4208224:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v1 = v1;\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v1 ^= 32;\n
    v0 = v1;\n
    return v0;\n
}\n
", "4208309:sub_4036b5": null, "4208320:__cxa_pure_virtual": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxa_pure_virtual()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = \"t\";\n
    cgc__terminate(1, v0);\n
    cgc_exit(v2, v3);\n
    return;\n
}\n
", "4208352:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = \"t\";\n
    cgc__terminate(v2, v0);\n
    cgc_fflush(v2, v3);\n
    return;\n
}\n
", "4208384:cgc_fflush": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fflush(unsigned int v4[5])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    if (v4[2] == -1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    else if (v4[1] != 1)\n
    {\n
        v2 = 0;\n
        v0 = v4[3] - v4[2];\n
        ::0x403800::cgc_xlat(v4[4], &v4[1 + 1] + v4[2]);\n
        v0 = v4[3] - v4[2];\n
        if (::0x403870::cgc_transmit_all(v4[0], &v4[1 + 1] + v4[2]))\n
            v2 = -1;\n
        v4[3] = 0;\n
        v4[2] = 0;\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        v4[3] = 0;\n
        v4[2] = 0;\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4208636:sub_4037fc": null, "4208640:cgc_xlat": "int cgc_xlat(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = a0;\n
    v1 = v3;\n
    if (!v2)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v0;\n
        if (v3 >= a1)\n
            break;\n
        v1[v0] = v2[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4208739:sub_403863": null, "4208752:cgc_transmit_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \"t\";\n
    v4 = a0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v2;\n
        if (cgc_transmit(v6, v4 + v3, a1 - v3))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        v3 = *(&v2) + v3;\n
    }\n
}\n
", "4208902:sub_403906": null, "4208912:cgc_fbuffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fbuffered(unsigned int v1[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = \"t\";\n
    if (v1[2] != -1)\n
        cgc_fflush(v1);\n
    if (a0)\n
        v1[2] = 0;\n
    else\n
        v1[2] = -1;\n
    v1[3] = 0;\n
    return v1;\n
}\n
", "4209028:sub_403984": null, "4209040:cgc_fopen": "int cgc_fopen(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[6];  // [bp-0x10]\n
    unsigned int v2[6];  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = 1048;\n
    v1[0] = cgc_malloc();\n
    if (!v1)\n
    {\n
        v2[0] = 0;\n
        return v2;\n
    }\n
    v1[0] = v3;\n
    v1[1] = (a0 ? 1 : 2);\n
    v1[2] = 0;\n
    v1[3] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209190:sub_403a26": null, "4209200:cgc_fread": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fread(unsigned int v6, unsigned int a0, unsigned int a1[6])\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v7[6];  // eax\n
\n
    v1 = \"t\";\n
    v4 = v6;\n
    v3 = 0;\n
    if (a1[2] == a1[3])\n
        cgc__refill();\n
    if (a1[2] != -1)\n
    {\n
        v2 = a1[3] - a1[2];\n
        if (v2 > a0)\n
            v2 = a0;\n
        cgc_memcpy(v4, 1 + a1 + a1[2]);\n
        v3 = v2 + v3;\n
        v7 = a1;\n
        v7[2] = v2 + v7[2];\n
        if (a1[2] == a1[3])\n
        {\n
            a1[3] = 0;\n
            a1[2] = 0;\n
        }\n
    }\n
    while (true)\n
    {\n
        if (v3 >= a0)\n
        {\n
            v5 = v3;\n
            return v5;\n
        }\n
        v0 = &v2;\n
        if (cgc_receive(a1[0], v4 + v3, a0 - v3))\n
            break;\n
        if (!v2)\n
            break;\n
        ::0x403c90::cgc_xlat(a1[5], v4 + v3);\n
        v3 = v2 + v3;\n
    }\n
    v5 = -1;\n
    return v5;\n
}\n
", "4209579:sub_403bab": null, "4209584:cgc__refill": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__refill(unsigned int v4[6])\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
\n
    v1 = \"t\";\n
    if (v4[2] == v4[3])\n
    {\n
        v4[3] = 0;\n
        v4[2] = 0;\n
    }\n
    v0 = &v2;\n
    if (!cgc_receive(v4[0], (1 + v4 + v4[3]), 0x400 - v4[3]) && *(&v2))\n
    {\n
        v4[3] = *(&v2);\n
        ::0x403c90::cgc_xlat(v4[5], v4 + 1);\n
        v3 = *(&v2);\n
        return v3;\n
    }\n
    v3 = -1;\n
    return v3;\n
}\n
", "4209795:sub_403c83": null, "4209808:cgc_xlat": "int cgc_xlat(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = a0;\n
    v1 = v3;\n
    if (!v2)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v0;\n
        if (v3 >= a1)\n
            break;\n
        v1[v0] = v2[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4209907:sub_403cf3": null, "4209920:cgc_freaduntil": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_freaduntil(unsigned int v6, unsigned int a0, char a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    for (v4 = 0; v4 < a0 - 1; v4 += 1)\n
    {\n
        v0 = a2;\n
        v3 = cgc__getc();\n
        if (v3 == -1)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (v3 == a1)\n
            break;\n
        v4[v6] = v3;\n
    }\n
    if (v4 == a0 - 1)\n
    {\n
        do\n
        {\n
            v0 = a2;\n
            v2 = cgc__getc();\n
            if (v2 == -1)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        } while (v2 != a1);\n
    }\n
    v4[v6] = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4210186:sub_403e0a": null, "4210192:cgc__getc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char padding_10[4];\n
    char *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__getc(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6[6];  // edx\n
    unsigned int v7;  // ecx\n
\n
    v1 = \"t\";\n
    if (v5->field_8 == -1)\n
    {\n
        v0 = &v2;\n
        if (!cgc_receive(v5->field_0, &v3, 1) && *(&v2))\n
        {\n
            ::0x403c90::cgc_xlat(v5->field_14, &v3, 1);\n
            v4 = v3;\n
            return v4;\n
        }\n
        v4 = -1;\n
        return v4;\n
    }\n
    else\n
    {\n
        if (v5->field_8 == v5->field_c && cgc__refill(v5) < 0)\n
        {\n
            v4 = -1;\n
            return v4;\n
        }\n
        v6 = v5;\n
        v7 = v6[2];\n
        v6[2] = v7 + 1;\n
        v4 = *(24 + &v5->field_0 + v7);\n
        return v4;\n
    }\n
}\n
", "4210437:sub_403f05": null, "4210448:cgc_free": "extern unsigned int g_heap;\n
\n
int cgc_free(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return malloc_free(&g_heap);\n
}\n
", "4210497:sub_403f41": null, "4210512:cgc_fwrite": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fwrite(unsigned int v6, unsigned int a0, unsigned int a1[5])\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v7[5];  // eax\n
    unsigned int v8[5];  // eax\n
\n
    v1 = \"t\";\n
    v4 = v6;\n
    v3 = 0;\n
    if (a1[2] != -1)\n
    {\n
        if (a0 >= 0x400)\n
        {\n
            cgc_fflush(a1);\n
        }\n
        else\n
        {\n
            if (a1[3] + a0 >= 0x400)\n
            {\n
                v2 = 0x400 - a1[3];\n
                cgc_memcpy(&a1[1 + 1] + a1[3], v4);\n
                v7 = a1;\n
                v7[3] = v2 + v7[3];\n
                v3 = v2 + v3;\n
                cgc_fflush(a1);\n
            }\n
            if (v3 < a0)\n
            {\n
                v2 = a0 - v3;\n
                cgc_memcpy(&a1[1 + 1] + a1[3], v4 + v3);\n
                v8 = a1;\n
                v8[3] = v2 + v8[3];\n
                v3 = v2 + v3;\n
            }\n
            v5 = v3;\n
            return v5;\n
        }\n
    }\n
    if (a1[4])\n
    {\n
        v0 = a0;\n
        if (cgc_transmit_xlat(a1[0], a1[4], v6))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
    else if (::0x404110::cgc_transmit_all(a1[0], v6))\n
    {\n
        v5 = -1;\n
        return v5;\n
    }\n
    v5 = a0;\n
    return v5;\n
}\n
", "4210957:sub_40410d": null, "4210960:cgc_transmit_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_all(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \"t\";\n
    v4 = a0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a1)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(v6, v4 + v3, a1 - v3))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4211110:sub_4041a6": null, "4211120:cgc_transmit_xlat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_transmit_xlat(unsigned int v6, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x41c]\n
    unsigned int v1;  // [bp-0x418]\n
    void* v2;  // [bp-0x414], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x410]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v0 = \"t\";\n
    v4 = a1;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a2)\n
        {\n
            v1 = a2 - v2;\n
            if (v1 > 0x400)\n
                v1 = 0x400;\n
            cgc_memcpy(&v3, v4 + v2);\n
            ::0x4042e0::cgc_xlat(a0, &v3);\n
            if (::0x404110::cgc_transmit_all(v6, &v3, v1))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v2 = v1 + v2;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4211412:sub_4042d4": null, "4211424:cgc_xlat": "int cgc_xlat(char *v2, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = a0;\n
    v1 = v3;\n
    if (!v2)\n
        return a0;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v0;\n
        if (v3 >= a1)\n
            break;\n
        v1[v0] = v2[v1[v0]];\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211523:sub_404343": null, "4211536:cgc_fxlat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fxlat(unsigned int v8[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    char *v4;  // [bp-0x1c]\n
    char *v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    char *v9;  // eax\n
    char *v10;  // eax, Other Possible Types: unsigned int, unsigned int [6]\n
    char *v11;  // eax\n
\n
    v1 = \"t\";\n
    if (!a0)\n
    {\n
        cgc_free(v8[4]);\n
        v8[4] = 0;\n
        v10 = v8;\n
        v10[5] = 0;\n
        return v8;\n
    }\n
    v0 = 0x100;\n
    v9 = cgc_realloc(v8[4]);\n
    v8[4] = v9;\n
    v5 = v9;\n
    v0 = 0x100;\n
    v11 = cgc_realloc(v8[5]);\n
    v8[5] = v11;\n
    v4 = v11;\n
    v10 = cgc_hash_seed(a0);\n
    v7 = v10;\n
    for (v6 = 0; v6 < 0x100; v6 = v10)\n
    {\n
        v5[v6] = v6;\n
        v10 = v6 + 1;\n
    }\n
    for (v6 = 255; v6 >= 1; v6 = v10)\n
    {\n
        v3 = (0 CONCAT v7) /m v6 >> 32;\n
        v7 *= 3;\n
        v7 = v7 * 0x2000 ^ v7 >> 19 ^ v7 >> 21;\n
        v2 = v5[v6];\n
        v5[v6] = v5[v3];\n
        v5[v3] = v2;\n
        v10 = v6 - 1;\n
    }\n
    for (v6 = 0; v6 < 0x100; v6 = v10)\n
    {\n
        v4[v5[v6]] = v6;\n
        v10 = v6 + 1;\n
    }\n
    return v10;\n
}\n
", "4211931:sub_4044db": null, "4211936:cgc_hash_seed": "int cgc_hash_seed(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 826981510;\n
    for (v1 = 0; v1[v2]; v1 += 1)\n
    {\n
        v0 *= 37;\n
        v0 = v1[v2] ^ v0;\n
        v0 = v0 * 0x2000 ^ v0 >> 19;\n
    }\n
    return v0;\n
}\n
", "4212040:sub_404548": null, "4212048:cgc_malloc": "extern unsigned int g_heap;\n
\n
int cgc_malloc(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = v1;\n
    return cgc_malloc_alloc(&g_heap);\n
}\n
", "4212097:sub_404581": null, "4212112:cgc_malloc_alloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_alloc(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    if (a0 > 2147483647)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    a0 = a0 - -3 & -0x4;\n
    if (a0 < 4)\n
    {\n
        v0 = 4;\n
        v2 = cgc_tiny_alloc(v4);\n
    }\n
    else if (a0 < 16)\n
    {\n
        v0 = a0;\n
        v2 = cgc_tiny_alloc(v4);\n
    }\n
    else if (a0 < 0x20000)\n
    {\n
        v0 = a0;\n
        v2 = cgc_small_alloc(v4);\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v2 = cgc_large_alloc(v4);\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4212350:sub_40467e": null, "4212352:cgc_tiny_alloc": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[4628];\n
    unsigned int field_1218;\n
    unsigned int field_121c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_tiny_alloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned short v3[2];  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v4;  // [bp-0x14]\n
    struct_0 *v5;  // [bp-0x10]\n
    unsigned int *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned short v10[2];  // eax\n
    struct_0 *v11;  // eax\n
    unsigned short v12[2];  // eax\n
\n
    v7 = v9;\n
    v1 = \"t\";\n
    v5 = cgc_size_to_bin();\n
    v4 = *((v8 + v5 * 4));\n
    if (v4)\n
    {\n
        *((v8 + v5 * 4)) = *(v4);\n
        v6 = v4;\n
        return v6;\n
    }\n
    *(&v3[0]) = *((v8 + v5 * 4 + 4620));\n
    if (!v3)\n
    {\n
        if (!*((v8 + 4632)))\n
        {\n
            v0 = 1;\n
            *((v8 + 4632)) = cgc_run_alloc(v8);\n
            if (!*((v8 + 4632)))\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
            *((v8 + 4636)) = 0;\n
        }\n
        v10 = *((v8 + 4632)) + *((v8 + 4636));\n
        *((v8 + v5 * 4 + 4620)) = v10;\n
        v3 = v10;\n
        *(v3) = a0;\n
        *((v3 + 2)) = a0;\n
        v11 = v8;\n
        v11->field_121c = v11->field_121c + 0x1000;\n
        if (*((v8 + 4636)) == 0x100000)\n
            *((v8 + 4632)) = 0;\n
    }\n
    v2 = v3 + *((v3 + 2));\n
    v12 = v3;\n
    v12[1] = v12[1] + a0;\n
    if (*((v3 + 2)) + *(v3) > 0x1000)\n
        *((v8 + v5 * 4 + 4620)) = 0;\n
    v6 = v2;\n
    return v6;\n
}\n
", "4212763:sub_40481b": null, "4212768:cgc_small_alloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_small_alloc(unsigned int v7, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    struct struct_0 **v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"t\";\n
    v3 = a0 - -23 & -0x10;\n
    for (v4 = cgc_size_to_bin(); v4 < 131; v4 = v4 + 1)\n
    {\n
        for (v2 = *((v7 + v4 * 4)); v2; v2 = v2->field_c)\n
        {\n
            if (v2->field_4 >= v3)\n
                break;\n
        }\n
        if (v2)\n
            break;\n
    }\n
    if (v4 == 131)\n
    {\n
        if (!cgc_small_alloc_run())\n
        {\n
            v4 = 130;\n
            v2 = *((v7 + v4 * 4));\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    v0 = v2;\n
    cgc_small_unlink_free(v7, v4);\n
    if (*((v2 + 4)) - v3 > 32)\n
    {\n
        v0 = v3;\n
        cgc_small_split(v7, v2);\n
    }\n
    v5 = v2 + 8;\n
    return v5;\n
}\n
", "4213095:sub_404967": null, "4213104:cgc_large_alloc": "int cgc_large_alloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[2];  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = a0 - -4103 & -0x1000;\n
    v0 = &v2;\n
    if (cgc_allocate(v3, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v5;\n
    v1[1] = v3;\n
    v4 = v1 + 1;\n
    return v4;\n
}\n
", "4213241:sub_4049f9": null, "4213248:malloc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int malloc_free(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = \"t\";\n
    v4 = *((v3 + (a0 >> 20) + 524));\n
    v2 = v4;\n
    if (!a0)\n
    {\n
        return *((v3 + (a0 >> 20) + 524));\n
    }\n
    else if (v2)\n
    {\n
        if (v2 == 2)\n
        {\n
            v0 = a0;\n
            v4 = cgc_small_free(v3);\n
        }\n
        else if (v2 == 1)\n
        {\n
            v0 = a0;\n
            v4 = cgc_tiny_free(v3);\n
        }\n
        return v4;\n
    }\n
    else\n
    {\n
        v0 = a0;\n
        v4 = cgc_large_free(v3);\n
        return v4;\n
    }\n
}\n
", "4213450:sub_404aca": null, "4213456:cgc_large_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_large_free(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[2];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
\n
    v1 = \"t\";\n
    v3 = a0;\n
    if ((v3 & 4095) != 8)\n
        cgc_heap_error(v1 - 11584);\n
    v2[0] = a0 - 8;\n
    if (v2[0] != v4)\n
    {\n
        v0 = v4;\n
        cgc_heap_error(v1 - 11535, v3, v2[0]);\n
    }\n
    if (v2[1] >= 0x20000 && v2[1] <= 2147487743 && !(v2[1] & 4095))\n
        return cgc_deallocate(v2);\n
    cgc_heap_error(v1 - 11481, v3);\n
    return cgc_deallocate(v2);\n
}\n
", "4213712:cgc_small_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_small_free(unsigned int v10, unsigned int a0)\n
{\n
    unsigned int v0[2];  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6[2];  // [bp-0x18]\n
    unsigned int v7[2];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v8[2];  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v11[2];  // eax\n
    unsigned int v12[2];  // eax\n
\n
    v4 = \"t\";\n
    v9 = a0;\n
    v8[0] = v9 - 8;\n
    v5 = v9 & -0x100000;\n
    if ((v9 & 7))\n
        cgc_heap_error(v4 - 11437);\n
    if ((v8[1] & 1))\n
        cgc_heap_error(v4 - 11388);\n
    if (v8[1] <= 0x20000 && !(v8[1] < 16))\n
        goto LABEL_404c8c;\n
    cgc_heap_error(v4 - 11350);\n
LABEL_404c8c:\n
    if (!v8[0])\n
        v7[0] = 0;\n
    else\n
        v7 = v8 - v8[0];\n
    v6[0] = v8 + v8[1];\n
    if (v7 && (*((v7 + 4)) & -2) != v8[0])\n
    {\n
        v0 = v9;\n
        cgc_heap_error(v4 - 11309, v7);\n
    }\n
    if (v6[0] != v8[1])\n
    {\n
        v0 = v9;\n
        cgc_heap_error(v4 - 11257, v6);\n
    }\n
    if (v7 && (*((v7 + 4)) & 1))\n
    {\n
        v3 = v10;\n
        v0[0] = v7;\n
        cgc_small_unlink_free(v3, cgc_size_to_bin());\n
        v11 = v7;\n
        v11[1] = v8[1] + v11[1];\n
        v8 = v7;\n
        v6[0] = *((v8 + 4));\n
    }\n
    if ((v6[1] & 1))\n
    {\n
        v2 = v10;\n
        v0[0] = v6;\n
        cgc_small_unlink_free(v2, cgc_size_to_bin());\n
        v12 = v8;\n
        v12[1] = v6[1] + v12[1];\n
        v6[0] = v8 + v8[1];\n
        v6[0] = *((v8 + 4));\n
    }\n
    v1 = v10;\n
    v0[0] = v8;\n
    return cgc_small_insert_free(v1, cgc_size_to_bin());\n
}\n
", "4214334:sub_404e3e": null, "4214336:cgc_tiny_free": "int cgc_tiny_free(unsigned int v4, unsigned short *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned short *v1;  // [bp-0x14]\n
    unsigned short *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
\n
    v2 = a0 & -0x1000;\n
    v1 = a0;\n
    v0 = *(v2);\n
    v3 = cgc_size_to_bin();\n
    *(&v1) = *((v4 + v3 * 4));\n
    *((v4 + v3 * 4)) = v1;\n
    return v4;\n
}\n
", "4214427:sub_404e9b": null, "4214432:cgc_malloc_size": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_malloc_size(unsigned int v4, unsigned short *a0)\n
{\n
    unsigned short *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = *((v4 + (a0 >> 20) + 524));\n
    if (v2 != 2 && v2)\n
    {\n
        if (v2 == 1)\n
        {\n
            v0 = a0 & -0x1000;\n
            v3 = *(v0);\n
            return v3;\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1 = &a0[4];\n
    v3 = v1->field_4 - 8;\n
    return v3;\n
}\n
", "4214570:sub_404f2a": null, "4214576:cgc_malloc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc_realloc(unsigned int v6, unsigned short *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = \"t\";\n
    if (a1 > 2147483647)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!a1)\n
    {\n
        malloc_free(v6, a0);\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (!a0)\n
    {\n
        v5 = cgc_malloc_alloc(v6, a1);\n
        return v5;\n
    }\n
    else if (cgc_malloc_size(v6, a0) < a1)\n
    {\n
        v4 = cgc_malloc_alloc(v6, a1);\n
        if (!v4)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v1 = v4;\n
        v2 = a0;\n
        v0 = cgc_malloc_size(v6, a0);\n
        cgc_memcpy(v1, v2);\n
        malloc_free(v6, a0);\n
        v5 = v4;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = a0;\n
        return v5;\n
    }\n
}\n
", "4214895:sub_40506f": null, "4214896:cgc_size_to_bin": "int cgc_size_to_bin(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < 16)\n
    {\n
        v0 = (v1 >> 2) - 1;\n
        return v0;\n
    }\n
    else if (v1 <= 0x200)\n
    {\n
        v0 = (v1 >> 4) - -2;\n
        return v0;\n
    }\n
    else if (v1 <= 0x1200)\n
    {\n
        v0 = (v1 - 0x200 >> 7) - -34;\n
        return v0;\n
    }\n
    else if (v1 <= 0x20000)\n
    {\n
        v0 = (v1 - 0x1200 >> 11) - -66;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 130;\n
        return v0;\n
    }\n
}\n
", "4215059:sub_405113": null, "4215072:cgc_run_alloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_run_alloc(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"t\";\n
    v0 = &v2;\n
    if (cgc_allocate(0x200000, 0))\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = *(&v2);\n
    v3 = v4 - -1048575 & -0x100000;\n
    if (v4 < v3)\n
        cgc_deallocate(v4);\n
    if (v3 + 0x100000 < v4 + 0x200000)\n
        cgc_deallocate(v3 + 0x100000);\n
    *((v7 + (v3 >> 20) + 524)) = a0;\n
    v5 = v3;\n
    return v5;\n
}\n
", "4215325:sub_40521d": null, "4215328:cgc_small_alloc_run": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_small_alloc_run(unsigned int v7)\n
{\n
    unsigned int v0[2];  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"t\";\n
    v2 = cgc_run_alloc(v7, 2);\n
    if (!v2)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    v4[0] = v2 - -19 & -0x10;\n
    v4[0] = 0;\n
    v4[1] = 1048560 + -0x1 * v4 + v2;\n
    v3[0] = v4 + v4[1];\n
    v3[0] = v4[1];\n
    v3[1] = 0;\n
    v0[0] = v4;\n
    cgc_small_insert_free(v7, 130);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4215526:sub_4052e6": null, "4215536:cgc_small_unlink_free": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_small_unlink_free(unsigned int *v2, unsigned int a0, struct_2 *a1)\n
{\n
    struct_2 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_2 *v3;  // eax\n
\n
    v1 = \"t\";\n
    if (!(a1->field_4 & 1))\n
    {\n
        v0 = a1;\n
        cgc_heap_error(v1 - 11630);\n
    }\n
    v3 = a1;\n
    v3->field_4 = v3->field_4 & -2;\n
    if (a1->field_8)\n
        a1->field_8->field_c = a1->field_c;\n
    if (a1->field_c)\n
        a1->field_c->field_8 = a1->field_8;\n
    if (v2[a0] == a1)\n
        v2[a0] = a1->field_c;\n
    a1->field_8 = 0;\n
    a1->field_c = 0;\n
    return a1;\n
}\n
", "4215736:sub_4053b8": null, "4215744:cgc_small_split": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_small_split(unsigned int v7, struct_0 *a0, unsigned int a1)\n
{\n
    unsigned int v0[2];  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v1 = \"t\";\n
    v5 = a0->field_4 - a1;\n
    v4[0] = &a0->padding_0[a1];\n
    v3 = &a0->padding_0[a0->field_4];\n
    a0->field_4 = a1;\n
    v4[0] = a0->field_4;\n
    v4[1] = v5;\n
    *(v3) = v5;\n
    v2 = v7;\n
    v0[0] = v4;\n
    v9 = v6;\n
    return cgc_small_insert_free(v2, cgc_size_to_bin(v5));\n
}\n
", "4215895:sub_405457": null, "4215904:cgc_small_insert_free": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_small_insert_free(unsigned int *v2, unsigned int a0, struct_0 *a1)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    struct_0 *v3;  // eax\n
    struct_0 *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    if ((a1->field_4 & 1) == 1)\n
    {\n
        v0 = a1;\n
        cgc_heap_error(v1 - 11680);\n
    }\n
    v3 = a1;\n
    v3->field_4 = v3->field_4 | 1;\n
    a1->field_8 = 0;\n
    a1->field_c = v2[a0];\n
    v2[a0] = a1;\n
    v4 = a1;\n
    if (v4->field_c)\n
    {\n
        v4 = a1->field_c;\n
        *((v4 + 8)) = a1;\n
    }\n
    return v4;\n
}\n
", "4216057:sub_4054f9": null, "4216064:cgc_heap_error": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stderr;\n
\n
int cgc_heap_error()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    char v5;  // [bp-0x4]\n
    unsigned int v6;  // [bp+0x4]\n
    char v7;  // [bp+0x8]\n
    unsigned int v8;  // ebp\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
\n
    v8 = &v5;\n
    v4 = v9;\n
    v2 = \"t\";\n
    v3 = &v7;\n
    v0 = v6;\n
    v1 = v3;\n
    cgc_vfprintf(cgc_stderr, v0, v1, \"t\", &v7, v9);\n
    v10 = v2;\n
    cgc__terminate(1, v0, v1, \"t\", &v7, v4);\n
    cgc_memchr();\n
    return;\n
}\n
", "4216160:cgc_memchr": "int cgc_memchr(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v3;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v1[v0] == a0)\n
        {\n
            v2 = &v1[v0];\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4216267:sub_4055cb": null, "4216272:cgc_memcmp": "int cgc_memcmp(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v4;\n
    v0 = a0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v1[v2] == *((v0 + v2)))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = v1[v2] - *((v0 + v2));\n
            return v3;\n
        }\n
    }\n
}\n
", "4216410:sub_40565a": null, "4216416:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v3;\n
}\n
", "4216502:sub_4056b6": null, "4216512:cgc_memmove": "int cgc_memmove(char *v3, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    if (v3 > a0)\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            *((v2 + -1 + a1 - v0)) = *(-1 + v1 + a1 - v0);\n
        }\n
        return v3;\n
    }\n
    else\n
    {\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v2[v0] = *((v1 + v0));\n
        }\n
        return v3;\n
    }\n
}\n
", "4216683:sub_40576b": null, "4216688:cgc_memset": "int cgc_memset(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    for (v1 = 0; v1 < a1; v1 += 1)\n
    {\n
        v0[v1] = a0;\n
    }\n
    return v2;\n
}\n
", "4216764:sub_4057bc": null, "4216768:cgc_printf": "int cgc_printf(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0x8]\n
\n
    v1 = &v4;\n
    v0 = v1;\n
    v2 = cgc_vprintf(v3);\n
    return v2;\n
}\n
", "4216826:sub_4057fa": null, "4216832:cgc_vprintf": "extern unsigned int cgc_stdout;\n
\n
int cgc_vprintf(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_vfprintf(cgc_stdout, v1);\n
}\n
", "4216893:sub_40583d": null, "4216896:cgc_fprintf": "int cgc_fprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v1 = &v5;\n
    v0 = v1;\n
    v2 = cgc_vfprintf(v4, a0);\n
    return v2;\n
}\n
", "4216965:sub_405885": null, "4216976:cgc_vfprintf": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vfprintf(struct_0 *v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
\n
    v1 = \"t\";\n
    v2 = 1;\n
    if (v4->field_8 == -1)\n
    {\n
        v2 = 0;\n
        v4->field_8 = 0;\n
    }\n
    v0 = 2147483647;\n
    v3 = cgc__vsfprintf(a0, a1, v4, 0);\n
    if (!v2)\n
    {\n
        cgc_fflush(v4);\n
        v4->field_8 = -1;\n
        return v3;\n
    }\n
    return v3;\n
}\n
", "4217138:sub_405932": null, "4217152:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v1 = &v5;\n
    v0 = v1;\n
    v2 = cgc_vsprintf(v4, a0);\n
    return v2;\n
}\n
", "4217221:sub_405985": null, "4217232:cgc_vsprintf": "int cgc_vsprintf(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    v0 = 2147483647;\n
    return cgc__vsfprintf(a0, a1, 0, v1);\n
}\n
", "4217311:sub_4059df": null, "4217312:cgc__vsfprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__vsfprintf(char *v30, unsigned int *a0, unsigned int a1[5], unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0xc8]\n
    unsigned int v1;  // [bp-0xc4]\n
    void* v2;  // [bp-0xc0], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xb8]\n
    unsigned int v4;  // [bp-0xb4]\n
    unsigned int v5;  // [bp-0xb0]\n
    unsigned int v6;  // [bp-0xac]\n
    char v7;  // [bp-0xa5]\n
    unsigned int v8;  // [bp-0xa4]\n
    unsigned int v9;  // [bp-0xa0]\n
    char v10;  // [bp-0x99]\n
    unsigned int v11;  // [bp-0x98]\n
    unsigned int v12;  // [bp-0x94]\n
    char v13;  // [bp-0x8d]\n
    unsigned int v14;  // [bp-0x8c]\n
    unsigned int v15;  // [bp-0x88]\n
    unsigned int v16;  // [bp-0x84]\n
    unsigned int v17;  // [bp-0x80]\n
    char v18;  // [bp-0x79]\n
    unsigned int v19;  // [bp-0x78]\n
    unsigned int v20;  // [bp-0x74]\n
    char *v21;  // [bp-0x70]\n
    char *v22;  // [bp-0x6c]\n
    char v23;  // [bp-0x65]\n
    unsigned int v24;  // [bp-0x64]\n
    char v25;  // [bp-0x60]\n
    char *v26;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v27;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v28;  // [bp-0x18]\n
    char v29;  // [bp-0x11]\n
    char *v31;  // eax\n
    char *v32;  // eax\n
    char *v33;  // eax\n
    char *v34;  // eax\n
    char *v35;  // eax\n
    char *v36;  // eax\n
    unsigned int *v37;  // eax\n
    char *v38;  // eax\n
    unsigned int *v39;  // eax\n
    unsigned int *v40;  // eax\n
    unsigned int *v41;  // eax\n
    unsigned int v42;  // ecx\n
    char *v43;  // eax\n
    char *v44;  // eax\n
\n
    v6 = \"t\";\n
    v26 = 0;\n
    while (true)\n
    {\n
        v31 = v30;\n
        v30 = v31 + 1;\n
        v29 = *(v31);\n
        if (!v29)\n
            break;\n
        v23 = 32;\n
        while (v29 != 37)\n
        {\n
            if (v26 >= a3)\n
            {\n
                v32 = v26;\n
                v26 = v32 + 1;\n
                if (v32 == -1)\n
                    cgc__terminate();\n
            }\n
            else\n
            {\n
                v18 = v29;\n
                if (a1)\n
                    cgc_fwrite(&v18, 1, a1);\n
                if (a2)\n
                    v26[a2] = v18;\n
                v26 += 1;\n
            }\n
            v33 = v30;\n
            v30 = v33 + 1;\n
            v29 = *(v33);\n
            if (!v29)\n
                goto LABEL_406376;\n
        }\n
        v22 = v30;\n
        v28 = 4;\n
        v27 = 0;\n
        v34 = v30;\n
        v30 = v34 + 1;\n
        v5 = *(v34);\n
        v29 = v5;\n
        if (!v5)\n
            break;\n
        if (v5 == 32)\n
        {\n
            v23 = 32;\n
        }\n
        else if (v5 == 48)\n
        {\n
            v23 = 48;\n
        }\n
        else\n
        {\n
            v30 += 1;\n
        }\n
        if (*(v30) >= 48 && *(v30) <= 57)\n
            v27 = cgc_strtoul(v30, &v30);\n
        v35 = v30;\n
        v30 = v35 + 1;\n
        v4 = *(v35);\n
        v29 = v4;\n
        if (!v4)\n
            break;\n
        if (v4 == 104)\n
        {\n
            if (*(v30) != 104)\n
            {\n
                v28 = 2;\n
            }\n
            else\n
            {\n
                v30 += 1;\n
                v28 = 1;\n
            }\n
        }\n
        else\n
        {\n
            if (v4 != 108)\n
            {\n
                v30 += 1;\n
            }\n
            else if (*(v30) != 108)\n
            {\n
                v28 = 4;\n
            }\n
            else\n
            {\n
                v30 += 1;\n
                v28 = 8;\n
            }\n
        }\n
        v36 = v30;\n
        v30 = v36 + 1;\n
        v3 = *(v36);\n
        v29 = v3;\n
        if (!v3)\n
        {\n
            v17 = v30 - v22;\n
            if (v26 < a3)\n
            {\n
                v16 = a3 - v26;\n
                if (v16 > v17)\n
                    v16 = v17;\n
                if (a1)\n
                    cgc_fwrite(v22, v16, a1);\n
                if (a2)\n
                    cgc_memcpy(a2 + v26, v22, v16);\n
                if (v26 + v17 < v26)\n
                    cgc__terminate();\n
                v26 = v17 + v26;\n
            }\n
            else\n
            {\n
                if (v26 + v17 < v26)\n
                    cgc__terminate();\n
                v26 = v17 + v26;\n
            }\n
            break;\n
        }\n
        if (v3 == 88)\n
        {\n
LABEL_405eff:\n
            if (v29 == 100)\n
            {\n
                if (!(v28 <= 4))\n
                    break;\n
                v40 = a0;\n
                a0 = v40 + 1;\n
                v19 = *(v40);\n
                v0 = v19;\n
                v1 = 10;\n
                v2 = 0;\n
                cgc__convert_signed(&v25, v0, 10);\n
            }\n
            else\n
            {\n
                if (!(v28 <= 4))\n
                    break;\n
                v41 = a0;\n
                a0 = v41 + 1;\n
                v20 = *(v41);\n
                v42 = (v29 == 117 ? 16 : 10);\n
                v0 = v20;\n
                v1 = v42;\n
                v2 = v29 == 88;\n
                cgc__convert_unsigned();\n
            }\n
            v24 = cgc_strlen(&v25, v0, v1);\n
            if (v24 < v27)\n
            {\n
                v27 -= v24;\n
                do\n
                {\n
                    if (v26 >= a3)\n
                    {\n
                        v43 = v26;\n
                        v26 = v43 + 1;\n
                        if (v43 == -1)\n
                            cgc__terminate();\n
                    }\n
                    else\n
                    {\n
                        v13 = v23;\n
                        if (a1)\n
                            cgc_fwrite(&v13, 1, a1);\n
                        if (a2)\n
                            v26[a2] = v13;\n
                        v26 += 1;\n
                    }\n
                    v27 -= 1;\n
                } while (v27 > 0);\n
            }\n
            v12 = v24;\n
            if (v26 < a3)\n
            {\n
                v11 = a3 - v26;\n
                if (v11 > v12)\n
                    v11 = v12;\n
                if (a1)\n
                    cgc_fwrite(&v25, v11, a1);\n
                if (a2)\n
                    cgc_memcpy(a2 + v26, &v25, v11);\n
                if (v26 + v12 < v26)\n
                    cgc__terminate();\n
                v26 = v12 + v26;\n
            }\n
            else\n
            {\n
                if (v26 + v12 < v26)\n
                    cgc__terminate();\n
                v26 = v12 + v26;\n
            }\n
            goto LABEL_406367;\n
        }\n
        else\n
        {\n
            if (v3 == 99)\n
            {\n
                v37 = a0;\n
                a0 = v37 + 1;\n
                v29 = *(v37);\n
                if (v26 >= a3)\n
                {\n
                    v38 = v26;\n
                    v26 = v38 + 1;\n
                    if (v38 == -1)\n
                        cgc__terminate();\n
                }\n
                else\n
                {\n
                    v10 = v29;\n
                    if (a1)\n
                        cgc_fwrite(&v10, 1, a1);\n
                    if (a2)\n
                        v26[a2] = v10;\n
                    v26 += 1;\n
                }\n
                goto LABEL_406367;\n
            }\n
            if (v3 == 100)\n
                goto LABEL_405eff;\n
            if (v3 == 115)\n
            {\n
                v39 = a0;\n
                a0 = v39 + 1;\n
                v21 = *(v39);\n
                v9 = cgc_strlen();\n
                if (v26 < a3)\n
                {\n
                    v8 = a3 - v26;\n
                    if (v8 > v9)\n
                        v8 = v9;\n
                    if (a1)\n
                        cgc_fwrite(v21, v8, a1);\n
                    if (a2)\n
                        cgc_memcpy(a2 + v26, v21, v8);\n
                    if (v26 + v9 < v26)\n
                        cgc__terminate();\n
                    v26 = v9 + v26;\n
                }\n
                else\n
                {\n
                    if (v26 + v9 < v26)\n
                        cgc__terminate();\n
                    v26 = v9 + v26;\n
                }\n
LABEL_406367:\n
            }\n
            else if (v3 != 117 && v3 != 120)\n
            {\n
                v15 = v30 - v22;\n
                if (v26 >= a3)\n
                {\n
                    if (v26 + v15 < v26)\n
                        cgc__terminate();\n
                    v26 = v15 + v26;\n
                }\n
                else\n
                {\n
                    v14 = a3 - v26;\n
                    if (v14 > v15)\n
                        v14 = v15;\n
                    if (a1)\n
                        cgc_fwrite(v22, v14, a1);\n
                    if (a2)\n
                        cgc_memcpy(a2 + v26, v22, v14);\n
                    if (v26 + v15 < v26)\n
                        cgc__terminate();\n
                    v26 = v15 + v26;\n
                }\n
                goto LABEL_406367;\n
            }\n
        }\n
    }\n
LABEL_406376:\n
    a1 = 0;\n
    if (v26 >= a3)\n
    {\n
        v44 = v26;\n
        v26 = v44 + 1;\n
        if (v44 != -1)\n
            return v26 - 1;\n
        cgc__terminate();\n
    }\n
    else\n
    {\n
        v7 = 0;\n
        if (a1)\n
            cgc_fwrite(&v7, 1, a1);\n
        if (a2)\n
            v26[a2] = v7;\n
        v26 += 1;\n
        return v26 - 1;\n
    }\n
}\n
", "4219931:sub_40641b": null, "4219936:cgc__convert_signed": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__convert_signed(char *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v3;  // eax\n
\n
    v1 = \"t\";\n
    if (a0 < 0)\n
    {\n
        v3 = v2;\n
        v2 = v3 + 1;\n
        *(v3) = 45;\n
        a0 = -(a0);\n
    }\n
    v0 = a2;\n
    return cgc__convert_unsigned(v2, a0, a1);\n
}\n
", "4220045:sub_40648d": null, "4220048:cgc__convert_unsigned": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__convert_unsigned(char *v4, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
\n
    v1 = \"t\";\n
    v2 = &v4[20];\n
    if (a2)\n
        v3 = v1 - 11205;\n
    else\n
        v3 = v1 - 11188;\n
    v5 = v2;\n
    v2 = v5 + 1;\n
    v5[1].field_-1 = 0;\n
    if (!a0)\n
    {\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        v6[1].field_-1 = *(v3);\n
        return cgc_memmove(v4, v2, 20 + -0x1 * &v4[-1 * v2]);\n
    }\n
    while (true)\n
    {\n
        v0 = v3;\n
        v7 = v2;\n
        v2 = v7 + 1;\n
        v7[1].field_-1 = v0[(0 CONCAT a0) /m a1 >> 32];\n
        a0 = (0 CONCAT a0) /m a1;\n
    }\n
}\n
", "4220297:sub_406589": null, "4220304:cgc_realloc": "extern unsigned int g_heap;\n
\n
int cgc_realloc(unsigned short *v0, unsigned int a0)\n
{\n
    return cgc_malloc_realloc(&g_heap, v0, a0);\n
}\n
", "4220363:sub_4065cb": null, "4220368:cgc_strcasecmp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcasecmp(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v2 = \"t\";\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v3))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = cgc_tolower(*(v3));\n
                v1 = v0 == cgc_tolower(*(a0));\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v3 += 1;\n
        a0 += 1;\n
    }\n
    return *(v3) - *(a0);\n
}\n
", "4220545:sub_406681": null, "4220560:cgc_strcasestr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcasestr(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = \"t\";\n
    v2 = cgc_strlen();\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3[v6])\n
        {\n
            v0 = v2;\n
            if (!cgc_strncasecmp(&v3[v6], a0))\n
            {\n
                v4 = v6 + v3;\n
                return v4;\n
            }\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4220717:sub_40672d": null, "4220720:cgc_strchr": "int cgc_strchr(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = 0; v0[v2]; v0 += 1)\n
    {\n
        if (v0[v2] == a0)\n
        {\n
            v1 = v2 + v0;\n
            return v1;\n
        }\n
    }\n
    if (a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v2 + v0;\n
    return v1;\n
}\n
", "4220849:sub_4067b1": null, "4220864:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
                v1 = *(v2) == *(a0);\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4220992:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); v0 += 1)\n
    {\n
        *(v0) = *(a0);\n
        a0 += 1;\n
    }\n
    *(v0) = 0;\n
    return v1;\n
}\n
", "4221070:sub_40688e": null, "4221072:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"t\";\n
    v2 = cgc_strlen();\n
    v1 = cgc_malloc(v2 + 1);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_memcpy(v1, v5, v2);\n
    v2[v1] = 0;\n
    v3 = v1;\n
    return v3;\n
}\n
", "4221206:sub_406916": null, "4221216:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4221272:sub_406958": null, "4221280:cgc_strncasecmp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncasecmp(char *v5, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = \"t\";\n
    v3 = &v5[a1];\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v5))\n
        {\n
            v1 = 0;\n
            if (*(a0))\n
            {\n
                v0 = cgc_tolower(*(v5));\n
                v1 = 0;\n
                if (v0 == cgc_tolower(*(a0)))\n
                    v1 = v5 < v3;\n
            }\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v5 += 1;\n
        a0 += 1;\n
    }\n
    if (v5 == v3)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = *(v5) - *(a0);\n
    return v4;\n
}\n
", "4221516:sub_406a4c": null, "4221520:cgc_strncpy": "int cgc_strncpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = v2;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(a0))\n
            v0 = v1 - v2 < a1;\n
        if (!(v0 & 1))\n
            break;\n
        *(v1) = *(a0);\n
        a0 += 1;\n
        v1 += 1;\n
    }\n
    for (; v1 - v2 < a1; v1 += 1)\n
    {\n
        *(v1) = 0;\n
    }\n
    return v2;\n
}\n
", "4221677:sub_406aed": null, "4221680:cgc_strndup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strndup(char *v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"t\";\n
    v2 = cgc_strlen(v5);\n
    if (v2 > a0)\n
        v2 = a0;\n
    v1 = cgc_malloc(v2 + 1);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_memcpy(v1, v5, v2);\n
    *((v1 + v2)) = 0;\n
    v3 = v1;\n
    return v3;\n
}\n
", "4221835:sub_406b8b": null, "4221840:cgc_strsep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strsep(struct struct_0 **v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"t\";\n
    v1 = &*(v4)->field_0;\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    for (v2 = 0; v1[v2]; v2 += 1)\n
    {\n
        if (cgc_strchr(a0, v1[v2]))\n
            break;\n
    }\n
    if (!v1[v2])\n
        *(v4) = 0;\n
    else\n
        *(v4) = &v1[1 + v2];\n
    v1[v2] = 0;\n
    v3 = v1;\n
    return v3;\n
}\n
", "4222059:sub_406c6b": null, "4222064:cgc_strstr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strstr(unsigned int v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"t\";\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (!*((v3 + v1)))\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcmp(v3 + v1, a0))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v3 + v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4222200:sub_406cf8": null, "4222208:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v11[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    char v2[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x14]\n
    char v9[2];  // [bp-0x10]\n
    unsigned int v10;  // [bp-0xc]\n
\n
    v3 = \"t\";\n
    *(&v9) = v11;\n
    v8 = 1;\n
    v7 = 1;\n
    v6 = 0;\n
    for (v5 = 0; cgc_isspace(*(v11)); v11 += 1)\n
    {\n
        if (!*(v11))\n
            goto LABEL_406ebf;\n
    }\n
    if (*(v11) == 43)\n
    {\n
        v8 = 1;\n
        v11 += 1;\n
    }\n
    else if (*(v11) == 45)\n
    {\n
        v8 = -1;\n
        v11 += 1;\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v11) == 48 && cgc_tolower(*((v11 + 1))) == 120)\n
            v11 += 2;\n
        goto LABEL_406ece;\n
    }\n
    if (a1)\n
    {\n
LABEL_406ece:\n
        for (; *(v11); v11 += 1)\n
        {\n
            if (cgc_isdigit(*(v11)))\n
            {\n
                v4 = *(v11) - 48;\n
            }\n
            else if (cgc_islower(*(v11)))\n
            {\n
                v4 = *(v11) + -87;\n
            }\n
            else\n
            {\n
                if (!cgc_isupper(*(v11)))\n
                    break;\n
                v4 = *(v11) + -55;\n
            }\n
            if (v4 >= a1)\n
                break;\n
            v7 = 0;\n
            v5 = a1 * v5 + v4;\n
            if (v5 > 2147483647)\n
                v6 = 1;\n
        }\n
    }\n
    if (*(v11) == 48 && *((v11 + 1)) >= 48 && *((v11 + 1)) <= 55)\n
    {\n
        *(&v11) = v11 + 1;\n
        a1 = 8;\n
        goto LABEL_406ebf;\n
    }\n
    if (*(v11) == 48 && cgc_tolower(*((v11 + 1))) == 120)\n
    {\n
        v11 += 2;\n
        a1 = 16;\n
        goto LABEL_406ebf;\n
    }\n
    if (!cgc_isdigit(*(v11)))\n
        goto LABEL_406ebf;\n
    a1 = 10;\n
LABEL_406ebf:\n
    if (a0)\n
    {\n
        if (v7)\n
            *(&v2) = v9;\n
        else\n
            v2 = v11;\n
        *(a0) = v2;\n
    }\n
    if (v8 >= 0)\n
    {\n
        if (v6)\n
            v0 = 2147483647;\n
        else\n
            v0 = v5;\n
        v10 = v0;\n
        return v10;\n
    }\n
    else\n
    {\n
        if (v6)\n
            v1 = 0x80000000;\n
        else\n
            v1 = -(v5);\n
        v10 = v1;\n
        return v10;\n
    }\n
}\n
", "4223059:sub_407053": null, "4223072:cgc_strtoul": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtoul(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    int tmp_41;  // tmp #41\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2[2];  // [bp-0x3c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    void* v6;  // [bp-0x2c], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x18]\n
    char v11[2];  // [bp-0x14]\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // eax\n
\n
    v4 = \"t\";\n
    *(&v11) = v12;\n
    v10 = 1;\n
    v9 = 1;\n
    v8 = 0;\n
    v7 = 0;\n
    for (v6 = 0; cgc_isspace(v12[0]); v12 = &v12[1])\n
    {\n
        if (!v12[0])\n
            goto LABEL_407228;\n
    }\n
    if (*(v12) == 43)\n
    {\n
        v10 = 1;\n
        v12 = &v12[1];\n
    }\n
    else if (*(v12) == 45)\n
    {\n
        v10 = -1;\n
        v12 = &v12[1];\n
    }\n
    if (a1 == 16)\n
    {\n
        if (*(v12) == 48 && cgc_tolower(*((v12 + 1))) == 120)\n
            v12 += 2;\n
        goto LABEL_407237;\n
    }\n
    if (a1)\n
    {\n
LABEL_407237:\n
        for (; *(v12); v12 = &v12[1])\n
        {\n
            if (cgc_isdigit(*(v12)))\n
            {\n
                v5 = *(v12) - 48;\n
            }\n
            else if (cgc_islower(*(v12)))\n
            {\n
                v5 = *(v12) + -87;\n
            }\n
            else\n
            {\n
                if (!cgc_isupper(*(v12)))\n
                    break;\n
                v5 = *(v12) + -55;\n
            }\n
            if (v5 >= a1)\n
                break;\n
            v9 = 0;\n
            v3 = v7;\n
            v13 = v6 * a1;\n
            tmp_41 = v13;\n
            v15 = (v6 * a1 >> 32) + (a1 >> 31) * v6 + a1 * v3 + (v5 >> 31) + (tmp_41 + v5 < tmp_41);\n
            v6 = v13 + v5;\n
            v7 = v15;\n
            if (v7)\n
                v8 = 1;\n
        }\n
    }\n
    if (*(v12) == 48 && *((v12 + 1)) >= 48 && *((v12 + 1)) <= 55)\n
    {\n
        *(&v12) = &v12[1];\n
        a1 = 8;\n
        goto LABEL_407228;\n
    }\n
    if (*(v12) == 48 && cgc_tolower(*((v12 + 1))) == 120)\n
    {\n
        v12 += 2;\n
        a1 = 16;\n
        goto LABEL_407228;\n
    }\n
    if (!cgc_isdigit(*(v12)))\n
        goto LABEL_407228;\n
    a1 = 10;\n
LABEL_407228:\n
    if (a0)\n
    {\n
        if (v9)\n
            *(&v2) = v11;\n
        else\n
            v2 = v12;\n
        *(a0) = v2;\n
    }\n
    if (v10 < 0)\n
    {\n
        if ((!(!(v7 CONCAT v6) << 1 >> 32) || !(!v7 >> 31)) && (!(!(v6 ^ 0x80000000)) || !(!v7)))\n
            v8 = 1;\n
        tmp_6 = v6;\n
        v6 = -(v6);\n
        v7 = -(v7) - (0 < tmp_6);\n
    }\n
    if (v8)\n
    {\n
        v0 = -1;\n
        v1 = 0;\n
        return v0;\n
    }\n
    v0 = v6;\n
    v1 = v7;\n
    return v0;\n
}\n
", "4224023:sub_407417": null, "4224032:_ZN5DequeC1Ev": "int Deque::__ctor__(unsigned int v1[4])\n
{\n
    unsigned int v0[4];  // [bp-0xc]\n
    int tmp_19;  // tmp #19\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // eax\n
\n
    v0[0] = v1;\n
    v0[1] = 0;\n
    v0[2] = 0;\n
    v0[3] = 8;\n
    v2 = v0[3];\n
    tmp_19 = v2;\n
    v3 = v2 * 4;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t19, 0x4<32>, 0x0<32>))\n
        v3 = -1;\n
    v0[0] = operator new[](v3);\n
    return v0;\n
}\n
", "4224123:sub_40747b": null, "4224128:_ZN5DequeD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::__dtor__(unsigned int v5[4])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6[4];  // ecx\n
    unsigned int v7;  // eax\n
\n
    v1 = \"t\";\n
    v2[0] = v5;\n
    for (v4 = 0; v4 < v2[2]; v4 += 1)\n
    {\n
        v6 = v2;\n
        v3 = (0 CONCAT v6[1] + v4) /m v6[3] >> 32;\n
        Ticket::DeleteTicket();\n
    }\n
    v7 = v2[0];\n
    v0 = v7;\n
    if (v7)\n
        v7 = operator delete(v0);\n
    return v7;\n
}\n
", "4224271:sub_40750f": null, "4224272:_ZN5Deque4FindEj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::Find(unsigned int v5[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    unsigned int *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    v2[0] = v5;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < v2[3])\n
        {\n
            if (*((v2[0] + (v3 << 2))))\n
            {\n
                v0 = *((v2[0] + v3 * 4));\n
                if (Ticket::id() == a0)\n
                {\n
                    v4 = *((v2[0] + v3 * 4));\n
                    return v4;\n
                }\n
            }\n
            v3 = v3 + 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4224431:sub_4075af": null, "4224432:_ZN5Deque6RemoveEP6Ticket": "int Deque::Remove(unsigned int v0, unsigned int a0)\n
{\n
    return 0;\n
}\n
", "4224450:sub_4075c2": null, "4224464:_ZN5Deque6AppendEP6Ticket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::Append(unsigned int v4[4], unsigned int a0)\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[4];  // [bp-0x14]\n
    unsigned int *v3;  // [bp-0x10]\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // ecx\n
    unsigned int v7[4];  // ecx\n
\n
    v1 = \"t\";\n
    v5 = v4;\n
    v2[0] = v5;\n
    if (!a0)\n
        return v4;\n
    v6 = v2;\n
    if (v6[2] == v6[3])\n
    {\n
        v0[0] = v2;\n
        Deque::Expand();\n
    }\n
    v7 = v2;\n
    v5 = v2;\n
    v3 = (0 CONCAT v7[1] + v7[2]) /m v7[3] >> 32;\n
    *((*(v5) + v3 * 4)) = a0;\n
    *((v5 + 8)) = *((v5 + 8)) + 1;\n
    return v2;\n
}\n
", "4224590:sub_40764e": null, "4224592:_ZN5Deque6ExpandEv": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::Expand(unsigned int v6[4])\n
{\n
    int tmp_30;  // tmp #30\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[4];  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10[4];  // ecx\n
    struct_0 *v11;  // edi\n
    unsigned int v12[4];  // eax\n
    unsigned int v13[4];  // eax\n
\n
    v5 = v7;\n
    v1 = \"t\";\n
    v2[0] = v6;\n
    v4 = v2[3] * 2;\n
    v8 = v4;\n
    tmp_30 = v8;\n
    v9 = v8 * 4;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t30, 0x4<32>, 0x0<32>))\n
        v9 = -1;\n
    v10 = v2;\n
    v3 = operator new[](v9);\n
    if (v10[1] + v10[2] <= v10[3])\n
    {\n
        v12 = v2;\n
        cgc_memcpy(v3, v12[0] + v12[1] * 4, v12[2] * 4);\n
    }\n
    else\n
    {\n
        v11 = v2;\n
        cgc_memcpy(v3, &v11->field_0[4 * v11->field_4], (v11->field_c - v11->field_4) * 4);\n
        cgc_memcpy(&v3[4 * v11->field_c + -4 * v11->field_4], v11->field_0, (v11->field_8 - (v11->field_c - v11->field_4)) * 4);\n
    }\n
    v0 = v2[0];\n
    if (v0)\n
        operator delete(v0);\n
    v13 = v2;\n
    v13[0] = v3;\n
    v13[1] = 0;\n
    v13[3] = v4;\n
    return v2;\n
}\n
", "4224883:sub_407773": null, "4224896:_ZN5Deque10AppendLeftEP6Ticket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::AppendLeft(unsigned int v2[4], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[4];  // [bp-0x10]\n
    unsigned int v3[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v4[4];  // ecx\n
    unsigned int v5[4];  // ecx\n
\n
    v0 = \"t\";\n
    v3 = v2;\n
    v1[0] = v3;\n
    if (!a0)\n
        return v2;\n
    v4 = v1;\n
    if (v4[2] == v4[3])\n
        Deque::Expand(v1);\n
    v5 = v1;\n
    v3 = v1;\n
    *((v3 + 4)) = (0 CONCAT v5[1] + v5[3] - 1) /m v5[3] >> 32;\n
    *((*(v3) + *((v3 + 4)) * 4)) = a0;\n
    *((v3 + 8)) = *((v3 + 8)) + 1;\n
    return v1;\n
}\n
", "4225027:sub_407803": null, "4225040:_ZN5Deque3PopEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::Pop(unsigned int v6[4])\n
{\n
    unsigned int v0[4];  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[4];  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int *v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7[4];  // ecx\n
    unsigned int v8[4];  // eax\n
\n
    v1 = \"t\";\n
    v2[0] = v6;\n
    if (!v2[2])\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v7 = v2;\n
    v8 = v2;\n
    v4 = (0 CONCAT v7[1] + v7[2] - 1) /m v7[3] >> 32;\n
    v3 = *((v8[0] + v4 * 4));\n
    v8[2] = v8[2] - 1;\n
    v0[0] = v8;\n
    Deque::TryShrink();\n
    v5 = v3;\n
    return v5;\n
}\n
", "4225164:sub_40788c": null, "4225168:_ZN5Deque9TryShrinkEv": "typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::TryShrink(unsigned int v5[4])\n
{\n
    int tmp_14;  // tmp #14\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[4];  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v6[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v9[4];  // ecx\n
    struct_0 *v10;  // edi\n
    unsigned int v11[4];  // eax\n
\n
    v1 = \"t\";\n
    v2[0] = v5;\n
    v6 = v2[2];\n
    if (v6 >= v2[3] >> 1)\n
        return v6;\n
    v6 = v2;\n
    if (v6[3] > 8)\n
    {\n
        v4 = v2[3] >> 1;\n
        v7 = v4;\n
        tmp_14 = v7;\n
        v8 = v7 * 4;\n
        if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t14, 0x4<32>, 0x0<32>))\n
            v8 = -1;\n
        v9 = v2;\n
        v3 = operator new[](v8);\n
        if (v9[1] + v9[2] <= v9[3])\n
        {\n
            v11 = v2;\n
            cgc_memcpy(v3, v11[0] + v11[1] * 4, v11[2] * 4);\n
        }\n
        else\n
        {\n
            v10 = v2;\n
            cgc_memcpy(v3, &v10->field_0[4 * v10->field_4], (v10->field_c - v10->field_4) * 4);\n
            cgc_memcpy(&v3[4 * v10->field_c + -4 * v10->field_4], v10->field_0, (v10->field_8 - (v10->field_c - v10->field_4)) * 4);\n
        }\n
        v0 = v2[0];\n
        if (v0)\n
            operator delete(v0);\n
        v6 = v2;\n
        *(v6) = v3;\n
        *((v6 + 4)) = 0;\n
        *((v6 + 12)) = v4;\n
        return v2;\n
    }\n
}\n
", "4225500:sub_4079dc": null, "4225504:_ZN5Deque7PopLeftEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Deque::PopLeft(unsigned int v4[4])\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1[4];  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5[4];  // ecx\n
    unsigned int v6[4];  // eax\n
\n
    v0 = \"t\";\n
    v1[0] = v4;\n
    if (!v1[2])\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5 = v1;\n
    v2 = *((v5[0] + v5[1] * 4));\n
    v6 = v1;\n
    v6[1] = (0 CONCAT v5[1] + 1) /m v5[3] >> 32;\n
    v6[2] = v6[2] - 1;\n
    Deque::TryShrink(v6);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4225623:sub_407a57": null, "4225632:_ZN5Deque5CountEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Deque::Count(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4225646:sub_407a6e": null, "4225648:_ZN10DispatcherC1EP4ListPj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::__ctor__(unsigned int v6[22], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0[22];  // [bp-0x20]\n
    unsigned int v1[22];  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[22];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5[22];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7[22];  // eax\n
\n
    v2 = \"t\";\n
    v3[0] = v6;\n
    v4 = &v3[20];\n
    v5[0] = v3;\n
    do\n
    {\n
        v0[0] = v5;\n
        Deque::__ctor__(v0);\n
        v1[0] = &v0[4];\n
        v5 = v1;\n
    } while (v1 != v4);\n
    v7 = v3;\n
    v7[20] = a0;\n
    v7[21] = a1;\n
    return v3;\n
}\n
", "4225757:sub_407add": null, "4225760:_ZN10Dispatcher9AddTicketEP6Ticket": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::AddTicket(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = \"t\";\n
    v3 = v2;\n
    v1 = v3;\n
    if (!a0)\n
    {\n
        return v2;\n
    }\n
    else if (Ticket::status() != 1)\n
    {\n
        v3 = Deque::AppendLeft(v1 + (Ticket::priority() - 1) * 16, a0);\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = Deque::Append(v1 + (Ticket::priority() - 1) * 16, a0);\n
        return v3;\n
    }\n
}\n
", "4225929:sub_407b89": null, "4225936:_ZN10Dispatcher12CancelTicketEj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::CancelTicket(unsigned int v9, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10]\n
    void* v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // eax\n
\n
    v0 = \"t\";\n
    v1 = v9;\n
    for (v8 = 0; v8 < 5; v8 += 1)\n
    {\n
        v7 = v1 + v8 * 16;\n
        v6 = Deque::Count(v7);\n
        for (v5 = 0; v5 < v6; v5 += 1)\n
        {\n
            v4 = Deque::PopLeft(v7);\n
            if (Ticket::id() != a0)\n
                Deque::Append(v7, v4);\n
            else\n
                Ticket::DeleteTicket();\n
        }\n
    }\n
    v10 = Dispatcher::FindSupportByTicketId(v1);\n
    v3 = v10;\n
    if (!v3)\n
        return v10;\n
    v10 = Support::RemoveTicket();\n
    v2 = v10;\n
    if (!v2)\n
        return v10;\n
    v10 = Ticket::DeleteTicket();\n
}\n
", "4226236:sub_407cbc": null, "4226240:_ZN10Dispatcher21FindSupportByTicketIdEj": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::FindSupportByTicketId(struct_0 *v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = \"t\";\n
    v3 = v8;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 >= List::Length())\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        v0 = v6;\n
        v5 = List::Get(v3->field_50);\n
        v4 = Support::CurrentTicket(v5);\n
        if (v4 && Ticket::id() == a0)\n
        {\n
            v7 = v5;\n
            return v7;\n
        }\n
        v6 += 1;\n
    }\n
}\n
", "4226440:sub_407d88": null, "4226448:_ZN10Dispatcher10ViewTicketEj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::ViewTicket(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    void* v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
\n
    v1 = \"t\";\n
    v2 = v8;\n
    for (v7 = 0; v7 < 5; v7 += 1)\n
    {\n
        v6 = v2 + v7 * 16;\n
        v5 = 0;\n
        while (true)\n
        {\n
            v0 = v5;\n
            if (v0 >= Deque::Count(v6))\n
                break;\n
            v4 = Deque::PopLeft(v6);\n
            if (Ticket::id() == a0)\n
                Ticket::Display();\n
            Deque::Append(v6, v4);\n
            v5 += 1;\n
        }\n
    }\n
    v9 = Dispatcher::FindSupportByTicketId(v2, a0);\n
    v3 = v9;\n
    if (v3)\n
    {\n
        Support::CurrentTicket();\n
        v9 = Ticket::Display();\n
        return v9;\n
    }\n
    return v9;\n
}\n
", "4226726:sub_407ea6": null, "4226736:_ZN10Dispatcher11ViewTicketsE6STATUS": "typedef struct struct_0 {\n
    char padding_0[80];\n
    unsigned int field_50;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::ViewTickets(struct_0 *v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    struct_0 *v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x18]\n
    void* v8;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v9[4];  // [bp-0x10]\n
    void* v10;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = \"t\";\n
    v3 = v11;\n
    for (v10 = 0; v10 < 5; v10 += 1)\n
    {\n
        v9[0] = &v3->padding_0[16 * v10];\n
        v8 = 0;\n
        while (true)\n
        {\n
            v1 = v8;\n
            if (v1 >= Deque::Count(v9))\n
                break;\n
            v7 = Deque::PopLeft(v9);\n
            if (Ticket::status() == a0)\n
                Ticket::Display();\n
            Deque::Append(v9, v7);\n
            v8 += 1;\n
        }\n
    }\n
    v6 = 0;\n
    while (true)\n
    {\n
        v0 = v6;\n
        if (v0 >= List::Length())\n
            break;\n
        v5 = List::Get(v3->field_50);\n
        v4 = Support::CurrentTicket(v5);\n
        if (v4 && Ticket::status() == a0)\n
            Ticket::Display();\n
        v6 += 1;\n
    }\n
    return v0;\n
}\n
", "4227108:sub_408024": null, "4227120:_ZN10Dispatcher14RecordFinishedEP7Support": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::RecordFinished(unsigned int v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x214]\n
    unsigned int v1;  // [bp-0x210]\n
    char v2;  // [bp-0x209]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"t\";\n
    v0 = &v2;\n
    Support::CurrentTicket();\n
    v6 = Ticket::description();\n
    cgc_memcpy(v0, v6, 0x200);\n
    Support::RemoveTicket(a0, v6);\n
    Ticket::DeleteTicket();\n
    cgc_printf(v1 - 11171);\n
    Support::id();\n
    cgc_printf(v1 - 11154);\n
    v7 = v3;\n
    return cgc_printf(v1 - 11150);\n
}\n
", "4227354:sub_40811a": null, "4227360:_ZN10Dispatcher9GetTicketE8PRIORITY": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Dispatcher::GetTicket(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"t\";\n
    v1 = v5;\n
    v3 = a0;\n
    while (true)\n
    {\n
        if (v3 >= 1)\n
        {\n
            v2 = v1 + (v3 - 1) * 16;\n
            if (Deque::Count(v2))\n
            {\n
                v4 = Deque::PopLeft(v2);\n
                return v4;\n
            }\n
            v3 -= 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4227507:sub_4081b3": null, "4227520:_ZN10Dispatcher14GetRandomTicksEj": "typedef struct struct_1 {\n
    char padding_0[3508];\n
    unsigned int field_db4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_g_rand_idx;\n
\n
int Dispatcher::GetRandomTicks(struct_0 *v2, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_1 *v3;  // eax\n
\n
    v0 = &\"t\";\n
    v3 = v0;\n
    v1 = (0 CONCAT *((v2->field_54 + cgc_g_rand_idx * 4))) /m a0 >> 32;\n
    v3->field_db4 = v3->field_db4 + 1 & 1023;\n
    return v1;\n
}\n
", "4227602:sub_408212": null, "4227616:_ZN4ListC2Ev": "int List::__base_ctor__(unsigned int v0[130])\n
{\n
    unsigned int v1[130];  // eax\n
\n
    v1 = v0;\n
    v1[129] = 128;\n
    v1[128] = 0;\n
    return v0;\n
}\n
", "4227647:sub_40823f": null, "4227648:_ZN4List6AppendEP7Support": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[508];\n
    struct struct_0 *field_200;\n
    unsigned int field_204;\n
} struct_0;\n
\n
int List::Append(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (v0->field_200 == v0->field_204)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_200;\n
    v3->field_200 = v4 + 1;\n
    (&v3->field_0)[v4] = a0;\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4227738:sub_40829a": null, "4227744:_ZN4List3GetEj": "int List::Get(unsigned int v2[129], unsigned int a0)\n
{\n
    unsigned int v0[129];  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0[0] = v2;\n
    if (a0 >= v0[128])\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0[a0];\n
    return v1;\n
}\n
", "4227809:sub_4082e1": null, "4227824:_ZN4List6RemoveEj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::Remove(unsigned int v4[129], unsigned int a0[129])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[129];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    unsigned int v6[129];  // eax\n
    unsigned int v7[129];  // eax\n
\n
    v0 = \"t\";\n
    v1[0] = v4;\n
    if (a0 >= v1[128])\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v5 = v1;\n
    v2 = *((v5 + a0 * 4));\n
    if (a0 < *((v5 + 0x200)) - 1)\n
    {\n
        v6 = v1;\n
        cgc_memmove(v6 + 0x4 * a0, 4 + v6 + 0x4 * &a0[0], (-1 + v6[128] - a0) * 4);\n
    }\n
    v7 = v1;\n
    v7[1 + v7[128]] = 0;\n
    v7[128] = v7[128] - 1;\n
    v3 = v2;\n
    return v3;\n
}\n
", "4228028:sub_4083bc": null, "4228032:_ZN4List6LengthEv": "typedef struct struct_0 {\n
    char padding_0[512];\n
    unsigned int field_200;\n
} struct_0;\n
\n
int List::Length(struct_0 *v0)\n
{\n
    return v0->field_200;\n
}\n
", "4228049:sub_4083d1": null, "4228064:_ZN9SchedulerC1EP4ListP10Dispatcher": "int Scheduler::__ctor__(unsigned int v0[2], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[1] = a1;\n
    v1[0] = a0;\n
    return v0;\n
}\n
", "4228092:sub_4083fc": null, "4228096:_ZN9Scheduler3RunEv": "typedef struct struct_0 {\n
    unsigned int field_0[129];\n
    void* field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Scheduler::Run(unsigned int v8[2])\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int *v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = \"t\";\n
    v3 = &v8[0];\n
    v7 = 0;\n
    while (true)\n
    {\n
        v1 = v7;\n
        if (v1 >= List::Length(v3->field_0))\n
            break;\n
        v6 = List::Get(v3->field_0, v7);\n
        if (!Support::CurrentTicket(v6))\n
        {\n
            v0 = v3->field_4;\n
            v5 = Dispatcher::GetTicket(v0, Support::max_priority());\n
            if (v5)\n
            {\n
                if (*(v5) == v6)\n
                {\n
                    Dispatcher::AddTicket(v3->field_4, v5);\n
                }\n
                else\n
                {\n
                    Support::AssignTicket(v6);\n
                    Ticket::UpdateStatus(v5);\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v4 = Support::CurrentTicket();\n
            Ticket::WorkOn();\n
            if ((Ticket::CheckDone() & 1))\n
            {\n
                Ticket::UpdateStatus(v4);\n
                Dispatcher::RecordFinished(v3->field_4, v6);\n
            }\n
            else if (Dispatcher::GetRandomTicks(v3->field_4, 10) < 2)\n
            {\n
                if (!(Ticket::priority() <= 3))\n
                    goto LABEL_408653;\n
                Ticket::UpdateStatus(v4);\n
                Support::RemoveTicket(v6);\n
            }\n
            else if (Dispatcher::GetRandomTicks(v3->field_4, 10) < 3)\n
            {\n
                Support::RemoveTicket();\n
                Dispatcher::AddTicket(v3->field_4, v4);\n
                Ticket::UpdateStatus(v4);\n
            }\n
        }\n
LABEL_408653:\n
        v7 += 1;\n
    }\n
    return v1;\n
}\n
", "4228716:sub_40866c": null, "4228720:_Z20handle_command_errorP4FILES0_PPcm": "int handle_command_error(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    cgc_fprintf(a0, \"Invalid command\\n
\");\n
    return 0;\n
}\n
", "4228780:sub_4086ac": null, "4228784:_Z18handle_add_commandP4FILES0_PPcm": "typedef struct struct_1 {\n
    char padding_0[4032];\n
    void* field_fc0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char field_c[2];\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_add_command(unsigned int v5, unsigned int a0, struct_0 *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x20]\n
    struct_1 *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
\n
    v2 = &\"t\";\n
    v4 = 1;\n
    if (a1->field_c)\n
        v4 = cgc_strtol(a1->field_c, NULL, 10);\n
    if (v4 >= 1 && v4 <= 5)\n
        goto LABEL_408729;\n
    v4 = 1;\n
LABEL_408729:\n
    v1 = Time::GetTime();\n
    v0 = v4;\n
    v3 = Ticket::GetTicket(a1->field_4, a1->field_8, v1, Dispatcher::GetRandomTicks(v2->field_fc0, 100));\n
    if (v3)\n
    {\n
        Dispatcher::AddTicket(v2->field_fc0, v3);\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4229035:sub_4087ab": null, "4229040:_Z21handle_cancel_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[4032];\n
    unsigned int field_fc0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4[2];\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_cancel_command(unsigned int v3, unsigned int a0, struct_1 *a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &\"t\";\n
    v1 = cgc_strtol(a1->field_4, NULL, 10);\n
    Dispatcher::CancelTicket(v0->field_fc0, v1);\n
    v5 = v2;\n
    return 0;\n
}\n
", "4229141:sub_408815": null, "4229152:_Z19handle_list_commandP4FILES0_PPcm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_list_command(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= List::Length(v1 + 3512))\n
            break;\n
        Support::Display(List::Get(v1 + 3512, v2));\n
        v2 += 1;\n
    }\n
    return 0;\n
}\n
", "4229286:sub_4088a6": null, "4229296:_Z24handle_list_free_commandP4FILES0_PPcm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_list_free_command(unsigned int v4, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= List::Length(v1 + 3512))\n
            break;\n
        v2 = List::Get(v1 + 3512, v3);\n
        if (!Support::CurrentTicket(v2))\n
            Support::Display();\n
        v3 += 1;\n
    }\n
    return 0;\n
}\n
", "4229464:sub_408958": null, "4229472:_Z19handle_hire_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4[2];\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_hire_command(unsigned int v6, unsigned int a0, struct_0 *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = \"t\";\n
    v3 = cgc_strtol(a1->field_4, NULL, 10);\n
    if (v3 >= 1 && v3 <= 5)\n
    {\n
        v0 = operator new(16);\n
        Support::__ctor__(v0, 0);\n
        v2 = v0;\n
        List::Append(v1 + 3512, v2);\n
        v4 = 0;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4229667:sub_408a23": null, "4229680:_Z19handle_fire_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[4032];\n
    unsigned int field_fc0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4[2];\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_fire_command(unsigned int v8, unsigned int a0, struct_1 *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &\"t\";\n
    v5 = cgc_strtol(a1->field_4, NULL, 10);\n
    if (v5 >= 1 && v5 <= 5)\n
    {\n
        v4 = 0;\n
        while (true)\n
        {\n
            v1 = v4;\n
            if (v1 >= List::Length(&v2->padding_0[3512]))\n
                break;\n
            v3 = List::Get(&v2->padding_0[3512], v4);\n
            if (Support::max_priority(v3) != v5)\n
            {\n
                v4 += 1;\n
            }\n
            else\n
            {\n
                if (Support::CurrentTicket())\n
                {\n
                    v0 = v2->field_fc0;\n
                    Dispatcher::AddTicket(v0, Support::CurrentTicket());\n
                }\n
                List::Remove(&v2->padding_0[3512], v4);\n
                break;\n
            }\n
        }\n
        v6 = 0;\n
        return v6;\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4230002:sub_408b72": null, "4230016:_Z19handle_view_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[4032];\n
    void* field_fc0;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    char field_4[2];\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_view_command(unsigned int v3, unsigned int a0, struct_2 *a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &\"t\";\n
    v2 = 0;\n
    if (a2 == 2)\n
    {\n
        v2 = cgc_strtol(a1->field_4, NULL, 10);\n
        if (v2 > 4)\n
            v2 = 0;\n
    }\n
    if (v2)\n
    {\n
        Dispatcher::ViewTickets(v0->field_fc0, v2);\n
        return 0;\n
    }\n
    for (v1 = 1; v1 < 4; v1 += 1)\n
    {\n
        Dispatcher::ViewTickets(v0->field_fc0, v1);\n
    }\n
    return 0;\n
}\n
", "4230234:sub_408c5a": null, "4230240:_Z21handle_status_commandP4FILES0_PPcm": "typedef struct struct_0 {\n
    char padding_0[4032];\n
    unsigned int field_fc0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4[2];\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int handle_status_command(unsigned int v3, unsigned int a0, struct_1 *a1, unsigned int a2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &\"t\";\n
    v1 = cgc_strtol(a1->field_4, NULL, 10);\n
    Dispatcher::ViewTicket(v0->field_fc0, v1);\n
    v5 = v2;\n
    return 0;\n
}\n
", "4230341:sub_408cc5": null, "4230352:_Z11handle_quitP4FILES0_PPcm": "int handle_quit(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    cgc_fprintf(a0, \"TERMINATING TERRIBLE TICKET TRACKER\\n
\");\n
    return -1;\n
}\n
", "4230415:sub_408d0f": null, "4230416:_Z12read_commandP4FILEPPPcPm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int read_command(unsigned int v7, struct struct_0 **a0, unsigned int *a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char **v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: char *\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"t\";\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = &*(a0)->field_0;\n
    *(a1) = 0;\n
    for (v3 = 0; v3 < 8; v3 += 1)\n
    {\n
        v5 = operator new[](513);\n
        cgc_memset(v5, 0, 513);\n
        v6 = 0;\n
        v2 = cgc_freaduntil(v5, 0x200, 124, v7);\n
        if (v2 <= 1)\n
        {\n
            v0 = v5;\n
            if (v0)\n
                operator delete(v0);\n
            break;\n
        }\n
        else\n
        {\n
            v4[v3] = v5;\n
            *(a1) = v3 + 1;\n
        }\n
    }\n
    if (!*(v4))\n
        return v6;\n
    if (!cgc_strcmp(*(v4), v1 - 11093))\n
    {\n
        if (!(*(a1) >= 3 && *(a1) <= 4))\n
            return v6;\n
        v6 = 1;\n
        goto LABEL_4090b6;\n
    }\n
    if (!cgc_strcmp(*(v4), v1 - 11082))\n
    {\n
        if (!(*(a1) >= 2 && *(a1) <= 2))\n
            return v6;\n
        v6 = 2;\n
        goto LABEL_4090b6;\n
    }\n
    if (!cgc_strcmp(*(v4), v1 - 11068))\n
    {\n
        if (!(*(a1) >= 1 && *(a1) <= 1))\n
            return v6;\n
        v6 = 3;\n
        goto LABEL_4090b6;\n
    }\n
    if (!cgc_strcmp(*(v4), v1 - 11055))\n
    {\n
        if (!(*(a1) >= 1 && *(a1) <= 1))\n
            return v6;\n
        v6 = 4;\n
        goto LABEL_4090b6;\n
    }\n
    if (!cgc_strcmp(*(v4), v1 - 11037))\n
    {\n
        if (!(*(a1) >= 2 && *(a1) <= 2))\n
            return v6;\n
        v6 = 5;\n
        goto LABEL_4090b6;\n
    }\n
    if (!cgc_strcmp(*(v4), v1 - 11032))\n
    {\n
        if (!(*(a1) >= 2 && *(a1) <= 2))\n
            return v6;\n
        v6 = 6;\n
        goto LABEL_4090b6;\n
    }\n
    if (!cgc_strcmp(*(v4), v1 - 11027))\n
    {\n
        if (!(*(a1) >= 1 && *(a1) <= 2))\n
            return v6;\n
        v6 = 7;\n
        goto LABEL_4090b6;\n
    }\n
    if (cgc_strcmp(*(v4), v1 - 11022))\n
    {\n
        if (!cgc_strcmp(*(v4), v1 - 11014))\n
            v6 = 9;\n
LABEL_4090b6:\n
        return v6;\n
    }\n
    else\n
    {\n
        if (!(*(a1) >= 2 && *(a1) <= 2))\n
            return v6;\n
        v6 = 8;\n
        goto LABEL_4090b6;\n
    }\n
}\n
", "4231404:sub_4090ec": null, "4231408:_Z10run_serverP4FILES0_Ph": "typedef struct struct_1 {\n
    unsigned int field_-13c;\n
    unsigned int field_-138;\n
    char padding_-134[4340];\n
    unsigned int field_fc0;\n
    unsigned int field_fc4[2];\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_-13c;\n
    unsigned int field_-138;\n
    char padding_-134[4340];\n
    unsigned int field_fc0;\n
    unsigned int field_fc4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int run_server(unsigned int v13, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1[22];  // [bp-0x38]\n
    unsigned int v2[2];  // [bp-0x34]\n
    struct_1 *v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    unsigned int v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x8]\n
    char v12;  // [bp+0x0]\n
    unsigned int v14;  // ebx\n
    struct_0 *v15;  // ebx\n
    struct_0 *v16;  // ebx\n
\n
    v11 = v14;\n
    v3 = &\"t\";\n
    v8 = operator new[](32);\n
    Time::Reset();\n
    v1[0] = operator new(88);\n
    Dispatcher::__ctor__(v1, &v3->padding_-134[3504], a1);\n
    *(&v3->padding_-134[4024]) = v1;\n
    v15 = v3;\n
    v2[0] = operator new(8);\n
    Scheduler::__ctor__(v2, &v15->padding_-134[3504], *(&v15->padding_-134[4024]));\n
    v16 = v3;\n
    *(&v16->padding_-134[4028]) = v2;\n
    v6 = *(&v16->padding_-134[308]);\n
    v7 = *(&v16->padding_-134[304]);\n
    handle_hire_command(v13, a0, &v6, 2);\n
    v7 = &v3[2].padding_-134[2287];\n
    handle_hire_command(v13, a0, &v6, 2);\n
    cgc_fprintf(a0, &v3[2].padding_-134[2285]);\n
    while (true)\n
    {\n
        Time::GetTime(*(&v12));\n
        Scheduler::Run(*(&v3->padding_-134[4028]));\n
        for (v5 = 0; v5 < 8; v5 += 1)\n
        {\n
            if (*((v8 + 4 * v5)))\n
            {\n
                v0 = *((v8 + 4 * v5));\n
                if (v0)\n
                    operator delete(v0);\n
                *((v8 + 4 * v5)) = 0;\n
            }\n
        }\n
        cgc_fprintf(a0, &v3[2].padding_-134[2245]);\n
        v10 = read_command(v13, &v8, &v9);\n
        v4 = *(&v3->padding_-134[3448 + 4 * v10])(v13, a0, v8);\n
        if (v4)\n
            break;\n
        cgc_fprintf(a0, &v3[2].padding_-134[2242]);\n
    }\n
    return v4;\n
}\n
", "4231981:sub_40932d": null, "4231984:main": "typedef struct struct_0 {\n
    unsigned int field_-148;\n
    unsigned int field_-144;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-148;\n
    unsigned int field_-144[6];\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_stdin[6];\n
\n
int main(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_1 *v6;  // ebx\n
    struct_0 *v7;  // ebx\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &\"t\";\n
    v2 = 0;\n
    v4 = 0x4347c000;\n
    v1 = v4;\n
    cgc_fxlat(cgc_stdin, \"EREH_EULAV_MODNAR\");\n
    v6 = v0;\n
    cgc_fxlat(v6[40].field_-144, &v6[1369].field_-144 + 2);\n
    v7 = v0;\n
    run_server(v7[41].field_-148, v7[40].field_-144, v1);\n
    v8 = v3;\n
    return 0;\n
}\n
", "4232145:sub_4093d1": null, "4232160:_ZN7SupportC1Ej8PRIORITY": "extern unsigned int g_support_id;\n
\n
int Support::__ctor__(unsigned int v0[4], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1[4];  // eax\n
    unsigned int v2;  // ecx\n
\n
    v1 = v0;\n
    v2 = g_support_id;\n
    g_support_id = g_support_id + 1;\n
    v1[1] = v2;\n
    v1[2] = a0;\n
    v1[3] = a1;\n
    return v0;\n
}\n
", "4232223:sub_40941f": null, "4232224:_ZN7Support12AssignTicketEP6Ticket": "int Support::AssignTicket(unsigned int *v2, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (!a0)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    *(v0) = a0;\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4232286:sub_40945e": null, "4232288:_ZN7Support12UpdateTicketE6STATUS": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Support::UpdateTicket(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
\n
    v1 = \"t\";\n
    v2 = v4;\n
    if (!*(v2))\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v0 = a0;\n
    Ticket::UpdateStatus(*(v2));\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4232381:sub_4094bd": null, "4232384:_ZN7Support13CurrentTicketEv": "int Support::CurrentTicket(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4232397:sub_4094cd": null, "4232400:_ZN7Support7DisplayEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Support::Display(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"t\";\n
    v2 = v4;\n
    v0 = Support::id();\n
    cgc_printf(v1 - 11154);\n
    if (!Support::CurrentTicket(v2))\n
    {\n
        v6 = v1;\n
        v0 = v6 - 10936;\n
        cgc_printf(v6 - 10940);\n
    }\n
    else\n
    {\n
        Support::CurrentTicket(v2);\n
        v0 = Ticket::id();\n
        cgc_printf(v1 - 11154);\n
    }\n
    v0 = Support::contact_info(v2);\n
    cgc_printf(v1 - 11154);\n
    v0 = Support::max_priority(v2);\n
    v7 = v3;\n
    return cgc_printf(v1 - 11154);\n
}\n
", "4232637:sub_4095bd": null, "4232640:_ZN7Support2idEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Support::id(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4232654:sub_4095ce": null, "4232656:_ZN7Support12contact_infoEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Support::contact_info(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4232670:sub_4095de": null, "4232672:_ZN7Support12max_priorityEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int Support::max_priority(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4232686:sub_4095ee": null, "4232688:_ZN7Support12RemoveTicketEv": "int Support::RemoveTicket(struct struct_0 **v2)\n
{\n
    struct struct_0 **v0;  // [bp-0xc]\n
    unsigned int *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // eax\n
\n
    v0 = v2;\n
    v1 = 0;\n
    if (*(v0))\n
    {\n
        v3 = v0;\n
        v1 = *(v3);\n
        *(v3)->field_0 = v3;\n
        *(v3) = 0;\n
    }\n
    return v1;\n
}\n
", "4232747:sub_40962b": null, "4232752:_ZN6Ticket9GetTicketEPcS0_jj8PRIORITY": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Ticket::GetTicket(unsigned int v4, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
\n
    v2 = \"t\";\n
    if (v4 && a0 && a1 && a3 && a3 <= 5)\n
    {\n
        v1 = operator new(600);\n
        v0 = a3;\n
        Ticket::__ctor__(v1, v4, a0, a1, a2);\n
        v3 = v1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4232936:sub_4096e8": null, "4232944:_ZN6Ticket12DeleteTicketEPS_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Ticket::DeleteTicket(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v1 = \"t\";\n
    if (!v2)\n
        return v2;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v3)\n
        return v3;\n
    Ticket::__base_dtor__();\n
    v3 = operator delete(v0);\n
}\n
", "4233033:sub_409749": null, "4233040:_ZN6TicketC1EPcS0_jj8PRIORITY": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int _ZL11g_ticket_id;\n
\n
int Ticket::__ctor__(unsigned int v7[150], char *a0, char *a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[150];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ecx\n
    unsigned int v10[150];  // eax\n
    unsigned int v11;  // ebx\n
\n
    v6 = v8;\n
    v2 = \"t\";\n
    v3[0] = v7;\n
    v9 = _ZL11g_ticket_id;\n
    _ZL11g_ticket_id = _ZL11g_ticket_id + 1;\n
    v3[1] = v9;\n
    if (cgc_strlen(a0) >= 64)\n
        v1 = 63;\n
    else\n
        v1 = cgc_strlen(a0);\n
    v5 = v1;\n
    if (cgc_strlen(a1) >= 64)\n
        v0 = 63;\n
    else\n
        v0 = cgc_strlen(a1);\n
    v4 = v0;\n
    cgc_memset(&v3[2], 0, 64);\n
    cgc_memset(&v3[18], 0, 0x200);\n
    cgc_memcpy(&v3[2], a0, v5);\n
    cgc_memcpy(&v3[18], a1, v4);\n
    v10 = v3;\n
    v10[146] = a2;\n
    v10[148] = 1;\n
    v10[149] = a3;\n
    v10[147] = a4;\n
    v11 = v6;\n
    return v3;\n
}\n
", "4233399:sub_4098b7": null, "4233408:_ZN6TicketD2Ev": "int Ticket::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4233416:sub_4098c8": null, "4233424:_ZN6Ticket12UpdateStatusE6STATUS": "typedef struct struct_0 {\n
    char padding_0[592];\n
    unsigned int field_250;\n
} struct_0;\n
\n
int Ticket::UpdateStatus(struct_0 *v0, unsigned int a0)\n
{\n
    v0->field_250 = a0;\n
    return v0;\n
}\n
", "4233447:sub_4098e7": null, "4233456:_ZN6Ticket6WorkOnEv": "typedef struct struct_0 {\n
    char padding_0[596];\n
    unsigned int field_254;\n
} struct_0;\n
\n
int Ticket::WorkOn(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3;\n
    if (v3->field_254 > 0)\n
    {\n
        v3 = v0;\n
        *((v3 + 596)) = *((v3 + 596)) - 1;\n
    }\n
    return v3;\n
}\n
", "4233505:sub_409921": null, "4233520:_ZN6Ticket9CheckDoneEv": "typedef struct struct_0 {\n
    char padding_0[596];\n
    unsigned int field_254;\n
} struct_0;\n
\n
int Ticket::CheckDone(struct_0 *v0)\n
{\n
    return !v0->field_254;\n
}\n
", "4233546:sub_40994a": null, "4233552:_ZN6Ticket7DisplayEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Ticket::Display(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v2 = \"t\";\n
    v1 = v4;\n
    v0 = Ticket::id();\n
    cgc_printf(v2 - 11154);\n
    v0 = Ticket::email(v1);\n
    cgc_printf(v2 - 10940);\n
    v0 = Ticket::description(v1);\n
    cgc_printf(v2 - 10940);\n
    v0 = Ticket::status(v1);\n
    cgc_printf(v2 - 11154);\n
    v0 = Ticket::priority(v1);\n
    cgc_printf(v2 - 11154);\n
    v0 = Ticket::entry_time(v1);\n
    cgc_printf(v2 - 11154);\n
    v0 = Ticket::duration(v1);\n
    v6 = v3;\n
    return cgc_printf(v2 - 11154);\n
}\n
", "4233828:sub_409a64": null, "4233840:_ZN6Ticket2idEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Ticket::id(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4233854:sub_409a7e": null, "4233856:_ZN6Ticket5emailEv": "int Ticket::email(unsigned int v0)\n
{\n
    return v0 + 8;\n
}\n
", "4233870:sub_409a8e": null, "4233872:_ZN6Ticket11descriptionEv": "int Ticket::description(unsigned int v0)\n
{\n
    return v0 + 72;\n
}\n
", "4233886:sub_409a9e": null, "4233888:_ZN6Ticket6statusEv": "typedef struct struct_0 {\n
    char padding_0[592];\n
    unsigned int field_250;\n
} struct_0;\n
\n
int Ticket::status(struct_0 *v0)\n
{\n
    return v0->field_250;\n
}\n
", "4233905:sub_409ab1": null, "4233920:_ZN6Ticket8priorityEv": "typedef struct struct_0 {\n
    char padding_0[588];\n
    unsigned int field_24c;\n
} struct_0;\n
\n
int Ticket::priority(struct_0 *v0)\n
{\n
    return v0->field_24c;\n
}\n
", "4233937:sub_409ad1": null, "4233952:_ZN6Ticket10entry_timeEv": "typedef struct struct_0 {\n
    char padding_0[584];\n
    unsigned int field_248;\n
} struct_0;\n
\n
int Ticket::entry_time(struct_0 *v0)\n
{\n
    return v0->field_248;\n
}\n
", "4233969:sub_409af1": null, "4233984:_ZN6Ticket8durationEv": "typedef struct struct_0 {\n
    char padding_0[596];\n
    unsigned int field_254;\n
} struct_0;\n
\n
int Ticket::duration(struct_0 *v0)\n
{\n
    return v0->field_254;\n
}\n
", "4234001:sub_409b11": null, "4234016:_ZN4Time5ResetEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* cgc_ticks;\n
\n
int Time::Reset()\n
{\n
    cgc_ticks = 0;\n
    return \"t\";\n
}\n
", "4234043:sub_409b3b": null, "4234048:_ZN4Time7GetTimeEv": "extern unsigned int cgc_ticks;\n
\n
int Time::GetTime()\n
{\n
    cgc_ticks = cgc_ticks + 1;\n
    return cgc_ticks;\n
}\n
", "4234086:sub_409b66": null, "4234096:_ZN4Time4TickEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_ticks;\n
\n
int Time::Tick()\n
{\n
    cgc_ticks = cgc_ticks + 1;\n
    return \"t\";\n
}\n
", "4234128:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_receive": null, "5242892:_Znaj": null, "5242896:cgc_allocate": null, "5242900:cgc__terminate": null, "5242904:_ZdlPv": null, "5242908:cgc_deallocate": null, "5242912:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}