{"4198400:_init": "extern struct_0 *g_404bbc;\n
\n
int _init()\n
{\n
    if (g_404bbc)\n
    {\n
        g_404bbc();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198496:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198512:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198528:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198544:sub_401090": "int sub_401090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198550:sub_401096": null, "4198560:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198603:sub_4010cb": null, "4198604:sub_4010cc": "int sub_4010cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198608:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198612:sub_4010d4": null, "4198624:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 15075;\n
    v6 = v5 + 42;\n
    v7 = v5 + 42;\n
    if (v7 == v6)\n
        return v5 + 42;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198675:sub_401113": "int sub_401113()\n
{\n
}\n
", "4198681:sub_401119": "int sub_401119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198688:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 15011;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 42;\n
    v9 = (v6 + 42 - (v6 + 42) >> 31) + (42 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198759:sub_401167": "int sub_401167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198768:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_404bb8;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_404bb8)\n
    {\n
        v0 = __dso_handle;\n
        sub_401090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198843:sub_4011bb": "int sub_4011bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198848:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198857:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198861:sub_4011cd": null, "4198864:cgc_calloc": "int cgc_calloc(unsigned int v2, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // eax\n
\n
    v1 = v3;\n
    v4 = v2;\n
    if (v4)\n
    {\n
        v5 = a0;\n
        if (v5)\n
        {\n
            tmp_2 = v5;\n
            if (!([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>)))\n
            {\n
                v7 = v5 * v4;\n
                v8 = cgc_malloc();\n
                if (v8)\n
                {\n
                    v0 = v7;\n
                    return cgc_memset(v8, 0);\n
                }\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4198942:sub_40121e": null, "4198944:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4198977:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4198996:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4199012:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4199028:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4199044:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4199058:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4199080:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4199102:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4199124:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4199146:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[7104 + v0];\n
}\n
", "4199171:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4199196:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[6976 + v0];\n
}\n
", "4199221:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4199229:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4199248:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4199267:sub_401363": null, "4199268:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    char v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4199347:sub_4013b3": null, "4199348:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_404cf0;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // ecx\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct struct_1 **v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
    unsigned int v12[6];  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    struct_0 *v15;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        do\n
        {\n
            v11 = *(&(&cgc_free_lists)[4 * v10]);\n
            if (v11)\n
            {\n
                if (*(v11) < v9)\n
                {\n
                    v11 = *((v11 + 8));\n
                    continue;\n
                }\n
                goto LABEL_4014c1;\n
            }\n
            v10 = v10 + 1;\n
        } while (v10 != 32);\n
        v0 = &v2;\n
        if (cgc_allocate(0x40000, 0))\n
            return 0;\n
        v12 = *(&v2);\n
        if (!v12)\n
            return 0;\n
        v12[0] = 0x40000;\n
        v12[1] = 1;\n
        v12[3] = 0;\n
        v12[2] = 0;\n
        v12[5] = 0;\n
        v12[4] = 0;\n
        cgc_insert_into_flist();\n
        v11 = g_404cf0;\n
LABEL_4014c1:\n
        cgc_remove_from_flist();\n
        v13 = *(v11) - v9;\n
        if (v13 < 49)\n
            return v11 + 24;\n
        v14 = v9 + v11;\n
        *((&v9->field_0 + v11)) = v13;\n
        *(&v9->padding_4[v11]) = 1;\n
        *((8 + &v9->field_0 + v11)) = 0;\n
        *(&v9->padding_c[v11]) = 0;\n
        *(v11) = v9;\n
        *((20 + &v9->field_0 + v11)) = v11;\n
        *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
        v15 = *((v11 + 16));\n
        if (v15)\n
            v15->field_14 = v14;\n
        *((v11 + 16)) = v14;\n
        cgc_insert_into_flist();\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            return v8 + 1;\n
        }\n
        return 0;\n
    }\n
}\n
", "4199709:sub_40151d": null, "4199712:cgc_get_size_class": "extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int *v2;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v2 = &size_class_limits;\n
    while (true)\n
    {\n
        if (*(v2) >= v0)\n
            return v1;\n
        v1 += 1;\n
        v2 += 4;\n
        if (v1 == 32)\n
            return 32;\n
    }\n
}\n
", "4199755:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    while (*(v3) < v1[0])\n
    {\n
        v2 += 1;\n
        v3 += 4;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    v1[1] = 1;\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]);\n
    if (!v4)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
        return &_GLOBAL_OFFSET_TABLE_;\n
    }\n
    v1[2] = v4;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4199858:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    struct_1 *v4;  // esi\n
    struct_0 *v5;  // edi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    do\n
    {\n
        if (*(v3) >= v1->field_0)\n
        {\n
            v4 = v1->field_c;\n
            if (v4)\n
                v4->field_8 = v1->field_8;\n
            v5 = v1->field_8;\n
            if (v5)\n
                v5->field_c = v4;\n
            if (*(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) == v1)\n
            {\n
                *(&(&_GLOBAL_OFFSET_TABLE_)[172 + 4 * v2]) = v5;\n
                goto LABEL_401607;\n
            }\n
        }\n
        v2 += 1;\n
        v3 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_401607:\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v0;\n
}\n
", "4199957:cgc_coalesce": "int cgc_coalesce(unsigned int v0)\n
{\n
    unsigned int v1;  // esi\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ecx\n
\n
    v1 = v0;\n
    v2 = *((v1 + 20));\n
    if (!v2)\n
        return v2;\n
    v3 = *((v1 + 16));\n
    if (!*((v2 + 4)))\n
    {\n
        if (!v3)\n
            return v2;\n
        if (!*((v3 + 4)))\n
            return v2;\n
        cgc_remove_from_flist(v3);\n
        cgc_remove_from_flist(v1);\n
        *(v1) = *(v1) + *(*((v1 + 16)));\n
        cgc_insert_into_flist(v1);\n
        v7 = *((v1 + 16));\n
        v2 = *((v7 + 20));\n
        if (v2)\n
            *((v2 + 16)) = *((v7 + 16));\n
        v11 = *((v7 + 16));\n
LABEL_401713:\n
        if (!v11)\n
            return v2;\n
        *((v11 + 20)) = v2;\n
    }\n
    if (v3 && *((v3 + 4)))\n
    {\n
        cgc_remove_from_flist(v2);\n
        cgc_remove_from_flist(*((v1 + 16)));\n
        cgc_remove_from_flist(v1);\n
        v5 = *((v1 + 20));\n
        v6 = *(v5) + *(v1);\n
        *(v5) = v6;\n
        *(v5) = v6 + *(*((v1 + 16)));\n
        cgc_insert_into_flist(v5);\n
        v8 = *((v1 + 16));\n
        v9 = *((v8 + 20));\n
        if (v9)\n
            *((v9 + 16)) = *((v8 + 16));\n
        v12 = *((v8 + 16));\n
        if (v12)\n
        {\n
            *((v12 + 20)) = v9;\n
            goto LABEL_4016c5;\n
        }\n
    }\n
    v4 = *((v1 + 16));\n
    if (!v4)\n
        return v2;\n
    if (*((v4 + 4)))\n
        return *((v1 + 20));\n
    cgc_remove_from_flist(v2);\n
    cgc_remove_from_flist(v1);\n
    v10 = *((v1 + 20));\n
    *(v10) = *(v10) + *(v1);\n
    cgc_insert_into_flist(v10);\n
LABEL_4016c5:\n
    v2 = *((v1 + 20));\n
    if (v2)\n
        *((v2 + 16)) = *((v1 + 16));\n
    v11 = *((v1 + 16));\n
    goto LABEL_401713;\n
}\n
", "4200224:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4200266:sub_40174a": null, "4200268:cgc_memcpy": "int cgc_memcpy(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = *((a0 + v2));\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4200302:sub_40176e": null, "4200304:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    char *v1;  // eax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return v0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = a0;\n
        v3 += 1;\n
    } while (v2 != v3);\n
    return v0;\n
}\n
", "4200337:sub_401791": null, "4200340:cgc_output_number_printf": "int cgc_output_number_printf(unsigned int v3, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    int tmp_6;  // tmp #6\n
    char v0;  // [bp-0x1d]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    char v4;  // dl\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // edx\n
    char v12;  // al\n
\n
    v4 = a2;\n
    v5 = a1;\n
    v6 = a0;\n
    v7 = v3;\n
    if (v7 < v6)\n
    {\n
        v2 = v7;\n
        v1 = 0;\n
    }\n
    else\n
    {\n
        tmp_6 = (0 CONCAT v7) /m v6;\n
        v2 = tmp_6 >> 32;\n
        v4 = a2;\n
        v1 = cgc_output_number_printf((0 CONCAT v7) /m v6, v6, v5 - 1, a2);\n
    }\n
    if (v5 > 0 && !v1)\n
    {\n
        v10 = v5 - 1;\n
        if (v10)\n
        {\n
            do\n
            {\n
                if (!(v4 & 1))\n
                    v0 = 32;\n
                else\n
                    v0 = 48;\n
                cgc_transmit(1, &v0, 1);\n
                v4 = a2;\n
                v10 -= 1;\n
            } while (v10);\n
        }\n
    }\n
    if (!(v4 & 2))\n
    {\n
        v11 = v2;\n
        v12 = v11 + 87;\n
    }\n
    else\n
    {\n
        v11 = v2;\n
        v12 = v11 + 55;\n
    }\n
    if (v11 < 10)\n
        v12 = v11 + 48;\n
    v0 = v12;\n
    cgc_transmit();\n
    return v1 + 1;\n
}\n
", "4200556:cgc_printf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_printf(struct struct_2 **v5)\n
{\n
    struct_0 *v0;  // [bp-0x38]\n
    struct struct_2 **v1;  // [bp-0x1d], Other Possible Types: char\n
    struct struct_1 **v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x14]\n
    char v6;  // [bp+0x8]\n
    unsigned int v7;  // [bp+0xc]\n
    unsigned int v8;  // [bp+0x10]\n
    struct struct_2 **v9;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v10;  // esi, Other Possible Types: unsigned int\n
    struct_0 *v11;  // edi, Other Possible Types: unsigned int\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // esi\n
    struct struct_2 **v14;  // ebp, Other Possible Types: unsigned int\n
    struct struct_2 **v15;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v16;  // ecx, Other Possible Types: unsigned int\n
    struct struct_1 **v17;  // eax\n
    struct_0 *v18;  // ebp, Other Possible Types: unsigned int\n
    struct struct_1 **v19;  // eax\n
    char *v20;  // esi\n
    unsigned int v21;  // ebp\n
\n
    v9 = v5;\n
    v2 = &v6;\n
    if (!*(v9))\n
        return 0;\n
    v10 = &v4;\n
    v11 = &v1;\n
    do\n
    {\n
        v15 = v9 + 1;\n
        v5 = v15;\n
        *(&v9) = *(v9);\n
        if (v1 != 37)\n
        {\n
            v1 = v9;\n
            cgc_transmit(1, v11, 1);\n
            v16 = v10;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            while (true)\n
            {\n
                v14 = v15;\n
                while (true)\n
                {\n
                    v15 = v14 + 1;\n
                    v5 = v15;\n
                    v12 = *(v14);\n
                    if (v12 - 49 >= 9)\n
                        break;\n
                    v13 = cgc_strtol(v14, &v5);\n
                    v14 = v5;\n
                }\n
                if (v12 > 99)\n
                {\n
                    if (v12 == 100)\n
                    {\n
                        v17 = v2;\n
                        v2 = v17 + 1;\n
                        if (*(v17) >= 0)\n
                        {\n
                            v18 = &v4;\n
                        }\n
                        else\n
                        {\n
                            v1 = 45;\n
                            v18 = &v4;\n
                            cgc_transmit(1, &v1, 1);\n
                        }\n
LABEL_401a28:\n
                        cgc_output_number_printf(v5, *(&v6), v7, v8);\n
                        v11 = &v1;\n
                        v16 = v18;\n
                        goto LABEL_4019fb;\n
                    }\n
                    if (v12 == 115)\n
                    {\n
                        v19 = v2;\n
                        v2 = v19 + 1;\n
                        v20 = *(v19);\n
                        v16 = &v4;\n
                        v11 = &v1;\n
                        if (cgc_strlen())\n
                        {\n
                            v21 = 0;\n
                            do\n
                            {\n
                                v1 = v20[v21];\n
                                v0 = v11;\n
                                cgc_transmit(1, v11, 1);\n
                                v21 += 1;\n
                                v11 = &v1;\n
                            } while (v21 < cgc_strlen(v20, v0, 1));\n
                        }\n
                    }\n
                    if (v12 == 120)\n
                    {\n
                        v18 = &v4;\n
                        goto LABEL_401949;\n
                    }\n
                }\n
                else\n
                {\n
                    if (v12 == 37)\n
                    {\n
                        v1 = 37;\n
                        goto LABEL_4019e5;\n
                    }\n
                    if (v12 == 48)\n
                    {\n
                        v3 = 1;\n
                    }\n
                    else\n
                    {\n
                        if (v12 == 88)\n
                        {\n
                            v18 = &v4;\n
LABEL_401949:\n
                            v2 += 1;\n
                            goto LABEL_401a28;\n
                        }\n
                        *(&v1) = *(v14);\n
LABEL_4019e5:\n
                        v11 = &v1;\n
                        cgc_transmit(1, &v1, 1);\n
                        v16 = &v4;\n
                        goto LABEL_4019fb;\n
                    }\n
                }\n
            }\n
            continue;\n
        }\n
LABEL_4019fb:\n
        v10 = v16;\n
        v9 = v5;\n
    } while (*(v9));\n
    return 0;\n
}\n
", "4201042:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v4, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_11;  // tmp #11\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
    struct struct_0 **v9;  // ebp\n
    unsigned int *v10;  // edi\n
    unsigned int v11;  // eax\n
    unsigned int v13;  // eax\n
    char v14;  // bl\n
    unsigned int v15;  // esi\n
    char v16;  // cl\n
    char v17;  // cl\n
    char *v18;  // eax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v8 = a3;\n
    v13 = a1;\n
    v9 = a0;\n
    v10 = v4;\n
    if (v13 < a2)\n
    {\n
        v14 = a4;\n
    }\n
    else\n
    {\n
        tmp_11 = (0 CONCAT v13) /m a2;\n
        v11 = (0 CONCAT v13) /m a2;\n
        v0 = tmp_11 >> 32;\n
        cgc_output_number_sprintf(v10, v9, v11, a2, v8 - 1, a4);\n
        v13 = v0;\n
        v14 = a4;\n
    }\n
    if (v8 > 0 && v13 < a2)\n
    {\n
        v15 = v8 - 1;\n
        if (v15)\n
        {\n
            do\n
            {\n
                *(v9)->field_0 = ((v14 & 1) * 16) | 32;\n
                *(v9) = *(v9) + 1;\n
                *(v10) = *(v10) + 1;\n
                v15 -= 1;\n
            } while (v15);\n
        }\n
    }\n
    v16 = (!(v13 < 10) ? 48 : ((!(v14 & 2)) * 32 + 55));\n
    v17 = v16 + v13;\n
    v18 = *(v9);\n
    *(v18) = v17;\n
    *(v9) = *(v9) + 1;\n
    *(v10) = *(v10) + 1;\n
    return v18;\n
}\n
", "4201217:cgc_sprintf": "typedef struct struct_0 {\n
    char field_-1;\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprintf(char *v9, struct_0 *a0)\n
{\n
    char *v0;  // [bp-0x44], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    void* v5;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x1c]\n
    struct struct_1 **v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x14]\n
    char v10;  // [bp+0xc]\n
    struct_0 *v11;  // eax, Other Possible Types: unsigned int\n
    char *v12;  // ecx, Other Possible Types: unsigned int\n
    void* v13;  // eax, Other Possible Types: unsigned int\n
    void* v14;  // eax\n
    char *v15;  // ecx\n
    unsigned int v16;  // ebx\n
    char v17;  // dl\n
    unsigned int v18;  // ebp\n
    struct_0 *v19;  // ecx, Other Possible Types: unsigned int\n
    void* v20;  // esi, Other Possible Types: unsigned int\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // eax\n
    struct_0 *v23;  // ecx, Other Possible Types: unsigned int\n
    char *v24;  // eax, Other Possible Types: unsigned int\n
    unsigned int v25;  // edi\n
    struct struct_1 **v26;  // eax\n
    char *v27;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v28;  // edi\n
    struct struct_1 **v29;  // ecx\n
    char *v30;  // ecx, Other Possible Types: unsigned int\n
    struct struct_1 **v31;  // ecx\n
    char *v32;  // edx\n
    unsigned int v33;  // edi\n
\n
    v11 = a0;\n
    v12 = v9;\n
    v5 = 0;\n
    v7 = &v10;\n
    if (!v11->field_-1)\n
    {\n
        v13 = 0;\n
    }\n
    else\n
    {\n
        v6 = &_GLOBAL_OFFSET_TABLE_;\n
        do\n
        {\n
            v23 = v11 + 1;\n
            a0 = v23;\n
            *(&v11) = *(v11);\n
            if (*(&v11) != 37)\n
            {\n
                v15 = v9;\n
                *(v15) = v11;\n
                v9 = v15 + 1;\n
            }\n
            else\n
            {\n
                v14 = 0;\n
                v20 = 0;\n
                while (true)\n
                {\n
                    v16 = v20 | 1;\n
                    v19 = v23 + 1;\n
                    do\n
                    {\n
                        v25 = v20;\n
                        a0 = v19;\n
                        v17 = *((v19 - 1));\n
                        v18 = *((v19 - 1));\n
                        v19 += 1;\n
                        v20 = v16;\n
                    } while (v18 == 48);\n
                    if (v18 > 87)\n
                    {\n
                        if (v18 > 114)\n
                        {\n
                            if (v18 == 115)\n
                            {\n
                                v26 = v7;\n
                                v7 = v26 + 1;\n
                                v27 = v9;\n
                                v28 = v5;\n
                                if (cgc_strlen())\n
                                {\n
                                    v8 = v28;\n
                                    v33 = 0;\n
                                    do\n
                                    {\n
                                        v27[v33] = (*(v26))[v33].field_0;\n
                                        v33 += 1;\n
                                    } while (v33 < cgc_strlen());\n
                                    v27 = &v27[v33];\n
                                    v28 = v8 + v33;\n
                                }\n
                                v9 = v27;\n
                                v5 = v28;\n
                                goto LABEL_401cac;\n
                            }\n
                            if (v18 == 120)\n
                                goto LABEL_401c12;\n
                            goto LABEL_401c9d;\n
                        }\n
                        else if (v18 == 88)\n
                        {\n
                            v25 |= 2;\n
LABEL_401c12:\n
                            v31 = v7;\n
                            v7 = v31 + 1;\n
                            v3 = v25;\n
                            v2 = v14;\n
                            v1 = 16;\n
                            v0 = &*(v31)->field_0;\n
LABEL_401c2a:\n
                            cgc_output_number_sprintf(&v5, &v9, v0, v1, v2, v3);\n
                        }\n
                        else if (v18 == 100)\n
                        {\n
                            v29 = v7;\n
                            v7 = v29 + 1;\n
                            v30 = *(v29);\n
                            if (v30 < 0)\n
                            {\n
                                v32 = v9;\n
                                *(v32) = 45;\n
                                v9 = v32 + 1;\n
                                v5 += 1;\n
                                v30 = -(v30);\n
                            }\n
                            v3 = v25;\n
                            v2 = v14;\n
                            v1 = 10;\n
                            v0 = v30;\n
                            goto LABEL_401c2a;\n
                        }\n
                    }\n
                    else\n
                    {\n
                        if (v18 - 49 < 9)\n
                        {\n
                            v21 = v19 - 2;\n
                            v4 = 10;\n
                            v22 = cgc_strtol(v21, &a0);\n
                            v23 = a0;\n
                            v20 = v25;\n
                        }\n
                        else\n
                        {\n
                            if (v18 == 37)\n
                            {\n
                                v24 = v9;\n
                                *(v24) = 37;\n
                                goto LABEL_401ca3;\n
                            }\n
LABEL_401c9d:\n
                            v24 = v9;\n
                            *(v24) = v17;\n
LABEL_401ca3:\n
                            v9 = v24 + 1;\n
                            goto LABEL_401ca8;\n
                        }\n
                    }\n
                }\n
                continue;\n
            }\n
LABEL_401ca8:\n
            v5 += 1;\n
LABEL_401cac:\n
            v11 = a0;\n
        } while (*(v11));\n
        v12 = v9;\n
        v13 = v5;\n
    }\n
    *(v12) = 0;\n
    return v13;\n
}\n
", "4201680:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
        return cgc_malloc(v1);\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            goto LABEL_401d3a;\n
        }\n
    }\n
    v5 = 0;\n
LABEL_401d3a:\n
    return v5;\n
}\n
", "4201796:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4201820:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    int tmp_13;  // tmp #13\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    if (*(v2))\n
    {\n
        v3 = v2 + 1;\n
        do\n
        {\n
            if (!*(v1))\n
                return *(v1) - v4;\n
            if (v4 != *(v1))\n
                return *(v1) - v4;\n
            v1 += 1;\n
            tmp_13 = *(v3);\n
            v4 = *(v3);\n
            v3 += 1;\n
        } while (tmp_13);\n
    }\n
    return *(v1) - 0;\n
}\n
", "4201866:sub_401d8a": null, "4201868:cgc_strcpy": "int cgc_strcpy(char *v0, char a0[2])\n
{\n
    char v1[2];  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = v1[0];\n
    if (!v1[0])\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v1[1]);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4201913:sub_401db9": null, "4201916:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4201934:sub_401dce": null, "4201936:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    int tmp_7;  // tmp #7\n
    struct struct_0 **v1;  // edx, Other Possible Types: unsigned int\n
    char *v2;  // eax, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            if (cgc_strchr(a0, v3))\n
            {\n
                v1 = v0;\n
                v2 = *(v1);\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_401e36;\n
                }\n
            }\n
            tmp_7 = *(v4);\n
            v3 = *(v4);\n
            v4 += 1;\n
        } while (tmp_7);\n
        v1 = v0;\n
        v2 = *(v1);\n
    }\n
LABEL_401e36:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4202048:cgc_strtol": "int cgc_strtol()\n
{\n
    char *v0;  // [bp+0x4]\n
    char v1;  // [bp+0x8]\n
    char v2;  // [bp+0xc]\n
    unsigned int v3;  // esi\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
    char *v5;  // edx, Other Possible Types: unsigned int\n
    char *v6;  // edi, Other Possible Types: unsigned int\n
    char v7;  // bl\n
    char *v8;  // eax, Other Possible Types: unsigned int\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edi\n
    void* v12;  // eax, Other Possible Types: unsigned int\n
    char *v13;  // ecx, Other Possible Types: unsigned int\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // ebp\n
\n
    v3 = *(&v2);\n
    v4 = *(&v1);\n
    v5 = v0;\n
    if (v3 > 36)\n
    {\n
        v13 = 0;\n
        v6 = v5;\n
    }\n
    else\n
    {\n
        v13 = 0;\n
        v6 = v5;\n
        if (v3 != 1)\n
        {\n
            v8 = v5;\n
            while (true)\n
            {\n
                v7 = *(v8);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v7 != 32)\n
                    break;\n
                v8 += 1;\n
            }\n
            v9 = 0;\n
            *(&v9) = v7 == 45;\n
            v10 = (*((v8 + v9)) == 43) + v9;\n
            v11 = v8 + v10;\n
            if (!v3)\n
            {\n
                v3 = 10;\n
                if (*(v11) == 48)\n
                {\n
                    if ((*((v8 + v10 + 1)) | 32) == 120)\n
                    {\n
                        v11 = v8 + v10 + 2;\n
                        v3 = 16;\n
                    }\n
                    else\n
                    {\n
                        v11 = v8 + v10 + 1;\n
                        v3 = 8;\n
                    }\n
                }\n
            }\n
            else if (v3 == 16)\n
            {\n
                v3 = 16;\n
                if (*(v11) == 48 && (*((v8 + v10 + 1)) | 32) == 120)\n
                    v11 = v8 + v10 + 2;\n
            }\n
            v12 = 0;\n
            v13 = 0;\n
            while (true)\n
            {\n
                v14 = *((v11 + v13));\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v15 = v14 - 48;\n
                }\n
                else\n
                {\n
                    v16 = -65;\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                    {\n
                        v16 = -97;\n
                        if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (dl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                            break;\n
                    }\n
                    v15 = v14 + v16 + 10;\n
                }\n
                if (v15 >= v3)\n
                    break;\n
                v12 = v3 * v12 + v15;\n
                v13 += 1;\n
            }\n
            v6 = v11 + v13;\n
            v4 = *(&v1);\n
            v5 = v0;\n
        }\n
    }\n
    if (!v4)\n
        return;\n
    if (!v13)\n
        v6 = v5;\n
    *(v4) = v6;\n
    return;\n
}\n
", "4202331:cgc_strtoul": "int cgc_strtoul(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return cgc_strtol(v1, a0);\n
}\n
", "4202372:main": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char g_404d34;\n
extern char state;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    char v5;  // [bp-0x20]\n
    char v6;  // [bp-0x1c]\n
    char v7;  // [bp-0x18]\n
    char v8;  // [bp-0x14]\n
    struct_0 *v10;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // edi\n
    struct_0 *v17;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v18;  // ebp, Other Possible Types: unsigned short\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // ecx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // eax\n
    unsigned int v24;  // ecx\n
    struct_0 *v25;  // edi, Other Possible Types: unsigned int\n
    unsigned int v26;  // ebp\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ecx\n
    struct_0 *v29;  // edi\n
\n
    v4 = &state;\n
    cgc_memset(&state, 0, 65600);\n
    v10 = &v8;\n
    v11 = 4;\n
    while (true)\n
    {\n
        if (v11)\n
        {\n
            v2 = &v3;\n
            v12 = cgc_receive(0, v10, v11);\n
            v13 = *(&v3);\n
            v11 -= v13;\n
            v10 += v13;\n
            if (!(!v12))\n
                goto LABEL_402010;\n
        }\n
        else\n
        {\n
            if (*(&v8) == 0x69564d00)\n
            {\n
                v16 = 4;\n
                v17 = &v6;\n
                do\n
                {\n
                    if (!v16)\n
                    {\n
                        v18 = *(&v6);\n
                        if (*(&v6) < 0)\n
                        {\n
                            v19 = 64;\n
                            do\n
                            {\n
                                if (!v19)\n
                                {\n
                                    v18 = *(&v6);\n
                                    goto LABEL_40206b;\n
                                }\n
                                v2 = &v3;\n
                                v20 = cgc_receive(0, v4, v19);\n
                                v21 = *(&v3);\n
                                v19 -= v21;\n
                                v4 += v21;\n
                            } while (!v20);\n
                        }\n
LABEL_40206b:\n
                        if (v18)\n
                        {\n
                            v22 = &g_404d34;\n
                            while (v18)\n
                            {\n
                                v2 = &v3;\n
                                v23 = cgc_receive(0, v22, v18);\n
                                v24 = *(&v3);\n
                                v18 -= v24;\n
                                v22 += v24;\n
                                if (v23)\n
                                    goto LABEL_402010;\n
                            }\n
                        }\n
                        else\n
                        {\n
                            v25 = &v5;\n
                            v4 = &state;\n
                            while (true)\n
                            {\n
                                v26 = 4;\n
                                while (v26)\n
                                {\n
                                    v2 = &v3;\n
                                    v27 = cgc_receive(0, v25, v26);\n
                                    v28 = *(&v3);\n
                                    v26 -= v28;\n
                                    v25 += v28;\n
                                    if (!(!v27))\n
                                        goto LABEL_4020f5;\n
                                }\n
                                if (cgc_process())\n
                                    break;\n
                                v2 = &v7;\n
                                cgc_transmit(1, v4, 64);\n
                                v29 = &v5;\n
                            }\n
LABEL_4020f5:\n
                            v2 = &v7;\n
                            v1 = 4;\n
                            v0 = \"DONE\";\n
                            goto LABEL_40201e;\n
                        }\n
                    }\n
                    v2 = &v3;\n
                    v14 = cgc_receive(0, v17, v16);\n
                    v15 = *(&v3);\n
                    v16 -= v15;\n
                    v17 += v15;\n
                } while (!v14);\n
            }\n
LABEL_402010:\n
            v2 = &v7;\n
            v1 = 8;\n
            v0 = \"BAD_INIT\";\n
            break;\n
        }\n
    }\n
LABEL_40201e:\n
    cgc_transmit(1, v0, v1);\n
    return 0;\n
}\n
", "4202760:cgc_process": "int cgc_process(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v2;  // ecx\n
    unsigned int v24;  // edx\n
\n
    if (v2 > 218103807)\n
        return 1;\n
    v24 = v2;\n
    goto *((4213704 + (edx<4> >> 24) * 4 - 336));\n
}\n
", "4203046:sub_402226": "typedef struct struct_1 {\n
    char padding_0[304];\n
    unsigned int field_130;\n
    unsigned short field_134;\n
    char padding_136[2];\n
    unsigned short field_138;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int sub_402226()\n
{\n
    struct_0 *v0;  // [bp-0x4], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
    struct_1 *v3;  // ebx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // ebp\n
\n
    v4 = v3->field_130;\n
    if (v4 == 1)\n
    {\n
        v5 = v3->field_134;\n
        v11 = v3->field_138;\n
        if (!(v11 + v5 <= 0x10000))\n
            goto LABEL_0x402355;\n
        v12 = &v3->padding_0[v5 + 364];\n
        do\n
        {\n
            if (!v11)\n
                goto LABEL_0x402355;\n
            v0 = &v1;\n
            v9 = cgc_receive(0, v12, v11);\n
            v10 = v1;\n
            v11 -= v10;\n
            v12 += v10;\n
        } while (!v9);\n
    }\n
    else\n
    {\n
        if (!(!v4))\n
            goto LABEL_0x402355;\n
        v6 = v3->field_134;\n
        v7 = v3->field_138;\n
        if (!(v7 + v6 <= 0x10000))\n
            goto LABEL_0x402355;\n
        v0 = &v2;\n
        cgc_transmit(1, &v3->padding_0[v6 + 364], v7);\n
    }\n
}\n
", "4203432:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:cgc_deallocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}