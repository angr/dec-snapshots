{"4198400:_init": "extern struct_0 *g_406a54;\n
\n
int _init()\n
{\n
    if (g_406a54)\n
    {\n
        g_406a54();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_random": "// attributes: PLT stub\n
int cgc_random()\n
{\n
    ::libc.so.0::cgc_random();\n
    return;\n
}\n
", "4198528:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 22891;\n
    v6 = v5 + 29;\n
    v7 = v5 + 29;\n
    if (v7 == v6)\n
        return v5 + 29;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 22827;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 29;\n
    v9 = (v6 + 29 - (v6 + 29) >> 31) + (29 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406a50;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406a50)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = \"Di\";\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = 2;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = 3;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4199084:sub_4012ac": null, "4199088:cgc_recvline": "typedef struct struct_0 {\n
    char field_-1;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvline(unsigned int v5, struct_0 *a0, unsigned int a1)\n
{\n
    struct_1 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // ecx\n
\n
    v1 = \"Di\";\n
    v3 = 0;\n
    v2 = 0;\n
    if (!a1)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (a0)\n
    {\n
        while (a1)\n
        {\n
            v6 = a0;\n
            a0 = v6 + 1;\n
            v0 = &v3;\n
            if (cgc_receive(v5, v6, 1))\n
            {\n
                v4 = -7;\n
                return v4;\n
            }\n
            v2 += 1;\n
            a1 -= 1;\n
            if (*((a0 - 1)) == 7)\n
                break;\n
        }\n
        if (*((a0 - 1)) != 7)\n
        {\n
            v4 = -77;\n
            return v4;\n
        }\n
        *((a0 - 1)) = 0;\n
        v4 = v2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = -7;\n
        return v4;\n
    }\n
}\n
", "4199351:sub_4013b7": null, "4199360:cgc_syslog": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_syslog(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x42c]\n
    unsigned int v2;  // [bp-0x428]\n
    struct_0 *v3;  // [bp-0x424]\n
    unsigned int v4;  // [bp-0x420]\n
    unsigned int v5;  // [bp-0x41c]\n
    unsigned int v6;  // [bp-0x418]\n
    unsigned int v7;  // [bp-0x414]\n
    struct_0 *v8;  // [bp-0x410]\n
    char v9;  // [bp-0x40c]\n
    unsigned int v10;  // [bp-0x8]\n
    char v12;  // [bp+0xc]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebx\n
\n
    v10 = v13;\n
    v2 = \"Di\";\n
    memset(&v9, 0, 0x400);\n
    v14 = v2;\n
    v8 = &v9;\n
    v6 = *((v14 + v11 * 8 + 44));\n
    v4 = &v12;\n
    v0 = v6;\n
    v5 = cgc_snprintf(v8, 0x400, v14 - 10783);\n
    v8 = &v8[v5];\n
    v0 = v4;\n
    v5 = cgc_vsnprintf(v8, 0x400 - v5, a0) + v5;\n
    v3 = &v9;\n
    if (v5 >= 0x400)\n
        v1 = 0x400;\n
    else\n
        v1 = v5;\n
    v7 = cgc_sendall(2, v3, v1);\n
    if (v7)\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4199756:sub_40154c": null, "4199760:cgc_snprintf": "int cgc_snprintf(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    char v6;  // [bp+0x10]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
\n
    v4 = v7;\n
    v3 = v8;\n
    v1 = &v6;\n
    v0 = v1;\n
    v2 = cgc_vsnprintf(v5, a0, a1);\n
    return v2;\n
}\n
", "4199840:cgc_vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsnprintf(unsigned int v11, unsigned int a0, char *a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    unsigned int v2;  // [bp-0x4c]\n
    void* v3;  // [bp-0x48], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x44], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x40]\n
    struct_0 *v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x15]\n
    char *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v12;  // eax\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // eax\n
    struct struct_0 **v15;  // eax\n
\n
    v2 = \"Di\";\n
    v10 = 0;\n
    v9 = a1;\n
    if (!v9)\n
        v9 = v2 - 6204;\n
    for (; *(v9); LABEL_4017d1:\n
)\n
    {\n
        if (*(v9) != 126)\n
        {\n
            if (v10 >= a0)\n
            {\n
                v10 += 1;\n
                v9 += 1;\n
            }\n
            else\n
            {\n
                v12 = v9;\n
                v9 = v12 + 1;\n
                v13 = v10;\n
                v10 = v13 + 1;\n
                *((v11 + v13)) = *(v12);\n
            }\n
            goto LABEL_4017d1;\n
        }\n
        v8 = 0;\n
        v7 = 0;\n
        v4 = 0;\n
        v3 = 0;\n
        v9 += 1;\n
        v8 = *(v9);\n
        v1 = v8;\n
        if (v1 == 99)\n
        {\n
            v14 = a2;\n
            a2 = v14 + 1;\n
            v6 = *(v14);\n
            if (!v6)\n
                v7 = 0;\n
            else\n
                v7 = cgc_strlen();\n
        }\n
        else if (v1 == 110)\n
        {\n
            v4 = 0;\n
            v15 = a2;\n
            a2 = v15 + 1;\n
            v4 = *(v15);\n
            v0 = v4;\n
            cgc_int2str(&v5, 32);\n
            v6 = &v5;\n
            v7 = cgc_strlen(v6, 32);\n
        }\n
        if (v8 != 110 && !(v8 == 99))\n
            goto LABEL_4017b4;\n
        v3 = a0 - v10;\n
        if (v7 <= v3)\n
        {\n
            v0 = v7;\n
            cgc_memcpy(v11 + v10, v6);\n
            v10 = v7 + v10;\n
        }\n
        else\n
        {\n
            v0 = v3;\n
            cgc_memcpy(v11 + v10, v6);\n
            v10 = v3 + v10;\n
        }\n
LABEL_4017b4:\n
        if (*(v9))\n
            v9 += 1;\n
    }\n
    if (a0 <= 0)\n
        return v10;\n
    if (v10 < a0)\n
        *((v11 + v10)) = 0;\n
    else\n
        *((v11 + a0 - 1)) = 0;\n
    return v10;\n
}\n
", "4200476:sub_40181c": null, "4200480:cgc_streq": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_streq(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    char *v7;  // eax\n
    unsigned int v8;  // eax\n
    char *v9;  // ecx\n
\n
    v4 = v6;\n
    v1 = \"Di\";\n
    v0 = v5;\n
    v2 = cgc_strlen();\n
    v0 = a0;\n
    if (v2 != cgc_strlen())\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (*(v5))\n
        {\n
            v7 = v5;\n
            v5 = v7 + 1;\n
            v8 = *(v7);\n
            v9 = a0;\n
            a0 = v9 + 1;\n
            if (v8 != *(v9))\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4200650:sub_4018ca": null, "4200656:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *(v1); v1 += 1)\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4200716:sub_40190c": null, "4200720:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4200875:sub_4019ab": null, "4200880:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4200950:sub_4019f6": null, "4200960:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4201048:sub_401a58": null, "4201056:cgc_strchr": "int cgc_strchr(char *v1, char a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v1))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1) != a0)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4201139:sub_401ab3": null, "4201152:cgc_rand": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_rand(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    void* v1;  // [bp-0xc]\n
\n
    v1 = 0;\n
    v0 = &v1;\n
    return cgc_random(v2, 4);\n
}\n
", "4201213:sub_401afd": null, "4201216:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4201489:sub_401c11": null, "4201504:cgc_str2uint32": "int cgc_str2uint32(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 10;\n
    if (!v5)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (v5[v0] != 48 && v5[v0] != 49 && v5[v0] != 50 && v5[v0] != 51 && v5[v0] != 52 && v5[v0] != 53 && v5[v0] != 54 && v5[v0] != 55 && v5[v0] != 56 && v5[v0] != 57)\n
            break;\n
        v3 *= 10;\n
        v2 = v5[v0] - 48;\n
        v3 = v2 + v3;\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4201839:sub_401d6f": null, "4201840:cgc_str2int": "int cgc_str2int(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 10;\n
    v1 = 0;\n
    v0 = 1;\n
    if (!v6)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    if (*(v6) == 45)\n
    {\n
        v0 = -1;\n
        v1 += 1;\n
        v2 += 1;\n
    }\n
    for (; v1 < v2; v1 += 1)\n
    {\n
        if (*((v6 + v1)) != 48 && *((v6 + v1)) != 49 && *((v6 + v1)) != 50 && *((v6 + v1)) != 51 && *((v6 + v1)) != 52 && *((v6 + v1)) != 53 && *((v6 + v1)) != 54 && *((v6 + v1)) != 55 && *((v6 + v1)) != 56 && *((v6 + v1)) != 57)\n
            break;\n
        v4 *= 10;\n
        v3 = *((v6 + v1)) - 48;\n
        v4 = v3 + v4;\n
    }\n
    v5 = v0 * v4;\n
    return v5;\n
}\n
", "4202231:sub_401ef7": null, "4202240:cgc_is_numeric": "int cgc_is_numeric(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = 0;\n
    if (!cgc_strlen(v2))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (*(v2) == 45)\n
    {\n
        v2 += 1;\n
        v0 = 1;\n
    }\n
    while (true)\n
    {\n
        if (!*(v2))\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
        if (*(v2) < 48)\n
            break;\n
        if (*(v2) > 57)\n
            break;\n
        v2 += 1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4202423:sub_401fb7": null, "4202432:cgc_strip": "int cgc_strip(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = cgc_strlen(v2);\n
    v3 = v1 - 1;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 < 0)\n
            return v3;\n
        if (v2[v0] != 10 && v2[v0] != 9 && v2[v0] != 13)\n
        {\n
            v3 = v2[v0];\n
            if (v3 != 32)\n
                return v2[v0];\n
        }\n
        v2[v0] = 0;\n
        v3 = v0 - 1;\n
    }\n
}\n
", "4202608:cgc_load_default_jokes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_load_default_jokes(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = \"Di\";\n
    v0 = \"When Alexander Bell invented the telephone he had 3 missed calls from Chuck Norris.\";\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10694;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10583;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10465;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10366;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10278;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10200;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10128;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 10059;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9926;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9817;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9764;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9722;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9674;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9589;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9543;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9503;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9413;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9315;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9250;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9123;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 9038;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8973;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8882;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8833;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8770;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8688;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8595;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8472;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8407;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8371;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8314;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8264;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8181;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8076;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 8004;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7903;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7864;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7786;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7710;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7638;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7564;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7510;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7440;\n
    cgc_insert_joke(v3);\n
    v0 = v1 - 7366;\n
    v5 = v2;\n
    return cgc_insert_joke(v3);\n
}\n
", "4203716:sub_4024c4": null, "4203728:cgc_insert_joke": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_insert_joke(struct struct_0 **v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int *v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct struct_0 **v6;  // eax\n
\n
    v2 = \"Di\";\n
    if (*(v5) >= 0x100)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    else if (cgc_strlen(a0) >= 511)\n
    {\n
        cgc_syslog(3, v2 - 7325);\n
        cgc_syslog(3, v2 - 7187);\n
        v4 = -2;\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = &*(v5)->field_0;\n
        v0 = 5 + v5 + 0x204 * v3;\n
        v1 = a0;\n
        cgc_strncpy(v0, v1, cgc_strlen(a0));\n
        *((4 + v5 + 0x204 * v3)) = v3;\n
        v6 = v5;\n
        *(v6) = &*(v6)->field_0 + 1;\n
        v4 = v3;\n
        return v4;\n
    }\n
}\n
", "4203996:sub_4025dc": null, "4204000:cgc_joke_count": "int cgc_joke_count(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4204013:sub_4025ed": null, "4204016:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"Di\";\n
    v1 = cgc_sendall(1, v3, a0);\n
    if (v1)\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4204106:sub_40264a": null, "4204112:cgc_recv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv(void* v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"Di\";\n
    v1 = cgc_recvline(0, v3, a0);\n
    if (v1 < 0)\n
    {\n
        cgc_send(v0 - 7302, cgc_strlen(v0 - 7302));\n
        cgc__terminate(2);\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4204242:sub_4026d2": null, "4204256:cgc_prompt_user": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_prompt_user(char *v3, void* a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v1 = \"Di\";\n
    v0 = v3;\n
    cgc_send(v0, cgc_strlen(v3));\n
    cgc_recv(a0, a1);\n
    v5 = v2;\n
    return 0;\n
}\n
", "4204351:sub_40273f": null, "4204352:cgc_send_random_joke": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_random_joke(unsigned int *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"Di\";\n
    v3 = cgc_joke_count(v5);\n
    v2 = 0;\n
    if (cgc_rand(&v2))\n
        cgc__terminate();\n
    v0 = v5 + 1;\n
    cgc_send_joke();\n
    return 0;\n
}\n
", "4204483:sub_4027c3": null, "4204496:cgc_send_joke": "typedef struct struct_0 {\n
    unsigned int field_-24;\n
    unsigned int field_-20;\n
    char padding_-1c[4294967296];\n
    unsigned int field_ffffffe4;\n
    unsigned int field_ffffffe8;\n
    unsigned int field_ffffffec;\n
    unsigned int field_fffffff0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_402854;\n
\n
int cgc_send_joke(unsigned int *v8)\n
{\n
    char v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    struct_0 *v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x8]\n
    struct_0 *v7;  // [bp+0x0]\n
    unsigned int v9;  // [bp+0x8]\n
    unsigned int v10;  // [bp+0xc]\n
    struct_0 *v11;  // [bp+0x10]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // ecx\n
\n
    v6 = v12;\n
    v1 = \"Di\";\n
    v5 = cgc_strlen(v8 + 1) + 40;\n
    v13 = v5;\n
    v4 = &v0;\n
    v2 = &(&v0)[-1 * (v13 + 15 & -0x10)];\n
    v3 = v13;\n
    v14 = *(v8);\n
    *(&v2->padding_-1c[24]) = v2;\n
    *(&v2->padding_-1c[20]) = v5;\n
    *(&v2->padding_-1c[16]) = v1 - 7191;\n
    *(&v2->padding_-1c[12]) = v14;\n
    *(&v2->padding_-1c[8]) = v8 + 1;\n
    *(&v2->padding_-1c[28]) = &g_402854;\n
    cgc_snprintf(v8, v9, v10);\n
    v11 = v2;\n
    v7 = v2;\n
    v8 = cgc_strlen(v7);\n
    cgc_send(v8, v9);\n
    return 0;\n
}\n
", "4204684:sub_40288c": null, "4204688:cgc_send_all_jokes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_all_jokes(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = \"Di\";\n
    v2 = *(v3);\n
    for (v1 = 0; v1 < v2; v1 += 1)\n
    {\n
        cgc_send_joke(1 + v3 + 0x204 * v1);\n
    }\n
    return 0;\n
}\n
", "4204788:sub_4028f4": null, "4204800:cgc_do_list": "int cgc_do_list(unsigned int *v0)\n
{\n
    cgc_send_all_jokes(v0);\n
    return 0;\n
}\n
", "4204839:sub_402927": null, "4204848:cgc_do_add": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
    char padding_-c[4294967296];\n
    unsigned int field_fffffff4;\n
    unsigned int field_fffffff8;\n
    unsigned int field_fffffffc;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_402b29;\n
\n
int cgc_do_add(unsigned int **v11)\n
{\n
    char v0;  // [bp-0x22c]\n
    struct_0 *v1;  // [bp-0x228]\n
    unsigned int v2;  // [bp-0x224]\n
    unsigned int v3;  // [bp-0x220]\n
    unsigned int v4;  // [bp-0x21c]\n
    unsigned int v5;  // [bp-0x218]\n
    unsigned int v6;  // [bp-0x214]\n
    unsigned int v7;  // [bp-0x210]\n
    char v8;  // [bp-0x20c]\n
    unsigned int v9;  // [bp-0x8]\n
    struct_0 *v10;  // [bp+0x0]\n
    unsigned int v12;  // [bp+0x8]\n
    unsigned int v13;  // [bp+0xc]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v9 = v14;\n
    v2 = \"Di\";\n
    memset(&v8, 0, 0x200);\n
    cgc_send(v2 - 7183, cgc_strlen(v2 - 7183));\n
    cgc_prompt_user(v2 - 7097, &v8, 0x200);\n
    v7 = cgc_insert_joke(v11, &v8);\n
    if (v7 == -1)\n
    {\n
        cgc_send(v2 - 7091, cgc_strlen(v2 - 7091));\n
        return 0;\n
    }\n
    if (v7 <= -2)\n
    {\n
        cgc_send(v2 - 7031, cgc_strlen(v2 - 7031));\n
    }\n
    else if (v7 >= 0)\n
    {\n
        v6 = v7;\n
        v5 = cgc_strlen(v2 - 6965) + 40;\n
        v15 = v5;\n
        v4 = &v0;\n
        v1 = &(&v0)[-1 * (v15 + 15 & -0x10)];\n
        v3 = v15;\n
        *(&v1->padding_-c[8]) = v1;\n
        *(&v1->padding_-c[4]) = v5;\n
        *(&v1->padding_-c[0]) = v2 - 6965;\n
        v1->field_-10 = v6;\n
        *(&v1->padding_-c[12]) = &g_402b29;\n
        cgc_snprintf(v11, v12, v13);\n
        v10 = v1;\n
        v10 = v1;\n
        v11 = cgc_strlen(v1);\n
        cgc_send(v11, v12);\n
    }\n
    return 0;\n
}\n
", "4205433:sub_402b79": null, "4205440:cgc_do_show": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
    char padding_-c[4294967296];\n
    unsigned int field_fffffff4;\n
    unsigned int field_fffffff8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_402be8;\n
\n
int cgc_do_show(struct_0 *v12)\n
{\n
    char v0;  // [bp-0x22c]\n
    unsigned int v1;  // [bp-0x228]\n
    struct_0 *v2;  // [bp-0x224]\n
    unsigned int v3;  // [bp-0x220]\n
    unsigned int v4;  // [bp-0x21c]\n
    char v5;  // [bp-0x218]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    struct_0 *v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    struct_0 *v11;  // [bp+0x0], Other Possible Types: unsigned int\n
    void* v13;  // [bp+0x8], Other Possible Types: unsigned int\n
    unsigned int v14;  // [bp+0xc]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // eax\n
    struct_0 *v18;  // eax\n
    struct_0 *v19;  // eax\n
    unsigned int v20;  // eax\n
\n
    v10 = v15;\n
    v3 = \"Di\";\n
    v9 = 11;\n
    v16 = v9;\n
    v8 = &v0;\n
    v2 = &(&v0)[-1 * (v16 + 15 & -0x10)];\n
    v7 = v16;\n
    *(&v2->padding_-c[8]) = &v5;\n
    *(&v2->padding_-c[4]) = 0;\n
    *(&v2->padding_-c[0]) = 0x200;\n
    *(&v2->padding_-c[12]) = &g_402be8;\n
    memset(v12, v13, v14);\n
    v11 = v3 - 0x1b00;\n
    v11 = v3 - 0x1b00;\n
    v12 = cgc_strlen(v3 - 0x1b00);\n
    cgc_send(v12, v13);\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            v17 = v9;\n
            v8 = v2;\n
            v9 = 0;\n
            v10 = v17;\n
            cgc_memset(v12, v13, v14);\n
            v11 = v3 - 6809;\n
            v12 = v2;\n
            v13 = v9;\n
            cgc_prompt_user(v12, v13, v14);\n
            v11 = v2;\n
            v4 = cgc_is_numeric(v11);\n
            if (!v4)\n
                break;\n
            if (v4 == -1)\n
            {\n
                v8 = v2;\n
                v9 = v3 - 6651;\n
                if (!cgc_streq(v12, v13))\n
                {\n
                    v8 = v12;\n
                    cgc_send_random_joke(v11);\n
                    return 0;\n
                }\n
            }\n
            v8 = v3 - 6707;\n
            v18 = cgc_strlen(v11);\n
            v11 = v3 - 6707;\n
            v12 = v18;\n
            cgc_send(v12, v13);\n
        }\n
        v8 = v2;\n
        v6 = cgc_str2uint32(v11);\n
        if (v6 == 1337)\n
        {\n
            v8 = v3 - 6802;\n
            v20 = cgc_strlen(v11);\n
            v11 = v3 - 6802;\n
            v12 = v20;\n
            cgc_send(v12, v13);\n
            break;\n
        }\n
        else\n
        {\n
            v1 = v6;\n
            v8 = v12;\n
            if (v1 >= cgc_joke_count(v11))\n
            {\n
                v8 = v3 - 6707;\n
                v19 = cgc_strlen(v11);\n
                v11 = v3 - 6707;\n
                v12 = v19;\n
                cgc_send(v12, v13);\n
            }\n
            else\n
            {\n
                v8 = &(&v12->field_-10)[129 * v6];\n
                cgc_send_joke(v11);\n
                break;\n
            }\n
        }\n
    }\n
    return 0;\n
}\n
", "4206161:sub_402e51": null, "4206176:cgc_do_count": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_402ec8;\n
\n
int cgc_do_count(unsigned int v9)\n
{\n
    char v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0x8]\n
    struct_0 *v8;  // [bp+0x0]\n
    unsigned int v10;  // [bp+0x8]\n
    unsigned int v11;  // [bp+0xc]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // eax\n
\n
    v7 = v12;\n
    v2 = \"Di\";\n
    v6 = cgc_strlen(\"Current CNMP joke count is ~n. Enjoy!\\n
\") + 40;\n
    v13 = v6;\n
    v5 = &v0;\n
    v3 = &(&v0)[-1 * (v13 + 15 & -0x10)];\n
    v4 = v13;\n
    v1 = v6;\n
    v3[2].field_-14 = v9;\n
    v3[2].field_-10 = &g_402ec8;\n
    v8 = v3;\n
    v9 = v1;\n
    v10 = v2 - 6644;\n
    v11 = cgc_joke_count(v8);\n
    cgc_snprintf(v9, v10, v11);\n
    v8 = v3;\n
    v8 = v3;\n
    v9 = cgc_strlen(v3);\n
    cgc_send(v9, v10);\n
    return 0;\n
}\n
", "4206373:sub_402f25": null, "4206384:cgc_do_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_menu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"Di\";\n
    cgc_send(v0 - 6605, cgc_strlen(\"Enter one of these commands:\\n
  LIST  - list all jokes\\n
  ADD   - upload your own joke\\n
  COUNT - find out how many jokes we have to offer you\\n
  SHOW  - show a joke\\n
  MENU  - display this menu\\n
  HELP  - you gotta be kididin' me!\\n
  QUIT  - take off eh?\\n
\"));\n
    v4 = v1;\n
    return 0;\n
}\n
", "4206449:sub_402f71": null, "4206464:cgc_do_help": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_help()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"Di\";\n
    cgc_send(v0 - 6355, cgc_strlen(\"Is our menu so extensive that you cannot remember all of the commands? Here, let me jog all 6 of your neurons:\\n
\"));\n
    cgc_do_menu();\n
    v4 = v1;\n
    return 0;\n
}\n
", "4206537:sub_402fc9": null, "4206544:cgc_do_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_quit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = \"Di\";\n
    cgc_send(v0 - 6243, cgc_strlen(\"Thanks for the laughs. Come back soon!\\n
\"));\n
    v4 = v1;\n
    return 0;\n
}\n
", "4206609:sub_403011": null, "4206624:main": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
    unsigned int field_-10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_403080;\n
\n
int main(unsigned int v10, struct_0 *a0)\n
{\n
    char v0;  // [bp-0x2042c]\n
    struct_0 *v1;  // [bp-0x20424]\n
    unsigned int v2;  // [bp-0x20420]\n
    char v3;  // [bp-0x2041c]\n
    struct_0 *v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v8;  // [bp-0x8]\n
    struct_0 *v9;  // [bp+0x0]\n
    unsigned int v11;  // [bp+0xc]\n
    struct_0 *v12;  // ebx\n
    struct_0 *v13;  // eax\n
    struct_0 *v14;  // eax\n
\n
    v8 = v12;\n
    v2 = \"Di\";\n
    v7 = 0;\n
    v6 = 20;\n
    v13 = v6;\n
    v5 = &v0;\n
    v1 = &(&v0)[-1 * (&v13[1].field_-10 + 3 & -0x10)];\n
    v4 = v13;\n
    v1[2].field_-14 = &v3;\n
    v1[2].field_-10 = &g_403080;\n
    cgc_load_default_jokes(v9);\n
    v9 = v2 - 6203;\n
    v9 = v2 - 6203;\n
    v10 = cgc_strlen(v2 - 6203);\n
    cgc_send(v10, a0);\n
    cgc_do_menu();\n
    while (true)\n
    {\n
        v14 = v6;\n
        v6 = v1;\n
        v7 = 0;\n
        v8 = v14;\n
        cgc_memset(v10, a0, v11);\n
        v9 = v2 - 7094;\n
        v10 = v1;\n
        a0 = v6;\n
        cgc_prompt_user(v10, a0, v11);\n
        v9 = v1;\n
        v10 = v2 - 6009;\n
        if (!cgc_streq(v10, a0))\n
        {\n
            v6 = &v3;\n
            cgc_do_list(v9);\n
        }\n
        else\n
        {\n
            v6 = v1;\n
            v7 = v2 - 6004;\n
            if (!cgc_streq(v10, a0))\n
            {\n
                v6 = &v3;\n
                cgc_do_add(v9);\n
            }\n
            else\n
            {\n
                v6 = v1;\n
                v7 = v2 - 6000;\n
                if (!cgc_streq(v10, a0))\n
                {\n
                    v6 = &v3;\n
                    cgc_do_count(v9);\n
                }\n
                else\n
                {\n
                    v6 = v1;\n
                    v7 = v2 - 5994;\n
                    if (!cgc_streq(v10, a0))\n
                    {\n
                        v6 = &v3;\n
                        cgc_do_show(v9);\n
                    }\n
                    else\n
                    {\n
                        v6 = v1;\n
                        v7 = v2 - 5989;\n
                        if (!cgc_streq(v10, a0))\n
                        {\n
                            cgc_do_help();\n
                        }\n
                        else\n
                        {\n
                            v6 = v1;\n
                            v7 = v2 - 5984;\n
                            if (cgc_streq(v10, a0))\n
                                cgc_do_menu();\n
                            else\n
                                cgc_do_quit();\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
}\n
", "4207348:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_random": null, "5242896:memset": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}