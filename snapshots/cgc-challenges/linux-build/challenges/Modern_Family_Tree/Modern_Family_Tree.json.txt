{"4202496:_init": "extern struct_0 *g_408e28;\n
\n
int _init()\n
{\n
    if (g_408e28)\n
    {\n
        g_408e28();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202592:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202608:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:sub_402090": "int sub_402090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202646:sub_402096": null, "4202656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202699:sub_4020cb": null, "4202700:sub_4020cc": "int sub_4020cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202708:sub_4020d4": null, "4202720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 27983;\n
    v6 = v5 + 18;\n
    v7 = v5 + 18;\n
    if (v7 == v6)\n
        return v5 + 18;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202771:sub_402113": "int sub_402113()\n
{\n
}\n
", "4202777:sub_402119": "int sub_402119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 27919;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 18;\n
    v9 = (v6 + 18 - (v6 + 18) >> 31) + (18 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202855:sub_402167": "int sub_402167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408e24;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408e24)\n
    {\n
        v0 = __dso_handle;\n
        sub_402090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_is_non_printable": "int cgc_is_non_printable(char v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return 0 == cgc_is_printable(v1, *(&v0));\n
}\n
", "4203012:sub_402204": null, "4203024:cgc_is_printable": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_printable(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (cgc_is_digit())\n
        return v2 & 1;\n
    v0 = v4;\n
    v2 = 1;\n
    if (cgc_is_letter())\n
        return v2 & 1;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_is_symbol())\n
    {\n
        v0 = v4;\n
        v2 = cgc_is_white_space();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203177:sub_4022a9": null, "4203184:cgc_is_digit": "int cgc_is_digit(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (48 <= v2)\n
        v1 = v2 <= 57;\n
    return v1 & 1;\n
}\n
", "4203239:sub_4022e7": null, "4203248:cgc_is_letter": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_letter(char v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_is_upper())\n
    {\n
        v0 = v4;\n
        v2 = cgc_is_lower();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203339:sub_40234b": null, "4203344:cgc_is_symbol": "int cgc_is_symbol(char v3)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x6]\n
    char v2;  // [bp-0x5]\n
    unsigned int v4;  // eax\n
\n
    v0 = v4;\n
    if (33 <= v3)\n
    {\n
        v2 = 1;\n
        if (v3 <= 64)\n
            return v2 & 1;\n
    }\n
    if (91 <= v3)\n
    {\n
        v2 = 1;\n
        if (v3 <= 96)\n
            return v2 & 1;\n
    }\n
    v1 = 0;\n
    if (123 <= v3)\n
        v1 = v3 <= 126;\n
    v2 = v1;\n
    return v2 & 1;\n
}\n
", "4203475:sub_4023d3": null, "4203488:cgc_is_white_space": "int cgc_is_white_space(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 32)\n
    {\n
        v1 = 1;\n
        if (v2 != 10)\n
        {\n
            v1 = 1;\n
            if (v2 != 9)\n
                v1 = 13 == v2;\n
        }\n
    }\n
    return v1 & 1;\n
}\n
", "4203591:sub_402447": null, "4203600:cgc_is_upper": "int cgc_is_upper(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (65 <= v2)\n
        v1 = v2 <= 90;\n
    return v1 & 1;\n
}\n
", "4203655:sub_402487": null, "4203664:cgc_is_lower": "int cgc_is_lower(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (97 <= v2)\n
        v1 = v2 <= 122;\n
    return v1 & 1;\n
}\n
", "4203719:sub_4024c7": null, "4203728:cgc_is_hex_digit": "int cgc_is_hex_digit(char v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (65 <= v1 && 70 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (97 <= v1 && 102 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    if (48 <= v1 && 57 >= v1)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203888:cgc_ascii_hex_to_bin": "int cgc_ascii_hex_to_bin(char v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (65 <= v2 && 70 >= v2)\n
    {\n
        v1 = v2 + -55;\n
        return v1;\n
    }\n
    if (97 <= v2 && 102 >= v2)\n
    {\n
        v1 = v2 + -87;\n
        return v1;\n
    }\n
    if (48 <= v2 && 57 >= v2)\n
    {\n
        v1 = v2 - 48;\n
        return v1;\n
    }\n
    v1 = 255;\n
    return v1;\n
}\n
", "4204061:sub_40261d": null, "4204064:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4204337:sub_402731": null, "4204352:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x29]\n
    unsigned int v5;  // [bp-0x28]\n
    struct_0 *v6;  // [bp-0x24]\n
    unsigned int *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int *v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < v6->field_28)\n
        v13 = v6->field_28;\n
    if (v13 > 4095)\n
    {\n
        v12 = cgc_allocate_large_chunk();\n
        return v12;\n
    }\n
    v5 = cgc_log_base_two();\n
    v10 = v5 - cgc_log_base_two();\n
    if (v10 >= 8)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (!v11)\n
            v4 = v10 < 8;\n
        if (!(v4 & 1))\n
            break;\n
        v14 = v6;\n
        v15 = v10;\n
        v10 = v15 + 1;\n
        v0 = v13;\n
        v9 = cgc_list_find(&v14[1].padding_0[32 + 8 * v15], v14 + 579);\n
        if (!v9)\n
            v3 = 0;\n
        else\n
            v3 = -5 + v9;\n
        v8 = v3;\n
        v11 = v8;\n
    }\n
    if (!v11)\n
    {\n
        v11 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v7 = v11;\n
        v2 = &v6[1].padding_0[32 + 8 + 8 * v10];\n
        if (!v7)\n
            v1 = 0;\n
        else\n
            v1 = v7 + 1;\n
        cgc_list_remove(v2);\n
    }\n
    cgc_mark_allocated();\n
    if ((*(v11) & -2) > v13)\n
        v11 = cgc_split_chunk(v11);\n
    v12 = cgc_chunk_to_ptr();\n
    return v12;\n
}\n
", "4204910:sub_40296e": null, "4204912:cgc_allocate_large_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_large_chunk(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = v5;\n
    cgc_mark_allocated();\n
    v3 = cgc_chunk_to_ptr();\n
    return v3;\n
}\n
", "4205034:sub_4029ea": null, "4205040:cgc_log_base_two": "int cgc_log_base_two(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4205094:sub_402a26": null, "4205104:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v0 = a1;\n
        if (a0(v2))\n
        {\n
            v3 = v2;\n
            return v3;\n
        }\n
        v2 = *(v2);\n
    }\n
}\n
", "4205228:sub_402aac": null, "4205232:cgc_find_fit": "int cgc_find_fit(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v4 = a0;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4205332:sub_402b14": null, "4205344:cgc_grow_heap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_grow_heap()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0x1000;\n
    cgc_mark_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205454:sub_402b8e": null, "4205456:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4205566:sub_402bfe": null, "4205568:cgc_mark_allocated": "int cgc_mark_allocated(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) | 1;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4205606:sub_402c26": null, "4205616:cgc_split_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_sizes;\n
\n
int cgc_split_chunk(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4 + a0;\n
    v1 = *(v4) & -2;\n
    if ((*(v4) & -2) <= a0 + size_class_sizes)\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
    *(v4) = a0;\n
    cgc_mark_allocated(v4);\n
    *(v2) = v1 - a0;\n
    cgc_mark_allocated(v2);\n
    cgc_chunk_to_ptr();\n
    cgc_free();\n
    v3 = v4;\n
    return v3;\n
}\n
", "4205787:sub_402cdb": null, "4205792:cgc_chunk_to_ptr": "int cgc_chunk_to_ptr(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4205810:sub_402cf2": null, "4205824:cgc_free": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc_ptr_to_chunk();\n
    v4 = v8;\n
    if (!v6)\n
        return v8;\n
    cgc_mark_free();\n
    v4 = cgc_coalesce();\n
    v1 = cgc_log_base_two(*(v4) & -2);\n
    v3 = v1 - cgc_log_base_two(v2->field_28);\n
    if (v3 >= 8)\n
        v3 = 7;\n
    v9 = v2;\n
    v0 = &v9[541].padding_0[24];\n
    v8 = cgc_list_insert_in_order(&v9[1].padding_0[32 + 8 * v3], v4 + 1);\n
    return v8;\n
}\n
", "4206026:sub_402dca": null, "4206032:cgc_ptr_to_chunk": "int cgc_ptr_to_chunk(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4206101:sub_402e15": null, "4206112:cgc_mark_free": "int cgc_mark_free(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) & -2;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4206150:sub_402e46": null, "4206160:cgc_coalesce": "typedef struct struct_0 {\n
    char padding_0[40];\n
    unsigned int field_28;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_1 *v12)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v12 & 4095))\n
        v10 = v12 + -(v12->field_0 & -2);\n
    if (((v12 + (v12->field_-4 & -2)) & 4095))\n
        v11 = v12 + (v12->field_-4 & -2);\n
    if (v10 && !(*(v10) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v10) & -2);\n
        v9 = v5 - cgc_log_base_two(v6->field_28);\n
        if (v9 < 8)\n
        {\n
            v8 = v10;\n
            v4[0] = &v6[1].padding_0[32 + 8 * v9];\n
            if (!v8)\n
                v3 = 0;\n
            else\n
                v3 = v8 + 1;\n
            cgc_list_remove(v4, v3);\n
            *(v10) = (v12->field_-4 & -2) + (*(v10) & -2);\n
            cgc_mark_free(v10);\n
            v12 = v10;\n
        }\n
    }\n
    if (!v11)\n
    {\n
        return v12;\n
    }\n
    else if ((*(v11) & 1))\n
    {\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v11) & -2);\n
        v9 = v2 - cgc_log_base_two(v6->field_28);\n
        if (v9 >= 8)\n
            return v12;\n
        v7 = v11;\n
        v1[0] = &v6[1].padding_0[32 + 8 * v9];\n
        if (!v7)\n
            v0 = 0;\n
        else\n
            v0 = v7 + 1;\n
        cgc_list_remove(v1, v0);\n
        *(v12) = (*(v12) & -2) + (*(v11) & -2);\n
        cgc_mark_free(v12);\n
    }\n
}\n
", "4206713:sub_403079": null, "4206720:cgc_list_insert_in_order": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_in_order(struct struct_0 **v3, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = cgc_list_push_back(v3);\n
            return v4;\n
        }\n
        else if (a1(a0) < 0)\n
        {\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v0 = a0;\n
            v4 = cgc_list_insert_before(v3, v2);\n
            return v4;\n
        }\n
    }\n
}\n
", "4206877:sub_40311d": null, "4206880:cgc_size_cmp": "int cgc_size_cmp(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
\n
    v6 = v8;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4207031:sub_4031b7": null, "4207040:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(v4);\n
    if (v2)\n
    {\n
        v0 = v4;\n
        cgc_memset(v2, 0);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4207129:sub_403219": null, "4207136:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v8)\n
    {\n
        v7 = cgc_malloc(a0);\n
        return v7;\n
    }\n
    v6 = (*(cgc_ptr_to_chunk(v8)) & -2) - 8;\n
    if (a0 == v6)\n
    {\n
        v7 = v8;\n
        return v7;\n
    }\n
    v5 = cgc_malloc(a0);\n
    v2 = v5;\n
    v3 = v8;\n
    if (a0 < v6)\n
        v1 = a0;\n
    else\n
        v1 = v6;\n
    v0 = v1;\n
    cgc_memcpy(v2, v3);\n
    cgc_free(v8);\n
    v7 = v5;\n
    return v7;\n
}\n
", "4207359:sub_4032ff": null, "4207360:cgc_list_insert_before": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_insert_before(struct_1 *v0, struct_3 *a0, unsigned int a1[2])\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4207616:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push_back(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_list_insert_after(v1, v1->field_4);\n
}\n
", "4207675:sub_40343b": null, "4207680:cgc_list_insert_after": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_after(void* *v1, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0)\n
    {\n
        v2 = cgc_list_insert_before(v1, *(a0), a1);\n
        return v2;\n
    }\n
    v2 = cgc_list_insert_before(v1, *(v1), a1);\n
    return v2;\n
}\n
", "4207792:cgc_memcmp": "int cgc_memcmp(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a1 > v1)\n
            v0 = v1[v3] == v1[a0];\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (a1 == v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*((v3 + v1)) <= *((a0 + v1)))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4207996:sub_40357c": null, "4208000:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4208088:sub_4035d8": null, "4208096:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4208166:sub_403626": null, "4208176:cgc_read_all": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = a0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v5, v4 + v3, a1))\n
            break;\n
        if (!v2)\n
            break;\n
        v3 = v2 + v3;\n
        a1 -= v2;\n
    }\n
    return v3;\n
}\n
", "4208335:sub_4036cf": null, "4208336:cgc_recv_all": "int cgc_recv_all(unsigned int v0, unsigned int a0)\n
{\n
    return cgc_read_all(0, v0, a0);\n
}\n
", "4208395:sub_40370b": null, "4208400:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    if (cgc_sendall(1, v3))\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4208486:sub_403766": null, "4208496:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v3;\n
        v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
        if (v2)\n
        {\n
            v5 = -6;\n
            return v5;\n
        }\n
        v4 = v3 + v4;\n
    }\n
}\n
", "4208700:sub_40383c": null, "4208704:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *(v1); v1 += 1)\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4208764:sub_40387c": null, "4208768:cgc_strncmp": "int cgc_strncmp(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xd]\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 0;\n
    if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (a1 > v1)\n
        {\n
            v0 = 0;\n
            if (*((v3 + v1)))\n
            {\n
                v0 = 0;\n
                if (*((a0 + v1)))\n
                    v0 = *((v3 + v1)) == *((a0 + v1));\n
            }\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v1 += 1;\n
    }\n
    if (a1 == v1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*((v3 + v1)) <= *((a0 + v1)))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
}\n
", "4209022:sub_40397e": null, "4209024:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4209179:sub_403a1b": null, "4209184:cgc_vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsnprintf(unsigned int v11, unsigned int a0, char *a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    void* v2;  // [bp-0x4c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x48], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x44]\n
    struct_0 *v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x1d]\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x15]\n
    char *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v12;  // eax\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // eax\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v9 = a1;\n
    if (!v9)\n
        v9 = v1 - 7724;\n
    while (true)\n
    {\n
        while (true)\n
        {\n
            do\n
            {\n
                if (!*(v9))\n
                {\n
                    if (a0 <= 0)\n
                        return v10;\n
                    if (v10 >= a0)\n
                        *((v11 + a0 - 1)) = 0;\n
                    else\n
                        *((v11 + v10)) = 0;\n
                    return v10;\n
                }\n
                if (*(v9) != 126)\n
                {\n
                    if (v10 < a0)\n
                    {\n
                        v12 = v9;\n
                        v9 = v12 + 1;\n
                        v13 = v10;\n
                        v10 = v13 + 1;\n
                        *((v11 + v13)) = *(v12);\n
                    }\n
                    else\n
                    {\n
                        v10 += 1;\n
                        v9 += 1;\n
                    }\n
LABEL_403aca:\n
                    continue;\n
                }\n
                v8 = 0;\n
                v7 = 0;\n
                v6 = 0;\n
                v5 = 0;\n
                v3 = 0;\n
                v2 = 0;\n
                v9 += 1;\n
            } while (!*(v9));\n
            v8 = *(v9);\n
            v0 = v8;\n
            if (v0 == 99)\n
            {\n
                v14 = a2;\n
                a2 = v14 + 1;\n
                v5 = *(v14);\n
                if (v5)\n
                    v7 = cgc_strlen(v5);\n
                else\n
                    v7 = 0;\n
            }\n
            else if (v0 == 110)\n
            {\n
                v15 = a2;\n
                a2 = v15 + 1;\n
                v3 = *(v15);\n
                cgc_int2str(&v4, 32, v3);\n
                v5 = &v4;\n
                v7 = cgc_strlen(v5);\n
            }\n
            else if (v0 == 111)\n
            {\n
                v16 = a2;\n
                a2 = v16 + 1;\n
                v6 = *(v16);\n
                if (!v5)\n
                    v7 = 0;\n
                else\n
                    v7 = 1;\n
            }\n
            v9 += 1;\n
            v2 = a0 - v10;\n
            if (0 <= v2)\n
                break;\n
            v10 = &v10[v7];\n
        }\n
        if (v8 != 110 && !(v8 == 99))\n
            goto LABEL_403cb1;\n
        if (v7 <= v2)\n
        {\n
            cgc_memcpy(v11 + v10, v5, v7);\n
            v10 = &v10[v7];\n
        }\n
        else\n
        {\n
            cgc_memcpy(v11 + v10, v5, v2);\n
            v10 = v2 + v10;\n
        }\n
LABEL_403cb1:\n
        if (v8 == 111 && v7 <= v2)\n
        {\n
            *((v11 + v10)) = v6;\n
            v10 = &v10[v7];\n
        }\n
        goto LABEL_403aca;\n
    }\n
}\n
", "4209972:sub_403d34": null, "4209984:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, char *a1)\n
{\n
    char **v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vsnprintf(v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4210064:cgc_shift_relation": "int cgc_shift_relation()\n
{\n
    void* v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    v2 = 10;\n
    v1 = 0;\n
    for (v0 = 0; v0 < v2; LABEL_403e86:\n
)\n
    {\n
        if (*((v6 + (v0 << 3) + 40)) && v1 < v0)\n
        {\n
            *((v6 + v1 * 8 + 40)) = *((v6 + v0 * 8 + 40));\n
            *((v6 + v0 * 8 + 40)) = 0;\n
            *((v6 + v1 * 8 + 44)) = *((v6 + v0 * 8 + 44));\n
            *((v6 + v0 * 8 + 44)) = 0;\n
            v0 = v1 + 1;\n
            v1 = v0;\n
            goto LABEL_403e86;\n
        }\n
        if (*((v6 + (v0 << 3) + 40)) && v1 == v0)\n
        {\n
            v0 += 1;\n
            v1 += 1;\n
            goto LABEL_403e86;\n
        }\n
        v0 += 1;\n
    }\n
    v2 = 10;\n
    v1 = 0;\n
    for (v0 = 0; v0 < v2; LABEL_403f65:\n
)\n
    {\n
        if (*((v6 + (v0 << 3) + 120)) && v1 < v0)\n
        {\n
            *((v6 + v1 * 8 + 120)) = *((v6 + v0 * 8 + 120));\n
            *((v6 + v0 * 8 + 120)) = 0;\n
            *((v6 + v1 * 8 + 124)) = *((v6 + v0 * 8 + 124));\n
            *((v6 + v0 * 8 + 124)) = 0;\n
            v0 = v1 + 1;\n
            v1 = v0;\n
            goto LABEL_403f65;\n
        }\n
        if (*((v6 + (v0 << 3) + 120)) && v1 == v0)\n
        {\n
            v0 += 1;\n
            v1 += 1;\n
            goto LABEL_403f65;\n
        }\n
        v0 += 1;\n
    }\n
    v2 = 2;\n
    v1 = 0;\n
    for (v0 = 0; v0 < v2; LABEL_40405c:\n
)\n
    {\n
        if (*((v6 + (v0 << 3) + 216)) && v1 < v0)\n
        {\n
            *((v6 + v1 * 8 + 216)) = *((v6 + v0 * 8 + 216));\n
            *((v6 + v0 * 8 + 216)) = 0;\n
            *((v6 + v1 * 8 + 220)) = *((v6 + v0 * 8 + 220));\n
            *((v6 + v0 * 8 + 220)) = 0;\n
            v0 = v1 + 1;\n
            v1 = v0;\n
            goto LABEL_40405c;\n
        }\n
        if (*((v6 + (v0 << 3) + 216)) && v1 == v0)\n
        {\n
            v0 += 1;\n
            v1 += 1;\n
            goto LABEL_40405c;\n
        }\n
        v0 += 1;\n
    }\n
    v2 = 2;\n
    v1 = 0;\n
    for (v0 = 0; v0 < v2; LABEL_404153:\n
)\n
    {\n
        if (*((v6 + (v0 << 3) + 240)) && v1 < v0)\n
        {\n
            *((v6 + v1 * 8 + 240)) = *((v6 + v0 * 8 + 240));\n
            *((v6 + v0 * 8 + 240)) = 0;\n
            *((v6 + v1 * 8 + 244)) = *((v6 + v0 * 8 + 244));\n
            *((v6 + v0 * 8 + 244)) = 0;\n
            v0 = v1 + 1;\n
            v1 = v0;\n
            goto LABEL_404153;\n
        }\n
        if (*((v6 + (v0 << 3) + 240)) && v1 == v0)\n
        {\n
            v0 += 1;\n
            v1 += 1;\n
            goto LABEL_404153;\n
        }\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211042:sub_404162": null, "4211056:cgc_new_person": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
    char padding_6[250];\n
    unsigned int field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_new_person(unsigned short *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned short *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x10]\n
    struct_0 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = v5;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        v4 = v3;\n
        return v4;\n
    }\n
    v3 = cgc_calloc(264);\n
    if (!v3)\n
        cgc__terminate();\n
    v3->field_0 = *(&v2);\n
    v2 += 2;\n
    v3->field_4 = *(v2);\n
    v2 += 1;\n
    v1 = 10;\n
    cgc_memcpy(&v3->padding_6[2], v2, v1);\n
    v2 = v1 + v2;\n
    cgc_memcpy(&v3->padding_6[12], v2, v1);\n
    v2 = v1 + v2;\n
    cgc_memcpy(&v3->padding_6[22], v2, v1);\n
    v2 = v1 + v2;\n
    v3->field_100 = v0 - 20644;\n
    v4 = v3;\n
    return v4;\n
}\n
", "4211379:sub_4042b3": null, "4211392:cgc_get_person_by_id": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[256];\n
    struct struct_0 *field_104;\n
} struct_0;\n
\n
int cgc_get_person_by_id(struct_0 *v3, unsigned int a0)\n
{\n
    char v0;  // [bp-0xd]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (v3 && a0)\n
    {\n
        v1 = v3;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v1)\n
                v0 = a0 != v1->field_0;\n
            if (!(v0 & 1))\n
                break;\n
            v1 = *((v1 + 260));\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211521:sub_404341": null, "4211536:cgc_add_person_to_list": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[256];\n
    struct struct_0 *field_104;\n
} struct_0;\n
\n
int cgc_add_person_to_list(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v2->field_0;\n
    if (!v1)\n
    {\n
        v3 = v2;\n
        v3->field_0 = a0;\n
        return v2;\n
    }\n
    for (v0 = v2->field_0; v1; v1 = *((v1 + 260)))\n
    {\n
        v0 = v1;\n
    }\n
    v3 = v0;\n
    *((v3 + 260)) = a0;\n
    return v0;\n
}\n
", "4211644:sub_4043bc": null, "4211648:cgc_count_people": "typedef struct struct_0 {\n
    char padding_0[260];\n
    struct struct_0 *field_104;\n
} struct_0;\n
\n
int cgc_count_people(struct_0 *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v1; v1 = *((v1 + 260)))\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4211707:sub_4043fb": null, "4211712:cgc_is_search_locked": "extern unsigned int _GLOBAL_OFFSET_TABLE_[38];\n
\n
int cgc_is_search_locked(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[38];  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1[36])\n
        {\n
            v0 = -14;\n
            cgc__terminate();\n
            return cgc_set_search_lock();\n
        }\n
        if (v3 == *(*((v1[37] + (v2 << 3)))))\n
            return *((v1[37] + v2 * 8 + 4)) & a0;\n
        v2 += 1;\n
    }\n
}\n
", "4211856:cgc_set_search_lock": "extern unsigned int _GLOBAL_OFFSET_TABLE_[38];\n
\n
int cgc_set_search_lock(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[38];  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4[38];  // eax\n
    unsigned int v6;  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v1[36])\n
        {\n
            v0 = -14;\n
            cgc__terminate();\n
            return cgc_free_search_map();\n
        }\n
        if (v3 == *(*((v1[37] + (v2 << 3)))))\n
        {\n
            v4 = v1;\n
            v6 = v4[37];\n
            *((v6 + v2 * 8 + 4)) = *((v4[37] + v2 * 8 + 4)) | a0;\n
            return v6;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4212016:cgc_free_search_map": "typedef struct struct_0 {\n
    char padding_0[148];\n
    unsigned int field_94;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_search_map;\n
\n
int cgc_free_search_map()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_free(cgc_search_map);\n
    v0->field_94 = 0;\n
    v4 = v1;\n
    return v0;\n
}\n
", "4212071:sub_404567": null, "4212080:cgc_new_search_map": "typedef struct struct_1 {\n
    char padding_0[140];\n
    struct struct_0 *field_8c;\n
    unsigned int field_90;\n
    unsigned int field_94;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[260];\n
    struct struct_0 *field_104;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_total_person_count;\n
\n
int cgc_new_search_map()\n
{\n
    struct_1 *v0;  // [bp-0x1c]\n
    unsigned int *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (cgc_total_person_count > 536870910)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (v0->field_94)\n
        cgc_free_search_map();\n
    v0->field_94 = cgc_calloc(v0->field_90 * 8);\n
    if (!v0->field_94)\n
        cgc__terminate();\n
    v2 = v0->field_8c;\n
    for (v1 = 0; v2; v2 = *((v2 + 260)))\n
    {\n
        v5 = v1;\n
        v1 = v5 + 1;\n
        *((v0->field_94 + v5 * 8)) = v2;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4212314:sub_40465a": null, "4212320:cgc_degrees_of_separation": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_degrees_of_separation(unsigned int v5[64], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (v5 && a0)\n
    {\n
        if (v5 != a0)\n
        {\n
            if (!cgc_is_search_locked(v5[0], 16))\n
            {\n
                cgc_set_search_lock(v5[0], 16);\n
                for (v2 = 0; v2 < 10; v2 += 1)\n
                {\n
                    v3 = cgc_degrees_of_separation(v5[11 + 2 * v2], a0);\n
                    if (0 <= v3)\n
                    {\n
                        v4 = v3 + 1;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            if (!cgc_is_search_locked(v5[0], 32))\n
            {\n
                cgc_set_search_lock(v5[0], 32);\n
                for (v1 = 0; v1 < 10; v1 += 1)\n
                {\n
                    v3 = cgc_degrees_of_separation(v5[31 + 2 * v1], a0);\n
                    if (0 <= v3)\n
                    {\n
                        v4 = v3 + 1;\n
                        return v4;\n
                    }\n
                }\n
            }\n
            if (!cgc_is_search_locked(v5[0], 2))\n
            {\n
                cgc_set_search_lock(v5[0], 2);\n
                v3 = cgc_degrees_of_separation(v5[51], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
            }\n
            if (!cgc_is_search_locked(v5[0], 4))\n
            {\n
                cgc_set_search_lock(v5[0], 4);\n
                v3 = cgc_degrees_of_separation(v5[53], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
            }\n
            if (!cgc_is_search_locked(v5[0], 8))\n
            {\n
                cgc_set_search_lock(v5[0], 8);\n
                v3 = cgc_degrees_of_separation(v5[55], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
                v3 = cgc_degrees_of_separation(v5[57], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
            }\n
            if (!cgc_is_search_locked(v5[0], 64))\n
            {\n
                cgc_set_search_lock(v5[0], 64);\n
                v3 = cgc_degrees_of_separation(v5[59], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
            }\n
            if (!cgc_is_search_locked(v5[0], 128))\n
            {\n
                cgc_set_search_lock(v5[0], 128);\n
                v3 = cgc_degrees_of_separation(v5[61], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
                v3 = cgc_degrees_of_separation(v5[63], a0);\n
                if (0 <= v3)\n
                {\n
                    v4 = v3 + 1;\n
                    return v4;\n
                }\n
            }\n
            v4 = -1;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = -1;\n
    return v4;\n
}\n
", "4213460:sub_404ad4": null, "4213472:cgc_can_have_more_biological_children": "int cgc_can_have_more_biological_children(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 10;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*((v3 + (v0 << 3) + 120)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4213571:sub_404b43": null, "4213584:cgc_set_biological_child": "int cgc_set_biological_child(unsigned int *v3, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 10;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= v1)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        if (!*((a0 + (v0 << 3) + 120)))\n
        {\n
            *((a0 + v0 * 8 + 120)) = *(v3);\n
            *((a0 + v0 * 8 + 124)) = v3;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4213714:sub_404bd2": null, "4213728:cgc_set_biological_mother": "int cgc_set_biological_mother(unsigned int v0[52], unsigned int *a0)\n
{\n
    v0[50] = *(a0);\n
    v0[51] = a0;\n
    return v0;\n
}\n
", "4213765:sub_404c05": null, "4213776:cgc_set_biological_father": "int cgc_set_biological_father(unsigned int v0[54], unsigned int *a0)\n
{\n
    v0[52] = *(a0);\n
    v0[53] = a0;\n
    return v0;\n
}\n
", "4213813:sub_404c35": null, "4213824:cgc_unset_adopted_child": "typedef struct struct_1 {\n
    char padding_0[256];\n
    struct struct_0 *field_100;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_unset_adopted_child(unsigned int *v4, struct_1 *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 10;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= v2)\n
        {\n
            v3 = -1;\n
            return v3;\n
        }\n
        else if (*(v4) != *((40 + &a0->padding_0[0] + 0x8 * v1)))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            *(&a0->padding_0[40 + 8 * v1]) = 0;\n
            *(&a0->padding_0[44 + 8 * v1]) = 0;\n
            a0->field_100();\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4213996:sub_404cec": null, "4214000:cgc_can_have_more_adopted_children": "int cgc_can_have_more_adopted_children(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 10;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (*((v3 + (v0 << 3) + 40)))\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4214099:sub_404d53": null, "4214112:cgc_set_adopted_child": "int cgc_set_adopted_child(unsigned int *v3, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v1 = 10;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= v1)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        if (!*((a0 + (v0 << 3) + 40)))\n
        {\n
            *((a0 + v0 * 8 + 40)) = *(v3);\n
            *((a0 + v0 * 8 + 44)) = v3;\n
            v2 = 0;\n
            return v2;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4214242:sub_404de2": null, "4214256:cgc_set_adopting_parent": "int cgc_set_adopting_parent(unsigned int v0, unsigned int *a0, unsigned int a1)\n
{\n
    *((v0 + a1 * 8 + 216)) = *(a0);\n
    *((v0 + a1 * 8 + 220)) = a0;\n
    return v0;\n
}\n
", "4214304:cgc_separate_two_persons": "int cgc_separate_two_persons(unsigned int v1[66], unsigned int a0[66])\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!a0[0])\n
    {\n
        v0 = -1;\n
        return v0;\n
    }\n
    if (!v1[62])\n
    {\n
        v1[62] = a0[0];\n
        v1[63] = a0;\n
    }\n
    else\n
    {\n
        v1[64] = a0[0];\n
        v1[65] = a0;\n
    }\n
    if (!a0[62])\n
    {\n
        a0[62] = v1[0];\n
        a0[63] = v1;\n
    }\n
    else\n
    {\n
        a0[64] = v1[0];\n
        a0[65] = v1;\n
    }\n
    v1[58] = 0;\n
    v1[59] = 0;\n
    a0[58] = 0;\n
    a0[59] = 0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4214554:sub_404f1a": null, "4214560:cgc_union_two_persons": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[228];\n
    unsigned int field_e8;\n
    unsigned int field_ec[66];\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_union_two_persons(struct_0 *v2, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    if (v2->field_e8)\n
    {\n
        v1 = cgc_separate_two_persons(v2, v2->field_ec);\n
        if (v1 == -1)\n
            return v1;\n
    }\n
    v2->field_e8 = a0->field_0;\n
    v2->field_ec = &a0;\n
    if (a0->field_e8)\n
    {\n
        v1 = cgc_separate_two_persons(a0, a0->field_ec);\n
        if (v1 == -1)\n
            return v1;\n
    }\n
    a0->field_e8 = v2->field_0;\n
    a0->field_ec = &v2;\n
    return v1;\n
}\n
", "4214798:sub_40500e": null, "4214800:cgc_find_are_related": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_are_related(unsigned int v4[64], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    v1 = cgc_new_search_map();\n
    if (v1 != -1)\n
    {\n
        v1 = cgc_degrees_of_separation(v4, a0);\n
        cgc_free_search_map();\n
        if (0 > v1)\n
        {\n
            v2 = 335544385;\n
            return v2;\n
        }\n
        else if (0 <= v1)\n
        {\n
            v2 = 268435457;\n
            return v2;\n
        }\n
    }\n
    v2 = -1;\n
    return v2;\n
}\n
", "4214966:sub_4050b6": null, "4214976:cgc_cmd_add_person": "typedef struct struct_0 {\n
    char padding_0[144];\n
    unsigned int field_90;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_add_person(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    unsigned short *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    if (v5 != 36)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v1 = cgc_calloc(36);\n
    if (!v1)\n
        cgc__terminate();\n
    if (cgc_recv_all(v1, 36) != 36)\n
        cgc__terminate();\n
    v2 = cgc_new_person(v1);\n
    if (!v2)\n
    {\n
        v3 = -1;\n
    }\n
    else\n
    {\n
        cgc_add_person_to_list(&v0->padding_0[140], v2);\n
        v6 = v0;\n
        v6->field_90 = v6->field_90 + 1;\n
    }\n
    cgc_free(v1);\n
    v4 = v3;\n
    return v4;\n
}\n
", "4215252:sub_4051d4": null, "4215264:cgc_cmd_set_biological_child": "typedef struct struct_1 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_set_biological_child(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_1 *v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int v4[54];  // [bp-0x20]\n
    unsigned int v5[3];  // [bp-0x1c]\n
    unsigned int v6[3];  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = 0;\n
    v7 = 12;\n
    if (v10 != v7)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    v6[0] = cgc_calloc(v7);\n
    if (!v6)\n
        cgc__terminate();\n
    v0 = v7;\n
    if (v0 != cgc_recv_all(v6, v7))\n
        cgc__terminate();\n
    v5[0] = v6;\n
    v4[0] = cgc_get_person_by_id(v1->field_8c, v5[0]);\n
    v3 = cgc_get_person_by_id(v1->field_8c, v5[1]);\n
    v2 = cgc_get_person_by_id(v1->field_8c, v5[2]);\n
    if (!v4)\n
    {\n
LABEL_405344:\n
        v8 = -1;\n
    }\n
    else\n
    {\n
        if (0 == v3)\n
            goto LABEL_405344;\n
        if (0 == v2)\n
            goto LABEL_405344;\n
        if (0 == cgc_can_have_more_biological_children(v3))\n
            goto LABEL_405344;\n
        if (0 == cgc_can_have_more_biological_children(v2))\n
            goto LABEL_405344;\n
        v8 = cgc_set_biological_child(v4, v3);\n
        if (v8 != -1)\n
        {\n
            cgc_set_biological_mother(v4, v3);\n
            v8 = cgc_set_biological_child(v4, v2);\n
            if (v8 != -1)\n
                cgc_set_biological_father(v4, v2);\n
        }\n
    }\n
    cgc_free(v6);\n
    v9 = v8;\n
    return v9;\n
}\n
", "4215789:sub_4053ed": null, "4215792:cgc_cmd_set_adopted_child": "typedef struct struct_2 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[216];\n
    unsigned int field_d8;\n
    void* field_dc;\n
    unsigned int field_e0;\n
    void* field_e4;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_set_adopted_child(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    struct_2 *v1;  // [bp-0x2c]\n
    unsigned int *v2;  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    struct_1 *v4;  // [bp-0x20]\n
    unsigned int v5[3];  // [bp-0x1c]\n
    unsigned int v6[3];  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = 0;\n
    v7 = 12;\n
    if (v10 != v7)\n
    {\n
        v9 = -1;\n
        return v9;\n
    }\n
    v6[0] = cgc_calloc(v7);\n
    if (!v6)\n
        cgc__terminate();\n
    v0 = v7;\n
    if (v0 != cgc_recv_all(v6, v7))\n
        cgc__terminate();\n
    v5[0] = v6;\n
    v4 = cgc_get_person_by_id(v1->field_8c, v5[0]);\n
    v3 = cgc_get_person_by_id(v1->field_8c, v5[1]);\n
    v2 = cgc_get_person_by_id(v1->field_8c, v5[2]);\n
    if (!v4)\n
    {\n
LABEL_40556a:\n
        v8 = -1;\n
    }\n
    else\n
    {\n
        if (!v3 && 0 == v2)\n
            goto LABEL_40556a;\n
        if (v3 && 0 == cgc_can_have_more_adopted_children(v3))\n
            goto LABEL_40556a;\n
        if (!v2)\n
        {\n
LABEL_405576:\n
            if (v4->field_d8)\n
            {\n
                v8 = cgc_unset_adopted_child(v4, v4->field_dc);\n
                if (-1 == v8)\n
                    goto LABEL_4056b1;\n
            }\n
            if (v4->field_e0)\n
            {\n
                v8 = cgc_unset_adopted_child(v4, v4->field_e4);\n
                if (-1 == v8)\n
                    goto LABEL_4056b1;\n
            }\n
            if (v3)\n
            {\n
                v8 = cgc_set_adopted_child(v4, v3);\n
                if (-1 == v8)\n
                    goto LABEL_4056b1;\n
                cgc_set_adopting_parent(v4, v3, 0);\n
            }\n
            if (v2)\n
            {\n
                v8 = cgc_set_adopted_child(v4, v2);\n
                if (-1 == v8)\n
                    goto LABEL_4056b1;\n
                cgc_set_adopting_parent(v4, v2, 1);\n
            }\n
        }\n
        else\n
        {\n
            if (!(0 == cgc_can_have_more_adopted_children(v2)))\n
                goto LABEL_405576;\n
            goto LABEL_40556a;\n
        }\n
    }\n
LABEL_4056b1:\n
    cgc_free(v6);\n
    v9 = v8;\n
    return v9;\n
}\n
", "4216526:sub_4056ce": null, "4216528:cgc_cmd_set_union": "typedef struct struct_1 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_set_union(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x24]\n
    void* v3;  // [bp-0x20]\n
    unsigned int v4[2];  // [bp-0x1c]\n
    unsigned int v5[2];  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 8;\n
    if (v9 != v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5[0] = cgc_calloc(v6);\n
    if (!v5)\n
        cgc__terminate();\n
    v0 = v6;\n
    if (v0 != cgc_recv_all(v5, v6))\n
        cgc__terminate();\n
    v4[0] = v5;\n
    v3 = cgc_get_person_by_id(v1->field_8c, v4[0]);\n
    v2 = cgc_get_person_by_id(v1->field_8c, v4[1]);\n
    if (!v3)\n
    {\n
LABEL_4057d7:\n
        v7 = -1;\n
    }\n
    else\n
    {\n
        if (0 == v2)\n
            goto LABEL_4057d7;\n
        v7 = cgc_union_two_persons(v3, v2);\n
    }\n
    cgc_free(v5);\n
    v8 = v7;\n
    return v8;\n
}\n
", "4216856:sub_405818": null, "4216864:cgc_cmd_set_deceased": "typedef struct struct_3 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned short field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[6];\n
    unsigned short field_6;\n
} struct_2;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_set_deceased(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_3 *v1;  // [bp-0x28]\n
    struct_2 *v2;  // [bp-0x24]\n
    struct_0 *v3;  // [bp-0x20]\n
    struct_0 *v4;  // [bp-0x1c]\n
    struct_0 *v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 6;\n
    if (v9 != v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5 = cgc_calloc(v6);\n
    if (!v5)\n
        cgc__terminate();\n
    v0 = v6;\n
    if (v0 != cgc_recv_all(v5, v6))\n
        cgc__terminate();\n
    v4 = v5;\n
    v3 = v5;\n
    v2 = cgc_get_person_by_id(v1->field_8c, v4->field_0);\n
    if (!v2)\n
        v7 = -1;\n
    else\n
        v2->field_6 = v3->field_4;\n
    cgc_free(v5);\n
    v8 = v7;\n
    return v8;\n
}\n
", "4217147:sub_40593b": null, "4217152:cgc_cmd_set_separated": "typedef struct struct_1 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_set_separated(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x28]\n
    unsigned int v2[66];  // [bp-0x24]\n
    unsigned int v3[66];  // [bp-0x20]\n
    unsigned int v4[2];  // [bp-0x1c]\n
    unsigned int v5[2];  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 8;\n
    if (v9 != v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5[0] = cgc_calloc(v6);\n
    if (!v5)\n
        cgc__terminate();\n
    v0 = v6;\n
    if (v0 != cgc_recv_all(v5, v6))\n
        cgc__terminate();\n
    v4[0] = v5;\n
    v3[0] = cgc_get_person_by_id(v1->field_8c, v4[0]);\n
    v2[0] = cgc_get_person_by_id(v1->field_8c, v4[1]);\n
    if (!v3)\n
    {\n
LABEL_405a47:\n
        v7 = -1;\n
    }\n
    else\n
    {\n
        if (0 == v2)\n
            goto LABEL_405a47;\n
        v7 = cgc_separate_two_persons(v3, v2);\n
    }\n
    cgc_free(v5);\n
    v8 = v7;\n
    return v8;\n
}\n
", "4217480:sub_405a88": null, "4217488:cgc_cmd_are_related": "typedef struct struct_1 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_are_related(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[64];  // [bp-0x20]\n
    unsigned int v4[2];  // [bp-0x1c]\n
    unsigned int v5[2];  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 8;\n
    if (v9 != v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5[0] = cgc_calloc(v6);\n
    if (!v5)\n
        cgc__terminate();\n
    v0 = v6;\n
    if (v0 != cgc_recv_all(v5, v6))\n
        cgc__terminate();\n
    v4[0] = v5;\n
    v3[0] = cgc_get_person_by_id(v1->field_8c, v4[0]);\n
    v2 = cgc_get_person_by_id(v1->field_8c, v4[1]);\n
    if (!v3)\n
    {\n
LABEL_405b97:\n
        v7 = -1;\n
    }\n
    else\n
    {\n
        if (0 == v2)\n
            goto LABEL_405b97;\n
        v7 = cgc_find_are_related(v3, v2);\n
        if (v7 != 268435457 && !(335544385 == v7))\n
            goto LABEL_405bf4;\n
        cgc_send(&v7, 4);\n
        v7 = 0;\n
LABEL_405bf4:\n
    }\n
    cgc_free(v5);\n
    v8 = v7;\n
    return v8;\n
}\n
", "4217878:sub_405c16": null, "4217888:cgc_cmd_degrees_of_separation": "typedef struct struct_1 {\n
    char padding_0[140];\n
    void* field_8c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cmd_degrees_of_separation(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_1 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[64];  // [bp-0x20]\n
    unsigned int v4[2];  // [bp-0x1c]\n
    unsigned int v5[2];  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 8;\n
    if (v9 != v6)\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v5[0] = cgc_calloc(v6);\n
    if (!v5)\n
        cgc__terminate();\n
    v0 = v6;\n
    if (v0 != cgc_recv_all(v5, v6))\n
        cgc__terminate();\n
    v4[0] = v5;\n
    v3[0] = cgc_get_person_by_id(v1->field_8c, v4[0]);\n
    v2 = cgc_get_person_by_id(v1->field_8c, v4[1]);\n
    if (!v3)\n
    {\n
LABEL_405d27:\n
        v7 = -1;\n
    }\n
    else\n
    {\n
        if (0 == v2)\n
            goto LABEL_405d27;\n
        v7 = cgc_new_search_map();\n
        if (v7 != -1)\n
        {\n
            v7 = cgc_degrees_of_separation(v3, v2);\n
            cgc_free_search_map();\n
            cgc_send(&v7, 4);\n
            v7 = 0;\n
        }\n
    }\n
    cgc_free(v5);\n
    v8 = v7;\n
    return v8;\n
}\n
", "4218283:sub_405dab": null, "4218288:cgc_gen_result_bufs": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gen_result_bufs()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    char *v4;  // eax, Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
    char *v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0x4347c000;\n
    v2 = 0x4347c000;\n
    for (v1 = 0; v1 < 4095; v1 = v4)\n
    {\n
        v5 = v0;\n
        v6 = v1 & 3;\n
        v6[152 + v5] = v6[152 + v5] ^ v2[v1];\n
        v7 = v1 + 1 & 3;\n
        *((v5 + v7 + 156)) = *((v5 + v7 + 156)) ^ v2[1 + v1];\n
        v4 = v1 + 2;\n
    }\n
    return v4;\n
}\n
", "4218431:sub_405e3f": null, "4218432:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    cgc_gen_result_bufs();\n
    while (true)\n
    {\n
        if (cgc_recv_all(&v1, 8) != 8)\n
            cgc__terminate();\n
        if (!cgc_memcmp(v0 - 7723, &v1, 4))\n
        {\n
            v4 = cgc_cmd_add_person(*(&v2));\n
        }\n
        else if (!cgc_memcmp(v0 - 7719, &v1, 4))\n
        {\n
            v4 = cgc_cmd_set_biological_child(*(&v2));\n
        }\n
        else if (!cgc_memcmp(v0 - 7715, &v1, 4))\n
        {\n
            v4 = cgc_cmd_set_adopted_child(*(&v2));\n
        }\n
        else if (!cgc_memcmp(v0 - 7711, &v1, 4))\n
        {\n
            v4 = cgc_cmd_set_union(*(&v2));\n
        }\n
        else if (!cgc_memcmp(v0 - 7707, &v1, 4))\n
        {\n
            v4 = cgc_cmd_set_deceased(*(&v2));\n
        }\n
        else if (!cgc_memcmp(v0 - 7703, &v1, 4))\n
        {\n
            v4 = cgc_cmd_set_separated(*(&v2));\n
        }\n
        else if (!cgc_memcmp(v0 - 7699, &v1, 4))\n
        {\n
            v4 = cgc_cmd_are_related(*(&v2));\n
        }\n
        else if (cgc_memcmp(v0 - 7695, &v1, 4))\n
        {\n
            v4 = -1;\n
        }\n
        else\n
        {\n
            v4 = cgc_cmd_degrees_of_separation(*(&v2));\n
        }\n
        if (v4)\n
            break;\n
        cgc_send(v0 + 152, 4);\n
    }\n
    cgc_send(v0 + 156, 4);\n
    v9 = v6;\n
    return 0;\n
}\n
", "4219204:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}