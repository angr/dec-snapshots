{"4202496:_init": "extern struct_0 *g_40a2b8;\n
\n
int _init()\n
{\n
    if (g_40a2b8)\n
    {\n
        g_40a2b8();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_cos": "// attributes: PLT stub\n
int cgc_cos()\n
{\n
    ::libc.so.0::cgc_cos();\n
    return;\n
}\n
", "4202640:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202656:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202672:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202688:cgc_sin": "// attributes: PLT stub\n
int cgc_sin()\n
{\n
    ::libc.so.0::cgc_sin();\n
    return;\n
}\n
", "4202704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202720:sub_4020e0": "int sub_4020e0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202726:sub_4020e6": null, "4202736:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202779:sub_40211b": null, "4202780:sub_40211c": "int sub_40211c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202784:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202788:sub_402124": null, "4202800:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33167;\n
    v6 = v5 + 27;\n
    v7 = v5 + 27;\n
    if (v7 == v6)\n
        return v5 + 27;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202851:sub_402163": "int sub_402163()\n
{\n
}\n
", "4202857:sub_402169": "int sub_402169()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202864:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33103;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 27;\n
    v9 = (v6 + 27 - (v6 + 27) >> 31) + (27 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202935:sub_4021b7": "int sub_4021b7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202944:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a2b4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a2b4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4203019:sub_40220b": "int sub_40220b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203024:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203033:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203037:sub_40221d": null, "4203040:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203094:sub_402256": null, "4203104:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203158:sub_402296": null, "4203168:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203222:sub_4022d6": null, "4203232:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203328:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203424:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203478:sub_4023d6": null, "4203488:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203562:sub_40242a": null, "4203568:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203642:sub_40247a": null, "4203648:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203742:sub_4024de": null, "4203744:cgc_receive_bytes": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a0)\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            if (cgc_receive(0, v5 + v3, a0 - v3))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (v2)\n
            {\n
                v3 = v2 + v3;\n
            }\n
            else\n
            {\n
                v4 = 0;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4203920:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v3)\n
        {\n
            if (v2 == a0)\n
                return v4;\n
            v4[v5] = v2;\n
            v4 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204134:sub_402666": null, "4204144:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = lookaside;\n
    if (!v5)\n
        return lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 112));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 112)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204481:sub_4027c1": null, "4204496:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[112];\n
    unsigned int field_70;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[76].padding_0[76]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_70)\n
    {\n
        v7 = v1;\n
        v7->field_70 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204721:sub_4028b1": null, "4204736:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204807:sub_402907": null, "4204816:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[112];\n
    struct struct_1 *field_70;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_70);\n
    v3[0] = v1->field_70;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4205033:sub_4029e9": null, "4205040:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4205124:sub_402a44": null, "4205136:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[112];\n
    struct struct_0 *field_70;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_70; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4205417:sub_402b69": null, "4205424:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205532:sub_402bdc": null, "4205536:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 112)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 112));\n
        *((v6 + v3 * 4 + 112)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205821:sub_402cfd": null, "4205824:cgc_round": null, "4205970:sub_402d92": null, "4205984:cgc_floor": null, "4206140:sub_402e3c": null, "4206144:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[756];\n
    unsigned int field_2f4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_2f4 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[628 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[628 + 4 * (v2 + 1 & 31)]);\n
        *((628 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4206367:sub_402f1f": null, "4206368:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4206415:sub_402f4f": null, "4206416:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[628 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4206699:sub_40306b": null, "4206704:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4206892:sub_40312c": null, "4206896:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4206997:sub_403195": null, "4207008:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4207042:sub_4031c2": null, "4207056:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            if (!*(&v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v7 = v4;\n
            v8 = *((v7 + 0x100)) - *(&v2);\n
            *((v7 + 0x100)) = v8;\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4207326:sub_4032de": null, "4207328:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4207420:sub_40333c": null, "4207424:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4207612:sub_4033fc": null, "4207616:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4207919:sub_40352f": null, "4207920:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_403a69:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_403a69;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 8804)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4209276:sub_403a7c": null, "4209280:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4209338:sub_403aba": null, "4209344:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4209413:sub_403b05": null, "4209424:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4209563:sub_403b9b": null, "4209568:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if (!(a2 & 8))\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
        else\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209840:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4210496:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4212912:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213578:sub_404b4a": null, "4213584:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4214124:sub_404d6c": null, "4214128:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4214175:sub_404d9f": null, "4214176:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4214213:sub_404dc5": null, "4214224:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4214461:sub_404ebd": null, "4214464:cgc_atof": null, "4214749:sub_404fdd": null, "4214752:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4214828:sub_40502c": null, "4214832:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4214969:sub_4050b9": null, "4214976:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215112:sub_405148": null, "4215120:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(v7[0]); v7 = &v7[1]);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = &v7[1];\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = &v7[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_40526a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_40526a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4052bd;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_4052bd;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4052bd:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_40526a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (cgc_isupper(v1))\n
                v1 -= 55;\n
            else\n
                v1 -= 87;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_4053f5:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_4053fa:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = &v7[1];\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_4053fa;\n
            goto LABEL_4053f5;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4215891:sub_405453": null, "4215904:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215963:sub_40549b": null, "4215968:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4216023:sub_4054d7": null, "4216032:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4216187:sub_40557b": null, "4216192:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4216350:sub_40561e": null, "4216352:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[624];\n
    struct struct_1 *field_270;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_270)\n
        {\n
            v6 = v1->field_270;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_270 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_270 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_270 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_270 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4216871:sub_405827": null, "4216880:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4217230:sub_40598e": null, "4217232:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217415:sub_405a47": null, "4217424:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v4];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            if (v1 > v0)\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217577:sub_405ae9": null, "4217584:cgc_Push": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Push(unsigned int *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        return v3;\n
    }\n
    else if (!v3)\n
    {\n
        return v3;\n
    }\n
    else\n
    {\n
        v1 = cgc_malloc(10);\n
        v4 = cgc_memcpy(v1, a0, 10);\n
        for (v2 = 0; v2 <= 409; v2 = v4)\n
        {\n
            if (*((v3 + 0x4 * v2)))\n
            {\n
                v4 = v2 + 1;\n
            }\n
            else\n
            {\n
                v4 = v3;\n
                *((v4 + v2 * 4)) = v1;\n
                break;\n
            }\n
        }\n
        return v4;\n
    }\n
}\n
", "4217772:sub_405bac": null, "4217776:cgc_RunTask": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RunTask(unsigned int *v4, struct struct_0 **a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned short v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xe], Other Possible Types: unsigned short\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned short v6;  // dx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v4;\n
    *(&v3) = 409;\n
    v2 = 0;\n
    while (true)\n
    {\n
        *(&v5) = v3;\n
        v3 = v5 - 1;\n
        if (!v5)\n
            break;\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        v0 = a1;\n
        v5 = a0(v4[v6]);\n
    }\n
    return v5;\n
}\n
", "4217901:sub_405c2d": null, "4217904:cgc_ReadFile": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReadFile(unsigned int *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0x1000;\n
    v7 = cgc_seed_prng(*(0x4347c000));\n
    v1 = 0;\n
    while (v3 > 0)\n
    {\n
        v2 = cgc_malloc(10);\n
        v2->field_0 = cgc_prng();\n
        v2->field_2 = cgc_prng();\n
        v2->field_4 = cgc_prng();\n
        v2->field_6 = cgc_prng();\n
        v2->field_7 = cgc_prng();\n
        v2->field_8 = cgc_prng();\n
        v2->field_9 = cgc_prng();\n
        cgc_Push(v5, v2);\n
        v3 -= 10;\n
        v7 = cgc_free(v2);\n
    }\n
    v8 = v4;\n
    return v7;\n
}\n
", "4218158:sub_405d2e": null, "4218160:cgc_NewFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_NewFile(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0xe], Other Possible Types: unsigned short\n
    unsigned short v3;  // [bp-0xc]\n
    unsigned short v4;  // [bp-0xa]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // ecx\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 4090;\n
    cgc_printf(\"Please submit your new file data ($d bytes):\\n
\");\n
    cgc_receive_bytes(a0, v4);\n
    v3 = 0;\n
    *(&v2) = 0;\n
    while (true)\n
    {\n
        v8 = v4;\n
        if (v3 >= v8)\n
            break;\n
        *(&v8) = v2;\n
        v2 = v8 + 1;\n
        v1 = *((v6 + v8 * 4));\n
        cgc_memcpy(v1, a0 + v3, 2);\n
        v3 += 2;\n
        cgc_memcpy(v1 + 2, a0 + v3, 2);\n
        v3 += 2;\n
        cgc_memcpy(v1 + 4, a0 + v3, 2);\n
        v3 += 2;\n
        cgc_memcpy(v1 + 6, a0 + v3, 1);\n
        v3 += 1;\n
        cgc_memcpy(v1 + 7, a0 + v3, 1);\n
        v3 += 1;\n
        cgc_memcpy(v1 + 8, a0 + v3, 1);\n
        v3 += 1;\n
        cgc_memcpy(v1 + 9, a0 + v3, 1);\n
        v3 += 1;\n
    }\n
    v9 = v5;\n
    return cgc_printf(v0 - 8602);\n
}\n
", "4218661:sub_405f25": null, "4218672:cgc_ShowPixel": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    unsigned short field_4;\n
    char field_6;\n
    char field_7;\n
    char field_8;\n
    char field_9;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ShowPixel(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // esi\n
\n
    v6 = v8;\n
    v5 = v9;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v7->field_0;\n
    v1 = v7->field_2;\n
    v2 = v7->field_4;\n
    cgc_printf(\"XYZ:  ($d, $d, $d)\\n
\");\n
    v0 = v7->field_6;\n
    v1 = v7->field_7;\n
    v2 = v7->field_8;\n
    v3 = v7->field_9;\n
    cgc_printf(v4 - 8565);\n
    return cgc_printf(v4 - 8112);\n
}\n
", "4218831:sub_405fcf": null, "4218832:cgc_CheckFile": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckFile(struct struct_0 **v6, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
        return v6;\n
    v5 = 0;\n
    while (true)\n
    {\n
        if (v5 >= a0)\n
            break;\n
        v0 = v6[v5]->field_0;\n
        v1 = v6[v5]->field_2;\n
        v2 = v6[v5]->field_4;\n
        cgc_printf(v4 - 8585);\n
        v0 = v6[v5]->field_6;\n
        v1 = v6[v5]->field_7;\n
        v2 = v6[v5]->field_8;\n
        v3 = v6[v5]->field_9;\n
        cgc_printf(v4 - 8565);\n
        cgc_printf(v4 - 8112);\n
        v5 += 1;\n
    }\n
    return v5;\n
}\n
", "4219091:sub_4060d3": null, "4219104:cgc_RotateX": null, "4219411:sub_406213": null, "4219424:cgc_degree_to_radian": null, "4219530:sub_40628a": null, "4219536:cgc_multiply": "int cgc_multiply()\n
{\n
    unsigned short v0;  // [bp-0xc]\n
    unsigned short v1;  // [bp-0xa]\n
    unsigned int v2;  // [bp-0x8]\n
    char v3;  // [bp-0x4]\n
    unsigned int v5;  // ebp\n
\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t24,0] = t25\n
    [D] PutI(136:I8x8)[t24,0] = 0x01\n
    [D] PutI(136:I8x8)[t24,0] = 0x00\n
    [D] PutI(72:F64x8)[t38,0] = t41\n
    [D] PutI(136:I8x8)[t38,0] = 0x01\n
    [D] PutI(72:F64x8)[t48,0] = t49\n
    [D] PutI(136:I8x8)[t48,0] = 0x01\n
    [D] PutI(136:I8x8)[t48,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    [D] PutI(72:F64x8)[t74,0] = t77\n
    [D] PutI(136:I8x8)[t74,0] = 0x01\n
    [D] PutI(72:F64x8)[t84,1] = t85\n
    [D] PutI(136:I8x8)[t84,1] = 0x01\n
    [D] PutI(136:I8x8)[t84,0] = 0x00\n
    v1 = [D] x86g_create_fpucw(fpround<4>);\n
    v0 = v1 | 0xc00;\n
    v2 = ([D] GetI(136:I8x8)[t130,0] ? [D] GetI(72:F64x8)[t130,0] : nan);\n
    [D] PutI(136:I8x8)[t130,0] = 0x00\n
    v5 = *(&v3);\n
    return;\n
}\n
", "4219593:sub_4062c9": null, "4219600:cgc_RotateY": null, "4219904:cgc_RotateZ": null, "4220208:cgc_SkewX": "int cgc_SkewX(unsigned short *v0, unsigned short a0)\n
{\n
    *(v0) = a0 + *(v0);\n
    return v0;\n
}\n
", "4220241:sub_406551": null, "4220256:cgc_SkewY": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
int cgc_SkewY(struct_0 *v0, unsigned short a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_2 = v1->field_2 + a0;\n
    return v0;\n
}\n
", "4220285:sub_40657d": null, "4220288:cgc_SkewZ": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int cgc_SkewZ(struct_0 *v0, unsigned short a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_4 = v1->field_4 + a0;\n
    return v0;\n
}\n
", "4220317:sub_40659d": null, "4220320:cgc_Scale": null, "4220745:sub_406749": null, "4220752:cgc_divide": "int cgc_divide()\n
{\n
    unsigned short v0;  // [bp-0xa]\n
    unsigned short v1;  // [bp-0x8]\n
    unsigned short v2;  // [bp-0x6]\n
    char v3;  // [bp-0x4]\n
    unsigned int v5;  // ebp\n
\n
    if ([D] GetI(136:I8x8)[t11,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t24,0] = t25\n
    [D] PutI(136:I8x8)[t24,0] = 0x01\n
    [D] PutI(136:I8x8)[t24,0] = 0x00\n
    [D] PutI(72:F64x8)[t38,0] = t41\n
    [D] PutI(136:I8x8)[t38,0] = 0x01\n
    [D] PutI(72:F64x8)[t48,0] = t49\n
    [D] PutI(136:I8x8)[t48,0] = 0x01\n
    [D] PutI(136:I8x8)[t48,0] = 0x00\n
    [D] PutI(72:F64x8)[t62,0] = t65\n
    [D] PutI(136:I8x8)[t62,0] = 0x01\n
    [D] PutI(72:F64x8)[t74,0] = t77\n
    [D] PutI(136:I8x8)[t74,0] = 0x01\n
    [D] PutI(72:F64x8)[t84,1] = t85\n
    [D] PutI(136:I8x8)[t84,1] = 0x01\n
    [D] PutI(136:I8x8)[t84,0] = 0x00\n
    v1 = [D] x86g_create_fpucw(fpround<4>);\n
    v0 = v1 | 0xc00;\n
    v2 = ([D] GetI(136:I8x8)[t130,0] ? [D] GetI(72:F64x8)[t130,0] : nan);\n
    [D] PutI(136:I8x8)[t130,0] = 0x00\n
    v5 = *(&v3);\n
    return;\n
}\n
", "4220811:sub_40678b": null, "4220816:cgc_Brightness": "int cgc_Brightness(char v3[9], unsigned short a0)\n
{\n
    unsigned short v0;  // [bp-0xa]\n
    unsigned short v1;  // [bp-0x8]\n
    unsigned short v2;  // [bp-0x6]\n
    char v4[9];  // eax, Other Possible Types: unsigned int\n
\n
    v4 = a0;\n
    if (v4 < -255)\n
        return v4;\n
    v4 = a0;\n
    if (v4 <= 255)\n
    {\n
        v2 = v3[6] + a0;\n
        v1 = v3[7] + a0;\n
        v0 = v3[8] + a0;\n
        if (v2 > 255)\n
        {\n
            v3[6] = 255;\n
        }\n
        else if (v2 < 0)\n
        {\n
            v3[6] = 0;\n
        }\n
        else\n
        {\n
            v3[6] = v2;\n
        }\n
        if (v1 > 255)\n
        {\n
            v3[7] = 255;\n
        }\n
        else if (v1 < 0)\n
        {\n
            v3[7] = 0;\n
        }\n
        else\n
        {\n
            v3[7] = v1;\n
        }\n
        if (v0 > 255)\n
        {\n
            v4 = v3;\n
            v4[8] = 255;\n
        }\n
        else if (v0 < 0)\n
        {\n
            v4 = v3;\n
            v4[8] = 0;\n
        }\n
        else\n
        {\n
            v4 = v3;\n
            v4[8] = v0;\n
        }\n
        return v4;\n
    }\n
}\n
", "4221132:sub_4068cc": null, "4221136:cgc_Opacity": "typedef struct struct_0 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_0;\n
\n
int cgc_Opacity(struct_0 *v0, unsigned short a0)\n
{\n
    v0->field_9 = a0;\n
    return v0;\n
}\n
", "4221160:sub_4068e8": null, "4221168:cgc_cosine": "int cgc_cosine(unsigned short v2)\n
{\n
    unsigned long v0;  // [bp-0x1c]\n
    unsigned short v1;  // [bp-0xa]\n
\n
    v1 = v2;\n
    if ([D] GetI(136:I8x8)[t30,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v0 = ([D] GetI(136:I8x8)[t6,0] ? [D] GetI(72:F64x8)[t6,0] : nan);\n
    [D] PutI(136:I8x8)[t6,0] = 0x00\n
    [D] PutI(72:F64x8)[t17,0] = t20\n
    [D] PutI(136:I8x8)[t17,0] = 0x01\n
    [D] PutI(72:F64x8)[t26,0] = t27\n
    [D] PutI(136:I8x8)[t26,0] = 0x01\n
    [D] PutI(136:I8x8)[t26,0] = 0x00\n
    return cgc_cos();\n
}\n
", "4221221:sub_406925": null, "4221232:cgc_sine": "int cgc_sine(unsigned short v2)\n
{\n
    unsigned long v0;  // [bp-0x1c]\n
    unsigned short v1;  // [bp-0xa]\n
\n
    v1 = v2;\n
    if ([D] GetI(136:I8x8)[t30,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v0 = ([D] GetI(136:I8x8)[t6,0] ? [D] GetI(72:F64x8)[t6,0] : nan);\n
    [D] PutI(136:I8x8)[t6,0] = 0x00\n
    [D] PutI(72:F64x8)[t17,0] = t20\n
    [D] PutI(136:I8x8)[t17,0] = 0x01\n
    [D] PutI(72:F64x8)[t26,0] = t27\n
    [D] PutI(136:I8x8)[t26,0] = 0x01\n
    [D] PutI(136:I8x8)[t26,0] = 0x00\n
    return cgc_sin();\n
}\n
", "4221285:sub_406965": null, "4221296:cgc_ClosestMatch": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ClosestMatch(char v9, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0xd]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x8]\n
    char v6;  // [bp-0x7]\n
    char v7;  // [bp-0x6]\n
    char v8;  // [bp-0x5]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 255;\n
    v7 = 0;\n
    v3 = 1;\n
    if (v9)\n
        v3 = v9 == 2;\n
    *(&v6) = ((v3 & 1) ? 4 : 8);\n
    v5 = v6;\n
    v4 = 0;\n
    while (v4 < v6)\n
    {\n
        if (!v9)\n
        {\n
LABEL_4069ff:\n
            if (a0 - *((v2 + (v4 << 2) + 60)) >= 0)\n
                v1 = a0 - *((v2 + v4 * 4 + 60));\n
            else\n
                v1 = -(a0 - *((v2 + v4 * 4 + 60)));\n
            v7 = v1;\n
            goto LABEL_406aa6;\n
        }\n
        else\n
        {\n
            if (v9 == 2)\n
                goto LABEL_4069ff;\n
            if (a0 - *((v2 + (v4 << 2) + 92)) < 0)\n
                v0 = -(a0 - *((v2 + v4 * 4 + 92)));\n
            else\n
                v0 = a0 - *((v2 + v4 * 4 + 92));\n
            v7 = v0;\n
LABEL_406aa6:\n
            if (v7 < v8)\n
            {\n
                v8 = v7;\n
                v5 = v4;\n
            }\n
            v4 += 1;\n
        }\n
    }\n
    return v5;\n
}\n
", "4221662:sub_406ade": null, "4221664:cgc_Compress": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Compress(struct struct_0 **v7, unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct struct_0 **v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned short v2;  // [bp-0x14], Other Possible Types: char\n
    unsigned short v3;  // [bp-0x12]\n
    char v4[9];  // [bp-0x10]\n
    char v5;  // [bp-0xa]\n
    char v6;  // [bp-0x9]\n
    unsigned int v9;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
        return v7;\n
    v6 = 0;\n
    v5 = 0;\n
    *(&v4[0]) = 0;\n
    v3 = 2863;\n
    v2 = 0;\n
    for (v1 = 0; v2 < v3; v2 = *(&v2) + 1)\n
    {\n
        v6 = 0;\n
        v9 = v1;\n
        v1 = v9 + 1;\n
        *(&v4[0]) = v7[v9];\n
        v6 += (cgc_ClosestMatch(0, v4[6]) * 32);\n
        v6 += (cgc_ClosestMatch(1, v4[7]) * 8);\n
        v6 += cgc_ClosestMatch(2, v4[8]);\n
        cgc_memcpy(a0 + v2, v4, 2);\n
        *(&v2) = v2 + 2;\n
        cgc_memcpy(a0 + v2, &v4[2], 2);\n
        *(&v2) = v2 + 2;\n
        cgc_memcpy(a0 + v2, &v4[4], 2);\n
        *(&v2) = v2 + 2;\n
        cgc_memcpy(a0 + v2, &v6, 1);\n
    }\n
    return cgc_memcpy(a1, &v2, 2);\n
}\n
", "4222143:sub_406cbf": null, "4222144:cgc_Decompress": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_Decompress(char *v8, char *a0, unsigned short *a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x1b]\n
    char v3;  // [bp-0x1a]\n
    char v4;  // [bp-0x19]\n
    void* v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edx\n
    unsigned int v13;  // ecx\n
    unsigned int v14;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    v6 = 0;\n
    for (v5 = 0; v7 < *(a1); a0[v14] = 255)\n
    {\n
        cgc_memcpy(a0 + v6, &v8[v7], 2);\n
        v6 += 2;\n
        v7 += 2;\n
        cgc_memcpy(a0 + v6, v8 + v7, 2);\n
        v6 += 2;\n
        v7 += 2;\n
        cgc_memcpy(a0 + v6, v8 + v7, 2);\n
        v9 = v0;\n
        v6 += 2;\n
        v7 += 2;\n
        v10 = v7;\n
        v7 = v10 + 1;\n
        v4 = v8[v10];\n
        v3 = (v4 & 224) >> 5;\n
        v2 = (v4 & 24) >> 3;\n
        v1 = v4 & 7;\n
        v11 = v6;\n
        v6 = v11 + 1;\n
        a0[v11] = *((v9 + v3 * 4 + 60));\n
        v12 = v6;\n
        v6 = v12 + 1;\n
        a0[v12] = *((v9 + v2 * 4 + 92));\n
        v13 = v6;\n
        v6 = v13 + 1;\n
        a0[v13] = *((v9 + v1 * 4 + 60));\n
        v14 = v6;\n
        v6 = v14 + 1;\n
    }\n
    return cgc_memcpy(a1, &v6, 2);\n
}\n
", "4222587:sub_406e7b": null, "4222592:cgc_WriteOut": "typedef struct struct_0 {\n
    char padding_0[9];\n
    char field_9;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WriteOut(struct struct_0 **v4, unsigned int a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    unsigned short v2;  // [bp-0xc]\n
    unsigned short v3;  // [bp-0xa]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
        return v4;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v3 >= a1)\n
            break;\n
        v1 = v4[v2];\n
        v3 += 6;\n
        cgc_memcpy(&v1->padding_0[6], a0 + v3, 1);\n
        v3 += 1;\n
        cgc_memcpy(&v1->padding_0[7], a0 + v3, 1);\n
        v3 += 1;\n
        cgc_memcpy(&v1->padding_0[8], a0 + v3, 1);\n
        v3 += 1;\n
        v1->field_9 = 255;\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v3;\n
}\n
", "4222883:sub_406fa3": null, "4222896:cgc_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_menu()\n
{\n
    unsigned int *v9;  // [bp+0x0]\n
    unsigned int v15;  // [bp+0xfd7e0]\n
    unsigned int *v18;  // [bp+0xfd7ec]\n
    char v28;  // [bp+0xfffff]\n
\n
    v9 = v15 - 8110;\n
    cgc_printf(v15 - 8110);\n
    v28 = 0;\n
    v9 = v18;\n
    cgc_free(v18);\n
    return;\n
}\n
", "4224917:sub_407795": null, "4224928:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_printf(\"3D Coordinates (3DC) Image File Format Tools\\n
\");\n
    cgc_menu();\n
    v5 = v2;\n
    return 0;\n
}\n
", "4224996:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_cos": null, "5242900:cgc_allocate": null, "5242904:cgc_rint": null, "5242908:cgc_log10": null, "5242912:cgc_sin": null, "5242916:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}