{"4202496:_init": "extern struct_0 *g_408118;\n
\n
int _init()\n
{\n
    if (g_408118)\n
    {\n
        g_408118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24591;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 24527;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 56));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 56)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204049:sub_402611": null, "4204064:cgc_add_freelist_block": "typedef struct struct_1 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    struct_1 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(v1 + 73);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_38)\n
    {\n
        v7 = v1;\n
        v7->field_38 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204289:sub_402701": null, "4204304:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204375:sub_402757": null, "4204384:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_38);\n
    v3[0] = v1->field_38;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4204601:sub_402839": null, "4204608:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: struct_1 *, unsigned int\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4204692:sub_402894": null, "4204704:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[56];\n
    struct struct_0 *field_38;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_38; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4204985:sub_4029b9": null, "4204992:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205100:sub_402a2c": null, "4205104:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 56)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 56));\n
        *((v6 + v3 * 4 + 56)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205389:sub_402b4d": null, "4205392:cgc_round": null, "4205538:sub_402be2": null, "4205552:cgc_floor": null, "4205708:sub_402c8c": null, "4205712:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[700];\n
    unsigned int field_2bc;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_2bc = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[572 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[572 + 4 * (v2 + 1 & 31)]);\n
        *((572 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4205935:sub_402d6f": null, "4205936:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4205983:sub_402d9f": null, "4205984:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[572 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4206267:sub_402ebb": null, "4206272:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4206460:sub_402f7c": null, "4206464:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4206565:sub_402fe5": null, "4206576:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4206610:sub_403012": null, "4206624:cgc_WRAPPER_BUFFER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[255];\n
    unsigned short field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(struct_0 *v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // esi\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (true)\n
    {\n
        if (v3->field_100 >= 0x100)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, v3->field_100))\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
            else if (*(&v2))\n
            {\n
                v6 = v3;\n
                v6->field_100 = v6->field_100 - *(&v2);\n
            }\n
            else\n
            {\n
                v4 = -1;\n
                return v4;\n
            }\n
        }\n
        else\n
        {\n
            v7 = v3;\n
            v7->field_100 = v7->field_100 + 1;\n
            (&v3->field_0)[v9] = a0;\n
            v4 = a1 + 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4206855:sub_403107": null, "4206864:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4206956:sub_40316c": null, "4206960:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4207148:sub_40322c": null, "4207152:cgc_vprintf_buffered": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v13, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x130]\n
    char v2;  // [bp-0x12c]\n
    unsigned int v3;  // [bp-0x128]\n
    void* v4;  // [bp-0x124]\n
    struct_0 *v5;  // [bp-0x120]\n
    char v6;  // [bp-0x11c]\n
    unsigned short v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // edi\n
    unsigned int v16;  // esi\n
\n
    v12 = v14;\n
    v11 = v15;\n
    v10 = v16;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = cgc_WRAPPER_BUFFER_PUTC;\n
    v7 = 0;\n
    v5 = &v6;\n
    v4 = 0;\n
    v0 = a0;\n
    v3 = cgc_wrapper_output(v5, v8, v4, v13);\n
    while (true)\n
    {\n
        if (v7 <= 0)\n
        {\n
            v9 = v3;\n
            break;\n
        }\n
        else if (cgc_transmit(1, &v6, v7))\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v7 -= *(&v2);\n
        }\n
        else\n
        {\n
            v9 = -1;\n
            break;\n
        }\n
    }\n
    return v9;\n
}\n
", "4207425:sub_403341": null, "4207440:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_403889:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_403889;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 4292)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4208796:sub_40389c": null, "4208800:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4208858:sub_4038da": null, "4208864:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4208933:sub_403925": null, "4208944:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4209083:sub_4039bb": null, "4209088:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4209360:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4210016:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4212432:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 = v1 + 1)\n
    {\n
        a1 = a0(v7, *((&v1 + v1)));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213098:sub_40496a": null, "4213104:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if ((a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4213644:sub_404b8c": null, "4213648:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4213695:sub_404bbf": null, "4213696:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4213733:sub_404be5": null, "4213744:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4213981:sub_404cdd": null, "4213984:cgc_atof": null, "4214269:sub_404dfd": null, "4214272:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4214348:sub_404e4c": null, "4214352:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4214489:sub_404ed9": null, "4214496:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4214632:sub_404f68": null, "4214640:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(v7[0]); v7 = &v7[1]);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = &v7[1];\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = &v7[1];\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_40508a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_40508a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4050dd;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_4050dd;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4050dd:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_40508a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (!cgc_isupper(v1))\n
                v1 -= 87;\n
            else\n
                v1 -= 55;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_405215:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_40521a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            v7 = &v7[1];\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_40521a;\n
            goto LABEL_405215;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4215411:sub_405273": null, "4215424:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215483:sub_4052bb": null, "4215488:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4215543:sub_4052f7": null, "4215552:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(&v4) = v0;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v5 = v3;\n
        v3 = v5 + 1;\n
        *(v5) = v1;\n
    }\n
    return v2;\n
}\n
", "4215706:sub_40539a": null, "4215712:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4215870:sub_40543e": null, "4215872:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[568];\n
    struct struct_1 *field_238;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_238)\n
        {\n
            v6 = v1->field_238;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_238 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_238 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            *((v6 + v3)) = 0;\n
        }\n
        else\n
        {\n
            v1->field_238 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
    }\n
    if (v3 == v2)\n
        v1->field_238 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4216391:sub_405647": null, "4216400:cgc_getALUOp2": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
int cgc_getALUOp2(unsigned int *v2, char a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = &a0;\n
    if (a0 >> 7)\n
    {\n
        v1 = v0->field_1;\n
        return v1;\n
    }\n
    v1 = v2[v0->field_1 >> 3];\n
    return v1;\n
}\n
", "4216476:sub_40569c": null, "4216480:cgc_doAdd": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[16515];\n
    char field_4084;\n
} struct_0;\n
\n
int cgc_doAdd()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
    char v3;  // [bp+0xa]\n
    unsigned short v4;  // dx\n
    unsigned int v5;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // esi\n
    unsigned short v9;  // dx\n
\n
    v0 = &v2;\n
    v4 = (*(&v3) >> 3) & 31;\n
    v7 = v0;\n
    v8 = *(&(&v1->field_0)[4 * v5]) + cgc_getALUOp2(v1, *(&v2));\n
    v9 = *((v7 + 2)) >> 11;\n
    *(&(&v1->field_0)[4 * edx<4>]) = v8;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    v1->field_4084 = (*(&(&v1->field_0)[4 * v7]) >> 31) & 1;\n
    return;\n
}\n
", "4216610:sub_405722": null, "4216624:cgc_doAdc": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[16515];\n
    char field_4084;\n
} struct_0;\n
\n
int cgc_doAdc()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
    char v3;  // [bp+0xa]\n
    unsigned short v4;  // dx\n
    unsigned int v5;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // esi\n
    unsigned short v9;  // dx\n
\n
    v0 = &v2;\n
    v4 = (*(&v3) >> 3) & 31;\n
    v7 = v0;\n
    v8 = *(&(&v1->field_0)[4 * v5]) + cgc_getALUOp2(v1, *(&v2)) + v1->field_4084;\n
    v9 = *((v7 + 2)) >> 11;\n
    *(&(&v1->field_0)[4 * edx<4>]) = v8;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    v1->field_4084 = (*(&(&v1->field_0)[4 * v7]) >> 31) & 1;\n
    return;\n
}\n
", "4216766:sub_4057be": null, "4216768:cgc_doSub": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[16515];\n
    char field_4084;\n
} struct_0;\n
\n
int cgc_doSub()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
    char v3;  // [bp+0xa]\n
    unsigned short v4;  // dx\n
    unsigned int v5;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // esi\n
    unsigned short v9;  // dx\n
\n
    v0 = &v2;\n
    v4 = (*(&v3) >> 3) & 31;\n
    v7 = v0;\n
    v8 = *(&(&v1->field_0)[4 * v5]) - cgc_getALUOp2(v1, *(&v2));\n
    v9 = *((v7 + 2)) >> 11;\n
    *(&(&v1->field_0)[4 * edx<4>]) = v8;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    v1->field_4084 = (*(&(&v1->field_0)[4 * v7]) >> 31) & 1;\n
    return;\n
}\n
", "4216898:sub_405842": null, "4216912:cgc_doSuc": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[16515];\n
    char field_4084;\n
} struct_0;\n
\n
int cgc_doSuc()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
    char v3;  // [bp+0xa]\n
    unsigned short v4;  // dx\n
    unsigned int v5;  // edx\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // esi\n
    unsigned short v9;  // dx\n
\n
    v0 = &v2;\n
    v4 = (*(&v3) >> 3) & 31;\n
    v7 = v0;\n
    v8 = *(&(&v1->field_0)[4 * v5]) - cgc_getALUOp2(v1, *(&v2)) - v1->field_4084;\n
    v9 = *((v7 + 2)) >> 11;\n
    *(&(&v1->field_0)[4 * edx<4>]) = v8;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    v1->field_4084 = (*(&(&v1->field_0)[4 * v7]) >> 31) & 1;\n
    return;\n
}\n
", "4217054:sub_4058de": null, "4217056:cgc_doRsb": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[16515];\n
    char field_4084;\n
} struct_0;\n
\n
int cgc_doRsb(unsigned int v1, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v2;  // ecx\n
    unsigned short v3;  // dx\n
    unsigned int v4;  // edx\n
    unsigned short v6;  // dx\n
\n
    v0 = &a0;\n
    v2 = v0;\n
    v3 = (*(&v2->padding_1[1]) >> 3) & 31;\n
    v6 = *(&v2->padding_1[1]) >> 11;\n
    *((v1 + edx<4> * 4)) = cgc_getALUOp2(v1, *(&a0)) - *((v1 + v4 * 4));\n
    *(&v2) = *(&v2->padding_1[1]) >> 11;\n
    *((v1 + 16516)) = (*((v1 + v2 * 4)) >> 31) & 1;\n
    return v1;\n
}\n
", "4217186:sub_405962": null, "4217200:cgc_doRsc": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[16515];\n
    char field_4084;\n
} struct_0;\n
\n
int cgc_doRsc(unsigned int v1, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v2;  // ecx\n
    unsigned short v3;  // dx\n
    unsigned int v4;  // edx\n
    unsigned short v6;  // dx\n
\n
    v0 = &a0;\n
    v2 = v0;\n
    v3 = (*(&v2->padding_1[1]) >> 3) & 31;\n
    v6 = *(&v2->padding_1[1]) >> 11;\n
    *((v1 + edx<4> * 4)) = cgc_getALUOp2(v1, *(&a0)) - *((v1 + v4 * 4)) - *((v1 + 16516));\n
    *(&v2) = *(&v2->padding_1[1]) >> 11;\n
    *((v1 + 16516)) = (*((v1 + v2 * 4)) >> 31) & 1;\n
    return v1;\n
}\n
", "4217342:sub_4059fe": null, "4217344:cgc_doLsl": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doLsl()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v7 = v1;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    *(&v2[4 * v7]) = v0 << (cgc_getALUOp2(v2, *(&v3)) & 31 & 31);\n
    return;\n
}\n
", "4217449:sub_405a69": null, "4217456:cgc_doLsr": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doLsr()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v7 = v1;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    *(&v2[4 * v7]) = v0 >> (cgc_getALUOp2(v2, *(&v3)) & 31 & 31);\n
    return;\n
}\n
", "4217561:sub_405ad9": null, "4217568:cgc_doAnd": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doAnd()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v7 = v1;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    *(&v2[4 * v7]) = v0 & cgc_getALUOp2(v2, *(&v3));\n
    return;\n
}\n
", "4217668:sub_405b44": null, "4217680:cgc_doOr": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doOr()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v7 = v1;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    *(&v2[4 * v7]) = v0 | cgc_getALUOp2(v2, *(&v3));\n
    return;\n
}\n
", "4217780:sub_405bb4": null, "4217792:cgc_doXor": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doXor()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v7;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v7 = v1;\n
    *(&v7) = *((v7 + 2)) >> 11;\n
    *(&v2[4 * v7]) = v0 ^ cgc_getALUOp2(v2, *(&v3));\n
    return;\n
}\n
", "4217892:sub_405c24": null, "4217904:cgc_doNot": "int cgc_doNot()\n
{\n
    char v0;  // [bp-0x4]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
    char v3;  // [bp+0xa]\n
    unsigned int *v4;  // ecx\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v8;  // edx\n
    unsigned int v9;  // ebp\n
\n
    v4 = &v2;\n
    v5 = (*(&v3) >> 3) & 31;\n
    v8 = *((v1 + v6 * 4)) ^ -1;\n
    *(&v4) = *(&v3) >> 11;\n
    *((v1 + v4 * 4)) = v8;\n
    v9 = *(&v0);\n
    return;\n
}\n
", "4217956:sub_405c64": null, "4217968:cgc_doMin": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_doMin()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    struct_0 *v5;  // [bp+0x4]\n
    char v6;  // [bp+0x8]\n
    char v7;  // [bp+0xa]\n
    unsigned int v8;  // ebx\n
    unsigned short v9;  // dx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ecx\n
\n
    v4 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v6;\n
    v9 = (*(&v7) >> 3) & 31;\n
    v3 = *(&v5[4 * v10]);\n
    if (v3 < cgc_getALUOp2(v5, *(&v6)))\n
    {\n
        v11 = v2;\n
        *(&v11) = (*((v11 + 2)) >> 3) & 31;\n
        v0 = *(&v5[4 * v11]);\n
    }\n
    else\n
    {\n
        v0 = cgc_getALUOp2(v5, *(&v2));\n
    }\n
    v12 = v2;\n
    *(&v12) = *((v12 + 2)) >> 11;\n
    *(&v5[4 * v12]) = v0;\n
    return;\n
}\n
", "4218140:sub_405d1c": null, "4218144:cgc_doMax": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_doMax()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    struct_0 *v5;  // [bp+0x4]\n
    char v6;  // [bp+0x8]\n
    char v7;  // [bp+0xa]\n
    unsigned int v8;  // ebx\n
    unsigned short v9;  // dx\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ecx\n
\n
    v4 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v6;\n
    v9 = (*(&v7) >> 3) & 31;\n
    v3 = *(&v5[4 * v10]);\n
    if (v3 > cgc_getALUOp2(v5, *(&v6)))\n
    {\n
        v11 = v2;\n
        *(&v11) = (*((v11 + 2)) >> 3) & 31;\n
        v0 = *(&v5[4 * v11]);\n
    }\n
    else\n
    {\n
        v0 = cgc_getALUOp2(v5, *(&v2));\n
    }\n
    v12 = v2;\n
    *(&v12) = *((v12 + 2)) >> 11;\n
    *(&v5[4 * v12]) = v0;\n
    return;\n
}\n
", "4218316:sub_405dcc": null, "4218320:cgc_doClr": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doClr()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v8 = v1;\n
    *(&v8) = *((v8 + 2)) >> 11;\n
    *(&v2[4 * v8]) = v0 & (1 << (cgc_getALUOp2(v2, *(&v3)) & 31 & 31) ^ -1);\n
    return;\n
}\n
", "4218435:sub_405e43": null, "4218448:cgc_doSet": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_doSet()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp+0x4]\n
    char v3;  // [bp+0x8]\n
    char v4;  // [bp+0xa]\n
    unsigned short v5;  // dx\n
    unsigned int v6;  // edx\n
    unsigned int v8;  // ecx\n
\n
    v1 = &v3;\n
    v5 = (*(&v4) >> 3) & 31;\n
    v0 = *(&v2[4 * v6]);\n
    v8 = v1;\n
    *(&v8) = *((v8 + 2)) >> 11;\n
    *(&v2[4 * v8]) = v0 | 1 << (cgc_getALUOp2(v2, *(&v3)) & 31 & 31);\n
    return;\n
}\n
", "4218560:cgc_doQATB": "int cgc_doQATB(unsigned int v4[33], char a0)\n
{\n
    char v0[4];  // [bp-0x14]\n
    int tmp_19;  // tmp #19\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
    char v3;  // [bp-0x8]\n
    unsigned int v5[33];  // eax, Other Possible Types: unsigned int, char [4]\n
    unsigned int v6[33];  // eax\n
\n
    *(&v0[0]) = &a0;\n
    v1 = 0;\n
    if (a0 >> 7)\n
        v2 = v0[1];\n
    else\n
        v2 = v4[v0[1] >> 3];\n
    if (((v0[0] >> 3) & 1))\n
        v1 = *(&v3) == v2;\n
    if (((v0[0] >> 2) & 1))\n
        v1 |= !(*(&v3) <= v2);\n
    v5 = v0;\n
    tmp_19 = v5[0];\n
    v5[0] = (v5[0] >> 4) & 1;\n
    if (((tmp_19 >> 4) & 1))\n
    {\n
        v5 = v1 | *(&v3) < v2;\n
        v1 = v5;\n
    }\n
    if (!v1)\n
        return v5;\n
    v6 = v4;\n
    v6[32] = v0[3] + v6[32];\n
    v5 = v4;\n
    if (v5[32] >= 0)\n
        return v5;\n
    v5 = v4;\n
    v5[32] = 0;\n
}\n
", "4218820:sub_405fc4": null, "4218832:cgc_doBranch": "int cgc_doBranch(unsigned int v1[33], char a0)\n
{\n
    char v0[4];  // [bp-0x8]\n
    char v2[4];  // eax\n
    unsigned int v3[33];  // eax, Other Possible Types: unsigned int\n
\n
    *(&v0[0]) = v2;\n
    *(&v0[0]) = &a0;\n
    if (((a0 >> 3) & 15) == 1)\n
        v1[v0[3] >> 3] = v1[32] + 1;\n
    if (v0[0] >> 7)\n
    {\n
        v3 = v1;\n
        *((v3 + 128)) = *(&v0[1]);\n
        return v1;\n
    }\n
    v3 = v1;\n
    v3[32] = v1[v0[1] >> 3];\n
    return v1;\n
}\n
", "4218967:sub_406057": null, "4218976:cgc_doLdi": "int cgc_doLdi()\n
{\n
    char v0;  // [bp-0x4]\n
    unsigned int *v1;  // [bp+0x4]\n
    char v2;  // [bp+0x9]\n
    char v3;  // [bp+0xb]\n
    unsigned int v4;  // ebp\n
\n
    v1[v3 >> 3] = *(&v2);\n
    v4 = *(&v0);\n
    return;\n
}\n
", "4219006:sub_40607e": null, "4219008:cgc_doLmbd": "int cgc_doLmbd(unsigned int *v3, char a0)\n
{\n
    char v0[4];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    *(&v0[0]) = &a0;\n
    if (a0 >> 7)\n
        v1 = v0[1];\n
    else\n
        v1 = v3[v0[1] >> 3];\n
    for (v2 = 31; v2 >= 0; v2 -= 1)\n
    {\n
        if (!(((v3[v0[3] >> 3] >> (v2 & 31)) ^ v3[v0[1] >> 3]) & 1))\n
            break;\n
    }\n
    if (v2 < 0)\n
    {\n
        v4 = v3;\n
        v4[v0[3] >> 3] = 32;\n
        return v3;\n
    }\n
    v4 = v3;\n
    *((v4 + (v0[3] >> 3) * 4)) = v2;\n
    return v3;\n
}\n
", "4219230:sub_40615e": null, "4219232:cgc_doScan": "int cgc_doScan(unsigned int *v1, char a0)\n
{\n
    char v0[4];  // [bp-0x14]\n
    char v2[4];  // eax\n
    char v3[4];  // ecx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
\n
    *(&v0[0]) = v2;\n
    *(&v0[0]) = &a0;\n
    if (a0 >> 7 != 1)\n
    {\n
        v1[v0[3] >> 3] = v1[33 + v1[v0[1] >> 3] + v1[v0[2] >> 3]];\n
        return v1;\n
    }\n
    v3 = v0;\n
    v6 = v1[v3[2] >> 3] + v3[1];\n
    if (v6 >= 0x1000)\n
        return v6;\n
    v6 = v1;\n
    v1[v0[3] >> 3] = v1[33 + v0[1] + v1[v0[2] >> 3]];\n
}\n
", "4219420:sub_40621c": null, "4219424:cgc_dprintf": "int cgc_dprintf(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4219432:sub_406228": null, "4219440:cgc_dumpState": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_dumpState(unsigned int v7)\n
{\n
    unsigned int v0[33];  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5[33];  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_printf(\"============================================\\n
\");\n
    for (v5[0] = 0; v5 <= 31; v5 = &v5[0] + 2)\n
    {\n
        v0[0] = v5;\n
        v1 = *((v7 + v5 * 4));\n
        v2 = &v5[0] + 1;\n
        v3 = *((v7 + v5 * 4 + 4));\n
        cgc_printf(v4 - 4008);\n
    }\n
    v0 = *((v7 + 128)) * 4;\n
    return cgc_printf(v4 - 3981);\n
}\n
", "4219614:sub_4062de": null, "4219616:cgc_execute": "typedef struct struct_0 {\n
    char padding_0[128];\n
    unsigned int field_80;\n
    char padding_84[16386];\n
    unsigned short field_4086;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_execute()\n
{\n
    unsigned int v0;  // [bp-0x4c]\n
    unsigned int v2;  // [bp-0x44]\n
    unsigned int v3;  // [bp-0x40]\n
    char v4;  // [bp-0x3c]\n
    void* v5;  // [bp-0x18], Other Possible Types: char\n
    char v6;  // [bp-0x14]\n
    char v7;  // [bp-0xc]\n
    unsigned int v9;  // [bp+0x4]\n
    struct_0 *v26;  // eax\n
    struct_0 *v27;  // eax\n
    struct_0 *v28;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        v5 = 0;\n
        v28 = v9;\n
        cgc_memcpy(&v7, &v28->padding_0[4 * v28->field_80 + 132], 4);\n
        v2 = v7 & 7;\n
        if (v2 != 1)\n
        {\n
            if (v2 != 3)\n
                return;\n
            cgc_memcpy(&v4, &v7, 4);\n
            cgc_doQATB(v9, *(&v4));\n
        }\n
        else\n
        {\n
            cgc_memcpy(&v6, &v7, 1);\n
            v0 = (v6 >> 3) & 15;\n
            if ([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Conv(32->8, (Conv(8->32, Load(addr=stack_base-12, size=1, endness=Iend_LE)) >> 0x3<8>)) & 0xf<8>)), 0xf<32>, 0x0<32>))\n
                goto *(((stack_base)[64] + (stack_base)[76] * 4 - 4136)) + (stack_base)[64];\n
        }\n
        if (!*(&v5))\n
        {\n
            v26 = v9;\n
            v26->field_80 = v26->field_80 + 1;\n
        }\n
        v27 = v9;\n
        v27->field_4086 = v27->field_4086 + 1;\n
        if (*((v9 + 16518)) >= 2000)\n
            return;\n
    }\n
}\n
", "4219783:sub_406387": "int sub_406387()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doAdd(*(&v2));\n
}\n
", "4219811:sub_4063a3": "int sub_4063a3()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doAdc(*(&v2));\n
}\n
", "4219839:sub_4063bf": "int sub_4063bf()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doSub(*(&v2));\n
}\n
", "4219867:sub_4063db": "int sub_4063db()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doSuc(*(&v2));\n
}\n
", "4219895:sub_4063f7": "int sub_4063f7()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doLsl(*(&v2));\n
}\n
", "4219923:sub_406413": "int sub_406413()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doLsr(*(&v2));\n
}\n
", "4219951:sub_40642f": "int sub_40642f()\n
{\n
    char v0;  // [bp-0x8]\n
    char v2;  // [bp+0x8]\n
\n
    cgc_doRsb(*(&v2), *(&v0));\n
}\n
", "4219979:sub_40644b": "int sub_40644b()\n
{\n
    char v0;  // [bp-0x8]\n
    char v2;  // [bp+0x8]\n
\n
    cgc_doRsc(*(&v2), *(&v0));\n
}\n
", "4220007:sub_406467": "int sub_406467()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doAnd(*(&v2));\n
}\n
", "4220035:sub_406483": "int sub_406483()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doOr(*(&v2));\n
}\n
", "4220063:sub_40649f": "int sub_40649f()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doXor(*(&v2));\n
}\n
", "4220091:sub_4064bb": "int sub_4064bb()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doNot(*(&v2));\n
}\n
", "4220119:sub_4064d7": "int sub_4064d7()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doMin(*(&v2));\n
}\n
", "4220147:sub_4064f3": "int sub_4064f3()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doMax(*(&v2));\n
}\n
", "4220175:sub_40650f": "int sub_40650f()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doClr(*(&v2));\n
}\n
", "4220203:sub_40652b": "int sub_40652b()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x4]\n
    char v2;  // [bp+0x8]\n
\n
    v1 = *(&v0);\n
    cgc_doSet(*(&v2));\n
}\n
", "4220691:sub_406713": null, "4220704:cgc_recvInt": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recvInt()\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    char v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    for (v3 = 0; v3 <= 3; v3 = v4 + v3)\n
    {\n
        v0 = &v4;\n
        cgc_receive(0, &v5 + v3, 4 - v3);\n
        if (!v4)\n
            cgc__terminate();\n
    }\n
    cgc_memcpy(&v2, &v5, 4);\n
    return *(&v2);\n
}\n
", "4220875:sub_4067cb": null, "4220880:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x40a8]\n
    char v1;  // [bp-0x40a4]\n
    char v2;  // [bp-0x4020]\n
    unsigned short v3;  // [bp-0x1e]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v3 = 0;\n
    cgc_memset(&v2, 255, 0x4000);\n
    v5 = cgc_recvInt();\n
    for (v4 = 0; v4 < v5; v4 += 1)\n
    {\n
        *(&(&v2)[4 * v4]) = cgc_recvInt();\n
    }\n
    cgc_execute();\n
    cgc_dumpState(&v1);\n
    cgc__terminate();\n
}\n
", "4221092:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}