{"4198400:_init": "extern struct_0 *g_406f70;\n
\n
int _init()\n
{\n
    if (g_406f70)\n
    {\n
        g_406f70();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4198480:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24183;\n
    v6 = v5 + 12;\n
    v7 = v5 + 12;\n
    if (v7 == v6)\n
        return v5 + 12;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 24119;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 12;\n
    v9 = (v6 + 12 - (v6 + 12) >> 31) + (12 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406f6c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406f6c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = \"`n\";\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4198988:sub_40124c": null, "4198992:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &\"`n\";\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_38->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_38 == v9)\n
        {\n
            v1->field_38 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_38 == v9)\n
    {\n
        v1->field_38 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4199675:sub_4014fb": null, "4199680:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[56];\n
    unsigned int field_38;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &\"`n\";\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_38;\n
    v7->field_38 = v3;\n
    return v3;\n
}\n
", "4199880:sub_4015c8": null, "4199888:cgc_free": "typedef struct struct_0 {\n
    char padding_0[56];\n
    struct struct_1 *field_38;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: struct struct_1 **, struct struct_1 *[2], struct_0 *, unsigned int\n
\n
    v1 = &\"`n\";\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_38 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_38 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_38;\n
    v2[1] = 0;\n
    if (v9->field_38)\n
    {\n
        v12 = v1;\n
        *((&v12->field_38->field_0 + (v12->field_38->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_38 = v7;\n
    return v1;\n
}\n
", "4200352:cgc_expi": "int cgc_expi(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 1; a0; a0 -= 1)\n
    {\n
        v0 *= v1;\n
    }\n
    return v0;\n
}\n
", "4200411:sub_4017db": null, "4200416:cgc_floor": null, "4200580:sub_401884": null, "4200592:cgc_round_away_from_zero": null, "4200746:sub_40192a": null, "4200752:cgc_round": null, "4200896:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = \"`n\";\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4200988:sub_401a1c": null, "4200992:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v14, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x78]\n
    unsigned int v1;  // [bp-0x74]\n
    char *v2;  // [bp-0x70]\n
    char *v3;  // [bp-0x6c], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x68], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x64]\n
    char *v6;  // [bp-0x44], Other Possible Types: unsigned int\n
    struct_1 *v7;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x39]\n
    char v9;  // [bp-0x19]\n
    char *v10;  // [bp-0x18]\n
    char *v11;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
    struct struct_0 **v17;  // eax\n
    struct struct_0 **v18;  // eax\n
    unsigned int v19;  // eax\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    struct_1 *v22;  // eax\n
    unsigned int v23;  // eax\n
    char *v24;  // eax\n
    struct_1 *v25;  // eax\n
\n
    v1 = \"`n\";\n
    v12 = 0;\n
    if (!v14)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v13 = v12;\n
            return v13;\n
        }\n
        if (*(v14) == 36)\n
            break;\n
        cgc_putc(*(v14));\n
        v14 += 1;\n
        v12 += 1;\n
LABEL_401dc8:\n
    }\n
    v14 += 1;\n
    v0 = *(v14);\n
    if (!v0)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    if (v0 == 36)\n
    {\n
        cgc_putc(36);\n
        goto LABEL_401d97;\n
    }\n
    if (v0 != 88)\n
    {\n
        if (v0 == 99)\n
        {\n
            v15 = a0;\n
            a0 = v15 + 1;\n
            v10 = &*(v15)->field_0;\n
            v9 = v10;\n
            cgc_putc(v9);\n
            goto LABEL_401d97;\n
        }\n
        if (v0 == 100)\n
        {\n
            v16 = a0;\n
            a0 = v16 + 1;\n
            v6 = &*(v16)->field_0;\n
            v7 = 0;\n
            if (v6 < 0)\n
            {\n
                v6 = -(v6);\n
                cgc_putc(45);\n
                v12 += 1;\n
            }\n
            else\n
            {\n
                if (!v6)\n
                {\n
                    v7 = 1;\n
                    v8 = 48;\n
                }\n
            }\n
            while (v6)\n
            {\n
                v23 = v7;\n
                v7 = v23 + 1;\n
                (&v8)[v23] = ((v6 >> 31 CONCAT v6) /m 10 >> 32) + 48;\n
                v24 = v6;\n
                v6 = (v24 >> 31 CONCAT v24) /m 10;\n
                if (v7 >= 32)\n
                    break;\n
            }\n
            while (true)\n
            {\n
                v25 = v7;\n
                v7 = v25 + 1;\n
                if (v25 <= 0)\n
                    break;\n
                cgc_putc((&v8)[v7]);\n
                v12 += 1;\n
            }\n
            goto LABEL_401d97;\n
        }\n
        else if (v0 == 115)\n
        {\n
            v17 = a0;\n
            a0 = v17 + 1;\n
            v11 = &*(v17)->field_0;\n
            while (*(v11))\n
            {\n
                cgc_putc(*(v11));\n
                v12 += 1;\n
                v11 += 1;\n
                if (!v11)\n
                    break;\n
            }\n
            goto LABEL_401d97;\n
        }\n
        else if (v0 != 120)\n
        {\n
            v13 = -1;\n
            return v13;\n
        }\n
    }\n
    v18 = a0;\n
    a0 = v18 + 1;\n
    v3 = &*(v18)->field_0;\n
    v4 = 0;\n
    while (v3)\n
    {\n
        v2 = v3 & 15;\n
        v3 >>= 4;\n
        if (v2 < 10)\n
        {\n
            v19 = v4;\n
            v4 = v19 + 1;\n
            (&v5)[v19] = v2 + 48;\n
        }\n
        else if (*(v14) == 120)\n
        {\n
            v20 = v4;\n
            v4 = v20 + 1;\n
            (&v5)[v20] = v2 + 87;\n
        }\n
        else\n
        {\n
            v21 = v4;\n
            v4 = v21 + 1;\n
            (&v5)[v21] = v2 + 55;\n
        }\n
        if (v4 >= 32)\n
            break;\n
    }\n
    while (true)\n
    {\n
        v22 = v4;\n
        v4 = v22 + 1;\n
        if (v22 <= 0)\n
            break;\n
        cgc_putc((&v5)[v4]);\n
        v12 += 1;\n
    }\n
LABEL_401d97:\n
    v14 += 1;\n
    goto LABEL_401dc8;\n
}\n
", "4201948:sub_401ddc": null, "4201952:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4202010:sub_401e1a": null, "4202016:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202070:sub_401e56": null, "4202080:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202134:sub_401e96": null, "4202144:cgc_isascii": "int cgc_isascii(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (32 <= v1 && v1 <= 126)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202202:sub_401eda": null, "4202208:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = \"`n\";\n
    if (!cgc_islower(v3) && !cgc_isupper(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4202304:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4202398:sub_401f9e": null, "4202400:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4202454:sub_401fd6": null, "4202464:cgc_isnan": null, "4202487:sub_401ff7": null, "4202496:cgc_isinf": null, "4202543:sub_40202f": null, "4202544:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = v1 + 32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4202602:sub_40206a": null, "4202608:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = v1 + -32;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4202666:sub_4020aa": null, "4202672:cgc_strcmp": "int cgc_strcmp(unsigned int v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!v0[v2] && !v0[a0])\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (!v0[v2])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (!v0[a0])\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (v0[v2] < v0[a0])\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        else if (v0[v2] <= v0[a0])\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
    }\n
}\n
", "4202910:sub_40219e": null, "4202912:cgc_strncat": "int cgc_strncat(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = v3;\n
    v2 = cgc_strlen();\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v2 >= a1)\n
            return v3;\n
        if (!v1[a0])\n
            return v3;\n
        v3[v2] = v1[a0];\n
        v2 += 1;\n
        v1 += 1;\n
    }\n
}\n
", "4203047:sub_402227": null, "4203056:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4203111:sub_402267": null, "4203120:cgc_strcat": "int cgc_strcat(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v1 = cgc_strlen(v2);\n
    for (v0 = 0; *((a0 + v0)); v0 += 1)\n
    {\n
        v2[v1] = *((a0 + v0));\n
        v1 += 1;\n
    }\n
    return v2;\n
}\n
", "4203240:sub_4022e8": null, "4203248:cgc_strchr": "int cgc_strchr(char *v1, char a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(v1))\n
            return v0;\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4203331:sub_402343": null, "4203344:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4203435:sub_4023ab": null, "4203440:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4203546:sub_40241a": null, "4203552:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = 0; v0 + 3 < a1; v0 += 4)\n
        {\n
            *(&v0[v1]) = *(&v0[a0]);\n
        }\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v1;\n
}\n
", "4203696:cgc_memset": "int cgc_memset(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = a0;\n
    if (a1 >= 4)\n
    {\n
        for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v2 + 3 < a1; v2 += 4)\n
        {\n
            *((v3 + v2)) = v0;\n
        }\n
    }\n
    for (; v2 < a1; v2 += 1)\n
    {\n
        *((v3 + v2)) = v1;\n
    }\n
    return v3;\n
}\n
", "4203865:sub_402559": null, "4203872:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"`n\";\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 9)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4204276:sub_4026f4": null, "4204288:cgc_abs": "int cgc_abs(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 < 0)\n
    {\n
        v0 = -(v1);\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4204332:sub_40272c": null, "4204336:cgc_handle_repo": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_repo()\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    char v1;  // [bp-0x110]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = \"`n\";\n
    v2 = 0;\n
    if (!cgc_recv(&v2))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_memset(&v1, 0, 0x100);\n
    if (!cgc_recv(&v1))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v3 = cgc_delete_file();\n
    return v3;\n
}\n
", "4204532:sub_4027f4": null, "4204544:cgc_handle_prnt": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    char padding_4[256];\n
    unsigned int field_104;\n
    struct struct_1 *field_108;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_prnt(struct_1 *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    struct_0 *v1;  // [bp-0x114]\n
    char v2;  // [bp-0x110]\n
    struct_1 *v3;  // [bp-0x10]\n
    struct_1 *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"`n\";\n
    v4 = 0;\n
    v3 = 0;\n
    v1 = 0;\n
    if (!v5)\n
        return v5;\n
    cgc_bubble_sort();\n
    v3 = v5->field_108;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v5->field_104)\n
            break;\n
        v1 = (&v3->field_0)[v4];\n
        cgc_printf(v0 - 8020);\n
        if (!v1->field_100)\n
        {\n
            cgc_printf(v0 - 8009);\n
        }\n
        else\n
        {\n
            cgc_printf(v0 - 7996);\n
            cgc_memset(&v2, 0, 0x100);\n
            cgc_strncpy(&v2, a0, 255);\n
            cgc_strncat(&v2, v0 - 7991, 255);\n
            cgc_strncat(&v2, v1, 255);\n
            cgc_handle_prnt(v1, &v2);\n
        }\n
        v4 += 1;\n
    }\n
    return v4;\n
}\n
", "4205015:sub_4029d7": null, "4205024:cgc_handle_recv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_recv()\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    unsigned int v1[67];  // [bp-0x114]\n
    char v2;  // [bp-0x110]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = \"`n\";\n
    v3 = 0;\n
    v1[0] = 0;\n
    cgc_memset(&v2, 0, 0x100);\n
    if (!cgc_recv(&v3))\n
    {\n
        cgc_printf(v0 - 7989);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_recv(&v2))\n
    {\n
        v1[0] = cgc_get_file();\n
        if (!v1)\n
        {\n
            cgc_printf(v0 - 0x1f00);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v1[64] == 1)\n
        {\n
            cgc_printf(v0 - 7915);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (v1[66])\n
        {\n
            cgc_printf(v0 - 7888);\n
            v4 = 1;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(v0 - 7965);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4205453:sub_402b8d": null, "4205456:cgc_handle_ndir": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_ndir()\n
{\n
    unsigned int v0;  // [bp-0x118]\n
    void* v1;  // [bp-0x114], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x110]\n
    void* v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = \"`n\";\n
    v3 = 0;\n
    v1 = 0;\n
    cgc_memset(&v2, 0, 0x100);\n
    if (!cgc_recv(&v3))\n
    {\n
        cgc_printf(v0 - 7989);\n
        v4 = 0;\n
        return v4;\n
    }\n
    else if (cgc_recv(&v2))\n
    {\n
        v1 = cgc_init_file();\n
        if (!v1)\n
        {\n
            cgc_printf(v0 - 7877);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_set_name(v1))\n
        {\n
            cgc_printf(v0 - 7831);\n
            cgc_free(v1);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_set_type(v1))\n
        {\n
            cgc_printf(v0 - 7793);\n
            cgc_free(v1);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (!cgc_add_file())\n
        {\n
            cgc_printf(v0 - 7765);\n
            cgc_free(v1);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else\n
        {\n
            cgc_printf(v0 - 7744);\n
            v4 = 1;\n
            return v4;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(v0 - 7965);\n
        v4 = 0;\n
        return v4;\n
    }\n
}\n
", "4206029:sub_402dcd": null, "4206032:cgc_handle_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_handle_send()\n
{\n
    unsigned int v0;  // [bp-0x120]\n
    void* v1;  // [bp-0x11c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x118], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x114]\n
    void* v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v0 = \"`n\";\n
    v5 = 0;\n
    v4 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    cgc_memset(&v3, 0, 0x100);\n
    if (!cgc_recv(&v5))\n
    {\n
        cgc_printf(v0 - 7989);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_recv(&v3))\n
    {\n
        cgc_printf(v0 - 7965);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_recv(&v4))\n
    {\n
        cgc_printf(v0 - 7716);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v4 <= 0x400)\n
    {\n
        v2 = cgc_malloc(v4 + 1);\n
        if (!v2)\n
        {\n
            cgc_printf(v0 - 7642);\n
            v6 = 0;\n
            return v6;\n
        }\n
        cgc_memset(v2, 0, v4 + 1);\n
        if (!cgc_recv(v2))\n
        {\n
            cgc_printf(v0 - 7619);\n
            v6 = 0;\n
            return v6;\n
        }\n
        v1 = cgc_init_file();\n
        if (!v1)\n
        {\n
            cgc_printf(v0 - 7590);\n
            cgc_free(v2);\n
            v6 = 0;\n
            return v6;\n
        }\n
        else if (!cgc_set_name(v1))\n
        {\n
            cgc_printf(v0 - 7549);\n
            cgc_free(v2);\n
            cgc_free(v1);\n
            v6 = 0;\n
            return v6;\n
        }\n
        else if (!cgc_set_type(v1))\n
        {\n
            cgc_printf(v0 - 7793);\n
            cgc_free(v2);\n
            cgc_free(v1);\n
            v6 = 0;\n
            return v6;\n
        }\n
        else if (cgc_set_data(v1, v4))\n
        {\n
            cgc_free(v2);\n
            if (!cgc_add_file())\n
            {\n
                cgc_printf(v0 - 7488);\n
                cgc_free_file();\n
                v6 = 0;\n
                return v6;\n
            }\n
            cgc_printf(v0 - 7467);\n
            v6 = 1;\n
            return v6;\n
        }\n
        else\n
        {\n
            cgc_printf(v0 - 7516);\n
            cgc_free(v2);\n
            cgc_free(v1);\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
    else\n
    {\n
        cgc_printf(v0 - 0x1e00);\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4207122:sub_403212": null, "4207136:cgc_bubble_sort": "typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
    struct struct_1 *field_108;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_bubble_sort(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    void* v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7->field_108)\n
    {\n
        for (v3 = &v7->field_108->field_0; v5 < v7->field_104; v5 += 1)\n
        {\n
            if (v3[v5])\n
                v4 += 1;\n
        }\n
        if (v4 < v7->field_104)\n
        {\n
            v5 = 0;\n
            for (v4 = 0; v5 < v7->field_104; v5 += 1)\n
            {\n
                if (v3[v5])\n
                {\n
                    v3[v4] = v3[v5];\n
                    v4 += 1;\n
                }\n
            }\n
            for (v5 = v4; v4 < v7->field_104; v4 += 1)\n
            {\n
                v3[v4] = 0;\n
            }\n
            v7->field_104 = v5;\n
        }\n
        for (v5 = 0; v5 < v7->field_104; v5 += 1)\n
        {\n
            for (v4 = v5 + 1; v4 < v7->field_104; v4 += 1)\n
            {\n
                v1 = cgc_strcmp(v3[v5], v3[v4]);\n
                if (v1 > 0)\n
                {\n
                    v2 = v3[v4];\n
                    v3[v4] = v3[v5];\n
                    v3[v5] = v2;\n
                }\n
            }\n
        }\n
        v6 = 1;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4207669:sub_403435": null, "4207680:cgc_remove_sub_file": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
    struct struct_2 *field_108;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    struct struct_0 *field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_sub_file(struct_1 *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    struct struct_0 **v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v5 && a0)\n
    {\n
        if (v5->field_108)\n
        {\n
            v3 = v5->field_108;\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    if (v2 >= v5->field_104)\n
                    {\n
                        v4 = 0;\n
                        return v4;\n
                    }\n
                    v1 = *((v3 + v2 * 4));\n
                    if (v1)\n
                        break;\n
                    v2 = v2 + 1;\n
                }\n
                if (!cgc_strcmp(v1, a0))\n
                    break;\n
                v2 = v2 + 1;\n
            }\n
            if (v1->field_100 != 1)\n
            {\n
                cgc_free_file();\n
                *((v3 + v2 * 4)) = 0;\n
                v4 = 1;\n
                return v4;\n
            }\n
            cgc_printf(v0 - 7441);\n
            v4 = 0;\n
            return v4;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207999:sub_40357f": null, "4208000:cgc_free_file": "typedef struct struct_0 {\n
    char padding_0[264];\n
    unsigned int field_108;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_file(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    if (!v1)\n
        return v1;\n
    if (!v1->field_108)\n
        return cgc_free(v1);\n
    cgc_free(v1->field_108);\n
}\n
", "4208096:cgc_delete_file": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *cgc_root;\n
\n
int cgc_delete_file(char *v7)\n
{\n
    unsigned int v0;  // [bp-0x120]\n
    void* v1;  // [bp-0x11c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x118], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x114], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x110]\n
    struct_0 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    v5 = cgc_root;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (*(v7) == 47)\n
    {\n
        v3 = 1;\n
        v1 = cgc_strlen(v7);\n
        if (v1 > 0x100)\n
        {\n
            cgc_printf(v0 - 7358);\n
            v6 = 0;\n
            return v6;\n
        }\n
        while (true)\n
        {\n
            if (v2 == -1)\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
            v2 = cgc_find_next_slash(v7, v3);\n
            cgc_memset(&v4, 0, 0x100);\n
            if (v2 == -1)\n
                break;\n
            if (v2 - v3 > 0x100)\n
            {\n
                cgc_printf(v0 - 7335);\n
                v6 = 0;\n
                return v6;\n
            }\n
            cgc_memcpy(&v4, &v7[v3], v2 - v3);\n
            v5 = cgc_retrieve_sub(v5);\n
            if (!v5)\n
            {\n
                cgc_printf(v0 - 7302);\n
                v6 = 0;\n
                return v6;\n
            }\n
            if (*((v5 + 0x100)) != 1)\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
            v3 = v2 + 1;\n
        }\n
        if (v1 - v3 > 0x100)\n
        {\n
            cgc_printf(v0 - 7335);\n
            v6 = 0;\n
            return v6;\n
        }\n
        cgc_memcpy(&v4, &v7[v3], v1 - v3);\n
        if (!cgc_does_sub_file_exist(v5))\n
        {\n
            cgc_printf(v0 - 7406);\n
            v6 = 0;\n
            return v6;\n
        }\n
        if (cgc_remove_sub_file(v5, &v4))\n
        {\n
            cgc_printf(v0 - 7377);\n
            v6 = 1;\n
            return v6;\n
        }\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (!cgc_does_sub_file_exist(v5))\n
    {\n
        cgc_printf(v0 - 7406);\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (cgc_remove_sub_file(v5, v7))\n
    {\n
        cgc_printf(v0 - 7377);\n
        v6 = 1;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
}\n
", "4209082:sub_4039ba": null, "4209088:cgc_does_sub_file_exist": "typedef struct struct_0 {\n
    char padding_0[260];\n
    unsigned int field_104;\n
    struct struct_1 *field_108;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_does_sub_file_exist(struct_0 *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    for (v3 = v5->field_108; true; v2 = v2 + 1)\n
    {\n
        if (v2 < v5->field_104)\n
        {\n
            v1 = *((v3 + v2 * 4));\n
            if (v1)\n
            {\n
                if (!cgc_strcmp(v1, a0))\n
                {\n
                    v4 = 1;\n
                    return v4;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4209275:sub_403a7b": null, "4209280:cgc_find_next_slash": "int cgc_find_next_slash(char *v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    if (!v2)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    for (v0 = -1; a0 < a1; a0 += 1)\n
    {\n
        if (v2[a0] == 47)\n
        {\n
            v0 = a0;\n
            break;\n
        }\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4209399:sub_403af7": null, "4209408:cgc_retrieve_sub": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
    unsigned int field_104;\n
    struct struct_1 *field_108;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_retrieve_sub(struct_0 *v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"`n\";\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v5 && a0)\n
    {\n
        if (v5->field_100 == 1)\n
        {\n
            for (v3 = v5->field_108; true; v2 = v2 + 1)\n
            {\n
                if (v2 >= v5->field_104)\n
                {\n
                    v4 = 0;\n
                    return v4;\n
                }\n
                v1 = *((v3 + v2 * 4));\n
                if (v1)\n
                {\n
                    if (!cgc_strcmp(v1, a0))\n
                    {\n
                        v4 = v1;\n
                        return v4;\n
                    }\n
                }\n
            }\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4209654:sub_403bf6": null, "4209664:cgc_fixup_dir_length": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fixup_dir_length(unsigned int v3[67])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4[67];  // eax\n
    unsigned int v5[67];  // eax\n
\n
    v0 = \"`n\";\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    if (v3[65])\n
    {\n
        v4 = v3;\n
        v4[65] = v4[65] + 1;\n
        v1 = cgc_malloc(v3[65] * 4);\n
        if (!v1)\n
        {\n
            v5 = v3;\n
            v5[65] = v5[65] - 1;\n
            v2 = 0;\n
            return v2;\n
        }\n
        cgc_memset(v1, 0, v3[65] * 4);\n
        cgc_memcpy(v1, v3[66], (v3[65] - 1) * 4);\n
        cgc_free(v3[66]);\n
        v3[66] = v1;\n
    }\n
    else\n
    {\n
        v3[65] = 1;\n
        v3[66] = cgc_malloc(8);\n
        if (!v3[66])\n
        {\n
            cgc_printf(v0 - 7263);\n
            v3[65] = 0;\n
            v2 = 0;\n
            return v2;\n
        }\n
        cgc_memset(v3[66], 0, 8);\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4210092:sub_403dac": null, "4210096:cgc_get_file": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *cgc_root;\n
\n
int cgc_get_file(char *v8)\n
{\n
    unsigned int v0;  // [bp-0x124]\n
    char v1;  // [bp-0x120]\n
    void* v2;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_0 *v5;  // [bp-0x14]\n
    struct_0 *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"`n\";\n
    v6 = cgc_root;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (!v8)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (*(v8) != 47)\n
    {\n
        v5 = cgc_retrieve_sub(v6, v8);\n
        v7 = v5;\n
        return v7;\n
    }\n
    else\n
    {\n
        v4 = 1;\n
        v2 = cgc_strlen(v8);\n
        while (true)\n
        {\n
            if (v3 == -1)\n
            {\n
                v7 = 0;\n
                return v7;\n
            }\n
            v3 = cgc_find_next_slash(v8, v4, v2);\n
            if (v3 == -1)\n
            {\n
                cgc_memset(&v1, 0, 0x100);\n
                cgc_memcpy(&v1, &v8[v4], v2 - v4);\n
                v5 = cgc_retrieve_sub(v6, &v1);\n
                v7 = v5;\n
                return v7;\n
            }\n
            cgc_memset(&v1, 0, 0x100);\n
            cgc_memcpy(&v1, &v8[v4], v3 - v4);\n
            v6 = cgc_retrieve_sub(v6, &v1);\n
            v4 = v3 + 1;\n
            if (!v6)\n
            {\n
                v7 = v6;\n
                return v7;\n
            }\n
            else if (*((v6 + 0x100)) != 1)\n
            {\n
                cgc_printf(v0 - 7229);\n
                v7 = 0;\n
                return v7;\n
            }\n
        }\n
    }\n
}\n
", "4210672:cgc_add_file_to_dir": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_file_to_dir(unsigned int v2[67], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    if (v2 && a0)\n
    {\n
        if (cgc_fixup_dir_length(v2))\n
        {\n
            *((v2[66] + (v2[65] - 1) * 4)) = a0;\n
            v1 = 1;\n
            return v1;\n
        }\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4210810:sub_40407a": null, "4210816:cgc_add_file": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *cgc_root;\n
\n
int cgc_add_file(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x128]\n
    struct_0 *v1;  // [bp-0x124]\n
    struct_0 *v2;  // [bp-0x120], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x11c], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x118]\n
    char v5;  // [bp-0x114]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    v7 = 0;\n
    v6 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = cgc_root;\n
    v1 = 0;\n
    if (!v9)\n
    {\n
        v8 = 0;\n
        return v8;\n
    }\n
    else if (*(v9) == 47)\n
    {\n
        v7 = 1;\n
        v3 = cgc_strlen(v9);\n
        if (v3 == 1)\n
        {\n
            cgc_printf(v0 - 7162);\n
            v8 = 0;\n
            return v8;\n
        }\n
        while (true)\n
        {\n
            if (v6 == -1)\n
            {\n
                v8 = 1;\n
                return v8;\n
            }\n
            v6 = cgc_find_next_slash(v9, v7, v3);\n
            if (v6 == -1)\n
                break;\n
            cgc_memset(&v5, 0, 0x100);\n
            cgc_memcpy(&v5, &v9[v7], v6 - v7);\n
            v1 = cgc_retrieve_sub(v2, &v5);\n
            if (!v1)\n
            {\n
                cgc_printf(v0 - 7071);\n
                v8 = 0;\n
                return v8;\n
            }\n
            if (v1->field_100 != 1)\n
            {\n
                cgc_printf(v0 - 7229);\n
                v8 = 0;\n
                return v8;\n
            }\n
            v2 = v1;\n
            v7 = v6 + 1;\n
        }\n
        cgc_memset(&v5, 0, 0x100);\n
        cgc_memcpy(&v5, &v9[v7], v3 - v7);\n
        cgc_memset(v9, 0, 0x100);\n
        cgc_memcpy(v9, &v5, v3 - v7);\n
        if (cgc_does_sub_file_exist(v2, v9) == 1)\n
        {\n
            cgc_printf(v0 - 7134);\n
            v8 = 0;\n
            return v8;\n
        }\n
        if (!cgc_add_file_to_dir(v2, v9))\n
        {\n
            cgc_printf(v0 - 7105);\n
            v8 = 0;\n
            return v8;\n
        }\n
        v8 = 1;\n
        return v8;\n
    }\n
    else if (!cgc_add_file_to_dir(v2, v9))\n
    {\n
        cgc_printf(v0 - 7198);\n
        v8 = 0;\n
        return v8;\n
    }\n
    else\n
    {\n
        v8 = 1;\n
        return v8;\n
    }\n
}\n
", "4211759:sub_40442f": null, "4211760:cgc_init_file": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_init_file()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = \"`n\";\n
    v1 = 0;\n
    v1 = cgc_malloc(268);\n
    if (!v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    cgc_memset(v1, 0, 268);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4211872:cgc_set_name": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_name(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = \"`n\";\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0)\n
    {\n
        v1 = cgc_strlen(a0);\n
        if (v1 > 255)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        cgc_memcpy(v3, a0, v1);\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4212036:sub_404544": null, "4212048:cgc_set_type": "typedef struct struct_0 {\n
    char padding_0[256];\n
    unsigned int field_100;\n
} struct_0;\n
\n
int cgc_set_type(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    if (a0 && a0 != 1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v1->field_100 = a0;\n
    v0 = 1;\n
    return v0;\n
}\n
", "4212139:sub_4045ab": null, "4212144:cgc_set_data": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_data(unsigned int v3[67], unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = \"`n\";\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (!a1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a0 <= 0x400)\n
    {\n
        v1 = cgc_malloc(a0 + 1);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        cgc_memcpy(v1, a1, a0 + 1);\n
        v3[65] = a0;\n
        v3[66] = v1;\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4212364:sub_40468c": null, "4212368:cgc_recv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_recv(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = \"`n\";\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = a0;\n
    if (!v6)\n
    {\n
        v5 = v4;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a0)\n
        {\n
            v0 = &v3;\n
            if (cgc_receive(0, v6 + v4, v2))\n
            {\n
                cgc_printf(v1 - 7033);\n
                v5 = 0;\n
                return v5;\n
            }\n
            if (!v3)\n
            {\n
                cgc_printf(v1 - 7033);\n
                v5 = 0;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
            v2 -= v3;\n
        }\n
        else\n
        {\n
            v5 = v4;\n
            return v5;\n
        }\n
    }\n
}\n
", "4212612:sub_404784": null, "4212624:cgc_service_loop": "typedef struct struct_0 {\n
    char padding_0[52];\n
    void* field_34;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
} struct_1;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_service_loop()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_1 *v7;  // eax\n
    unsigned int v8;  // eax\n
    struct_1 *v9;  // ebx\n
    struct_0 *v10;  // ebx\n
\n
    v4 = v6;\n
    v1 = &\"`n\";\n
    v3 = 0;\n
    v2 = 0;\n
    v7 = v1;\n
    v7->field_34 = cgc_init_file();\n
    if (!v7->field_34)\n
    {\n
        v8 = cgc_printf(&v1[125].padding_0[1]);\n
        return v8;\n
    }\n
    cgc_set_type(v1->field_34, 1);\n
    v9 = v1;\n
    cgc_set_name(v9->field_34, &v9[142].padding_0[39]);\n
    for (; cgc_recv(&v3, 4) == 4; LABEL_40498e:\n
)\n
    {\n
        v0 = v3;\n
        if (v0 == 1145980243)\n
        {\n
            if (!cgc_handle_send())\n
                continue;\n
            goto LABEL_40498e;\n
        }\n
        if (v0 == 1330660690)\n
        {\n
            cgc_handle_repo();\n
        }\n
        else\n
        {\n
            if (v0 == 1347376211)\n
            {\n
                cgc_printf(&v1[123].padding_0[49]);\n
                cgc__terminate();\n
            }\n
            else if (v0 == 1380533326)\n
            {\n
                if (!cgc_handle_ndir())\n
                    continue;\n
                goto LABEL_40498e;\n
            }\n
            else if (v0 != 1414419024)\n
            {\n
                if (v0 != 1447249234)\n
                {\n
                    cgc_printf(&v1[123].padding_0[7]);\n
                }\n
                else if (!cgc_handle_recv())\n
                {\n
                    continue;\n
                }\n
                goto LABEL_40498e;\n
            }\n
            cgc_printf(&v1[123].padding_0[29]);\n
            v10 = v1;\n
            cgc_handle_prnt(v10->field_34, &v10[127].padding_0[23]);\n
        }\n
    }\n
    v8 = cgc_printf(&v1[124].padding_0[17]);\n
    return v8;\n
}\n
", "4213145:sub_404999": null, "4213152:main": "int main(unsigned int v1, unsigned int a0)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    cgc_service_loop();\n
    return 0;\n
}\n
", "4213196:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}