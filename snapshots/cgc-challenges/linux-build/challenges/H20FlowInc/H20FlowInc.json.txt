{"4198400:_init": "extern struct_0 *g_406118;\n
\n
int _init()\n
{\n
    if (g_406118)\n
    {\n
        g_406118();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4198496:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198512:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198528:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198544:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4198560:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198576:sub_4010b0": "int sub_4010b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198582:sub_4010b6": null, "4198592:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198635:sub_4010eb": null, "4198636:sub_4010ec": "int sub_4010ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198640:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198644:sub_4010f4": null, "4198656:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 20511;\n
    v6 = v5 + 38;\n
    v7 = v5 + 38;\n
    if (v7 == v6)\n
        return v5 + 38;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198707:sub_401133": "int sub_401133()\n
{\n
}\n
", "4198713:sub_401139": "int sub_401139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198720:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 20447;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 38;\n
    v9 = (v6 + 38 - (v6 + 38) >> 31) + (38 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198791:sub_401187": "int sub_401187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198800:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_406114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_406114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198875:sub_4011db": "int sub_4011db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198880:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198889:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198893:sub_4011ed": null, "4198896:cgc_int2str": "int cgc_int2str(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // ecx\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    v2 = 0;\n
    if (a0 < 2)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    if (a1 >= 0)\n
    {\n
        a1 *= -1;\n
    }\n
    else if (a0 >= 3)\n
    {\n
        v5 = v2;\n
        v2 = v5 + 1;\n
        v5[v4] = 45;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v1 = a1;\n
    do\n
    {\n
        v2 += 1;\n
        v6 = v1;\n
        v1 = (v6 >> 31 CONCAT v6) /m 10;\n
    } while (v1 < 0);\n
    if (v2 >= a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    v7 = v2;\n
    v2 = v7 - 1;\n
    *((v4 + v7)) = 0;\n
    do\n
    {\n
        v0 = ((a1 >> 31 CONCAT a1) /m 10 >> 32) * -1;\n
        v8 = v2;\n
        v2 = v8 - 1;\n
        *((v4 + v8)) = v0 + 48;\n
        v9 = a1;\n
        a1 = (v9 >> 31 CONCAT v9) /m 10;\n
    } while (a1 < 0);\n
    v3 = 0;\n
    return v3;\n
}\n
", "4199169:sub_401301": null, "4199184:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v13)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    void* v1;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int *v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x29]\n
    unsigned int v5;  // [bp-0x28]\n
    struct_0 *v6;  // [bp-0x24]\n
    unsigned int *v7;  // [bp-0x20]\n
    unsigned int *v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int *v11;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v12;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v14;  // ebx\n
    unsigned int v15;  // eax\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    if ((v13 + 3 & -0x4) + 8 < v13)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    v13 = (v13 + 3 & -0x4) + 8;\n
    if (v13 < v6->field_30)\n
        v13 = v6->field_30;\n
    if (v13 > 4095)\n
    {\n
        v12 = cgc_allocate_large_chunk();\n
        return v12;\n
    }\n
    v5 = cgc_log_base_two();\n
    v10 = v5 - cgc_log_base_two();\n
    if (v10 >= 8)\n
    {\n
        v12 = 0;\n
        return v12;\n
    }\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (!v11)\n
            v4 = v10 < 8;\n
        if (!(v4 & 1))\n
            break;\n
        v14 = v6;\n
        v15 = v10;\n
        v10 = v15 + 1;\n
        v0 = v13;\n
        v9 = cgc_list_find(&v14->padding_0[3 + 8 * v15], &v14[367].padding_0[24]);\n
        if (v9)\n
            v3 = -5 + v9;\n
        else\n
            v3 = 0;\n
        v8 = v3;\n
        v11 = v8;\n
    }\n
    if (!v11)\n
    {\n
        v11 = cgc_grow_heap();\n
    }\n
    else\n
    {\n
        v7 = v11;\n
        v2 = &v6->padding_0[5 + 8 * v10];\n
        if (!v7)\n
            v1 = 0;\n
        else\n
            v1 = v7 + 1;\n
        cgc_list_remove(v2);\n
    }\n
    cgc_mark_allocated();\n
    if ((*(v11) & -2) > v13)\n
        v11 = cgc_split_chunk(v11);\n
    v12 = cgc_chunk_to_ptr();\n
    return v12;\n
}\n
", "4199742:sub_40153e": null, "4199744:cgc_allocate_large_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_large_chunk(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = v5;\n
    cgc_mark_allocated();\n
    v3 = cgc_chunk_to_ptr();\n
    return v3;\n
}\n
", "4199866:sub_4015ba": null, "4199872:cgc_log_base_two": "int cgc_log_base_two(unsigned int v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v1 >>= 1;\n
        if (!v1)\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4199926:sub_4015f6": null, "4199936:cgc_list_find": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_find(struct struct_0 **v4, struct struct_0 **a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct struct_0 **v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        if (v2)\n
        {\n
            v0 = a1;\n
            if (a0(v2))\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
            v2 = *(v2);\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4200060:sub_40167c": null, "4200064:cgc_find_fit": "int cgc_find_fit(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
\n
    v4 = a0;\n
    v2 = v5;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    v3 = v1;\n
    return !((*(v3) & -2) < v4);\n
}\n
", "4200164:sub_4016e4": null, "4200176:cgc_grow_heap": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_grow_heap()\n
{\n
    struct struct_0 **v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    *(v2) = 0x1000;\n
    cgc_mark_free();\n
    v3 = v2;\n
    return v3;\n
}\n
", "4200286:sub_40175e": null, "4200288:cgc_list_remove": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_2 *field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_remove(unsigned int v0[2], struct_0 *a0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (!a0)\n
        return v0;\n
    if (!a0->field_4)\n
        v0[0] = a0->field_0;\n
    else\n
        a0->field_4->field_0 = a0->field_0;\n
    if (!a0->field_0)\n
    {\n
        v1 = v0;\n
        *((v1 + 4)) = a0->field_4;\n
        return v0;\n
    }\n
    v1 = a0->field_0;\n
    *((v1 + 4)) = a0->field_4;\n
    return a0->field_0;\n
}\n
", "4200398:sub_4017ce": null, "4200400:cgc_mark_allocated": "int cgc_mark_allocated(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) | 1;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4200438:sub_4017f6": null, "4200448:cgc_split_chunk": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_sizes;\n
\n
int cgc_split_chunk(unsigned int *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4 + a0;\n
    v1 = *(v4) & -2;\n
    if ((*(v4) & -2) <= a0 + size_class_sizes)\n
    {\n
        v3 = v4;\n
        return v3;\n
    }\n
    *(v4) = a0;\n
    cgc_mark_allocated(v4);\n
    *(v2) = v1 - a0;\n
    cgc_mark_allocated(v2);\n
    cgc_chunk_to_ptr();\n
    cgc_free();\n
    v3 = v4;\n
    return v3;\n
}\n
", "4200619:sub_4018ab": null, "4200624:cgc_chunk_to_ptr": "int cgc_chunk_to_ptr(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4200642:sub_4018c2": null, "4200656:cgc_free": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int *v8;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v9;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v8 = cgc_ptr_to_chunk();\n
    v4 = v8;\n
    if (!v6)\n
        return v8;\n
    cgc_mark_free();\n
    v4 = cgc_coalesce();\n
    v1 = cgc_log_base_two(*(v4) & -2);\n
    v3 = v1 - cgc_log_base_two(v2->field_30);\n
    if (v3 >= 8)\n
        v3 = 7;\n
    v9 = v2;\n
    v0 = &v9[335].padding_0[40];\n
    v8 = cgc_list_insert_in_order(&v9->padding_0[3 + 8 * v3], v4 + 1);\n
    return v8;\n
}\n
", "4200858:sub_40199a": null, "4200864:cgc_ptr_to_chunk": "int cgc_ptr_to_chunk(unsigned int v3)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    if (!v2)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v2;\n
    v1 = v0;\n
    return v1;\n
}\n
", "4200933:sub_4019e5": null, "4200944:cgc_mark_free": "int cgc_mark_free(unsigned int *v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = v0;\n
    *(v1) = *(v1) & -2;\n
    *((-4 + v0 + (*(v0) & -2))) = *(v0);\n
    return v0;\n
}\n
", "4200982:sub_401a16": null, "4200992:cgc_coalesce": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_1 *v12)\n
{\n
    void* v0;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v1[2];  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    void* v3;  // [bp-0x2c], Other Possible Types: unsigned int\n
    unsigned int v4[2];  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20]\n
    unsigned int *v7;  // [bp-0x1c]\n
    unsigned int *v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v11;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v11 = 0;\n
    v10 = 0;\n
    if ((v12 & 4095))\n
        v10 = v12 + -(v12->field_0 & -2);\n
    if (((v12 + (v12->field_-4 & -2)) & 4095))\n
        v11 = v12 + (v12->field_-4 & -2);\n
    if (v10 && !(*(v10) & 1))\n
    {\n
        v5 = cgc_log_base_two(*(v10) & -2);\n
        v9 = v5 - cgc_log_base_two(v6->field_30);\n
        if (v9 < 8)\n
        {\n
            v8 = v10;\n
            v4[0] = &v6->padding_0[3 + 8 * v9];\n
            if (!v8)\n
                v3 = 0;\n
            else\n
                v3 = v8 + 1;\n
            cgc_list_remove(v4, v3);\n
            *(v10) = (v12->field_-4 & -2) + (*(v10) & -2);\n
            cgc_mark_free(v10);\n
            v12 = v10;\n
        }\n
    }\n
    if (!v11)\n
    {\n
        return v12;\n
    }\n
    else if ((*(v11) & 1))\n
    {\n
        return v12;\n
    }\n
    else\n
    {\n
        v2 = cgc_log_base_two(*(v11) & -2);\n
        v9 = v2 - cgc_log_base_two(v6->field_30);\n
        if (v9 >= 8)\n
            return v12;\n
        v7 = v11;\n
        v1[0] = &v6->padding_0[3 + 8 * v9];\n
        if (!v7)\n
            v0 = 0;\n
        else\n
            v0 = v7 + 1;\n
        cgc_list_remove(v1, v0);\n
        *(v12) = (*(v12) & -2) + (*(v11) & -2);\n
        cgc_mark_free(v12);\n
    }\n
}\n
", "4201545:sub_401c49": null, "4201552:cgc_list_insert_in_order": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_in_order(struct struct_0 **v3, unsigned int a0, struct struct_0 **a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct struct_0 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &*(v3)->field_0;\n
    while (true)\n
    {\n
        if (!v2)\n
        {\n
            v4 = cgc_list_push_back(v3);\n
            return v4;\n
        }\n
        if (a1(a0) >= 0)\n
        {\n
            v0 = a0;\n
            v4 = cgc_list_insert_before(v3, v2);\n
            return v4;\n
        }\n
        v2 = *(v2);\n
    }\n
}\n
", "4201709:sub_401ced": null, "4201712:cgc_size_cmp": "int cgc_size_cmp(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int *v0;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    unsigned int *v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int *v7;  // [bp-0x8]\n
\n
    v6 = v8;\n
    if (!v6)\n
        v1 = 0;\n
    else\n
        v1 = -5 + v6;\n
    v5 = v1;\n
    v7 = v5;\n
    v3 = a0;\n
    if (!v3)\n
        v0 = 0;\n
    else\n
        v0 = -5 + v3;\n
    v2 = v0;\n
    v4 = v2;\n
    return (*(v4) & -2) - (*(v7) & -2);\n
}\n
", "4201863:sub_401d87": null, "4201872:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(v4);\n
    if (v2)\n
    {\n
        v0 = v4;\n
        cgc_memset(v2, 0);\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4201961:sub_401de9": null, "4201968:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v8)\n
    {\n
        v7 = cgc_malloc(a0);\n
        return v7;\n
    }\n
    v6 = (*(cgc_ptr_to_chunk(v8)) & -2) - 8;\n
    if (a0 == v6)\n
    {\n
        v7 = v8;\n
        return v7;\n
    }\n
    v5 = cgc_malloc(a0);\n
    v2 = v5;\n
    v3 = v8;\n
    if (a0 < v6)\n
        v1 = a0;\n
    else\n
        v1 = v6;\n
    v0 = v1;\n
    cgc_memcpy(v2, v3);\n
    cgc_free(v8);\n
    v7 = v5;\n
    return v7;\n
}\n
", "4202191:sub_401ecf": null, "4202192:cgc_list_insert_before": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int cgc_list_insert_before(struct_1 *v0, struct_3 *a0, unsigned int a1[2])\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int, struct_3 *\n
    unsigned int v2[2];  // ecx\n
\n
    if (!a1)\n
        return v0;\n
    a1[1] = 0;\n
    a1[0] = 0;\n
    if (!v0->field_0 && !v0->field_4)\n
    {\n
        v2 = a1;\n
        v0->field_4 = &v2[0];\n
        v1 = v0;\n
        *(v1) = v2;\n
        return v0;\n
    }\n
    if (!a0)\n
    {\n
        a1[1] = v0->field_4;\n
        v0->field_4->field_0 = a1;\n
        a1[0] = 0;\n
        v1 = v0;\n
        v1->field_4 = &a1[0];\n
    }\n
    else if (a0 == v0->field_0)\n
    {\n
        a1[0] = v0->field_0;\n
        v0->field_0->field_4 = a1;\n
        a1[1] = 0;\n
        v1 = v0;\n
        v1->field_0 = &a1[0];\n
    }\n
    else\n
    {\n
        a1[1] = a0->field_4;\n
        a1[0] = a0;\n
        a0->field_4->field_0 = a1;\n
        v1 = a0;\n
        v1->field_4 = &a1[0];\n
    }\n
    return v1;\n
}\n
", "4202448:cgc_list_push_back": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_list_push_back(struct_0 *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_list_insert_after(v1, v1->field_4);\n
}\n
", "4202507:sub_40200b": null, "4202512:cgc_list_insert_after": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_insert_after(void* *v1, void* *a0, unsigned int a1[2])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0)\n
    {\n
        v2 = cgc_list_insert_before(v1, *(a0), a1);\n
        return v2;\n
    }\n
    v2 = cgc_list_insert_before(v1, *(v1), a1);\n
    return v2;\n
}\n
", "4202624:cgc_memcpy": "int cgc_memcpy(char *v2, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v2;\n
    v0 = a0;\n
    while (true)\n
    {\n
        v3 = a1;\n
        a1 = v3 - 1;\n
        if (!v3)\n
            break;\n
        *(v1) = *(v0);\n
        v1 += 1;\n
        v0 += 1;\n
    }\n
    return v2;\n
}\n
", "4202712:sub_4020d8": null, "4202720:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 > 0; a1 -= 1)\n
    {\n
        *(v0) = a0;\n
        v0 += 1;\n
    }\n
    return v1;\n
}\n
", "4202790:sub_402126": null, "4202800:cgc__prng_setup": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int g_408dc8;\n
extern void* g_408dcc;\n
extern unsigned int g_408de0;\n
\n
int cgc__prng_setup()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    g_408de0 = 4;\n
    g_408dc8 = 2800;\n
    g_408dcc = 0;\n
    for (v1 = 0; v1 < 2800; v1 = v3)\n
    {\n
        *((v0 + v1 * 4 + 224)) = 2000;\n
        v3 = v1 + 1;\n
    }\n
    return v3;\n
}\n
", "4202907:sub_40219b": null, "4202912:cgc__prng_load_four": "extern unsigned int _GLOBAL_OFFSET_TABLE_[2863];\n
extern unsigned int g_408dc8;\n
\n
int cgc__prng_load_four()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1[2863];  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // eax\n
    unsigned int v15;  // eax\n
    unsigned int v17[2863];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    v5 = g_408dc8;\n
    while (true)\n
    {\n
        v3 = v1[56 + v5] * 10000 + v3;\n
        v4 = v5 * 2 - 1;\n
        v1[56 + v5] = (v3 >> 31 CONCAT v3) /m v4 >> 32;\n
        v7 = v3;\n
        v3 = (v7 >> 31 CONCAT v7) /m v4;\n
        v5 -= 1;\n
        if (!v5)\n
            break;\n
        v3 *= v5;\n
    }\n
    v0 = v1[2858];\n
    v8 = v3;\n
    v2 = v0 + (v8 >> 31 CONCAT v8) /m 10000;\n
    v1[2862] = (v2 >> 31 CONCAT v2) /m 10 >> 32;\n
    v10 = v2;\n
    v11 = (v10 >> 31 CONCAT v10) /m 10;\n
    v1[2861] = (v11 >> 31 CONCAT v11) /m 10 >> 32;\n
    v12 = v2;\n
    v13 = (v12 >> 31 CONCAT v12) /m 100;\n
    v1[2860] = (v13 >> 31 CONCAT v13) /m 10 >> 32;\n
    v14 = v2;\n
    v15 = (v14 >> 31 CONCAT v14) /m 1000;\n
    v17 = v1;\n
    v17[2859] = (v15 >> 31 CONCAT v15) /m 10 >> 32;\n
    v17[2857] = v17[2857] - 14;\n
    v1[2858] = (v3 >> 31 CONCAT v3) /m 10000 >> 32;\n
    return 0;\n
}\n
", "4203255:sub_4022f7": null, "4203264:cgc_prng_get_next": "extern unsigned int _GLOBAL_OFFSET_TABLE_[2864];\n
extern unsigned int cgc_prng_setup;\n
\n
int cgc_prng_get_next()\n
{\n
    unsigned int v0[2864];  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3[2864];  // eax\n
    unsigned int v4[2864];  // eax\n
    unsigned int v5;  // ecx\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = 0;\n
    if (!cgc_prng_setup)\n
    {\n
        cgc__prng_setup();\n
        v3 = v0;\n
        v3[55] = v3[55] + 1;\n
    }\n
    if (v0[2857] <= 0 && v0[2863] > 3)\n
        cgc__prng_setup();\n
    if (v0[2863] > 3)\n
    {\n
        v1 = cgc__prng_load_four();\n
        v0[2863] = 0;\n
    }\n
    if (!v1)\n
    {\n
        v4 = v0;\n
        v5 = v4[2863];\n
        v4[2863] = v5 + 1;\n
        v1 = v4[2859 + v5];\n
    }\n
    return v1;\n
}\n
", "4203463:sub_4023c7": null, "4203472:cgc_read_all": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_all(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    char *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
    char *v6;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!a1)\n
            return v3;\n
        v0 = &v2;\n
        if (cgc_receive(v5, &v4, 1))\n
            break;\n
        if (!*(&v2))\n
            break;\n
        v6 = v3;\n
        v3 = v6 + 1;\n
        v6[a0] = v4;\n
        a1 -= 1;\n
    }\n
    return v3;\n
}\n
", "4203625:sub_402469": null, "4203632:cgc_recv_all": "int cgc_recv_all(unsigned int v0, unsigned int a0)\n
{\n
    return cgc_read_all(0, v0, a0);\n
}\n
", "4203691:sub_4024ab": null, "4203696:cgc_send": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    if (cgc_sendall(1, v3))\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4203782:sub_402506": null, "4203792:cgc_sendall": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendall(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    if (!a0)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    if (!a1)\n
    {\n
        v5 = -6;\n
        return v5;\n
    }\n
    while (true)\n
    {\n
        if (v4 < a1)\n
        {\n
            v0 = &v3;\n
            v2 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
            if (v2)\n
            {\n
                v5 = -6;\n
                return v5;\n
            }\n
            v4 = v3 + v4;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4203996:sub_4025dc": null, "4204000:cgc_sleep": "int cgc_sleep(unsigned int v3, unsigned int a0)\n
{\n
    void* v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
\n
    v1 = v3;\n
    v2 = a0;\n
    v0 = 0;\n
    return cgc_fdwait(0, 0, 0, &v1);\n
}\n
", "4204088:sub_402638": null, "4204096:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; *(v1); v1 += 1)\n
    {\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4204156:sub_40267c": null, "4204160:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4204315:sub_40271b": null, "4204320:cgc_syslog": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_syslog(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x430]\n
    unsigned int v1;  // [bp-0x42c]\n
    unsigned int v2;  // [bp-0x428]\n
    struct_0 *v3;  // [bp-0x424]\n
    unsigned int v4;  // [bp-0x420]\n
    unsigned int v5;  // [bp-0x41c]\n
    unsigned int v6;  // [bp-0x418]\n
    unsigned int v7;  // [bp-0x414]\n
    struct_0 *v8;  // [bp-0x410]\n
    char v9;  // [bp-0x40c]\n
    unsigned int v10;  // [bp-0x8]\n
    char v12;  // [bp+0xc]\n
    unsigned int v13;  // ebx\n
    unsigned int v14;  // ebx\n
\n
    v10 = v13;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    memset(&v9, 0, 0x400);\n
    v14 = v2;\n
    v8 = &v9;\n
    v6 = *((v14 + v11 * 8 + 80));\n
    v0 = v6;\n
    v5 = cgc_snprintf(v8, 0x400, v14 - 4323);\n
    v8 = &v8[v5];\n
    v4 = &v12;\n
    v0 = v4;\n
    v5 = cgc_vsnprintf(v8, 0x400 - v5, a0) + v5;\n
    v3 = &v9;\n
    if (v5 >= 0x400)\n
        v1 = 0x400;\n
    else\n
        v1 = v5;\n
    v7 = cgc_sendall(1, v3, v1);\n
    if (v7)\n
    {\n
        cgc__terminate();\n
        return 0;\n
    }\n
    return 0;\n
}\n
", "4204716:sub_4028ac": null, "4204720:cgc_vsnprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsnprintf(unsigned int v11, unsigned int a0, char *a1, struct struct_0 **a2)\n
{\n
    unsigned int v0;  // [bp-0x54]\n
    unsigned int v1;  // [bp-0x50]\n
    void* v2;  // [bp-0x4c], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x48]\n
    char v4;  // [bp-0x44]\n
    struct_0 *v5;  // [bp-0x24], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x1d]\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v8;  // [bp-0x15]\n
    char *v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v12;  // eax\n
    unsigned int v13;  // ecx\n
    struct struct_0 **v14;  // eax\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = 0;\n
    v9 = a1;\n
    if (!v9)\n
        v9 = v1 - 4319;\n
    for (; *(v9); LABEL_402b64:\n
)\n
    {\n
        if (*(v9) != 126)\n
        {\n
            if (v10 >= a0)\n
            {\n
                v10 += 1;\n
                v9 += 1;\n
            }\n
            else\n
            {\n
                v12 = v9;\n
                v9 = v12 + 1;\n
                v13 = v10;\n
                v10 = v13 + 1;\n
                *((v11 + v13)) = *(v12);\n
            }\n
            goto LABEL_402b64;\n
        }\n
        v8 = 0;\n
        v7 = 0;\n
        v6 = 0;\n
        v5 = 0;\n
        v3 = 0;\n
        v2 = 0;\n
        v9 += 1;\n
        v8 = *(v9);\n
        v0 = v8;\n
        if (v0 == 99)\n
        {\n
            v14 = a2;\n
            a2 = v14 + 1;\n
            v5 = *(v14);\n
            if (!v5)\n
                v7 = 0;\n
            else\n
                v7 = cgc_strlen(v5);\n
        }\n
        else if (v0 == 110)\n
        {\n
            v15 = a2;\n
            a2 = v15 + 1;\n
            v3 = *(v15);\n
            cgc_int2str(&v4, 32, v3);\n
            v5 = &v4;\n
            v7 = cgc_strlen(v5);\n
        }\n
        else if (v0 == 111)\n
        {\n
            v16 = a2;\n
            a2 = v16 + 1;\n
            v6 = *(v16);\n
            if (!v5)\n
                v7 = 0;\n
            else\n
                v7 = 1;\n
        }\n
        if (v8 != 110 && !(v8 == 99))\n
            goto LABEL_402b0b;\n
        v2 = a0 - v10;\n
        if (v7 <= v2)\n
        {\n
            cgc_memcpy(v11 + v10, v5, v7);\n
            v10 = v7 + v10;\n
        }\n
        else\n
        {\n
            cgc_memcpy(v11 + v10, v5, v2);\n
            v10 = v2 + v10;\n
        }\n
LABEL_402b0b:\n
        if (v8 == 111)\n
        {\n
            v2 = a0 - v10;\n
            if (v7 <= v2)\n
            {\n
                *((v11 + v10)) = v6;\n
                v10 += 1;\n
            }\n
        }\n
        if (*(v9))\n
            v9 += 1;\n
    }\n
    if (a0 <= 0)\n
        return v10;\n
    if (v10 < a0)\n
        *((v11 + v10)) = 0;\n
    else\n
        *((v11 + a0 - 1)) = 0;\n
    return v10;\n
}\n
", "4205487:sub_402baf": null, "4205488:cgc_snprintf": "int cgc_snprintf(unsigned int v4, unsigned int a0, char *a1)\n
{\n
    char **v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0x10]\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
\n
    v3 = v6;\n
    v2 = v7;\n
    v0 = &v5;\n
    v1 = cgc_vsnprintf(v4, a0, a1, v0);\n
    return v1;\n
}\n
", "4205568:cgc_create_h2o": "int cgc_create_h2o()\n
{\n
    char v0[3];  // [bp-0xc]\n
\n
    *(&v0) = cgc_malloc(4);\n
    v0[0] = 72;\n
    v0[1] = 72;\n
    v0[2] = 79;\n
    return v0;\n
}\n
", "4205631:sub_402c3f": null, "4205632:cgc_destroy_h2o": "int cgc_destroy_h2o(unsigned int v0)\n
{\n
    return cgc_free(v0);\n
}\n
", "4205669:sub_402c65": null, "4205680:cgc_create_tanks": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_tanks(struct struct_0 **v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    char *v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v3 = -0x10;\n
        return v3;\n
    }\n
    *(v4) = cgc_calloc(a0 * 4 + 4);\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        v0 = 255;\n
        *(&(*(v4))[4 + 4 * v2]) = cgc_create_tank(v2 + 1);\n
        v5 = *(v4);\n
        *(v5) = *(v5) + 1;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4205868:sub_402d2c": null, "4205872:cgc_update_drain_factors": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_update_drain_factors(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!v6)\n
    {\n
        v5 = -15;\n
        return v5;\n
    }\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < *(v6))\n
        {\n
            if (!cgc_is_end_of_life() && cgc_is_in_service() == 1)\n
            {\n
                v4 = cgc_prng_get_next();\n
                if ((v4 >> 31 CONCAT v4) /m 2 >> 32)\n
                {\n
                    v0 = v4;\n
                    v3 = cgc_set_drain_rate(*((4 + v6 + 0x4 * v2)));\n
                    if (v3)\n
                    {\n
                        v5 = v3;\n
                        return v5;\n
                    }\n
                }\n
                else\n
                {\n
                    v0 = v4 * 2;\n
                    v3 = cgc_set_drain_rate(*((4 + v6 + 0x4 * v2)));\n
                    if (v3)\n
                    {\n
                        v5 = v3;\n
                        return v5;\n
                    }\n
                }\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4206223:sub_402e8f": null, "4206224:cgc_update_water_levels": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_update_water_levels(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -15;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < *(v5))\n
        {\n
            v0 = *(&v5[4 + 4 * v2]);\n
            if (!cgc_is_end_of_life())\n
            {\n
                v0 = *(&v5[4 + 4 * v2]);\n
                v3 = cgc_do_drain();\n
                if (v3)\n
                {\n
                    v4 = v3;\n
                    return v4;\n
                }\n
                v0 = *(&v5[4 + 4 * v2]);\n
                v3 = cgc_do_fill();\n
                if (v3)\n
                {\n
                    v4 = v3;\n
                    return v4;\n
                }\n
            }\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4206470:sub_402f86": null, "4206480:cgc_check_levels": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[43];\n
    struct struct_1 *field_2c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_check_levels(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = -15;\n
        return v4;\n
    }\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 >= v5->field_0)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!cgc_is_end_of_life())\n
        {\n
            if (cgc_is_level_crit_low() == 1)\n
            {\n
                v0 = v5->field_2c->field_0;\n
                cgc_syslog(3, v1 - 4292);\n
            }\n
            if (cgc_is_level_low() == 1)\n
            {\n
                v3 = cgc_add_water(*(&v5->padding_1[3 + 4 * v2]));\n
                if (v3)\n
                {\n
                    v4 = v3;\n
                    return v4;\n
                }\n
            }\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4206822:sub_4030e6": null, "4206832:cgc_rxtx": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rxtx()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0xd]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v7;  // [bp+0x4]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v2 >= *(v7))\n
    {\n
        v5 = 0;\n
        return;\n
    }\n
    v3 = cgc_send(*((4 + v7 + 0x4 * v2)), 8);\n
    if (v3)\n
    {\n
        v5 = v3;\n
        return;\n
    }\n
    v3 = cgc_recv_all(&v4, 1);\n
    if (v3 == 1)\n
    {\n
        v0 = v4 - 12;\n
        if (v0 > 5)\n
        {\n
            v5 = -17;\n
            return;\n
        }\n
        goto *(((stack_base)[28] + (stack_base)[32] * 4 - 4316)) + (stack_base)[28];\n
    }\n
    else if (v3)\n
    {\n
        v5 = v3;\n
        return;\n
    }\n
    else\n
    {\n
        v5 = -14;\n
        return;\n
    }\n
}\n
", "4207057:sub_4031d1": "int sub_4031d1()\n
{\n
    unsigned int v0;  // [bp-0x14], Other Possible Types: char\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v3;  // [bp+0x0]\n
    char v5;  // [bp+0x8]\n
\n
    v3 = *((*(&v5) + *(&v0) * 4 + 4));\n
    v1 = cgc_open_valve();\n
    if (!v1)\n
        v0 = *(&v0) + 1;\n
    v2 = v1;\n
}\n
", "4207369:sub_403309": null, "4207376:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    void* v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    void* v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    v1 = 0;\n
    v2 = cgc_create_tanks(&v1, 10);\n
    if (!v2)\n
    {\n
        cgc_syslog(6, v0 - 4257);\n
        while (true)\n
        {\n
            v2 = cgc_update_drain_factors(v1);\n
            if (v2)\n
                break;\n
            v2 = cgc_rxtx();\n
            if (v2)\n
                break;\n
            cgc_sleep(0, 577);\n
            v2 = cgc_update_water_levels(v1);\n
            if (v2)\n
                break;\n
            v2 = cgc_check_levels(v1);\n
            if (v2)\n
                break;\n
        }\n
    }\n
    if (0 > v2)\n
        cgc_send(&v2, 1);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4207703:sub_403457": null, "4207712:cgc_create_tank": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_create_tank(char v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    char v2[8];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char v6[8];  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v2[0]) = cgc_calloc(a0 * 4 + 8);\n
    v2[0] = v4;\n
    v2[1] = 0;\n
    v2[3] = 0;\n
    v2[4] = a0;\n
    for (v1 = 0; v1 < 90; v1 += 1)\n
    {\n
        *(&v2[1 + 4 * v1]) = cgc_create_h2o();\n
        v6 = v2;\n
        v6[5] = v6[5] + 1;\n
    }\n
    v2[6] = 6;\n
    v2[7] = 0;\n
    v7 = v3;\n
    return v2;\n
}\n
", "4207878:sub_403506": null, "4207888:cgc_set_fill_rate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_fill_rate(char v4[7], char a0)\n
{\n
    char v0[7];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = -15;\n
        return v3;\n
    }\n
    v2 = 0;\n
    *(&v0[0]) = v4;\n
    v2 = cgc_is_end_of_life();\n
    if (0 > v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    else if (!v2)\n
    {\n
        if (v4[6] == 6)\n
            v4[1] = 0;\n
        else\n
            v4[1] = a0;\n
        v3 = 0;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -19;\n
        return v3;\n
    }\n
}\n
", "4208071:sub_4035c7": null, "4208080:cgc_is_end_of_life": "typedef struct struct_0 {\n
    char padding_0[7];\n
    char field_7;\n
} struct_0;\n
\n
int cgc_is_end_of_life(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -15;\n
        return v0;\n
    }\n
    else if (v1->field_7 != 1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4208157:sub_40361d": null, "4208160:cgc_set_drain_rate": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_drain_rate(char v3[7], char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        if (v3[6] == 6)\n
            v3[2] = 0;\n
        else\n
            v3[2] = a0;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4208343:sub_4036d7": null, "4208352:cgc_open_valve": "typedef struct struct_0 {\n
    char padding_0[3];\n
    char field_3;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_open_valve(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        v3->field_3 = 1;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4208498:sub_403772": null, "4208512:cgc_close_valve": "typedef struct struct_0 {\n
    char padding_0[3];\n
    char field_3;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_close_valve(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        v3->field_3 = 0;\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4208658:sub_403812": null, "4208672:cgc_set_status": "typedef struct struct_0 {\n
    char padding_0[6];\n
    char field_6;\n
} struct_0;\n
\n
int cgc_set_status(struct_0 *v1, char a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -15;\n
        return v0;\n
    }\n
    v1->field_6 = a0;\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208729:sub_403859": null, "4208736:cgc_set_in_service": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_in_service(char v3[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        v1 = cgc_set_status(v3, 2);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_set_fill_rate(v3, 12);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4208971:sub_40394b": null, "4208976:cgc_set_out_of_service": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_out_of_service(void* v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        v1 = cgc_set_status(v3, 6);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_set_fill_rate(v3, 0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_set_drain_rate(v3, 0);\n
        if (v1)\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 = cgc_close_valve(v3);\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4209303:sub_403a97": null, "4209312:cgc_is_in_service": "typedef struct struct_0 {\n
    char padding_0[6];\n
    char field_6;\n
} struct_0;\n
\n
int cgc_is_in_service(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = -15;\n
        return v0;\n
    }\n
    else if (v1->field_6 != 2)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    else\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
}\n
", "4209389:sub_403aed": null, "4209392:cgc_set_end_of_life": "typedef struct struct_0 {\n
    char padding_0[7];\n
    char field_7;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_set_end_of_life(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = -15;\n
        return v1;\n
    }\n
    else if (v2->field_7 != 1)\n
    {\n
        cgc_set_out_of_service(v2);\n
        v2->field_7 = 1;\n
        v1 = 0;\n
        return v1;\n
    }\n
    else\n
    {\n
        v1 = -19;\n
        return v1;\n
    }\n
}\n
", "4209509:sub_403b65": null, "4209520:cgc_add_water": "typedef struct struct_0 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_water(struct_0 *v3, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    int tmp_22;  // tmp #22\n
    char v1;  // [bp-0x11]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v4;  // esi\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    for (v1 = 0; v1 < a0; v1 += 1)\n
    {\n
        v4 = v3;\n
        tmp_22 = v4->field_5;\n
        v4->field_5 = v4->field_5 + 1;\n
        *(&v3[1].padding_0[2 + 4 * tmp_22]) = cgc_create_h2o();\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4209656:sub_403bf8": null, "4209664:cgc_rm_water": "typedef struct struct_0 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_rm_water(struct_0 *v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = -15;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= a0)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (!v4->field_5)\n
        {\n
            v3 = -18;\n
            return v3;\n
        }\n
        v5 = v4;\n
        v5->field_5 = v5->field_5 - 1;\n
        v2 = *(&v4[1].padding_0[2 + 4 * v4->field_5]);\n
        *(&v4[1].padding_0[2 + 4 * v4->field_5]) = 0;\n
        cgc_destroy_h2o(v2);\n
        v1 += 1;\n
    }\n
}\n
", "4209861:sub_403cc5": null, "4209872:cgc_do_fill": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_fill(char v3[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        if (v3[3] == 1 && v3[6] == 2)\n
        {\n
            v1 = cgc_add_water(v3, v3[1]);\n
            if (v1)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4210107:sub_403dbb": null, "4210112:cgc_do_drain": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_do_drain(char v3[7])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (!v1)\n
    {\n
        if (v3[6] == 2)\n
        {\n
            v1 = cgc_rm_water(v3, v3[2]);\n
            if (v1)\n
            {\n
                v2 = v1;\n
                return v2;\n
            }\n
        }\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
}\n
", "4210327:sub_403e97": null, "4210336:cgc_is_level_low": "typedef struct struct_0 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_level_low(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (v1)\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
    else if (25 >= v3->field_5)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210502:sub_403f46": null, "4210512:cgc_is_level_crit_low": "typedef struct struct_0 {\n
    char padding_0[5];\n
    char field_5;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_is_level_crit_low(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -15;\n
        return v2;\n
    }\n
    v1 = 0;\n
    v1 = cgc_is_end_of_life(v3);\n
    if (0 > v1)\n
    {\n
        v2 = v1;\n
        return v2;\n
    }\n
    else if (v1)\n
    {\n
        v2 = -19;\n
        return v2;\n
    }\n
    else if (5 >= v3->field_5)\n
    {\n
        v2 = 1;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4210680:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_fdwait": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:memset": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}