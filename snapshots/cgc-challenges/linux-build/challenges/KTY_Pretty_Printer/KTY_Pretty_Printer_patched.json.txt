{"4202496:_init": "extern struct_0 *g_40a5c4;\n
\n
int _init()\n
{\n
    if (g_40a5c4)\n
    {\n
        g_40a5c4();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4202656:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33979;\n
    v6 = v5 + 45;\n
    v7 = v5 + 45;\n
    if (v7 == v6)\n
        return v5 + 45;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33915;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 45;\n
    v9 = (v6 + 45 - (v6 + 45) >> 31) + (45 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a5c0;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a5c0)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = a0 * v5;\n
        if ((0 CONCAT v3) /m a0 != v5)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_malloc();\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = v3;\n
        v4 = cgc_memset(v2, 0);\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4203189:sub_4022b5": null, "4203200:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_isalpha())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isdigit();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203289:sub_402319": null, "4203296:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_islower())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isupper();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203385:sub_402379": null, "4203392:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203417:sub_402399": null, "4203424:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203449:sub_4023b9": null, "4203456:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203481:sub_4023d9": null, "4203488:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return ((v0 & -128) ^ 255) & 1;\n
}\n
", "4203515:sub_4023fb": null, "4203520:cgc_isblank": "int cgc_isblank(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 32)\n
        v1 = v2 == 9;\n
    return v1 & 1;\n
}\n
", "4203565:sub_40242d": null, "4203568:cgc_iscntrl": "int cgc_iscntrl(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 127)\n
        v1 = v2 < 32;\n
    return v1 & 1;\n
}\n
", "4203613:sub_40245d": null, "4203616:cgc_isgraph": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isgraph(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (v3 != 32)\n
    {\n
        v0 = v3;\n
        v2 = cgc_isprint();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4203693:sub_4024ad": null, "4203696:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 32)\n
        v1 = v2 != 127;\n
    return v1 & 1;\n
}\n
", "4203741:sub_4024dd": null, "4203744:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[9672 + v0];\n
}\n
", "4203775:sub_4024ff": null, "4203776:cgc_isspace": "int cgc_isspace(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 > 8)\n
    {\n
        v1 = 1;\n
        if (v2 < 14)\n
            return v1 & 1;\n
    }\n
    v1 = v2 == 32;\n
    return v1 & 1;\n
}\n
", "4203831:sub_402537": null, "4203840:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[9544 + v0];\n
}\n
", "4203871:sub_40255f": null, "4203872:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203886:sub_40256e": null, "4203888:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 | 32;\n
    return v0;\n
}\n
", "4203959:sub_4025b7": null, "4203968:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 & 95;\n
    return v0;\n
}\n
", "4204039:sub_402607": null, "4204048:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v3[2])\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2[0] = v3 + 3;\n
    v4 = v2;\n
    if (*((v4 + 4)))\n
    {\n
        return v2;\n
    }\n
    else if (v2[0] >= 0x40000)\n
    {\n
        v0[0] = v2;\n
        v4 = cgc_free_huge();\n
        return v4;\n
    }\n
    else\n
    {\n
        v0[0] = v2;\n
        cgc_insert_into_flist();\n
        v0[0] = v2;\n
        v4 = cgc_coalesce();\n
        return v4;\n
    }\n
}\n
", "4204183:sub_402697": null, "4204192:cgc_free_huge": "int cgc_free_huge(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = *(v1);\n
    return cgc_deallocate(v1);\n
}\n
", "4204240:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v7)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[6];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct struct_1 **v4;  // [bp-0x14]\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7 + 24 < 0x40000)\n
    {\n
        if ((v7 & 7))\n
            v7 = v7 - -7 & -8;\n
        if (v7 >= 0x80000000)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v7 += 24;\n
        v5 = 0;\n
        v0 = &v5;\n
        v4 = cgc_find_fit(v7);\n
        if (!v5)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v4 = 31;\n
                v5 = *((v1 + 184 + v4 * 4));\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
        cgc_remove_from_flist();\n
        v3 = *(v5) - v7;\n
        if (v3 > 48)\n
        {\n
            v2[0] = v5 + v7;\n
            v2[0] = v3;\n
            v2[1] = 1;\n
            v2[2] = 0;\n
            v2[3] = 0;\n
            *(v5) = v7;\n
            v2[5] = v5;\n
            v2[4] = *((v5 + 16));\n
            if (*((v5 + 16)))\n
                *((*((v5 + 16)) + 20)) = v2;\n
            *((v5 + 16)) = v2;\n
            cgc_insert_into_flist();\n
        }\n
        v6 = v5 + 24;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = cgc_malloc_huge();\n
        return v6;\n
    }\n
}\n
", "4204673:sub_402881": null, "4204688:cgc_malloc_huge": "int cgc_malloc_huge(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[6];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 += 24;\n
    v0 = &v2;\n
    if (cgc_allocate(v4, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v4;\n
    v1[1] = 0;\n
    v1[3] = 0;\n
    v1[2] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v3 = v1 + 1;\n
    return v3;\n
}\n
", "4204850:sub_402932": null, "4204864:cgc_find_fit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_fit(unsigned int v5, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    for (v2 = cgc_get_size_class(); v2 < 32; v2 = v2 + 1)\n
    {\n
        for (*(a0) = *((v1 + 184 + v2 * 4)); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v3 = -1;\n
    return v3;\n
}\n
", "4205042:sub_4029f2": null, "4205056:cgc_allocate_new_blk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_new_blk()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[6];  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0x40000;\n
    v0 = &v4;\n
    if (cgc_allocate(v2, 0))\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (*(&v4))\n
    {\n
        v3[0] = *(&v4);\n
        v3[0] = v2;\n
        v3[1] = 1;\n
        v3[3] = 0;\n
        v3[2] = 0;\n
        v3[5] = 0;\n
        v3[4] = 0;\n
        cgc_insert_into_flist();\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4205250:sub_402ac2": null, "4205264:cgc_get_size_class": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_size_class(unsigned int v3)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2 < 32)\n
            v0 = !(v3 <= *((v1 + (v2 << 2) + 52)));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4205375:sub_402b3f": null, "4205376:cgc_insert_into_flist": "extern unsigned int _GLOBAL_OFFSET_TABLE_[4];\n
\n
int cgc_insert_into_flist(unsigned int v3[4])\n
{\n
    unsigned int v0[4];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // eax\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = cgc_get_size_class(v3[0]);\n
    v3[1] = 1;\n
    if (!v0[11 + 2 + v1])\n
    {\n
        v5 = v0;\n
        v5[11 + 2 + v1] = v3;\n
        return v0;\n
    }\n
    v6 = v0;\n
    v3[2] = v6[11 + 2 + v1];\n
    *((v6[11 + 2 + v1] + 12)) = v3;\n
    v6[11 + 2 + v1] = v3;\n
    v5 = v3;\n
    *((v5 + 12)) = 0;\n
    return v3;\n
}\n
", "4205534:sub_402bde": null, "4205536:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_size_class(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((v0 + (v1 << 2) + 184)) == v3)\n
        *((v0 + v1 * 4 + 184)) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4205710:sub_402c8e": null, "4205712:cgc_coalesce": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[2];  // eax\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int, unsigned int [2]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v2 = v1->field_14;\n
        v2[0] = v1->field_0 + v2[0];\n
        v3 = v1->field_14;\n
        v3[0] = v1->field_10->field_0 + v3[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        cgc_remove_from_blist();\n
        v6 = cgc_remove_from_blist();\n
        return v6;\n
    }\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && !v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1);\n
        v4 = v1->field_14;\n
        v4[0] = v1->field_0 + v4[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        v6 = cgc_remove_from_blist();\n
        goto LABEL_402e7c;\n
    }\n
    v6 = v1;\n
    if (v6->field_14)\n
    {\n
        v6 = v1->field_14;\n
        if (!v6[1])\n
        {\n
            v6 = v1;\n
            if (v6->field_10)\n
            {\n
                v6 = v1->field_10;\n
                if (v6[1])\n
                {\n
                    cgc_remove_from_flist(v1->field_10);\n
                    cgc_remove_from_flist(v1);\n
                    v5 = v1;\n
                    v5->field_0 = v1->field_10->field_0 + v5->field_0;\n
                    cgc_insert_into_flist(v1);\n
                    v6 = cgc_remove_from_blist();\n
                }\n
            }\n
        }\n
    }\n
LABEL_402e7c:\n
    return v6;\n
}\n
", "4206220:sub_402e8c": null, "4206224:cgc_remove_from_blist": "int cgc_remove_from_blist(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    if (*((v0 + 20)))\n
        *((*((v0 + 20)) + 16)) = *((v0 + 16));\n
    v1 = v0;\n
    if (*((v1 + 16)))\n
    {\n
        v1 = *((v0 + 16));\n
        *((v1 + 20)) = *((v0 + 20));\n
    }\n
    return v1;\n
}\n
", "4206288:cgc_memchr": "int cgc_memchr(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (*((v2 + v0)) != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v2 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206384:cgc_memcmp": "int cgc_memcmp(char *v2, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a1)\n
        {\n
            if (*(v2) != *(a0))\n
            {\n
                v1 = *(a0) - *(v2);\n
                return v1;\n
            }\n
            v2 += 1;\n
            a0 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4206512:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v3;\n
}\n
", "4206598:sub_403006": null, "4206608:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v3;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v2 = v3;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v3;\n
        return v2;\n
    }\n
}\n
", "4206737:sub_403091": null, "4206752:cgc_output_number_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_printf(unsigned int v8, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (a0 >= a1)\n
    {\n
        v7 = cgc_output_number_printf(v8, (0 CONCAT a0) /m a1, a1, a2 - 1, a3);\n
        a0 = (0 CONCAT a0) /m a1 >> 32;\n
    }\n
    if (!v7 && a2 > 0)\n
    {\n
        while (true)\n
        {\n
            a2 -= 1;\n
            if (!a2)\n
                break;\n
            if (!(a3 & 1))\n
            {\n
                v5 = 32;\n
                cgc_transmit(v8, &v5, 1);\n
            }\n
            else\n
            {\n
                v6 = 48;\n
                cgc_transmit(v8, &v6, 1);\n
            }\n
        }\n
    }\n
    if ((a3 & 2))\n
    {\n
        if (a0 < 10)\n
            v1 = a0 + 48;\n
        else\n
            v1 = a0 + 55;\n
        v4 = v1;\n
        cgc_transmit(v8, &v4, 1);\n
        return v7 + 1;\n
    }\n
    else\n
    {\n
        if (a0 < 10)\n
            v0 = a0 + 48;\n
        else\n
            v0 = a0 + 87;\n
        v3 = v0;\n
        cgc_transmit(v8, &v3, 1);\n
        return v7 + 1;\n
    }\n
}\n
", "4207251:sub_403293": null, "4207264:cgc_fdprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fdprintf(unsigned int v18, char *a0)\n
{\n
    char *v0;  // [bp-0x68]\n
    unsigned int v1;  // [bp-0x64]\n
    unsigned int v2;  // [bp-0x60]\n
    unsigned int v3;  // [bp-0x5c]\n
    char v4;  // [bp-0x55]\n
    char v5;  // [bp-0x4d]\n
    char v6;  // [bp-0x45]\n
    char v7;  // [bp-0x3d]\n
    char v8;  // [bp-0x35]\n
    char v9;  // [bp-0x2d]\n
    struct struct_0 **v10;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v11;  // [bp-0x28]\n
    void* v12;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x1c]\n
    unsigned int v15;  // [bp-0x18]\n
    char *v16;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v17;  // [bp-0x10]\n
    char v19;  // [bp+0xc]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(a0))\n
    {\n
        v20 = a0;\n
        a0 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            cgc_transmit(v18, &v4, 1);\n
LABEL_4035d2:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = a0;\n
                    a0 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                cgc_transmit(v18, &v8, 1);\n
                goto LABEL_40358b;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = &*(v22)->field_0;\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        cgc_transmit(v18, &v6, 1);\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number_printf(v18, v16, 10, v12, v13);\n
                    goto LABEL_40358b;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        cgc_transmit(v18, &v7, 1);\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_40358b;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    cgc_transmit(v18, &v5, 1);\n
LABEL_40358b:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_4035d2;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = &*(v24)->field_0;\n
            cgc_output_number_printf(v18, v11, 16, v12, v13);\n
            goto LABEL_40358b;\n
        }\n
    }\n
    return v14;\n
}\n
", "4208097:sub_4035e1": null, "4208112:cgc_output_number_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_sprintf(unsigned int *v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char v3;  // [bp-0x2d]\n
    char v4;  // [bp-0x25]\n
    char v5;  // [bp-0x1d]\n
    char v6;  // [bp-0x15]\n
    struct struct_0 **v8;  // eax\n
    unsigned int *v9;  // eax\n
    struct struct_0 **v10;  // eax\n
    unsigned int *v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a1 >= a2)\n
    {\n
        cgc_output_number_sprintf(v7, a0, (0 CONCAT a1) /m a2, a2, a3 - 1, a4);\n
        a1 = (0 CONCAT a1) /m a2 >> 32;\n
    }\n
    if (a1 < a2 && a3 > 0)\n
    {\n
        while (true)\n
        {\n
            a3 -= 1;\n
            if (!a3)\n
                break;\n
            if ((a4 & 1))\n
            {\n
                v6 = 48;\n
                *(a0)->field_0 = v6;\n
            }\n
            else\n
            {\n
                v5 = 32;\n
                *(a0)->field_0 = v5;\n
            }\n
            v8 = a0;\n
            *(v8) = *(v8) + 1;\n
            v9 = v7;\n
            *(v9) = *(v9) + 1;\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (a1 < 10)\n
            v1 = a1 + 48;\n
        else\n
            v1 = a1 + 55;\n
        v4 = v1;\n
        *(a0)->field_0 = v4;\n
    }\n
    else\n
    {\n
        if (a1 < 10)\n
            v0 = a1 + 48;\n
        else\n
            v0 = a1 + 87;\n
        v3 = v0;\n
        *(a0)->field_0 = v3;\n
    }\n
    v10 = a0;\n
    *(v10) = *(v10) + 1;\n
    v11 = v7;\n
    *(v11) = *(v11) + 1;\n
    return v11;\n
}\n
", "4208583:sub_4037c7": null, "4208592:cgc_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprintf(char *v18, char *a0)\n
{\n
    char *v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    unsigned int v3;  // [bp-0x60]\n
    char v4;  // [bp-0x59]\n
    char v5;  // [bp-0x51]\n
    char v6;  // [bp-0x49]\n
    char v7;  // [bp-0x41]\n
    char v8;  // [bp-0x39]\n
    char v9;  // [bp-0x31]\n
    struct struct_0 **v10;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v11;  // [bp-0x2c]\n
    void* v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x1c]\n
    unsigned int v16;  // [bp-0x18]\n
    char *v17;  // [bp-0x14]\n
    char v19;  // [bp+0xc]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(a0))\n
    {\n
        v20 = a0;\n
        a0 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            *(v18) = v4;\n
            v18 += 1;\n
            v14 += 1;\n
LABEL_403adf:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = a0;\n
                    a0 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                *(v18) = v8;\n
                v18 += 1;\n
                v14 += 1;\n
                goto LABEL_403aa2;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = *(v22);\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        *(v18) = v6;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number_sprintf(&v14, &v18, v16, 10, v12, v13);\n
                    goto LABEL_403aa2;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        *(v18) = v7;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_403aa2;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    *(v18) = v5;\n
                    v18 += 1;\n
                    v14 += 1;\n
LABEL_403aa2:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_403adf;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = &*(v24)->field_0;\n
            cgc_output_number_sprintf(&v14, &v18, v11, 16, v12, v13);\n
            goto LABEL_403aa2;\n
        }\n
    }\n
    v25 = v18;\n
    v18 = v25 + 1;\n
    *(v25) = 0;\n
    return v14;\n
}\n
", "4209405:sub_403afd": null, "4209408:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(char *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = cgc_malloc(a0);\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v2 = cgc_malloc(a0);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = &v4[24];\n
        if (a0 >= *(v1) - 24)\n
            cgc_memcpy(v2, v4, *(v1) - 24);\n
        else\n
            cgc_memcpy(v2, v4, a0);\n
        cgc_free(v4);\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_free(v4);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4209666:sub_403c02": null, "4209680:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (!*(v0))\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        v3 = v0;\n
        v0 = v3 + 1;\n
        if (*(v3) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4209764:sub_403c64": null, "4209776:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(a0) - *(v2);\n
}\n
", "4209904:cgc_strcpy": "int cgc_strcpy(unsigned int v1, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    for (v0 = 0; *(a0); *((v1 + v4)) = *(v3))\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4209988:sub_403d44": null, "4210000:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4210052:sub_403d84": null, "4210064:cgc_strsep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strsep(struct struct_0 **v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = cgc_strchr(a0, *(v2)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    a0 = &*(v4)->field_0;\n
    if (!*(v2))\n
    {\n
        *(v4) = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        *(v4) = v2 + 1;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4210280:sub_403e68": null, "4210288:cgc_strtol": "int cgc_strtol(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v12;\n
    if (a1 == 1)\n
    {\n
LABEL_403eb8:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_403eb8;\n
        if (a1 < 0)\n
            goto LABEL_403eb8;\n
        while (true)\n
        {\n
            if (v6[0] != 32 && v6[0] != 9 && v6[0] != 12 && v6[0] != 10 && v6[0] != 11)\n
                break;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 = &v6[1];\n
        }\n
        if (*(v6) == 43)\n
            v6 = &v6[1];\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_403faf:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_403faf;\n
                v6 = &v6[1];\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_404024;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_404024:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_404182;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_404142;\n
            }\n
            if (!v7)\n
            {\n
LABEL_404142:\n
                if (v8 >= a1)\n
                    goto LABEL_404182;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                *(&v6) = &v6[1];\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_404139;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_404139:\n
                v8 += 10;\n
                goto LABEL_404142;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_4040b8;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_4040b8:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_404182:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v12;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4211150:sub_4041ce": null, "4211152:cgc_strtoul": "int cgc_strtoul(char v0[2], unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4211211:sub_40420b": null, "4211216:cgc_array_create": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8[2];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_array_create(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3[4];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(16);\n
    if (v2 && a0)\n
    {\n
        v2->field_c = a0;\n
        v2->field_0 = 0;\n
        if (v5 <= 0)\n
            v0 = 16;\n
        else\n
            v0 = v5;\n
        v2->field_4 = v0;\n
        v2->field_8 = cgc_malloc(v2->field_4 * 4);\n
        if (v2->field_8)\n
        {\n
            v3[0] = v2;\n
            return v3;\n
        }\n
LABEL_4042ca:\n
        if (v2)\n
        {\n
            if (v2->field_8)\n
                cgc_free(v2->field_8);\n
            cgc_free(v2);\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    goto LABEL_4042ca;\n
}\n
", "4211472:cgc__array_double_size": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__array_double_size(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4[3];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3->field_4 >= 0x20000000)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = cgc_realloc(v3->field_8, v3->field_4 * 8);\n
    if (!v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v3->field_8 = v1;\n
    v4 = v3;\n
    v4[1] = v4[1] * 2;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4211626:sub_4043aa": null, "4211632:cgc_array_append": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_array_append(unsigned int v2[3], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3[3];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v2 && a0)\n
    {\n
        if (v2[1] == v2[0] && cgc__array_double_size(v2))\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
        *((v2[2] + v2[0] * 4)) = a0;\n
        v3 = v2;\n
        v3[0] = v3[0] + 1;\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = -1;\n
    return v1;\n
}\n
", "4211787:sub_40444b": null, "4211792:cgc_array_get": "int cgc_array_get(unsigned int v1[3], unsigned int *a0)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 && a0 < v1[0])\n
    {\n
        v0 = *((v1[2] + a0 * 4));\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4211861:sub_404495": null, "4211872:cgc_array_length": "int cgc_array_length(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = *(v1);\n
    return v0;\n
}\n
", "4211917:sub_4044cd": null, "4211920:cgc_array_destroy": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8[2];\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_array_destroy(struct_2 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
        return v2;\n
    if (!v2->field_8)\n
        return cgc_free(v2);\n
    for (v1 = 0; v1 < v2->field_0; v1 += 1)\n
    {\n
        if (v2->field_8[v1])\n
            v2->field_c();\n
    }\n
    cgc_free(v2->field_8);\n
}\n
", "4212090:sub_40457a": null, "4212096:cgc_htbl_create": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8[2];\n
    char padding_c[8];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_htbl_create(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3[6];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc(24);\n
    if (v2 && a0)\n
    {\n
        cgc_memset(v2, 0, 24);\n
        v2->field_14 = a0;\n
        if (v5 <= 0)\n
            v0 = 16;\n
        else\n
            v0 = v5;\n
        v2->field_0 = v0;\n
        v2->field_4 = 0;\n
        v2->field_8 = cgc_malloc(v2->field_0 * 4);\n
        if (v2->field_8)\n
        {\n
            cgc_memset(v2->field_8, 0, v2->field_0 * 4);\n
            v3[0] = v2;\n
            return v3;\n
        }\n
LABEL_404680:\n
        if (v2)\n
        {\n
            if (v2->field_8)\n
                cgc_free(v2->field_8);\n
            cgc_free(v2);\n
        }\n
        v3 = 0;\n
        return v3;\n
    }\n
    goto LABEL_404680;\n
}\n
", "4212422:sub_4046c6": null, "4212432:cgc__htbl_hash": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__htbl_hash(unsigned int *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 2654404609;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= cgc_strlen(a0))\n
            break;\n
        v2 = *((a0 + v3)) + v2;\n
        v2 *= 32;\n
        v3 += 1;\n
    }\n
    v2 = (0 CONCAT v2) /m 2654404609 >> 32;\n
    return (0 CONCAT v2) /m *(v4) >> 32;\n
}\n
", "4212579:sub_404763": null, "4212592:cgc__htbl_double_size": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    char *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__htbl_double_size(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4[3];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3->field_0 >= 0x20000000)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = cgc_realloc(v3->field_8, v3->field_0 * 8);\n
    if (!v1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    cgc_memset(v1 + v3->field_0 * 4, 0, v3->field_0 * 4);\n
    v3->field_8 = v1;\n
    v4 = v3;\n
    v4[0] = v4[0] * 2;\n
    v2 = 0;\n
    return v2;\n
}\n
", "4212788:sub_404834": null, "4212800:cgc_htbl_put": "typedef struct struct_4 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    struct struct_2 *field_10;\n
    struct struct_3 *field_14;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    struct struct_3 *field_0;\n
} struct_3;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_htbl_put(struct_4 *v9, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    void* v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    void* v4;  // [bp-0x20]\n
    unsigned int v5[3];  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x14]\n
    struct struct_1 **v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0xc]\n
    struct_4 *v10;  // edx\n
    unsigned int v11[3];  // ecx\n
    struct_4 *v12;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v9 && a0 && a1)\n
    {\n
        v10 = v9;\n
        v3 = v10->field_4;\n
        v4 = 0;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v1 = v10->field_0;\n
        v2 = 0;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t2,1] = t3\n
        [D] PutI(136:I8x8)[t2,1] = 0x01\n
        [D] PutI(136:I8x8)[t2,0] = 0x00\n
        [D] PutI(72:F64x8)[t25,0] = t29\n
        [D] PutI(136:I8x8)[t25,0] = 0x01\n
        [D] PutI(72:F64x8)[t25,1] = t22\n
        [D] PutI(136:I8x8)[t25,1] = 0x01\n
        [D] PutI(136:I8x8)[t45,0] = 0x00\n
        [D] PutI(72:F64x8)[t59,0] = t60\n
        [D] PutI(136:I8x8)[t59,0] = 0x01\n
        [D] PutI(136:I8x8)[t59,0] = 0x00\n
        if ((CmpF(([D] GetI(136:I8x8)[t45,0] ? [D] GetI(72:F64x8)[t45,0] : nan), ([D] GetI(136:I8x8)[t45,1] ? [D] GetI(72:F64x8)[t45,1] : nan)) & 1) != 1 && cgc__htbl_double_size(v9))\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v7 = cgc__htbl_hash(v9, a0);\n
        while (true)\n
        {\n
            v6 = *((v9->field_8 + v7 * 4));\n
            if (!v6)\n
                break;\n
            if (v6 && v6->field_0 && !cgc_strcmp(v6->field_0, a0))\n
            {\n
                v9->field_14();\n
                v6->field_4 = a1;\n
                v8 = 0;\n
                return v8;\n
            }\n
            v7 = v7 + 1;\n
            if (v7 == v9->field_0)\n
                v7 = 0;\n
        }\n
        v5[0] = cgc_malloc(12);\n
        if (!v5)\n
        {\n
            v8 = -1;\n
            return v8;\n
        }\n
        v5[0] = cgc_strdup();\n
        v5[1] = a1;\n
        v5[2] = 0;\n
        if (!v9->field_10)\n
        {\n
            v11 = v5;\n
            v9->field_c = v11;\n
            v9->field_10 = &v11[0];\n
        }\n
        else\n
        {\n
            v9->field_10->field_8 = v5;\n
            v9->field_10 = &v5[0];\n
        }\n
        *((v9->field_8 + v7 * 4)) = v5;\n
        v12 = v9;\n
        v12->field_4 = v12->field_4 + 1;\n
        v8 = 0;\n
        return v8;\n
    }\n
    v8 = -1;\n
    return v8;\n
}\n
", "4213336:sub_404a58": null, "4213344:cgc_htbl_get": "typedef struct struct_1 {\n
    char *field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_htbl_get(unsigned int v5[3], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_1 *v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0 && v5[1] > 0)\n
    {\n
        v3 = cgc__htbl_hash(v5, a0);\n
        for (v2 = 0; v2 < v5[0]; v2 += 1)\n
        {\n
            v1 = *((v5[2] + v3 * 4));\n
            if (!v1)\n
                break;\n
            if (v1->field_0 && !cgc_strcmp(v1->field_0, a0))\n
            {\n
                v4 = v1->field_4;\n
                return v4;\n
            }\n
            v3 = v3 + 1;\n
            if (v3 == v5[0])\n
                v3 = 0;\n
        }\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4213608:sub_404b68": null, "4213616:cgc_htbl_destroy": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8[2];\n
    char padding_c[8];\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
    char padding_c[8];\n
    struct struct_0 *field_14;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0[2];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_htbl_destroy(struct_1 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[2];  // [bp-0x10], Other Possible Types: struct_2 *\n
    struct struct_4 **v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    if (v3->field_8)\n
    {\n
        for (v2 = 0; v2 < v3->field_0; v2 = v2 + 1)\n
        {\n
            v1 = *((&v3->field_8[0] + 0x4 * v2));\n
            if (v1)\n
            {\n
                if (v1->field_0)\n
                    cgc_free(v1->field_0);\n
                if (v1->field_4)\n
                    v3->field_14();\n
                cgc_free(v1);\n
                v1[0] = 0;\n
            }\n
        }\n
        cgc_free(v3->field_8);\n
        v3->field_8 = 0;\n
    }\n
    v4 = cgc_free(v3);\n
    v3 = 0;\n
    return v4;\n
}\n
", "4213865:sub_404c69": null, "4213872:cgc_eat_ws": "int cgc_eat_ws(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (v2)\n
        {\n
            v1 = 0;\n
            if (*(v2))\n
                v1 = *(v2) <= 32;\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4213967:sub_404ccf": null, "4213968:cgc_print_escaped": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_escaped(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    char v4;  // [bp-0xe]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // eax\n
    char *v10;  // ecx\n
    unsigned int v11;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    memset(&v4, 0, 2);\n
    memset(&v3, 0, 2);\n
    v2 = v1 - 8936;\n
    while (true)\n
    {\n
        v9 = a0;\n
        a0 = v9 - 1;\n
        if (!v9)\n
            break;\n
        v10 = v5;\n
        v5 = v10 + 1;\n
        v4 = v10[v7];\n
        v0 = v4;\n
        if (v0 == 8)\n
        {\n
            cgc_fdprintf(1, v1 - 8910);\n
        }\n
        else if (v0 == 9)\n
        {\n
            cgc_fdprintf(1, v1 - 8898);\n
        }\n
        else if (v0 == 10)\n
        {\n
            cgc_fdprintf(1, v1 - 8904);\n
        }\n
        else if (v0 == 12)\n
        {\n
            cgc_fdprintf(1, v1 - 8907);\n
        }\n
        else if (v0 == 13)\n
        {\n
            cgc_fdprintf(1, v1 - 8901);\n
        }\n
        else if (v0 == 34)\n
        {\n
            cgc_fdprintf(1, v1 - 8919);\n
        }\n
        else if (v0 == 47)\n
        {\n
            cgc_fdprintf(1, v1 - 8913);\n
        }\n
        else if (v0 != 92)\n
        {\n
            cgc_fdprintf(1, v1 - 8895);\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, v1 - 8916);\n
        }\n
    }\n
    v11 = v6;\n
    return v9;\n
}\n
", "4214539:sub_404f0b": null, "4214544:cgc_print_indent": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_indent(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v1 = 0; v1 < v2 << 1; v1 += 1)\n
    {\n
        cgc_fdprintf(1, v0 - 8871);\n
    }\n
    return v1;\n
}\n
", "4214638:sub_404f6e": null, "4214640:cgc_kty_int_to_string": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_kty_int_to_string(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = v1->field_4;\n
    return cgc_fdprintf(1, \"%d\");\n
}\n
", "4214700:sub_404fac": null, "4214704:cgc_kty_double_to_string": null, "4214967:sub_4050b7": null, "4214976:cgc_kty_string_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kty_string_to_string(unsigned int v2[3])\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"\\\"\");\n
    cgc_print_escaped(v2[1], v2[2]);\n
    v4 = v1;\n
    return cgc_fdprintf(1, v0 - 8421);\n
}\n
", "4215081:sub_405129": null, "4215088:cgc_kty_object_to_string": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char *field_0;\n
    unsigned int field_4;\n
    struct struct_3 *field_8;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kty_object_to_string(struct_2 *v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_3 *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_1 *v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    cgc_fdprintf(1, \"{\");\n
    v3 = v6->field_4;\n
    if (v3)\n
    {\n
        cgc_fdprintf(1, v1 - 8404);\n
        for (v2 = &v3->field_c->field_0; v2; v2 = *((v2 + 8)))\n
        {\n
            if (v4 > 0)\n
                cgc_fdprintf(1, v1 - 8876);\n
            v4 += 1;\n
            cgc_print_indent(a0 + 1);\n
            cgc_fdprintf(1, v1 - 8421);\n
            v0 = *(v2);\n
            cgc_print_escaped(v0, cgc_strlen(*(v2)));\n
            cgc_fdprintf(1, v1 - 8873);\n
            cgc_kty_print_item(*((v2 + 4)));\n
        }\n
    }\n
    if (v4 <= 0)\n
        return cgc_fdprintf(1, v1 - 8869);\n
    cgc_fdprintf(1, v1 - 8404);\n
    cgc_print_indent(a0);\n
    return cgc_fdprintf(1, v1 - 8869);\n
}\n
", "4215487:sub_4052bf": null, "4215488:cgc_kty_print_item": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kty_print_item()\n
{\n
    unsigned int v2;  // [bp+0x0]\n
    unsigned int v5[3];  // [bp+0x10000c]\n
\n
    v2 = v5;\n
    cgc_kty_cat_to_string();\n
    return;\n
}\n
", "4215727:sub_4053af": null, "4215728:cgc_kty_array_to_string": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4[3];\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kty_array_to_string(struct_0 *v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    cgc_fdprintf(1, \"[\");\n
    if (cgc_array_length(v6->field_4) > 0)\n
        cgc_fdprintf(1, v1 - 8404);\n
    v4 = 0;\n
    while (true)\n
    {\n
        v0 = v4;\n
        if (v0 >= cgc_array_length(v6->field_4))\n
            break;\n
        if (v3 > 0)\n
            cgc_fdprintf(1, v1 - 8876);\n
        v3 += 1;\n
        cgc_print_indent(a0 + 1);\n
        v2 = cgc_array_get(v6->field_4, v4);\n
        cgc_kty_print_item(v2);\n
        v4 += 1;\n
    }\n
    if (v3 <= 0)\n
        return cgc_fdprintf(1, v1 - 8865);\n
    cgc_fdprintf(1, v1 - 8404);\n
    cgc_print_indent(a0);\n
    return cgc_fdprintf(1, v1 - 8865);\n
}\n
", "4216085:sub_405515": null, "4216096:cgc_kty_boolean_to_string": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char field_4;\n
} struct_0;\n
\n
int cgc_kty_boolean_to_string(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
\n
    v2 = \"false\";\n
    if (v1->field_4)\n
        v2 = \"true\";\n
    v0 = v2;\n
    return cgc_fdprintf(1, \"%s\");\n
}\n
", "4216175:sub_40556f": null, "4216176:cgc_kty_null_to_string": "int cgc_kty_null_to_string(unsigned int v0)\n
{\n
    return cgc_fdprintf(1, \"null\");\n
}\n
", "4216226:sub_4055a2": null, "4216240:cgc_kty_cat_to_string": "extern struct_0 *g_parser;\n
\n
int cgc_kty_cat_to_string(unsigned int v0)\n
{\n
    unsigned int *v1;  // eax\n
\n
    v1 = g_parser;\n
    *(v1) = *(v1) + 1;\n
    return cgc_fdprintf(1, \"=^.^=\");\n
}\n
", "4216303:sub_4055ef": null, "4216304:cgc_kty_dumps": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_parser;\n
\n
int cgc_kty_dumps(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc]\n
    unsigned int *v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v4 = g_parser;\n
    g_parser->field_0 = 0;\n
    if (v3)\n
    {\n
        v0 = v2;\n
        v4 = cgc_kty_print_item(v3);\n
    }\n
    return v4;\n
}\n
", "4216385:sub_405641": null, "4216400:cgc_parse_number": null, "4216770:sub_4057c2": null, "4216784:cgc_parse_string": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_string()\n
{\n
    char v2;  // [bp-0x1d]\n
    unsigned int v3;  // [bp-0x1c]\n
    char *v4;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc]\n
    unsigned int v8[3];  // [bp+0x4]\n
    char v9;  // [bp+0x8]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = *(&v9) + 1;\n
    v8[0] = 2;\n
    v8[1] = 0;\n
    if (*(*(&v9)) != 34)\n
    {\n
        v7 = 0;\n
        return;\n
    }\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v4))\n
            v2 = *(v4) != 34;\n
        if ((v2 & 1))\n
        {\n
            if (*(v4) == 92)\n
            {\n
                v4 += 1;\n
                v6 += 1;\n
            }\n
            v4 += 1;\n
            v5 += 1;\n
            v6 += 1;\n
        }\n
        else if (v5 < 0x100)\n
        {\n
            v8[1] = cgc_malloc(v5 + 1);\n
            if (!v8[1])\n
            {\n
                v7 = 0;\n
                return;\n
            }\n
            v4 = *(&v9) + 1;\n
            v6 += 2;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            return;\n
        }\n
    }\n
}\n
", "4217407:sub_405a3f": null, "4217408:cgc_parse_array": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_array(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    *(v6) = 4;\n
    *((v6 + 4)) = 0;\n
    a0 = cgc_eat_ws(a0 + 1);\n
    if (*(a0) == 93)\n
    {\n
        v4 = a0 + 1;\n
        return v4;\n
    }\n
    v3 = cgc_malloc(12);\n
    if (v3)\n
    {\n
        *((v6 + 4)) = cgc_array_create(4, v2 - 18832);\n
        if (*((v6 + 4)))\n
        {\n
            v1 = v3;\n
            cgc_eat_ws(a0);\n
            a0 = cgc_eat_ws(cgc_parse_item(v1));\n
            if (a0)\n
            {\n
                cgc_array_append(*((v6 + 4)), v3);\n
                v3 = 0;\n
                while (true)\n
                {\n
                    if (*(a0) != 44)\n
                    {\n
                        if (*(a0) == 93)\n
                        {\n
                            v4 = a0 + 1;\n
                            return v4;\n
                        }\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v3 = cgc_malloc(12);\n
                        if (!v3)\n
                            break;\n
                        a0 += 1;\n
                        v0 = v3;\n
                        cgc_eat_ws(a0);\n
                        a0 = cgc_eat_ws(cgc_parse_item(v0));\n
                        if (!a0)\n
                            break;\n
                        cgc_array_append(*((v6 + 4)), v3);\n
                        v3 = 0;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    if (v3)\n
        cgc_free_kty_item();\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217917:sub_405c3d": null, "4217920:cgc_free_kty_item": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    void* field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free_kty_item(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2 = &v3[0];\n
    v0 = v2->field_0;\n
    if (v0 == 2)\n
    {\n
        if (v2->field_4)\n
            cgc_free(v2->field_4);\n
    }\n
    else\n
    {\n
        if (v0 == 3)\n
        {\n
            cgc_htbl_destroy(v2->field_4);\n
        }\n
        else if (v0 == 4)\n
        {\n
            cgc_array_destroy(v2->field_4);\n
        }\n
    }\n
    return cgc_free(v2);\n
}\n
", "4218121:sub_405d09": null, "4218128:cgc_parse_item": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_item()\n
{\n
    unsigned int v5;  // [bp+0x0]\n
    unsigned int v6;  // [bp+0x4]\n
    unsigned int v8;  // [bp+0xffffc]\n
    unsigned int v9;  // [bp+0x10000c]\n
    unsigned int v10;  // [bp+0x100010]\n
\n
    v5 = v9;\n
    v6 = v10;\n
    v8 = cgc_parse_string(v9);\n
    return;\n
}\n
", "4218646:sub_405f16": null, "4218656:cgc_parse_object": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_parse_object(unsigned int v11, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
\n
    v10 = v12;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    *(v11) = 3;\n
    *((v11 + 4)) = 0;\n
    a0 = cgc_eat_ws(a0 + 1);\n
    if (*(a0) == 125)\n
    {\n
        v9 = a0 + 1;\n
        return v9;\n
    }\n
    v6 = cgc_malloc(12);\n
    if (v6)\n
    {\n
        *((v11 + 4)) = cgc_htbl_create(4, v4 - 18832);\n
        if (*((v11 + 4)))\n
        {\n
            v3 = v6;\n
            cgc_eat_ws(a0);\n
            a0 = cgc_eat_ws(cgc_parse_string(v3));\n
            v8 = *((v6 + 4));\n
            if (!a0)\n
            {\n
LABEL_406043:\n
            }\n
            else\n
            {\n
                if (!(*(a0) == 58))\n
                    goto LABEL_406043;\n
                a0 += 1;\n
                v7 = cgc_malloc(12);\n
                if (v7)\n
                {\n
                    v2 = v7;\n
                    cgc_eat_ws(a0);\n
                    a0 = cgc_eat_ws(cgc_parse_item(v2));\n
                    if (a0)\n
                    {\n
                        cgc_htbl_put(*((v11 + 4)), v8, v7);\n
                        if (!cgc_strcmp(v4 - 8841, v8) && *(v7) == 2)\n
                        {\n
                            v5 = cgc_malloc(12);\n
                            if (!v5)\n
                                goto LABEL_40638b;\n
                            *(v5) = *(v7);\n
                            *((v5 + 4)) = cgc_strdup();\n
                            *((v5 + 8)) = *((v7 + 8));\n
                            cgc_array_append(*((*((v4 + 312)) + 4)), v5);\n
                            v5 = 0;\n
                        }\n
                        cgc_free_kty_item(v6);\n
                        v6 = 0;\n
                        v7 = 0;\n
                        while (true)\n
                        {\n
                            if (*(a0) != 44)\n
                            {\n
                                if (*(a0) == 125)\n
                                {\n
                                    v9 = a0 + 1;\n
                                    return v9;\n
                                }\n
                                break;\n
                            }\n
                            v6 = cgc_malloc(12);\n
                            if (!v6)\n
                                break;\n
                            v1 = v6;\n
                            cgc_eat_ws(a0 + 1);\n
                            a0 = cgc_eat_ws(cgc_parse_string(v1));\n
                            v8 = *((v6 + 4));\n
                            if (!a0)\n
                            {\n
LABEL_406218:\n
                                break;\n
                            }\n
                            else\n
                            {\n
                                if (!(*(a0) == 58))\n
                                    goto LABEL_406218;\n
                                a0 += 1;\n
                                v7 = cgc_malloc(12);\n
                                if (!v7)\n
                                    break;\n
                                v0 = v7;\n
                                cgc_eat_ws(a0);\n
                                a0 = cgc_eat_ws(cgc_parse_item(v0));\n
                                if (!a0)\n
                                    break;\n
                                cgc_htbl_put(*((v11 + 4)), v8, v7);\n
                                if (!cgc_strcmp(v4 - 8841, v8) && *(v7) == 2)\n
                                {\n
                                    v5 = cgc_malloc(12);\n
                                    if (!v5)\n
                                        break;\n
                                    *(v5) = *(v7);\n
                                    *((v5 + 4)) = cgc_strdup();\n
                                    *((v5 + 8)) = *((v7 + 8));\n
                                    cgc_array_append(*((*((v4 + 312)) + 4)), v5);\n
                                    v5 = 0;\n
                                }\n
                                cgc_free_kty_item(v6);\n
                                v6 = 0;\n
                                v7 = 0;\n
                            }\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
LABEL_40638b:\n
    if (v7)\n
        cgc_free_kty_item(v7);\n
    if (v6)\n
        cgc_free_kty_item(v6);\n
    if (v5)\n
        cgc_free_kty_item(v5);\n
    v9 = 0;\n
    return v9;\n
}\n
", "4219875:sub_4063e3": null, "4219888:cgc_kty_loads": "typedef struct struct_1 {\n
    char padding_0[312];\n
    struct struct_0 *field_138;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char padding_0[312];\n
    struct struct_2 *field_138;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kty_loads(char *v9)\n
{\n
    unsigned int v0;  // [bp-0x128]\n
    struct_1 *v1;  // [bp-0x124]\n
    unsigned int v2[2];  // [bp-0x120]\n
    unsigned int v3;  // [bp-0x11c]\n
    void* v4;  // [bp-0x118]\n
    void* v5;  // [bp-0x114]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_3 *v11;  // eax\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = -1;\n
    v2[0] = cgc_calloc(1, 12);\n
    if (v2)\n
    {\n
        if (v1->field_138->field_4)\n
            cgc_array_destroy(v1->field_138->field_4);\n
        v11 = v1;\n
        v11->field_138->field_4 = cgc_array_create(16, &v1[59].padding_0[188]);\n
        if (v11->field_138->field_4)\n
        {\n
            v0 = v2;\n
            cgc_eat_ws(v9);\n
            v6 = cgc_parse_item(v0);\n
            if (v6)\n
            {\n
                v7 = v2;\n
                return v7;\n
            }\n
        }\n
    }\n
    if (v2)\n
        cgc_free_kty_item(v2);\n
    v7 = 0;\n
    return v7;\n
}\n
", "4220241:sub_406551": null, "4220256:cgc_kty_init": "typedef struct struct_0 {\n
    char padding_0[312];\n
    unsigned int field_138;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kty_init(unsigned int v2[4])\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!v2)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    v2[2] = &v3[64].padding_0[224];\n
    v2[3] = &v3[53].padding_0[116];\n
    v3->field_138 = v2;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4220372:sub_4065d4": null, "4220384:cgc_read_until": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(unsigned int v6, struct_0 *a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0;\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
        {\n
LABEL_406690:\n
            *((v3 - 1)) = 0;\n
            v5 = v3 - a0;\n
            return v5;\n
        }\n
        v0 = &v2;\n
        if (cgc_receive(v6, v3, 1))\n
        {\n
LABEL_406652:\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v2))\n
            goto LABEL_406652;\n
        v7 = v3;\n
        v3 = &v7->field_0;\n
        if (v7->field_-1 == a2)\n
            goto LABEL_406690;\n
        v4 += 1;\n
    }\n
}\n
", "4220587:sub_4066ab": null, "4220592:cgc_import_kty": "typedef struct struct_3 {\n
    char padding_0[316];\n
    struct struct_1 *field_13c;\n
    unsigned int field_140[2];\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    char padding_0[316];\n
    struct struct_1 *field_13c;\n
    unsigned int field_140;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int my_kty;\n
\n
int cgc_import_kty(unsigned int v1)\n
{\n
    struct_3 *v0;  // [bp-0xc]\n
    struct_2 *v2;  // ebx\n
    struct_2 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (my_kty)\n
    {\n
        cgc_free_kty_item(v0->field_140);\n
        v0->field_140 = 0;\n
    }\n
    v0->field_13c->field_0 = 0;\n
    v3 = v0;\n
    v3->field_140 = v2->field_13c->field_c();\n
    if (!v3->field_140)\n
    {\n
        v3 = cgc_fdprintf(1, &v0[27].padding_0[83]);\n
        return v3;\n
    }\n
    return v0;\n
}\n
", "4220747:sub_40674b": null, "4220752:cgc_print_kty": "typedef struct struct_2 {\n
    char padding_0[316];\n
    struct struct_1 *field_13c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int my_kty;\n
\n
int cgc_print_kty()\n
{\n
    struct_2 *v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    struct_2 *v3;  // ebx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (my_kty)\n
    {\n
        v0->field_13c->field_0 = 0;\n
        v2 = v3->field_13c->field_8();\n
        return v2;\n
    }\n
    v2 = cgc_fdprintf(1, &v0[27].padding_0[191]);\n
    return v2;\n
}\n
", "4220858:sub_4067ba": null, "4220864:cgc_nyan": "typedef struct struct_3 {\n
    char padding_0[316];\n
    struct struct_2 *field_13c;\n
    unsigned int field_140;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_5 {\n
    char field_0;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[4];\n
    char *field_4;\n
    unsigned int field_8;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4[3];\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern struct_6 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_nyan()\n
{\n
    unsigned int v0;  // [bp-0x5a8]\n
    unsigned int v1;  // [bp-0x5a4]\n
    unsigned int v2;  // [bp-0x5a0]\n
    struct_3 *v3;  // [bp-0x59c]\n
    unsigned int v4;  // [bp-0x598]\n
    struct_4 *v5;  // [bp-0x594]\n
    char v6;  // [bp-0x590]\n
    char v7;  // [bp-0x410]\n
    char v8;  // [bp-0x11]\n
    struct_5 *v9;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    struct_1 *v14;  // eax, Other Possible Types: unsigned int\n
\n
    v11 = v13;\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    memset(&v7, 0, 0x400);\n
    memcpy(&v6, &v3[27].padding_0[75], 384);\n
    if (!v3->field_140)\n
    {\n
        v14 = cgc_fdprintf(1, &v3[27].padding_0[83]);\n
        return v14;\n
    }\n
    v3->field_13c->field_8();\n
    v14 = v3->field_13c;\n
    if (*(v14) < 3)\n
        return v3->field_13c;\n
    cgc_fdprintf(1, &v3[27].padding_0[147]);\n
    v9 = &v7;\n
    v10 = 0;\n
    while (true)\n
    {\n
        v2 = v10;\n
        if (v2 >= cgc_array_length(v3->field_13c->field_4))\n
            break;\n
        v5 = cgc_array_get(v3->field_13c->field_4, v10);\n
        v1 = &v9 - v9;\n
        v4 = v1 - cgc_strlen(v5->field_4);\n
        if (v4 <= 0)\n
            v0 = &v8 - v9;\n
        else\n
            v0 = cgc_strlen(v5->field_4);\n
        v4 = v0;\n
        cgc_memcpy(v9, v5->field_4, v4);\n
        v9 = &v9[v5->field_8];\n
        v10 += 1;\n
    }\n
    v14 = cgc_fdprintf(1, &v3[26].padding_0[15]);\n
    return v14;\n
}\n
", "4221465:sub_406a19": null, "4221472:cgc_quit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_quit()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"\\n
\\n
=^.^=// Bye!\\n
\\n
\");\n
    v4 = v1;\n
    return cgc_exit(0);\n
}\n
", "4221539:sub_406a63": null, "4221552:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc__terminate(v2, v0);\n
    cgc_menu(v2, v3);\n
    return;\n
}\n
", "4221584:cgc_menu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_menu()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"=======================\\n
\");\n
    cgc_fdprintf(1, v0 - 8377);\n
    cgc_fdprintf(1, v0 - 8361);\n
    cgc_fdprintf(1, v0 - 8346);\n
    v4 = v1;\n
    return cgc_fdprintf(1, v0 - 8402);\n
}\n
", "4221734:sub_406b26": null, "4221744:main": "typedef struct struct_0 {\n
    char padding_0[316];\n
    unsigned int field_13c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[316];\n
    unsigned int field_13c[4];\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2028]\n
    struct_0 *v1;  // [bp-0x2024]\n
    unsigned int v2;  // [bp-0x2020]\n
    char v3;  // [bp-0x201c]\n
    char v4;  // [bp-0x200c]\n
    void* v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_1 *v9;  // ebx\n
    unsigned int v10;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = 0;\n
    cgc_fdprintf(1, \"KTY Pretty Printer v0.1\\n
\");\n
    v9 = v1;\n
    v9->field_13c = cgc_malloc(16);\n
    if (cgc_kty_init(v9->field_13c))\n
    {\n
        cgc_fdprintf(1, &v1[27].padding_0[191]);\n
        cgc_quit();\n
    }\n
    cgc_menu();\n
    while (cgc_read_until(0, &v3, 16, 10) > 0)\n
    {\n
        v2 = cgc_strtol(&v3, NULL, 10);\n
        v0 = v2;\n
        if (v0 == 1)\n
        {\n
            if (cgc_read_until(0, &v4, 0x2000, 0) <= 0)\n
                cgc_fdprintf(1, &v1[27].padding_0[191]);\n
            else\n
                cgc_import_kty(&v4);\n
        }\n
        else\n
        {\n
            if (v0 == 2)\n
            {\n
                cgc_print_kty();\n
            }\n
            else if (v0 == 3)\n
            {\n
                cgc_quit();\n
            }\n
            else if (v0 != 777)\n
            {\n
                cgc_fdprintf(1, &v1[25].padding_0[311]);\n
            }\n
            else\n
            {\n
                cgc_nyan();\n
            }\n
        }\n
    }\n
    v10 = v6;\n
    return 0;\n
}\n
", "4222299:sub_406d5b": null, "4222304:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (v4)\n
    {\n
        v2 = cgc_strlen(v4) + 1;\n
        v1 = cgc_malloc(v2);\n
        if (v1)\n
        {\n
            cgc_memset(v1, 0, v2);\n
            cgc_memcpy(v1, v4, v2);\n
            v3 = v1;\n
            return v3;\n
        }\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4222484:sub_406e14": null, "4222496:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(a0))\n
            {\n
                v3 = a1;\n
                a1 = v3 - 1;\n
                v0 = v3;\n
            }\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    if (!a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = *(a0) - *(v2);\n
    return v1;\n
}\n
", "4222682:sub_406eda": null, "4222688:cgc_strtod": null, "4223216:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:memcpy": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:memset": null, "5242904:cgc_deallocate": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}