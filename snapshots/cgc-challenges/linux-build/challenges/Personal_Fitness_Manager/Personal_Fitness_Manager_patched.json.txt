{"4206592:_init": "extern struct_0 *g_40d134;\n
\n
int _init()\n
{\n
    if (g_40d134)\n
    {\n
        g_40d134();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206688:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206704:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206720:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206736:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4206752:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206768:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206784:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4206800:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4206816:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206832:memset": "// attributes: PLT stub\n
void* memset(void* v0, unsigned int block, unsigned int c)\n
{\n
    return ::libc.so.0::memset(v0, block, c);\n
}\n
", "4206848:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4206864:sub_403110": "int sub_403110()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206870:sub_403116": null, "4206880:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206923:sub_40314b": null, "4206924:sub_40314c": "int sub_40314c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206928:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206932:sub_403154": null, "4206944:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 40919;\n
    v6 = v5 + 18;\n
    v7 = v5 + 18;\n
    if (v7 == v6)\n
        return v5 + 18;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4206995:sub_403193": "int sub_403193()\n
{\n
}\n
", "4207001:sub_403199": "int sub_403199()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207008:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 40855;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 18;\n
    v9 = (v6 + 18 - (v6 + 18) >> 31) + (18 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207079:sub_4031e7": "int sub_4031e7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207088:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40d128;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40d128)\n
    {\n
        v0 = __dso_handle;\n
        sub_403110();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207163:sub_40323b": "int sub_40323b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207168:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207177:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207181:sub_40324d": null, "4207184:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207238:sub_403286": null, "4207248:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207302:sub_4032c6": null, "4207312:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207366:sub_403306": null, "4207376:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207472:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4207568:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4207622:sub_403406": null, "4207632:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4207706:sub_40345a": null, "4207712:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4207786:sub_4034aa": null, "4207792:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4207886:sub_40350e": null, "4207888:_ZN5CUtil6StringC1Ev": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
int CUtil::String::__ctor__(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    struct_0 *v2;  // eax\n
\n
    v0 = v1;\n
    v2 = v0;\n
    v2->field_0 = operator new[](1);\n
    v2->field_0->field_0 = 0;\n
    v2->field_4 = 0;\n
    return v0;\n
}\n
", "4207953:sub_403551": null, "4207968:_ZN5CUtil6StringC1ERKS0_": "int CUtil::String::__ctor__(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2[2];  // ecx\n
\n
    v2 = v1;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    v0 = a0;\n
    return CUtil::String::SetInternal(v1);\n
}\n
", "4208030:sub_40359e": null, "4208032:_ZN5CUtil6String11SetInternalERKS0_": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::SetInternal(struct_0 *v4, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct_0 *v3;  // [bp-0xc]\n
    struct_0 *v5;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // ecx\n
    char *v9;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4;\n
    if (v3->field_0)\n
    {\n
        v1 = v3->field_0;\n
        if (v1)\n
            operator delete[](v1);\n
    }\n
    v5 = v3;\n
    v5->field_4 = a0[1];\n
    v7 = v3;\n
    v7->field_0 = operator new[](v5->field_4 + 1);\n
    v0 = v7->field_4;\n
    cgc_memcpy(v7->field_0, a0[0]);\n
    v8 = v3;\n
    v9 = v8->field_0;\n
    v9[v8->field_4] = 0;\n
    return v9;\n
}\n
", "4208194:sub_403642": null, "4208208:_ZN5CUtil6StringC2EPKc": "int CUtil::String::__base_ctor__(unsigned int v1[2], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v2[2];  // ecx\n
\n
    v2 = v1;\n
    v2[0] = 0;\n
    v2[1] = 0;\n
    v0 = a0;\n
    return CUtil::String::SetInternal(v1);\n
}\n
", "4208270:sub_40368e": null, "4208272:_ZN5CUtil6String11SetInternalEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::SetInternal(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v5;  // eax\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // ecx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v4;\n
    if (*(v3))\n
    {\n
        v1 = *(v3);\n
        if (v1)\n
            operator delete[](v1);\n
    }\n
    if (!a0)\n
    {\n
        v5 = v3;\n
        *(v5) = operator new[](1);\n
        *(*(v5)) = 0;\n
        *((v5 + 4)) = 0;\n
        return v3;\n
    }\n
    v7 = v3;\n
    *((v7 + 4)) = cgc_strlen();\n
    v9 = v3;\n
    *(v9) = operator new[](*((v7 + 4)) + 1);\n
    v0 = *((v9 + 4));\n
    cgc_memcpy(*(v9), a0);\n
    v10 = v3;\n
    v5 = *(v10);\n
    *((v5 + *((v10 + 4)))) = 0;\n
    return *(v10);\n
}\n
", "4208491:sub_40376b": null, "4208496:_ZN5CUtil6StringD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::__dtor__(unsigned int v3[2])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v3;\n
    if (v2[0])\n
    {\n
        v0 = v2[0];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4208588:sub_4037cc": null, "4208592:_ZNK5CUtil6StringeqERKS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::operator== const(unsigned int v4[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2[2];  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    unsigned int v5[2];  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    if (v2[1] != a0[1])\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v5 = v2;\n
    v0 = v5[1];\n
    v3 = !cgc_memcmp(v5[0], a0[0]);\n
    return v3 & 1;\n
}\n
", "4208707:sub_403843": null, "4208720:_ZNK5CUtil6StringneERKS0_": "int CUtil::String::operator!= const(unsigned int v0[2], unsigned int a0[2])\n
{\n
    return (CUtil::String::operator== const(v0, a0) ^ 255) & 1;\n
}\n
", "4208776:sub_403888": null, "4208784:_ZN5CUtil6StringaSERKS0_": "int CUtil::String::operator=(void* v0, unsigned int a0[2])\n
{\n
    return CUtil::String::SetInternal(v0, a0);\n
}\n
", "4208833:sub_4038c1": null, "4208848:_ZN5CUtil6StringaSEPKc": "int CUtil::String::operator=(unsigned int v0, unsigned int a0)\n
{\n
    return CUtil::String::SetInternal(v0, a0);\n
}\n
", "4208897:sub_403901": null, "4208912:_ZNK5CUtil6StringplERKS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::operator+ const(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[2];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = a0;\n
    CUtil::String::__ctor__(v3, v5);\n
    v2 = CUtil::String::operator+=(v3);\n
    CUtil::String::__dtor__(v3);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4209011:sub_403973": null, "4209024:_ZN5CUtil6StringpLERKS0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::operator+=(unsigned int v7[2], unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3[2];  // [bp-0x18]\n
    char *v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v10[2];  // eax\n
    unsigned int v11[2];  // eax\n
    unsigned int v12[2];  // eax\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = v7;\n
    v5 = v3[1] + a0[1];\n
    v10 = v3;\n
    v4 = operator new[](v5 + 1);\n
    v0 = v10[1];\n
    cgc_memcpy(v4, v10[0]);\n
    v0 = a0[1];\n
    cgc_memcpy(&v4[v3[1]], a0[0]);\n
    v11 = v3;\n
    v4[a0[1] + v11[1]] = 0;\n
    if (v11[0])\n
    {\n
        v1 = v3[0];\n
        if (v1)\n
            operator delete[](v1);\n
    }\n
    v12 = v3;\n
    v12[0] = v4;\n
    v12[1] = v5;\n
    return v3;\n
}\n
", "4209244:sub_403a5c": null, "4209248:_ZNK5CUtil6String5c_strEv": "int CUtil::String::c_str const(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4209261:sub_403a6d": null, "4209264:_ZNK5CUtil6String5UpperEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::Upper const(unsigned int *v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v2 = v1;\n
    v3 = a0;\n
    v5 = 0;\n
    CUtil::String::__ctor__(v1, v3);\n
    for (v4 = 0; v4 < v3->field_4; v4 += 1)\n
    {\n
        if (cgc_islower(*((*(v1) + v4))))\n
            *((*(v1) + v4)) = cgc_toupper(*((*(v1) + v4)));\n
    }\n
    v5 = 1;\n
    if (!(v5 & 1))\n
        CUtil::String::__dtor__(v1);\n
    v9 = v6;\n
    return v2;\n
}\n
", "4209472:_ZNK5CUtil6String5LowerEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::Lower const(unsigned int *v7, struct_0 *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int *v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    unsigned int v9;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v7;\n
    v2 = v1;\n
    v3 = a0;\n
    v5 = 0;\n
    CUtil::String::__ctor__(v1, v3);\n
    for (v4 = 0; v4 < v3->field_4; v4 += 1)\n
    {\n
        if (cgc_isupper(*((*(v1) + v4))))\n
            *((*(v1) + v4)) = cgc_tolower(*((*(v1) + v4)));\n
    }\n
    v5 = 1;\n
    if (!(v5 & 1))\n
        CUtil::String::__dtor__(v1);\n
    v9 = v6;\n
    return v2;\n
}\n
", "4209680:_ZNK5CUtil6StringixERKm": "int CUtil::String::operator[] const(unsigned int v3[2], unsigned int *a0)\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1[2];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1[0] = v3;\n
    v0[0] = v1;\n
    if ((CUtil::String::IsEmpty const() & 1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (*(a0) < v1[1])\n
    {\n
        v2 = *((v1[0] + *(a0)));\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
}\n
", "4209793:sub_403c81": null, "4209808:_ZNK5CUtil6String7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::String::IsEmpty const(struct_0 *v0)\n
{\n
    return !v0->field_4;\n
}\n
", "4209831:sub_403ca7": null, "4209840:_ZNK5CUtil6String4TrimEm": "int CUtil::String::Trim const(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v4;\n
    v0 = a1;\n
    CUtil::String::SubString const(v1, a0, 0);\n
    v7 = v1;\n
    v8 = v2;\n
    return v1;\n
}\n
", "4209921:sub_403d01": null, "4209936:_ZNK5CUtil6String9SubStringEmm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::SubString const(unsigned int v8, unsigned int a0[2], char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1[2];  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3[2];  // [bp-0x20]\n
    char *v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v9;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v8;\n
    v2 = v1;\n
    v3[0] = a0;\n
    if (a2 > v3[1])\n
        a2 = v3[1];\n
    if (a1 < v3[1] && a1 < a2)\n
    {\n
        v7 = a2 - a1;\n
        v6 = operator new[](v7 + 1);\n
        v5 = 0;\n
        for (v4 = a1; v4 < a2; v4 += 1)\n
        {\n
            v9 = v5;\n
            v5 = v9 + 1;\n
            v6[v9] = v4[v3[0]];\n
        }\n
        v6[v5] = 0;\n
        CUtil::String::__base_ctor__(v1, v6);\n
        return v2;\n
    }\n
    CUtil::String::__base_ctor__(v1, v0 - 8452);\n
    return v2;\n
}\n
", "4210199:sub_403e17": null, "4210208:_ZNK5CUtil6String10TrimSpacesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::TrimSpaces const(unsigned int v6, unsigned int a0[2])\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3[2];  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    v2 = v1;\n
    v3[0] = a0;\n
    for (v4 = 0; v4 < v3[1]; v4 += 1)\n
    {\n
        if (v4[v3[0]] != 32)\n
            break;\n
    }\n
    CUtil::String::SubString const(v1, v3, v4, -1);\n
    return v2;\n
}\n
", "4210365:sub_403ebd": null, "4210368:_ZN5CUtil6String5ToIntERj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::String::ToInt(unsigned int v4, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if ((CUtil::String::IsEmpty const(v1) & 1))\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    *(a0) = cgc_atoi();\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4210468:sub_403f24": null, "4210480:_ZNK5CUtil6String9GetLengthEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::String::GetLength const(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4210494:sub_403f3e": null, "4210496:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 76));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 76)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4210833:sub_404091": null, "4210848:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[76];\n
    unsigned int field_4c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[106].padding_0[20]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_4c)\n
    {\n
        v7 = v1;\n
        v7->field_4c = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4211073:sub_404181": null, "4211088:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4211159:sub_4041d7": null, "4211168:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[76];\n
    struct struct_1 *field_4c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_4c);\n
    v3[0] = v1->field_4c;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4211385:sub_4042b9": null, "4211392:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_1 *field_4;\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: struct_1 *, unsigned int\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4211476:sub_404314": null, "4211488:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[76];\n
    struct struct_0 *field_4c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_4c; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4211769:sub_404439": null, "4211776:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4211884:sub_4044ac": null, "4211888:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 76)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 76));\n
        *((v6 + v3 * 4 + 76)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4212173:sub_4045cd": null, "4212176:cgc_round": null, "4212322:sub_404662": null, "4212336:cgc_floor": null, "4212492:sub_40470c": null, "4212496:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[728];\n
    unsigned int field_2d8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_2d8 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[600 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[600 + 4 * (v2 + 1 & 31)]);\n
        *((600 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4212719:sub_4047ef": null, "4212720:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4212767:sub_40481f": null, "4212768:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[600 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4213051:sub_40493b": null, "4213056:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4213244:sub_4049fc": null, "4213248:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4213349:sub_404a65": null, "4213360:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4213394:sub_404a92": null, "4213408:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4213678:sub_404bae": null, "4213680:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4213772:sub_404c0c": null, "4213776:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4213964:sub_404ccc": null, "4213968:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4214271:sub_404dff": null, "4214272:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc]\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    struct struct_1 **v45;  // [bp+0x10001c], Other Possible Types: unsigned int *\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_405339:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_405339;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 8412)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4215628:sub_40534c": null, "4215632:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4215690:sub_40538a": null, "4215696:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4215765:sub_4053d5": null, "4215776:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4215915:sub_40546b": null, "4215920:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4216192:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4216848:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4219264:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4219930:sub_40641a": null, "4219936:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4220476:sub_40663c": null, "4220480:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4220527:sub_40666f": null, "4220528:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4220565:sub_406695": null, "4220576:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4220813:sub_40678d": null, "4220816:cgc_atof": null, "4221101:sub_4068ad": null, "4221104:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4221180:sub_4068fc": null, "4221184:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4221321:sub_406989": null, "4221328:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4221464:sub_406a18": null, "4221472:cgc_receive_bytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_bytes(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    for (v3 = 0; v3 < a0; v3 = *(&v2) + v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, v5 + v3, a0 - v3))\n
            cgc__terminate();\n
        if (!*(&v2))\n
            cgc__terminate();\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4221672:sub_406ae8": null, "4221680:cgc_write": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v6, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (v3 < a0)\n
        {\n
            v0 = &v4;\n
            v2 = cgc_transmit(1, v6 + v3, a0 - v3);\n
            if (v2)\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            v3 = v4 + v3;\n
        }\n
        else\n
        {\n
            v5 = a0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4221830:sub_406b86": null, "4221840:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4221899:sub_406bcb": null, "4221904:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4221959:sub_406c07": null, "4221968:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4222123:sub_406cab": null, "4222128:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v4[v2] == a0)\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4222286:sub_406d4e": null, "4222288:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[588];\n
    struct struct_1 *field_24c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_24c)\n
        {\n
            v6 = v1->field_24c;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_24c = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_24c = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_24c = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_24c = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4222807:sub_406f57": null, "4222816:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4223166:sub_4070be": null, "4223168:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4223351:sub_407177": null, "4223360:cgc_memcmp": "int cgc_memcmp(char *v4, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = *(v4);\n
            v0 = *(a0);\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4223505:sub_407211": null, "4223520:_Z17ConvertToHexCharsPhj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int ConvertToHexChars(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    char *v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = a0 * 2;\n
    v8 = v4;\n
    if (v8 < 0)\n
        v8 = -1;\n
    v3 = operator new[](v8);\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        v0 = *((v6 + v2)) >> 4 & 15;\n
        cgc_sprintf(v3 + v2 * 2, v1 - 8256);\n
        v0 = *((v6 + v2)) & 15;\n
        cgc_sprintf(v3 + v2 * 2 + 1, v1 - 8256);\n
    }\n
    v9 = v5;\n
    return v3;\n
}\n
", "4223728:_Z13VerifyMacTypeh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int VerifyMacType(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 5)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        else if (v3 != *(592 + v0 + v1))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
    }\n
}\n
", "4223840:_Z10GetMacTypeh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int GetMacType(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 5)\n
        {\n
            v2 = 255;\n
            return v2;\n
        }\n
        if (v3 == *(592 + v0 + v1))\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4223950:sub_4073ce": null, "4223952:_ZN13FitnessSensorC2EtjPhj": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[5];\n
    unsigned int field_8;\n
    char field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[5];\n
    char *field_8;\n
    char field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int FitnessSensor::__base_ctor__(struct_0 *v3, unsigned short a0, unsigned int a1, char *a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // ecx\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // eax\n
    struct_1 *v9;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CUtil::DoubleLink::__base_ctor__();\n
    v5 = v1;\n
    v5->field_0 = a0;\n
    v5->field_c = 0;\n
    if (!(FitnessSensor::SetMAC(v5) & 1))\n
        v1->field_c = 1;\n
    v7 = v1;\n
    v7->field_8 = 0;\n
    v8 = v7->field_2;\n
    if (v8 != 4)\n
        return v8;\n
    if (!a3)\n
        return v8;\n
    v9 = v1;\n
    v9->field_8 = operator new[](a3 + 1);\n
    v8 = cgc_memcpy(v9->field_8, a2, a3);\n
}\n
", "4224157:sub_40749d": null, "4224160:_ZN13FitnessSensor6SetMACEj": "typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
    unsigned int field_3;\n
    char padding_7[5];\n
    char field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int FitnessSensor::SetMAC(struct_0 *v5, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x18]\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v8;  // eax\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    a0 = swap_int(a0, v0);\n
    v2 = &a0;\n
    if (!(VerifyMacType(*(v2)) & 1))\n
    {\n
        v0->padding_7[4] = 1;\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    tmp_6 = GetMacType(*(v2));\n
    v8 = v0;\n
    v8->field_2 = tmp_6;\n
    *(&(&v8->field_2)[1]) = *(&v2);\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4224312:sub_407538": null, "4224320:_Z8swap_intj": "int swap_int(unsigned int v0)\n
{\n
    return v0 >> 24 | v0 * 0x100 & 0xff0000 | v0 >> 8 & 0xff00 | v0 * 0x1000000;\n
}\n
", "4224370:sub_407572": null, "4224384:_ZN13FitnessSensor11GetMacAsIntEv": "int FitnessSensor::GetMacAsInt(char v1[7])\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char v3[7];  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = 0;\n
    v0 = v3[3] * 0x1000000;\n
    v0 = v3[4] * 0x10000 + v0;\n
    v0 = v3[5] * 0x100 + v0;\n
    v0 = v3[6] + v0;\n
    return v0;\n
}\n
", "4224458:sub_4075ca": null, "4224464:_ZN13FitnessSensor7SetUserEt": "typedef struct struct_0 {\n
    char padding_0[14];\n
    unsigned short field_e;\n
} struct_0;\n
\n
int FitnessSensor::SetUser(struct_0 *v2, unsigned short a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (a0 == v0->field_e)\n
    {\n
        v1 = 6;\n
        return v1;\n
    }\n
    v0->field_e = a0;\n
    v1 = 0;\n
    return v1;\n
}\n
", "4224532:sub_407614": null, "4224544:_Z15AlreadyInValuesh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int AlreadyInValues(char v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 5)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        else if (*(592 + v0 + v1) != v3)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
    }\n
}\n
", "4224656:_ZN13FitnessSensor18GenerateTypeValuesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int FitnessSensor::GenerateTypeValues()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x13]\n
    unsigned short v4;  // [bp-0x12]\n
    char *v5;  // [bp-0x10]\n
    unsigned int v7;  // edx\n
    unsigned int v8;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0x4347c000;\n
    v4 = 0;\n
    v3 = 0;\n
    for (v2 = 0; v2 < 5; v2 += 1)\n
    {\n
        v1 = 0;\n
        do\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            v3 = v5[v7 + v4];\n
            v8 = AlreadyInValues(v3) & 1;\n
        } while (v8 == 1);\n
        *(592 + v0 + v2) = v3;\n
        v4 = v5[1 + v4];\n
    }\n
    return 1;\n
}\n
", "4224836:sub_407744": null, "4224848:_ZN13FitnessSensor18GetSensorTypeValueEhRh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int FitnessSensor::GetSensorTypeValue(char v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x5]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 5)\n
        {\n
            v2 = 0;\n
            return v2 & 1;\n
        }\n
        else if (*(592 + v0 + v1) != v3)\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            *(a0) = v1;\n
            v2 = 1;\n
            return v2 & 1;\n
        }\n
    }\n
}\n
", "4224973:sub_4077cd": null, "4224976:_ZN13FitnessSensor17HandleHeartSensorEt": "int FitnessSensor::HandleHeartSensor(unsigned short v0)\n
{\n
    return v0;\n
}\n
", "4224989:sub_4077dd": null, "4224992:_ZN13FitnessSensor16HandleStepSensorEt": "int FitnessSensor::HandleStepSensor(unsigned short v0)\n
{\n
    return (v0 >> 31 CONCAT v0) /m 2;\n
}\n
", "4225016:sub_4077f8": null, "4225024:_ZN13FitnessSensor17HandleScaleSensorEt": "int FitnessSensor::HandleScaleSensor(unsigned short v0)\n
{\n
    return v0;\n
}\n
", "4225037:sub_40780d": null, "4225040:_ZN13FitnessSensor16HandleBikeSensorEt": "int FitnessSensor::HandleBikeSensor(unsigned short v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned short v1;  // [bp-0x6]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
\n
    v0 = v3;\n
    v4 = v2;\n
    v1 = (v4 >> 31 CONCAT v4) /m 3;\n
    return v1;\n
}\n
", "4225073:sub_407831": null, "4225088:_ZN13FitnessSensor15HandleRunSensorEt": "int FitnessSensor::HandleRunSensor(unsigned short v0)\n
{\n
    return v0;\n
}\n
", "4225101:sub_40784d": null, "4225104:_ZN13FitnessSensor5PrintEv": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char field_2;\n
    char padding_3[1];\n
    char field_4;\n
    char field_5;\n
    char field_6;\n
    char padding_7[7];\n
    unsigned short field_e;\n
} struct_0;\n
\n
int FitnessSensor::Print(struct_0 *v10)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    unsigned int v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0xc]\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    struct_0 *v13;  // eax\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // esi\n
    unsigned int v16;  // edx\n
    unsigned int v17;  // ecx\n
\n
    v9 = v11;\n
    v8 = v12;\n
    v13 = v10;\n
    v6 = v13->field_0;\n
    v14 = v13->field_2;\n
    v15 = v13->field_e;\n
    v16 = v13->field_4;\n
    v17 = v13->field_5;\n
    v7 = v13->field_6;\n
    v0 = v6;\n
    v1 = v14;\n
    v2 = v15;\n
    v3 = v16;\n
    v4 = v17;\n
    v5 = v7;\n
    return cgc_printf(\"SENSOR ID $x / TYPE: $x / OWNER: $x MAC: $x$x$x\\n
\");\n
}\n
", "4225212:sub_4078bc": null, "4225216:_ZN5CUtil10DoubleLinkI13FitnessSensorEC2Ev": "int CUtil::DoubleLink::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4225240:sub_4078d8": null, "4225248:_ZN13SensorManagerD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::__dtor__(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2 + 24;\n
    CUtil::DoubleList::DeleteAll();\n
    v0 = v2 + 24;\n
    CUtil::DoubleList::DeleteAll();\n
    v0 = v2 + 24;\n
    CUtil::DoubleListDeclare::__base_dtor__();\n
    v0 = v2;\n
    v6 = v3;\n
    return CUtil::DoubleListDeclare::__base_dtor__();\n
}\n
", "4225344:_ZN13SensorManager12PrintSensorsEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned short field_14;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::PrintSensors(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    cgc_printf(\"  print sensors for user: $x\\n
\");\n
    for (v2 = CUtil::DoubleList::GetFirst(v1, v1->field_14, &_GLOBAL_OFFSET_TABLE_); v2; v2 = CUtil::DoubleList::GetNext(v1))\n
    {\n
        FitnessSensor::Print(v2);\n
    }\n
    v6 = v3;\n
    return cgc_printf(v0 - 8453);\n
}\n
", "4225490:sub_4079d2": null, "4225504:_ZN13SensorManager11ListSensorsERt": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::ListSensors(unsigned int v15, unsigned short *a0)\n
{\n
    unsigned int v0;  // [bp-0xbc]\n
    unsigned int v1;  // [bp-0xb8]\n
    unsigned int v2;  // [bp-0xb4]\n
    char *v3;  // [bp-0xb0]\n
    unsigned int v4;  // [bp-0xac]\n
    char *v5;  // [bp-0xa8]\n
    char v6;  // [bp-0xa4]\n
    char v7;  // [bp-0x9e]\n
    char v8[7];  // [bp-0x9c], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x98], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x94]\n
    void* v11;  // [bp-0x90], Other Possible Types: unsigned int\n
    struct_0 *v12;  // [bp-0x8c]\n
    char v13;  // [bp-0x86]\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned short *v17;  // eax\n
    unsigned short *v18;  // eax\n
    unsigned short *v19;  // eax\n
\n
    v14 = v16;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v15;\n
    *(a0) = 0;\n
    cgc_bzero(&v13, 0x7e);\n
    v12 = &v13;\n
    v11 = 0;\n
    for (v10 = CUtil::DoubleList::GetFirst(v2 + 24); v10; v10 = CUtil::DoubleList::GetNext(v2 + 24))\n
    {\n
        if (v11 >= 7)\n
            break;\n
        v11 += 1;\n
        v9 = 0;\n
        for (*(&v8[0]) = CUtil::DoubleList::GetFirst(); v8; v8 = CUtil::DoubleList::GetNext(v2))\n
        {\n
            v0 = FitnessSensor::GetUser();\n
            if (v0 == User::GetId())\n
            {\n
                if (v9 >= 3)\n
                    break;\n
                v9 += 1;\n
                *(&v7) = FitnessSensor::GetID();\n
                *(&v6) = FitnessSensor::GetMacAsInt(v8);\n
                cgc_memcpy(&v12[*(a0)], &v7, 2);\n
                v17 = a0;\n
                *(v17) = *(v17) + 2;\n
                cgc_memcpy(&v12[*(a0)], &v6, 4);\n
                v18 = a0;\n
                *(v18) = *(v18) + 4;\n
                if (FitnessSensor::GetType(v8, &v6) == 4)\n
                {\n
                    v5 = FitnessSensor::GetData();\n
                    if (v5)\n
                    {\n
                        v4 = cgc_strlen(v5);\n
                        if (*(a0) < 126 - v4 + 1)\n
                        {\n
                            cgc_memcpy(&v12[*(a0)], v5, v4);\n
                            v19 = a0;\n
                            *(v19) = *(v19) + v4;\n
                        }\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v3 = operator new[](*(a0));\n
    cgc_memcpy(v3, &v13, *(a0));\n
    return v3;\n
}\n
", "4226375:sub_407d47": null, "4226384:_ZN13SensorManager9ListHwIdsERtPh": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::ListHwIds(unsigned int v2, unsigned short *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned short *v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(a0) = 0;\n
    for (v1 = 0; v1 < 5; v1 += 1)\n
    {\n
        v1[a1] = v1[592 + v0];\n
        v3 = a0;\n
        *(v3) = *(v3) + 1;\n
    }\n
    return 1;\n
}\n
", "4226502:sub_407dc6": null, "4226512:_Z11MacsAreSame15SensorMacFormatS_": "int MacsAreSame(char v3, char a0)\n
{\n
    char v0[4];  // [bp-0x10]\n
    char v1[4];  // [bp-0xc]\n
    char v2;  // [bp-0x5]\n
\n
    *(&v0[0]) = &a0;\n
    *(&v1[0]) = &v3;\n
    if (v3 == a0 && v1[1] == v0[1] && v1[2] == v0[2] && v1[3] == v0[3])\n
    {\n
        v2 = 1;\n
        return v2 & 1;\n
    }\n
    v2 = 0;\n
    return v2 & 1;\n
}\n
", "4226636:sub_407e4c": null, "4226640:_ZN13SensorManager9GetSensorEt": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned short field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::GetSensor(struct_0 *v6, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = CUtil::DoubleList::GetFirst();\n
    while (true)\n
    {\n
        if (v3)\n
        {\n
            if (FitnessSensor::GetID() == a0 && FitnessSensor::GetUser() == v2->field_14)\n
            {\n
                v4 = v3;\n
                return v4;\n
            }\n
            v0 = v3;\n
            v3 = CUtil::DoubleList::GetNext(v2);\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4226818:sub_407f02": null, "4226832:_ZN13SensorManager9AddSensorEP13FitnessSensor": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::AddSensor(struct_0 *v17, struct_0 *a0)\n
{\n
    struct_0 *v0;  // [bp-0x4c]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x38]\n
    unsigned int v4;  // [bp-0x34]\n
    char v5;  // [bp-0x2d]\n
    unsigned int v6;  // [bp-0x2c]\n
    struct_0 *v7;  // [bp-0x28]\n
    struct_0 *v8;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x1c]\n
    char v11;  // [bp-0x14]\n
    struct_0 *v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v15;  // [bp-0x4]\n
    struct_0 *v16;  // [bp+0x0]\n
    unsigned int v19;  // ebx\n
\n
    v14 = v19;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v17;\n
    v0 = v7;\n
    for (v12 = CUtil::DoubleList::GetFirst(); v12; v12 = CUtil::DoubleList::GetNext(v7))\n
    {\n
        v16 = v12;\n
        v4 = FitnessSensor::GetUser();\n
        v16 = a0;\n
        v5 = 0;\n
        if (v4 == FitnessSensor::GetUser())\n
        {\n
            v16 = &v11;\n
            v17 = a0;\n
            FitnessSensor::GetMAC(&v11);\n
            v15 = &v10;\n
            v16 = v12;\n
            FitnessSensor::GetMAC(v12);\n
            v15 = *(&v11);\n
            v16 = *(&v10);\n
            v5 = MacsAreSame(v17, a0);\n
        }\n
        if ((v5 & 1))\n
        {\n
            v13 = 1;\n
            return v13;\n
        }\n
        v16 = v12;\n
        v3 = FitnessSensor::GetUser();\n
        v16 = a0;\n
        if (v3 == FitnessSensor::GetUser())\n
        {\n
            v16 = a0;\n
            v2 = FitnessSensor::GetID();\n
            v16 = v12;\n
            if (v2 == FitnessSensor::GetID())\n
            {\n
                v13 = 1;\n
                return v13;\n
            }\n
        }\n
        v16 = v7;\n
        v17 = v12;\n
    }\n
    v9 = 0;\n
    v16 = v7;\n
    for (v8 = CUtil::DoubleList::GetFirst(); v8; v8 = CUtil::DoubleList::GetNext(v7))\n
    {\n
        v16 = v8;\n
        v1 = FitnessSensor::GetUser();\n
        v16 = a0;\n
        if (v1 == FitnessSensor::GetUser())\n
            v9 += 1;\n
        v16 = v7;\n
        v17 = v8;\n
    }\n
    if (v9 >= 3)\n
    {\n
        v13 = 2;\n
        return v13;\n
    }\n
    v16 = v7;\n
    v17 = a0;\n
    CUtil::DoubleList::AddLast(v7);\n
    v13 = 0;\n
    return v13;\n
}\n
", "4227379:sub_408133": null, "4227392:_ZN13SensorManager12RemoveSensorEtt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::RemoveSensor(unsigned int v7, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    v4 = CUtil::DoubleList::GetFirst();\n
    while (true)\n
    {\n
        if (!v4)\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        if (FitnessSensor::GetID() == a0 && FitnessSensor::GetUser() == a1)\n
            break;\n
        v0 = v4;\n
        v4 = CUtil::DoubleList::GetNext(v3);\n
    }\n
    v1 = v4;\n
    if (v1)\n
    {\n
        FitnessSensor::__base_dtor__();\n
        operator delete(v1);\n
    }\n
    v5 = 1;\n
    return v5 & 1;\n
}\n
", "4227614:sub_40821e": null, "4227616:_ZN13SensorManager14SetCurrentUserEt": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned short field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::SetCurrentUser(struct_0 *v5, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    if (a0 == 255)\n
    {\n
        v2->field_14 = 255;\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = CUtil::DoubleList::GetFirst();\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            v4 = 255;\n
            return v4;\n
        }\n
        else if (User::GetId() != a0)\n
        {\n
            v0 = v3;\n
            v3 = CUtil::DoubleList::GetNext(&v2[1].padding_0[2]);\n
        }\n
        else\n
        {\n
            v2->field_14 = a0;\n
            v4 = 0;\n
            return v4;\n
        }\n
    }\n
}\n
", "4227814:sub_4082e6": null, "4227824:_ZN13SensorManager7AddUserEP4User": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::AddUser(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v8;\n
    v5 = 0;\n
    for (v4 = CUtil::DoubleList::GetFirst(); v4; v4 = CUtil::DoubleList::GetNext(v3 + 24))\n
    {\n
        v5 += 1;\n
        v1 = User::GetId();\n
        if (v1 == User::GetId())\n
        {\n
            v6 = 1;\n
            return v6;\n
        }\n
        v0 = v4;\n
    }\n
    if (v5 >= 7)\n
    {\n
        v6 = 2;\n
        return v6;\n
    }\n
    v0 = a0;\n
    CUtil::DoubleList::AddLast(v3 + 24);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4228052:sub_4083d4": null, "4228064:_ZN13SensorManager12VerifySensorEt": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned short field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::VerifySensor(struct_0 *v6, unsigned short a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = CUtil::DoubleList::GetFirst();\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            v4 = 0;\n
            return v4 & 1;\n
        }\n
        if (FitnessSensor::GetID() == a0 && FitnessSensor::GetUser() == v2->field_14)\n
        {\n
            v4 = 1;\n
            return v4 & 1;\n
        }\n
        v0 = v3;\n
        v3 = CUtil::DoubleList::GetNext(v2);\n
    }\n
}\n
", "4228242:sub_408492": null, "4228256:_ZN13SensorManager11AddDistanceEtt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::AddDistance(unsigned int v6, unsigned short a0, unsigned short a1)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = CUtil::DoubleList::GetFirst();\n
    while (true)\n
    {\n
        if (!v3)\n
        {\n
            v4 = 0;\n
            return v4 & 1;\n
        }\n
        else if (User::GetId() != a1)\n
        {\n
            v0 = v3;\n
            v3 = CUtil::DoubleList::GetNext(v2 + 24);\n
        }\n
        else\n
        {\n
            v0 = a0;\n
            User::AddTotalDistance(v3);\n
            v4 = 1;\n
            return v4 & 1;\n
        }\n
    }\n
}\n
", "4228439:sub_408557": null, "4228448:_ZN5CUtil10DoubleListI4UserE9DeleteAllEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::DeleteAll(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v3;\n
    while (true)\n
    {\n
        v4 = CUtil::DoubleList::IsEmpty();\n
        *(&v4) = v4 ^ 255;\n
        if (!(*(&v4) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst();\n
        if (v0)\n
        {\n
            User::__base_dtor__();\n
            operator delete(v0);\n
        }\n
    }\n
    return v4;\n
}\n
", "4228573:sub_4085dd": null, "4228576:_ZN5CUtil17DoubleListDeclareI4UserLj16EED2Ev": "int CUtil::DoubleListDeclare::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleList::__base_dtor__(v1, *(&v0));\n
}\n
", "4228613:sub_408605": null, "4228624:_ZN5CUtil17DoubleListDeclareI13FitnessSensorLj16EED2Ev": "int CUtil::DoubleListDeclare::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleList::__base_dtor__(v1, *(&v0));\n
}\n
", "4228661:sub_408635": null, "4228672:_ZN5CUtil10DoubleListI13FitnessSensorE8GetFirstEv": "int CUtil::DoubleList::GetFirst(unsigned int v2[2])\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3[2];  // edx\n
\n
    v0[0] = v2;\n
    if (v0[1] == &v0[1 + 1])\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v1 = v3[1] + -(v3[0]);\n
    return v1;\n
}\n
", "4228736:_ZN5CUtil10DoubleListI13FitnessSensorE7GetNextEPS1_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::GetNext(unsigned int *v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = a0 + *(v2);\n
    v0 = v4;\n
    v3 = CUtil::DoubleLink::GetNext();\n
    if (v3 == v2 + 3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = v3 + -(*(v2));\n
    return v5;\n
}\n
", "4228873:sub_408709": null, "4228880:_ZN5CUtil10DoubleListI4UserE8GetFirstEv": "int CUtil::DoubleList::GetFirst(unsigned int v2[2])\n
{\n
    unsigned int v0[2];  // [bp-0xc]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3[2];  // edx\n
\n
    v0[0] = v2;\n
    if (v0[1] == &v0[1 + 1])\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v3 = v0;\n
    v1 = v3[1] + -(v3[0]);\n
    return v1;\n
}\n
", "4228944:_ZN13FitnessSensor7GetUserEv": "typedef struct struct_0 {\n
    char padding_0[14];\n
    unsigned short field_e;\n
} struct_0;\n
\n
int FitnessSensor::GetUser(struct_0 *v0)\n
{\n
    return v0->field_e;\n
}\n
", "4228959:sub_40875f": null, "4228960:_ZN4User5GetIdEv": "int User::GetId(unsigned short *v0)\n
{\n
    return *(v0);\n
}\n
", "4228974:sub_40876e": null, "4228976:_ZN13FitnessSensor5GetIDEv": "int FitnessSensor::GetID(unsigned short *v0)\n
{\n
    return *(v0);\n
}\n
", "4228990:sub_40877e": null, "4228992:_ZN13FitnessSensor7GetTypeEv": "typedef struct struct_0 {\n
    char padding_0[2];\n
    char field_2;\n
} struct_0;\n
\n
int FitnessSensor::GetType(struct_0 *v0)\n
{\n
    return v0->field_2;\n
}\n
", "4229007:sub_40878f": null, "4229008:_ZN13FitnessSensor7GetDataEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int FitnessSensor::GetData(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4229022:sub_40879e": null, "4229024:_ZN5CUtil10DoubleListI4UserE7GetNextEPS1_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::GetNext(unsigned int *v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int *v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = a0 + *(v2);\n
    v0 = v4;\n
    v3 = CUtil::DoubleLink::GetNext();\n
    if (v3 == v2 + 3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = v3 + -(*(v2));\n
    return v5;\n
}\n
", "4229161:sub_408829": null, "4229168:_ZN13FitnessSensor6GetMACEv": "typedef struct struct_0 {\n
    char padding_0[3];\n
    unsigned int field_3;\n
} struct_0;\n
\n
int FitnessSensor::GetMAC(unsigned int *v0, struct_0 *a0)\n
{\n
    *(v0) = *(&(&a0->padding_0)[1]);\n
    return v0;\n
}\n
", "4229191:sub_408847": null, "4229200:_ZN5CUtil10DoubleListI13FitnessSensorE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int CUtil::DoubleList::AddLast(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v2;\n
    v0 = v3;\n
    if (a0)\n
    {\n
        v3 = v0;\n
        v1[0] = a0 + *(v3);\n
        v1[0] = v3 + 12;\n
        v1[1] = *((v3 + 16));\n
        *(*((v3 + 16))) = v1;\n
        *((v3 + 16)) = v1;\n
    }\n
    return v3;\n
}\n
", "4229282:sub_4088a2": null, "4229296:_ZN13FitnessSensorD2Ev": "int FitnessSensor::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleLink::__base_dtor__(v1 + 16, *(&v0));\n
}\n
", "4229336:sub_4088d8": null, "4229344:_ZN5CUtil10DoubleListI4UserE7AddLastEPS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int CUtil::DoubleList::AddLast(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1[2];  // [bp-0x8]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v3 = v2;\n
    v0 = v3;\n
    if (a0)\n
    {\n
        v3 = v0;\n
        v1[0] = a0 + *(v3);\n
        v1[0] = v3 + 12;\n
        v1[1] = *((v3 + 16));\n
        *(*((v3 + 16))) = v1;\n
        *((v3 + 16)) = v1;\n
    }\n
    return v3;\n
}\n
", "4229426:sub_408932": null, "4229440:_ZN4User16AddTotalDistanceEt": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int User::AddTotalDistance(struct_0 *v0, unsigned short a0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_c = a0 + v1->field_c;\n
    return v0;\n
}\n
", "4229465:sub_408959": null, "4229472:_ZN5CUtil10DoubleListI4UserED2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::__base_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    CUtil::DoubleList::DeleteAll(v1);\n
    CUtil::DoubleLink::__base_dtor__();\n
    v5 = v2;\n
    return CUtil::DoubleLink::__base_dtor__();\n
}\n
", "4229551:sub_4089af": null, "4229552:_ZN5CUtil10DoubleLinkI4UserED2Ev": "int CUtil::DoubleLink::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleLink::Unlink(v1, *(&v0));\n
}\n
", "4229589:sub_4089d5": null, "4229600:_ZN5CUtil10DoubleLinkI4UserE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int CUtil::DoubleLink::Unlink(struct_1 *v1)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax\n
    struct_1 *v4;  // eax\n
    struct_1 *v5;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    if (v0->field_4)\n
    {\n
        v3 = v0;\n
        v3->field_4->field_0 = v3->field_0;\n
    }\n
    if (v0->field_0)\n
    {\n
        v4 = v0;\n
        v4->field_0->field_4 = v4->field_4;\n
    }\n
    v5 = v0;\n
    v5->field_0 = 0;\n
    v5->field_4 = 0;\n
    return v0;\n
}\n
", "4229677:sub_408a2d": null, "4229680:_ZN5CUtil10DoubleListI13FitnessSensorED2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::__base_dtor__(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2;\n
    CUtil::DoubleList::DeleteAll();\n
    v0 = v2 + 12;\n
    CUtil::DoubleLink::__base_dtor__();\n
    v0 = v2 + 4;\n
    v6 = v3;\n
    return CUtil::DoubleLink::__base_dtor__();\n
}\n
", "4229759:sub_408a7f": null, "4229760:_ZN5CUtil10DoubleListI13FitnessSensorE9DeleteAllEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::DeleteAll(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v3;\n
    while (true)\n
    {\n
        v4 = CUtil::DoubleList::IsEmpty();\n
        *(&v4) = v4 ^ 255;\n
        if (!(*(&v4) & 1))\n
            break;\n
        v0 = CUtil::DoubleList::GetFirst(v2);\n
        if (v0)\n
        {\n
            FitnessSensor::__base_dtor__(v0);\n
            operator delete(v0);\n
        }\n
    }\n
    return v4;\n
}\n
", "4229885:sub_408afd": null, "4229888:_ZN5CUtil10DoubleLinkI13FitnessSensorED2Ev": "int CUtil::DoubleLink::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return CUtil::DoubleLink::Unlink(v1, *(&v0));\n
}\n
", "4229925:sub_408b25": null, "4229936:_ZN5CUtil10DoubleListI13FitnessSensorE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::DoubleList::IsEmpty(struct_0 *v0)\n
{\n
    struct_0 *v1;  // ecx\n
\n
    v1 = v0;\n
    return v1->field_4 == &v1[1].field_4;\n
}\n
", "4229963:sub_408b4b": null, "4229968:_ZN5CUtil10DoubleLinkI13FitnessSensorE6UnlinkEv": "typedef struct struct_1 {\n
    struct struct_0 *field_0;\n
    struct struct_2 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
} struct_2;\n
\n
int CUtil::DoubleLink::Unlink(struct_1 *v1)\n
{\n
    struct_1 *v0;  // [bp-0x8]\n
    struct_1 *v2;  // eax\n
    struct_1 *v3;  // eax\n
    struct_1 *v4;  // eax\n
    struct_1 *v5;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    if (v0->field_4)\n
    {\n
        v3 = v0;\n
        v3->field_4->field_0 = v3->field_0;\n
    }\n
    if (v0->field_0)\n
    {\n
        v4 = v0;\n
        v4->field_0->field_4 = v4->field_4;\n
    }\n
    v5 = v0;\n
    v5->field_0 = 0;\n
    v5->field_4 = 0;\n
    return v0;\n
}\n
", "4230045:sub_408b9d": null, "4230048:_ZN5CUtil10DoubleListI4UserE7IsEmptyEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int CUtil::DoubleList::IsEmpty(struct_0 *v0)\n
{\n
    struct_0 *v1;  // ecx\n
\n
    v1 = v0;\n
    return v1->field_4 == &v1[1].field_4;\n
}\n
", "4230075:sub_408bbb": null, "4230080:_ZN4UserD2Ev": "int User::__base_dtor__(unsigned int v0)\n
{\n
    return CUtil::DoubleLink::__base_dtor__(v0 + 16);\n
}\n
", "4230120:sub_408be8": null, "4230128:_ZN5CUtil10DoubleLinkI13FitnessSensorE7GetNextEv": "int CUtil::DoubleLink::GetNext(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4230141:sub_408bfd": null, "4230144:_ZN5CUtil10DoubleLinkI4UserE7GetNextEv": "int CUtil::DoubleLink::GetNext(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4230157:sub_408c0d": null, "4230160:_Z12SendResponseth": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SendResponse(char v10, char a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char v1;  // [bp-0x11]\n
    char v2;  // [bp-0x10]\n
    char v3;  // [bp-0xf]\n
    char v4;  // [bp-0xe]\n
    char v5;  // [bp-0xd]\n
    char v6;  // [bp-0xc]\n
    char v7;  // [bp-0xb]\n
    char v8;  // [bp-0x9]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 195;\n
    v2 = 60;\n
    v3 = 51;\n
    v4 = 0;\n
    v5 = 3;\n
    v6 = 0;\n
    cgc_memcpy(&v7, &v10, 2);\n
    v8 = a0;\n
    v12 = v9;\n
    return cgc_write(&v1, 9);\n
}\n
", "4230276:sub_408c84": null, "4230288:_Z9ReadInputv": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int ReadInput()\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    unsigned short v4;  // [bp-0x14]\n
    char v5;  // [bp-0x12]\n
    char v6;  // [bp-0x11]\n
    struct_0 *v7;  // [bp-0x10]\n
    struct_0 *v8;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
\n
    v9 = v11;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = operator new(8);\n
    memset(v3, 0, 8);\n
    v7 = v3;\n
    v7->field_4 = 0;\n
    v4 = 0;\n
    cgc_receive_bytes(&v5, 1);\n
    if (v5 == 195)\n
    {\n
        cgc_receive_bytes(&v6, 1);\n
        if (v6 != 60)\n
        {\n
            v4 = 2;\n
        }\n
        else\n
        {\n
            cgc_receive_bytes(v7, 2);\n
            cgc_receive_bytes(&v7->field_2, 2);\n
            if (v7->field_2 > 0x100)\n
            {\n
                v4 = 2;\n
            }\n
            else\n
            {\n
                v12 = v7->field_2 + 1;\n
                if (v12 < 0)\n
                    v12 = -1;\n
                v7->field_4 = operator new[](v12);\n
                cgc_receive_bytes(v7->field_4, v7->field_2);\n
                *((v7->field_4 + v7->field_2)) = 0;\n
                v8 = v7;\n
                return v8;\n
            }\n
        }\n
        SendResponse(0, v4);\n
    }\n
    if (v7)\n
    {\n
        if (v7->field_4)\n
        {\n
            v1 = v7->field_4;\n
            if (v1)\n
                operator delete[](v1);\n
        }\n
        v0 = v7;\n
        if (v0)\n
            operator delete(v0);\n
    }\n
    v8 = 0;\n
    return v8;\n
}\n
", "4230777:sub_408e79": null, "4230784:_Z16VerifyMagicMatchPhS_": "int VerifyMagicMatch(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x5]\n
\n
    for (v2 = 0; v2 < 5; v2 += 1)\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= 5)\n
            {\n
                v3 = 0;\n
                return v3 & 1;\n
            }\n
            if (v2[v4] == v1[a0])\n
                break;\n
            v1 += 1;\n
        }\n
        v0 = 3;\n
    }\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4230934:sub_408f16": null, "4230944:main": "typedef struct struct_1 {\n
    unsigned short field_0;\n
    unsigned short field_2;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
    unsigned short field_1;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v63, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    char *v1;  // [bp-0x110]\n
    char v2[4];  // [bp-0x100]\n
    unsigned int v3;  // [bp-0xfc]\n
    unsigned short v4;  // [bp-0xf6]\n
    unsigned short v5;  // [bp-0xf4]\n
    unsigned short v6;  // [bp-0xf2]\n
    unsigned short v7;  // [bp-0xf0]\n
    unsigned short v8;  // [bp-0xee]\n
    unsigned int v9;  // [bp-0xec]\n
    unsigned int v10;  // [bp-0xe8]\n
    unsigned int v11;  // [bp-0xe4]\n
    unsigned int v12;  // [bp-0xe0]\n
    unsigned int v13;  // [bp-0xdc]\n
    void* v14;  // [bp-0xd8]\n
    void* v15;  // [bp-0xd4]\n
    unsigned int v16;  // [bp-0xd0]\n
    unsigned int v17;  // [bp-0xcc]\n
    char v18[4];  // [bp-0xc8]\n
    char v19;  // [bp-0xc1]\n
    unsigned short v20;  // [bp-0xba]\n
    char v21[4];  // [bp-0xb8]\n
    char *v22;  // [bp-0xb4]\n
    unsigned short v23;  // [bp-0xae]\n
    char v24;  // [bp-0xab]\n
    unsigned short v25;  // [bp-0xaa]\n
    unsigned short v26;  // [bp-0xa8]\n
    unsigned short v27;  // [bp-0xa6]\n
    unsigned short v28;  // [bp-0xa4]\n
    unsigned short v29;  // [bp-0xa2]\n
    unsigned short v30;  // [bp-0xa0]\n
    unsigned short v31;  // [bp-0x9e]\n
    unsigned short v32;  // [bp-0x9c]\n
    unsigned short v33;  // [bp-0x9a]\n
    unsigned short v34;  // [bp-0x98]\n
    unsigned short v35;  // [bp-0x96]\n
    unsigned short v36;  // [bp-0x94]\n
    unsigned short v37;  // [bp-0x92]\n
    unsigned short v38;  // [bp-0x90]\n
    unsigned short v39;  // [bp-0x8e]\n
    unsigned int v40;  // [bp-0x8c]\n
    void* v41;  // [bp-0x88]\n
    unsigned short v42;  // [bp-0x82]\n
    char v43;  // [bp-0x7f]\n
    unsigned short v44;  // [bp-0x7e]\n
    unsigned int v45;  // [bp-0x7c]\n
    void* v46;  // [bp-0x78], Other Possible Types: unsigned int\n
    char *v47;  // [bp-0x74], Other Possible Types: unsigned int\n
    unsigned int v48;  // [bp-0x70]\n
    unsigned short v49;  // [bp-0x6a]\n
    unsigned short v50;  // [bp-0x68]\n
    char v51;  // [bp-0x65]\n
    unsigned int v52;  // [bp-0x64]\n
    void* v53;  // [bp-0x60]\n
    unsigned int v54;  // [bp-0x5c]\n
    unsigned short v55;  // [bp-0x56]\n
    unsigned int v56;  // [bp-0x54]\n
    char *v57;  // [bp-0x50], Other Possible Types: unsigned int\n
    char v58;  // [bp-0x4c]\n
    struct_1 *v59;  // [bp-0x1c]\n
    unsigned int v60;  // [bp-0x18]\n
    void* v61;  // [bp-0x14]\n
    unsigned int v62;  // [bp-0x8]\n
    unsigned int v64;  // ebx\n
    unsigned short v66;  // si\n
    unsigned int v68;  // eax\n
    unsigned int v71;  // eax\n
    unsigned int v72;  // cx, Other Possible Types: unsigned short\n
    unsigned short v73;  // cx\n
    unsigned short v77;  // cx\n
    unsigned short v79;  // cx\n
    unsigned short v80;  // cx\n
\n
    v62 = v64;\n
    v17 = &_GLOBAL_OFFSET_TABLE_;\n
    v61 = 0;\n
    v60 = 0x4347c000;\n
    SensorManager::__base_ctor__();\n
    FitnessSensor::GenerateTypeValues();\n
    for (v57 = 0; v57 < 5; v57 += 1)\n
    {\n
        if (!*((v17 + 592 + v57)))\n
            cgc_printf(v17 - 8174);\n
    }\n
    SensorManager::SetCurrentUser(&v58, 255);\n
    while (true)\n
    {\n
        do\n
        {\n
            v59 = ReadInput();\n
        } while (!v59);\n
        v16 = v59->field_0;\n
        if (v16 == 1)\n
        {\n
            if (SensorManager::GetCurrentUser() == 255)\n
            {\n
                SendResponse(1, 3);\n
                continue;\n
            }\n
            else\n
            {\n
                v56 = 6;\n
                if (v59->field_2 >= 6)\n
                {\n
                    v55 = *(&v59->field_4->field_0);\n
                    v54 = *(&v59->field_4->field_1);\n
                    v14 = operator new(24);\n
                    v66 = v55;\n
                    v0 = v54;\n
                    v1 = &v59->field_4[1].field_1;\n
                    FitnessSensor::__base_ctor__(v14, esi<4>, v0, v1, v59->field_2 - 6);\n
                    v53 = v14;\n
                    v15 = v53;\n
                    FitnessSensor::SetUser(v15, SensorManager::GetCurrentUser(&v58, esi<4>, v0, v1));\n
                    if ((FitnessSensor::IsInvalid(v53) & 1) == 1)\n
                    {\n
                        SendResponse(1, 7);\n
                        v13 = v53;\n
                        if (v13)\n
                        {\n
                            FitnessSensor::__base_dtor__(v13);\n
                            operator delete(v13);\n
                        }\n
                        goto LABEL_409c9a;\n
                    }\n
                    else\n
                    {\n
                        v52 = SensorManager::AddSensor(&v58, v53);\n
                        if (v52 == 1)\n
                        {\n
                            SendResponse(1, 1);\n
                            v12 = v53;\n
                            if (v12)\n
                            {\n
                                FitnessSensor::__base_dtor__(v12);\n
                                operator delete(v12);\n
                            }\n
                            goto LABEL_409c9a;\n
                        }\n
                        else if (v52 != 2)\n
                        {\n
                            SendResponse(1, 0);\n
                            goto LABEL_409c9a;\n
                        }\n
                        else\n
                        {\n
                            SendResponse(1, 12);\n
                            v11 = v53;\n
                            if (v11)\n
                            {\n
                                FitnessSensor::__base_dtor__(v11);\n
                                operator delete(v11);\n
                            }\n
                            goto LABEL_409c9a;\n
                        }\n
                    }\n
                }\n
                else\n
                {\n
                    SendResponse(1, 2);\n
                    continue;\n
                }\n
            }\n
        }\n
        if (v16 == 2)\n
        {\n
            v51 = v59->field_4->field_0;\n
            v50 = v51 * 3 + 3;\n
            if (v59->field_2 == v50)\n
            {\n
                v49 = *(&(&v59->field_4->field_0)[1]);\n
                v10 = operator new(24);\n
                User::__ctor__(v10);\n
                v48 = v10;\n
                v47 = 3;\n
                for (v46 = 0; v46 < v51 - 1; v47 += 3)\n
                {\n
                    v9 = *((v59->field_4 + v47));\n
                    if (v9 == 1)\n
                    {\n
                        User::SetWeight(v48);\n
                    }\n
                    else if (v9 != 2)\n
                    {\n
                        SendResponse(2, 2);\n
                    }\n
                    else\n
                    {\n
                        User::SetHeight(v48);\n
                    }\n
                    v46 += 1;\n
                }\n
                v45 = SensorManager::AddUser(&v58, v48);\n
                if (v45 == 2)\n
                {\n
                    SendResponse(2, 8);\n
                }\n
                else if (v45 == 1)\n
                {\n
                    SendResponse(2, 9);\n
                }\n
                else\n
                {\n
                    SendResponse(2, 0);\n
                }\n
                goto LABEL_409c9a;\n
            }\n
            else\n
            {\n
                SendResponse(2, 2);\n
                continue;\n
            }\n
        }\n
        if (v16 == 3)\n
        {\n
            if (v59->field_2 != 2)\n
            {\n
                SendResponse(3, 2);\n
                goto LABEL_409c9a;\n
            }\n
            else\n
            {\n
                v44 = *(&v59->field_4->field_0);\n
                v43 = SensorManager::SetCurrentUser(&v58, v44);\n
                if (!v43)\n
                {\n
                    SendResponse(3, 0);\n
                    goto LABEL_409c9a;\n
                }\n
                else\n
                {\n
                    SendResponse(3, 6);\n
                    goto LABEL_409c9a;\n
                }\n
            }\n
        }\n
        if (v16 != 4)\n
        {\n
            if (v16 == 11)\n
            {\n
                v23 = 0;\n
                v22 = SensorManager::ListSensors(&v58, &v23);\n
                v68 = v23 + 6;\n
                if (v68 < 0)\n
                    v68 = -1;\n
                *(&v21[0]) = operator new[](v68);\n
                v21[0] = 195;\n
                v21[1] = 60;\n
                v21[2] = 51;\n
                v21[3] = 0;\n
                cgc_memcpy(v21 + 1, &v23, 2);\n
                cgc_memcpy(&v21[1 + 2], v22, v23);\n
                v3 = v22;\n
                if (v3)\n
                    operator delete[](v3);\n
                cgc_write(v21, v23 + 6);\n
                *(&v2[0]) = v21;\n
                if (v2)\n
                    operator delete[](v2);\n
                goto LABEL_409c9a;\n
            }\n
            else if (v16 == 12)\n
            {\n
                if (v59->field_2 != 2)\n
                {\n
                    SendResponse(12, 2);\n
                    goto LABEL_409c9a;\n
                }\n
                else\n
                {\n
                    v25 = *(&v59->field_4->field_0);\n
                    if (!(SensorManager::VerifySensor(&v58, v25) & 1))\n
                    {\n
                        SendResponse(12, 4);\n
                        goto LABEL_409c9a;\n
                    }\n
                    else\n
                    {\n
                        v4 = v25;\n
                        v72 = v4;\n
                        v24 = SensorManager::RemoveSensor(&v58, v72, SensorManager::GetCurrentUser()) & 1;\n
                        if (!(v24 & 1))\n
                        {\n
                            SendResponse(12, 2);\n
                            goto LABEL_409c9a;\n
                        }\n
                        else\n
                        {\n
                            SendResponse(12, 0);\n
                            goto LABEL_409c9a;\n
                        }\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                if (v16 == 51)\n
                {\n
                    v20 = 0;\n
                    cgc_bzero(&v19, 0x7);\n
                    SensorManager::ListHwIds(&v58, &v20, &v19);\n
                    v71 = v20 + 6;\n
                    if (v71 < 0)\n
                        v71 = -1;\n
                    *(&v18[0]) = operator new[](v71);\n
                    v18[0] = 195;\n
                    v18[1] = 60;\n
                    v18[2] = 68;\n
                    v18[3] = 119;\n
                    cgc_memcpy(v18 + 1, &v20, 2);\n
                    cgc_memcpy(&v18[1 + 2], &v19, v20);\n
                    cgc_write(v18, v20 + 6);\n
                    goto LABEL_409c9a;\n
                }\n
                else\n
                {\n
                    if (v16 == 255)\n
                        break;\n
                    SendResponse(0, 2);\n
                }\n
            }\n
        }\n
        v42 = *(&v59->field_4->field_0);\n
        if (!(SensorManager::VerifySensor(&v58, v42) & 1))\n
        {\n
            SendResponse(4, 4);\n
            goto LABEL_409c9a;\n
        }\n
        v41 = SensorManager::GetSensor(&v58, v42);\n
        if (!v41)\n
        {\n
            SendResponse(4, 4);\n
            goto LABEL_409c9a;\n
        }\n
        v40 = FitnessSensor::GetType(v41);\n
        if (v40 == 4)\n
        {\n
            if (v59->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_409c9a;\n
            }\n
            else\n
            {\n
                v39 = *(&v59->field_4->field_0);\n
                v38 = v59->field_4->field_1;\n
                v37 = FitnessSensor::HandleBikeSensor(v38);\n
                v8 = v37;\n
                v73 = v8;\n
                if ((SensorManager::AddDistance(&v58, v72, SensorManager::GetCurrentUser()) & 1))\n
                    SendResponse(4, 0);\n
                else\n
                    SendResponse(4, 2);\n
                goto LABEL_409c9a;\n
            }\n
        }\n
        if (!v40)\n
        {\n
            if (v59->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_409c9a;\n
            }\n
            else\n
            {\n
                v36 = *(&v59->field_4->field_0);\n
                v35 = v59->field_4->field_1;\n
                if (!(SensorManager::VerifySensor(&v58, v36) & 1))\n
                {\n
                    SendResponse(4, 4);\n
                    goto LABEL_409c9a;\n
                }\n
                else\n
                {\n
                    v34 = FitnessSensor::HandleHeartSensor(v35);\n
                    v7 = v34;\n
                    v77 = v7;\n
                    if (!(SensorManager::AddDistance(&v58, v72, SensorManager::GetCurrentUser()) & 1))\n
                        SendResponse(4, 2);\n
                    else\n
                        SendResponse(4, 0);\n
                    goto LABEL_409c9a;\n
                }\n
            }\n
        }\n
        if (v40 == 2)\n
        {\n
            if (v59->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_409c9a;\n
            }\n
            else\n
            {\n
                v33 = *(&v59->field_4->field_0);\n
                v32 = v59->field_4->field_1;\n
                if (!(SensorManager::VerifySensor(&v58, v33) & 1))\n
                {\n
                    SendResponse(4, 4);\n
                    goto LABEL_409c9a;\n
                }\n
                else\n
                {\n
                    v31 = FitnessSensor::HandleScaleSensor(v32);\n
                    v6 = v31;\n
                    v79 = v6;\n
                    if ((SensorManager::AddDistance(&v58, v72, SensorManager::GetCurrentUser()) & 1))\n
                        SendResponse(4, 0);\n
                    else\n
                        SendResponse(4, 2);\n
                    goto LABEL_409c9a;\n
                }\n
            }\n
        }\n
        if (v40 == 1)\n
        {\n
            if (v59->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_409c9a;\n
            }\n
            else\n
            {\n
                v30 = *(&v59->field_4->field_0);\n
                v29 = v59->field_4->field_1;\n
                if (!(SensorManager::VerifySensor(&v58, v30) & 1))\n
                {\n
                    SendResponse(4, 4);\n
                    goto LABEL_409c9a;\n
                }\n
                else\n
                {\n
                    v28 = FitnessSensor::HandleStepSensor(v29);\n
                    v5 = v28;\n
                    v80 = v5;\n
                    if ((SensorManager::AddDistance(&v58, v72, SensorManager::GetCurrentUser()) & 1))\n
                        SendResponse(4, 0);\n
                    else\n
                        SendResponse(4, 2);\n
                    goto LABEL_409c9a;\n
                }\n
            }\n
        }\n
        if (v40 != 3)\n
        {\n
            SendResponse(4, 2);\n
        }\n
        else\n
        {\n
            if (v59->field_2 != 4)\n
            {\n
                SendResponse(4, 2);\n
                goto LABEL_409c9a;\n
            }\n
            v27 = *(&v59->field_4->field_0);\n
            v26 = v59->field_4->field_1;\n
            if (!(SensorManager::VerifySensor(&v58, v27) & 1))\n
            {\n
                SendResponse(4, 4);\n
            }\n
            else\n
            {\n
                FitnessSensor::HandleRunSensor(v26);\n
                SendResponse(4, 0);\n
            }\n
        }\n
LABEL_409c9a:\n
    }\n
    v61 = 0;\n
    SensorManager::__dtor__(&v58);\n
    return v61;\n
}\n
", "4235393:sub_40a081": null, "4235408:_ZN13SensorManagerC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int SensorManager::__base_ctor__(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = v2;\n
    CUtil::DoubleListDeclare::__base_ctor__();\n
    v0 = v2 + 24;\n
    v6 = v3;\n
    return CUtil::DoubleListDeclare::__base_ctor__();\n
}\n
", "4235470:sub_40a0ce": null, "4235472:_ZN13SensorManager14GetCurrentUserEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned short field_14;\n
} struct_0;\n
\n
int SensorManager::GetCurrentUser(struct_0 *v0)\n
{\n
    return v0->field_14;\n
}\n
", "4235487:sub_40a0df": null, "4235488:_ZN13FitnessSensor9IsInvalidEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    char field_c;\n
} struct_0;\n
\n
int FitnessSensor::IsInvalid(struct_0 *v0)\n
{\n
    return v0->field_c & 1;\n
}\n
", "4235507:sub_40a0f3": null, "4235520:_ZN4User9SetWeightEt": "typedef struct struct_0 {\n
    char padding_0[2];\n
    unsigned short field_2;\n
} struct_0;\n
\n
int User::SetWeight(struct_0 *v0, unsigned short a0)\n
{\n
    v0->field_2 = a0;\n
    return v0;\n
}\n
", "4235543:sub_40a117": null, "4235552:_ZN4User9SetHeightEt": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned short field_4;\n
} struct_0;\n
\n
int User::SetHeight(struct_0 *v0, unsigned short a0)\n
{\n
    v0->field_4 = a0;\n
    return v0;\n
}\n
", "4235575:sub_40a137": null, "4235584:_ZN5CUtil17DoubleListDeclareI13FitnessSensorLj16EEC2Ev": "int CUtil::DoubleListDeclare::__base_ctor__(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = 16;\n
    return CUtil::DoubleList::__base_ctor__(v1);\n
}\n
", "4235631:sub_40a16f": null, "4235632:_ZN5CUtil17DoubleListDeclareI4UserLj16EEC2Ev": "int CUtil::DoubleListDeclare::__base_ctor__(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = 16;\n
    return CUtil::DoubleList::__base_ctor__(v1);\n
}\n
", "4235679:sub_40a19f": null, "4235680:_ZN5CUtil10DoubleListI13FitnessSensorEC2Ej": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::__base_ctor__(unsigned int v3[5], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[5];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[5];  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    v1[0] = a0;\n
    CUtil::DoubleLink::__base_ctor__(&v1[1]);\n
    CUtil::DoubleLink::__base_ctor__(&v1[3]);\n
    v5 = v1;\n
    v5[1] = &v5[3];\n
    v5[2] = 0;\n
    v5[4] = &v5[1];\n
    v5[3] = 0;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4235786:sub_40a20a": null, "4235792:_ZN5CUtil10DoubleListI4UserEC2Ej": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int CUtil::DoubleList::__base_ctor__(unsigned int v4[5], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[5];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[5];  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    v2[0] = a0;\n
    v0 = &v2[1];\n
    CUtil::DoubleLink::__base_ctor__();\n
    v0 = &v2[3];\n
    CUtil::DoubleLink::__base_ctor__();\n
    v6 = v2;\n
    v6[1] = &v6[3];\n
    v6[2] = 0;\n
    v6[4] = &v6[1];\n
    v6[3] = 0;\n
    v7 = v3;\n
    return v2;\n
}\n
", "4235898:sub_40a27a": null, "4235904:_ZN5CUtil10DoubleLinkI4UserEC2Ev": "int CUtil::DoubleLink::__base_ctor__(unsigned int v0[2])\n
{\n
    unsigned int v1[2];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    return v0;\n
}\n
", "4235928:sub_40a298": null, "4235936:_ZN4UserC1Et": "int User::__ctor__(unsigned short *v1, unsigned short a0)\n
{\n
    unsigned short *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    CUtil::DoubleLink::__base_ctor__(v0 + 8);\n
    *(v0) = a0;\n
    return v0;\n
}\n
", "4235995:sub_40a2db": null, "4236000:_ZN4User16SetBloodPressureEt": "typedef struct struct_0 {\n
    char padding_0[10];\n
    unsigned short field_a;\n
} struct_0;\n
\n
int User::SetBloodPressure(struct_0 *v2, unsigned short a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (a0 >= 20 && a0 <= 150)\n
    {\n
        v0->field_a = a0;\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    v1 = 0;\n
    return v1 & 1;\n
}\n
", "4236084:sub_40a334": null, "4236096:_ZN4User10SetBodyFatEt": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned short field_8;\n
} struct_0;\n
\n
int User::SetBodyFat(struct_0 *v2, unsigned short a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2;\n
    if (a0 >= 0 && a0 <= 100)\n
    {\n
        v0->field_8 = a0;\n
        v1 = 1;\n
        return v1 & 1;\n
    }\n
    v1 = 0;\n
    return v1 & 1;\n
}\n
", "4236180:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:_Znwj": null, "5242884:__libc_start_main": null, "5242888:cgc_receive": null, "5242892:_Znaj": null, "5242896:cgc_allocate": null, "5242900:cgc__terminate": null, "5242904:_ZdlPv": null, "5242908:_ZdaPv": null, "5242912:cgc_rint": null, "5242916:cgc_log10": null, "5242920:cgc_transmit": null, "5242924:memset": null, "5242928:cgc_pow": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}