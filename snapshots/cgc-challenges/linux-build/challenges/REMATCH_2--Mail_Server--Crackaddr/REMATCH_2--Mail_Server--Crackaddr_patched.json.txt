{"4202496:_init": "extern struct_0 *g_40a330;\n
\n
int _init()\n
{\n
    if (g_40a330)\n
    {\n
        g_40a330();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33319;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33255;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40a32c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40a32c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_receive_all": "int cgc_receive_all(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_receive_all_fd(0, v1);\n
}\n
", "4203771:sub_4024fb": null, "4203776:cgc_receive_all_fd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_all_fd(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a1; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_receive(v6, a0 + v4, a1 - v4);\n
        if (v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v2))\n
            break;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4203938:sub_4025a2": null, "4203952:cgc_receive_str_until_fd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_str_until_fd(unsigned int v7, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1d]\n
    char v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    *(a0) = 0;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        v4 = cgc_receive(v7, &v2, 1);\n
        if (v4)\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
        if (!*(&v3))\n
            break;\n
        if (v2 == a2)\n
            break;\n
        if (v5 < a1 - 1)\n
        {\n
            v8 = v5;\n
            v5 = v8 + 1;\n
            *((a0 + v8)) = v2;\n
        }\n
    }\n
    *((a0 + v5)) = 0;\n
    v6 = v5;\n
    return v6;\n
}\n
", "4204170:sub_40268a": null, "4204176:cgc_receive_until_fd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until_fd(unsigned int v7, unsigned int a0, unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x1d]\n
    char v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    *(a0) = 0;\n
    while (true)\n
    {\n
        v0 = &v3;\n
        v4 = cgc_receive(v7, &v2, 1);\n
        if (v4)\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
        if (!*(&v3))\n
            break;\n
        if (v2 == a2)\n
            break;\n
        if (v5 < a1)\n
        {\n
            v8 = v5;\n
            v5 = v8 + 1;\n
            *((a0 + v8)) = v2;\n
        }\n
    }\n
    if (v5 < a1)\n
        *((a0 + v5)) = 0;\n
    v6 = v5;\n
    return v6;\n
}\n
", "4204401:sub_402771": null, "4204416:cgc_buffered_receive": "extern unsigned int _GLOBAL_OFFSET_TABLE_[16];\n
extern unsigned int cgc_bytes_in_buffer;\n
\n
int cgc_buffered_receive(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[16];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[16];  // eax\n
    unsigned int v7[16];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v3 = a0;\n
    if (cgc_bytes_in_buffer)\n
    {\n
        v2 = a0;\n
        if (a0 > v1[15])\n
            v2 = v1[15];\n
        v0 = v2;\n
        cgc_memcpy(v5, v1[13]);\n
        v6 = v1;\n
        v3 -= v2;\n
        v6[13] = v2 + v6[13];\n
        v6[15] = v6[15] - v2;\n
        v5 = v2 + v5;\n
        if (!v6[15])\n
        {\n
            v7 = v1;\n
            v7[13] = &v7[9 + 2];\n
        }\n
    }\n
    if (v3 > 0 && cgc_receive_all(v5, v3) < 0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = a0;\n
    return v4;\n
}\n
", "4204690:sub_402892": null, "4204704:cgc_receive_until": "int cgc_receive_until(unsigned int v1, unsigned int a0, char a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a1;\n
    return cgc_buffered_receive_until(v1, a0);\n
}\n
", "4204764:sub_4028dc": null, "4204768:cgc_buffered_receive_until": "typedef struct struct_0 {\n
    char padding_0[52];\n
    struct struct_1 *field_34;\n
    char padding_38[4];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_buffered_receive_until(char *v7, unsigned int a0, char a1)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v5;  // [bp-0xd]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_0 *v8;  // eax\n
    char *v9;  // ecx\n
    struct_0 *v10;  // eax\n
    struct_0 *v11;  // ecx\n
    char *v12;  // eax\n
    char *v13;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    *(v7) = 0;\n
    while (true)\n
    {\n
        if (v1->field_3c > 0)\n
        {\n
            v8 = v1;\n
            v9 = v8->field_34;\n
            v8->field_34 = &v9[1];\n
            v5 = *(v9);\n
            v8->field_3c = v8->field_3c - 1;\n
            if (!v8->field_3c)\n
            {\n
                v10 = v1;\n
                v10->field_34 = &v10[9].padding_0[8];\n
            }\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            v3 = cgc_receive(0, &v1[9].padding_0[8], 0x400);\n
            if (v3)\n
            {\n
                v6 = -1;\n
                return v6;\n
            }\n
            if (!v2)\n
                break;\n
            v11 = v1;\n
            v11->field_3c = v2 - 1;\n
            v11->field_34 = &v11[9].padding_0[8];\n
            v12 = v11->field_34;\n
            v11->field_34 = &v12[1];\n
            v5 = *(v12);\n
        }\n
        if (v5 == a1)\n
            break;\n
        if (v4 < a0 - 1)\n
        {\n
            v13 = v7;\n
            v7 = v13 + 1;\n
            *(v13) = v5;\n
            v4 += 1;\n
        }\n
    }\n
    *(v7) = 0;\n
    v6 = v4;\n
    return v6;\n
}\n
", "4205128:sub_402a48": null, "4205136:cgc_send_all": "int cgc_send_all(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
\n
    v0 = a0;\n
    return cgc_send_all_fd(1, v1);\n
}\n
", "4205193:sub_402a89": null, "4205200:cgc_send_all_fd": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_send_all_fd(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x10]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a1; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_transmit(v6, a0 + v4, a1 - v4);\n
        if (v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v2))\n
            break;\n
    }\n
    v5 = *(&v2);\n
    return v5;\n
}\n
", "4205362:sub_402b32": null, "4205376:cgc_equals": "int cgc_equals(char *v1, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    while (true)\n
    {\n
        if (*(v1) != *(a0))\n
        {\n
            v0 = 0;\n
            return v0;\n
        }\n
        else if (*(v1))\n
        {\n
            a0 += 1;\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v0 = 1;\n
            return v0;\n
        }\n
    }\n
}\n
", "4205471:sub_402b9f": null, "4205472:cgc_replace": "int cgc_replace(char *v1, char a0, char a1, unsigned int a2)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (!*(v1))\n
            return v0;\n
        if (a2 && v0 >= a2)\n
            return v0;\n
        if (*(v1) == a0)\n
        {\n
            *(v1) = a1;\n
            v0 += 1;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4205594:sub_402c1a": null, "4205600:cgc_force_newline": "int cgc_force_newline(unsigned int v0, unsigned int a0, char *a1)\n
{\n
    unsigned int v1;  // ecx\n
\n
    if (a1 == a0)\n
    {\n
        a1[1 + v0] = 10;\n
        return a1;\n
    }\n
    if (a1[1 + v0] != 10)\n
    {\n
        v1 = a1;\n
        a1 = v1 + 1;\n
        *((v0 + v1)) = 10;\n
    }\n
    if (a1 >= a0)\n
        return a1;\n
    *((v0 + a1)) = 0;\n
}\n
", "4205714:sub_402c92": null, "4205728:cgc_getopt": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_getopt(unsigned int v5, struct struct_0 **a0, unsigned int a1, unsigned int *a2)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int *v6;  // eax\n
    unsigned int *v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = -1;\n
    if (!(*(a2) < v5 && a0[*(a2)]))\n
        return v4;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        v0 = a1;\n
        if (v1 >= cgc_strlen())\n
        {\n
            v7 = a2;\n
            *(v7) = *(v7) + 1;\n
            v4 = 0;\n
            return v4;\n
        }\n
        else if (a0[*(a2)]->field_0 != *((a1 + v3)))\n
        {\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v4 = *((a1 + v3));\n
            v6 = a2;\n
            *(v6) = *(v6) + 1;\n
            return v4;\n
        }\n
    }\n
}\n
", "4205951:sub_402d7f": null, "4205952:cgc_bcopy": "int cgc_bcopy(char *v0, char *a0, char *a1)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
\n
    for (v1 = v0; a1 > 0; a1 = v1)\n
    {\n
        *(a0) = *(v0);\n
        a0 += 1;\n
        v0 += 1;\n
        v1 = a1 + 1;\n
    }\n
    return v1;\n
}\n
", "4206018:sub_402dc2": null, "4206032:cgc_exit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_exit()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x4]\n
    unsigned int v2;  // [bp+0x4]\n
    unsigned int v3;  // [bp+0x8]\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v4 = &v1;\n
    v0 = v5;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc__terminate(v2, v0);\n
    cgc_link(v2, v3);\n
    return;\n
}\n
", "4206064:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 64));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 64)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4206401:sub_402f41": null, "4206416:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[64];\n
    unsigned int field_40;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[132].padding_0[36]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_40)\n
    {\n
        v7 = v1;\n
        v7->field_40 = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4206641:sub_403031": null, "4206656:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4206727:sub_403087": null, "4206736:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[64];\n
    struct struct_1 *field_40;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_40);\n
    v3[0] = v1->field_40;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4206953:sub_403169": null, "4206960:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax, Other Possible Types: struct_0 *, unsigned int\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4207044:sub_4031c4": null, "4207056:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[64];\n
    struct struct_0 *field_40;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_40; v2; v2 = *((v2 + 4)))\n
    {\n
        if (*(v2) >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4207337:sub_4032e9": null, "4207344:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4207452:sub_40335c": null, "4207456:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 64)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 64));\n
        *((v6 + v3 * 4 + 64)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4207741:sub_40347d": null, "4207744:cgc_round": null, "4207890:sub_403512": null, "4207904:cgc_floor": null, "4208060:sub_4035bc": null, "4208064:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[1736];\n
    unsigned int field_6c8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state;\n
\n
int cgc_seed_prng_array(unsigned int v4, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int *v6;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&state, 128);\n
    v0->field_6c8 = 0;\n
    if (a0 > 32)\n
        a0 = 32;\n
    for (v2 = 0; v2 < a0; v2 += 1)\n
    {\n
        *(&v0->padding_0[1608 + 4 * v2]) = *((v4 + v2 * 4));\n
    }\n
    v6 = a0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= 32)\n
            break;\n
        v7 = v0;\n
        v1 = *(&v7->padding_0[1608 + 4 * (v2 + 1 & 31)]);\n
        *((1608 + &v7->padding_0[0] + 0x4 * v2)) = (v1 ^ (v1 >> 30) + v2) * 524287;\n
        v6 = v2 + 1;\n
    }\n
    v8 = v3;\n
    return v6;\n
}\n
", "4208287:sub_40369f": null, "4208288:cgc_seed_prng": "int cgc_seed_prng(unsigned int v0)\n
{\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4208335:sub_4036cf": null, "4208336:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[1608 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4208619:sub_4037eb": null, "4208624:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6 + 1;\n
        if (!v3)\n
        {\n
            v5 = cgc_prng();\n
            return v5;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4208812:sub_4038ac": null, "4208816:cgc_runshellcommand": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_runshellcommand(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v4 = *(v3);\n
    if (!v4)\n
    {\n
        return *(v3);\n
    }\n
    else if (cgc_strcmp(v3))\n
    {\n
        if (!cgc_strcmp(v3))\n
        {\n
            v4 = cgc_printf();\n
        }\n
        else\n
        {\n
            v0 = 5;\n
            if (!cgc_strncmp(v3, v1 - 8902))\n
            {\n
                v2 = cgc_atoi();\n
                v4 = cgc_send_all(v2, 4);\n
            }\n
            else if (!cgc_strcmp(v3))\n
            {\n
                v4 = cgc_printf();\n
            }\n
            else if (!cgc_strcmp(v3))\n
            {\n
                v4 = cgc_printf();\n
            }\n
            else\n
            {\n
                v4 = cgc_strcmp(v3);\n
                if ((Not (Not (eax<4> == 0x0<32>)))) { Goto None } else { Goto None }\n
            }\n
        }\n
        return v4;\n
    }\n
    else\n
    {\n
        v4 = cgc_printf();\n
        return v4;\n
    }\n
}\n
", "4209253:sub_403a65": null, "4209264:cgc_shell": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_shell()\n
{\n
    unsigned int v0;  // [bp-0x410]\n
    char v1;  // [bp-0x40c]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        cgc_printf();\n
        v2 = cgc_receive_until(&v1, 0x400, 10);\n
        v4 = cgc_strcmp(&v1);\n
        if (!v4)\n
            break;\n
        cgc_runshellcommand(&v1);\n
    }\n
    return v4;\n
}\n
", "4209424:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4209525:sub_403b75": null, "4209536:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4209570:sub_403ba2": null, "4209584:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4209854:sub_403cbe": null, "4209856:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4209948:sub_403d1c": null, "4209952:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 == v3)\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
        v0 = &v4;\n
        if (cgc_transmit(1, v7 + v2, v3 - v2))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        else if (*(&v4))\n
        {\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
    }\n
}\n
", "4210140:sub_403ddc": null, "4210144:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4210447:sub_403f0f": null, "4210448:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc], Other Possible Types: unsigned long\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    unsigned int *v45;  // [bp+0x10001c], Other Possible Types: struct struct_1 **\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_404449:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_404449;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 8836)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4211804:sub_40445c": null, "4211808:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4211866:sub_40449a": null, "4211872:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4211941:sub_4044e5": null, "4211952:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4212091:sub_40457b": null, "4212096:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4212368:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4213024:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4215440:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4216106:sub_40552a": null, "4216112:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4216652:sub_40574c": null, "4216656:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4216703:sub_40577f": null, "4216704:cgc_srand": "int cgc_srand(unsigned int v0)\n
{\n
    return cgc_seed_prng(v0);\n
}\n
", "4216741:sub_4057a5": null, "4216752:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4216989:sub_40589d": null, "4216992:cgc_atof": null, "4217277:sub_4059bd": null, "4217280:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4217356:sub_405a0c": null, "4217360:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!v0[a0])\n
            break;\n
        v0[v1] = v0[a0];\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = 0;\n
    }\n
    return v1;\n
}\n
", "4217497:sub_405a99": null, "4217504:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4217640:sub_405b28": null, "4217648:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_405c4a;\n
    if (*(v7) != 48)\n
    {\n
LABEL_405c4a:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_405c9d;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_405c9d;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_405c9d:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_405c4a;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (cgc_isupper(v1))\n
                v1 -= 55;\n
            else\n
                v1 -= 87;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_405dd5:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_405dda:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = v7 + 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_405dda;\n
            goto LABEL_405dd5;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4218419:sub_405e33": null, "4218432:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4218491:sub_405e7b": null, "4218496:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4218551:sub_405eb7": null, "4218560:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4218715:sub_405f5b": null, "4218720:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        else if (v4[v2] != a0)\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
    }\n
}\n
", "4218878:sub_405ffe": null, "4218880:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[576];\n
    struct struct_1 *field_240;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_240)\n
        {\n
            v6 = v1->field_240;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_240 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_240 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            *((v6 + v3)) = 0;\n
        }\n
        else\n
        {\n
            v1->field_240 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
    }\n
    if (v3 == v2)\n
        v1->field_240 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4219399:sub_406207": null, "4219408:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4219516:sub_40627c": null, "4219520:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
        {\n
            v0 = 0;\n
            if (*(v2) == *(a0))\n
                v0 = !(a1 <= 0);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
        a1 -= 1;\n
    }\n
    if (!a1)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = *(v2) - *(a0);\n
    return v1;\n
}\n
", "4219685:sub_406325": null, "4219696:cgc_strcat": "int cgc_strcat(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    for (; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *(v0) = 0;\n
    return v1;\n
}\n
", "4219806:sub_40639e": null, "4219808:cgc_strstr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strstr(char *v3, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && a0)\n
    {\n
        v1 = cgc_strlen(a0);\n
        while (true)\n
        {\n
            if (!*(v3))\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (cgc_strncmp(v3, a0, v1))\n
            {\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                v2 = v3;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4219978:sub_40644a": null, "4219984:cgc_rindex": "int cgc_rindex(char *v3, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = cgc_strlen(v3);\n
    v0 = v1;\n
    while (true)\n
    {\n
        if (v0 < 0)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v3[v0] == a0)\n
        {\n
            v2 = &v3[v0];\n
            return v2;\n
        }\n
        v0 -= 1;\n
    }\n
}\n
", "4220110:sub_4064ce": null, "4220112:cgc_crackaddr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_crackaddr(char *v14, char *a0)\n
{\n
    int tmp_19;  // tmp #19\n
    char v0;  // [bp-0x3a]\n
    char v1;  // [bp-0x39]\n
    unsigned int v2;  // [bp-0x38]\n
    void* v3;  // [bp-0x34], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x2c]\n
    void* v6;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v10;  // [bp-0x15]\n
    unsigned int v11;  // [bp-0x14]\n
    char *v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v13;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v15;  // eax\n
    char *v16;  // eax\n
    char *v17;  // eax\n
    char *v18;  // eax\n
    char *v19;  // eax\n
    char *v20;  // eax\n
    unsigned int v21;  // ecx\n
    char *v22;  // eax\n
    char *v23;  // eax\n
    char *v24;  // eax\n
    char *v25;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = a0;\n
    v11 = a0 + 1019;\n
    if (!v14)\n
    {\n
        v13 = 0;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v14))\n
            v1 = cgc_isspace(*(v14));\n
        if (!(v1 & 1))\n
            break;\n
        v14 += 1;\n
    }\n
    v8 = 0;\n
    v9 = 0;\n
    v6 = 0;\n
    v7 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            if (v9)\n
            {\n
                v20 = v12;\n
                v12 = v20 + 1;\n
                *(v20) = 97;\n
            }\n
            break;\n
        }\n
        else\n
        {\n
            v15 = v14;\n
            v14 = v15 + 1;\n
            v10 = *(v15);\n
            v5 = !(v12 < v11);\n
            if (!v5 && v3 > 0)\n
            {\n
                v16 = v12;\n
                v12 = v16 + 1;\n
                *(v16) = v10;\n
            }\n
            if (v10 == 65)\n
            {\n
                v3 = 0;\n
                if (!v9)\n
                {\n
                    v9 = 1;\n
                    v11 -= 1;\n
                }\n
            }\n
            if (v10 == 97)\n
            {\n
                v3 += 1;\n
                if (v3 <= 1)\n
                {\n
                    v17 = v12;\n
                    v12 = v17 + 1;\n
                    *(v17) = v10;\n
                }\n
                if (v9)\n
                {\n
                    v9 = 0;\n
                    v11 += 1;\n
                }\n
            }\n
            if (v10 == 66)\n
            {\n
                v7 += 1;\n
                if (!v5)\n
                {\n
                    v6 += 1;\n
                    v11 -= 1;\n
                    v3 += 1;\n
                }\n
            }\n
            if (v10 == 98 && v7 > 0)\n
            {\n
                v7 -= 1;\n
                v3 -= 1;\n
                if (!v5)\n
                {\n
                    v6 -= 1;\n
                    v11 += 1;\n
                }\n
                continue;\n
            }\n
            if (v10 == 98 && !v5 && v3 > 0)\n
                v12 -= 1;\n
            if (v10 == 67 && !v8)\n
            {\n
                v8 = 1;\n
                v11 -= 1;\n
            }\n
            if (v10 == 99 && v8)\n
            {\n
                v8 = 0;\n
                v11 += 1;\n
            }\n
            if (v10 == 68)\n
                v4 = (v4 ^ 255) & 1;\n
            if (v10 == 70 && !v5)\n
            {\n
                if (*(v14))\n
                {\n
                    v18 = v14;\n
                    v14 = v18 + 1;\n
                    tmp_19 = *(v18);\n
                    v19 = v12;\n
                    v12 = v19 + 1;\n
                    *(v19) = tmp_19;\n
                }\n
                continue;\n
            }\n
            if (v10 == 71 && *(v14))\n
                v14 += 1;\n
        }\n
    }\n
    while (true)\n
    {\n
        v21 = v6;\n
        v6 = v21 - 1;\n
        v0 = 0;\n
        if (v21 > 0)\n
            v0 = v12 < v11 - 2;\n
        if (!(v0 & 1))\n
            break;\n
        v22 = v12;\n
        v12 = v22 + 1;\n
        *(v22) = 98;\n
    }\n
    if (v8)\n
    {\n
        v23 = v12;\n
        v12 = v23 + 1;\n
        *(v23) = 99;\n
    }\n
    if (v4)\n
    {\n
        v24 = v12;\n
        v12 = v24 + 1;\n
        *(v24) = 68;\n
    }\n
    v25 = v12;\n
    v12 = v25 + 1;\n
    *(v25) = 0;\n
    v13 = a0;\n
    return v13;\n
}\n
", "4221116:sub_4068bc": null, "4221120:cgc_gen_random_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_gen_random_string(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = cgc_random_in_range(v5, a0);\n
    v2 = cgc_calloc(v3);\n
    for (v1 = 0; v1 < v3 - 2; v1 += 1)\n
    {\n
        v2[v1] = cgc_random_in_range(46, 126);\n
    }\n
    v7 = v4;\n
    return v2;\n
}\n
", "4221267:sub_406953": null, "4221280:cgc_add_random_addressbook_entry": "typedef struct struct_2 {\n
    char padding_0[2004];\n
    struct struct_1 *field_7d4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_random_addressbook_entry()\n
{\n
    struct_2 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v2[3];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_1 *v6;  // eax\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2[0] = cgc_calloc(16);\n
    v2[0] = cgc_gen_random_string(5, 32);\n
    v2[1] = cgc_gen_random_string(5, 32);\n
    v2[2] = cgc_random_in_range(0, 1);\n
    if (!v1)\n
    {\n
        v0->field_7d4->field_4 = &v2;\n
    }\n
    else\n
    {\n
        for (v1 = v0->field_7d4->field_4; *((v1 + 12)); v1 = *((v1 + 12)));\n
        *((v1 + 12)) = v2;\n
    }\n
    v6 = v0->field_7d4;\n
    v6->field_0 = v6->field_0 + 1;\n
    return v2;\n
}\n
", "4221522:sub_406a52": null, "4221536:cgc_initialize_address_book": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *abook;\n
\n
int cgc_initialize_address_book()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3[2];  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    abook->field_0 = 0;\n
    v3 = abook;\n
    abook->field_4 = 0;\n
    for (v1[0] = 0; v1 < 20; v1 = v3)\n
    {\n
        cgc_add_random_addressbook_entry();\n
        v3 = &v1[0] + 1;\n
    }\n
    return v3;\n
}\n
", "4221628:sub_406abc": null, "4221632:cgc_pick_address": "typedef struct struct_2 {\n
    char padding_0[2004];\n
    struct struct_1 *field_7d4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
extern struct_1 *abook;\n
\n
int cgc_pick_address()\n
{\n
    char v0;  // [bp-0x19]\n
    struct_2 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    for (v3 = abook->field_4; v3; v3 = *((v3 + 12)))\n
    {\n
        v4 += 1;\n
    }\n
    v2 = cgc_random_in_range(0, v4 - 1);\n
    v3 = v1->field_7d4->field_4;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v3->field_c)\n
            v0 = !(v2 <= 0);\n
        if (!(v0 & 1))\n
            break;\n
        v3 = *((v3 + 12));\n
        v2 -= 1;\n
    }\n
    return v3;\n
}\n
", "4221829:sub_406b85": null, "4221840:cgc_lookup_name": "typedef struct struct_0 {\n
    char *field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_2 *abook;\n
\n
int cgc_lookup_name(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &abook->field_4->field_0;\n
    while (true)\n
    {\n
        if (!v1)\n
            return v1;\n
        if (!cgc_strcmp(v1->field_0, v2))\n
            return v1;\n
        v1 = v1->field_c;\n
    }\n
}\n
", "4221947:sub_406bfb": null, "4221952:cgc_add_random_queue": "typedef struct struct_1 {\n
    char padding_0[2000];\n
    struct struct_0 *field_7d0;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_random_queue()\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = cgc_calloc(16);\n
    v2 = cgc_pick_address();\n
    v3[1] = *(v2);\n
    v3[2] = cgc_add_random_message();\n
    if (!v0->field_7d0)\n
        return v3;\n
    for (v1 = v0->field_7d0; *((v1 + 12)); v1 = *((v1 + 12)));\n
    *((v1 + 12)) = v3;\n
    return v3;\n
}\n
", "4222106:sub_406c9a": null, "4222112:cgc_add_random_message": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    char *field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[24];\n
    struct struct_1 *field_18;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_random_message(struct_2 *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_calloc(28);\n
    v2->field_0 = cgc_pick_address();\n
    v2->field_4 = cgc_pick_address();\n
    v2->field_8 = cgc_gen_random_string(5, 32);\n
    v2->field_10 = cgc_gen_random_string(5, 0x100);\n
    v2->field_14 = cgc_strlen(v2->field_10);\n
    if (!v4->field_8)\n
        return v2;\n
    for (v1 = v4->field_8; *((v1 + 24)); v1 = *((v1 + 24)));\n
    *((v1 + 24)) = v2;\n
    return v2;\n
}\n
", "4222337:sub_406d81": null, "4222352:cgc_initialize_mail_queues": "typedef struct struct_0 {\n
    char padding_0[2000];\n
    unsigned int field_7d0;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_initialize_mail_queues()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v0;\n
    v5->field_7d0 = cgc_add_random_queue();\n
    for (v1 = 0; v1 < 32; v1 = v5)\n
    {\n
        cgc_add_random_queue();\n
        v5 = v1 + 1;\n
    }\n
    v6 = v2;\n
    return v5;\n
}\n
", "4222435:sub_406de3": null, "4222448:cgc_print_address_book": "typedef struct struct_2 {\n
    char padding_0[2004];\n
    struct struct_1 *field_7d4;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
extern struct_2 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_print_address_book()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    struct_2 *v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    struct_0 *v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    struct_0 *v10;  // eax, Other Possible Types: unsigned int\n
\n
    v7 = v9;\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_printf(\"Address Book:\\n
\");\n
    v10 = v4->field_7d4->field_4;\n
    v6 = v10;\n
    for (v5 = 1; v6; v6 = v10)\n
    {\n
        v0 = v5;\n
        v1 = v6->field_0;\n
        v2 = v6->field_4;\n
        v3 = v6->field_8;\n
        cgc_printf(&v4[4].padding_0[633]);\n
        v5 += 1;\n
        v10 = v6->field_c;\n
    }\n
    return v10;\n
}\n
", "4222602:sub_406e8a": null, "4222608:cgc_make_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_make_string(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = cgc_calloc(cgc_strlen(v3) + 1);\n
    cgc_strcpy(v1, v3);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4222722:sub_406f02": null, "4222736:cgc_sendmail_post": "typedef struct struct_3 {\n
    char padding_0[2000];\n
    struct struct_2 *field_7d0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_0;\n
\n
typedef struct struct_6 {\n
    struct struct_7 *field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
    unsigned int field_14;\n
} struct_6;\n
\n
typedef struct struct_5 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_4 *field_8;\n
} struct_5;\n
\n
typedef struct struct_4 {\n
    char padding_0[24];\n
    struct struct_4 *field_18;\n
} struct_4;\n
\n
typedef struct struct_2 {\n
    char padding_0[12];\n
    struct struct_2 *field_c;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
typedef struct struct_7 {\n
    char *field_0;\n
} struct_7;\n
\n
extern struct_3 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sendmail_post(char *v12)\n
{\n
    struct_3 *v0;  // [bp-0x430]\n
    struct_4 *v1;  // [bp-0x42c], Other Possible Types: unsigned int\n
    struct_2 *v2;  // [bp-0x428], Other Possible Types: unsigned int\n
    struct_5 *v3;  // [bp-0x424]\n
    struct_6 *v4;  // [bp-0x420]\n
    char *v5;  // [bp-0x41c]\n
    struct_0 *v6;  // [bp-0x418]\n
    struct_0 *v7;  // [bp-0x414]\n
    struct_0 *v8;  // [bp-0x410]\n
    struct_0 *v9;  // [bp-0x40c]\n
    char v10;  // [bp-0x408]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
    struct_0 *v14;  // eax, Other Possible Types: unsigned int\n
\n
    v11 = v13;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v14 = cgc_strstr(v12, \"sender:\");\n
    v9 = v14;\n
    if (!v9)\n
        return v14;\n
    v9 = &v9->field_4 + 3;\n
    v14 = cgc_strstr(v12, &v0[4].padding_0[625]);\n
    v8 = v14;\n
    if (!v8)\n
        return v14;\n
    v8 = &v8->field_8 + 2;\n
    v14 = cgc_strstr(v12, &v0[4].padding_0[614]);\n
    v6 = v14;\n
    if (!v6)\n
        return v14;\n
    v6 = &v6->field_4 + 1;\n
    v14 = cgc_strstr(v12, &v0[4].padding_0[608]);\n
    v7 = v14;\n
    if (!v7)\n
        return v14;\n
    v7 = &v7->field_8;\n
    v5 = cgc_strstr(v9, &v0[4].padding_0[599]);\n
    if (v5)\n
        *(v5) = 0;\n
    v5 = cgc_strstr(v8, &v0[4].padding_0[599]);\n
    if (v5)\n
        *(v5) = 0;\n
    v5 = cgc_strstr(v6, &v0[4].padding_0[599]);\n
    if (v5)\n
        *(v5) = 0;\n
    v5 = cgc_strstr(v7, &v0[4].padding_0[599]);\n
    if (v5)\n
        *(v5) = 0;\n
    v4 = cgc_calloc(28);\n
    v4->field_0 = cgc_lookup_name(v9);\n
    if (v8->field_0 == 43)\n
    {\n
        cgc_crackaddr(v8, &v10);\n
        v14 = cgc_printf(&v0[4].padding_0[597]);\n
        return v14;\n
    }\n
    v4->field_4 = cgc_lookup_name(v8);\n
    v14 = v4;\n
    if (!*((v14 + 4)))\n
        return v4;\n
    v14 = v4;\n
    if (!*(v14))\n
        return v4;\n
    v4->field_10 = cgc_make_string(v6);\n
    v4->field_14 = cgc_strlen(v6);\n
    v4->field_8 = cgc_make_string(v7);\n
    v3 = cgc_locate_queue();\n
    if (!v3)\n
    {\n
        v3 = cgc_calloc(16);\n
        v3->field_4 = cgc_make_string(v4->field_0->field_0);\n
        v3->field_8 = &v4;\n
        for (v2 = v0->field_7d0; v2->field_c; v2 = v2->field_c);\n
        *((v2 + 12)) = v3;\n
    }\n
    else if (!v1)\n
    {\n
        v3->field_8 = &v4;\n
    }\n
    else\n
    {\n
        for (v1 = v3->field_8; v1->field_18; v1 = v1->field_18);\n
        *((v1 + 24)) = v4;\n
    }\n
    v14 = cgc_printf(&v0[4].padding_0[588]);\n
    return v14;\n
}\n
", "4223888:cgc_locate_queue": "typedef struct struct_1 {\n
    char padding_0[4];\n
    char *field_4;\n
    char padding_8[4];\n
    struct struct_1 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char padding_8[4];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *root_queue;\n
\n
int cgc_locate_queue(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = &root_queue->padding_0;\n
    while (true)\n
    {\n
        if (!v1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcmp(v1->field_4, v3))\n
        {\n
            v1 = v1->field_c;\n
        }\n
        else\n
        {\n
            v2 = v1;\n
            return v2;\n
        }\n
    }\n
}\n
", "4224006:sub_407406": null, "4224016:cgc_list_queue": "typedef struct struct_2 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_list_queue(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x24]\n
    struct_0 *v5;  // [bp-0x20]\n
    void* v6;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_2 *v7;  // [bp-0x18]\n
    char *v8;  // [bp-0x14]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    struct_0 *v12;  // eax, Other Possible Types: unsigned int\n
\n
    v9 = v11;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v8 = v10;\n
    v7 = cgc_locate_queue(v8);\n
    if (!v7)\n
    {\n
        v12 = cgc_printf(v4 - 8586);\n
        return v12;\n
    }\n
    v6 = 0;\n
    v12 = v7->field_8;\n
    while (true)\n
    {\n
        v5 = v12;\n
        if (!v5)\n
            break;\n
        if (v5->field_0 && v5->field_4)\n
        {\n
            v0 = v6;\n
            v1 = v5->field_0->field_0;\n
            v2 = v5->field_4->field_0;\n
            v3 = v5->field_8;\n
            cgc_printf(v4 - 8564);\n
            goto LABEL_4074e1;\n
        }\n
        cgc_printf(v4 - 8533);\n
LABEL_4074e1:\n
        v6 += 1;\n
        v12 = v5->field_18;\n
    }\n
    return v12;\n
}\n
", "4224256:cgc_list_all_queues": "typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_2 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
    char padding_c[12];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_2 *root_queue;\n
\n
int cgc_list_all_queues()\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x20]\n
    struct_0 *v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_2 *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct_2 *v9;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = root_queue;\n
    for (v7 = root_queue; v7; v7 = v9)\n
    {\n
        v6 = 0;\n
        v0 = *((v7 + 4));\n
        cgc_printf(v4 - 8510);\n
        for (v5 = *((v7 + 8)); v5; v5 = v5->field_18)\n
        {\n
            if (*(v5) && *((v5 + 4)))\n
            {\n
                v0 = v6;\n
                v1 = *(*(v5));\n
                v2 = *(*((v5 + 4)));\n
                v3 = *((v5 + 8));\n
                cgc_printf(v4 - 8564);\n
                goto LABEL_4075c8;\n
            }\n
            cgc_printf(v4 - 8533);\n
LABEL_4075c8:\n
            v6 += 1;\n
        }\n
        cgc_printf(v4 - 8409);\n
        v9 = v7->field_c;\n
    }\n
    return v9;\n
}\n
", "4224518:sub_407606": null, "4224528:cgc_read_message": "typedef struct struct_1 {\n
    char padding_0[8];\n
    struct struct_0 *field_8;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[4];\n
    unsigned int field_10;\n
    char padding_14[4];\n
    struct struct_0 *field_18;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_message(char *v11)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    struct_0 *v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct_1 *v8;  // [bp-0x18]\n
    struct_1 *v9;  // [bp-0x14]\n
    char *v10;  // [bp-0x10]\n
    char *v12;  // eax\n
    struct_1 *v13;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = v11;\n
    while (true)\n
    {\n
        v4 = 0;\n
        if (*(v11) != 32)\n
            v4 = *(v11);\n
        if (!(v4 & 1))\n
            break;\n
        v11 += 1;\n
    }\n
    v12 = v11;\n
    v11 = v12 + 1;\n
    *(v12) = 0;\n
    v9 = cgc_atoi(v11);\n
    v13 = cgc_locate_queue(v10);\n
    v8 = v13;\n
    if (!v8)\n
        return v13;\n
    v7 = 0;\n
    v6 = v8->field_8;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (v6)\n
            v3 = v7 != v9;\n
        if (!(v3 & 1))\n
            break;\n
        v7 += 1;\n
        v6 = *((v6 + 24));\n
    }\n
    v13 = v9;\n
    if (v13 != v7)\n
        return v13;\n
    v0 = v7;\n
    v1 = *((v6 + 8));\n
    v2 = *((v6 + 16));\n
    v13 = cgc_printf(v5 - 8499);\n
}\n
", "4224833:sub_407741": null, "4224848:main": "typedef struct struct_1 {\n
    char padding_0[2004];\n
    unsigned int field_7d4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v9, unsigned int a0)\n
{\n
    char v0;  // [bp-0x9e9]\n
    struct_1 *v1;  // [bp-0x9e8]\n
    struct_0 *v2;  // [bp-0x9e4], Other Possible Types: unsigned int\n
    struct_0 *v3;  // [bp-0x9e0], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x9d9]\n
    void* v5;  // [bp-0x14]\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    struct_0 *v11;  // eax\n
\n
    v8 = v10;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = 0;\n
    v6 = 0;\n
    cgc_seed_prng(*(0x4347c000));\n
    v5 = 0;\n
    v1->field_7d4 = cgc_calloc(8);\n
    cgc_initialize_address_book();\n
    cgc_initialize_mail_queues();\n
    v3 = 0;\n
    cgc_printf(&v1[4].padding_0[443]);\n
    while (true)\n
    {\n
        v3 = cgc_receive_until(&v4, 2500, 10);\n
        if (v3 <= 0)\n
            break;\n
        (&v4)[v3] = 0;\n
        v2 = &v4;\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v2->field_0 != 32)\n
                v0 = v2->field_0;\n
            if (!(v0 & 1))\n
                break;\n
            v2 += 1;\n
        }\n
        v11 = v2;\n
        v2 = v11 + 1;\n
        v11->field_0 = 0;\n
        if (!cgc_strcmp(&v4, &v1[4].padding_0[433]))\n
        {\n
            cgc_list_queue(v2);\n
        }\n
        else if (!cgc_strcmp(&v4, &v1[4].padding_0[428]))\n
        {\n
            cgc_list_all_queues();\n
        }\n
        else if (!cgc_strcmp(&v4, &v1[4].padding_0[420]))\n
        {\n
            cgc_sendmail_post(v2);\n
        }\n
        else if (!cgc_strcmp(&v4, &v1[4].padding_0[415]))\n
        {\n
            cgc_read_message(v2);\n
        }\n
        else if (!cgc_strcmp(&v4, &v1[4].padding_0[410]))\n
        {\n
            cgc_print_address_book();\n
        }\n
        else\n
        {\n
            if (!cgc_strcmp(&v4, &v1[4].padding_0[398]))\n
                break;\n
            cgc_printf(&v1[4].padding_0[393]);\n
            v6 = 1;\n
        }\n
        if (v6)\n
            break;\n
    }\n
    cgc_printf(&v1[4].padding_0[375]);\n
    return v7;\n
}\n
", "4225628:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}