{"4202496:_init": "extern struct_0 *g_40a3b8;\n
\n
int _init()\n
{\n
    if (g_40a3b8)\n
    {\n
        g_40a3b8();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4202608:cgc_fdwait": "// attributes: PLT stub\n
int cgc_fdwait()\n
{\n
    ::libc.so.0::cgc_fdwait();\n
    return;\n
}\n
", "4202624:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202640:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202656:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202672:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202688:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202704:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202720:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202736:sub_4020f0": "int sub_4020f0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202742:sub_4020f6": null, "4202752:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202795:sub_40212b": null, "4202796:sub_40212c": "int sub_40212c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202800:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202804:sub_402134": null, "4202816:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 33407;\n
    v6 = v5 + 16;\n
    v7 = v5 + 16;\n
    if (v7 == v6)\n
        return v5 + 16;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202867:sub_402173": "int sub_402173()\n
{\n
}\n
", "4202873:sub_402179": "int sub_402179()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202880:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 33343;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 16;\n
    v9 = (v6 + 16 - (v6 + 16) >> 31) + (16 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202951:sub_4021c7": "int sub_4021c7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202960:__do_global_dtors_aux": "extern unsigned int __dso_handle;\n
extern char completed.0;\n
extern unsigned int g_40a3b4;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (completed.0)\n
        return;\n
    if (g_40a3b4)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020f0();\n
    }\n
    deregister_tm_clones();\n
    completed.0 = 1;\n
    return;\n
}\n
", "4203035:sub_40221b": "int sub_40221b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4203040:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203049:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203053:sub_40222d": null, "4203056:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = a0 * v5;\n
    v2 = cgc_malloc();\n
    v0 = v3;\n
    cgc_memset(v2, 0);\n
    v7 = v4;\n
    return v2;\n
}\n
", "4203148:sub_40228c": null, "4203152:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[88];\n
    struct struct_1 *field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    struct_0 *v1;  // [bp-0x2c]\n
    struct struct_1 *v2[2];  // [bp-0x28]\n
    unsigned int *v3;  // [bp-0x24]\n
    unsigned int *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    struct struct_1 *v7[2];  // [bp-0x14]\n
    unsigned int *v8;  // [bp-0x10]\n
    unsigned int *v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (v10 < 8)\n
    {\n
        v10 = 8;\n
    }\n
    else if ((v10 & 3))\n
    {\n
        v10 = (v10 >> 2) + 1;\n
        v10 *= 4;\n
    }\n
    v9 = &v1->field_58->field_0;\n
    while (true)\n
    {\n
        if (!v9)\n
            v9 = cgc_add_free_list();\n
        v8 = v9;\n
        v7[0] = v9 + (*(v8) & -0x4) - 4;\n
        if (*(v8) >= v10)\n
            break;\n
        v9 = v7[0];\n
    }\n
    v6 = v9 + 4;\n
    v5 = *(v8) - v10;\n
    *(v8) = v10;\n
    v11 = v8;\n
    *(v11) = *(v11) | 1;\n
    if (v5 >= 12)\n
    {\n
        v4 = v9 + v10 + 4;\n
        v3 = v4;\n
        *(v3) = v5 - 4;\n
        v2[0] = &v7[0];\n
        if (-4 + v3 + (*(v3) & -0x4) != v7)\n
        {\n
            cgc_printf();\n
            cgc__terminate();\n
        }\n
        if (v1->field_58 == v9)\n
        {\n
            v1->field_58 = v3;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v3;\n
        }\n
        else\n
        {\n
            if (v2[1])\n
                *((-4 + &v2[1]->field_0 + (v2[1]->field_0 & -0x4))) = v4;\n
            if (v2[0])\n
                *((&v2[0]->field_0 + (v2[0]->field_0 & -0x4))) = v4;\n
        }\n
        v12 = v8;\n
        *(v12) = *(v12) | 2;\n
    }\n
    else if (v1->field_58 == v9)\n
    {\n
        v1->field_58 = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = 0;\n
    }\n
    else\n
    {\n
        if (v7[1])\n
            *((-4 + &v7[1]->field_0 + (v7[1]->field_0 & -0x4))) = v7[0];\n
        if (v7[0])\n
            *((&v7[0]->field_0 + (v7[0]->field_0 & -0x4))) = v7[1];\n
    }\n
    v0 = v10;\n
    cgc_memset(v9 + 4, 0);\n
    return v9 + 4;\n
}\n
", "4203835:sub_40253b": null, "4203840:cgc_add_free_list": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_free_list(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2[2];  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    struct_0 *v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v5 = v6 + 4;\n
    if ((v5 & 4095))\n
    {\n
        v5 = (v5 >> 12) + 1;\n
        v5 *= 0x1000;\n
    }\n
    v0 = &v4;\n
    if (cgc_allocate(v5, 0))\n
        cgc__terminate();\n
    v7 = v1;\n
    v3 = *(&v4);\n
    v2[0] = *(&v4) + v5 - 8;\n
    *(v3) = v5 - 4;\n
    v2[1] = 0;\n
    v2[0] = v7->field_58;\n
    v7->field_58 = v3;\n
    return v3;\n
}\n
", "4204040:sub_402608": null, "4204048:cgc_free": "typedef struct struct_0 {\n
    char padding_0[88];\n
    struct struct_1 *field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: unsigned int, struct struct_1 *[2], struct_0 *, struct struct_1 **\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_58 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_58 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_58;\n
    v2[1] = 0;\n
    if (v9->field_58)\n
    {\n
        v12 = v1;\n
        *((&v12->field_58->field_0 + (v12->field_58->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_58 = v7;\n
    return v1;\n
}\n
", "4204512:cgc_cgcfloor": "typedef struct struct_0 {\n
    char padding_0[88];\n
    struct struct_1 *field_58;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x24]\n
    unsigned int v2[2];  // [bp-0x20]\n
    struct struct_1 *v3[2];  // [bp-0x1c]\n
    struct struct_1 **v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int *v6;  // [bp-0x10]\n
    unsigned int *v7;  // [bp-0xc]\n
    struct_0 *v9;  // eax\n
    unsigned int *v10;  // ecx\n
    unsigned int *v11;  // eax\n
    struct_0 *v12;  // ecx\n
    unsigned int *v13;  // eax, Other Possible Types: unsigned int, struct struct_1 *[2], struct_0 *, struct struct_1 **\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v7 = v8 - 4;\n
    if (!(*(v7) & 1))\n
    {\n
        v0 = -2;\n
        cgc__terminate();\n
    }\n
    if ((*(v7) & 2))\n
    {\n
        v6 = v8 + (*(v7) & -0x4);\n
        if (!(*(v6) & 1))\n
        {\n
            v5 = (*(v7) & -0x4) + (*(v6) & -0x4) + 4;\n
            *(v7) = v5;\n
            if ((*(v6) & 2))\n
            {\n
                v11 = v7;\n
                *(v11) = *(v11) | 2;\n
            }\n
            if (v1->field_58 != v6)\n
            {\n
                v3[0] = -4 + v7 + v5;\n
                if (v3[1])\n
                    *((-4 + &v3[1]->field_0 + (v3[1]->field_0 & -0x4))) = v7;\n
                v13 = v3;\n
                if (v13[0])\n
                {\n
                    v13 = v3[0];\n
                    *((v13 + (v3[0]->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            else\n
            {\n
                v1->field_58 = v7;\n
                v4 = -4 + v7 + v5;\n
                v13 = v4;\n
                if (*(v13))\n
                {\n
                    v13 = *(v4);\n
                    *((v13 + (*(v4)->field_0 & -0x4))) = v7;\n
                }\n
            }\n
            return v13;\n
        }\n
    }\n
    v9 = v1;\n
    v10 = v7;\n
    *(v10) = *(v10) & -2;\n
    v2[0] = -4 + v7 + (*(v7) & -0x4);\n
    v2[0] = v9->field_58;\n
    v2[1] = 0;\n
    if (v9->field_58)\n
    {\n
        v12 = v1;\n
        *((&v12->field_58->field_0 + (v12->field_58->field_0 & -0x4))) = v7;\n
    }\n
    v13 = v1;\n
    v13->field_58 = v7;\n
    return v1;\n
}\n
", "4204676:sub_402884": null, "4204688:cgc_round_away_from_zero": null, "4204842:sub_40292a": null, "4204848:cgc_round": null, "4204992:cgc_putc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_putc(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &v2;\n
    if (cgc_transmit(1, &v4, 1))\n
    {\n
        cgc__terminate();\n
        return v4;\n
    }\n
    return v4;\n
}\n
", "4205084:sub_402a1c": null, "4205088:cgc_int_to_str": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_str(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    if (v3 < 0)\n
    {\n
        a0->field_0 = 45;\n
        a0 += 1;\n
        v3 *= -1;\n
    }\n
    do\n
    {\n
        v1->field_0 = ((v3 >> 31 CONCAT v3) /m 10 >> 32) + 48;\n
        v5 = v3;\n
        v3 = (v5 >> 31 CONCAT v5) /m 10;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205297:sub_402af1": null, "4205312:cgc_int_to_hex": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_int_to_hex(unsigned int v3, struct_0 *a0)\n
{\n
    void* v0;  // [bp-0x2c], Other Possible Types: unsigned int\n
    struct_0 *v1;  // [bp-0x28], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x24]\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // eax\n
\n
    v1 = &v2;\n
    v0 = 0;\n
    if (!a0)\n
        return &v2;\n
    do\n
    {\n
        *(v1) = (v3 & 15) + 48;\n
        if (*(v1) > 57)\n
        {\n
            v5 = v1;\n
            v5->field_0 = v5->field_0 + 7;\n
        }\n
        v3 >>= 4;\n
        v1 += 1;\n
        v0 += 1;\n
    } while (v3);\n
    while (true)\n
    {\n
        v6 = v0;\n
        v0 = v6 - 1;\n
        if (v6 <= 0)\n
            break;\n
        v1 -= 1;\n
        *(a0) = *(v1);\n
        a0 += 1;\n
    }\n
    *(a0) = 0;\n
    return a0;\n
}\n
", "4205505:sub_402bc1": null, "4205520:cgc_float_to_str": null, "4206423:sub_402f57": null, "4206432:cgc_vprintf": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf(char *v14, struct struct_0 **a0)\n
{\n
    struct_1 *v0;  // [bp-0x84]\n
    unsigned int v1;  // [bp-0x7c]\n
    unsigned int v2;  // [bp-0x78]\n
    char *v3;  // [bp-0x74], Other Possible Types: unsigned int\n
    struct_1 *v4;  // [bp-0x70], Other Possible Types: unsigned int\n
    unsigned long v5;  // [bp-0x6c]\n
    struct_1 *v6;  // [bp-0x64], Other Possible Types: unsigned int\n
    char *v7;  // [bp-0x60]\n
    struct_1 *v8;  // [bp-0x5c], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x58]\n
    char v10;  // [bp-0x51]\n
    char v11;  // [bp-0x50]\n
    void* v12;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp-0xc]\n
    struct struct_0 **v15;  // eax\n
    struct struct_0 **v16;  // eax\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    if (!v14)\n
    {\n
        v13 = -1;\n
        return v13;\n
    }\n
    while (true)\n
    {\n
        if (!*(v14))\n
        {\n
            v13 = v12;\n
            return v13;\n
        }\n
        else if (*(v14) != 64)\n
        {\n
            cgc_putc(*(v14));\n
            v14 += 1;\n
            v12 += 1;\n
        }\n
        else\n
        {\n
            v14 += 1;\n
            v1 = *(v14);\n
            if (!v1)\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            if (v1 == 64)\n
            {\n
                cgc_putc(64);\n
            }\n
            else if (v1 == 99)\n
            {\n
                v15 = a0;\n
                a0 = v15 + 1;\n
                v10 = *(v15);\n
                cgc_putc(v10);\n
            }\n
            else if (v1 == 100)\n
            {\n
                v16 = a0;\n
                a0 = v16 + 1;\n
                v9 = *(v16);\n
                cgc_int_to_str(v9, &v11);\n
                for (v8 = &v11; *(v8); v8 += 1)\n
                {\n
                    cgc_putc(*(v8));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 102)\n
            {\n
                a0 += 8;\n
                [D] PutI(72:F64x8)[t23,0] = t26\n
                [D] PutI(136:I8x8)[t23,0] = 0x01\n
                v5 = ([D] GetI(136:I8x8)[t38,0] ? [D] GetI(72:F64x8)[t38,0] : nan);\n
                [D] PutI(136:I8x8)[t38,0] = 0x00\n
                v19 = ftop<4> - 1 + 1;\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t47,0] = t50\n
                [D] PutI(136:I8x8)[t47,0] = 0x01\n
                v0 = &v11;\n
                [D] PutI(136:I8x8)[t66,0] = 0x00\n
                v21 = v20 + 1;\n
                cgc_float_to_str();\n
                for (v4 = &v11; v4->field_0; v4 += 1)\n
                {\n
                    cgc_putc(v4->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 115)\n
            {\n
                v22 = a0;\n
                a0 = v22 + 1;\n
                for (v3 = &*(v22)->field_0; *(v3); v3 += 1)\n
                {\n
                    cgc_putc(*(v3));\n
                    v12 += 1;\n
                }\n
            }\n
            else if (v1 == 120)\n
            {\n
                v23 = a0;\n
                a0 = v23 + 1;\n
                v7 = &*(v23)->field_0;\n
                cgc_int_to_hex(v7, &v11);\n
                for (v6 = &v11; v6->field_0; v6 += 1)\n
                {\n
                    cgc_putc(v6->field_0);\n
                    v12 += 1;\n
                }\n
            }\n
            else\n
            {\n
                v13 = -1;\n
                return v13;\n
            }\n
            v14 += 1;\n
        }\n
    }\n
}\n
", "4207182:sub_40324e": null, "4207184:cgc_printf": "int cgc_printf(char *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char **v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf(v2, v1);\n
    return v0;\n
}\n
", "4207242:sub_40328a": null, "4207248:cgc_sprng": "typedef struct struct_0 {\n
    char padding_0[220];\n
    unsigned int field_dc;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprng(unsigned int v4, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ecx\n
    unsigned int v15;  // edi\n
    struct_0 *v16;  // eax\n
    unsigned int v17;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = a0;\n
    v2 = v4;\n
    for (v1 = 0; v1 < 16; v1 += 1)\n
    {\n
        v5 = v2;\n
        v6 = v3;\n
        v3 = v6 ^ v6 / 0x1000;\n
        v2 = v5 ^ ((v6 CONCAT v5) * 0x100000 >> 32);\n
        v8 = v2;\n
        v9 = v3;\n
        v3 = v9 ^ ((v9 CONCAT v8) * 0x2000000 >> 32);\n
        v2 = v8 ^ v8 * 0x2000000;\n
        v12 = v2;\n
        v13 = v3;\n
        v3 = v13 ^ v13 / 0x8000000;\n
        v2 = v12 ^ ((v13 CONCAT v12) * 32 >> 32);\n
        v15 = v2;\n
        v16 = v0;\n
        v17 = v1;\n
        *(&v16->padding_0[92 + 8 * v17]) = v15 * 3625897269;\n
        *(&v16->padding_0[96 + 8 * v17]) = (v15 * 3625897269 >> 32) + v15 * 419896726 + v3 * 3625897269;\n
    }\n
    v0->field_dc = 0;\n
    return v0;\n
}\n
", "4207474:sub_403372": null, "4207488:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int position;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // edx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // edx\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // edx\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v3 = *(&(&_GLOBAL_OFFSET_TABLE_)[96 + 8 * position]);\n
    v2 = *(&(&_GLOBAL_OFFSET_TABLE_)[92 + 8 * position]);\n
    v9 = position + 1;\n
    if (v9 < 0)\n
        v9 = position + 16;\n
    position = position + -(v9 & -0x10) + 1;\n
    v1 = *(&(&_GLOBAL_OFFSET_TABLE_)[96 + 8 * position]);\n
    v0 = *(&(&_GLOBAL_OFFSET_TABLE_)[92 + 8 * position]);\n
    v10 = v0;\n
    v11 = v1;\n
    v1 = v11 ^ ((v11 CONCAT v10) * 0x8000000 >> 32);\n
    v0 = v10 ^ v10 * 0x8000000;\n
    v14 = v0;\n
    v15 = v1;\n
    v1 = v15 ^ v15 / 0x2000;\n
    v0 = v14 ^ ((v15 CONCAT v14) * 0x80000 >> 32);\n
    v2 ^= v3 >> 14;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[96 + 8 * position]) = v3 ^ v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[92 + 8 * position]) = v2 ^ v0;\n
    return *(&(&_GLOBAL_OFFSET_TABLE_)[92 + 8 * position]) * 3479400805;\n
}\n
", "4207752:sub_403488": null, "4207760:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (a0 <= v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = a0 - v5 + 1;\n
    v2 = (0 CONCAT -1) /m v3;\n
    do\n
    {\n
        v1 = cgc_prng();\n
    } while (v1 >= v3 * v2);\n
    v4 = (0 CONCAT v1) /m v2 + v5;\n
    return v4;\n
}\n
", "4207889:sub_403511": null, "4207904:cgc_memcpy": "int cgc_memcpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    return v0;\n
}\n
", "4207976:sub_403568": null, "4207984:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208038:sub_4035a6": null, "4208048:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208102:sub_4035e6": null, "4208112:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_islower(v3);\n
    v5 = v2;\n
    return v1 | cgc_isupper(v3);\n
}\n
", "4208178:sub_403632": null, "4208192:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_isalpha(v3);\n
    v5 = v2;\n
    return v1 | cgc_isdigit();\n
}\n
", "4208258:sub_403682": null, "4208272:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4208326:sub_4036c6": null, "4208336:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4208430:sub_40372e": null, "4208432:cgc_isnan": null, "4208455:sub_403747": null, "4208464:cgc_isinf": null, "4208511:sub_40377f": null, "4208512:cgc_cgcatof": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cgcatof(char *v13)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    char *v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x28], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x24], Other Possible Types: unsigned long\n
    unsigned int v7;  // [bp-0x20]\n
    void* v8;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v9;  // [bp-0x18]\n
    void* v10;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    char *v15;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
\n
    v12 = v14;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = v13;\n
    if (!v13)\n
    {\n
        v11 = 0;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v9 = 0;\n
        v8 = 0;\n
        v7 = 1069128089;\n
        v6 = 2576980378;\n
        for (v5 = 1; cgc_isspace(*(v13)); v13 += 1);\n
        v4 = 0;\n
        while (true)\n
        {\n
            if (!*(v13))\n
            {\n
LABEL_4039b2:\n
                v15 = v5;\n
                v3 = v15;\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t1,1] = t2\n
                [D] PutI(136:I8x8)[t1,1] = 0x01\n
                [D] PutI(136:I8x8)[t1,0] = 0x00\n
                v10 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
                [D] PutI(136:I8x8)[t26,0] = 0x00\n
                break;\n
            }\n
            else\n
            {\n
                v15 = *(v13);\n
                if (v15 == 45)\n
                {\n
                    if (!v4)\n
                    {\n
                        v5 = -1;\n
                        v4 += 1;\n
                        goto LABEL_40398b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 43)\n
                {\n
                    if (!v4)\n
                    {\n
                        v4 += 1;\n
                        goto LABEL_40398b;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                }\n
                v15 = *(v13);\n
                if (v15 == 46)\n
                {\n
                    if (v4 && v4 != 1)\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
                    v4 = 2;\n
                    goto LABEL_40398b;\n
                }\n
                v15 = cgc_isdigit(*(v13));\n
                if (!v15)\n
                    goto LABEL_4039b2;\n
                if (!v4)\n
                {\n
LABEL_403907:\n
                    v4 = 1;\n
                    v17 = v31 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v20 = v17 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v1 = *(v13) - 48;\n
                    v21 = v20 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v23 = v21 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    v25 = v23 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v27 = v25 - 1;\n
                        [D] PutI(72:F64x8)[t3,0] = t6\n
                        [D] PutI(136:I8x8)[t3,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,2] = t2\n
                    [D] PutI(136:I8x8)[t1,2] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v29 = v27 + 1;\n
                    [D] PutI(72:F64x8)[t21,1] = t22\n
                    [D] PutI(136:I8x8)[t21,1] = 0x01\n
                    [D] PutI(136:I8x8)[t21,0] = 0x00\n
                    v8 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
                    [D] PutI(136:I8x8)[t46,0] = 0x00\n
                    v31 = v29 + 1 + 1;\n
                    goto LABEL_40398b;\n
                }\n
                else\n
                {\n
                    if (v4 == 1)\n
                        goto LABEL_403907;\n
                    if (v4 == 2)\n
                    {\n
                        v2 = *(v13) - 48;\n
                        v19 = v31 - 1;\n
                        if (![D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v22 = v19 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v24 = v22 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v26 = v24 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        v28 = v26 - 1;\n
                        if ([D] GetI(136:I8x8)[t3,0])\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        else\n
                        {\n
                            v32 = v28 - 1;\n
                            [D] PutI(72:F64x8)[t3,0] = t6\n
                            [D] PutI(136:I8x8)[t3,0] = 0x01\n
                        }\n
                        [D] PutI(72:F64x8)[t9,0] = t13\n
                        [D] PutI(136:I8x8)[t9,0] = 0x01\n
                        [D] PutI(72:F64x8)[t9,2] = t6\n
                        [D] PutI(136:I8x8)[t9,2] = 0x01\n
                        [D] PutI(72:F64x8)[t24,1] = t25\n
                        [D] PutI(136:I8x8)[t24,1] = 0x01\n
                        [D] PutI(136:I8x8)[t24,0] = 0x00\n
                        v33 = v32 + 1;\n
                        [D] PutI(72:F64x8)[t44,1] = t45\n
                        [D] PutI(136:I8x8)[t44,1] = 0x01\n
                        [D] PutI(136:I8x8)[t44,0] = 0x00\n
                        v8 = ([D] GetI(136:I8x8)[t69,0] ? [D] GetI(72:F64x8)[t69,0] : nan);\n
                        [D] PutI(136:I8x8)[t69,0] = 0x00\n
                        v35 = v33 + 1 - 0;\n
                        [D] PutI(72:F64x8)[t78,0] = t81\n
                        [D] PutI(136:I8x8)[t78,0] = 0x01\n
                        v36 = v35 - 1;\n
                        [D] PutI(72:F64x8)[t90,0] = t93\n
                        [D] PutI(136:I8x8)[t90,0] = 0x01\n
                        [D] PutI(72:F64x8)[t101,1] = t102\n
                        [D] PutI(136:I8x8)[t101,1] = 0x01\n
                        [D] PutI(136:I8x8)[t101,0] = 0x00\n
                        v37 = v36 + 1;\n
                        v6 = ([D] GetI(136:I8x8)[t126,0] ? [D] GetI(72:F64x8)[t126,0] : nan);\n
                        [D] PutI(136:I8x8)[t126,0] = 0x00\n
                        v31 = v37 + 1;\n
                    }\n
                    else\n
                    {\n
                        v11 = 0;\n
                        v10 = 0;\n
                        break;\n
                    }\n
LABEL_40398b:\n
                    v13 += 1;\n
                }\n
            }\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v15;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v15;\n
}\n
", "4209100:sub_4039cc": null, "4209104:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v4 = 0;\n
    v3 = 1;\n
    for (v1 = 0; cgc_isspace(*(v6)); v6 += 1);\n
    for (v2 = 0; *(v6); v6 += 1)\n
    {\n
        if (*(v6) == 45)\n
        {\n
            if (!v2)\n
            {\n
                v3 = -1;\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            if (*(v6) != 43)\n
            {\n
                if (!cgc_isdigit(*(v6)))\n
                    break;\n
                if (v2 && v2 != 1)\n
                {\n
                    v5 = 0;\n
                    return v5;\n
                }\n
                v2 = 1;\n
                v4 = v4 * 10 + *(v6) - 48;\n
                v1 += 1;\n
                if (v1 == 10)\n
                    break;\n
            }\n
            else if (!v2)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5;\n
            }\n
        }\n
    }\n
    v5 = v4 * v3;\n
    return v5;\n
}\n
", "4209508:sub_403b64": null, "4209520:cgc_strcpy": "int cgc_strcpy(unsigned int v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0[a0]; v0 += 1)\n
    {\n
        v0[v1] = v0[a0];\n
    }\n
    v0[v1] = 0;\n
    return v1;\n
}\n
", "4209611:sub_403bcb": null, "4209616:cgc_strncpy": "int cgc_strncpy(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v1 < a1)\n
            v0 = *((a0 + v1));\n
        if (!(v0 & 1))\n
            break;\n
        *((v2 + v1)) = *((a0 + v1));\n
        v1 += 1;\n
    }\n
    for (; v1 < a1; v1 += 1)\n
    {\n
        *((v2 + v1)) = 0;\n
    }\n
    return v2;\n
}\n
", "4209771:sub_403c6b": null, "4209776:cgc_bzero": "int cgc_bzero(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v3 = v2;\n
    v0 = v3;\n
    if (!v2)\n
    {\n
        return v2;\n
    }\n
    else if (!a0)\n
    {\n
        return v2;\n
    }\n
    else\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            v3 = v1;\n
            if (v3 >= a0)\n
                break;\n
            v0[v1] = 0;\n
            v1 += 1;\n
        }\n
        return v1;\n
    }\n
}\n
", "4209884:sub_403cdc": null, "4209888:cgc_memset": "int cgc_memset(char *v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = v1;\n
    while (true)\n
    {\n
        a1 -= 1;\n
        if (!a1)\n
            break;\n
        v0[a1] = a0;\n
    }\n
    v0[a1] = a0;\n
    return v1;\n
}\n
", "4209966:sub_403d2e": null, "4209968:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(v2) == *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4210076:sub_403d9c": null, "4210080:cgc_strncat": "int cgc_strncat(char *v5, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = v5;\n
    v3 = cgc_strlen();\n
    if (v5 && a0)\n
    {\n
        v2 = 0;\n
        while (true)\n
        {\n
            v1 = 0;\n
            if (v2 < a1)\n
                v1 = a0[v2];\n
            if (!(v1 & 1))\n
                break;\n
            v5[v2 + v3] = a0[v2];\n
            v2 += 1;\n
        }\n
        v5[v2 + v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = v5;\n
    return v4;\n
}\n
", "4210275:sub_403e63": null, "4210288:cgc_strlen": "int cgc_strlen(unsigned int v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    if (!v1)\n
        return v0;\n
    for (v0 = 0; v0[v1]; v0 += 1);\n
    return v0;\n
}\n
", "4210365:sub_403ebd": null, "4210368:cgc_receive_until": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_receive_until(unsigned int v5, char a0, unsigned int a1)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x11]\n
    void* v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v4 >= a1)\n
            return v4;\n
        v4[v5] = 0;\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (!v3)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        if (v2 == a0)\n
            return v4;\n
        v4[v5] = v2;\n
        v4 += 1;\n
    }\n
}\n
", "4210582:sub_403f96": null, "4210592:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v1 = 0;\n
    if (v3 && a0)\n
    {\n
        for (v1 = cgc_strlen(v3); v2[a0]; v2 += 1)\n
        {\n
            v3[v1] = v2[a0];\n
            v1 += 1;\n
        }\n
        v2 = v1;\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4210751:sub_40403f": null, "4210752:cgc_itoa": "int cgc_itoa(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v2 = 0;\n
    v1 = 0;\n
    v0 = 0;\n
    if (!v3)\n
        return v2;\n
    v0 = a0;\n
    do\n
    {\n
        v1 += 1;\n
        v0 = (0 CONCAT v0) /m 10;\n
    } while (v0);\n
    if (v1 >= a1)\n
        return v2;\n
    v2 = v1;\n
    v1 -= 1;\n
    do\n
    {\n
        *((v3 + v1)) = ((0 CONCAT a0) /m 10 >> 32) + 48;\n
        a0 = (0 CONCAT a0) /m 10;\n
        v1 -= 1;\n
    } while (a0);\n
    *((v3 + v2)) = 0;\n
    return v2;\n
}\n
", "4210951:sub_404107": null, "4210960:cgc_puts": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: char\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!v5)\n
        return v5;\n
    v2 = cgc_strlen(v5);\n
    while (true)\n
    {\n
        v6 = v3;\n
        if (v6 >= v2)\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                if (v4 == 1)\n
                    return v6;\n
                v0 = &v4;\n
                v6 = cgc_transmit(1, v1 - 9039, 1);\n
                if (v6)\n
                    return v6;\n
            }\n
        }\n
        else\n
        {\n
            v0 = &v4;\n
            v6 = cgc_transmit(1, v5 + v3, v2 - v3);\n
            if (v6)\n
                return v6;\n
            v3 = *(&v4) + v3;\n
        }\n
    }\n
}\n
", "4211188:sub_4041f4": null, "4211200:cgc_strchr": "int cgc_strchr(char *v1, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    for (v0 = v2; *(v1); v1 += 1)\n
    {\n
        if (*(v1) == a0)\n
        {\n
            v0 = v1;\n
            return v0;\n
        }\n
    }\n
    if (*(v1) != a0)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1;\n
    return v0;\n
}\n
", "4211306:sub_40426a": null, "4211312:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[72];\n
    unsigned int field_48;\n
    unsigned int field_4c;\n
    unsigned int field_50;\n
    struct struct_1 *field_54;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v10, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    char *v1;  // [bp-0x2c]\n
    char *v2;  // [bp-0x28]\n
    char v3;  // [bp-0x21]\n
    struct_0 *v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    char *v6;  // [bp-0x18]\n
    char *v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x10]\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v11;  // edx\n
    struct_0 *v12;  // eax\n
    struct_0 *v13;  // ebx\n
    struct_0 *v14;  // eax\n
    struct_0 *v15;  // edx\n
    struct_0 *v16;  // edx\n
    struct_0 *v17;  // eax\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    if (v10)\n
    {\n
        if (v4->field_4c)\n
        {\n
            cgc_deallocate(v4->field_4c);\n
            v12 = v4;\n
            v12->field_4c = 0;\n
            v12->field_50 = 0;\n
            v12->field_54 = 0;\n
        }\n
    }\n
    else\n
    {\n
        if (!v4->field_4c)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v11 = v4;\n
        if (v11->field_54 >= v11->field_4c + v11->field_50)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
    }\n
    if (!v4->field_4c)\n
    {\n
        if (cgc_strlen(v10) > 0x1000)\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        v13 = v4;\n
        v13->field_50 = cgc_strlen(v10);\n
        v0 = &v13->field_4c;\n
        if (cgc_allocate(v13->field_50, 0))\n
        {\n
            v9 = 0;\n
            return v9;\n
        }\n
        cgc_strcpy(v4->field_4c, v10);\n
        v14 = v4;\n
        v14->field_54 = v14->field_4c;\n
    }\n
    v10 = &v4->field_54->field_0;\n
    while (true)\n
    {\n
        v3 = 0;\n
        if (cgc_strchr(a0, *(v10)))\n
        {\n
            v15 = v4;\n
            v3 = v10 < v15->field_4c + v15->field_50;\n
        }\n
        if (!(v3 & 1))\n
            break;\n
        v10 += 1;\n
    }\n
    v16 = v4;\n
    if (v10 >= v16->field_4c + v16->field_50)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = v10;\n
    v2 = v10;\n
    v7 = &v2[cgc_strlen(v10)];\n
    v5 = 0;\n
    while (true)\n
    {\n
        v1 = v5;\n
        if (v1 >= cgc_strlen(a0))\n
            break;\n
        v6 = cgc_strchr(v8, a0[v5]);\n
        if (v6 && v6 && v6 < v7)\n
            v7 = v6;\n
        v5 += 1;\n
    }\n
    v17 = v4;\n
    v17->field_48 = v8;\n
    *(v7) = 0;\n
    v17->field_54 = v7 + 1;\n
    v9 = v17->field_48;\n
    return v9;\n
}\n
", "4212059:sub_40455b": null, "4212064:cgc_write": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_write(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    while (true)\n
    {\n
        if (v2 >= a0)\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v0 = &v3;\n
        if (cgc_transmit(1, v5 + v2, a0 - v2))\n
        {\n
            v4 = v2;\n
            return v4;\n
        }\n
        v2 = *(&v3) + v2;\n
    }\n
}\n
", "4212229:sub_404605": null, "4212240:cgc_strdup": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(unsigned int v5)\n
{\n
    struct_0 *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = &v3;\n
    if (cgc_allocate(cgc_strlen(v5) + 1, 0))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v1 = *(&v3);\n
    cgc_bzero(v1, cgc_strlen(v5) + 1);\n
    cgc_strcpy(*(&v3), v5);\n
    v4 = *(&v3);\n
    return v4;\n
}\n
", "4212432:cgc_read_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(unsigned int v6, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    char v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a1 - 1; *((v6 + v7)) = v2)\n
    {\n
        v0 = &v3;\n
        if (cgc_receive(0, &v2, 1))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v3))\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, v2))\n
            break;\n
        v7 = v4;\n
        v4 = v7 + 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    v5 = v4;\n
    return v5;\n
}\n
", "4212657:sub_4047b1": null, "4212672:cgc_StoreTemp": null, "4212870:sub_404886": null, "4212880:cgc_read_temps": "extern unsigned int _GLOBAL_OFFSET_TABLE_[93];\n
\n
int cgc_read_temps(unsigned int v6)\n
{\n
    unsigned int v0[93];  // [bp-0x94]\n
    char v1;  // [bp-0x90]\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x1c], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x11]\n
\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    for (v2 = 0; v2 < v0[73]; v2 += 1)\n
    {\n
        for (v3 = 0; v3 < v0[92]; v3 += 1)\n
        {\n
            for (v4 = 0; v4 < v0[74]; v4 += 1)\n
            {\n
                if (cgc_read_until(&v1, &v0[24 + 28], 99) == -1)\n
                {\n
                    v5 = 255;\n
                    return v5;\n
                }\n
                else if (cgc_StoreTemp(v6, v4, v3, v2, &v1))\n
                {\n
                    cgc_puts(&v0[24 + 27] + 1);\n
                    v5 = 255;\n
                    return v5;\n
                }\n
            }\n
        }\n
    }\n
    cgc_flush_stdin();\n
    v5 = 0;\n
    return v5;\n
}\n
", "4213232:cgc_flush_stdin": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_flush_stdin()\n
{\n
    void* v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0xa4]\n
    struct_0 *v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x95]\n
    void* v4;  // [bp-0x94]\n
    void* v5;  // [bp-0x90]\n
    unsigned int v6;  // [bp-0x8c], Other Possible Types: char\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        for (v2 = 0; v2 < 32; v2 += 1)\n
        {\n
            *(&(&v6)[4 * v2]) = 0;\n
        }\n
        v6 = *(&v6) | 1;\n
        v4 = 0;\n
        v5 = 0;\n
        v0 = 0;\n
        if (cgc_fdwait(1, &v6, 0, &v4))\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
        else if (!(v6 & 1))\n
        {\n
            v7 = 0;\n
            return v7;\n
        }\n
        else if (cgc_receive(0, &v3, 1))\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
    }\n
}\n
", "4213558:sub_404b36": null, "4213568:cgc_kbhit": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_kbhit()\n
{\n
    void* v0;  // [bp-0xac]\n
    unsigned int v1;  // [bp-0xa4]\n
    struct_0 *v2;  // [bp-0xa0], Other Possible Types: unsigned int\n
    char v3;  // [bp-0x95]\n
    unsigned int v4;  // [bp-0x94]\n
    void* v5;  // [bp-0x90]\n
    char v6;  // [bp-0x8c], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        for (v2 = 0; v2 < 32; v2 += 1)\n
        {\n
            *(&(&v6)[4 * v2]) = 0;\n
        }\n
        v6 = *(&v6) | 1;\n
        v4 = 1;\n
        v5 = 0;\n
        v0 = 0;\n
        if (cgc_fdwait(1, &v6, 0, &v4))\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
    } while (!(v6 & 1));\n
    if (cgc_receive(0, &v3, 1))\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4213889:sub_404c81": null, "4213904:cgc_ValidStr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ValidStr(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    while (true)\n
    {\n
        if (!*(v2))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (cgc_strchr(a0, *(v2)))\n
        {\n
            v2 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4214024:sub_404d08": null, "4214032:cgc_ParseDimensions": "typedef struct struct_0 {\n
    char padding_0[296];\n
    unsigned int field_128;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[368];\n
    unsigned int field_170;\n
} struct_1;\n
\n
int cgc_ParseDimensions(char *v7)\n
{\n
    char v0;  // [bp-0x2c]\n
    char *v1;  // [bp-0x28]\n
    char *v2;  // [bp-0x24]\n
    char *v3;  // [bp-0x20], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x1a]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
    struct_0 *v9;  // ebx\n
    struct_1 *v10;  // ebx\n
\n
    v6 = v8;\n
    strncpy(&v0, \"0123456789,. \", 13);\n
    v3 = v7;\n
    if (!cgc_ValidStr(v7, &v4))\n
    {\n
        cgc_puts(*(&v0) - 8966);\n
        v5 = -1;\n
        return v5;\n
    }\n
    v3 = cgc_strtok(v7, *(&v0) - 8933);\n
    if (!v3)\n
    {\n
        cgc_puts(*(&v0) - 8931);\n
        v5 = -1;\n
        return v5;\n
    }\n
    v9 = *(&v0);\n
    v9->field_128 = cgc_atoi(v3);\n
    v2 = cgc_strtok(NULL, &v9[29].padding_0[233]);\n
    if (!v2)\n
    {\n
        cgc_puts(*(&v0) - 8910);\n
        v5 = -1;\n
        return v5;\n
    }\n
    v10 = *(&v0);\n
    v10->field_170 = cgc_atoi(v2);\n
    v1 = cgc_strtok(NULL, &v10[24].padding_0[5]);\n
    if (!v1)\n
    {\n
        cgc_puts(*(&v0) - 8889);\n
        v5 = -1;\n
        return v5;\n
    }\n
    *((*(&v0) + 292)) = cgc_atoi(v1);\n
    v5 = 0;\n
    return v5;\n
}\n
", "4214439:sub_404ea7": null, "4214448:cgc_InitAir": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* cgc_HC;\n
extern void* cgc_TC;\n
extern unsigned int g_40a4ac;\n
extern void* g_40a4b0;\n
extern unsigned int g_40a4b4;\n
extern unsigned int g_40a4b8;\n
extern unsigned int g_40a4bc;\n
extern unsigned int g_40a4c0;\n
extern unsigned int g_40a4c4;\n
extern unsigned int g_40a4c8;\n
extern unsigned int g_40a4cc;\n
extern unsigned int g_40a4d0;\n
extern unsigned int g_40a4d4;\n
extern unsigned int g_40a4d8;\n
extern unsigned int g_40a4dc;\n
extern unsigned int g_40a4e0;\n
extern unsigned int g_40a4e4;\n
extern void* g_40a4f4;\n
extern unsigned int g_40a4f8;\n
extern unsigned int g_40a4fc;\n
extern unsigned int g_40a500;\n
extern unsigned int g_40a504;\n
extern unsigned int g_40a508;\n
extern unsigned int g_40a50c;\n
extern unsigned int g_40a510;\n
extern unsigned int g_40a514;\n
extern unsigned int g_40a518;\n
extern unsigned int g_40a51c;\n
extern unsigned int g_40a520;\n
extern unsigned int g_40a524;\n
extern unsigned int g_40a528;\n
extern unsigned int g_40a52c;\n
\n
int cgc_InitAir()\n
{\n
    g_40a4f4 = 0;\n
    cgc_TC = 0;\n
    g_40a4fc = 1065188799;\n
    g_40a4f8 = 1216334738;\n
    g_40a504 = 1066426957;\n
    g_40a500 = 3539053052;\n
    g_40a50c = 1066983961;\n
    g_40a508 = 1697371075;\n
    g_40a514 = 1067171866;\n
    g_40a510 = 920840988;\n
    g_40a51c = 1067509088;\n
    g_40a518 = 1099511628;\n
    g_40a524 = 1067710414;\n
    g_40a520 = 3642132267;\n
    g_40a52c = 1067925163;\n
    g_40a528 = 913969041;\n
    g_40a4ac = 0x40add600;\n
    cgc_HC = 0;\n
    g_40a4b4 = 0x40a66200;\n
    g_40a4b0 = 0;\n
    g_40a4bc = 1084176199;\n
    g_40a4b8 = 2920577761;\n
    g_40a4c4 = 1083549306;\n
    g_40a4c0 = 261134011;\n
    g_40a4cc = 1083261754;\n
    g_40a4c8 = -0x4816f00;\n
    g_40a4d4 = 1082939011;\n
    g_40a4d0 = 309237646;\n
    g_40a4dc = 1082636476;\n
    g_40a4d8 = 1786706395;\n
    g_40a4e4 = 1082382985;\n
    g_40a4e0 = 2686931540;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4214785:sub_405001": null, "4214800:cgc_InitAluminum": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_HC;\n
extern void* cgc_TC;\n
extern unsigned int g_40a4ac;\n
extern void* g_40a4b0;\n
extern unsigned int g_40a4b4;\n
extern void* g_40a4b8;\n
extern unsigned int g_40a4bc;\n
extern char g_40a4c0;\n
extern unsigned int g_40a4c4;\n
extern unsigned int g_40a4c8;\n
extern char g_40a4cc;\n
extern void* g_40a4d0;\n
extern unsigned int g_40a4d4;\n
extern unsigned int g_40a4d8;\n
extern char g_40a4dc;\n
extern void* g_40a4e0;\n
extern unsigned int g_40a4e4;\n
extern unsigned int g_40a4f4;\n
extern void* g_40a4f8;\n
extern unsigned int g_40a4fc;\n
extern void* g_40a500;\n
extern unsigned int g_40a504;\n
extern void* g_40a508;\n
extern unsigned int g_40a50c;\n
extern void* g_40a510;\n
extern unsigned int g_40a514;\n
extern void* g_40a518;\n
extern unsigned int g_40a51c;\n
extern void* g_40a520;\n
extern unsigned int g_40a524;\n
extern void* g_40a528;\n
extern unsigned int g_40a52c;\n
\n
int cgc_InitAluminum()\n
{\n
    g_40a4f4 = 0x40b00e00;\n
    cgc_TC = 0;\n
    g_40a4fc = 0x407b0000;\n
    g_40a4f8 = 0;\n
    g_40a504 = 0x406f0000;\n
    g_40a500 = 0;\n
    g_40a50c = 0x406d6000;\n
    g_40a508 = 0;\n
    g_40a514 = 0x406dc000;\n
    g_40a510 = 0;\n
    g_40a51c = 0x406e0000;\n
    g_40a518 = 0;\n
    g_40a524 = 0x406d8000;\n
    g_40a520 = 0;\n
    g_40a52c = 0x406d4000;\n
    g_40a528 = 0;\n
    g_40a4ac = 1080095539;\n
    cgc_HC = 858993459;\n
    g_40a4b4 = 1093700992;\n
    g_40a4b0 = 0;\n
    g_40a4bc = 1094514592;\n
    g_40a4b8 = 0;\n
    g_40a4c4 = 1094827402;\n
    strncpy(&g_40a4c0, \"ffff\", 4);\n
    strncpy(&g_40a4cc, \"M\\x0cCA\", 4);\n
    g_40a4c8 = 2576980378;\n
    g_40a4d4 = 1094960426;\n
    g_40a4d0 = 0;\n
    strncpy(&g_40a4dc, \"\\\\`DA\", 4);\n
    g_40a4d8 = 3435973837;\n
    g_40a4e4 = 0x41453000;\n
    g_40a4e0 = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4215137:sub_405161": null, "4215152:cgc_InitCopper": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_HC;\n
extern void* cgc_TC;\n
extern unsigned int g_40a4ac;\n
extern void* g_40a4b0;\n
extern unsigned int g_40a4b4;\n
extern void* g_40a4b8;\n
extern unsigned int g_40a4bc;\n
extern void* g_40a4c0;\n
extern unsigned int g_40a4c4;\n
extern void* g_40a4c8;\n
extern unsigned int g_40a4cc;\n
extern void* g_40a4d0;\n
extern unsigned int g_40a4d4;\n
extern void* g_40a4d8;\n
extern unsigned int g_40a4dc;\n
extern void* g_40a4e0;\n
extern char g_40a4e4;\n
extern unsigned int g_40a4f4;\n
extern void* g_40a4f8;\n
extern unsigned int g_40a4fc;\n
extern void* g_40a500;\n
extern unsigned int g_40a504;\n
extern void* g_40a508;\n
extern unsigned int g_40a50c;\n
extern void* g_40a510;\n
extern unsigned int g_40a514;\n
extern void* g_40a518;\n
extern unsigned int g_40a51c;\n
extern void* g_40a520;\n
extern unsigned int g_40a524;\n
extern void* g_40a528;\n
extern unsigned int g_40a52c;\n
\n
int cgc_InitCopper()\n
{\n
    g_40a4f4 = 0x40d85100;\n
    cgc_TC = 0;\n
    g_40a4fc = 0x40816800;\n
    g_40a4f8 = 0;\n
    g_40a504 = 0x407ac000;\n
    g_40a500 = 0;\n
    g_40a50c = 0x40796000;\n
    g_40a508 = 0;\n
    g_40a514 = 0x4078f000;\n
    g_40a510 = 0;\n
    g_40a51c = 0x40789000;\n
    g_40a518 = 0;\n
    g_40a524 = 0x40784000;\n
    g_40a520 = 0;\n
    g_40a52c = 0x4077e000;\n
    g_40a528 = 0;\n
    g_40a4ac = 1080083251;\n
    cgc_HC = 858993459;\n
    g_40a4b4 = 1094916368;\n
    g_40a4b0 = 0;\n
    g_40a4bc = 1095229268;\n
    g_40a4b8 = 0;\n
    g_40a4c4 = 1095336995;\n
    g_40a4c0 = 0;\n
    g_40a4cc = 1095410750;\n
    g_40a4c8 = 0;\n
    g_40a4d4 = 1095446510;\n
    g_40a4d0 = 0;\n
    g_40a4dc = 1095469307;\n
    g_40a4d8 = 0;\n
    strncpy(&g_40a4e4, \"!&LA\", 4);\n
    g_40a4e0 = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4215489:sub_4052c1": null, "4215504:cgc_SetTC": null, "4215569:sub_405311": null, "4215584:cgc_SetHC": null, "4215649:sub_405361": null, "4215664:cgc_InitCustom": null, "4217443:sub_405a63": null, "4217456:cgc_AllocateGrid": "int cgc_AllocateGrid(unsigned int *v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v3;  // eax\n
\n
    v0 = a2 * a1 * a0 * 8;\n
    v3 = cgc_calloc(v0, 1);\n
    *(v2) = v3;\n
    if (!v3)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4217565:sub_405add": null, "4217568:cgc_InitMaterial": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitMaterial()\n
{\n
    unsigned int v0;  // [bp-0xd0]\n
    char v1;  // [bp-0xc9]\n
    unsigned int v2;  // [bp-0xc8]\n
    char v3;  // [bp-0x91]\n
    char v4;  // [bp-0x74]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v37;  // ebx\n
\n
    v6 = v37;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    cgc_puts(\"For what material would you like to run this simulation?\");\n
    cgc_puts(v2 - 8432);\n
    cgc_puts(v2 - 8423);\n
    cgc_puts(v2 - 8409);\n
    cgc_puts(v2 - 8397);\n
    while (true)\n
    {\n
        v1 = 1;\n
        if (v3 >= 1)\n
            v1 = !(v3 <= 4);\n
        if (!(v1 & 1))\n
        {\n
            v0 = v3 - 1;\n
            if (v0 > 3)\n
            {\n
                v5 = -1;\n
                return;\n
            }\n
            goto *(((stack_base)[200] + (stack_base)[208] * 4 - 8996)) + (stack_base)[200];\n
        }\n
        else\n
        {\n
            cgc_printf(v2 - 8385);\n
            if (cgc_read_until(&v4, v2 - 9039, 99) == -1)\n
            {\n
                v5 = -1;\n
                return;\n
            }\n
            v3 = cgc_atoi(&v4);\n
        }\n
    }\n
}\n
", "4220108:sub_4064cc": null, "4220112:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern void* cgc_HGrid;\n
extern void* cgc_TGrid;\n
extern void* cgc_X;\n
extern void* cgc_Y;\n
extern void* cgc_Z;\n
\n
int main(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    cgc_TGrid = 0;\n
    cgc_HGrid = 0;\n
    cgc_X = 0;\n
    cgc_Y = 0;\n
    cgc_Z = 0;\n
    if (cgc_InitMaterial())\n
        cgc__terminate();\n
    if (cgc_GetSimLength())\n
        cgc__terminate();\n
    cgc_GraphTemps();\n
    cgc_printf(v0 - 7843);\n
    cgc_kbhit();\n
    cgc_RunSim();\n
    cgc_GraphTemps();\n
    v5 = v2;\n
    return 0;\n
}\n
", "4220359:sub_4065c7": null, "4220368:cgc_pGRID": "extern unsigned int cgc_X;\n
extern unsigned int cgc_Y;\n
\n
int cgc_pGRID(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    return v0 + a0 * 8 + cgc_X * a1 * 8 + cgc_Y * cgc_X * a2 * 8;\n
}\n
", "4220453:sub_406625": null, "4220464:cgc_GetSimLength": "typedef struct struct_0 {\n
    char padding_0[380];\n
    unsigned long long field_17c;\n
} struct_0;\n
\n
extern void* SIM_TIME;\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* g_40a544;\n
\n
int cgc_GetSimLength()\n
{\n
    struct_0 *v0;  // [bp-0x74]\n
    char v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v5;  // ftop\n
    unsigned int v6;  // ftop\n
    unsigned int v7;  // ftop\n
    unsigned int v9;  // ftop\n
    struct_0 *v10;  // eax\n
    unsigned int v11;  // ftop\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    g_40a544 = 0;\n
    SIM_TIME = 0;\n
    while (true)\n
    {\n
        v5 = v11 - 1;\n
        if (![D] GetI(136:I8x8)[t7,0])\n
        {\n
            v6 = v5 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v6 = v5 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v7 = v6 - 1;\n
        [D] PutI(72:F64x8)[t0,0] = t3\n
        [D] PutI(136:I8x8)[t0,0] = 0x01\n
        [D] PutI(136:I8x8)[t15,0] = 0x00\n
        [D] PutI(72:F64x8)[t29,0] = t30\n
        [D] PutI(136:I8x8)[t29,0] = 0x01\n
        [D] PutI(136:I8x8)[t29,0] = 0x00\n
        v9 = v7 + 1 + 1;\n
        if ((CmpF(([D] GetI(136:I8x8)[t15,0] ? [D] GetI(72:F64x8)[t15,0] : nan), ([D] GetI(136:I8x8)[t15,1] ? [D] GetI(72:F64x8)[t15,1] : nan)) & 1) == 1)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        cgc_printf(&v0[19].padding_0[356]);\n
        if (cgc_read_until(&v1, &v0[23].padding_0[23], 99) == -1)\n
        {\n
            v2 = -1;\n
            return v2;\n
        }\n
        cgc_cgcatof(&v1);\n
        v10 = v0;\n
        if ([D] GetI(136:I8x8)[t7,0])\n
        {\n
            *(&(&v10->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
            v11 = v9 + 1;\n
        }\n
        else\n
        {\n
            *(&(&v10->padding_0)[1]) = nan;\n
            [D] PutI(136:I8x8)[t6,0] = 0x00\n
            v11 = v9 + 1;\n
        }\n
    }\n
}\n
", "4220653:sub_4066ed": null, "4220656:cgc_L": "extern unsigned int _GLOBAL_OFFSET_TABLE_[94];\n
extern unsigned int cgc_X;\n
\n
int cgc_L(unsigned int v15, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0[94];  // [bp-0x44]\n
    unsigned short v1;  // [bp-0x40]\n
    unsigned short v2;  // [bp-0x3e]\n
    unsigned short v3;  // [bp-0x3c]\n
    unsigned short v4;  // [bp-0x3a]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x30]\n
    unsigned long v8;  // [bp-0x2c]\n
    unsigned long v9;  // [bp-0x24]\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned long\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // eax\n
\n
    v14 = v16;\n
    v13 = v17;\n
    v12 = v18;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v19 = v15;\n
    if (v19 >= cgc_X)\n
    {\n
LABEL_40674a:\n
        v11 = 0xbff00000;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v19 = a0;\n
        if (!(v19 < v0[92]))\n
            goto LABEL_40674a;\n
        v19 = a1;\n
        if (!(v19 < v0[73]))\n
            goto LABEL_40674a;\n
        cgc_pGRID(v0[93], v15, a0, a1);\n
        [D] PutI(72:F64x8)[t46,0] = t49\n
        [D] PutI(136:I8x8)[t46,0] = 0x01\n
        v9 = ([D] GetI(136:I8x8)[t61,0] ? [D] GetI(72:F64x8)[t61,0] : nan);\n
        [D] PutI(136:I8x8)[t61,0] = 0x00\n
        [D] PutI(72:F64x8)[t70,0] = t73\n
        [D] PutI(136:I8x8)[t70,0] = 0x01\n
        [D] PutI(72:F64x8)[t82,0] = t85\n
        [D] PutI(136:I8x8)[t82,0] = 0x01\n
        [D] PutI(72:F64x8)[t92,1] = t93\n
        [D] PutI(136:I8x8)[t92,1] = 0x01\n
        v4 = [D] x86g_create_fpucw(fpround<4>);\n
        v3 = v4 | 0xc00;\n
        [D] PutI(72:F64x8)[t132,0] = t136\n
        [D] PutI(136:I8x8)[t132,0] = 0x01\n
        [D] PutI(72:F64x8)[t132,1] = t129\n
        [D] PutI(136:I8x8)[t132,1] = 0x01\n
        v5 = ([D] GetI(136:I8x8)[t153,0] ? [D] GetI(72:F64x8)[t153,0] : nan);\n
        [D] PutI(136:I8x8)[t153,0] = 0x00\n
        v7 = v5;\n
        [D] PutI(72:F64x8)[t178,0] = t181\n
        [D] PutI(136:I8x8)[t178,0] = 0x01\n
        [D] PutI(72:F64x8)[t188,1] = t189\n
        [D] PutI(136:I8x8)[t188,1] = 0x01\n
        [D] PutI(136:I8x8)[t188,0] = 0x00\n
        v2 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-58, size=2, endness=Iend_LE)))));\n
        v1 = v2 | 0xc00;\n
        v6 = ([D] GetI(136:I8x8)[t234,0] ? [D] GetI(72:F64x8)[t234,0] : nan);\n
        [D] PutI(136:I8x8)[t234,0] = 0x00\n
        v19 = &v0[75];\n
        [D] PutI(72:F64x8)[t260,0] = t263\n
        [D] PutI(136:I8x8)[t260,0] = 0x01\n
        v8 = ([D] GetI(136:I8x8)[t275,0] ? [D] GetI(72:F64x8)[t275,0] : nan);\n
        [D] PutI(136:I8x8)[t275,0] = 0x00\n
        [D] PutI(72:F64x8)[t284,0] = t287\n
        [D] PutI(136:I8x8)[t284,0] = 0x01\n
        v10 = ([D] GetI(136:I8x8)[t299,0] ? [D] GetI(72:F64x8)[t299,0] : nan);\n
        [D] PutI(136:I8x8)[t299,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    return v19;\n
}\n
", "4220921:sub_4067f9": null, "4220928:cgc_C": "extern unsigned int _GLOBAL_OFFSET_TABLE_[94];\n
extern unsigned int cgc_X;\n
\n
int cgc_C(unsigned int v15, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0[94];  // [bp-0x44]\n
    unsigned short v1;  // [bp-0x40]\n
    unsigned short v2;  // [bp-0x3e]\n
    unsigned short v3;  // [bp-0x3c]\n
    unsigned short v4;  // [bp-0x3a]\n
    unsigned int v5;  // [bp-0x38]\n
    unsigned int v6;  // [bp-0x34]\n
    unsigned int v7;  // [bp-0x30]\n
    unsigned long v8;  // [bp-0x2c]\n
    unsigned long v9;  // [bp-0x24]\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned long\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x10]\n
    unsigned int v13;  // [bp-0xc]\n
    unsigned int v14;  // [bp-0x8]\n
    unsigned int v16;  // ebx\n
    unsigned int v17;  // edi\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // eax\n
\n
    v14 = v16;\n
    v13 = v17;\n
    v12 = v18;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v19 = v15;\n
    if (v19 >= cgc_X)\n
    {\n
LABEL_40685a:\n
        v11 = 0xbff00000;\n
        v10 = 0;\n
    }\n
    else\n
    {\n
        v19 = a0;\n
        if (!(v19 < v0[92]))\n
            goto LABEL_40685a;\n
        v19 = a1;\n
        if (!(v19 < v0[73]))\n
            goto LABEL_40685a;\n
        cgc_pGRID(v0[93], v15, a0, a1);\n
        [D] PutI(72:F64x8)[t46,0] = t49\n
        [D] PutI(136:I8x8)[t46,0] = 0x01\n
        v9 = ([D] GetI(136:I8x8)[t61,0] ? [D] GetI(72:F64x8)[t61,0] : nan);\n
        [D] PutI(136:I8x8)[t61,0] = 0x00\n
        [D] PutI(72:F64x8)[t70,0] = t73\n
        [D] PutI(136:I8x8)[t70,0] = 0x01\n
        [D] PutI(72:F64x8)[t82,0] = t85\n
        [D] PutI(136:I8x8)[t82,0] = 0x01\n
        [D] PutI(72:F64x8)[t92,1] = t93\n
        [D] PutI(136:I8x8)[t92,1] = 0x01\n
        v4 = [D] x86g_create_fpucw(fpround<4>);\n
        v3 = v4 | 0xc00;\n
        [D] PutI(72:F64x8)[t132,0] = t136\n
        [D] PutI(136:I8x8)[t132,0] = 0x01\n
        [D] PutI(72:F64x8)[t132,1] = t129\n
        [D] PutI(136:I8x8)[t132,1] = 0x01\n
        v5 = ([D] GetI(136:I8x8)[t153,0] ? [D] GetI(72:F64x8)[t153,0] : nan);\n
        [D] PutI(136:I8x8)[t153,0] = 0x00\n
        v7 = v5;\n
        [D] PutI(72:F64x8)[t178,0] = t181\n
        [D] PutI(136:I8x8)[t178,0] = 0x01\n
        [D] PutI(72:F64x8)[t188,1] = t189\n
        [D] PutI(136:I8x8)[t188,1] = 0x01\n
        [D] PutI(136:I8x8)[t188,0] = 0x00\n
        v2 = [D] x86g_create_fpucw(Conv(64->32, [D] x86g_check_fldcw(Conv(16->32, Load(addr=stack_base-58, size=2, endness=Iend_LE)))));\n
        v1 = v2 | 0xc00;\n
        v6 = ([D] GetI(136:I8x8)[t234,0] ? [D] GetI(72:F64x8)[t234,0] : nan);\n
        [D] PutI(136:I8x8)[t234,0] = 0x00\n
        v19 = &v0[57];\n
        [D] PutI(72:F64x8)[t260,0] = t263\n
        [D] PutI(136:I8x8)[t260,0] = 0x01\n
        v8 = ([D] GetI(136:I8x8)[t275,0] ? [D] GetI(72:F64x8)[t275,0] : nan);\n
        [D] PutI(136:I8x8)[t275,0] = 0x00\n
        [D] PutI(72:F64x8)[t284,0] = t287\n
        [D] PutI(136:I8x8)[t284,0] = 0x01\n
        v10 = ([D] GetI(136:I8x8)[t299,0] ? [D] GetI(72:F64x8)[t299,0] : nan);\n
        [D] PutI(136:I8x8)[t299,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    return v19;\n
}\n
", "4221193:sub_406909": null, "4221200:cgc_K": "extern unsigned int _GLOBAL_OFFSET_TABLE_[93];\n
\n
int cgc_K(unsigned int v6, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned long v0;  // [bp-0x28]\n
    unsigned long v1;  // [bp-0x20]\n
    unsigned int v2[93];  // [bp-0x18]\n
    unsigned long v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // eax\n
\n
    v5 = v7;\n
    v4 = v8;\n
    v2[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (a2 == -1 && !v6)\n
        goto LABEL_4069f0;\n
    if (a2 == 1 && v6 == v2[74] - 1)\n
        goto LABEL_4069f0;\n
    if (a3 == -1 && !a0)\n
        goto LABEL_4069f0;\n
    if (a3 == 1 && a0 == v2[92] - 1)\n
        goto LABEL_4069f0;\n
    if (a4 == -1 && !a1)\n
        goto LABEL_4069f0;\n
    if (a4 != 1)\n
    {\n
LABEL_406a1b:\n
        cgc_L(v6, a0, a1);\n
        [D] PutI(72:F64x8)[t25,0] = t26\n
        [D] PutI(136:I8x8)[t25,0] = 0x01\n
        [D] PutI(72:F64x8)[t42,0] = t45\n
        [D] PutI(136:I8x8)[t42,0] = 0x01\n
        v1 = ([D] GetI(136:I8x8)[t57,0] ? [D] GetI(72:F64x8)[t57,0] : nan);\n
        [D] PutI(72:F64x8)[t61,1] = t62\n
        [D] PutI(136:I8x8)[t61,1] = 0x01\n
        [D] PutI(136:I8x8)[t61,0] = 0x00\n
        v0 = ([D] GetI(136:I8x8)[t86,0] ? [D] GetI(72:F64x8)[t86,0] : nan);\n
        [D] PutI(136:I8x8)[t86,0] = 0x00\n
        v9 = cgc_L(v6 + a2, a0 + a3, a1 + a4);\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t6,0] = t10\n
        [D] PutI(136:I8x8)[t6,0] = 0x01\n
        [D] PutI(72:F64x8)[t6,2] = t3\n
        [D] PutI(136:I8x8)[t6,2] = 0x01\n
        [D] PutI(72:F64x8)[t21,0] = t22\n
        [D] PutI(136:I8x8)[t21,0] = 0x01\n
        [D] PutI(72:F64x8)[t38,0] = t39\n
        [D] PutI(136:I8x8)[t38,0] = 0x01\n
        [D] PutI(72:F64x8)[t55,1] = t56\n
        [D] PutI(136:I8x8)[t55,1] = 0x01\n
        [D] PutI(136:I8x8)[t55,0] = 0x00\n
        [D] PutI(72:F64x8)[t75,1] = t76\n
        [D] PutI(136:I8x8)[t75,1] = 0x01\n
        [D] PutI(136:I8x8)[t75,0] = 0x00\n
        v3 = ([D] GetI(136:I8x8)[t100,0] ? [D] GetI(72:F64x8)[t100,0] : nan);\n
        [D] PutI(136:I8x8)[t100,0] = 0x00\n
    }\n
    else\n
    {\n
        if (!(a1 == v2[73] - 1))\n
            goto LABEL_406a1b;\n
LABEL_4069f0:\n
        v9 = cgc_L(v6, a0, a1);\n
        [D] PutI(72:F64x8)[t1,0] = t2\n
        [D] PutI(136:I8x8)[t1,0] = 0x01\n
        [D] PutI(72:F64x8)[t18,0] = t21\n
        [D] PutI(136:I8x8)[t18,0] = 0x01\n
        [D] PutI(72:F64x8)[t28,1] = t29\n
        [D] PutI(136:I8x8)[t28,1] = 0x01\n
        [D] PutI(72:F64x8)[t45,1] = t46\n
        [D] PutI(136:I8x8)[t45,1] = 0x01\n
        [D] PutI(136:I8x8)[t45,0] = 0x00\n
        v3 = ([D] GetI(136:I8x8)[t70,0] ? [D] GetI(72:F64x8)[t70,0] : nan);\n
        [D] PutI(136:I8x8)[t70,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    return v9;\n
}\n
", "4221577:sub_406a89": null, "4221584:cgc_H": null, "4222525:sub_406e3d": null, "4222528:cgc_Tnew": "extern unsigned int _GLOBAL_OFFSET_TABLE_[94];\n
extern unsigned int cgc_HGrid;\n
\n
int cgc_Tnew(unsigned int v8, unsigned int a0, unsigned int a1)\n
{\n
    unsigned long v0;  // [bp-0x38]\n
    unsigned long v1;  // [bp-0x30]\n
    unsigned long v2;  // [bp-0x28]\n
    unsigned int v3[94];  // [bp-0x20]\n
    unsigned long v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // edi\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // eax\n
\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = v11;\n
    v3[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    if (!cgc_HGrid)\n
    {\n
LABEL_406eb2:\n
        cgc_pGRID(v3[93], v8, a0, a1);\n
        [D] PutI(72:F64x8)[t15,0] = t18\n
        [D] PutI(136:I8x8)[t15,0] = 0x01\n
        v1 = ([D] GetI(136:I8x8)[t30,0] ? [D] GetI(72:F64x8)[t30,0] : nan);\n
        [D] PutI(136:I8x8)[t30,0] = 0x00\n
        [D] PutI(72:F64x8)[t39,0] = t42\n
        [D] PutI(136:I8x8)[t39,0] = 0x01\n
        v0 = ([D] GetI(136:I8x8)[t54,0] ? [D] GetI(72:F64x8)[t54,0] : nan);\n
        [D] PutI(136:I8x8)[t54,0] = 0x00\n
        cgc_C(v8, a0, a1);\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t8,1] = t9\n
        [D] PutI(136:I8x8)[t8,1] = 0x01\n
        [D] PutI(136:I8x8)[t8,0] = 0x00\n
        v2 = ([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan);\n
        [D] PutI(136:I8x8)[t33,0] = 0x00\n
        v12 = cgc_H(v8, a0, a1);\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t1,2] = t2\n
        [D] PutI(136:I8x8)[t1,2] = 0x01\n
        [D] PutI(136:I8x8)[t1,0] = 0x00\n
        [D] PutI(72:F64x8)[t21,1] = t22\n
        [D] PutI(136:I8x8)[t21,1] = 0x01\n
        [D] PutI(136:I8x8)[t21,0] = 0x00\n
        v4 = ([D] GetI(136:I8x8)[t46,0] ? [D] GetI(72:F64x8)[t46,0] : nan);\n
        [D] PutI(136:I8x8)[t46,0] = 0x00\n
    }\n
    else\n
    {\n
        cgc_pGRID(v3[91], v8, a0, a1);\n
        [D] PutI(72:F64x8)[t7,0] = t10\n
        [D] PutI(136:I8x8)[t7,0] = 0x01\n
        [D] PutI(72:F64x8)[t19,0] = t22\n
        [D] PutI(136:I8x8)[t19,0] = 0x01\n
        [D] PutI(136:I8x8)[t34,0] = 0x00\n
        [D] PutI(72:F64x8)[t48,0] = t49\n
        [D] PutI(136:I8x8)[t48,0] = 0x01\n
        [D] PutI(136:I8x8)[t48,0] = 0x00\n
        if (!((CmpF(([D] GetI(136:I8x8)[t34,0] ? [D] GetI(72:F64x8)[t34,0] : nan), ([D] GetI(136:I8x8)[t34,1] ? [D] GetI(72:F64x8)[t34,1] : nan)) & 69 & 1) == 1))\n
            goto LABEL_406eb2;\n
        v12 = cgc_pGRID(v3[91], v8, a0, a1);\n
        [D] PutI(72:F64x8)[t2,0] = t5\n
        [D] PutI(136:I8x8)[t2,0] = 0x01\n
        v4 = ([D] GetI(136:I8x8)[t17,0] ? [D] GetI(72:F64x8)[t17,0] : nan);\n
        [D] PutI(136:I8x8)[t17,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    return v12;\n
}\n
", "4222828:sub_406f6c": null, "4222832:cgc_CalcTimeStep": null, "4223496:sub_407208": null, "4223504:cgc_SimStep": null, "4223861:sub_407375": null, "4223872:cgc_IncrementTimestep": "int cgc_IncrementTimestep(unsigned long long *v0)\n
{\n
    if ([D] GetI(136:I8x8)[t15,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t10,0] = t13\n
    [D] PutI(136:I8x8)[t10,0] = 0x01\n
    [D] PutI(72:F64x8)[t20,1] = t21\n
    [D] PutI(136:I8x8)[t20,1] = 0x01\n
    [D] PutI(136:I8x8)[t20,0] = 0x00\n
    *(v0) = ([D] GetI(136:I8x8)[t43,0] ? [D] GetI(72:F64x8)[t43,0] : nan);\n
    [D] PutI(136:I8x8)[t43,0] = 0x00\n
    return v0;\n
}\n
", "4223907:sub_4073a3": null, "4223920:cgc_RunSim": null, "4224111:sub_40746f": null, "4224112:cgc_output_str": "int cgc_output_str(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned long v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t5,0] = t8\n
        [D] PutI(136:I8x8)[t5,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t5,0] = t8\n
        [D] PutI(136:I8x8)[t5,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t4,1] = t5\n
    [D] PutI(136:I8x8)[t4,1] = 0x01\n
    [D] PutI(136:I8x8)[t4,0] = 0x00\n
    v1 = a1;\n
    v0 = ([D] GetI(136:I8x8)[t34,0] ? [D] GetI(72:F64x8)[t34,0] : nan);\n
    [D] PutI(136:I8x8)[t34,0] = 0x00\n
    return cgc_float_to_str();\n
}\n
", "4224191:sub_4074bf": null, "4224192:cgc_TGridAverage": "extern unsigned int _GLOBAL_OFFSET_TABLE_[93];\n
extern unsigned int cgc_X;\n
\n
int cgc_TGridAverage(unsigned int v10, unsigned long long *a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    unsigned int v1;  // [bp-0x6c]\n
    unsigned int v2[93];  // [bp-0x68]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned long\n
    void* v6;  // [bp-0x18]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned long\n
    void* v8;  // [bp-0x10]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
\n
    v9 = v11;\n
    v2[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    if (a1 + a3 <= cgc_X)\n
        v1 = a3;\n
    else\n
        v1 = v2[74] - a1;\n
    a3 = v1;\n
    if (a2 + a4 <= v2[92])\n
        v0 = a4;\n
    else\n
        v0 = v2[92] - a2;\n
    a4 = v0;\n
    for (v4 = a1; v4 < a1 + a3; v4 += 1)\n
    {\n
        for (v3 = a2; v3 < a2 + a4; v3 += 1)\n
        {\n
            v13 = ftop<4> - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t5,0] = t8\n
                [D] PutI(136:I8x8)[t5,0] = 0x01\n
            }\n
            else\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t5,0] = t8\n
                [D] PutI(136:I8x8)[t5,0] = 0x01\n
            }\n
            v15 = v14 - 1;\n
            if (![D] GetI(136:I8x8)[t3,0])\n
            {\n
                v16 = v15 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v16 = v15 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t8,1] = t9\n
            [D] PutI(136:I8x8)[t8,1] = 0x01\n
            [D] PutI(136:I8x8)[t8,0] = 0x00\n
            v17 = v16 + 1;\n
            v7 = ([D] GetI(136:I8x8)[t33,0] ? [D] GetI(72:F64x8)[t33,0] : nan);\n
            [D] PutI(136:I8x8)[t33,0] = 0x00\n
            [D] PutI(72:F64x8)[t42,0] = t45\n
            [D] PutI(136:I8x8)[t42,0] = 0x01\n
            v19 = v17 - 0 - 1;\n
            [D] PutI(72:F64x8)[t52,0] = t55\n
            [D] PutI(136:I8x8)[t52,0] = 0x01\n
            [D] PutI(72:F64x8)[t62,1] = t63\n
            [D] PutI(136:I8x8)[t62,1] = 0x01\n
            [D] PutI(136:I8x8)[t62,0] = 0x00\n
            v20 = v19 + 1;\n
            v5 = ([D] GetI(136:I8x8)[t87,0] ? [D] GetI(72:F64x8)[t87,0] : nan);\n
            [D] PutI(136:I8x8)[t87,0] = 0x00\n
            v21 = v20 + 1;\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t23,1] = t24\n
    [D] PutI(136:I8x8)[t23,1] = 0x01\n
    [D] PutI(136:I8x8)[t23,0] = 0x00\n
    *((396 + &v2[20 * v10] + 0x8 * a0)) = ([D] GetI(136:I8x8)[t76,0] ? [D] GetI(72:F64x8)[t76,0] : nan);\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    [D] PutI(72:F64x8)[t85,0] = t88\n
    [D] PutI(136:I8x8)[t85,0] = 0x01\n
    [D] PutI(72:F64x8)[t97,0] = t100\n
    [D] PutI(136:I8x8)[t97,0] = 0x01\n
    [D] PutI(72:F64x8)[t107,1] = t108\n
    [D] PutI(136:I8x8)[t107,1] = 0x01\n
    [D] PutI(136:I8x8)[t107,0] = 0x00\n
    return &v2[20 * v10 + 99];\n
}\n
", "4224572:sub_40763c": null, "4224576:cgc_GraphTemps": null, "4225624:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:memcpy": null, "5242892:cgc_fdwait": null, "5242896:cgc__terminate": null, "5242900:cgc_transmit": null, "5242904:cgc_allocate": null, "5242908:cgc_rint": null, "5242912:cgc_deallocate": null, "5242916:cgc_log10": null, "5242920:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}