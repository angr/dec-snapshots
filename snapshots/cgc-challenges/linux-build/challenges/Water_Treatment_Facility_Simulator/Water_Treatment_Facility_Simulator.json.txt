{"4202496:_init": "extern struct_0 *g_40e484;\n
\n
int _init()\n
{\n
    if (g_40e484)\n
    {\n
        g_40e484();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202640:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202656:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202672:sub_4020b0": "int sub_4020b0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202678:sub_4020b6": null, "4202688:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202731:sub_4020eb": null, "4202732:sub_4020ec": "int sub_4020ec()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202736:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202740:sub_4020f4": null, "4202752:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 50059;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202803:sub_402133": "int sub_402133()\n
{\n
}\n
", "4202809:sub_402139": "int sub_402139()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202816:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 49995;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202887:sub_402187": "int sub_402187()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202896:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40e480;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40e480)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020b0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202971:sub_4021db": "int sub_4021db()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202976:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202985:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202989:sub_4021ed": null, "4202992:cgc_isdigit": "int cgc_isdigit(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    if (v0 >= 48 && v0 <= 57)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203056:cgc_isupper": "int cgc_isupper(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    if (v0 >= 65 && v0 <= 90)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203120:cgc_islower": "int cgc_islower(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    if (v0 >= 97 && v0 <= 122)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203184:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if (!cgc_isupper(v1) && !cgc_islower(v1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203294:sub_40231e": null, "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if (!cgc_isalpha(v1) && !cgc_isdigit(v1))\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v2 = 1;\n
    return v2;\n
}\n
", "4203406:sub_40238e": null, "4203408:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    if (v0 >= 32 && v0 != 127)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4203472:cgc_toupper": "int cgc_toupper(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = v2;\n
    if (!cgc_islower(v0))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    v1 = v0 + -32;\n
    return v1;\n
}\n
", "4203559:sub_402427": null, "4203568:cgc_tolower": "int cgc_tolower(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = v2;\n
    if (!cgc_isupper(v0))\n
    {\n
        v1 = v0;\n
        return v1;\n
    }\n
    v1 = v0 + 32;\n
    return v1;\n
}\n
", "4203655:sub_402487": null, "4203664:cgc_isspace": "int cgc_isspace(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    v0 = v2;\n
    if (v0 != 32 && v0 != 9 && v0 != 10 && v0 != 11 && v0 != 12 && v0 != 13)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203768:sub_4024f8": null, "4203776:cgc_round": null, "4203939:sub_4025a3": null, "4203952:cgc_floor": null, "4204125:sub_40265d": null, "4204128:cgc_seed_prng_array": "typedef struct struct_0 {\n
    char padding_0[188];\n
    unsigned int field_bc;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char state;\n
\n
int cgc_seed_prng_array(unsigned int *v8, unsigned int *a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    struct_0 *v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    unsigned int *v10;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v11;  // eax\n
    unsigned int v12;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v6 = v8;\n
    v5 = a0;\n
    v0 = &state;\n
    v1 = 128;\n
    cgc_bzero();\n
    v2->field_bc = 0;\n
    if (v5 > 32)\n
        v5 = 32;\n
    for (v4 = 0; v4 < v5; v4 += 1)\n
    {\n
        *(&v2->padding_0[60 + 4 * v4]) = v6[v4];\n
    }\n
    v10 = v5;\n
    while (true)\n
    {\n
        v4 = v10;\n
        if (v4 >= 32)\n
            break;\n
        v11 = v2;\n
        v3 = *(&v11->padding_0[60 + 4 * (v4 + 1 & 31)]);\n
        *((60 + &v11->padding_0[0] + 0x4 * v4)) = (v3 ^ (v3 >> 30) + v4) * 524287;\n
        v10 = v4 + 1;\n
    }\n
    v12 = v7;\n
    return v10;\n
}\n
", "4204387:sub_402763": null, "4204400:cgc_seed_prng": "int cgc_seed_prng(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    return cgc_seed_prng_array(&v0, 0x1);\n
}\n
", "4204455:sub_4027a7": null, "4204464:cgc_prng": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int state_n;\n
\n
int cgc_prng()\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // esi\n
    unsigned int v12;  // esi\n
\n
    v9 = v11;\n
    v8 = *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * state_n]);\n
    v7 = *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * (state_n + 3 & 31)]);\n
    v6 = *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * (state_n + 24 & 31)]);\n
    v5 = *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * (state_n + 10 & 31)]);\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * (state_n + 31 & 31)]);\n
    v3 = v8 ^ v7 ^ v7 >> 8;\n
    v2 = v6 ^ v6 * 0x80000 ^ v5 ^ v5 * 0x4000;\n
    v1 = v3 ^ v2;\n
    v0 = v4 ^ v4 * 0x800 ^ v3 ^ v3 * 128 ^ v2 ^ v2 * 0x2000;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * state_n]) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[60 + 4 * (state_n + 31 & 31)]) = v0;\n
    state_n = state_n + 31 & 31;\n
    v12 = v9;\n
    return v0;\n
}\n
", "4204774:sub_4028e6": null, "4204784:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = v8;\n
    v5 = a0;\n
    if (v6 > v5)\n
    {\n
        v7 = 0;\n
        return v7;\n
    }\n
    else if (v6 != v5)\n
    {\n
        v3 = v5 - v6 + 1;\n
        if (!v3)\n
        {\n
            v7 = cgc_prng();\n
            return v7;\n
        }\n
        v2 = (0 CONCAT -1) /m v3;\n
        do\n
        {\n
            v4 = cgc_prng();\n
        } while (v4 >= v3 * v2);\n
        v0 = v6;\n
        v7 = v0 + (0 CONCAT v4) /m v2;\n
        return v7;\n
    }\n
    else\n
    {\n
        v7 = v6;\n
        return v7;\n
    }\n
}\n
", "4205009:sub_4029d1": null, "4205024:cgc_WRAPPER_PUTC": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_WRAPPER_PUTC(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    struct_0 *v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    char v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
\n
    v7 = v9;\n
    v6 = a0;\n
    v5 = a1;\n
    v0 = 1;\n
    v1 = &v6;\n
    v2 = 1;\n
    v3 = &v4;\n
    if (cgc_transmit())\n
    {\n
        v8 = -1;\n
        return v8;\n
    }\n
    v8 = v5 + 1;\n
    return v8;\n
}\n
", "4205146:sub_402a5a": null, "4205152:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v3, unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    v0 = a1;\n
    v2[v0] = v1;\n
    return v0 + 1;\n
}\n
", "4205207:sub_402a97": null, "4205216:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    unsigned int v7;  // [bp-0x18]\n
    unsigned int v8;  // [bp-0x14]\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // eax\n
    unsigned int v12;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = a0;\n
    v7 = v9;\n
    v6 = v10;\n
    v5 = a1;\n
    v4 = v7;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v8 = -1;\n
                return v8;\n
            }\n
            else if (*(&v2))\n
            {\n
                v11 = v4;\n
                v10 = *((v11 + 0x100)) - *(&v2);\n
                *((v11 + 0x100)) = v10;\n
            }\n
            else\n
            {\n
                v8 = -1;\n
                return v8;\n
            }\n
        }\n
    }\n
    v12 = v4;\n
    *(&v10) = *((v12 + 0x100));\n
    *((v12 + 0x100)) = v10 + 1;\n
    *((v4 + v10)) = v6;\n
    v8 = v5 + 1;\n
    return v8;\n
}\n
", "4205526:sub_402bd6": null, "4205536:cgc_cromu_putchar": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_cromu_putchar(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v5 = v7;\n
    v0 = 1;\n
    v1 = &v5;\n
    v2 = 1;\n
    v3 = &v4;\n
    if (cgc_transmit())\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4205641:sub_402c49": null, "4205648:cgc_cromu_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cromu_puts(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v8;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v5 + v2, v3 - v2))\n
            {\n
                v6 = -1;\n
                return v6;\n
            }\n
            if (!*(&v4))\n
            {\n
                v6 = -1;\n
                return v6;\n
            }\n
            v2 = *(&v4) + v2;\n
        }\n
        else\n
        {\n
            cgc_cromu_putchar(10);\n
            v6 = 0;\n
            return v6;\n
        }\n
    }\n
}\n
", "4205864:sub_402d28": null, "4205872:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v17, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x144]\n
    unsigned int v1;  // [bp-0x140]\n
    unsigned int v2;  // [bp-0x13c]\n
    char v3;  // [bp-0x138]\n
    unsigned int v4;  // [bp-0x134]\n
    unsigned int v5;  // [bp-0x130]\n
    void* v6;  // [bp-0x12c]\n
    unsigned int v7;  // [bp-0x128]\n
    char v8;  // [bp-0x122]\n
    unsigned short v9;  // [bp-0x22]\n
    unsigned int v10;  // [bp-0x20]\n
    unsigned int v11;  // [bp-0x1c]\n
    unsigned int v12;  // [bp-0x18]\n
    unsigned int v13;  // [bp-0x14]\n
    unsigned int v14;  // [bp-0x10]\n
    unsigned int v15;  // [bp-0xc]\n
    unsigned int v16;  // [bp-0x8]\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // esi\n
\n
    v16 = v18;\n
    v15 = v19;\n
    v14 = v20;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = v17;\n
    v11 = a0;\n
    v10 = cgc_WRAPPER_BUFFER_PUTC;\n
    v9 = 0;\n
    v7 = &v8;\n
    v6 = 0;\n
    v0 = v12;\n
    v1 = v11;\n
    v5 = cgc_wrapper_output();\n
    v4 = &v8;\n
    while (true)\n
    {\n
        if (v9 <= 0)\n
        {\n
            v13 = v5;\n
            break;\n
        }\n
        else\n
        {\n
            v0 = &v3;\n
            if (cgc_transmit(1, v4, v9))\n
            {\n
                v13 = -1;\n
                break;\n
            }\n
            else if (*(&v3))\n
            {\n
                v9 -= *(&v3);\n
                v4 = *(&v3) + v4;\n
            }\n
            else\n
            {\n
                v13 = -1;\n
                break;\n
            }\n
        }\n
    }\n
    return v13;\n
}\n
", "4206205:sub_402e7d": null, "4206208:cgc_wrapper_output": "typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    char *v12;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v13;  // [bp+0x4]\n
    unsigned int v14;  // [bp+0x8]\n
    unsigned int v31;  // [bp+0x50]\n
    unsigned int *v35;  // [bp+0x5c]\n
    char *v42;  // [bp+0x84]\n
    char *v43;  // [bp+0x88]\n
    char v44;  // [bp+0x8f]\n
    void* v45;  // [bp+0x90], Other Possible Types: unsigned int\n
    void* v46;  // [bp+0x94]\n
    void* v47;  // [bp+0x98], Other Possible Types: unsigned int\n
    void* v48;  // [bp+0x9c], Other Possible Types: unsigned int\n
    struct struct_0 **v49;  // [bp+0xa0]\n
    char *v50;  // [bp+0xa4], Other Possible Types: unsigned int\n
    unsigned int v51;  // [bp+0xa8], Other Possible Types: char\n
    char v52;  // [bp+0xac]\n
    char v53;  // [bp+0xb0]\n
    struct struct_0 **v66;  // eax\n
\n
    v66 = v49;\n
    v49 = v66 + 1;\n
    v35 = &*(v66)->field_0;\n
    *(v35) = *(&v51);\n
    while (true)\n
    {\n
        v50 += 1;\n
        while (true)\n
        {\n
LABEL_403616:\n
            while (true)\n
            {\n
                if (!*(v50))\n
                    return;\n
                v44 = *(v50);\n
                v50 += 1;\n
                if (v44 != 36)\n
                {\n
                    v12 = *(&v53);\n
                    v13 = v44;\n
                    v14 = v51;\n
                    v51 = *(&v52)(v13, v14);\n
                    goto LABEL_403616;\n
                }\n
                v45 = 0;\n
                v46 = 0;\n
                v47 = 0;\n
                v48 = 0;\n
                if (!*(v50))\n
                    return;\n
                if (*(v50) != 36)\n
                    break;\n
                v12 = *(&v53);\n
                v13 = 36;\n
                v14 = v51;\n
                v51 = *(&v52)(v13, v14);\n
            }\n
            if (*(v50) == 45)\n
            {\n
                v48 |= 1;\n
                v50 += 1;\n
                if (!*(v50))\n
                    return;\n
            }\n
            v12 = *(v50);\n
            if (cgc_isdigit(*(v50)))\n
            {\n
                if (*(v50) == 48)\n
                    v48 |= 4;\n
                v43 = v50;\n
                while (true)\n
                {\n
                    v12 = *(v50);\n
                    if (!cgc_isdigit(*(v50)))\n
                        break;\n
                    v50 += 1;\n
                }\n
                v12 = v43;\n
                v47 = cgc_cromu_atoi();\n
                if (!*(v50))\n
                    return;\n
            }\n
            if (*(v50) == 46)\n
            {\n
                v50 += 1;\n
                if (!*(v50))\n
                    return;\n
                v42 = v50;\n
                while (true)\n
                {\n
                    v12 = *(v50);\n
                    if (!cgc_isdigit(*(v50)))\n
                        break;\n
                    v50 += 1;\n
                }\n
                v12 = v42;\n
                v45 = cgc_cromu_atoi();\n
                if (!*(v50))\n
                    return;\n
            }\n
            v31 = *(v50) - 88;\n
            if (v31 <= 32)\n
                goto *(((stack_base)[84] + (stack_base)[80] * 4 - 13440)) + (stack_base)[84];\n
            break;\n
        }\n
    }\n
}\n
", "4208170:sub_40362a": null, "4208176:cgc_cromu_printf": "int cgc_cromu_printf(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char v4;  // [bp+0x8]\n
\n
    v2 = v3;\n
    v1 = &v4;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4208246:sub_403676": null, "4208256:cgc_cromu_vprintf": "int cgc_cromu_vprintf(unsigned int v12, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    void* v5;  // [bp-0x24]\n
    void* v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    unsigned int v9;  // [bp-0x14]\n
    unsigned int v10;  // [bp-0x10]\n
    unsigned int v11;  // [bp-0xc]\n
    unsigned int v13;  // edi\n
    unsigned int v14;  // esi\n
\n
    v11 = v13;\n
    v10 = v14;\n
    v9 = v12;\n
    v8 = a0;\n
    v7 = cgc_WRAPPER_PUTC;\n
    v6 = 0;\n
    v5 = 0;\n
    v0 = v6;\n
    v1 = v7;\n
    v2 = v5;\n
    v3 = v9;\n
    v4 = v8;\n
    return cgc_wrapper_output();\n
}\n
", "4208372:sub_4036f4": null, "4208384:cgc_cromu_sprintf": "int cgc_cromu_sprintf(unsigned int v8, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    char v9;  // [bp+0xc]\n
    unsigned int v10;  // esi\n
\n
    v7 = v10;\n
    v6 = v8;\n
    v5 = a0;\n
    v4 = &v9;\n
    v2 = v4;\n
    v1 = v5;\n
    v0 = v6;\n
    v3 = cgc_cromu_vsprintf();\n
    return v3;\n
}\n
", "4208470:sub_403756": null, "4208480:cgc_cromu_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cromu_vsprintf(unsigned int v14, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    unsigned int v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    unsigned int v4;  // [bp-0x2c]\n
    void* v5;  // [bp-0x28]\n
    unsigned int v6;  // [bp-0x24]\n
    struct struct_0 **v7;  // [bp-0x20]\n
    unsigned int v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // esi\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // ebx\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v10 = v14;\n
    v9 = a0;\n
    v8 = a1;\n
    v7 = &cgc_WRAPPER_OUTC;\n
    v6 = v10;\n
    v5 = 0;\n
    v0 = v5;\n
    v1 = v9;\n
    v2 = v8;\n
    v4 = cgc_wrapper_output();\n
    v0 = v4;\n
    v7(v6, 0);\n
    v18 = v11;\n
    v19 = v12;\n
    v20 = v13;\n
    return v4;\n
}\n
", "4208650:sub_40380a": null, "4208656:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v8, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x1c]\n
    char *v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    char *v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ecx\n
    unsigned int v13;  // ecx\n
\n
    v7 = v9;\n
    v5 = v8;\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = a2;\n
    v1 = 0;\n
    if (!v5)\n
    {\n
        *(v3) = 48;\n
        v6 = 1;\n
        return v6;\n
    }\n
    while (v5 > 0)\n
    {\n
        v0 = (0 CONCAT v5) /m v4 >> 32;\n
        v5 = (0 CONCAT v5) /m v4;\n
        if (v4 != 16)\n
        {\n
            v10 = v1;\n
            v1 = v10 + 1;\n
            v3[v10] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v11 = v1;\n
            v1 = v11 + 1;\n
            v3[v11] = v0 + 48;\n
        }\n
        else if ((v2 & 8))\n
        {\n
            v12 = v1;\n
            v1 = v12 + 1;\n
            v3[v12] = v0 + 55;\n
        }\n
        else\n
        {\n
            v13 = v1;\n
            v1 = v13 + 1;\n
            v3[v13] = v0 + 87;\n
        }\n
    }\n
    v6 = v1;\n
    return v6;\n
}\n
", "4208974:sub_40394e": null, "4208976:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v20, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x70]\n
    struct struct_0 **v1;  // [bp-0x6c]\n
    unsigned int v2;  // [bp-0x68]\n
    struct struct_0 **v3;  // [bp-0x64], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x60]\n
    struct struct_0 **v5;  // [bp-0x40]\n
    char v6;  // [bp-0x39]\n
    void* v7;  // [bp-0x38], Other Possible Types: unsigned int\n
    void* v8;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x30]\n
    unsigned int v10;  // [bp-0x2c]\n
    unsigned int v11;  // [bp-0x28]\n
    unsigned int v12;  // [bp-0x24]\n
    unsigned int v13;  // [bp-0x20]\n
    unsigned int v14;  // [bp-0x1c]\n
    struct struct_0 **v15;  // [bp-0x18]\n
    unsigned int v16;  // [bp-0x14]\n
    unsigned int v17;  // [bp-0x10]\n
    unsigned int v18;  // [bp-0xc]\n
    unsigned int v19;  // [bp-0x8]\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edi\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // eax\n
    unsigned int v25;  // eax\n
\n
    v19 = v21;\n
    v18 = v22;\n
    v17 = v23;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a6;\n
    v1 = a0;\n
    v16 = v20;\n
    v15 = v1;\n
    v14 = a1;\n
    v13 = a2;\n
    v12 = a3;\n
    v11 = a4;\n
    v10 = a5;\n
    v9 = v2;\n
    v8 = 0;\n
    v7 = 0;\n
    v6 = 0;\n
    v5 = 0;\n
    if (v12 == 10 && v13 < 0)\n
    {\n
        v6 = 1;\n
        v13 = -(v13);\n
        v8 += 1;\n
    }\n
    v5 = cgc_printf_int_to_string(v13, v12, &v4, v9);\n
    v8 = v5 + v8;\n
    if (v11 > 0 && v8 < v11)\n
        v7 = v11 - v8;\n
    if (v10 > 0)\n
    {\n
        v9 |= 4;\n
        if (v5 < v10)\n
            v7 = v10 - v5;\n
    }\n
    if (!(v9 & 1))\n
    {\n
        if (v6 && v7 > 0 && (v9 & 4))\n
        {\n
            v14 = v15(v16, 45);\n
            v6 = 0;\n
        }\n
        while (true)\n
        {\n
            v24 = v7;\n
            v7 = v24 - 1;\n
            if (v24 <= 0)\n
                break;\n
            if (!(v9 & 4))\n
                v14 = v15(v16, 32);\n
            else\n
                v14 = v15(v16, 48);\n
        }\n
    }\n
    if (v6)\n
    {\n
        v14 = v15(v16, 45);\n
        v6 = 0;\n
    }\n
    for (v3 = v5; v3 > 0; v3 = v3 + 1)\n
    {\n
        v14 = v15(v16, *((&v3 + v3)));\n
    }\n
    if ((v9 & 1))\n
    {\n
        while (true)\n
        {\n
            v25 = v7;\n
            v7 = v25 - 1;\n
            if (v25 <= 0)\n
                break;\n
            v14 = v15(v16, 32);\n
        }\n
    }\n
    return v14;\n
}\n
", "4209770:sub_403c6a": null, "4209776:cgc_printf_float_to_string": null, "4212878:sub_40488e": null, "4212880:cgc_printf_helper_float": null, "4213658:sub_404b9a": null, "4213664:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v16, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    unsigned int v1;  // [bp-0x40]\n
    unsigned int v2;  // [bp-0x3c]\n
    void* v3;  // [bp-0x38], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x34]\n
    unsigned int v5;  // [bp-0x30]\n
    unsigned int v6;  // [bp-0x2c]\n
    unsigned int v7;  // [bp-0x28]\n
    char *v8;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x20]\n
    struct struct_0 **v10;  // [bp-0x1c]\n
    unsigned int v11;  // [bp-0x18]\n
    unsigned int v12;  // [bp-0x14]\n
    unsigned int v13;  // [bp-0x10]\n
    unsigned int v14;  // [bp-0xc]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // edi\n
    unsigned int v19;  // esi\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // eax\n
    char *v22;  // ecx\n
    unsigned int v23;  // eax\n
\n
    v15 = v17;\n
    v14 = v18;\n
    v13 = v19;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a5;\n
    v11 = v16;\n
    v10 = a0;\n
    v9 = a1;\n
    v8 = a2;\n
    v7 = a3;\n
    v6 = a4;\n
    if (!v6 && !v7)\n
    {\n
        for (v5 = v2; *(v8); v8 += 1)\n
        {\n
            v0 = v9;\n
            v9 = v10(v11, *(v8));\n
        }\n
        v12 = v9;\n
        goto LABEL_404e18;\n
    }\n
    v4 = cgc_strlen();\n
    v3 = 0;\n
    if (v6 > 0 && v4 > v6)\n
        v4 = v6;\n
    if (v7 > 0 && v4 < v7)\n
        v3 = v7 - v4;\n
    if (!(v5 & 1))\n
    {\n
        while (true)\n
        {\n
            v20 = v3;\n
            v3 = v20 - 1;\n
            if (v20 <= 0)\n
                break;\n
            if (!(v5 & 4))\n
            {\n
                v0 = v9;\n
                v9 = v10(v11, 32);\n
            }\n
            else\n
            {\n
                v0 = v9;\n
                v9 = v10(v11, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v21 = v4;\n
        v4 = v21 - 1;\n
        if (v21 <= 0)\n
            break;\n
        v22 = v8;\n
        v8 = v22 + 1;\n
        v0 = v9;\n
        v9 = v10(v11, *(v22));\n
    }\n
    if ((v5 & 1))\n
    {\n
        while (true)\n
        {\n
            v23 = v3;\n
            v3 = v23 - 1;\n
            if (v23 <= 0)\n
                break;\n
            v0 = v9;\n
            v9 = v10(v11, 32);\n
        }\n
    }\n
    v12 = v9;\n
LABEL_404e18:\n
    return v12;\n
}\n
", "4214308:sub_404e24": null, "4214320:cgc_rand": "int cgc_rand()\n
{\n
    return cgc_random_in_range(0, 2147483646);\n
}\n
", "4214370:sub_404e62": null, "4214384:cgc_srand": "int cgc_srand(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    return cgc_seed_prng(v0);\n
}\n
", "4214431:sub_404e9f": null, "4214432:cgc_cromu_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_cromu_atoi(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    void* v2;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v6;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v3)); v3 += 1);\n
    if (!*(v3))\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    if (*(v3) == 45)\n
    {\n
        v1 = 1;\n
        v3 += 1;\n
    }\n
    for (; cgc_isdigit(*(v3)); v2 = v2 * 10 + *(v6) - 48)\n
    {\n
        v6 = v3;\n
        v3 = v6 + 1;\n
    }\n
    if (v1)\n
    {\n
        v4 = -(v2);\n
        return v4;\n
    }\n
    v4 = v2;\n
    return v4;\n
}\n
", "4214701:sub_404fad": null, "4214704:cgc_cromu_atof": null, "4215034:sub_4050fa": null, "4215040:cgc_strcpy": "int cgc_strcpy(char *v3, char *a0)\n
{\n
    char *v0;  // [bp-0x10]\n
    int tmp_19;  // tmp #19\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
    char *v5;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v2; *(v1); *(v5) = tmp_19)\n
    {\n
        v4 = v1;\n
        v1 = v4 + 1;\n
        tmp_19 = *(v4);\n
        v5 = v2;\n
        v2 = v5 + 1;\n
    }\n
    *(v2) = 0;\n
    return v0;\n
}\n
", "4215135:sub_40515f": null, "4215136:cgc_strncpy": "int cgc_strncpy(char *v4, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    char *v3;  // [bp-0x8]\n
\n
    v3 = v4;\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = 0; v0 < v1; v0 += 1)\n
    {\n
        if (!*((v2 + v0)))\n
            break;\n
        v3[v0] = *((v2 + v0));\n
    }\n
    for (; v0 < v1; v0 += 1)\n
    {\n
        v3[v0] = 0;\n
    }\n
    return v3;\n
}\n
", "4215296:cgc_memcpy": "int cgc_memcpy(char *v4, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v3 = v4;\n
    v2 = a0;\n
    v1 = a1;\n
    for (v0 = v3; v1 >= 4; v1 -= 4)\n
    {\n
        *(v3) = *(&v2);\n
        v3 += 4;\n
        v2 += 4;\n
    }\n
    for (; v1 > 0; v1 -= 1)\n
    {\n
        *(v3) = *(v2);\n
        v3 += 1;\n
        v2 += 1;\n
    }\n
    return v0;\n
}\n
", "4215467:sub_4052ab": null, "4215472:cgc_strlen": "int cgc_strlen(char *v2)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v3;  // eax\n
\n
    v1 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215541:sub_4052f5": null, "4215552:cgc_bzero": "int cgc_bzero(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    char *v1;  // [bp-0x8]\n
    char *v3;  // ecx\n
\n
    v1 = v2;\n
    for (v0 = a0; v0; *((v1 + v3 - 1)) = 0)\n
    {\n
        v3 = v0;\n
        v0 = v3 + 1;\n
    }\n
    v1[v0] = 0;\n
    return v1;\n
}\n
", "4215624:sub_405348": null, "4215632:cgc_memset": "int cgc_memset(char *v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    char *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    char *v5;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v7;  // eax\n
    char *v8;  // eax\n
\n
    v5 = v6;\n
    v4 = a0;\n
    v3 = a1;\n
    v2 = v5;\n
    v1 = v4;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; v3 >= 4; v3 -= 4)\n
    {\n
        v7 = v5;\n
        v5 = v7 + 1;\n
        *(&v7) = v0;\n
    }\n
    for (; v3 > 0; v3 -= 1)\n
    {\n
        v8 = v5;\n
        v5 = v8 + 1;\n
        *(v8) = v1;\n
    }\n
    return v2;\n
}\n
", "4215820:sub_40540c": null, "4215824:cgc_read_until": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_read_until(char *v8, char a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x28]\n
    char v2;  // [bp-0x24]\n
    char v3;  // [bp-0x1d]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    char *v6;  // [bp-0x14]\n
    char *v7;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // ecx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = v8;\n
    v5 = a1;\n
    if (!v6)\n
    {\n
        v7 = -1;\n
        return v7;\n
    }\n
    for (v4 = 0; v4 < v5 - 1; v6[v9] = v3)\n
    {\n
        v0 = &v2;\n
        if (cgc_receive(0, &v3, 1))\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
        if (!*(&v2))\n
        {\n
            v7 = -1;\n
            return v7;\n
        }\n
        if (v3 == a0)\n
            break;\n
        v9 = v4;\n
        v4 = v9 + 1;\n
    }\n
    v6[v4] = 0;\n
    v7 = v4;\n
    return v7;\n
}\n
", "4216094:sub_40551e": null, "4216096:cgc_PrintAspMenu": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintAspMenu()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // [bp+0x8]\n
    unsigned int v5;  // [bp+0xc]\n
    unsigned int v6;  // [bp+0x10]\n
    char v7;  // [bp+0x14]\n
    unsigned int v8;  // [bp+0x2c]\n
    char v9;  // [bp+0x33]\n
    unsigned int v10;  // ebx\n
\n
    v1 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        do\n
        {\n
            v2 = *(&v7) - 13180;\n
            cgc_cromu_puts(*(&v7) - 13180);\n
            v2 = *(&v7) - 13156;\n
            cgc_cromu_puts(*(&v7) - 13156);\n
            v2 = *(&v7) - 13132;\n
            cgc_cromu_puts(*(&v7) - 13132);\n
            v2 = *(&v7) - 13112;\n
            cgc_cromu_puts(*(&v7) - 13112);\n
            v2 = *(&v7) - 13085;\n
            cgc_cromu_printf(*(&v7) - 13085);\n
            v2 = &v9;\n
            v3 = 10;\n
            v4 = 3;\n
            v8 = cgc_read_until(v3, v4, v5);\n
            if (v8 == -1)\n
            {\n
                v2 = -1;\n
                cgc__terminate();\n
            }\n
        } while (v8 != 1);\n
        v6 = v9 - 49;\n
    } while (v6 > 3);\n
    goto *(((stack_base)[20] + (stack_base)[16] * 4 - 13280)) + (stack_base)[20];\n
}\n
", "4216329:sub_405609": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintAspMenu()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // [bp+0x8]\n
    unsigned int v5;  // [bp+0xc]\n
    unsigned int v6;  // [bp+0x10]\n
    char v7;  // [bp+0x14]\n
    unsigned int v8;  // [bp+0x2c]\n
    char v9;  // [bp+0x33]\n
    unsigned int v10;  // ebx\n
\n
    v1 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        do\n
        {\n
            v2 = *(&v7) - 13180;\n
            cgc_cromu_puts(*(&v7) - 13180);\n
            v2 = *(&v7) - 13156;\n
            cgc_cromu_puts(*(&v7) - 13156);\n
            v2 = *(&v7) - 13132;\n
            cgc_cromu_puts(*(&v7) - 13132);\n
            v2 = *(&v7) - 13112;\n
            cgc_cromu_puts(*(&v7) - 13112);\n
            v2 = *(&v7) - 13085;\n
            cgc_cromu_printf(*(&v7) - 13085);\n
            v2 = &v9;\n
            v3 = 10;\n
            v4 = 3;\n
            v8 = cgc_read_until(v3, v4, v5);\n
            if (v8 == -1)\n
            {\n
                v2 = -1;\n
                cgc__terminate();\n
            }\n
        } while (v8 != 1);\n
        v6 = v9 - 49;\n
    } while (v6 > 3);\n
    goto *(((stack_base)[20] + (stack_base)[16] * 4 - 13280)) + (stack_base)[20];\n
}\n
", "4216695:sub_405777": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintAspMenu()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // [bp+0x8]\n
    unsigned int v5;  // [bp+0xc]\n
    unsigned int v6;  // [bp+0x10]\n
    char v7;  // [bp+0x14]\n
    unsigned int v8;  // [bp+0x2c]\n
    char v9;  // [bp+0x33]\n
    unsigned int v10;  // ebx\n
\n
    v1 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        do\n
        {\n
            v2 = *(&v7) - 13180;\n
            cgc_cromu_puts(*(&v7) - 13180);\n
            v2 = *(&v7) - 13156;\n
            cgc_cromu_puts(*(&v7) - 13156);\n
            v2 = *(&v7) - 13132;\n
            cgc_cromu_puts(*(&v7) - 13132);\n
            v2 = *(&v7) - 13112;\n
            cgc_cromu_puts(*(&v7) - 13112);\n
            v2 = *(&v7) - 13085;\n
            cgc_cromu_printf(*(&v7) - 13085);\n
            v2 = &v9;\n
            v3 = 10;\n
            v4 = 3;\n
            v8 = cgc_read_until(v3, v4, v5);\n
            if (v8 == -1)\n
            {\n
                v2 = -1;\n
                cgc__terminate();\n
            }\n
        } while (v8 != 1);\n
        v6 = v9 - 49;\n
    } while (v6 > 3);\n
    goto *(((stack_base)[20] + (stack_base)[16] * 4 - 13280)) + (stack_base)[20];\n
}\n
", "4217061:sub_4058e5": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintAspMenu()\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v2;  // [bp+0x0]\n
    unsigned int v3;  // [bp+0x4]\n
    unsigned int v4;  // [bp+0x8]\n
    unsigned int v5;  // [bp+0xc]\n
    unsigned int v6;  // [bp+0x10]\n
    char v7;  // [bp+0x14]\n
    unsigned int v8;  // [bp+0x2c]\n
    char v9;  // [bp+0x33]\n
    unsigned int v10;  // ebx\n
\n
    v1 = v10;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        do\n
        {\n
            v2 = *(&v7) - 13180;\n
            cgc_cromu_puts(*(&v7) - 13180);\n
            v2 = *(&v7) - 13156;\n
            cgc_cromu_puts(*(&v7) - 13156);\n
            v2 = *(&v7) - 13132;\n
            cgc_cromu_puts(*(&v7) - 13132);\n
            v2 = *(&v7) - 13112;\n
            cgc_cromu_puts(*(&v7) - 13112);\n
            v2 = *(&v7) - 13085;\n
            cgc_cromu_printf(*(&v7) - 13085);\n
            v2 = &v9;\n
            v3 = 10;\n
            v4 = 3;\n
            v8 = cgc_read_until(v3, v4, v5);\n
            if (v8 == -1)\n
            {\n
                v2 = -1;\n
                cgc__terminate();\n
            }\n
        } while (v8 != 1);\n
        v6 = v9 - 49;\n
    } while (v6 > 3);\n
    goto *(((stack_base)[20] + (stack_base)[16] * 4 - 13280)) + (stack_base)[20];\n
}\n
", "4217427:sub_405a53": "int sub_405a53()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebp\n
\n
    v3 = *(&v0);\n
    v4 = *(&v1);\n
    return;\n
}\n
", "4217438:sub_405a5e": null, "4217440:cgc_PrintFilterMenu": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintFilterMenu()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    int tmp_3;  // tmp #3\n
    struct_0 *v1;  // [bp-0x18]\n
    char v2;  // [bp-0x12]\n
    char v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    char v5;  // [bp-0xc]\n
    unsigned int v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    while (true)\n
    {\n
        do\n
        {\n
            while (true)\n
            {\n
                do\n
                {\n
                    cgc_cromu_puts(&v1[264].padding_0[23]);\n
                    cgc_cromu_puts(&v1[263].padding_0[42]);\n
                    cgc_cromu_printf(&v1[267].padding_0[2]);\n
                    v4 = cgc_read_until(&v5, 10, 3);\n
                    if (v4 == -1)\n
                        cgc__terminate();\n
                } while (v4 != 1);\n
                v0 = v5;\n
                if (v0 == 49)\n
                {\n
                    cgc_cromu_printf(&v1[263].padding_0[15]);\n
                    v4 = cgc_read_until(&v5, 10, 3);\n
                    if (v4 == -1)\n
                        cgc__terminate();\n
                    if (v4 == 1)\n
                        break;\n
                }\n
                else\n
                {\n
                    v7 = v0;\n
                    tmp_3 = v7;\n
                    if (tmp_3 == 50)\n
                        return v7 - 50;\n
LABEL_405cb7:\n
                }\n
            }\n
            v3 = cgc_cromu_atoi(&v5);\n
        } while (v3 > v1->field_30 - 1);\n
        cgc_cromu_printf(&v1[262].padding_0[44]);\n
        v4 = cgc_read_until(&v5, 10, 7);\n
        if (v4 == -1)\n
            cgc__terminate();\n
        v2 = cgc_cromu_atoi(&v5);\n
        if (v2 < 0)\n
        {\n
LABEL_405c7f:\n
        }\n
        else\n
        {\n
            if (!(v2 <= *(&v1->padding_0[228 * v3 + 9185])))\n
                goto LABEL_405c7f;\n
            cgc_ChangeNumActiveFilters(&v1[185].padding_0[35 + 228 * v3]);\n
            goto LABEL_405cb7;\n
        }\n
    }\n
}\n
", "4218044:sub_405cbc": null, "4218048:cgc_PrintDisinfectionMenu": null, "4218623:sub_405eff": null, "4218624:cgc_PrintRenameMenu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintRenameMenu()\n
{\n
    unsigned int v0;  // [bp-0x114]\n
    unsigned int v1;  // [bp-0x110]\n
    char v2;  // [bp-0x109]\n
    char v3;  // [bp-0x108]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        do\n
        {\n
            cgc_cromu_puts(v1 - 12771);\n
            cgc_cromu_puts(v1 - 12759);\n
            cgc_cromu_puts(v1 - 12746);\n
            cgc_cromu_puts(v1 - 12738);\n
            cgc_cromu_puts(v1 - 12727);\n
            cgc_cromu_puts(v1 - 12710);\n
            cgc_cromu_puts(v1 - 12698);\n
            cgc_cromu_puts(v1 - 12688);\n
            cgc_cromu_printf(v1 - 13085);\n
            v2 = cgc_read_until(&v3, 10, 3);\n
            if (v2 == 255)\n
                cgc__terminate();\n
        } while (v2 != 1);\n
        v0 = v3 - 49;\n
    } while (v0 > 7);\n
    goto *(((stack_base)[272] + (stack_base)[276] * 4 - 13264)) + (stack_base)[272];\n
}\n
", "4218938:sub_40603a": "int sub_40603a()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x17]\n
    char v3;  // [bp+0x18]\n
\n
    cgc_cromu_printf(*(&v1) - 12661);\n
    v2 = cgc_read_until(&v3, 10, 31);\n
    if (v2 == 255)\n
        cgc__terminate();\n
    cgc_strncpy(*(&v1) + 13205, &v3, v2 + 1);\n
}\n
", "4219066:sub_4060ba": "int sub_4060ba()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x17]\n
    char v3;  // [bp+0x18]\n
\n
    cgc_cromu_printf(*(&v1) - 12641);\n
    v2 = cgc_read_until(&v3, 10, 31);\n
    if (v2 == 255)\n
        cgc__terminate();\n
    cgc_strncpy(*(&v1) + 11837, &v3, v2 + 1);\n
}\n
", "4219194:sub_40613a": "int sub_40613a()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x15]\n
    char v3;  // [bp+0x17]\n
    char v4;  // [bp+0x18]\n
\n
    cgc_cromu_printf(*(&v1) - 13073);\n
    v3 = cgc_read_until(&v4, 10, 3);\n
    if (v3 == 255)\n
        cgc__terminate();\n
    if (v3 == 1)\n
    {\n
        v2 = cgc_cromu_atoi(&v4);\n
        if (v2 <= *((*(&v1) + 48)) - 1)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12620);\n
            v3 = cgc_read_until(&v4, 10, 31);\n
            if (v3 == 255)\n
                cgc__terminate();\n
            cgc_strncpy(*(&v1) + 10696 + v2 * 228 + 1, &v4, v3 + 1);\n
        }\n
    }\n
}\n
", "4219515:sub_40627b": "int sub_40627b()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x15]\n
    char v3;  // [bp+0x17]\n
    char v4;  // [bp+0x18]\n
\n
    cgc_cromu_printf(*(&v1) - 12902);\n
    v3 = cgc_read_until(&v4, 10, 3);\n
    if (v3 == 255)\n
        cgc__terminate();\n
    if (v3 == 1)\n
    {\n
        v2 = cgc_cromu_atoi(&v4);\n
        if (v2 <= *((*(&v1) + 48)) - 1)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12603);\n
            v3 = cgc_read_until(&v4, 10, 31);\n
            if (v3 == 255)\n
                cgc__terminate();\n
            cgc_strncpy(*(&v1) + 9100 + v2 * 228 + 1, &v4, v3 + 1);\n
        }\n
    }\n
}\n
", "4219836:sub_4063bc": "int sub_4063bc()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x15]\n
    char v3;  // [bp+0x17]\n
    char v4;  // [bp+0x18]\n
\n
    cgc_cromu_printf(*(&v1) - 12832);\n
    v3 = cgc_read_until(&v4, 10, 3);\n
    if (v3 == 255)\n
        cgc__terminate();\n
    if (v3 == 1)\n
    {\n
        v2 = cgc_cromu_atoi(&v4);\n
        if (v2 <= *((*(&v1) + 48)) - 1)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12583);\n
            v3 = cgc_read_until(&v4, 10, 31);\n
            if (v3 == 255)\n
                cgc__terminate();\n
            cgc_strncpy(*(&v1) + 12064 + v2 * 228 + 1, &v4, v3 + 1);\n
        }\n
    }\n
}\n
", "4220157:sub_4064fd": "int sub_4064fd()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x17]\n
    char v3;  // [bp+0x18]\n
\n
    cgc_cromu_printf(*(&v1) - 12557);\n
    v2 = cgc_read_until(&v3, 10, 31);\n
    if (v2 == 255)\n
        cgc__terminate();\n
    cgc_strncpy(*(&v1) + 453, &v3, v2 + 1);\n
}\n
", "4220285:sub_40657d": "int sub_40657d()\n
{\n
    char v1;  // [bp+0x10]\n
    char v2;  // [bp+0x15]\n
    char v3;  // [bp+0x17]\n
    char v4;  // [bp+0x18]\n
\n
    cgc_cromu_puts(*(&v1) - 12537);\n
    cgc_cromu_puts(*(&v1) - 12531);\n
    cgc_cromu_puts(*(&v1) - 12525);\n
    cgc_cromu_puts(*(&v1) - 12519);\n
    cgc_cromu_printf(*(&v1) - 12513);\n
    v3 = cgc_read_until(&v4, 10, 3);\n
    if (v3 == 255)\n
        cgc__terminate();\n
    if (v3 == 1)\n
    {\n
        v2 = cgc_cromu_atoi(&v4);\n
        if (v2 == 1)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12499);\n
            v3 = cgc_read_until(&v4, 10, 31);\n
            if (v3 == 255)\n
                cgc__terminate();\n
            cgc_strncpy(*(&v1) + 10469, &v4, v3 + 1);\n
        }\n
        else if (v2 == 2)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12485);\n
            v3 = cgc_read_until(&v4, 10, 31);\n
            if (v3 == 255)\n
                cgc__terminate();\n
            cgc_strncpy(*(&v1) + 10241, &v4, v3 + 1);\n
        }\n
        else if (v2 == 3)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12471);\n
            v3 = cgc_read_until(&v4, 10, 31);\n
            if (v3 == 255)\n
                cgc__terminate();\n
            cgc_strncpy(*(&v1) + 8873, &v4, v3 + 1);\n
        }\n
        else if (v2 == 4)\n
        {\n
            cgc_cromu_printf(*(&v1) - 12457);\n
            if (cgc_read_until(&v4, 10, 255) == -1)\n
                cgc__terminate();\n
            v3 = cgc_strlen(&v4);\n
            if (v3 < 31)\n
                cgc_strcpy(*(&v1) + 13433, &v4);\n
        }\n
    }\n
}\n
", "4221086:sub_40689e": "int sub_40689e()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebp\n
\n
    v3 = *(&v0);\n
    v4 = *(&v1);\n
    return;\n
}\n
", "4221097:sub_4068a9": null, "4221104:cgc_PrintValveMenu": null, "4221606:sub_406aa6": null, "4221653:sub_406ad5": null, "4221700:sub_406b04": null, "4221747:sub_406b33": null, "4221794:sub_406b62": null, "4221808:cgc_PrintSystemBanner": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintSystemBanner()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_cromu_puts(\"Welcome to the Wastewater Treatement Plant Simulator\");\n
    cgc_cromu_puts(v0 - 11632);\n
    cgc_cromu_puts(v0 - 12171);\n
    cgc_cromu_puts(v0 - 12084);\n
    v4 = v1;\n
    return cgc_cromu_puts(v0 - 8441);\n
}\n
", "4221926:sub_406be6": null, "4221936:cgc_PrintMenu": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintMenu()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    do\n
    {\n
        do\n
        {\n
            cgc_cromu_puts(v1 - 12034);\n
            cgc_cromu_printf(v1 - 11996);\n
            cgc_cromu_puts(v1 - 11976);\n
            cgc_cromu_puts(v1 - 11951);\n
            cgc_cromu_puts(v1 - 11929);\n
            cgc_cromu_puts(v1 - 11887);\n
            cgc_cromu_puts(v1 - 11868);\n
            cgc_cromu_puts(v1 - 11844);\n
            cgc_cromu_puts(v1 - 11826);\n
            cgc_cromu_puts(v1 - 11809);\n
            cgc_cromu_puts(v1 - 11786);\n
            cgc_cromu_printf(v1 - 13085);\n
            v2 = cgc_read_until(&v3, 10, 4);\n
            if (v2 == -1)\n
                cgc__terminate();\n
        } while (v2 != 1);\n
        v0 = v3 - 49;\n
    } while (v0 > 8);\n
    goto *(((stack_base)[24] + (stack_base)[28] * 4 - 13216)) + (stack_base)[24];\n
}\n
", "4222308:sub_406d64": "int sub_406d64()\n
{\n
    cgc_PrintPlantSchematic();\n
}\n
", "4222322:sub_406d72": "int sub_406d72()\n
{\n
    cgc_PrintPlantStatus();\n
}\n
", "4222336:sub_406d80": "int sub_406d80()\n
{\n
    cgc_PrintAspMenu();\n
}\n
", "4222350:sub_406d8e": "int sub_406d8e()\n
{\n
    cgc_PrintFilterMenu();\n
}\n
", "4222364:sub_406d9c": "int sub_406d9c()\n
{\n
    cgc_PrintDisinfectionMenu();\n
}\n
", "4222378:sub_406daa": "int sub_406daa()\n
{\n
    cgc_PrintValveMenu();\n
}\n
", "4222392:sub_406db8": "int sub_406db8()\n
{\n
    cgc_PrintRenameMenu();\n
}\n
", "4222406:sub_406dc6": "int sub_406dc6()\n
{\n
    char v0;  // [bp-0x4]\n
    char v1;  // [bp+0x0]\n
    char v3;  // [bp+0x1f]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebp\n
\n
    v3 = 1;\n
    v4 = *(&v0);\n
    v5 = *(&v1);\n
    return;\n
}\n
", "4222416:sub_406dd0": "int sub_406dd0()\n
{\n
    char v1;  // [bp+0x1f]\n
\n
    v1 = 0;\n
}\n
", "4222447:sub_406def": null, "4222448:cgc_RandomInfluent": "typedef struct struct_4 {\n
    char padding_0[13332];\n
    unsigned long long field_3414;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[13340];\n
    unsigned long long field_341c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[13348];\n
    unsigned long long field_3424;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[13356];\n
    unsigned long long field_342c;\n
} struct_3;\n
\n
typedef struct struct_1 {\n
    char padding_0[13364];\n
    unsigned long long field_3434;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RandomInfluent()\n
{\n
    unsigned int v0;  // [bp-0x48]\n
    unsigned int v1;  // [bp-0x44]\n
    unsigned int v2;  // [bp-0x3c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    unsigned int v6;  // [bp+0x8]\n
    char v7;  // [bp+0xc]\n
    unsigned int v8;  // [bp+0x10]\n
    void* v9;  // [bp+0x14]\n
    unsigned int v10;  // [bp+0x18]\n
    void* v11;  // [bp+0x1c]\n
    unsigned int v12;  // [bp+0x20]\n
    void* v13;  // [bp+0x24]\n
    unsigned int v14;  // [bp+0x28]\n
    void* v15;  // [bp+0x2c]\n
    unsigned int v16;  // [bp+0x30]\n
    void* v17;  // [bp+0x34]\n
    unsigned int v18;  // ebx\n
    struct_4 *v19;  // ebx\n
    struct_0 *v20;  // ebx\n
    struct_2 *v21;  // ebx\n
    struct_3 *v22;  // ebx\n
    struct_1 *v23;  // eax\n
\n
    v3 = v18;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 30;\n
    v0 = 9;\n
    v19 = *(&v7);\n
    v8 = cgc_random_in_range(v5, v6);\n
    v9 = 0;\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t4,1] = t5\n
    [D] PutI(136:I8x8)[t4,1] = 0x01\n
    [D] PutI(136:I8x8)[t4,0] = 0x00\n
    *(&(&v19->padding_0)[1]) = ([D] GetI(136:I8x8)[t29,0] ? [D] GetI(72:F64x8)[t29,0] : nan);\n
    [D] PutI(136:I8x8)[t29,0] = 0x00\n
    v5 = 4000;\n
    v4 = 1900;\n
    v20 = *(&v7);\n
    v10 = cgc_random_in_range(v5, v6);\n
    v11 = 0;\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *(&(&v20->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&(&v20->padding_0)[1]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v5 = 5000;\n
    v4 = 2000;\n
    v21 = *(&v7);\n
    v12 = cgc_random_in_range(v5, v6);\n
    v13 = 0;\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *(&(&v21->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&(&v21->padding_0)[1]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v5 = 750;\n
    v4 = 490;\n
    v22 = *(&v7);\n
    v14 = cgc_random_in_range(v5, v6);\n
    v15 = 0;\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *(&(&v22->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *(&(&v22->padding_0)[1]) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    v5 = 150;\n
    v4 = 75;\n
    v23 = *(&v7);\n
    v16 = cgc_random_in_range(v5, v6);\n
    v17 = 0;\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t6,0])\n
    {\n
        *(&(&v23->padding_0)[1]) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
        return v23;\n
    }\n
    *(&(&v23->padding_0)[1]) = nan;\n
    [D] PutI(136:I8x8)[t6,0] = 0x00\n
    return v23;\n
}\n
", "4222720:cgc_InitInfluent": "typedef struct struct_0 {\n
    char padding_0[13204];\n
    char field_3394;\n
    char padding_3395[107];\n
    unsigned int field_3400;\n
    char padding_3404[16];\n
    unsigned int field_3414;\n
    unsigned int field_3418;\n
    unsigned int field_341c;\n
    unsigned int field_3420;\n
    unsigned int field_3424;\n
    unsigned int field_3428;\n
    unsigned int field_342c;\n
    unsigned int field_3430;\n
    unsigned int field_3434;\n
    unsigned int field_3438;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_Influent;\n
\n
int cgc_InitInfluent()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_Influent, 0xe4);\n
    v4 = v0;\n
    v4->field_3394 = 0;\n
    cgc_strncpy(&v4->padding_3395, &v4->padding_0[12768], 31);\n
    v5 = v0;\n
    v5->field_3418 = 1073322393;\n
    v5->field_3414 = 2576980378;\n
    v5->field_3420 = 0x40a4f000;\n
    v5->field_341c = 0;\n
    v5->field_3428 = 0x40a9c800;\n
    v5->field_3424 = 0;\n
    v5->field_3430 = 0x4080e000;\n
    v5->field_342c = 0;\n
    v5->field_3438 = 0x40578000;\n
    v5->field_3434 = 0;\n
    v5->field_3400 = &v5->padding_0[11836];\n
    v6 = v1;\n
    return v0;\n
}\n
", "4222932:sub_406fd4": null, "4222944:cgc_GetValvePctFlow": "int cgc_GetValvePctFlow(unsigned int v2, char a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp+0x0], Other Possible Types: unsigned long\n
    char v3;  // [bp+0xb]\n
    char v4;  // [bp+0xc]\n
    void* v5;  // [bp+0x10], Other Possible Types: unsigned long\n
    void* v6;  // [bp+0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v9;  // ftop\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // cc_dep1\n
\n
    v7 = v2;\n
    v0 = v7;\n
    if (!v0)\n
    {\n
LABEL_40700b:\n
        v6 = 0;\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v7 = a0;\n
        if (!(v7 <= 5))\n
            goto LABEL_40700b;\n
        v7 = *(*(&v4));\n
        if (v7 != 5)\n
        {\n
LABEL_407043:\n
            v6 = 0;\n
            v5 = 0;\n
        }\n
        else\n
        {\n
            v7 = *(&v4);\n
            if (!*((v7 + (a0 << 2) + 108)))\n
                goto LABEL_407043;\n
            v2 = 0;\n
            v1 = 0;\n
            v3 = 0;\n
            while (true)\n
            {\n
                v7 = v3;\n
                if (v7 >= 5)\n
                    break;\n
                if (*((*(&v4) + (v3 << 2) + 108)))\n
                {\n
                    v9 = ftop<4> - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v10 = v9 - 1;\n
                        [D] PutI(72:F64x8)[t6,0] = t9\n
                        [D] PutI(136:I8x8)[t6,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v10 = v9 - 1;\n
                        [D] PutI(72:F64x8)[t6,0] = t9\n
                        [D] PutI(136:I8x8)[t6,0] = 0x01\n
                    }\n
                    v11 = v10 - 1;\n
                    if ([D] GetI(136:I8x8)[t3,0])\n
                    {\n
                        v12 = v11 - 1;\n
                        [D] PutI(72:F64x8)[t1,0] = t4\n
                        [D] PutI(136:I8x8)[t1,0] = 0x01\n
                    }\n
                    else\n
                    {\n
                        v12 = v11 - 1;\n
                        [D] PutI(72:F64x8)[t1,0] = t4\n
                        [D] PutI(136:I8x8)[t1,0] = 0x01\n
                    }\n
                    [D] PutI(72:F64x8)[t1,1] = t2\n
                    [D] PutI(136:I8x8)[t1,1] = 0x01\n
                    [D] PutI(136:I8x8)[t1,0] = 0x00\n
                    v13 = v12 + 1;\n
                    v1 = ([D] GetI(136:I8x8)[t24,0] ? [D] GetI(72:F64x8)[t24,0] : nan);\n
                    [D] PutI(136:I8x8)[t24,0] = 0x00\n
                    v14 = v13 + 1;\n
                }\n
                v3 += 1;\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t1,0] = t4\n
                [D] PutI(136:I8x8)[t1,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t1,0] = t4\n
                [D] PutI(136:I8x8)[t1,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t2,0] = t5\n
            [D] PutI(136:I8x8)[t2,0] = 0x01\n
            [D] PutI(72:F64x8)[t15,0] = t19\n
            [D] PutI(136:I8x8)[t15,0] = 0x01\n
            [D] PutI(72:F64x8)[t15,1] = t12\n
            [D] PutI(136:I8x8)[t15,1] = 0x01\n
            v15 = CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69;\n
            [D] PutI(136:I8x8)[t35,0] = 0x00\n
            [D] PutI(72:F64x8)[t49,0] = t50\n
            [D] PutI(136:I8x8)[t49,0] = 0x01\n
            [D] PutI(136:I8x8)[t49,0] = 0x00\n
            if ((((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69) >> 6) & 1) == 1 && !([D] x86g_calculate_condition(0xa<32>, 0x0<32>, cc_dep1<4>, 0x0<32>, 0x0<32>)))\n
            {\n
                v6 = 0;\n
                v5 = 0;\n
                goto LABEL_407103;\n
            }\n
            v7 = *(&v4);\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t1,0] = t4\n
                [D] PutI(136:I8x8)[t1,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t1,0] = t4\n
                [D] PutI(136:I8x8)[t1,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t1,1] = t2\n
            [D] PutI(136:I8x8)[t1,1] = 0x01\n
            [D] PutI(136:I8x8)[t1,0] = 0x00\n
            v5 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
            [D] PutI(136:I8x8)[t26,0] = 0x00\n
        }\n
    }\n
LABEL_407103:\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
        return v7;\n
    }\n
    [D] PutI(72:F64x8)[t3,0] = t6\n
    [D] PutI(136:I8x8)[t3,0] = 0x01\n
    return v7;\n
}\n
", "4223243:sub_40710b": null, "4223248:cgc_SetValveOutput": null, "4223413:sub_4071b5": null, "4223424:cgc_SetSystemName": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SetSystemName(unsigned int v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = a0;\n
    v2 = v3;\n
    v1 = v4;\n
    if (v2)\n
        v4 = cgc_strncpy(v2 + 1, v1, 31);\n
    return v4;\n
}\n
", "4223521:sub_407221": null, "4223536:cgc_ChangeAerationPercent": null, "4223663:sub_4072af": null, "4223664:cgc_ChangeGlycerinRate": null, "4223791:sub_40732f": null, "4223792:cgc_ChangeAlumRate": null, "4223919:sub_4073af": null, "4223920:cgc_ChangeChlorineRate": null, "4224058:sub_40743a": null, "4224064:cgc_ChangeNumActiveFilters": "int cgc_ChangeNumActiveFilters(char v1[86], char a0)\n
{\n
    char v0[86];  // [bp-0x8]\n
    char v2[86];  // eax\n
    char v3[86];  // eax, Other Possible Types: unsigned int\n
\n
    *(&v0[0]) = v2;\n
    v3 = v1;\n
    *(&v0[0]) = v3;\n
    if (v0)\n
    {\n
        v3 = v0[0];\n
        if (v3 == 3)\n
        {\n
            v3 = a0;\n
            if (v3 >= 0)\n
            {\n
                v3 = a0;\n
                if (v3 <= v0[85])\n
                {\n
                    v3 = v0;\n
                    *((v3 + 84)) = a0;\n
                    return v0;\n
                }\n
            }\n
        }\n
    }\n
    return v3;\n
}\n
", "4224155:sub_40749b": null, "4224160:cgc_InitHeadworks": "typedef struct struct_0 {\n
    char padding_0[11836];\n
    char field_2e3c;\n
    char padding_2e3d[35];\n
    unsigned int field_2e60;\n
    unsigned int field_2e64;\n
    char padding_2e68[64];\n
    unsigned int field_2ea8;\n
    char padding_2eac[56];\n
    unsigned int field_2ee4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_Headworks;\n
\n
int cgc_InitHeadworks()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_Headworks, 0xe4);\n
    v4 = v0;\n
    v4->field_2e3c = 1;\n
    cgc_strncpy(&v4->padding_2e3d, &v4[1].padding_0[748], 31);\n
    v5 = v0;\n
    v5->field_2ee4 = &v5[1].padding_0[1196];\n
    v5->field_2ea8 = &v5->padding_0[10468];\n
    v5->field_2e64 = 0x403e0000;\n
    v5->field_2e60 = 0;\n
    v6 = v1;\n
    return v0;\n
}\n
", "4224304:cgc_InitHeadworksOutputValve": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
    char padding_31[10419];\n
    char field_28e4;\n
    char padding_28e5[167];\n
    unsigned int field_298c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_HeadworksOutputValve;\n
\n
int cgc_InitHeadworksOutputValve()\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_HeadworksOutputValve, 0xe4);\n
    v6 = v0;\n
    v6->field_28e4 = 5;\n
    cgc_strncpy(&v6->padding_28e5, &v6[1].padding_31[1845], 31);\n
    v7 = v0;\n
    v7->field_298c = &v7[1].padding_31[1147];\n
    for (v2 = 0; v2 < v0->field_30; v2 += 1)\n
    {\n
        v8 = v0;\n
        v9 = v2;\n
        *(&v8->padding_28e5[107 + 4 * v9]) = &v8[1].padding_31[7 + 228 * v9];\n
        v1 = v8->field_30;\n
        v11 = ftop<4> - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v12 = v11 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v12 = v11 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v13 = v12 - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t7,1] = t8\n
        [D] PutI(136:I8x8)[t7,1] = 0x01\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v15 = v14 + 1;\n
        *(&v8[1].padding_0[16 + 8 * v2]) = ([D] GetI(136:I8x8)[t39,0] ? [D] GetI(72:F64x8)[t39,0] : nan);\n
        [D] PutI(136:I8x8)[t39,0] = 0x00\n
        v16 = v15 + 1;\n
    }\n
    v17 = v3;\n
    return v2;\n
}\n
", "4224528:cgc_InitAsp": "typedef struct struct_0 {\n
    char padding_0[48];\n
    char field_30;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_Asp;\n
\n
int cgc_InitAsp()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ecx\n
    unsigned int v10;  // ecx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_Asp, 0x474);\n
    for (v2 = 0; v2 < v1->field_30; v2 += 1)\n
    {\n
        v6 = v1;\n
        *(&v6->padding_0[228 * v2 + 10696]) = 2;\n
        v0 = v2;\n
        cgc_cromu_sprintf(10697 + v6 + 228 * v0, v6 + 240);\n
        v7 = v1;\n
        *(&v7->padding_0[228 * v2 + 10864]) = &v7[213].padding_0[31];\n
        *(&v7->padding_0[228 * v2 + 10804]) = &v7[208].field_30;\n
        v8 = v2 * 228;\n
        *(&v7[219].padding_0[13 + v8]) = 0x40490000;\n
        *(&v7[219].padding_0[9 + v8]) = 0;\n
        v9 = v2 * 228;\n
        *(&v7[219].padding_0[21 + v9]) = 0x40b2c000;\n
        *(&v7[219].padding_0[17 + v9]) = 0;\n
        v10 = v2 * 228;\n
        *(&v7[219].padding_0[29 + v10]) = 0x40100000;\n
        *(&v7[219].padding_0[25 + v10]) = 0;\n
        v11 = v2 * 228;\n
        *(&v7[219].padding_0[37 + v11]) = 0x40340000;\n
        *(&v7[219].padding_0[33 + v11]) = 0;\n
    }\n
    v12 = v3;\n
    return v2;\n
}\n
", "4224872:sub_407768": null, "4224880:cgc_InitAspOutputValve": "extern char _GLOBAL_OFFSET_TABLE_[10241];\n
extern char cgc_AspOutputValve;\n
\n
int cgc_InitAspOutputValve()\n
{\n
    char v0[10241];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char v6[10241];  // ebx\n
    char v7[10241];  // eax\n
    char v8[10241];  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ebx\n
\n
    v3 = v5;\n
    *(&v0[0]) = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_bzero(&cgc_AspOutputValve, 0xe4);\n
    v6 = v0;\n
    v6[0x2800] = 5;\n
    cgc_strncpy(v6 + 1, &v6[1 + 2287], 31);\n
    for (v2 = 0; v2 < v0[48]; v2 += 1)\n
    {\n
        v7 = v0;\n
        *(&v7[1 + 167 + 4 * v2]) = &v7[1 + 455 + 228 * v2];\n
    }\n
    for (v2 = 0; v2 < v0[49]; v2 += 1)\n
    {\n
        v8 = v0;\n
        v9 = v2;\n
        *(&v8[1 + 107 + 4 * v9]) = &v8[228 * v9 + 9100];\n
        v1 = v8[49];\n
        v11 = ftop<4> - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v12 = v11 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v12 = v11 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v13 = v12 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t7,1] = t8\n
        [D] PutI(136:I8x8)[t7,1] = 0x01\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v15 = v14 + 1;\n
        *(&v8[1 + 187 + 8 * v2]) = ([D] GetI(136:I8x8)[t39,0] ? [D] GetI(72:F64x8)[t39,0] : nan);\n
        [D] PutI(136:I8x8)[t39,0] = 0x00\n
        v16 = v15 + 1;\n
    }\n
    v17 = v3;\n
    return v2;\n
}\n
", "4225167:sub_40788f": null, "4225168:cgc_InitFilters": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_Filter;\n
\n
int cgc_InitFilters()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v4;  // [bp+0x0]\n
    char *v5;  // [bp+0x4], Other Possible Types: unsigned int\n
    char *v6;  // [bp+0x8], Other Possible Types: unsigned int\n
    char v7;  // [bp+0xc]\n
    char v8;  // [bp+0x1b]\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // ecx\n
    char v12[9642];  // eax\n
    unsigned int v13;  // ebx\n
\n
    v3 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = &cgc_Filter;\n
    v1 = 1140;\n
    cgc_bzero(v5, v6);\n
    for (v8 = 0; v8 < *((*(&v7) + 49)); v8 += 1)\n
    {\n
        v10 = *(&v7);\n
        *((v10 + 9100 + v8 * 228)) = 3;\n
        v4 = v10 + 9100 + v8 * 228 + 1;\n
        v5 = v10 - 11754;\n
        v6 = v8;\n
        cgc_cromu_sprintf(v5, v6);\n
        v11 = *(&v7);\n
        *((v11 + 9100 + v8 * 228 + 168)) = v11 + 0x2800;\n
        *((v11 + 9100 + v8 * 228 + 108)) = v11 + 8872;\n
    }\n
    v12 = *(&v7);\n
    v12[9185] = 2;\n
    v12[9184] = 1;\n
    v12[9413] = 4;\n
    v12[9412] = 2;\n
    v12[9641] = 4;\n
    v12[9640] = 2;\n
    v13 = v3;\n
    return *(&v7);\n
}\n
", "4225450:sub_4079aa": null, "4225456:cgc_InitFilterOutputValve": "extern char _GLOBAL_OFFSET_TABLE_[8873];\n
extern char cgc_FilterOutputValve;\n
\n
int cgc_InitFilterOutputValve()\n
{\n
    char v0[8873];  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    char v6[8873];  // ebx\n
    char v7[8873];  // eax\n
    char v8[8873];  // eax\n
    unsigned int v9;  // ecx\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ebx\n
\n
    v3 = v5;\n
    *(&v0[0]) = &_GLOBAL_OFFSET_TABLE_[0];\n
    cgc_bzero(&cgc_FilterOutputValve, 0xe4);\n
    v6 = v0;\n
    v6[8872] = 5;\n
    cgc_strncpy(v6 + 1, &v6[1 + 3649], 31);\n
    for (v2 = 0; v2 < v0[49]; v2 += 1)\n
    {\n
        v7 = v0;\n
        *(&v7[1 + 167 + 4 * v2]) = &v7[1 + 227 + 228 * v2];\n
    }\n
    for (v2 = 0; v2 < v0[50]; v2 += 1)\n
    {\n
        v8 = v0;\n
        v9 = v2;\n
        *(&v8[1 + 107 + 4 * v9]) = &v8[228 * v9 + 12064];\n
        v1 = v8[50];\n
        v11 = ftop<4> - 1;\n
        if (![D] GetI(136:I8x8)[t3,0])\n
        {\n
            v12 = v11 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v12 = v11 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        v13 = v12 - 1;\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            v14 = v13 - 1;\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t7,1] = t8\n
        [D] PutI(136:I8x8)[t7,1] = 0x01\n
        [D] PutI(136:I8x8)[t7,0] = 0x00\n
        v15 = v14 + 1;\n
        *(&v8[1 + 187 + 8 * v2]) = ([D] GetI(136:I8x8)[t39,0] ? [D] GetI(72:F64x8)[t39,0] : nan);\n
        [D] PutI(136:I8x8)[t39,0] = 0x00\n
        v16 = v15 + 1;\n
    }\n
    v17 = v3;\n
    return v2;\n
}\n
", "4225743:sub_407acf": null, "4225744:cgc_InitDisinfection": "typedef struct struct_0 {\n
    char padding_0[50];\n
    char field_32;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_Disinfection;\n
\n
int cgc_InitDisinfection()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // ebx\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_Disinfection, 0x474);\n
    for (v2 = 0; v2 < v1->field_32; v2 += 1)\n
    {\n
        v6 = v1;\n
        *(&v6->padding_0[228 * v2 + 12064]) = 4;\n
        v0 = v2;\n
        cgc_cromu_sprintf(12065 + v6 + 228 * v0, &v6[230].padding_0[15]);\n
        v7 = v1;\n
        *(&v7->padding_0[228 * v2 + 12232]) = &v7[173].padding_0[49];\n
        *(&v7->padding_0[228 * v2 + 12172]) = &v7[263].padding_0[19];\n
        v8 = v2 * 228;\n
        *(&v7[238].padding_0[18 + v8]) = 0x3ff00000;\n
        *(&v7[238].padding_0[14 + v8]) = 0;\n
    }\n
    v9 = v3;\n
    return v2;\n
}\n
", "4225989:sub_407bc5": null, "4226000:cgc_InitDisinfectionOutputValve": "typedef struct struct_0 {\n
    char padding_0[50];\n
    char field_32;\n
    char padding_33[13381];\n
    char field_3478;\n
    char padding_3479[107];\n
    unsigned int field_34e4;\n
    char padding_34e8[76];\n
    unsigned int field_3534;\n
    unsigned int field_3538;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_DisinfectionOutputValve;\n
\n
int cgc_InitDisinfectionOutputValve()\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // ebx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    unsigned int v8;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_DisinfectionOutputValve, 0xe4);\n
    v5 = v0;\n
    v5->field_3478 = 5;\n
    cgc_strncpy(&v5->padding_3479, &v5->padding_33[12465], 31);\n
    for (v1 = 0; v1 < v0->field_32; v1 += 1)\n
    {\n
        v6 = v0;\n
        *(&v6->padding_34e8[56 + 4 * v1]) = &v6->padding_33[12013 + 228 * v1];\n
    }\n
    v7 = v0;\n
    v7->field_34e4 = &v7->padding_33[401];\n
    v7->field_3538 = 0x40590000;\n
    v7->field_3534 = 0;\n
    v8 = v2;\n
    return v0;\n
}\n
", "4226215:sub_407ca7": null, "4226224:cgc_InitEffluent": "typedef struct struct_0 {\n
    char padding_0[452];\n
    char field_1c4;\n
    char padding_1c5[167];\n
    unsigned int field_26c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_Effluent;\n
\n
int cgc_InitEffluent()\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    struct_0 *v4;  // ebx\n
    struct_0 *v5;  // eax\n
    unsigned int v6;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_bzero(&cgc_Effluent, 0xe4);\n
    v4 = v0;\n
    v4->field_1c4 = 6;\n
    cgc_strncpy(&v4->padding_1c5, &v4[20].padding_0[227], 31);\n
    v5 = v0;\n
    v5->field_26c = &v5[21].padding_0[328];\n
    v6 = v1;\n
    return v0;\n
}\n
", "4226340:sub_407d24": null, "4226352:cgc_CheckEffluentQuality": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckEffluentQuality()\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    char v1[557];  // [bp+0x4]\n
    unsigned long v2;  // [bp+0x8]\n
    unsigned long v3;  // [bp+0x10]\n
    unsigned long v4;  // [bp+0x18]\n
    unsigned long v5;  // [bp+0x20]\n
    char v6[557];  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t16,1] = t17\n
    [D] PutI(136:I8x8)[t16,1] = 0x01\n
    [D] PutI(72:F64x8)[t36,0] = t40\n
    [D] PutI(136:I8x8)[t36,0] = 0x01\n
    [D] PutI(72:F64x8)[t36,2] = t33\n
    [D] PutI(136:I8x8)[t36,2] = 0x01\n
    [D] PutI(72:F64x8)[t51,1] = t52\n
    [D] PutI(136:I8x8)[t51,1] = 0x01\n
    [D] PutI(136:I8x8)[t51,0] = 0x00\n
    v5 = ([D] GetI(136:I8x8)[t76,0] ? [D] GetI(72:F64x8)[t76,0] : nan);\n
    [D] PutI(136:I8x8)[t76,0] = 0x00\n
    [D] PutI(72:F64x8)[t85,0] = t88\n
    [D] PutI(136:I8x8)[t85,0] = 0x01\n
    [D] PutI(72:F64x8)[t97,0] = t100\n
    [D] PutI(136:I8x8)[t97,0] = 0x01\n
    [D] PutI(72:F64x8)[t107,0] = t108\n
    [D] PutI(136:I8x8)[t107,0] = 0x01\n
    [D] PutI(72:F64x8)[t124,1] = t125\n
    [D] PutI(136:I8x8)[t124,1] = 0x01\n
    [D] PutI(136:I8x8)[t124,0] = 0x00\n
    v4 = ([D] GetI(136:I8x8)[t149,0] ? [D] GetI(72:F64x8)[t149,0] : nan);\n
    [D] PutI(136:I8x8)[t149,0] = 0x00\n
    [D] PutI(72:F64x8)[t158,0] = t161\n
    [D] PutI(136:I8x8)[t158,0] = 0x01\n
    [D] PutI(72:F64x8)[t170,0] = t173\n
    [D] PutI(136:I8x8)[t170,0] = 0x01\n
    [D] PutI(72:F64x8)[t180,0] = t181\n
    [D] PutI(136:I8x8)[t180,0] = 0x01\n
    [D] PutI(72:F64x8)[t197,1] = t198\n
    [D] PutI(136:I8x8)[t197,1] = 0x01\n
    [D] PutI(136:I8x8)[t197,0] = 0x00\n
    v3 = ([D] GetI(136:I8x8)[t222,0] ? [D] GetI(72:F64x8)[t222,0] : nan);\n
    [D] PutI(136:I8x8)[t222,0] = 0x00\n
    [D] PutI(72:F64x8)[t231,0] = t234\n
    [D] PutI(136:I8x8)[t231,0] = 0x01\n
    [D] PutI(72:F64x8)[t243,0] = t246\n
    [D] PutI(136:I8x8)[t243,0] = 0x01\n
    [D] PutI(72:F64x8)[t253,2] = t254\n
    [D] PutI(136:I8x8)[t253,2] = 0x01\n
    [D] PutI(136:I8x8)[t253,0] = 0x00\n
    [D] PutI(72:F64x8)[t273,1] = t274\n
    [D] PutI(136:I8x8)[t273,1] = 0x01\n
    [D] PutI(136:I8x8)[t273,0] = 0x00\n
    v2 = ([D] GetI(136:I8x8)[t298,0] ? [D] GetI(72:F64x8)[t298,0] : nan);\n
    [D] PutI(136:I8x8)[t298,0] = 0x00\n
    [D] PutI(72:F64x8)[t307,0] = t310\n
    [D] PutI(136:I8x8)[t307,0] = 0x01\n
    [D] PutI(72:F64x8)[t319,0] = t322\n
    [D] PutI(136:I8x8)[t319,0] = 0x01\n
    [D] PutI(72:F64x8)[t333,0] = t337\n
    [D] PutI(136:I8x8)[t333,0] = 0x01\n
    [D] PutI(72:F64x8)[t333,1] = t330\n
    [D] PutI(136:I8x8)[t333,1] = 0x01\n
    [D] PutI(136:I8x8)[t353,0] = 0x00\n
    [D] PutI(72:F64x8)[t367,0] = t368\n
    [D] PutI(136:I8x8)[t367,0] = 0x01\n
    [D] PutI(136:I8x8)[t367,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t353,0] ? [D] GetI(72:F64x8)[t353,0] : nan), ([D] GetI(136:I8x8)[t353,1] ? [D] GetI(72:F64x8)[t353,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t353,0] ? [D] GetI(72:F64x8)[t353,0] : nan), ([D] GetI(136:I8x8)[t353,1] ? [D] GetI(72:F64x8)[t353,1] : nan)) & 69) >> 6)) & 1) == 1)\n
    {\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        if ([D] GetI(136:I8x8)[t3,0])\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        else\n
        {\n
            [D] PutI(72:F64x8)[t3,0] = t6\n
            [D] PutI(136:I8x8)[t3,0] = 0x01\n
        }\n
        [D] PutI(72:F64x8)[t5,0] = t9\n
        [D] PutI(136:I8x8)[t5,0] = 0x01\n
        [D] PutI(72:F64x8)[t5,1] = t2\n
        [D] PutI(136:I8x8)[t5,1] = 0x01\n
        [D] PutI(136:I8x8)[t25,0] = 0x00\n
        [D] PutI(72:F64x8)[t39,0] = t40\n
        [D] PutI(136:I8x8)[t39,0] = 0x01\n
        [D] PutI(136:I8x8)[t39,0] = 0x00\n
        if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) == 1)\n
        {\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t5,0] = t9\n
            [D] PutI(136:I8x8)[t5,0] = 0x01\n
            [D] PutI(72:F64x8)[t5,1] = t2\n
            [D] PutI(136:I8x8)[t5,1] = 0x01\n
            [D] PutI(136:I8x8)[t25,0] = 0x00\n
            [D] PutI(72:F64x8)[t39,0] = t40\n
            [D] PutI(136:I8x8)[t39,0] = 0x01\n
            [D] PutI(136:I8x8)[t39,0] = 0x00\n
            if (((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t25,0] ? [D] GetI(72:F64x8)[t25,0] : nan), ([D] GetI(136:I8x8)[t25,1] ? [D] GetI(72:F64x8)[t25,1] : nan)) & 69) >> 6)) & 1) == 1)\n
            {\n
                if ([D] GetI(136:I8x8)[t3,0])\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                else\n
                {\n
                    [D] PutI(72:F64x8)[t3,0] = t6\n
                    [D] PutI(136:I8x8)[t3,0] = 0x01\n
                }\n
                [D] PutI(72:F64x8)[t2,0] = t5\n
                [D] PutI(136:I8x8)[t2,0] = 0x01\n
                [D] PutI(72:F64x8)[t15,0] = t19\n
                [D] PutI(136:I8x8)[t15,0] = 0x01\n
                [D] PutI(72:F64x8)[t15,1] = t12\n
                [D] PutI(136:I8x8)[t15,1] = 0x01\n
                [D] PutI(136:I8x8)[t35,0] = 0x00\n
                [D] PutI(72:F64x8)[t49,0] = t50\n
                [D] PutI(136:I8x8)[t49,0] = 0x01\n
                [D] PutI(136:I8x8)[t49,0] = 0x00\n
                if (((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t35,0] ? [D] GetI(72:F64x8)[t35,0] : nan), ([D] GetI(136:I8x8)[t35,1] ? [D] GetI(72:F64x8)[t35,1] : nan)) & 69) >> 6)) & 1) == 1)\n
                {\n
                    v6 = v1[538];\n
                    if (v6)\n
                        return v6;\n
                }\n
            }\n
        }\n
    }\n
    v6 = v1;\n
    *((v6 + 556)) = *((v6 + 556)) + 1;\n
    return v6;\n
}\n
", "4226620:sub_407e3c": null, "4226624:cgc_PrintPlantSchematic": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintPlantSchematic()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // ebx\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_cromu_puts(\"Plant Schematic\");\n
    cgc_cromu_puts(v0 - 11714);\n
    cgc_cromu_puts(v0 - 11580);\n
    cgc_cromu_puts(v0 - 11446);\n
    cgc_cromu_puts(v0 - 11312);\n
    cgc_cromu_puts(v0 - 11178);\n
    cgc_cromu_puts(v0 - 11178);\n
    cgc_cromu_puts(v0 - 11044);\n
    cgc_cromu_puts(v0 - 10910);\n
    cgc_cromu_puts(v0 - 10776);\n
    cgc_cromu_puts(v0 - 10910);\n
    cgc_cromu_puts(v0 - 10642);\n
    cgc_cromu_puts(v0 - 11178);\n
    cgc_cromu_puts(v0 - 11178);\n
    cgc_cromu_puts(v0 - 11312);\n
    cgc_cromu_puts(v0 - 10508);\n
    cgc_cromu_puts(v0 - 11580);\n
    v4 = v1;\n
    return cgc_cromu_puts(v0 - 11714);\n
}\n
", "4226976:cgc_PrintPlantStatus": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_PrintPlantStatus()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_PrintPlantStatusBuf();\n
    v5 = v2;\n
    return cgc_cromu_puts(v1);\n
}\n
", "4227033:sub_407fd9": null, "4227040:cgc_PrintPlantStatusBuf": null, "4230744:sub_408e58": null, "4230752:cgc_InitPlant": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_InitPlant()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // ebx\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_InitInfluent();\n
    cgc_InitHeadworks();\n
    cgc_InitHeadworksOutputValve();\n
    cgc_InitAsp();\n
    cgc_InitAspOutputValve();\n
    cgc_InitFilters();\n
    cgc_InitFilterOutputValve();\n
    cgc_InitDisinfection();\n
    cgc_InitDisinfectionOutputValve();\n
    v5 = v1;\n
    return cgc_InitEffluent();\n
}\n
", "4230858:sub_408eca": null, "4230864:main": "extern char _GLOBAL_OFFSET_TABLE_[557];\n
extern struct_0 *rand_page;\n
\n
int main(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    char v1[557];  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    char v8[557];  // ebx\n
    char v9[557];  // ebx\n
\n
    v5 = v7;\n
    *(&v1[0]) = &_GLOBAL_OFFSET_TABLE_[0];\n
    v4 = 0;\n
    v3 = v6;\n
    v2 = a0;\n
    cgc_seed_prng(rand_page->field_0);\n
    cgc_InitPlant();\n
    cgc_RunSimStep();\n
    cgc_PrintPlantSchematic();\n
    cgc_PrintPlantStatus();\n
    cgc_PrintSystemBanner();\n
    while (v1[57] < 254)\n
    {\n
        if (!cgc_PrintMenu())\n
            break;\n
        if (cgc_RunSimStep())\n
        {\n
            v8 = v1;\n
            v8[57] = v8[57] + 1;\n
            cgc_CheckEffluentQuality();\n
            cgc_RandomInfluent();\n
        }\n
        else\n
        {\n
            cgc_cromu_puts(&v1[15 + 244]);\n
        }\n
    }\n
    if (v1[57] < 24)\n
    {\n
        cgc_cromu_puts(&v1[15 + 4]);\n
        return 0;\n
    }\n
    if (v1[556] <= 5)\n
    {\n
        cgc_SimulateEffluent();\n
        cgc_cromu_puts(&v1[15 + 85]);\n
    }\n
    else\n
    {\n
        v9 = v1;\n
        v0 = v9[556];\n
        cgc_cromu_printf(&v9[15 + 158]);\n
    }\n
    return 0;\n
}\n
", "4231232:cgc_FindValveOutput": "int cgc_FindValveOutput(char *v4, unsigned int a0)\n
{\n
    char v0;  // [bp-0x11]\n
    unsigned int v1;  // [bp-0x10]\n
    char *v2;  // [bp-0xc]\n
    char v3;  // [bp-0x5]\n
\n
    v2 = v4;\n
    v1 = a0;\n
    if (v2 && *(v2) == 5 && v1)\n
    {\n
        v0 = 0;\n
        while (true)\n
        {\n
            if (v0 >= 5)\n
            {\n
                v3 = 255;\n
                return v3;\n
            }\n
            if (*(&v2[108 + 4 * v0]) == v1)\n
            {\n
                v3 = v0;\n
                return v3;\n
            }\n
            v0 += 1;\n
        }\n
    }\n
    v3 = 255;\n
    return v3;\n
}\n
", "4231392:cgc_SimulateValve": "typedef struct struct_0 {\n
    char padding_0[86];\n
    char field_56;\n
    char padding_57[9];\n
    unsigned int field_60;\n
    char padding_64[28];\n
    unsigned int field_80;\n
    char padding_84[4];\n
    unsigned int field_88;\n
    char padding_8c[4];\n
    unsigned int field_90;\n
    char padding_94[4];\n
    unsigned int field_98;\n
    char padding_9c[4];\n
    unsigned int field_a0;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[86];\n
    char field_56;\n
} struct_1;\n
\n
int cgc_SimulateValve(struct_0 *v3)\n
{\n
    char v0;  // [bp-0x11]\n
    struct_1 *v1;  // [bp-0xc]\n
    struct_0 *v2;  // [bp-0x8]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v30;  // ftop\n
    unsigned int v31;  // ftop\n
\n
    v2 = v3;\n
    v4 = v2;\n
    *(&v4->padding_84[0]) = 0;\n
    v4->field_80 = 0;\n
    v5 = v2;\n
    *(&v5->padding_8c[0]) = 0;\n
    v5->field_88 = 0;\n
    v6 = v2;\n
    *(&v6->padding_94[0]) = 0;\n
    v6->field_90 = 0;\n
    v7 = v2;\n
    *(&v7->padding_9c[0]) = 0;\n
    v7->field_98 = 0;\n
    v8 = v2;\n
    *(&v8[1].padding_0[0]) = 0;\n
    v8->field_a0 = 0;\n
    v9 = v2;\n
    *(&v9->padding_64[0]) = 0;\n
    v9->field_60 = 0;\n
    v2->field_56 = 1;\n
    for (v0 = 0; v0 < 5; v0 += 1)\n
    {\n
        v1 = *(&v2[1].padding_0[4 + 4 * v0]);\n
        if (v1)\n
        {\n
            v11 = ftop<4> - 1;\n
            if (![D] GetI(136:I8x8)[t7,0])\n
            {\n
                v12 = v11 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v12 = v11 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            v13 = v12 - 1;\n
            if ([D] GetI(136:I8x8)[t7,0])\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v14 = v13 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t31,1] = t32\n
            [D] PutI(136:I8x8)[t31,1] = 0x01\n
            [D] PutI(136:I8x8)[t31,0] = 0x00\n
            v15 = v14 + 1;\n
            v2->field_80 = ([D] GetI(136:I8x8)[t56,0] ? [D] GetI(72:F64x8)[t56,0] : nan);\n
            [D] PutI(136:I8x8)[t56,0] = 0x00\n
            [D] PutI(72:F64x8)[t68,0] = t71\n
            [D] PutI(136:I8x8)[t68,0] = 0x01\n
            v17 = v15 - 0 - 1;\n
            [D] PutI(72:F64x8)[t83,0] = t86\n
            [D] PutI(136:I8x8)[t83,0] = 0x01\n
            [D] PutI(72:F64x8)[t93,1] = t94\n
            [D] PutI(136:I8x8)[t93,1] = 0x01\n
            [D] PutI(136:I8x8)[t93,0] = 0x00\n
            v18 = v17 + 1;\n
            v2->field_88 = ([D] GetI(136:I8x8)[t118,0] ? [D] GetI(72:F64x8)[t118,0] : nan);\n
            [D] PutI(136:I8x8)[t118,0] = 0x00\n
            v19 = v18 - 0;\n
            [D] PutI(72:F64x8)[t130,0] = t133\n
            [D] PutI(136:I8x8)[t130,0] = 0x01\n
            v20 = v19 - 1;\n
            [D] PutI(72:F64x8)[t145,0] = t148\n
            [D] PutI(136:I8x8)[t145,0] = 0x01\n
            [D] PutI(72:F64x8)[t155,1] = t156\n
            [D] PutI(136:I8x8)[t155,1] = 0x01\n
            [D] PutI(136:I8x8)[t155,0] = 0x00\n
            v21 = v20 + 1;\n
            v2->field_90 = ([D] GetI(136:I8x8)[t180,0] ? [D] GetI(72:F64x8)[t180,0] : nan);\n
            [D] PutI(136:I8x8)[t180,0] = 0x00\n
            v22 = v21 - 0;\n
            [D] PutI(72:F64x8)[t192,0] = t195\n
            [D] PutI(136:I8x8)[t192,0] = 0x01\n
            v23 = v22 - 1;\n
            [D] PutI(72:F64x8)[t207,0] = t210\n
            [D] PutI(136:I8x8)[t207,0] = 0x01\n
            [D] PutI(72:F64x8)[t217,1] = t218\n
            [D] PutI(136:I8x8)[t217,1] = 0x01\n
            [D] PutI(136:I8x8)[t217,0] = 0x00\n
            v24 = v23 + 1;\n
            v2->field_98 = ([D] GetI(136:I8x8)[t242,0] ? [D] GetI(72:F64x8)[t242,0] : nan);\n
            [D] PutI(136:I8x8)[t242,0] = 0x00\n
            v25 = v24 - 0;\n
            [D] PutI(72:F64x8)[t254,0] = t257\n
            [D] PutI(136:I8x8)[t254,0] = 0x01\n
            v26 = v25 - 1;\n
            [D] PutI(72:F64x8)[t269,0] = t272\n
            [D] PutI(136:I8x8)[t269,0] = 0x01\n
            [D] PutI(72:F64x8)[t279,1] = t280\n
            [D] PutI(136:I8x8)[t279,1] = 0x01\n
            [D] PutI(136:I8x8)[t279,0] = 0x00\n
            v27 = v26 + 1;\n
            v2->field_a0 = ([D] GetI(136:I8x8)[t304,0] ? [D] GetI(72:F64x8)[t304,0] : nan);\n
            [D] PutI(136:I8x8)[t304,0] = 0x00\n
            v28 = v27 - 0;\n
            [D] PutI(72:F64x8)[t316,0] = t319\n
            [D] PutI(136:I8x8)[t316,0] = 0x01\n
            v29 = v28 - 1;\n
            [D] PutI(72:F64x8)[t331,0] = t334\n
            [D] PutI(136:I8x8)[t331,0] = 0x01\n
            [D] PutI(72:F64x8)[t341,1] = t342\n
            [D] PutI(136:I8x8)[t341,1] = 0x01\n
            [D] PutI(136:I8x8)[t341,0] = 0x00\n
            v30 = v29 + 1;\n
            v2->field_60 = ([D] GetI(136:I8x8)[t366,0] ? [D] GetI(72:F64x8)[t366,0] : nan);\n
            [D] PutI(136:I8x8)[t366,0] = 0x00\n
            v31 = v30 + 1;\n
            if (!v1->field_56)\n
                v2->field_56 = 0;\n
        }\n
    }\n
    return v0;\n
}\n
", "4231817:sub_409289": null, "4231824:cgc_CheckValveOutputs": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CheckValveOutputs()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    char v4;  // [bp+0x0]\n
    unsigned int v5;  // [bp+0x4]\n
    char v6;  // [bp+0x7]\n
    void* v7;  // [bp+0x8], Other Possible Types: unsigned long\n
    void* v8;  // [bp+0xc]\n
    char v9;  // [bp+0x17]\n
    unsigned int v10;  // ftop\n
    unsigned int v11;  // ftop\n
    unsigned int v12;  // ftop\n
    unsigned int v13;  // ftop\n
    unsigned int v14;  // ftop\n
    unsigned int v15;  // ftop\n
    unsigned int v16;  // ftop\n
    unsigned int v17;  // ftop\n
    unsigned int v18;  // ftop\n
    unsigned int v19;  // ftop\n
    unsigned int v20;  // ftop\n
    unsigned int v21;  // ftop\n
    unsigned int v22;  // ftop\n
    unsigned int v23;  // ftop\n
    unsigned int v24;  // ftop\n
    unsigned int v25;  // ftop\n
    unsigned int v26;  // ftop\n
    unsigned int v27;  // ftop\n
    unsigned int v28;  // ftop\n
    unsigned int v29;  // ftop\n
    unsigned int v30;  // ftop\n
    unsigned int v31;  // ftop\n
    unsigned int v32;  // ftop\n
    unsigned int v33;  // ftop\n
    unsigned int v34;  // ftop\n
    unsigned int v35;  // ftop\n
    unsigned int v36;  // ftop\n
    unsigned int v37;  // ftop\n
    unsigned int v38;  // ftop\n
    unsigned int v39;  // ftop\n
    unsigned int v40;  // ftop\n
    unsigned int v41;  // ftop\n
    unsigned int v42;  // ftop\n
    unsigned int v43;  // ftop\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = 0; *(&v5 + 3) < 5; v6 = *(&v5 + 3) + 1)\n
    {\n
        if (*((*(&v4) + 10468 + (*(&v5 + 3) << 2) + 108)))\n
        {\n
            if (![D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t1,1] = t2\n
            [D] PutI(136:I8x8)[t1,1] = 0x01\n
            [D] PutI(136:I8x8)[t1,0] = 0x00\n
            v7 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
            [D] PutI(136:I8x8)[t26,0] = 0x00\n
        }\n
    }\n
    v11 = v10 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v12 = v11 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v12 = v11 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v13 = v12 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v14 = v13 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v14 = v13 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v15 = v14 + 1;\n
    [D] PutI(72:F64x8)[t19,0] = t20\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(136:I8x8)[t19,0] = 0x00\n
    v16 = v15 + 1;\n
    if (((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = 0;\n
    v7 = 0;\n
    for (v6 = 0; *(&v5 + 3) < 5; v6 = *(&v5 + 3) + 1)\n
    {\n
        if (*((*(&v4) + 0x2800 + (*(&v5 + 3) << 2) + 108)))\n
        {\n
            v17 = v16 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v18 = v17 - 1;\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            else\n
            {\n
                v18 = v17 - 1;\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            v19 = v18 - 1;\n
            if (![D] GetI(136:I8x8)[t3,0])\n
            {\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v20 = v19 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t1,1] = t2\n
            [D] PutI(136:I8x8)[t1,1] = 0x01\n
            [D] PutI(136:I8x8)[t1,0] = 0x00\n
            v21 = v20 + 1;\n
            v7 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
            [D] PutI(136:I8x8)[t26,0] = 0x00\n
            v16 = v21 + 1;\n
        }\n
    }\n
    v22 = v16 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v23 = v22 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v23 = v22 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v24 = v23 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v25 = v24 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v25 = v24 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v26 = v25 + 1;\n
    [D] PutI(72:F64x8)[t19,0] = t20\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(136:I8x8)[t19,0] = 0x00\n
    v27 = v26 + 1;\n
    if (((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = 0;\n
    v7 = 0;\n
    for (v6 = 0; *(&v5 + 3) < 5; v6 = *(&v5 + 3) + 1)\n
    {\n
        if (*((*(&v4) + 8872 + (*(&v5 + 3) << 2) + 108)))\n
        {\n
            v28 = v27 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v29 = v28 - 1;\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            else\n
            {\n
                v29 = v28 - 1;\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            v30 = v29 - 1;\n
            if (![D] GetI(136:I8x8)[t3,0])\n
            {\n
                v31 = v30 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v31 = v30 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t1,1] = t2\n
            [D] PutI(136:I8x8)[t1,1] = 0x01\n
            [D] PutI(136:I8x8)[t1,0] = 0x00\n
            v32 = v31 + 1;\n
            v7 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
            [D] PutI(136:I8x8)[t26,0] = 0x00\n
            v27 = v32 + 1;\n
        }\n
    }\n
    v33 = v27 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v34 = v33 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v34 = v33 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v35 = v34 - 1;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        v36 = v35 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        v36 = v35 - 1;\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    v37 = v36 + 1;\n
    [D] PutI(72:F64x8)[t19,0] = t20\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(136:I8x8)[t19,0] = 0x00\n
    v38 = v37 + 1;\n
    if (((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69) >> 6)) & 1) != 1)\n
    {\n
        v9 = 0;\n
        return v9;\n
    }\n
    v8 = 0;\n
    v7 = 0;\n
    for (v6 = 0; *(&v5 + 3) < 5; v6 = *(&v5 + 3) + 1)\n
    {\n
        if (*((*(&v4) + 13432 + (*(&v5 + 3) << 2) + 108)))\n
        {\n
            v39 = v38 - 1;\n
            if (![D] GetI(136:I8x8)[t3,0])\n
            {\n
                v40 = v39 - 1;\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            else\n
            {\n
                v40 = v39 - 1;\n
                [D] PutI(72:F64x8)[t6,0] = t9\n
                [D] PutI(136:I8x8)[t6,0] = 0x01\n
            }\n
            v41 = v40 - 1;\n
            if ([D] GetI(136:I8x8)[t3,0])\n
            {\n
                v42 = v41 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            else\n
            {\n
                v42 = v41 - 1;\n
                [D] PutI(72:F64x8)[t3,0] = t6\n
                [D] PutI(136:I8x8)[t3,0] = 0x01\n
            }\n
            [D] PutI(72:F64x8)[t1,1] = t2\n
            [D] PutI(136:I8x8)[t1,1] = 0x01\n
            [D] PutI(136:I8x8)[t1,0] = 0x00\n
            v43 = v42 + 1;\n
            v7 = ([D] GetI(136:I8x8)[t26,0] ? [D] GetI(72:F64x8)[t26,0] : nan);\n
            [D] PutI(136:I8x8)[t26,0] = 0x00\n
            v38 = v43 + 1;\n
        }\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(136:I8x8)[t5,0] = 0x00\n
    [D] PutI(72:F64x8)[t19,0] = t20\n
    [D] PutI(136:I8x8)[t19,0] = 0x01\n
    [D] PutI(136:I8x8)[t19,0] = 0x00\n
    if (((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69 | ((CmpF(([D] GetI(136:I8x8)[t5,0] ? [D] GetI(72:F64x8)[t5,0] : nan), ([D] GetI(136:I8x8)[t5,1] ? [D] GetI(72:F64x8)[t5,1] : nan)) & 69) >> 6)) & 1) == 1)\n
    {\n
        v9 = 1;\n
        return v9;\n
    }\n
    v9 = 0;\n
    return v9;\n
}\n
", "4232458:sub_40950a": null, "4232464:cgc_SimulateAsp": null, "4233851:sub_409a7b": null, "4233856:cgc_SimulateFilter": null, "4235077:sub_409f45": null, "4235088:cgc_SimulateDisinfection": null, "4236335:sub_40a42f": null, "4236336:cgc_SimulateEffluent": null, "4236726:sub_40a5b6": null, "4236736:cgc_SimulateHeadworks": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_0 *g_411374;\n
\n
int cgc_SimulateHeadworks()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned long long v1[21];  // [bp-0x8]\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v1[0]) = g_411374;\n
    if (!v1)\n
        return g_411374;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    v3 = v0 + 11836;\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *((v3 + 128)) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *((v3 + 128)) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        *((v3 + 136)) = [D] GetI(72:F64x8)[t6,0];\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    else\n
    {\n
        *((v3 + 136)) = nan;\n
        [D] PutI(136:I8x8)[t6,0] = 0x00\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    if ([D] GetI(136:I8x8)[t3,0])\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    else\n
    {\n
        [D] PutI(72:F64x8)[t3,0] = t6\n
        [D] PutI(136:I8x8)[t3,0] = 0x01\n
    }\n
    [D] PutI(72:F64x8)[t7,1] = t8\n
    [D] PutI(136:I8x8)[t7,1] = 0x01\n
    [D] PutI(136:I8x8)[t7,0] = 0x00\n
    *((v3 + 144)) = ([D] GetI(136:I8x8)[t32,0] ? [D] GetI(72:F64x8)[t32,0] : nan);\n
    [D] PutI(136:I8x8)[t32,0] = 0x00\n
    [D] PutI(72:F64x8)[t44,0] = t47\n
    [D] PutI(136:I8x8)[t44,0] = 0x01\n
    *((v3 + 152)) = ([D] GetI(136:I8x8)[t59,0] ? [D] GetI(72:F64x8)[t59,0] : nan);\n
    [D] PutI(136:I8x8)[t59,0] = 0x00\n
    [D] PutI(72:F64x8)[t71,0] = t74\n
    [D] PutI(136:I8x8)[t71,0] = 0x01\n
    *((v3 + 160)) = ([D] GetI(136:I8x8)[t86,0] ? [D] GetI(72:F64x8)[t86,0] : nan);\n
    [D] PutI(136:I8x8)[t86,0] = 0x00\n
    return v0 + 11836;\n
}\n
", "4236899:sub_40a663": null, "4236912:cgc_RunSimStep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RunSimStep()\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_CheckValveOutputs())\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    cgc_SimulateHeadworks();\n
    cgc_SimulateValve(v0 + 10468);\n
    cgc_SimulateAsp();\n
    cgc_SimulateValve(v0 + 0x2800);\n
    cgc_SimulateFilter();\n
    cgc_SimulateValve(v0 + 8872);\n
    cgc_SimulateDisinfection();\n
    cgc_SimulateValve(v0 + 13432);\n
    cgc_SimulateEffluent();\n
    v1 = 1;\n
    return v1;\n
}\n
", "4237096:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_rint": null, "5242900:cgc_log10": null, "5242904:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}