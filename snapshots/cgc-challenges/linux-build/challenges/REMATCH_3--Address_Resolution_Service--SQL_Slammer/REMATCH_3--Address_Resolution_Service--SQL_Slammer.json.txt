{"4202496:_init": "extern struct_0 *g_408118;\n
\n
int _init()\n
{\n
    if (g_408118)\n
    {\n
        g_408118();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:cgc_pow": "// attributes: PLT stub\n
int cgc_pow()\n
{\n
    ::libc.so.0::cgc_pow();\n
    return;\n
}\n
", "4202576:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202592:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4202608:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202624:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202640:cgc_rint": "// attributes: PLT stub\n
int cgc_rint()\n
{\n
    ::libc.so.0::cgc_rint();\n
    return;\n
}\n
", "4202656:cgc_log10": "// attributes: PLT stub\n
int cgc_log10()\n
{\n
    ::libc.so.0::cgc_log10();\n
    return;\n
}\n
", "4202672:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202688:sub_4020c0": "int sub_4020c0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202694:sub_4020c6": null, "4202704:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202747:sub_4020fb": null, "4202748:sub_4020fc": "int sub_4020fc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202752:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202756:sub_402104": null, "4202768:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 24591;\n
    v6 = v5 + 14;\n
    v7 = v5 + 14;\n
    if (v7 == v6)\n
        return v5 + 14;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202819:sub_402143": "int sub_402143()\n
{\n
}\n
", "4202825:sub_402149": "int sub_402149()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202832:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 24527;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 14;\n
    v9 = (v6 + 14 - (v6 + 14) >> 31) + (14 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202903:sub_402197": "int sub_402197()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202912:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408114;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408114)\n
    {\n
        v0 = __dso_handle;\n
        sub_4020c0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202987:sub_4021eb": "int sub_4021eb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202992:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4203001:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4203005:sub_4021fd": null, "4203008:cgc_isdigit": "int cgc_isdigit(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 48 && v1 <= 57)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203062:sub_402236": null, "4203072:cgc_isupper": "int cgc_isupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 65 && v1 <= 90)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203126:sub_402276": null, "4203136:cgc_islower": "int cgc_islower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 97 && v1 <= 122)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203190:sub_4022b6": null, "4203200:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isupper(v3) && !cgc_islower(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203296:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!cgc_isalpha(v3) && !cgc_isdigit(v3))\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = 1;\n
    return v1;\n
}\n
", "4203392:cgc_isprint": "int cgc_isprint(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 >= 32 && v1 != 127)\n
    {\n
        v0 = 1;\n
        return v0;\n
    }\n
    v0 = 0;\n
    return v0;\n
}\n
", "4203446:sub_4023b6": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + -32;\n
    return v0;\n
}\n
", "4203530:sub_40240a": null, "4203536:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 + 32;\n
    return v0;\n
}\n
", "4203610:sub_40245a": null, "4203616:cgc_isspace": "int cgc_isspace(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    if (v1 != 32 && v1 != 9 && v1 != 10 && v1 != 11 && v1 != 12 && v1 != 13)\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = 1;\n
    return v0;\n
}\n
", "4203710:sub_4024be": null, "4203712:cgc_InitializeRandomness": "int cgc_InitializeRandomness()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return cgc_srand(v2, *(&v0));\n
}\n
", "4203740:sub_4024dc": null, "4203744:cgc_GenerateRandomString": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_GenerateRandomString(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    char *v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 <= 0)\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v3 = cgc_calloc();\n
    for (v2 = 0; v2 < v5; v2 += 1)\n
    {\n
        v0 = 122;\n
        v3[v2] = cgc_random_in_range(65);\n
    }\n
    v4 = v3;\n
    return v4;\n
}\n
", "4203893:sub_402575": null, "4203904:cgc_GenerateRandomNumber": "int cgc_GenerateRandomNumber(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return cgc_random_in_range(v1);\n
}\n
", "4203953:sub_4025b1": null, "4203968:cgc_link": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_link(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = cgc_lookaside;\n
    if (!v5)\n
        return cgc_lookaside;\n
    v6 = v5;\n
    if (*(v6) <= 1016)\n
    {\n
        if (*(v5) > 1016)\n
            v2 = 0;\n
        else\n
            v2 = *(v5) >> 3;\n
        *((v5 + 4)) = *((v3 + v2 * 4 + 60));\n
        v1 = v5;\n
        if (*(v5) > 1016)\n
            v0 = 0;\n
        else\n
            v0 = *(v5) >> 3;\n
        v6 = v3;\n
        *((v6 + v0 * 4 + 60)) = v1;\n
        return v3;\n
    }\n
    while (true)\n
    {\n
        if (!v4)\n
            return v6;\n
        if (!*((v4 + 4)))\n
        {\n
            *((v4 + 4)) = v5;\n
            *((v5 + 8)) = v4;\n
            v6 = v5;\n
            *((v6 + 4)) = 0;\n
            return v5;\n
        }\n
        else if (*(v5) >= *(*((v4 + 4))))\n
        {\n
            v6 = *((v4 + 4));\n
            v4 = v6;\n
        }\n
        else\n
        {\n
            *((v5 + 4)) = *((v4 + 4));\n
            *((v5 + 8)) = v4;\n
            *((*((v4 + 4)) + 8)) = v5;\n
            v6 = v4;\n
            *((v6 + 4)) = v5;\n
            return v4;\n
        }\n
    }\n
}\n
", "4204305:sub_402711": null, "4204320:cgc_add_freelist_block": "typedef struct struct_0 {\n
    char padding_0[60];\n
    unsigned int field_3c;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_add_freelist_block(unsigned int v5)\n
{\n
    struct struct_1 **v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3 = 0;\n
    v2 = 0;\n
    v5 += 4;\n
    v5 = v5 + 4095 & -0x1000;\n
    v0 = &v3;\n
    if (cgc_allocate(v5, 0))\n
    {\n
        cgc_printf(&v1[68].padding_0[28]);\n
        cgc__terminate(-1);\n
    }\n
    cgc_bzero(v3);\n
    *(v3) = v5 - 4;\n
    if (!v1->field_3c)\n
    {\n
        v7 = v1;\n
        v7->field_3c = v3;\n
        return v1;\n
    }\n
    v7 = cgc_link(v3);\n
    return v7;\n
}\n
", "4204545:sub_402801": null, "4204560:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v2;\n
    v1 = 0;\n
    if (v2)\n
    {\n
        v1 = v2 - 4;\n
        v3 = cgc_link(v1);\n
    }\n
    return v3;\n
}\n
", "4204631:sub_402857": null, "4204640:cgc_init_freelist": "typedef struct struct_0 {\n
    char padding_0[60];\n
    struct struct_1 *field_3c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_lookaside;\n
\n
int cgc_init_freelist()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    struct_0 *v1;  // [bp-0x14]\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3[3];  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v3[0] = 0;\n
    v2[0] = 0;\n
    v0 = &cgc_lookaside;\n
    if (cgc_allocate(0x1000, 0))\n
    {\n
        cgc_printf();\n
        cgc__terminate();\n
    }\n
    cgc_bzero(v1->field_3c);\n
    v3[0] = v1->field_3c;\n
    v2[0] = v3 + 1;\n
    v3[0] = 0;\n
    v3[1] = v2;\n
    v3[2] = 0;\n
    v2[0] = 4080;\n
    v2[2] = v3;\n
    v2[1] = 0;\n
    return v2;\n
}\n
", "4204857:sub_402939": null, "4204864:cgc_unlink": "typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
    struct struct_1 *field_8;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_1;\n
\n
int cgc_unlink(struct_2 *v0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int, struct_2 *\n
\n
    if (!v0)\n
        return v0;\n
    if (v0->field_8)\n
        v0->field_8->field_4 = v0->field_4;\n
    v1 = v0;\n
    if (!v1->field_4)\n
        return v1;\n
    v1 = v0->field_4;\n
    v1->field_8 = v0->field_8;\n
}\n
", "4204948:sub_402994": null, "4204960:cgc_freelist_alloc": "typedef struct struct_1 {\n
    char padding_0[60];\n
    struct struct_0 *field_3c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int cgc_lookaside;\n
\n
int cgc_freelist_alloc(unsigned int v4)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v2 = 0;\n
    v1 = 0;\n
    if (!cgc_lookaside)\n
        cgc_init_freelist();\n
    for (v2 = v0->field_3c; v2; v2 = v2->field_4)\n
    {\n
        if (v2->field_0 >= v4)\n
            break;\n
    }\n
    if (!v2)\n
    {\n
        cgc_add_freelist_block(v4);\n
        v3 = cgc_freelist_alloc(v4);\n
        return v3;\n
    }\n
    cgc_unlink(v2);\n
    if (*(v2) - v4 < 12)\n
    {\n
        v3 = v2 + 4;\n
        return v3;\n
    }\n
    v1 = v2 + 4 + v4;\n
    *(v1) = *(v2) - (v4 + 4);\n
    *(v2) = v4;\n
    cgc_link(v1);\n
    v3 = v2 + 4;\n
    return v3;\n
}\n
", "4205241:sub_402ab9": null, "4205248:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_malloc();\n
    if (!v2)\n
    {\n
        v3 = v2;\n
        return v3;\n
    }\n
    v5 = v5 + 7 & -8;\n
    v0 = v5;\n
    cgc_bzero(v2);\n
    v3 = v2;\n
    return v3;\n
}\n
", "4205356:sub_402b2c": null, "4205360:cgc_malloc": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    v2 = 0;\n
    if (v5 < 8)\n
        v5 = 8;\n
    v5 = v5 + 7 & -8;\n
    if (v5 > 1016)\n
        v0 = 0;\n
    else\n
        v0 = v5 >> 3;\n
    if (!v3)\n
    {\n
        v4 = cgc_freelist_alloc(v5);\n
        return v4;\n
    }\n
    for (v3 = v0; v3 < 128; v3 += 1)\n
    {\n
        if (*((v1 + (v3 << 2) + 60)))\n
            break;\n
    }\n
    if (v3 != 128)\n
    {\n
        v6 = v1;\n
        v2 = *((v6 + v3 * 4 + 60));\n
        *((v6 + v3 * 4 + 60)) = v2->field_4;\n
        v4 = &v2->field_4;\n
        return v4;\n
    }\n
    v4 = cgc_freelist_alloc(v5);\n
    return v4;\n
}\n
", "4205645:sub_402c4d": null, "4205648:cgc_round": null, "4205794:sub_402ce2": null, "4205808:cgc_floor": null, "4205964:sub_402d8c": null, "4205968:cgc_WRAPPER_PUTC": "int cgc_WRAPPER_PUTC(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &a0, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = a1 + 1;\n
    return v2;\n
}\n
", "4206069:sub_402df5": null, "4206080:cgc_WRAPPER_OUTC": "int cgc_WRAPPER_OUTC(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    v0[a1] = a0;\n
    return a1 + 1;\n
}\n
", "4206114:sub_402e22": null, "4206128:cgc_WRAPPER_BUFFER_PUTC": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_WRAPPER_BUFFER_PUTC(unsigned int v6, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x24]\n
    char v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // esi\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v6;\n
    if (*((v4 + 0x100)) >= 0x100)\n
    {\n
        for (v3 = v4; *((v4 + 0x100)) > 0; v3 = *(&v2) + v3)\n
        {\n
            v0 = &v2;\n
            if (cgc_transmit(1, v3, *((v4 + 0x100))))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v2))\n
            {\n
                v7 = v4;\n
                v8 = *((v7 + 0x100)) - *(&v2);\n
                *((v7 + 0x100)) = v8;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
    }\n
    v9 = v4;\n
    *(&v8) = *((v9 + 0x100));\n
    *((v9 + 0x100)) = v8 + 1;\n
    *((v4 + v8)) = a0;\n
    v5 = a1 + 1;\n
    return v5;\n
}\n
", "4206398:sub_402f3e": null, "4206400:cgc_putchar": "int cgc_putchar(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &v1;\n
    if (cgc_transmit(1, &v3, 1))\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v2 = v3;\n
    return v2;\n
}\n
", "4206492:sub_402f9c": null, "4206496:cgc_puts": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_puts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    v3 = cgc_strlen();\n
    while (true)\n
    {\n
        if (v2 != v3)\n
        {\n
            v0 = &v4;\n
            if (cgc_transmit(1, v7 + v2, v3 - v2))\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
            else if (*(&v4))\n
            {\n
                v2 = *(&v4) + v2;\n
            }\n
            else\n
            {\n
                v5 = -1;\n
                return v5;\n
            }\n
        }\n
        else\n
        {\n
            cgc_putchar(10);\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4206684:sub_40305c": null, "4206688:cgc_vprintf_buffered": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vprintf_buffered(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x13c]\n
    unsigned int v1;  // [bp-0x134]\n
    char v2;  // [bp-0x130]\n
    unsigned int v3;  // [bp-0x12c]\n
    unsigned int v4;  // [bp-0x128]\n
    void* v5;  // [bp-0x124]\n
    unsigned int v6;  // [bp-0x120]\n
    char v7;  // [bp-0x11c]\n
    unsigned short v8;  // [bp-0x1c]\n
    unsigned int v9;  // [bp-0x18]\n
    unsigned int v10;  // [bp-0x14]\n
    unsigned int v11;  // [bp-0x10]\n
    unsigned int v12;  // [bp-0xc]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
    unsigned int v16;  // edi\n
    unsigned int v17;  // esi\n
\n
    v13 = v15;\n
    v12 = v16;\n
    v11 = v17;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v9 = cgc_WRAPPER_BUFFER_PUTC;\n
    v8 = 0;\n
    v6 = &v7;\n
    v5 = 0;\n
    v0 = a0;\n
    v4 = cgc_wrapper_output(v6, v9, v5, v14);\n
    v3 = &v7;\n
    while (true)\n
    {\n
        if (v8 <= 0)\n
        {\n
            v10 = v4;\n
            break;\n
        }\n
        else if (cgc_transmit(1, v3, v8))\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
        else if (*(&v2))\n
        {\n
            v8 -= *(&v2);\n
            v3 = *(&v2) + v3;\n
        }\n
        else\n
        {\n
            v10 = -1;\n
            break;\n
        }\n
    }\n
    return v10;\n
}\n
", "4206991:sub_40318f": null, "4206992:cgc_wrapper_output": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_wrapper_output()\n
{\n
    unsigned int v0;  // [bp-0xa4]\n
    unsigned int v1;  // [bp-0x5c]\n
    char *v3;  // [bp-0x2c]\n
    char *v4;  // [bp-0x28]\n
    char v5;  // [bp-0x21]\n
    void* v6;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0x4]\n
    unsigned int v12;  // [bp+0x8]\n
    char *v13;  // [bp+0xc], Other Possible Types: unsigned long\n
    char *v14;  // [bp+0x10], Other Possible Types: unsigned int\n
    unsigned int *v32;  // [bp+0xfffb8]\n
    struct struct_0 **v44;  // [bp+0x100014]\n
    unsigned int *v45;  // [bp+0x10001c], Other Possible Types: struct struct_1 **\n
    struct struct_1 **v76;  // eax\n
\n
    v76 = v45;\n
    v45 = &v76[1];\n
    v32 = &*(v76)->field_0;\n
    *(v32) = v44;\n
    while (true)\n
    {\n
        v14 = (&v13)[1] + 1;\n
        while (true)\n
        {\n
LABEL_4036c9:\n
            while (true)\n
            {\n
                if (!*(v14))\n
                    return;\n
                v5 = *(v14);\n
                v14 = (&v13)[1] + 1;\n
                if (v5 != 36)\n
                {\n
                    v0 = v13;\n
                    v13 = v12(v11, v5);\n
                    goto LABEL_4036c9;\n
                }\n
                v6 = 0;\n
                v7 = 0;\n
                v8 = 0;\n
                v9 = 0;\n
                if (!*(v14))\n
                    return;\n
                if (*(v14) != 36)\n
                    break;\n
                v0 = v13;\n
                v13 = v12(v11, 36);\n
            }\n
            if (*(v14) == 45)\n
            {\n
                v9 |= 1;\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (cgc_isdigit(*(v14)))\n
            {\n
                if (*(v14) == 48)\n
                    v9 |= 4;\n
                for (v4 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v8 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            if (*(v14) == 46)\n
            {\n
                v14 = (&v13)[1] + 1;\n
                if (!*(v14))\n
                    return;\n
                for (v3 = v14; cgc_isdigit(*(v14)); v14 = (&v13)[1] + 1);\n
                v6 = cgc_atoi();\n
                if (!*(v14))\n
                    return;\n
            }\n
            v1 = *(v14) - 88;\n
            if (v1 <= 32)\n
                goto *(((stack_base)[88] + (stack_base)[92] * 4 - 4292)) + (stack_base)[88];\n
            break;\n
        }\n
    }\n
}\n
", "4208348:sub_4036dc": null, "4208352:cgc_printf": "int cgc_printf(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0x8]\n
\n
    v1 = &v3;\n
    v0 = cgc_vprintf_buffered(v2, v1);\n
    return v0;\n
}\n
", "4208410:sub_40371a": null, "4208416:cgc_sprintf": "int cgc_sprintf(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    char v5;  // [bp+0xc]\n
    unsigned int v6;  // esi\n
\n
    v3 = v6;\n
    v2 = &v5;\n
    v0 = v2;\n
    v1 = cgc_vsprintf(v4, a0);\n
    return v1;\n
}\n
", "4208485:sub_403765": null, "4208496:cgc_vsprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_vsprintf(unsigned int v9, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    void* v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    struct struct_0 **v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    unsigned int v7;  // [bp-0xc]\n
    unsigned int v8;  // [bp-0x8]\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edi\n
    unsigned int v12;  // esi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ebx\n
\n
    v8 = v10;\n
    v7 = v11;\n
    v6 = v12;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = &cgc_WRAPPER_OUTC;\n
    v4 = v9;\n
    v3 = 0;\n
    v0 = a1;\n
    v2 = cgc_wrapper_output(v4, v5, v3, a0);\n
    v5(v4, 0);\n
    v13 = v6;\n
    v14 = v7;\n
    v15 = v8;\n
    return v2;\n
}\n
", "4208635:sub_4037fb": null, "4208640:cgc_printf_int_to_string": "int cgc_printf_int_to_string(unsigned int v3, unsigned int a0, char *a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // ecx\n
    unsigned int v7;  // ecx\n
\n
    v1 = 0;\n
    if (!v3)\n
    {\n
        *(a1) = 48;\n
        v2 = 1;\n
        return v2;\n
    }\n
    while (v3 > 0)\n
    {\n
        v0 = (0 CONCAT v3) /m a0 >> 32;\n
        v3 = (0 CONCAT v3) /m a0;\n
        if (a0 != 16)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            a1[v4] = v0 + 48;\n
        }\n
        else if (v0 < 10)\n
        {\n
            v5 = v1;\n
            v1 = v5 + 1;\n
            a1[v5] = v0 + 48;\n
        }\n
        else if ((a2 & 8))\n
        {\n
            v6 = v1;\n
            v1 = v6 + 1;\n
            a1[v6] = v0 + 55;\n
        }\n
        else\n
        {\n
            v7 = v1;\n
            v1 = v7 + 1;\n
            a1[v7] = v0 + 87;\n
        }\n
    }\n
    v2 = v1;\n
    return v2;\n
}\n
", "4208912:cgc_printf_helper_int": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4209568:cgc_printf_float_to_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4211984:cgc_printf_helper_float": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_int(unsigned int v7, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)\n
{\n
    unsigned int v0;  // [bp-0x44]\n
    struct struct_0 **v1;  // [bp-0x40], Other Possible Types: unsigned int\n
    char v2;  // [bp-0x3c]\n
    struct struct_0 **v3;  // [bp-0x1c]\n
    char v4;  // [bp-0x15]\n
    void* v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = 0;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    if (a3 == 10 && a2 < 0)\n
    {\n
        v4 = 1;\n
        a2 = -(a2);\n
        v6 += 1;\n
    }\n
    v3 = cgc_printf_int_to_string(a2, a3, &v2, a6);\n
    v6 = v3 + v6;\n
    if (a4 > 0 && v6 < a4)\n
        v5 = a4 - v6;\n
    if (a5 > 0)\n
    {\n
        a6 |= 4;\n
        if (v3 < a5)\n
            v5 = a5 - v3;\n
    }\n
    if (!(a6 & 1))\n
    {\n
        if (v4 && v5 > 0 && (a6 & 4))\n
        {\n
            a1 = a0(v7, 45);\n
            v4 = 0;\n
        }\n
        while (true)\n
        {\n
            v8 = v5;\n
            v5 = v8 - 1;\n
            if (v8 <= 0)\n
                break;\n
            if (!(a6 & 4))\n
                a1 = a0(v7, 32);\n
            else\n
                a1 = a0(v7, 48);\n
        }\n
    }\n
    if (v4)\n
    {\n
        a1 = a0(v7, 45);\n
        v4 = 0;\n
    }\n
    for (v1 = v3; v1 > 0; v1 -= 1)\n
    {\n
        a1 = a0(v7, *(&v1 + v1));\n
    }\n
    if (!(a6 & 1))\n
        return a1;\n
    while (true)\n
    {\n
        v9 = v5;\n
        v5 = v9 - 1;\n
        if (v9 <= 0)\n
            break;\n
        a1 = a0(v7, 32);\n
    }\n
    return a1;\n
}\n
", "4212650:sub_4047aa": null, "4212656:cgc_printf_helper_string": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_printf_helper_string(unsigned int v5, struct struct_0 **a0, unsigned int a1, char *a2, unsigned int a3, unsigned int a4, unsigned int a5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    void* v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // eax\n
    char *v8;  // ecx\n
    unsigned int v9;  // eax\n
\n
    if (!a4 && !a3)\n
    {\n
        for (v1 = &_GLOBAL_OFFSET_TABLE_; *(a2); a2 += 1)\n
        {\n
            v0 = a1;\n
            a1 = a0(v5, *(a2));\n
        }\n
        v4 = a1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen();\n
    v2 = 0;\n
    if (a4 > 0 && v3 > a4)\n
        v3 = a4;\n
    if (a3 > 0 && v3 < a3)\n
        v2 = a3 - v3;\n
    if (!(a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v6 = v2;\n
            v2 = v6 - 1;\n
            if (v6 <= 0)\n
                break;\n
            if (!(a5 & 4))\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 32);\n
            }\n
            else\n
            {\n
                v0 = a1;\n
                a1 = a0(v5, 48);\n
            }\n
        }\n
    }\n
    while (true)\n
    {\n
        v7 = v3;\n
        v3 = v7 - 1;\n
        if (v7 <= 0)\n
            break;\n
        v8 = a2;\n
        a2 = v8 + 1;\n
        v0 = a1;\n
        a1 = a0(v5, *(v8));\n
    }\n
    if ((a5 & 1))\n
    {\n
        while (true)\n
        {\n
            v9 = v2;\n
            v2 = v9 - 1;\n
            if (v9 <= 0)\n
                break;\n
            v0 = a1;\n
            a1 = a0(v5, 32);\n
        }\n
    }\n
    v4 = a1;\n
    return v4;\n
}\n
", "4213196:sub_4049cc": null, "4213200:cgc_BufferedReceive": "extern unsigned int _GLOBAL_OFFSET_TABLE_[144];\n
extern unsigned int cgc_bytesInBuffer;\n
\n
int cgc_BufferedReceive(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[144];  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6[144];  // eax\n
    unsigned int v7[144];  // eax\n
\n
    v1[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v3 = a0;\n
    if (cgc_bytesInBuffer)\n
    {\n
        v2 = a0;\n
        if (a0 > v1[143])\n
            v2 = v1[143];\n
        v0 = v2;\n
        cgc_memcpy(v5, v1[13]);\n
        v6 = v1;\n
        v3 -= v2;\n
        v6[13] = v2 + v6[13];\n
        v6[143] = v6[143] - v2;\n
        v5 = v2 + v5;\n
        if (!v6[143])\n
        {\n
            v7 = v1;\n
            v7[13] = &v7[1 + 1];\n
        }\n
    }\n
    if (v3 > 0 && cgc_ReceiveBytes(v5) < 0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v4 = a0;\n
    return v4;\n
}\n
", "4213474:sub_404ae2": null, "4213488:cgc_ReceiveBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveBytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a0; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_receive(0, v6 + v4, a0 - v4);\n
        if (v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v2))\n
            break;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4213648:cgc_ReceiveUntil": "typedef struct struct_0 {\n
    char padding_0[52];\n
    struct struct_1 *field_34;\n
    char padding_38[516];\n
    unsigned int field_23c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ReceiveUntil(char *v7, unsigned int a0, char a1)\n
{\n
    struct_2 *v0;  // [bp-0x30]\n
    struct_0 *v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v5;  // [bp-0xd]\n
    unsigned int v6;  // [bp-0xc]\n
    struct_0 *v8;  // eax\n
    char *v9;  // ecx\n
    struct_0 *v10;  // eax\n
    struct_0 *v11;  // ecx\n
    char *v12;  // eax\n
    char *v13;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v4 = 0;\n
    *(v7) = 0;\n
    while (true)\n
    {\n
        if (v1->field_23c > 0)\n
        {\n
            v8 = v1;\n
            v9 = v8->field_34;\n
            v8->field_34 = &v9[1];\n
            v5 = *(v9);\n
            v8->field_23c = v8->field_23c - 1;\n
            if (!v8->field_23c)\n
            {\n
                v10 = v1;\n
                v10->field_34 = &v10[1].padding_0[4];\n
            }\n
        }\n
        else\n
        {\n
            v2 = 0;\n
            v0 = &v2;\n
            v3 = cgc_receive(0, &v1[1].padding_0[4], 0x400);\n
            if (v3)\n
            {\n
                v6 = -1;\n
                return v6;\n
            }\n
            if (!v2)\n
                break;\n
            v11 = v1;\n
            v11->field_23c = v2 - 1;\n
            v11->field_34 = &v11[1].padding_0[4];\n
            v12 = v11->field_34;\n
            v11->field_34 = &v12[1];\n
            v5 = *(v12);\n
        }\n
        if (v5 == a1)\n
            break;\n
        if (v4 < a0 - 1)\n
        {\n
            v13 = v7;\n
            v7 = v13 + 1;\n
            *(v13) = v5;\n
            v4 += 1;\n
        }\n
    }\n
    *(v7) = 0;\n
    v6 = v4;\n
    return v6;\n
}\n
", "4214008:sub_404cf8": null, "4214016:cgc_SendBytes": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SendBytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < a0; v4 = *(&v2) + v4)\n
    {\n
        v0 = &v2;\n
        v3 = cgc_transmit(1, v6 + v4, a0 - v4);\n
        if (v3)\n
        {\n
            v5 = -1;\n
            return v5;\n
        }\n
        if (!*(&v2))\n
            break;\n
    }\n
    v5 = v4;\n
    return v5;\n
}\n
", "4214174:sub_404d9e": null, "4214176:cgc_srand": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int w;\n
extern unsigned int x;\n
extern unsigned int y;\n
extern unsigned int z;\n
\n
int cgc_srand()\n
{\n
    x = *(0x4347c000);\n
    y = *(1128775684);\n
    z = *(1128775688);\n
    w = *(1128775692);\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4214245:sub_404de5": null, "4214256:cgc_rand": "extern unsigned int w;\n
extern unsigned int x;\n
extern unsigned int y;\n
extern unsigned int z;\n
\n
int cgc_rand()\n
{\n
    unsigned int v1;  // eax\n
\n
    x = y;\n
    y = z;\n
    z = w;\n
    w = w ^ w >> 19;\n
    w = w ^ v1;\n
    return w;\n
}\n
", "4214394:sub_404e7a": null, "4214400:cgc_random_in_range": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_random_in_range(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v6 > a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    else if (v6 != a0)\n
    {\n
        v3 = a0 - v6;\n
        v2 = (0 CONCAT -1) /m v3;\n
        v4 = cgc_rand();\n
        v0 = v6;\n
        v5 = v0 + (0 CONCAT v4) /m v2;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = v6;\n
        return v5;\n
    }\n
}\n
", "4214541:sub_404f0d": null, "4214544:cgc_atoi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_atoi(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    void* v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    for (v1 = 0; cgc_isspace(*(v4)); v4 += 1);\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    if (*(v4) == 45)\n
    {\n
        v1 = 1;\n
        v4 += 1;\n
    }\n
    for (; cgc_isdigit(*(v4)); v2 = v2 * 10 + *(v5) - 48)\n
    {\n
        v5 = v4;\n
        v4 = v5 + 1;\n
    }\n
    if (v1)\n
    {\n
        v3 = -(v2);\n
        return v3;\n
    }\n
    v3 = v2;\n
    return v3;\n
}\n
", "4214781:sub_404ffd": null, "4214784:cgc_atof": null, "4215069:sub_40511d": null, "4215072:cgc_strcpy": "int cgc_strcpy(char *v1, char *a0)\n
{\n
    char *v0;  // [bp-0x8]\n
    int tmp_19;  // tmp #19\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    char *v4;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(a0); *(v4) = tmp_19)\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        tmp_19 = *(v3);\n
        v4 = v1;\n
        v1 = v4 + 1;\n
    }\n
    *(v1) = 0;\n
    return v0;\n
}\n
", "4215148:sub_40516c": null, "4215152:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        if (!*((a0 + v0)))\n
            break;\n
        *((v1 + v0)) = *((a0 + v0));\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4215289:sub_4051f9": null, "4215296:cgc_memcpy": "int cgc_memcpy(char *v1, char *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8]\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(&v1) = *(&a0);\n
        v1 += 4;\n
        a0 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        *(v1) = *(a0);\n
        v1 += 1;\n
        a0 += 1;\n
    }\n
    return v0;\n
}\n
", "4215432:sub_405288": null, "4215440:cgc_strtol": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtol(char v7[2], unsigned int *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = 0;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (a1 >= 16)\n
        a1 = 16;\n
    for (; cgc_isspace(*(v7)); v7 += 1);\n
    if (*(v7) == 45)\n
    {\n
        v4 = 1;\n
        *(&v7) = v7 + 1;\n
    }\n
    else if (*(v7) == 43)\n
    {\n
        *(&v7) = v7 + 1;\n
    }\n
    if (a1 != 16 && !(!a1))\n
        goto LABEL_4053aa;\n
    if (*(v7) != 48)\n
    {\n
LABEL_4053aa:\n
        if (a1 && !(a1 == 2))\n
            goto LABEL_4053fd;\n
        if (*(v7) == 48)\n
        {\n
            if (*((v7 + 1)) != 98 && !(*((v7 + 1)) == 66))\n
                goto LABEL_4053fd;\n
            *(&v7) = v7 + 2;\n
            a1 = 2;\n
        }\n
LABEL_4053fd:\n
    }\n
    else\n
    {\n
        if (*((v7 + 1)) != 120 && !(*((v7 + 1)) == 88))\n
            goto LABEL_4053aa;\n
        *(&v7) = v7 + 2;\n
        a1 = 16;\n
    }\n
    if (!a1)\n
    {\n
        if (*(v7) == 48)\n
            a1 = 8;\n
        else\n
            a1 = 10;\n
    }\n
    v3 = 0;\n
    if (v4)\n
        v3 = 0x80000000;\n
    else\n
        v3 = 2147483647;\n
    v2 = (0 CONCAT v3) /m a1 >> 32;\n
    v3 = (0 CONCAT v3) /m a1;\n
    while (*(v7))\n
    {\n
        v1 = *(v7);\n
        if (cgc_isdigit(v1))\n
        {\n
            v1 -= 48;\n
        }\n
        else\n
        {\n
            if (!cgc_isalpha(v1))\n
                break;\n
            if (!cgc_isupper(v1))\n
                v1 -= 87;\n
            else\n
                v1 -= 55;\n
        }\n
        if (v1 >= a1)\n
            break;\n
        if (v5 > v3)\n
        {\n
LABEL_405535:\n
            break;\n
        }\n
        else if (v5 != v3)\n
        {\n
LABEL_40553a:\n
            v5 *= a1;\n
            v5 = v1 + v5;\n
            *(&v7) = v7 + 1;\n
        }\n
        else\n
        {\n
            if (v1 <= v2)\n
                goto LABEL_40553a;\n
            goto LABEL_405535;\n
        }\n
    }\n
    if (a0)\n
        *(a0) = v7;\n
    if (v4)\n
    {\n
        v6 = -(v5);\n
        return v6;\n
    }\n
    v6 = v5;\n
    return v6;\n
}\n
", "4216211:sub_405593": null, "4216224:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    void* v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v2;  // eax\n
    char *v3;  // eax\n
\n
    v0 = v2;\n
    v0 = 0;\n
    while (true)\n
    {\n
        v3 = v1;\n
        v1 = v3 + 1;\n
        if (!*(v3))\n
            break;\n
        v0 += 1;\n
    }\n
    return v0;\n
}\n
", "4216283:sub_4055db": null, "4216288:cgc_bzero": "int cgc_bzero(unsigned int v0, char *a0)\n
{\n
    char *v1;  // ecx\n
\n
    for (; a0; v1[1 + v0] = 0)\n
    {\n
        v1 = a0;\n
        a0 = v1 + 1;\n
    }\n
    *((v0 + a0)) = 0;\n
    return v0;\n
}\n
", "4216343:sub_405617": null, "4216352:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    char *v2;  // [bp-0x8]\n
    char *v4;  // eax\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = v1 * 0x1000000 | v1 * 0x10000 | v1 * 0x100 | v1; a1 >= 4; a1 -= 4)\n
    {\n
        *(v3) = v0;\n
        v3 += 4;\n
    }\n
    for (; a1 > 0; a1 -= 1)\n
    {\n
        v4 = v3;\n
        v3 = v4 + 1;\n
        *(v4) = v1;\n
    }\n
    return v2;\n
}\n
", "4216507:sub_4056bb": null, "4216512:cgc_strchr": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strchr(char *v4, unsigned int a0)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = v2;\n
        if (v0 >= cgc_strlen(v4))\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        if (v4[v2] == a0)\n
        {\n
            v3 = &v4[v2];\n
            return v3;\n
        }\n
        v2 += 1;\n
    }\n
}\n
", "4216670:sub_40575e": null, "4216672:cgc_strtok": "typedef struct struct_0 {\n
    char padding_0[576];\n
    struct struct_1 *field_240;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strtok(char *v6, char *a0)\n
{\n
    char v0;  // [bp-0x21]\n
    struct_0 *v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (!a0)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    if (!v6)\n
    {\n
        if (v1->field_240)\n
        {\n
            v6 = v1->field_240;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (cgc_strchr(a0, *(v6)))\n
            v0 = *(v6);\n
        if (!(v0 & 1))\n
            break;\n
        v6 += 1;\n
    }\n
    if (!*(v6))\n
    {\n
        v1->field_240 = 0;\n
        v5 = 0;\n
        return v5;\n
    }\n
    v2 = cgc_strlen(v6);\n
    v4 = 0;\n
    while (true)\n
    {\n
        if (v4 >= v2)\n
        {\n
            v1->field_240 = 0;\n
            v5 = v6;\n
            return v5;\n
        }\n
        if (cgc_strchr(a0, *((v6 + v4))))\n
            break;\n
        v4 += 1;\n
    }\n
    *((v6 + v4)) = 0;\n
    for (v3 = v4 + 1; v3 < v2; v3 += 1)\n
    {\n
        if (!cgc_strchr(a0, *((v6 + v3))))\n
        {\n
            v1->field_240 = v6 + v3;\n
            v5 = v6;\n
            return v5;\n
        }\n
        *((v6 + v3)) = 0;\n
    }\n
    if (v3 == v2)\n
        v1->field_240 = 0;\n
    v5 = v6;\n
    return v5;\n
}\n
", "4217191:sub_405967": null, "4217200:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    char v0;  // [bp-0x9]\n
    unsigned int v1;  // [bp-0x8]\n
\n
    if (v2 && !a0)\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!v2 && a0)\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    if (!v2 && !a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = *(a0);\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) > *(a0))\n
        {\n
            v1 = 1;\n
            return v1;\n
        }\n
        else if (*(v2) >= *(a0))\n
        {\n
            v2 += 1;\n
            a0 += 1;\n
        }\n
        else\n
        {\n
            v1 = -1;\n
            return v1;\n
        }\n
    }\n
    if (*(v2) && !*(a0))\n
    {\n
        v1 = 1;\n
        return v1;\n
    }\n
    if (!*(v2) && *(a0))\n
    {\n
        v1 = -1;\n
        return v1;\n
    }\n
    v1 = 0;\n
    return v1;\n
}\n
", "4217550:sub_405ace": null, "4217552:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(char *v5, char *a0)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = cgc_strlen(v5);\n
        v2 = 0;\n
        while (true)\n
        {\n
            v0 = v2;\n
            if (v0 >= cgc_strlen(a0))\n
                break;\n
            v5[v3] = a0[v2];\n
            v3 += 1;\n
            v2 += 1;\n
        }\n
        v5[v3] = 0;\n
        v4 = v5;\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4217735:sub_405b87": null, "4217744:cgc_memcmp": "int cgc_memcmp(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xe]\n
    char v1;  // [bp-0xd]\n
    char *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x8]\n
\n
    v2 = 0;\n
    while (true)\n
    {\n
        if (v2 < a1)\n
        {\n
            v1 = v2[v4];\n
            v0 = v2[a0];\n
            if (v1 < v0)\n
            {\n
                v3 = -1;\n
                return v3;\n
            }\n
            else if (v1 <= v0)\n
            {\n
                v2 += 1;\n
            }\n
            else\n
            {\n
                v3 = 1;\n
                return v3;\n
            }\n
        }\n
        else\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
    }\n
}\n
", "4217897:sub_405c29": null, "4217904:cgc_NewList": "int cgc_NewList(unsigned int v1)\n
{\n
    unsigned int *v0;  // [bp-0xc]\n
\n
    v0 = cgc_calloc(8);\n
    *(v0) = v1;\n
    return v0;\n
}\n
", "4217958:sub_405c66": null, "4217968:cgc_AddToList": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddToList(struct_1 *v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v2[3];  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (!a0)\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
    else if (a1 == v4->field_0)\n
    {\n
        v2[0] = cgc_calloc(16);\n
        v2[1] = a1;\n
        v2[0] = a0;\n
        if (!v4->field_4)\n
        {\n
            v4->field_4 = &v2;\n
            v3 = 1;\n
            return v3;\n
        }\n
        for (v1 = v4->field_4; v1->field_c; v1 = v1->field_c);\n
        *((v1 + 12)) = v2;\n
        v2[2] = v1;\n
        v3 = 1;\n
        return v3;\n
    }\n
    else\n
    {\n
        v3 = -1;\n
        return v3;\n
    }\n
}\n
", "4218208:cgc_RemoveFromList": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_RemoveFromList(unsigned int v7, unsigned int a0)\n
{\n
    char v0;  // [bp-0x21]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    unsigned int v6;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    else if (!a0)\n
    {\n
        v6 = -1;\n
        return v6;\n
    }\n
    else if (*(*((v7 + 4))) == a0)\n
    {\n
        v5 = *((v7 + 4));\n
        *((v7 + 4)) = *((*((v7 + 4)) + 12));\n
        *((*((v7 + 4)) + 8)) = 0;\n
        cgc_free(v5);\n
        v6 = 1;\n
        return v6;\n
    }\n
    else\n
    {\n
        v4 = *((v7 + 4));\n
        v3 = *((*((v7 + 4)) + 12));\n
        while (true)\n
        {\n
            v0 = 0;\n
            if (v3)\n
                v0 = *(v3) != a0;\n
            if (!(v0 & 1))\n
                break;\n
            v4 = v3;\n
            v3 = *((v3 + 12));\n
        }\n
        if (!v3)\n
        {\n
            v6 = -1;\n
            return v6;\n
        }\n
        v2 = v3;\n
        *((v4 + 12)) = *((v3 + 12));\n
        if (*((v4 + 12)))\n
            *((*((v4 + 12)) + 8)) = v4;\n
        v6 = 1;\n
        return v6;\n
    }\n
}\n
", "4218527:sub_405e9f": null, "4218528:cgc_DumpList": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DumpList(struct_1 *v5)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v5)\n
    {\n
        v6 = cgc_printf(v2 - 4136);\n
        return v6;\n
    }\n
    v0 = v5->field_0;\n
    cgc_printf(v2 - 4124);\n
    v4 = 0;\n
    v6 = v5->field_4;\n
    while (true)\n
    {\n
        v3 = v6;\n
        if (!v3)\n
            break;\n
        v7 = v4;\n
        v4 = v7 + 1;\n
        v0 = v7;\n
        v1 = v3->field_0;\n
        cgc_printf(v2 - 4109);\n
        v6 = v3->field_c;\n
    }\n
    return v6;\n
}\n
", "4218698:sub_405f4a": null, "4218704:cgc_DestroyQuery": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DestroyQuery(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (v2->field_4)\n
        cgc_free(v2->field_4);\n
    cgc_free(v2);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4218811:sub_405fbb": null, "4218816:cgc_ParseQuery": "typedef struct struct_0 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    unsigned int field_4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
    char padding_1[1];\n
    unsigned short field_2;\n
    char *field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ParseQuery(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_1 *v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    v1 = cgc_calloc(8);\n
    v1->field_0 = *(v3);\n
    v1->field_2 = cgc_strlen(v3 + 1);\n
    v1->field_4 = cgc_calloc(v1->field_2 + 1);\n
    cgc_strcpy(v1->field_4, v3 + 1);\n
    v2 = v1;\n
    return v2;\n
}\n
", "4218989:sub_40606d": null, "4218992:cgc_DestroyResponse": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DestroyResponse(struct_0 *v2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v2)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    if (v2->field_4)\n
        cgc_free(v2->field_4);\n
    cgc_free(v2);\n
    v1 = 0;\n
    return v1;\n
}\n
", "4219099:sub_4060db": null, "4219104:cgc_GenerateBlankResponse": "int cgc_GenerateBlankResponse()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    v0 = cgc_calloc(8);\n
    return v0;\n
}\n
", "4219147:sub_40610b": null, "4219152:cgc_AddToResponse": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_AddToResponse(struct_0 *v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        v4 = -1;\n
        return v4;\n
    }\n
    v3 = cgc_strlen(a0);\n
    if (v5->field_4)\n
        v3 = v5->field_0 + v3;\n
    v2 = cgc_calloc(v3 + 1);\n
    v1 = v2;\n
    if (v5->field_4)\n
    {\n
        cgc_strncpy(v2, v5->field_4, v5->field_0);\n
        v1 = &v1[v5->field_0];\n
    }\n
    cgc_strcpy(v1, a0);\n
    cgc_free(v5->field_4);\n
    v5->field_4 = v2;\n
    v5->field_0 = v3;\n
    v4 = 1;\n
    return v4;\n
}\n
", "4219404:sub_40620c": null, "4219408:cgc_DumpResponse": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_DumpResponse(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v0 = v3->field_0;\n
    cgc_printf(v1 - 4101);\n
    v0 = v3->field_4;\n
    cgc_printf(v1 - 4080);\n
    v2 = 0;\n
    return v2;\n
}\n
", "4219525:sub_406285": null, "4219536:cgc_SendResponse": "typedef struct struct_0 {\n
    unsigned short field_0;\n
    char padding_2[2];\n
    unsigned int field_4;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_SendResponse(struct_0 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0xd]\n
    unsigned int v2;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    v1 = 5;\n
    if (cgc_SendBytes(&v1, 1) != 1)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (cgc_SendBytes(v3, 2) != 2)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (cgc_SendBytes(v3->field_4, v3->field_0) != v3->field_0)\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
    else if (cgc_SendBytes(v0 - 4061, 1) == 1)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = -1;\n
        return v2;\n
    }\n
}\n
", "4219788:sub_40638c": null, "4219792:cgc_GetNextAdminPort": "typedef struct struct_0 {\n
    char padding_0[1880];\n
    unsigned int field_758;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int adminPortOffset;\n
\n
int cgc_GetNextAdminPort()\n
{\n
    struct_0 *v0;  // [bp-0x8]\n
    struct_0 *v2;  // eax\n
\n
    v0 = v2;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v0->field_758 = (adminPortOffset + 4 >> 31 CONCAT adminPortOffset + 4) /m 0x1000 >> 32;\n
    return v0->field_758;\n
}\n
", "4219848:sub_4063c8": null, "4219856:cgc_CreateServer": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateServer(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[2];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_calloc(8);\n
    v1[0] = cgc_GenerateRandomString(v3);\n
    v1[1] = cgc_NewList(2);\n
    v5 = v2;\n
    return v1;\n
}\n
", "4219949:sub_40642d": null, "4219952:cgc_CreateInstance": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_CreateInstance(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = cgc_calloc(28);\n
    v1[0] = cgc_GenerateRandomString(v3);\n
    v1[2] = cgc_GenerateRandomNumber(0, 65535);\n
    v1[3] = cgc_GetNextAdminPort();\n
    v5 = v2;\n
    return v1;\n
}\n
", "4220071:sub_4064a7": null, "4220080:cgc_AddInstanceToServer": "typedef struct struct_1 {\n
    char padding_0[4];\n
    void* field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int cgc_AddInstanceToServer(struct_1 *v0, struct_0 *a0)\n
{\n
    cgc_AddToList(v0->field_4, a0, 2);\n
    a0->field_4 = v0;\n
    return a0;\n
}\n
", "4220149:sub_4064f5": null, "4220160:cgc_FindServer": "typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_2 *serverList;\n
\n
int cgc_FindServer(char *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char **v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = serverList->field_4;\n
    while (true)\n
    {\n
        do\n
        {\n
            if (!v2)\n
            {\n
                v3 = 0;\n
                return v3;\n
            }\n
            v1 = &v2->field_0->field_0;\n
        } while (!v1);\n
        if (!cgc_strcmp(*(v1), v4))\n
            break;\n
        v2 = v2->field_c;\n
    }\n
    v3 = v1;\n
    return v3;\n
}\n
", "4220303:sub_40658f": null, "4220304:cgc_FindInstance": "typedef struct struct_4 {\n
    struct struct_3 *field_0;\n
    char padding_4[8];\n
    struct struct_4 *field_c;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[8];\n
    struct struct_0 *field_c;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern struct_5 *serverList;\n
\n
int cgc_FindInstance(char *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char **v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18], Other Possible Types: unsigned int\n
    struct_3 *v3;  // [bp-0x14]\n
    struct_4 *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = serverList->field_4;\n
    while (true)\n
    {\n
        if (v4)\n
        {\n
            v3 = v4->field_0;\n
            if (v3)\n
            {\n
                for (v2 = v3->field_4->field_4; v2; v2 = *((v2 + 12)))\n
                {\n
                    v1 = *(v2);\n
                    if (v1)\n
                    {\n
                        if (!cgc_strcmp(*(v1), v6))\n
                        {\n
                            v5 = v1;\n
                            return v5;\n
                        }\n
                    }\n
                }\n
                v4 = v4->field_c;\n
            }\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            return v5;\n
        }\n
    }\n
}\n
", "4220506:sub_40665a": null, "4220512:cgc_InitializeSimulation": "typedef struct struct_1 {\n
    char padding_0[1884];\n
    void* field_75c;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern void* adminPortOffset;\n
\n
int cgc_InitializeSimulation()\n
{\n
    struct_1 *v0;  // [bp-0x2c]\n
    void* v1;  // [bp-0x28]\n
    void* v2;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    void* v5;  // [bp-0x18]\n
    void* v6;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // ebx\n
\n
    v9 = v11;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    adminPortOffset = 0;\n
    v0->field_75c = cgc_NewList(1);\n
    v8 = cgc_GenerateRandomNumber(10, 32);\n
    v7 = cgc_GenerateRandomNumber(34, 64);\n
    for (v6 = 0; v6 < v8; v6 += 1)\n
    {\n
        v5 = cgc_CreateServer(v7 - v6);\n
        cgc_AddToList(v0->field_75c, v5, 1);\n
        v4 = cgc_GenerateRandomNumber(1, 15);\n
        v3 = cgc_GenerateRandomNumber(32, 64);\n
        for (v2 = 0; v2 < v4; v2 += 1)\n
        {\n
            v1 = cgc_CreateInstance(v3 - v2);\n
            cgc_AddInstanceToServer(v5, v1);\n
        }\n
    }\n
    v12 = v9;\n
    return v6;\n
}\n
", "4220836:sub_4067a4": null, "4220848:cgc_QueryOne": "typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    char *field_0;\n
    struct struct_1 *field_4;\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char *field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_QueryOne(struct_3 *v6, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    char v2;  // [bp-0x5c]\n
    struct_0 *v3;  // [bp-0x50]\n
    struct_2 *v4;  // [bp-0x4c], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x48]\n
    unsigned int v7;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v4 = 0; v4 < 64; v4 += 1)\n
    {\n
        (&v5)[v4] = v4;\n
    }\n
    cgc_printf(v1 - 4040);\n
    cgc_strcpy(&v5, v6->field_4);\n
    v3 = cgc_FindInstance(&v5);\n
    if (!v3)\n
    {\n
        v7 = cgc_printf(v1 - 4029);\n
        return v7;\n
    }\n
    cgc_AddToResponse(a0, v1 - 4018);\n
    cgc_AddToResponse(a0, v3->field_0);\n
    cgc_AddToResponse(a0, v1 - 4010);\n
    cgc_AddToResponse(a0, v1 - 4008);\n
    v0 = v3->field_8;\n
    cgc_sprintf(&v2, v1 - 4003);\n
    cgc_AddToResponse(a0, &v2);\n
    cgc_AddToResponse(a0, v1 - 4010);\n
    cgc_AddToResponse(a0, v1 - 4000);\n
    cgc_AddToResponse(a0, v3->field_4->field_0);\n
    v7 = cgc_AddToResponse(a0, v1 - 4010);\n
    return v7;\n
}\n
", "4221263:sub_40694f": null, "4221264:main": "typedef struct struct_4 {\n
    char padding_0[1884];\n
    struct struct_2 *field_75c;\n
} struct_4;\n
\n
typedef struct struct_5 {\n
    char padding_0[4];\n
    struct struct_6 *field_4;\n
} struct_5;\n
\n
typedef struct struct_0 {\n
    struct struct_1 *field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_3 {\n
    char padding_0[4];\n
    struct struct_2 *field_4;\n
} struct_3;\n
\n
typedef struct struct_7 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_7;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_2;\n
\n
typedef struct struct_6 {\n
    char field_0;\n
} struct_6;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main()\n
{\n
    void* v8;  // [bp+0x0], Other Possible Types: unsigned int\n
    void* v9;  // [bp+0x4], Other Possible Types: unsigned int\n
    char *v10;  // [bp+0x8], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp+0xc]\n
    struct_4 *v12;  // [bp+0xffb7c]\n
    unsigned short v13;  // [bp+0xffb82]\n
    struct_7 *v14;  // [bp+0xffb90]\n
    unsigned int v15;  // [bp+0xffbd4]\n
    unsigned int v22;  // [bp+0xffbf0]\n
    struct_5 *v23;  // [bp+0xffbf4]\n
    struct_4 *v47;  // ebx\n
\n
    v8 = &v12[2].padding_0[191];\n
    cgc_printf(&v12[2].padding_0[191]);\n
    v15 = v23->field_4->field_0;\n
    if (v15 != 1)\n
    {\n
        v8 = &v12[2].padding_0[178];\n
        cgc_printf(&v12[2].padding_0[178]);\n
        v8 = 0;\n
        cgc__terminate();\n
    }\n
    v8 = ebp<4> - 1136;\n
    v9 = v23->field_4 + 1;\n
    v10 = 64;\n
    cgc_strncpy(v9, v10, v11);\n
    v8 = ebp<4> - 1136;\n
    v14 = cgc_FindInstance(ebp<4> - 1136);\n
    if (!v14)\n
    {\n
        v8 = &v12[2].padding_0[163];\n
        cgc_printf(&v12[2].padding_0[163]);\n
        v8 = 0;\n
        cgc__terminate();\n
    }\n
    v8 = v22;\n
    v9 = &v12[2].padding_0[143];\n
    cgc_AddToResponse(v9, v10);\n
    v8 = ebp<4> - 1152;\n
    v9 = 0;\n
    v10 = 12;\n
    cgc_memset(v9, v10, v11);\n
    v47 = v12;\n
    v13 = *((0x4347c000 + v14->field_c));\n
    v8 = ebp<4> - 1152;\n
    v9 = &v47[2].padding_0[136];\n
    v10 = v13;\n
    cgc_sprintf(v9, v10);\n
    v8 = v22;\n
    v9 = ebp<4> - 1152;\n
    cgc_AddToResponse(v9, v10);\n
    v8 = v22;\n
    v9 = &v12[2].padding_0[234];\n
    cgc_AddToResponse(v9, v10);\n
}\n
", "4222532:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:cgc_pow": null, "5242884:__libc_start_main": null, "5242888:cgc__terminate": null, "5242892:cgc_transmit": null, "5242896:cgc_allocate": null, "5242900:cgc_rint": null, "5242904:cgc_log10": null, "5242908:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}