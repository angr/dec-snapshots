{"4198400:_init": "extern struct_0 *g_404f60;\n
\n
int _init()\n
{\n
    if (g_404f60)\n
    {\n
        g_404f60();\n
        return;\n
    }\n
    return;\n
}\n
", "4198448:sub_401030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_401030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4198464:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4198480:cgc__terminate": "// attributes: PLT stub\n
int cgc__terminate()\n
{\n
    ::libc.so.0::cgc__terminate();\n
    return;\n
}\n
", "4198496:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4198512:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4198528:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4198544:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4198560:sub_4010a0": "int sub_4010a0()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4198566:sub_4010a6": null, "4198576:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4198619:sub_4010db": null, "4198620:sub_4010dc": "int sub_4010dc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198624:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4198628:sub_4010e4": null, "4198640:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 15991;\n
    v6 = v5 + 13;\n
    v7 = v5 + 13;\n
    if (v7 == v6)\n
        return v5 + 13;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4198691:sub_401123": "int sub_401123()\n
{\n
}\n
", "4198697:sub_401129": "int sub_401129()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4198704:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 15927;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 13;\n
    v9 = (v6 + 13 - (v6 + 13) >> 31) + (13 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4198775:sub_401177": "int sub_401177()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4198784:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_404f5c;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_404f5c)\n
    {\n
        v0 = __dso_handle;\n
        sub_4010a0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4198859:sub_4011cb": "int sub_4011cb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4198864:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4198873:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4198877:sub_4011dd": null, "4198880:cgc_calloc": "int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    int tmp_21;  // tmp #21\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v2;  // eax\n
    unsigned int v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v2 = v1;\n
    tmp_21 = v2;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t21, Load(addr=stack_base+8, size=4, endness=Iend_LE), 0x0<32>))\n
        return 0;\n
    v5 = v2 * a0;\n
    v6 = cgc_malloc();\n
    if (v6)\n
    {\n
        v0 = v5;\n
        cgc_memset(v6, 0);\n
        return v6;\n
    }\n
    return 0;\n
}\n
", "4198958:sub_40122e": null, "4198960:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4198974:cgc_isprint": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
    {\n
        v2 = 0;\n
        *(&v2) = !(*((4206600 + v1)) & 32);\n
    }\n
    return v2;\n
}\n
", "4199014:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
    {\n
        v2 = 0;\n
        *(&v2) = (*((4206600 + v1)) & 7);\n
    }\n
    return v2;\n
}\n
", "4199051:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
    {\n
        v2 = 0;\n
        *(&v2) = (*((4206600 + v1)) & 3);\n
    }\n
    return v2;\n
}\n
", "4199088:cgc_islower": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_islower(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    void* v2;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
        v2 = *((4206600 + v1)) & 1;\n
    return v2;\n
}\n
", "4199123:cgc_isupper": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isupper(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
        v2 = *((4206600 + v1)) >> 1 & 1;\n
    return v2;\n
}\n
", "4199160:cgc_isspace": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
        v2 = *((4206600 + v1)) >> 4 & 1;\n
    return v2;\n
}\n
", "4199198:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    unsigned int v1;  // edx\n
    unsigned int v2;  // eax\n
\n
    v1 = v0;\n
    v2 = 0;\n
    if (v1 <= 127)\n
        v2 = *((4206600 + v1)) >> 3 & 1;\n
    return v2;\n
}\n
", "4199236:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    if (v1 <= 127 && v1 - 91 > -27)\n
        v1 += 32;\n
    return v1;\n
}\n
", "4199257:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    if (v1 <= 127 && v1 - 123 > -27)\n
        v1 -= 32;\n
    return v1;\n
}\n
", "4199278:sub_40136e": null, "4199280:cgc_free": "typedef struct struct_1 {\n
    char field_-4;\n
    char padding_-3[3];\n
    struct struct_1 *field_0;\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
extern unsigned int __bss_start;\n
extern char cgc_g_malloc;\n
\n
int cgc_free(struct_1 *v1)\n
{\n
    struct_1 *v0;  // [bp-0x18]\n
    struct_1 *v2;  // eax, Other Possible Types: unsigned int\n
    char v3;  // cl\n
    unsigned int *v4;  // esi, Other Possible Types: unsigned int\n
    struct_1 *v5;  // ebx\n
    unsigned int v6;  // edi\n
    unsigned int *v7;  // ebp, Other Possible Types: unsigned int\n
    struct_0 *v8;  // edi\n
    struct_1 *v9;  // edi, Other Possible Types: unsigned int\n
    struct struct_0 **v10;  // ecx, Other Possible Types: unsigned int\n
    struct_0 *v11;  // esi\n
\n
    v2 = v1;\n
    if (!v2)\n
        return v2;\n
    v3 = v2->field_0;\n
    if ((v2->field_0 & 1))\n
    {\n
        cgc__terminate();\n
        return cgc_malloc();\n
    }\n
    v2 = &v2->field_4;\n
    if ((v3 & 2))\n
    {\n
        v0 = *(v2);\n
        v2 = cgc_deallocate(v2);\n
        return v2;\n
    }\n
    *((v2 + 4)) = v3 | 1;\n
    v4 = &__bss_start;\n
    v9 = *(v2);\n
    v10 = -1;\n
    do\n
    {\n
        v10 += 1;\n
        v4 += 4;\n
    } while (v9 > 32 << (v10 & 31));\n
    if (v10 <= 11)\n
    {\n
        while (true)\n
        {\n
            v5 = v9 ^ v2;\n
            if (!(v5->field_0 & 1))\n
                break;\n
            if (*(&v5->field_-4) != v9)\n
                break;\n
            v6 = v5->field_8;\n
            v7 = v6 + 8;\n
            if (!v6)\n
                v7 = v4;\n
            *(v7) = *(&v5->field_4);\n
            v8 = *(&v5->field_4);\n
            if (v8)\n
                v8->field_c = v5->field_8;\n
            if (v5 < v2)\n
                v2 = v5;\n
            v9 = *(v2) * 2;\n
            *(v2) = v9;\n
            v10 += 1;\n
            v4 += 4;\n
            if (v10 == 12)\n
            {\n
                v10 = 12;\n
                break;\n
            }\n
        }\n
    }\n
    v11 = *(&(&cgc_g_malloc)[4 * v10]);\n
    *((v2 + 8)) = v11;\n
    if (v11)\n
        v11->field_c = v2;\n
    *((v2 + 12)) = 0;\n
    *(&(&cgc_g_malloc)[4 * v10]) = v2;\n
    return v2;\n
}\n
", "4199504:cgc_malloc": "typedef struct struct_3 {\n
    unsigned int field_0;\n
    char field_4;\n
} struct_3;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    char field_4;\n
    char padding_5[3];\n
    unsigned int field_8;\n
    unsigned int field_c;\n
} struct_2;\n
\n
typedef struct struct_4 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    unsigned int field_c;\n
} struct_4;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[4];\n
    char field_4;\n
    char padding_5[3];\n
    struct struct_0 *field_8;\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern struct_1 *__bss_start;\n
extern unsigned int cgc_g_malloc[13];\n
\n
int cgc_malloc(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1[13];  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    char v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    char v5;  // [bp-0x14]\n
    unsigned int v7;  // ebp\n
    struct struct_1 **v8;  // esi, Other Possible Types: unsigned int\n
    struct_3 *v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v12;  // eax\n
    struct_2 *v13;  // ebp\n
    unsigned int v14[13];  // ecx\n
    unsigned int v15;  // edx\n
    struct struct_4 **v16;  // ecx, Other Possible Types: unsigned int\n
    struct_4 *v17;  // edx\n
    struct_0 *v18;  // edi\n
    unsigned int v19;  // ebx\n
    struct struct_4 **v20;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v21[4];  // edi\n
    struct_0 *v22;  // ebx\n
    struct_1 *v23;  // ecx\n
    struct_0 *v24;  // eax\n
    unsigned int v25;  // edx\n
    struct struct_1 **v26;  // edi, Other Possible Types: unsigned int\n
\n
    v7 = v6 + 8;\n
    if (v6 + 8 > 65535)\n
    {\n
        v0 = &v5;\n
        if (!cgc_allocate(v7, 0))\n
        {\n
            v9 = *(&v5);\n
            v9->field_4 = v9->field_4 & 252 | 2;\n
            v9->field_0 = v7;\n
            return &v9[1].field_0 + 3;\n
        }\n
        return 0;\n
    }\n
    else\n
    {\n
        v1[0] = &cgc_g_malloc[0];\n
        v8 = &__bss_start;\n
        v15 = -1;\n
        do\n
        {\n
            v15 += 1;\n
            v8 += 4;\n
        } while (v7 > 32 << (v15 & 31));\n
        v2 = v15;\n
        v10 = v15;\n
        if (v15 <= 12)\n
        {\n
            while (!v1[v10])\n
            {\n
                v10 += 1;\n
                if (v10 == 13)\n
                    goto LABEL_4014f6;\n
            }\n
        }\n
        else if (v15 == 13)\n
        {\n
LABEL_4014f6:\n
            v0 = &v3;\n
            if (cgc_allocate(0x40000, 0))\n
                return 0;\n
            v12 = *(&v3);\n
            v13 = v12 + 131071 & -0x20000;\n
            if ((v12 + 131071 & -0x20000) != v12)\n
                cgc_deallocate(v12);\n
            cgc_deallocate(v13 + 0x2000);\n
            v13->field_0 = 0x20000;\n
            v13->field_4 = v13->field_4 & 252 | 1;\n
            v14 = v1;\n
            v13->field_8 = v14[12];\n
            v13->field_c = 0;\n
            v14[12] = v13;\n
            v10 = 12;\n
            v15 = v2;\n
        }\n
        if (v10 > v15)\n
        {\n
            v16 = &v1[v10];\n
            v17 = *(v16);\n
            do\n
            {\n
                v18 = v17->field_8;\n
                if (v18)\n
                    v18->field_c = v17->field_c;\n
                v19 = v17->field_c;\n
                v20 = v19 + 8;\n
                if (!v19)\n
                    v20 = v16;\n
                *(v20) = v18;\n
                v17->field_8 = 0;\n
                v17->field_c = 0;\n
                v4 = v17->field_4;\n
                v21 = v17->field_0 >> 1;\n
                v17->field_0 = v21;\n
                *(((v21 ^ v17) + 12)) = 0;\n
                *(((v21 ^ v17) + 8)) = 0;\n
                *(((v21 ^ v17) + 4)) = v4;\n
                *((v21 ^ v17)) = v21;\n
                v17->field_c = 0;\n
                v17->field_8 = v21 ^ v17;\n
                *(((v21 ^ v17) + 12)) = v17;\n
                v22 = v1[1 + v10];\n
                *(((v21 ^ v17) + 8)) = v22;\n
                if (v22)\n
                    v22->field_c = v21 ^ v17;\n
                v1[1 + v10] = v17;\n
                v16 -= 4;\n
                v10 -= 1;\n
            } while (v10 > v2);\n
        }\n
        v23 = *(v8);\n
        v24 = v23->field_8;\n
        if (v24)\n
            v24->field_c = v23->field_c;\n
        v25 = v23->field_c;\n
        v26 = v25 + 8;\n
        if (!v25)\n
            v26 = v8;\n
        *(v26) = v24;\n
        v23->field_8 = 0;\n
        v23->field_c = 0;\n
        v23->field_4 = v23->field_4 & 254;\n
        return &v23->field_8;\n
    }\n
}\n
", "4199997:sub_40163d": null, "4200000:cgc_malloc_size": "typedef struct struct_0 {\n
    unsigned int field_-8;\n
} struct_0;\n
\n
int cgc_malloc_size(struct_0 *v0)\n
{\n
    return v0[2].field_-8 - 8;\n
}\n
", "4200011:sub_40164b": null, "4200012:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4200054:sub_401676": null, "4200056:cgc_memcpy": "int cgc_memcpy(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = *((a0 + v2));\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4200090:sub_40169a": null, "4200092:cgc_memset": "int cgc_memset(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = a0;\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4200121:sub_4016b9": null, "4200124:cgc_fdprintf": "int cgc_fdprintf(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0xc]\n
    char v3;  // [bp+0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = v4;\n
    v1 = &v3;\n
    v0 = &v3;\n
    return cgc__printf(a0);\n
}\n
", "4200176:cgc__printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc__printf(char a0, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    int tmp_9;  // tmp #9\n
    int tmp_12;  // tmp #12\n
    int tmp_39;  // tmp #39\n
    unsigned int v0;  // [bp-0x68]\n
    unsigned int v1;  // [bp-0x64]\n
    char v2;  // [bp-0x5c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x58]\n
    unsigned int v4;  // [bp-0x54]\n
    unsigned int v5;  // [bp-0x50]\n
    unsigned int v6;  // [bp-0x4c]\n
    unsigned int v7;  // [bp-0x48]\n
    unsigned int v8;  // [bp-0x44]\n
    unsigned int v9;  // [bp-0x40]\n
    unsigned int v10;  // [bp-0x3c]\n
    unsigned int v11;  // [bp-0x38]\n
    unsigned int v12;  // [bp-0x34]\n
    char v13;  // [bp-0x12]\n
    char v14;  // [bp-0x11]\n
    unsigned int v15;  // [bp-0x8]\n
    unsigned int v16;  // [bp+0x4]\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // edx\n
    unsigned int v19;  // ecx\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // edx\n
    unsigned int v22;  // eax\n
    unsigned int v23;  // ebx\n
    unsigned int v24;  // ecx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // eax\n
    unsigned int v27;  // eax\n
    unsigned int v28;  // ebx\n
    unsigned int v29;  // ebx\n
    unsigned int v30;  // esi\n
    unsigned int v31;  // eax\n
    unsigned int v32;  // ecx\n
    unsigned int v33;  // ebx\n
    unsigned int v34;  // ebp\n
    unsigned int v35;  // eax\n
    unsigned int v36;  // eax\n
    unsigned int v38;  // eax\n
    unsigned int v39;  // esi\n
    unsigned int v41;  // ebx\n
    unsigned int v42;  // ecx\n
    unsigned int v43;  // ecx\n
    unsigned int v44;  // esi\n
    unsigned int v45;  // edi\n
    unsigned int v46;  // ebp\n
    unsigned int v47;  // ebp\n
    unsigned int v48;  // edi\n
    unsigned int v49;  // eax\n
    unsigned int v50;  // eax\n
    unsigned int v51;  // esi\n
    unsigned int v52;  // eax\n
    unsigned int v53;  // eax\n
    unsigned int v54;  // eax\n
    unsigned int v56;  // ebx\n
    unsigned int v57;  // eax\n
    unsigned int v58;  // eax\n
\n
    v15 = v17;\n
    v6 = v18;\n
    v46 = v19;\n
    v23 = \"PN\";\n
    v5 = a0;\n
    v22 = v16;\n
    v3 = 0;\n
    v43 = \" \";\n
    v12 = \" \";\n
    v2 = 0;\n
    v21 = 0;\n
    v8 = v46;\n
    v4 = \"PN\";\n
    while (true)\n
    {\n
        if (*(v22) != 37)\n
        {\n
            if (*(v22))\n
            {\n
                if (!v21)\n
                    v21 = v22;\n
                v9 = v21;\n
                v16 = v22 + 1;\n
                *(&v21) = v2;\n
                goto LABEL_401ba3;\n
            }\n
            if (!v21)\n
                return v3;\n
            tmp_2 = v22;\n
            v57 = v22 - v21;\n
            if (tmp_2 != v21)\n
            {\n
                v1 = v57;\n
                v58 = v46(v6, v21);\n
                if (v58 >= 0)\n
                {\n
                    v3 += v58;\n
                    return v3;\n
                }\n
LABEL_401bda:\n
                v3 = -1;\n
                return v3;\n
            }\n
        }\n
        if (v21 && v22 != v21)\n
        {\n
            v1 = v22 - v21;\n
            v20 = v46(v6, v21);\n
            if (v20 < 0)\n
                goto LABEL_401bda;\n
            v3 += v20;\n
            if (v20 < v1)\n
                return v3;\n
            v22 = v16;\n
            v23 = v4;\n
        }\n
        v24 = v22 + 1;\n
        v16 = v24;\n
        if (*((v22 + 1)) == 37)\n
            break;\n
        v10 = v12;\n
        if (*((v22 + 1)) == 48)\n
        {\n
            v26 = v22 + 2;\n
            do\n
            {\n
                v16 = v26;\n
                tmp_9 = *(v26);\n
                v26 += 1;\n
            } while (tmp_9 == 48);\n
            v27 = v26 - 1;\n
            v10 = v23 - 7864;\n
            v24 = v27;\n
        }\n
        v1 = 10;\n
        v30 = cgc_strtoul(v24, &v16);\n
        v31 = v16;\n
        *(&v21) = *(v31);\n
        v32 = *(v31);\n
        if (v32 == 72)\n
        {\n
LABEL_4017fa:\n
            v16 = v31 + 1;\n
            *(&v21) = *((v31 + 1));\n
            v31 = v16;\n
            goto LABEL_401848;\n
        }\n
        else\n
        {\n
            if (v32 == 108)\n
                goto LABEL_4017fa;\n
            if (v32 == 104)\n
                goto LABEL_4017fa;\n
            *(&v21) = v21;\n
            *(&v21) = v2;\n
LABEL_401848:\n
            v33 = v4;\n
            v43 = v21;\n
            v9 = 0;\n
            if (v43 > 109)\n
            {\n
                v43 -= 110;\n
                switch (v43)\n
                {\n
                case 0:\n
                    v43 = *(v5);\n
                    if (v21 == 72)\n
                    {\n
                        *(v43) = v3;\n
                        v31 = v16;\n
                        break;\n
                    }\n
                    else\n
                    {\n
                        v2 = v21;\n
                        if (v21 != 104)\n
                            *(v43) = v3;\n
                        else\n
                            *(v43) = v3;\n
                        *(&v21) = v2;\n
                        break;\n
                    }\n
                    v5 += 4;\n
                    v16 = v31 + 1;\n
                    goto LABEL_401ba3;\n
                case 1: case 7: case 10:\n
                    v34 = (v21 != 111) * 8 + 8;\n
                    if (v21 == 117)\n
                        v34 = 10;\n
                    v43 = *(v5);\n
                    v2 = v21;\n
                    v7 = v30;\n
                    if (!v43)\n
                    {\n
                        v14 = 48;\n
                        v44 = 1;\n
                        v45 = &v14;\n
                    }\n
                    else\n
                    {\n
                        v41 = v33 - 7843;\n
                        if (v21 == 88)\n
                            v41 = v33 - 7860;\n
                        v14 = *((v41 + ((0 CONCAT v43) /m v34 >> 32)));\n
                        v44 = 1;\n
                        v45 = &v14;\n
                        if (v43 >= v34)\n
                        {\n
                            v45 = &v14;\n
                            v44 = 1;\n
                            do\n
                            {\n
                                v44 += 1;\n
                                v43 = (0 CONCAT v43) /m v34;\n
                                *((v45 - 1)) = *((v41 + ((0 CONCAT v43) /m v34 >> 32)));\n
                                v45 = &v13;\n
                            } while (v43 >= v34);\n
                        }\n
                    }\n
                    v5 += 4;\n
                    v46 = v8;\n
                    if (v7 > v44)\n
                    {\n
                        do\n
                        {\n
                            v1 = 1;\n
                            v49 = v46(v6, v10);\n
                            v3 += v49;\n
                            tmp_12 = v49;\n
                            v50 = (!v49) * 9;\n
                            v43 = 8;\n
                            if (tmp_12 < 0)\n
                                v50 = 8;\n
                            if (v50)\n
                                *(&v43) = v2;\n
                            v7 -= 1;\n
                        } while (v7 > v44);\n
                    }\n
                    v1 = v44;\n
                    v52 = v46(v6, v45);\n
                    if (v52 >= 0)\n
                    {\n
                        v3 += v52;\n
                        if (v52 < v44)\n
                            return v3;\n
                        goto LABEL_401b5b;\n
                    }\n
                case 5:\n
                    v2 = v21;\n
                    v35 = cgc_strlen();\n
                    if (!v35)\n
                    {\n
LABEL_401a3e:\n
                        v5 += 4;\n
                        goto LABEL_401b5b;\n
                    }\n
                    else\n
                    {\n
                        v1 = v35;\n
                        v38 = v46(v6, *(v5));\n
                        if (v38 >= 0)\n
                        {\n
                            v3 += v38;\n
                            if (v38 < v35)\n
                                return v3;\n
                            goto LABEL_401a3e;\n
                        }\n
                    }\n
                default:\n
LABEL_401ba3:\n
                    v22 = v16;\n
                    *(&v43) = v21;\n
                    v2 = v43;\n
                    v21 = v9;\n
                    continue;\n
                }\n
            }\n
            else if (v43 != 88)\n
            {\n
                if (v43 != 100 && !(v43 == 105))\n
                    goto LABEL_401ba3;\n
                v36 = *(v5);\n
                v7 = v30;\n
                if (v21 == 72)\n
                {\n
                    v36 = v36;\n
                    v43 = 3435973837;\n
                }\n
                else\n
                {\n
                    v43 = 3435973837;\n
                    if (v21 == 104)\n
                        v36 = v36;\n
                }\n
                v2 = v21;\n
                v39 = -(v36);\n
                v11 = v36;\n
                if (!(v36) < 0)\n
                    v39 = v36;\n
                if (!v39)\n
                {\n
                    v14 = 48;\n
                    v48 = 1;\n
                    v47 = &v14;\n
                }\n
                else\n
                {\n
                    v14 = *((v4 + v39 - (v39 * 3435973837 >> 32 >> 2 & -2) * 5 - 7843));\n
                    v48 = 1;\n
                    v43 = 3435973837;\n
                    v47 = &v14;\n
                    if (v39 >= 10)\n
                    {\n
                        v48 = 1;\n
                        v47 = &v14;\n
                        do\n
                        {\n
                            v42 = v39 * 3435973837 >> 32 >> 3;\n
                            *((v47 - 1)) = *((v4 + v42 - ((v39 * 3435973837 >> 32 >> 3) * 3435973837 >> 32 >> 2 & -2) * 5 - 7843));\n
                            v48 += 1;\n
                            v47 = &v13;\n
                            tmp_39 = v39;\n
                            v39 = v42;\n
                            v43 = 3435973837;\n
                        } while (tmp_39 > 99);\n
                    }\n
                }\n
                if (v11 < 0)\n
                {\n
                    *((v47 - 1)) = 45;\n
                    v47 -= 1;\n
                    v48 += 1;\n
                }\n
                v51 = v7;\n
                v5 += 4;\n
                if (v51 > v48)\n
                {\n
                    do\n
                    {\n
                        v1 = 1;\n
                        v53 = v8(v6, v10);\n
                        v3 += v53;\n
                        tmp_12 = v53;\n
                        v50 = (!v53) * 9;\n
                        v43 = 8;\n
                        if (tmp_12 < 0)\n
                            v50 = 8;\n
                        if (v50)\n
                        {\n
                            *(&v43) = v2;\n
                            v46 = v8;\n
                        }\n
                        v51 -= 1;\n
                    } while (v51 > v48);\n
                }\n
                if (!v48)\n
                {\n
                    v46 = v8;\n
LABEL_401b5b:\n
                    v16 += 1;\n
                    v56 = v4;\n
                    *(&v21) = v2;\n
                    goto LABEL_401ba3;\n
                }\n
                else\n
                {\n
                    v1 = v48;\n
                    v0 = v47;\n
                    v46 = v8;\n
                    v54 = v8(v6, v0);\n
                    if (v54 >= 0)\n
                    {\n
                        v3 += v54;\n
                        if (v54 < v48)\n
                            return v3;\n
                        goto LABEL_401b5b;\n
                    }\n
                }\n
            }\n
        }\n
    }\n
    v1 = 1;\n
    v25 = v46(v6, v24);\n
    v3 += v25;\n
    tmp_12 = v25;\n
    v50 = (!v25) * 9;\n
    v43 = 8;\n
    if (tmp_12 < 0)\n
        v50 = 8;\n
    if (!v50)\n
    {\n
        v16 += 1;\n
        v9 = 0;\n
        *(&v21) = v2;\n
        v29 = v4;\n
        goto LABEL_401ba3;\n
    }\n
    else\n
    {\n
        v28 = v4;\n
        v43 = v2;\n
    }\n
    if (v50 == 2)\n
    {\n
        v9 = 0;\n
        *(&v21) = v43;\n
        goto LABEL_401ba3;\n
    }\n
    else if (v50 != 8)\n
    {\n
        return v3;\n
    }\n
}\n
", "4201453:cgc__consumer_fd": "int cgc__consumer_fd(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // esi\n
\n
    cgc_transmit(v1, a0, a1, &v0, v2, v3);\n
    return a1;\n
}\n
", "4201500:cgc_sprintf": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
int cgc_sprintf(unsigned int v1)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v2;  // [bp+0x8]\n
    char v3;  // [bp+0xc]\n
    unsigned int v4;  // eax\n
\n
    v0 = v4;\n
    v0 = &v3;\n
    return cgc__printf(*(&v2), &v3);\n
}\n
", "4201552:cgc__consumer_string": "int cgc__consumer_string(struct struct_0 **v1, unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
    struct struct_0 **v4;  // edi\n
    unsigned int v5;  // eax\n
\n
    v0 = v2;\n
    v3 = a1;\n
    v4 = v1;\n
    cgc_memcpy(*(v4), a0, v3);\n
    v5 = *(v4);\n
    *(v4) = &v3[v5];\n
    v3[v5] = 0;\n
    return a1;\n
}\n
", "4201610:cgc_vsnprintf": "int cgc_vsnprintf(unsigned int v2, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v3;  // eax\n
\n
    v3 = a0;\n
    if (!v3)\n
        return 0;\n
    v0 = v2;\n
    v1 = v3 - 1;\n
    return cgc__printf(a1, a2);\n
}\n
", "4201688:cgc__consumer_string_checked": "int cgc__consumer_string_checked(struct struct_0 *v0[2], unsigned int a0, char *a1)\n
{\n
    struct struct_0 *v1[2];  // edi\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
\n
    v1 = v0;\n
    v2 = a1;\n
    if (v2 < v2)\n
        v2 = v1[1];\n
    if (v2)\n
    {\n
        cgc_memcpy(v1[0], a0, v2);\n
        v3 = v1[0];\n
        v1[0] = v3 + v2;\n
        *((v3 + v2)) = 0;\n
        v1[1] = &(v1[1])[-1 * v2];\n
        return v2;\n
    }\n
    return v2;\n
}\n
", "4201761:cgc_snprintf": "int cgc_snprintf(unsigned int v3, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v4;  // [bp+0x10]\n
    unsigned int v5;  // ecx\n
\n
    v5 = a0;\n
    v0 = &v4;\n
    if (!v5)\n
        return 0;\n
    v1 = v3;\n
    v2 = v5 - 1;\n
    return cgc__printf(a1, v0);\n
}\n
", "4201847:sub_401d77": null, "4201848:cgc_readuntil": "int cgc_readuntil(unsigned int v3, char a0[2], unsigned int a1, char a2)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x18]\n
    char v2;  // [bp-0x14]\n
    unsigned int v4;  // esi\n
    char v5[2];  // edi, Other Possible Types: unsigned int\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // ecx\n
\n
    v4 = a1;\n
    v5 = a0;\n
    v7 = &v5[v4 + 1];\n
    if (v7 != v5)\n
    {\n
        v1 = v7;\n
        v6 = v4 - 1;\n
        while (true)\n
        {\n
            v0 = &v2;\n
            if (cgc_receive(v3, v5, 1))\n
                break;\n
            if (!*(&v2))\n
                break;\n
            if (*(v5) == a2)\n
                break;\n
            v5 += 1;\n
            v6 -= 1;\n
            if (!v6)\n
                return 1;\n
        }\n
        v7 = v1;\n
    }\n
    v8 = 1;\n
    if (v5 != v7 && *(v5) == a2)\n
    {\n
        *((v5 + 1)) = 0;\n
        v8 = 0;\n
    }\n
    return v8;\n
}\n
", "4201971:cgc_writeall": "int cgc_writeall(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ebp\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // ecx\n
\n
    v3 = a0;\n
    v4 = a1 + v3;\n
    while (true)\n
    {\n
        if (v3 != v4)\n
        {\n
            v5 = v3;\n
            v6 = v4 - v3;\n
            v0 = &v1;\n
            if (cgc_transmit(v2, a0, v6))\n
                return v5 - a0;\n
            v7 = *(&v1);\n
            v3 = v5 + v7;\n
            if (!v7)\n
                return v5 - a0;\n
        }\n
        else\n
        {\n
            return v4 - a0;\n
        }\n
    }\n
}\n
", "4202065:sub_401e51": null, "4202068:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-8;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // esi, Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // edi\n
    unsigned int v6;  // eax\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!a0)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        if (!v2)\n
            return cgc_malloc(v1);\n
        v3 = v2[2].field_-8;\n
        if (v3 >> 1 < v1 && !(v3 - 8 <= v1))\n
            goto LABEL_401ec8;\n
        v4 = cgc_malloc(v1);\n
        if (v4)\n
        {\n
            v5 = v4;\n
            v6 = v2[2].field_-8 - 8;\n
            if (v6 > v1)\n
                v6 = v1;\n
            cgc_memcpy(v5, v2, v6);\n
            cgc_free(v2);\n
            v2 = v5;\n
            goto LABEL_401ec8;\n
        }\n
    }\n
    v2 = 0;\n
LABEL_401ec8:\n
    return v2;\n
}\n
", "4202204:cgc_strchr": "typedef struct struct_0 {\n
    char padding_0[1];\n
    char field_1;\n
} struct_0;\n
\n
int cgc_strchr(unsigned int v0, unsigned int a0)\n
{\n
    struct_0 *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0 - 1;\n
    while (true)\n
    {\n
        v2 = *((v1 + 1));\n
        v1 += 1;\n
        if (!v2)\n
            break;\n
        if (v2 == a0)\n
            break;\n
    }\n
    if (v2)\n
        return v1;\n
    return 0;\n
}\n
", "4202234:sub_401efa": null, "4202236:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    unsigned int v1;  // eax\n
    char *v2;  // esi\n
    unsigned int v3;  // ecx\n
    char v4;  // dl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    v3 = 0;\n
    while (true)\n
    {\n
        if (!v4)\n
            return a0[v3] - 0;\n
        if (!*((v1 + v3)))\n
            return a0[v3] - v4;\n
        if (v4 != *((v1 + v3)))\n
            return a0[v3] - v4;\n
        v4 = v2[1 + v3];\n
        v3 += 1;\n
    }\n
}\n
", "4202286:sub_401f2e": null, "4202288:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // bl\n
    unsigned int v4;  // edx\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    for (v4 = 0; v3; v4 += 1)\n
    {\n
        v2[v4] = v3;\n
        v3 = v1[1 + v4];\n
    }\n
    v2[v4] = 0;\n
    return v0;\n
}\n
", "4202321:sub_401f51": null, "4202324:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4202342:sub_401f66": null, "4202344:cgc_strncpy": "int cgc_strncpy(char *v0, char *a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // edx\n
\n
    v1 = a1;\n
    v2 = v0;\n
    if (!v1)\n
    {\n
        v4 = 0;\n
    }\n
    else\n
    {\n
        v3 = a0;\n
        v4 = 0;\n
        while (*((v3 + v4)))\n
        {\n
            v2[v4] = *((v3 + v4));\n
            v4 += 1;\n
            if (v1 == v4)\n
                return v0;\n
        }\n
    }\n
    if (v4 < v1)\n
    {\n
        do\n
        {\n
            v2[v4] = 0;\n
            v4 += 1;\n
        } while (v1 != v4);\n
    }\n
    return v0;\n
}\n
", "4202399:sub_401f9f": null, "4202400:cgc_strsep": "typedef struct struct_1 {\n
    char field_-1;\n
    char field_0;\n
} struct_1;\n
\n
int cgc_strsep(struct struct_0 **v0, unsigned int a0)\n
{\n
    int tmp_7;  // tmp #7\n
    struct struct_0 **v1;  // ecx, Other Possible Types: unsigned int\n
    char *v2;  // esi\n
    unsigned int v3;  // al, Other Possible Types: char\n
    struct_1 *v4;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v5;  // edx, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return v2;\n
    v3 = *(v2);\n
    v5 = 0;\n
    if (*(v2))\n
    {\n
        v4 = v2 + 1;\n
        do\n
        {\n
            v3 = cgc_strchr(a0, v3);\n
            if (v3)\n
            {\n
                v1 = v0;\n
                v5 = 0;\n
                if (*((v4 - 1)))\n
                {\n
                    *((v4 - 1)) = 0;\n
                    v5 = v4;\n
                    goto LABEL_402005;\n
                }\n
            }\n
            tmp_7 = *(v4);\n
            *(&v3) = *(v4);\n
            v4 += 1;\n
        } while (tmp_7);\n
        v1 = v0;\n
        v5 = 0;\n
    }\n
LABEL_402005:\n
    *(v1) = v5;\n
    return v2;\n
}\n
", "4202513:sub_402011": null, "4202516:cgc_strtol": "typedef struct struct_0 {\n
    char field_-1;\n
    char field_0;\n
    char field_1;\n
} struct_0;\n
\n
int cgc_strtol(struct_0 *v4, unsigned int *a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    unsigned int v0;  // [bp-0x20]\n
    void* v1;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v5;  // edi\n
    char v6;  // ecx\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    struct_0 *v8;  // esi, Other Possible Types: unsigned int\n
    unsigned int v9;  // cc_dep1\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // cc_dep1\n
    void* v12;  // ecx, Other Possible Types: unsigned int\n
    char *v13;  // ebp\n
    unsigned int v14;  // edx\n
    struct_0 *v15;  // edi\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // eax\n
    unsigned int *v19;  // eax\n
\n
    v5 = a1;\n
    if (v5)\n
    {\n
        v6 = v5 - 37;\n
        if (v6 < -35)\n
            return 0;\n
    }\n
    v8 = v4;\n
    *(&v7) = v8->field_-1;\n
    v6 = 1;\n
    *(&v1) = v6;\n
    if (v8->field_-1)\n
    {\n
        v8 = &v8->field_0;\n
        while (true)\n
        {\n
            v7 = cgc_isspace(v7);\n
            if (v7)\n
            {\n
                tmp_5 = *(v8);\n
                *(&v7) = *(v8);\n
                v8 += 1;\n
                if (!tmp_5)\n
                    goto LABEL_40207b;\n
            }\n
            else\n
            {\n
                if (*((v8 - 1)) == 43)\n
                    break;\n
                if (*((v8 - 1)) == 45)\n
                {\n
                    v1 = 0;\n
                    break;\n
                }\n
LABEL_40207b:\n
                v8 -= 1;\n
                break;\n
            }\n
        }\n
    }\n
    if (!(v5 & -17))\n
    {\n
        if (*(v8) != 48)\n
        {\n
            v9 = v5;\n
            v10 = 10;\n
        }\n
        else if (*((v8 + 1)) == 120)\n
        {\n
            v8 += 2;\n
            v0 = 16;\n
            goto LABEL_4020b3;\n
        }\n
        else\n
        {\n
            v11 = v5;\n
            v10 = 8;\n
        }\n
        if ([D] x86g_calculate_condition(0x4<32>, 0xf<32>, cc_dep1<4>, 0x0<32>, 0x0<32>))\n
            v5 = v10;\n
    }\n
    v0 = v5;\n
LABEL_4020b3:\n
    v12 = 0;\n
    v2 = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n
    v13 = v2;\n
    while (true)\n
    {\n
        v14 = v12;\n
        v15 = v8;\n
        v16 = *(v8);\n
        if (!v16)\n
            break;\n
        v3 = v12;\n
        v17 = v0;\n
        v18 = cgc_memchr(v13, cgc_tolower(v16), v17);\n
        v14 = v3;\n
        v12 = v17 * v14 - v13 + v18;\n
        v8 = &v15->field_0;\n
        if (!v18)\n
            break;\n
    }\n
    v19 = a0;\n
    if (v19)\n
        *(v19) = v8;\n
    if (!v1)\n
        return -(v14);\n
    return v14;\n
}\n
", "4202784:cgc_strtoul": "int cgc_strtoul(void* v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4202825:sub_402149": null, "4202828:main": "typedef struct struct_4 {\n
    char padding_0[44];\n
    unsigned int field_2c;\n
    unsigned int field_30;\n
    char padding_34[56];\n
    unsigned int field_6c;\n
    unsigned int field_70;\n
    unsigned short field_74;\n
    char padding_76[6];\n
    struct struct_3 *field_7c;\n
    char padding_80[4];\n
    unsigned int field_84;\n
    unsigned int field_88;\n
    struct struct_3 *field_8c;\n
} struct_4;\n
\n
typedef struct struct_3 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    struct struct_3 *field_c;\n
    unsigned int field_10;\n
    struct struct_2 *field_14;\n
} struct_3;\n
\n
typedef struct struct_11 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_11;\n
\n
typedef struct struct_5 {\n
    unsigned int field_0;\n
    char padding_4[8];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_6 *field_14;\n
} struct_5;\n
\n
typedef struct struct_9 {\n
    char field_-7;\n
    char padding_-6[6];\n
    unsigned int field_0;\n
} struct_9;\n
\n
typedef struct struct_7 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_7;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
    char padding_c[8];\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_8 {\n
    char field_0;\n
    char field_1;\n
    char field_2;\n
    char padding_3[1];\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char padding_c[20];\n
    unsigned int field_20;\n
} struct_8;\n
\n
typedef struct struct_10 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_10;\n
\n
typedef struct struct_2 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
    unsigned int field_8;\n
} struct_2;\n
\n
typedef struct struct_6 {\n
    unsigned int field_0;\n
} struct_6;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern struct_4 _GLOBAL_OFFSET_TABLE_;\n
extern char pkthdr;\n
\n
int main()\n
{\n
    struct_4 *v0;  // [bp-0x38]\n
    int tmp_4;  // tmp #4\n
    int tmp_6;  // tmp #6\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c], Other Possible Types: unsigned short\n
    char v4;  // [bp-0x2a]\n
    unsigned int v5;  // [bp-0x29]\n
    struct_3 *v6;  // [bp-0x24], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x20]\n
    unsigned short v8;  // [bp-0x1c], Other Possible Types: char\n
    char v9;  // [bp-0x1b]\n
    char v10;  // [bp-0x1a]\n
    unsigned int v11;  // [bp-0x19]\n
    unsigned int v12;  // [bp-0x15]\n
    struct_4 *v14;  // esi, Other Possible Types: unsigned int\n
    void* v15;  // edi, Other Possible Types: unsigned int, unsigned int *\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // edx\n
    unsigned int v18;  // esi\n
    unsigned int v19[5];  // ecx, Other Possible Types: unsigned int\n
    unsigned int v20;  // eax\n
    unsigned int v21;  // esi\n
    unsigned int v22;  // eax\n
    struct_4 *v24;  // ebx\n
    unsigned int v25;  // eax\n
    unsigned int v26;  // edx\n
    struct_4 *v27;  // ebx\n
    struct_3 *v28;  // eax, Other Possible Types: unsigned int\n
    unsigned int v29;  // eax\n
    unsigned int *v30;  // esi\n
    unsigned int v31[4];  // eax\n
    struct_11 *v32;  // eax\n
    unsigned int v33[4];  // edi\n
    unsigned int v34;  // eax\n
    unsigned int v35;  // eax\n
    struct_5 *v36;  // eax\n
    struct_3 *v37;  // edx, Other Possible Types: unsigned int\n
    struct_3 *v38;  // ecx, Other Possible Types: unsigned int\n
    struct_3 *v39;  // edx, Other Possible Types: unsigned int\n
    struct_3 *v40;  // ecx, Other Possible Types: unsigned int\n
    struct_3 *v41;  // eax, Other Possible Types: unsigned int\n
    unsigned int v42;  // ecx\n
    struct_3 *v43;  // eax\n
    struct_3 *v44;  // ecx, Other Possible Types: unsigned int\n
    struct_9 *v45;  // edx, Other Possible Types: unsigned int\n
    struct_3 *v46;  // eax, Other Possible Types: unsigned int\n
    unsigned int v47[3];  // esi\n
    unsigned int v48[3];  // edx\n
    unsigned int v49;  // esi\n
    unsigned int v51[3];  // edx\n
    unsigned int v52;  // esi\n
    unsigned int v53;  // esi\n
    unsigned int v54;  // eax\n
    unsigned int v55;  // ecx\n
    struct_7 *v56;  // esi\n
    struct_0 *v57;  // edx\n
    unsigned int v58;  // ecx\n
    struct_3 *v59;  // eax, Other Possible Types: unsigned int\n
    struct_4 *v60;  // ebx\n
    unsigned int v61;  // ebp\n
    struct_3 *v62;  // eax\n
    unsigned int *v63;  // ebp\n
    unsigned int v64;  // ecx\n
    struct_4 *v65;  // eax\n
    unsigned int v68;  // esi\n
    struct_8 *v69;  // ebp, Other Possible Types: unsigned int\n
    unsigned short v70;  // bx\n
    unsigned int v71;  // edx\n
    unsigned short v72;  // ax\n
    unsigned int v74[3];  // ecx\n
    unsigned int v75;  // esi\n
    struct_10 *v77;  // eax\n
\n
    v14 = \"PN\";\n
    cgc_enlarge_transactions_array();\n
    if (cgc_read_fully())\n
        return 0;\n
    v15 = 0;\n
    v0 = &\"PN\";\n
    v7 = &pkthdr;\n
    while (true)\n
    {\n
        *((v14 + 124)) = 0;\n
        if (!v15)\n
        {\n
            v16 = *((v14 + 119));\n
        }\n
        else\n
        {\n
            v16 = *(v15);\n
            if (v16 != *((v14 + 119)))\n
                goto LABEL_402b00;\n
        }\n
        v17 = *((v14 + 136));\n
        v19 = 0;\n
        if (v17)\n
        {\n
            v18 = *((v14 + 132)) - 24;\n
            do\n
            {\n
                v18 += 24;\n
                if (v18 == v16)\n
                {\n
                    v19 = v16;\n
                    break;\n
                }\n
                v17 -= 1;\n
            } while (v17);\n
            v14 = v0;\n
        }\n
        v20 = *((v14 + 116)) | *((v14 + 118)) * 0x10000;\n
        v21 = v20;\n
        if (v21 != 4)\n
        {\n
            if (!v19)\n
            {\n
                if (v20 != 1)\n
                    cgc_send_error(); /* do not return */\n
                v14 = v0;\n
                v28 = v14->field_8c;\n
                if (v28)\n
                {\n
                    while (*(v28) != v14->field_6c)\n
                    {\n
                        v28 = *((v28 + 12));\n
                        if (!v28)\n
                            goto LABEL_402a19;\n
                    }\n
                    if (*((v28 + 4)) == v14->field_70)\n
                    {\n
                        v32 = cgc_new_transaction();\n
                        v14->field_7c = &v32;\n
                        v3 = *(&v14->field_74);\n
                        v5 = *(&v14->padding_76[1]);\n
                        v2 = v14->field_70;\n
                        v1 = v14->field_6c;\n
                        v4 = 0;\n
                        v5 = v32->field_c;\n
                        cgc_writeall(1, &v1, 15);\n
                        v15 = &v14->field_7c->field_c;\n
                        goto LABEL_402a10;\n
                    }\n
                }\n
LABEL_402a19:\n
                goto LABEL_402b00;\n
            }\n
            v26 = *((v19 + 8));\n
            v27 = v0;\n
            if (!(v26 == v21))\n
                goto LABEL_402a2b;\n
            if (!(v27->field_6c == *((v19 + 16))))\n
                goto LABEL_402a2b;\n
            if (!(v27->field_70 == *(v19)))\n
                goto LABEL_402a2b;\n
            v27->field_7c = v19;\n
            v29 = v20 * 0x10000;\n
            v14 = v27;\n
            if (v29 != 0x30000)\n
            {\n
                if (v29 != 0x20000)\n
                    goto LABEL_402b00;\n
                if ((v26 & 0xff00) != 0x100)\n
                    goto LABEL_402b00;\n
                if (cgc_read_data())\n
                {\n
                    goto LABEL_402b00;\n
                }\n
                else\n
                {\n
                    switch (*(&v27->field_74 + 1))\n
                    {\n
                    case 0:\n
                        v59 = v27->field_7c;\n
                        v37 = v27->field_8c;\n
                        v38 = 0;\n
                        if (v37)\n
                        {\n
                            do\n
                            {\n
                                if (*(v37) == v59->field_10)\n
                                {\n
                                    v38 = v37;\n
                                    break;\n
                                }\n
                                v37 = *((v37 + 12));\n
                            } while (v37);\n
                        }\n
                        v48 = v59->field_14;\n
                        v49 = *((v38 + 8));\n
                        tmp_4 = v49;\n
                        if (tmp_4 < v48[1])\n
                            cgc_send_error(); /* do not return */\n
                        *((v38 + 8)) = v49 - v48[1];\n
                        v59->field_8 = v59->field_8 & -16776961 | 0x200;\n
                        v55 = v48[2];\n
                        goto LABEL_40281c;\n
                        goto LABEL_40281c;\n
                    case 1:\n
                        v59 = v27->field_7c;\n
                        v39 = v27->field_8c;\n
                        v40 = 0;\n
                        if (v39)\n
                        {\n
                            do\n
                            {\n
                                if (*(v39) == *((v59 + 16)))\n
                                {\n
                                    v40 = v39;\n
                                    break;\n
                                }\n
                                v39 = *((v39 + 12));\n
                            } while (v39);\n
                        }\n
                        v51 = *((v59 + 20));\n
                        v52 = v51[0];\n
                        tmp_4 = v52;\n
                        v53 = v52 + *((v40 + 8));\n
                        if ([D] x86g_calculate_condition(0x2<32>, 0x3<32>, t4, Load(addr=(ecx<4> + 0x8<32>), size=4, endness=Iend_LE), 0x0<32>))\n
                            cgc_send_error(); /* do not return */\n
                        *((v40 + 8)) = v53;\n
                        *((v59 + 8)) = *((v59 + 8)) & -16776961 | 0x200;\n
                        v55 = v51[1];\n
LABEL_40281c:\n
                        *((v59 + 4)) = v55;\n
                        v14 = v0;\n
                        v3 = *(&v14->field_74);\n
                        v5 = *(&v14->padding_76[1]);\n
                        v2 = v14->field_70;\n
                        v1 = v14->field_6c;\n
                        v4 = 0;\n
                        cgc_writeall(1, &v1, 15);\n
                        goto LABEL_402a10;\n
                    case 2:\n
                        v41 = v27->field_8c;\n
                        if (v41)\n
                        {\n
                            do\n
                            {\n
                                if (*(v41) == v27->field_7c->field_10)\n
                                {\n
                                    v6 = v41;\n
                                    goto LABEL_40286f;\n
                                }\n
                                v41 = *((v41 + 12));\n
                            } while (v41);\n
                            goto LABEL_40286f;\n
                        }\n
                        v6 = 0;\n
LABEL_40286f:\n
                        v54 = cgc_malloc(4);\n
                        v27->field_7c->field_14 = v54;\n
                        if (!v54)\n
                        {\n
LABEL_402b00:\n
                            cgc_send_error(); /* do not return */\n
                        }\n
                        v3 = *(&v27->field_74);\n
                        v5 = *(&v27->padding_76[1]);\n
                        v2 = v27->field_70;\n
                        v1 = v27->field_6c;\n
                        v4 = 0;\n
                        cgc_writeall(1, &v1, 15);\n
                        v62 = v0->field_7c;\n
                        v63 = v62->field_14;\n
                        cgc_memset(v62->field_14, 0, 4);\n
                        *(v63) = *((v6 + 8));\n
                        v14 = v0;\n
                        cgc_writeall(1, v63, 4);\n
LABEL_40291c:\n
                        v77 = *((v14 + 124));\n
                        v77->field_8 = v77->field_8 & -16776961 | 0x200;\n
                        goto LABEL_402a10;\n
                    case 3:\n
                        v6 = v27->field_7c;\n
                        v42 = v27->field_88;\n
                        if (!v42)\n
                        {\n
                            v46 = 0;\n
                        }\n
                        else\n
                        {\n
                            v45 = v27->field_84 + 16;\n
                            v46 = 0;\n
                            do\n
                            {\n
                                if (*((v45 - 7)) << 8 == 0x300)\n
                                    v46 += *(v45) == v6->field_10;\n
                                v45 += 24;\n
                                v42 -= 1;\n
                            } while (v42);\n
                        }\n
                        v47 = v6->field_14;\n
                        if (v46 < v47[0])\n
                            v47[0] = v46;\n
                        v6 = v46;\n
                        if (!v46)\n
                            cgc_send_error(); /* do not return */\n
                        v60 = v0;\n
                        v3 = *(&v60->field_74);\n
                        v5 = *(&v60->padding_76[1]);\n
                        v2 = v60->field_70;\n
                        v1 = v60->field_6c;\n
                        v4 = 0;\n
                        cgc_writeall(1, &v1, 15);\n
                        cgc_writeall(1, v47, 4);\n
                        v64 = v60->field_88;\n
                        if (v64)\n
                        {\n
                            while (true)\n
                            {\n
                                v65 = v0;\n
                                v68 = 1 - v64;\n
                                for (v69 = v65->field_84 + v64 * 24 - 16; *((v69 + 1)) << 8 != 0x300; v69 -= 24)\n
                                {\n
                                    if (v68 == 1)\n
                                        goto LABEL_4027be;\n
LABEL_402718:\n
                                    v68 += 1;\n
                                }\n
                                if (*((v69 + 32)) == v65->field_7c->field_10)\n
                                {\n
                                    if (v68 == 1)\n
                                        goto LABEL_40271e;\n
                                    goto LABEL_402718;\n
                                }\n
LABEL_40271e:\n
                                if (v68 == 1)\n
                                    break;\n
                                cgc_memset(&v8, 0, 11);\n
                                v70 = *(v69);\n
                                v71 = *(&v9);\n
                                v10 = v71;\n
                                v8 = v71 * 0x100 | v70;\n
                                v72 = *((v69 + 1)) * 0x100;\n
                                v10 = v71;\n
                                v8 = v8 & 255 | v72;\n
                                v10 = *((v69 + 2));\n
                                v8 = v72 | v70;\n
                                v11 = *((v69 + 8));\n
                                v12 = *((v69 + 4));\n
                                cgc_writeall(1, &v8, 11);\n
                                if (!v68)\n
                                    break;\n
                                v64 = -(v68);\n
                                tmp_6 = &v6->field_0 + 1;\n
                                v6 = &v6->field_0 + 1;\n
                                if (!tmp_6)\n
                                    break;\n
                            }\n
                        }\n
LABEL_4027be:\n
                        v14 = v0;\n
                        goto LABEL_40291c;\n
                        goto LABEL_40291c;\n
                    case 5:\n
                        v43 = v27->field_7c;\n
                        v44 = v27->field_8c;\n
                        if (v44)\n
                        {\n
                            do\n
                            {\n
                                if (*(v44) == v43->field_10)\n
                                {\n
                                    v6 = v44;\n
                                    goto LABEL_40293e;\n
                                }\n
                                v44 = *((v44 + 12));\n
                            } while (v44);\n
                            goto LABEL_40293e;\n
                        }\n
                        v6 = 0;\n
LABEL_40293e:\n
                        v61 = v27->field_88;\n
                        if (!v27->field_88)\n
                        {\n
LABEL_402a2b:\n
                            cgc_send_error(); /* do not return */\n
                        }\n
                        v56 = v43->field_14;\n
                        v57 = v56->field_4;\n
                        v58 = v0->field_84 - 24;\n
                        while (true)\n
                        {\n
                            v58 += 24;\n
                            if (v58 == v57)\n
                                break;\n
                            v61 -= 1;\n
                            if (!v61)\n
                                break;\n
                        }\n
                        if (!v57)\n
                            break;\n
                        if (!((v57->field_8 & 16777215) == 0x300))\n
                            break;\n
                        v74 = v57->field_14;\n
                        if (!(v74[0] == v56->field_0))\n
                            break;\n
                        v75 = v74[1];\n
                        tmp_4 = v75;\n
                        if ([D] x86g_calculate_condition(0x2<32>, 0x3<32>, t4, Load(addr=(ecx<4> + 0x8<32>), size=4, endness=Iend_LE), 0x0<32>))\n
                            cgc_send_error(); /* do not return */\n
                        *((v6 + 8)) = v75 + *((v6 + 8));\n
                        v43->field_8 = v43->field_8 & -16776961 | 0x200;\n
                        v43->field_4 = v74[2];\n
                        *(&v57->field_8 + 1) = 4;\n
                        v14 = v0;\n
                        v3 = *(&v14->field_74);\n
                        v5 = *(&v14->padding_76[1]);\n
                        v2 = v14->field_70;\n
                        v1 = v14->field_6c;\n
                        v4 = 0;\n
                        cgc_writeall(1, &v1, 15);\n
LABEL_402a10:\n
                        if (cgc_read_fully())\n
                            return 0;\n
                        continue;\n
                    default:\n
                        goto LABEL_402b00;\n
                    }\n
                }\n
            }\n
            else\n
            {\n
                if ((v26 & 0xff00) != 0x200)\n
                {\n
                    goto LABEL_402b00;\n
                }\n
                else\n
                {\n
                    *((v19 + 8)) = v26 & -65281 | 0x300;\n
                    v3 = *(&v27->field_74);\n
                    v5 = *(&v27->padding_76[1]);\n
                    v2 = v27->field_70;\n
                    v1 = v27->field_6c;\n
                    v4 = 0;\n
                    cgc_writeall(1, &v1, 15);\n
                }\n
LABEL_402561:\n
                v15 = 0;\n
                goto LABEL_402a10;\n
            }\n
        }\n
        else\n
        {\n
            v22 = v20 * 0x10000;\n
            if (!(v22 & 0xff0000))\n
            {\n
                v24 = v0;\n
                v25 = cgc_new_transaction();\n
                v24->field_7c = v25;\n
                if (!v25)\n
                    cgc_send_error(); /* do not return */\n
                if (!(!cgc_read_data()))\n
                    goto LABEL_402a2b;\n
                v30 = v24->field_7c->field_14;\n
                v31 = cgc_malloc(16);\n
                if (v31)\n
                {\n
                    v33 = v31;\n
                    v34 = v24->field_2c;\n
                    v24->field_2c = v34 + 1;\n
                    v33[0] = v34;\n
                    v35 = v24->field_30;\n
                    v24->field_30 = (v35 * 8 ^ v35 / 0x20000) * 31337;\n
                    v33[1] = v35;\n
                    v33[2] = *(v30);\n
                    v33[3] = v24->field_8c;\n
                    v24->field_8c = &v33;\n
                    cgc_memset(&v1, 0, 15);\n
                    v1 = v33[0];\n
                    v2 = v33[1];\n
                    v4 = 0;\n
                    v3 = 0x400;\n
                    v36 = v24->field_7c;\n
                    v5 = v36->field_c;\n
                    v36->field_10 = v33[0];\n
                    v36->field_0 = v33[1];\n
                    cgc_writeall(1, &v1, 15);\n
                    v15 = &v24->field_7c->field_c;\n
                    v14 = v24;\n
                    goto LABEL_402a10;\n
                }\n
            }\n
            v14 = v0;\n
            if ((v22 & 16777215) == 0x30000 && v19)\n
            {\n
                v14->field_7c = v19;\n
                if (*((v19 + 16)) == v14->field_6c && *(v19) == v14->field_70)\n
                {\n
                    v3 = *(&v14->field_74);\n
                    v5 = *(&v14->padding_76[1]);\n
                    v2 = v14->field_70;\n
                    v1 = v14->field_6c;\n
                    v4 = 0;\n
                    cgc_writeall(1, &v1, 15);\n
                    *(&v14->field_7c->field_8 + 1) = 3;\n
                    goto LABEL_402561;\n
                }\n
            }\n
            goto LABEL_402b00;\n
        }\n
    }\n
}\n
", "4205348:cgc_enlarge_transactions_array": "extern char g_800000;\n
extern unsigned int transactions_array;\n
extern char transactions_length;\n
\n
int cgc_enlarge_transactions_array()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char v1;  // [bp-0x8]\n
    unsigned int v5;  // ecx\n
\n
    if ((!transactions_length ? 349525 : 0) >= v5)\n
        return 0;\n
    if (v5 > 349525)\n
        return 1;\n
    v0 = &v1;\n
    if (!cgc_allocate(&g_800000, 0))\n
    {\n
        transactions_array = *(&v1);\n
        transactions_length = 1;\n
        return 0;\n
    }\n
}\n
", "4205449:cgc_read_fully": "int cgc_read_fully()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // edx\n
    void* v4;  // esi, Other Possible Types: unsigned int\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // eax\n
\n
    if (v3)\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v0 = &v1;\n
            if (cgc_receive(0, v4 + v5, v3 - v4))\n
            {\n
LABEL_402bd4:\n
                return 1;\n
            }\n
            v6 = *(&v1);\n
            if (!v6)\n
                goto LABEL_402bd4;\n
            v4 += v6;\n
        } while (v4 < v3);\n
    }\n
    return 0;\n
}\n
", "4205535:cgc_send_error": "extern unsigned int g_404fdc;\n
extern unsigned int g_404fe0;\n
extern unsigned int g_404fe3;\n
extern unsigned int pkthdr;\n
extern struct_0 *transaction;\n
\n
int cgc_send_error()\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c], Other Possible Types: unsigned short\n
    char v3;  // [bp-0x5a]\n
    unsigned int v4;  // [bp-0x59]\n
    unsigned int v5;  // [bp-0x54]\n
    char v6;  // [bp-0x50]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v14;  // cl\n
    char *v15;  // edx\n
\n
    v9 = v11;\n
    v8 = v12;\n
    v7 = v13;\n
    v2 = g_404fe0;\n
    v4 = g_404fe3;\n
    v1 = g_404fdc;\n
    v0 = pkthdr;\n
    v2 = g_404fe0;\n
    v3 = v14;\n
    cgc_writeall(1, &v0, 15);\n
    v5 = 64;\n
    cgc_strncpy(&v6, v15, 64);\n
    cgc_writeall(1, &v5, 68);\n
    if (transaction)\n
        transaction->field_a = v14;\n
    cgc__terminate();\n
}\n
", "4205689:cgc_read_data": "extern unsigned int g_404fdc;\n
extern unsigned int g_404fe0;\n
extern unsigned int g_404fe3;\n
extern unsigned int pkthdr;\n
extern struct_0 *transaction;\n
\n
int cgc_send_error()\n
{\n
    unsigned int v0;  // [bp-0x64]\n
    unsigned int v1;  // [bp-0x60]\n
    unsigned int v2;  // [bp-0x5c], Other Possible Types: unsigned short\n
    char v3;  // [bp-0x5a]\n
    unsigned int v4;  // [bp-0x59]\n
    unsigned int v5;  // [bp-0x54]\n
    char v6;  // [bp-0x50]\n
    unsigned int v7;  // [bp-0x10]\n
    unsigned int v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    char v14;  // cl\n
    char *v15;  // edx\n
\n
    v9 = v11;\n
    v8 = v12;\n
    v7 = v13;\n
    v2 = g_404fe0;\n
    v4 = g_404fe3;\n
    v1 = g_404fdc;\n
    v0 = pkthdr;\n
    v2 = g_404fe0;\n
    v3 = v14;\n
    cgc_writeall(1, &v0, 15);\n
    v5 = 64;\n
    cgc_strncpy(&v6, v15, 64);\n
    cgc_writeall(1, &v5, 68);\n
    if (transaction)\n
        transaction->field_a = v14;\n
    cgc__terminate();\n
}\n
", "4205913:cgc_new_transaction": "extern unsigned int g_404fdc;\n
extern unsigned short g_404fe0;\n
extern char g_404fe1;\n
extern unsigned int pkthdr;\n
extern unsigned int transactions_array;\n
extern unsigned int transactions_idx;\n
\n
int cgc_new_transaction()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ecx\n
\n
    v0 = v2;\n
    if (!cgc_enlarge_transactions_array())\n
    {\n
        v4 = transactions_idx;\n
        transactions_idx = transactions_idx + 1;\n
        v3 = transactions_array + v4 * 24;\n
        cgc_memset(v3, 0, 24);\n
        *((v3 + 12)) = v3;\n
        v5 = -0x100 & *((v3 + 8)) | g_404fe1;\n
        *((v3 + 8)) = v5;\n
        *((v3 + 8)) = g_404fe0 * 0x100 | v5 & -16776961;\n
        *((v3 + 16)) = pkthdr;\n
        *(v3) = g_404fdc;\n
        return v3;\n
    }\n
    return 0;\n
}\n
", "4206064:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc__terminate": null, "5242888:cgc_transmit": null, "5242892:cgc_allocate": null, "5242896:cgc_deallocate": null, "5242900:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}