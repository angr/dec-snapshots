{"4206592:_init": "extern struct_0 *g_40e31c;\n
\n
int _init()\n
{\n
    if (g_40e31c)\n
    {\n
        g_40e31c();\n
        return;\n
    }\n
    return;\n
}\n
", "4206640:sub_403030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_403030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4206656:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4206672:__cxa_atexit": "// attributes: PLT stub\n
int __cxa_atexit()\n
{\n
    ::libc.so.0::__cxa_atexit();\n
    return;\n
}\n
", "4206688:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4206704:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4206720:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4206736:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4206752:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4206768:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4206784:_ZdaPv": "// attributes: PLT stub\n
int operator delete[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete[]();\n
    return;\n
}\n
", "4206800:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4206816:sub_4030e0": "int sub_4030e0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4206822:sub_4030e6": null, "4206832:__cxx_global_var_init": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int __cxx_global_var_init()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    List::__base_ctor__();\n
    v5 = v1;\n
    v0 = v5 + 56;\n
    v7 = v2;\n
    return __cxa_atexit(v5 - 30884, v5 + 320);\n
}\n
", "4206911:sub_40313f": null, "4206912:_GLOBAL__sub_I_blog.cc": "int _GLOBAL__sub_I_blog.cc()\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = v2;\n
    return __cxx_global_var_init();\n
}\n
", "4206940:sub_40315c": null, "4206944:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v1;  // [bp+0x0], Other Possible Types: char\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4206987:sub_40318b": null, "4206988:sub_40318c": "int sub_40318c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206992:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4206996:sub_403194": null, "4207008:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 45439;\n
    v6 = v5 + 47;\n
    v7 = v5 + 47;\n
    if (v7 == v6)\n
        return v5 + 47;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4207059:sub_4031d3": "int sub_4031d3()\n
{\n
}\n
", "4207065:sub_4031d9": "int sub_4031d9()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4207072:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 45375;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 47;\n
    v9 = (v6 + 47 - (v6 + 47) >> 31) + (47 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4207143:sub_403227": "int sub_403227()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4207152:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_40e310;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_40e310)\n
    {\n
        v0 = __dso_handle;\n
        sub_4030e0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4207227:sub_40327b": "int sub_40327b()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4207232:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4207241:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4207245:sub_40328d": null, "4207248:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = a0 * v5;\n
        if ((0 CONCAT v3) /m a0 != v5)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_malloc();\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = v3;\n
        v4 = cgc_memset(v2, 0);\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4207429:sub_403345": null, "4207440:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_isalpha())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isdigit();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4207529:sub_4033a9": null, "4207536:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_islower())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isupper();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4207625:sub_403409": null, "4207632:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4207657:sub_403429": null, "4207664:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4207689:sub_403449": null, "4207696:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4207721:sub_403469": null, "4207728:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return ((v0 & -128) ^ 255) & 1;\n
}\n
", "4207755:sub_40348b": null, "4207760:cgc_isblank": "int cgc_isblank(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 32)\n
        v1 = v2 == 9;\n
    return v1 & 1;\n
}\n
", "4207805:sub_4034bd": null, "4207808:cgc_iscntrl": "int cgc_iscntrl(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 127)\n
        v1 = v2 < 32;\n
    return v1 & 1;\n
}\n
", "4207853:sub_4034ed": null, "4207856:cgc_isgraph": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isgraph(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (v3 != 32)\n
    {\n
        v0 = v3;\n
        v2 = cgc_isprint();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4207933:sub_40353d": null, "4207936:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 32)\n
        v1 = v2 != 127;\n
    return v1 & 1;\n
}\n
", "4207981:sub_40356d": null, "4207984:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[13084 + v0];\n
}\n
", "4208015:sub_40358f": null, "4208016:cgc_isspace": "int cgc_isspace(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 > 8)\n
    {\n
        v1 = 1;\n
        if (v2 < 14)\n
            return v1 & 1;\n
    }\n
    v1 = v2 == 32;\n
    return v1 & 1;\n
}\n
", "4208071:sub_4035c7": null, "4208080:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[12956 + v0];\n
}\n
", "4208111:sub_4035ef": null, "4208112:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4208126:sub_4035fe": null, "4208128:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 | 32;\n
    return v0;\n
}\n
", "4208199:sub_403647": null, "4208208:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 & 95;\n
    return v0;\n
}\n
", "4208279:sub_403697": null, "4208288:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v3[2])\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2[0] = v3 + 3;\n
    v4 = v2;\n
    if (*((v4 + 4)))\n
    {\n
        return v2;\n
    }\n
    else if (v2[0] >= 0x40000)\n
    {\n
        v0[0] = v2;\n
        v4 = cgc_free_huge();\n
        return v4;\n
    }\n
    else\n
    {\n
        v0[0] = v2;\n
        cgc_insert_into_flist();\n
        v0[0] = v2;\n
        v4 = cgc_coalesce();\n
        return v4;\n
    }\n
}\n
", "4208423:sub_403727": null, "4208432:cgc_free_huge": "int cgc_free_huge(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = *(v1);\n
    return cgc_deallocate(v1);\n
}\n
", "4208480:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v7)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[6];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct struct_1 **v4;  // [bp-0x14]\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7 + 24 < 0x40000)\n
    {\n
        if ((v7 & 7))\n
            v7 = v7 - -7 & -8;\n
        if (v7 >= 0x80000000)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v7 += 24;\n
        v5 = 0;\n
        v0 = &v5;\n
        v4 = cgc_find_fit(v7);\n
        if (!v5)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v4 = 31;\n
                v5 = *((v1 + 192 + v4 * 4));\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
        cgc_remove_from_flist();\n
        v3 = *(v5) - v7;\n
        if (v3 > 48)\n
        {\n
            v2[0] = v5 + v7;\n
            v2[0] = v3;\n
            v2[1] = 1;\n
            v2[2] = 0;\n
            v2[3] = 0;\n
            *(v5) = v7;\n
            v2[5] = v5;\n
            v2[4] = *((v5 + 16));\n
            if (*((v5 + 16)))\n
                *((*((v5 + 16)) + 20)) = v2;\n
            *((v5 + 16)) = v2;\n
            cgc_insert_into_flist();\n
        }\n
        v6 = v5 + 24;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = cgc_malloc_huge();\n
        return v6;\n
    }\n
}\n
", "4208913:sub_403911": null, "4208928:cgc_malloc_huge": "int cgc_malloc_huge(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[6];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 += 24;\n
    v0 = &v2;\n
    if (cgc_allocate(v4, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v4;\n
    v1[1] = 0;\n
    v1[3] = 0;\n
    v1[2] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v3 = v1 + 1;\n
    return v3;\n
}\n
", "4209090:sub_4039c2": null, "4209104:cgc_find_fit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_fit(unsigned int v5, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    for (v2 = cgc_get_size_class(); v2 < 32; v2 = v2 + 1)\n
    {\n
        for (*(a0) = *((v1 + 192 + v2 * 4)); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v3 = -1;\n
    return v3;\n
}\n
", "4209282:sub_403a82": null, "4209296:cgc_allocate_new_blk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_new_blk()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[6];  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0x40000;\n
    v0 = &v4;\n
    if (cgc_allocate(v2, 0))\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (*(&v4))\n
    {\n
        v3[0] = *(&v4);\n
        v3[0] = v2;\n
        v3[1] = 1;\n
        v3[3] = 0;\n
        v3[2] = 0;\n
        v3[5] = 0;\n
        v3[4] = 0;\n
        cgc_insert_into_flist();\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4209490:sub_403b52": null, "4209504:cgc_get_size_class": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_size_class(unsigned int v3)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2 < 32)\n
            v0 = !(v3 <= *((v1 + (v2 << 2) + 60)));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4209615:sub_403bcf": null, "4209616:cgc_insert_into_flist": "extern unsigned int _GLOBAL_OFFSET_TABLE_[4];\n
\n
int cgc_insert_into_flist(unsigned int v3[4])\n
{\n
    unsigned int v0[4];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // eax\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = cgc_get_size_class(v3[0]);\n
    v3[1] = 1;\n
    if (!v0[12 + v1])\n
    {\n
        v5 = v0;\n
        v5[12 + v1] = v3;\n
        return v0;\n
    }\n
    v6 = v0;\n
    v3[2] = v6[12 + v1];\n
    *((v6[12 + v1] + 12)) = v3;\n
    v6[12 + v1] = v3;\n
    v5 = v3;\n
    *((v5 + 12)) = 0;\n
    return v3;\n
}\n
", "4209774:sub_403c6e": null, "4209776:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_size_class(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((v0 + (v1 << 2) + 192)) == v3)\n
        *((v0 + v1 * 4 + 192)) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4209950:sub_403d1e": null, "4209952:cgc_coalesce": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[2];  // eax\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    struct_0 *v5;  // eax\n
    unsigned int v6[2];  // eax, Other Possible Types: unsigned int, struct_0 *\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v2 = v1->field_14;\n
        v2[0] = v1->field_0 + v2[0];\n
        v3 = v1->field_14;\n
        v3[0] = v1->field_10->field_0 + v3[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        cgc_remove_from_blist();\n
        v6 = cgc_remove_from_blist();\n
        return v6;\n
    }\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && !v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1);\n
        v4 = v1->field_14;\n
        v4[0] = v1->field_0 + v4[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        v6 = cgc_remove_from_blist();\n
        goto LABEL_403f0c;\n
    }\n
    v6 = v1;\n
    if (v6->field_14)\n
    {\n
        v6 = v1->field_14;\n
        if (!v6[1])\n
        {\n
            v6 = v1;\n
            if (v6->field_10)\n
            {\n
                v6 = v1->field_10;\n
                if (v6[1])\n
                {\n
                    cgc_remove_from_flist(v1->field_10);\n
                    cgc_remove_from_flist(v1);\n
                    v5 = v1;\n
                    v5->field_0 = v1->field_10->field_0 + v5->field_0;\n
                    cgc_insert_into_flist(v1);\n
                    v6 = cgc_remove_from_blist();\n
                }\n
            }\n
        }\n
    }\n
LABEL_403f0c:\n
    return v6;\n
}\n
", "4210460:sub_403f1c": null, "4210464:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_remove_from_blist(struct_1 *v0)\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int\n
\n
    if (v0->field_14)\n
        v0->field_14->field_10 = v0->field_10;\n
    v1 = v0;\n
    if (v1->field_10)\n
    {\n
        v1 = v0->field_10;\n
        *((v1 + 20)) = v0->field_14;\n
    }\n
    return v1;\n
}\n
", "4210528:cgc_memchr": "int cgc_memchr(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        if (*((v2 + v0)) == a0)\n
        {\n
            v1 = v2 + v0;\n
            return v1;\n
        }\n
        v0 += 1;\n
    }\n
}\n
", "4210624:cgc_memcmp": "int cgc_memcmp(char *v2, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a1)\n
        {\n
            if (*(v2) != *(a0))\n
            {\n
                v1 = *(v2) - *(a0);\n
                return v1;\n
            }\n
            v2 += 1;\n
            a0 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4210752:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v3;\n
}\n
", "4210838:sub_404096": null, "4210848:cgc_memmove": "int cgc_memmove(char *v3, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v0 = v3;\n
    if (v0 >= v1)\n
    {\n
        if (v0 <= v1)\n
            return v3;\n
        for (v2 = a1; v2 > 0; v2 += 1)\n
        {\n
            v2[1 + v0] = *((v1 + v2 + 1));\n
        }\n
    }\n
    else\n
    {\n
        for (v2 = 0; v2 < a1; v2 += 1)\n
        {\n
            *((v0 + v2)) = v1[v2];\n
        }\n
        return v3;\n
    }\n
}\n
", "4211027:sub_404153": null, "4211040:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v3;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v2 = v3;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v3;\n
        return v2;\n
    }\n
}\n
", "4211169:sub_4041e1": null, "4211184:cgc_output_number_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_printf(unsigned int v8, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (a0 >= a1)\n
    {\n
        v7 = cgc_output_number_printf(v8, (0 CONCAT a0) /m a1, a1, a2 - 1, a3);\n
        a0 = (0 CONCAT a0) /m a1 >> 32;\n
    }\n
    if (!v7 && a2 > 0)\n
    {\n
        while (true)\n
        {\n
            a2 -= 1;\n
            if (!a2)\n
                break;\n
            if (!(a3 & 1))\n
            {\n
                v5 = 32;\n
                cgc_transmit(v8, &v5, 1);\n
            }\n
            else\n
            {\n
                v6 = 48;\n
                cgc_transmit(v8, &v6, 1);\n
            }\n
        }\n
    }\n
    if ((a3 & 2))\n
    {\n
        if (a0 < 10)\n
            v1 = a0 + 48;\n
        else\n
            v1 = a0 + 55;\n
        v4 = v1;\n
        cgc_transmit(v8, &v4, 1);\n
        return v7 + 1;\n
    }\n
    else\n
    {\n
        if (a0 < 10)\n
            v0 = a0 + 48;\n
        else\n
            v0 = a0 + 87;\n
        v3 = v0;\n
        cgc_transmit(v8, &v3, 1);\n
        return v7 + 1;\n
    }\n
}\n
", "4211683:sub_4043e3": null, "4211696:cgc_fdprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fdprintf(unsigned int v20, char *a0)\n
{\n
    char *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    unsigned int v3;  // [bp-0x68]\n
    char v4;  // [bp-0x61]\n
    char v5;  // [bp-0x59]\n
    char v6;  // [bp-0x51]\n
    char v7;  // [bp-0x49]\n
    char v8;  // [bp-0x41]\n
    char v9;  // [bp-0x39]\n
    char v10;  // [bp-0x31]\n
    struct struct_0 **v11;  // [bp-0x30], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x2c]\n
    void* v13;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0x1c]\n
    unsigned int v17;  // [bp-0x18]\n
    char v18;  // [bp-0x11]\n
    char *v19;  // [bp-0x10]\n
    char v21;  // [bp+0xc]\n
    char *v22;  // eax\n
    char *v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    struct struct_0 **v25;  // eax\n
    struct struct_0 **v26;  // eax\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v11 = &v21;\n
    while (*(a0))\n
    {\n
        v22 = a0;\n
        a0 = v22 + 1;\n
        v10 = *(v22);\n
        if (v10 != 37)\n
        {\n
            v4 = v10;\n
            cgc_transmit(v20, &v4, 1);\n
LABEL_4047c6:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v23 = a0;\n
                    a0 = v23 + 1;\n
                    v10 = *(v23);\n
                    v2 = v10;\n
                    if (v2 != 48)\n
                        break;\n
                    v14 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v13 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v10;\n
            if (v1 == 37)\n
            {\n
                v9 = 37;\n
                cgc_transmit(v20, &v9, 1);\n
                goto LABEL_40477f;\n
            }\n
            if (v1 == 88)\n
            {\n
                v14 |= 2;\n
            }\n
            else if (v1 == 99)\n
            {\n
                v24 = v11;\n
                v11 = v24 + 1;\n
                v18 = *(v24);\n
                v6 = v18;\n
                cgc_transmit(v20, &v6, 1);\n
                goto LABEL_40477f;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v25 = v11;\n
                    v11 = v25 + 1;\n
                    v17 = *(v25);\n
                    if (v17 < 0)\n
                    {\n
                        v7 = 45;\n
                        cgc_transmit(v20, &v7, 1);\n
                        v17 = -(v17);\n
                    }\n
                    cgc_output_number_printf(v20, v17, 10, v13, v14);\n
                    goto LABEL_40477f;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v26 = v11;\n
                    v11 = v26 + 1;\n
                    v19 = &*(v26)->field_0;\n
                    v16 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v16;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v8 = v19[v16];\n
                        cgc_transmit(v20, &v8, 1);\n
                        v16 += 1;\n
                    }\n
                    goto LABEL_40477f;\n
                }\n
                if (v1 == 117)\n
                {\n
                    v27 = v11;\n
                    v11 = v27 + 1;\n
                    v12 = *(v27);\n
                    cgc_output_number_printf(v20, v12, 10, v13, v14);\n
                    goto LABEL_40477f;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v10;\n
                    cgc_transmit(v20, &v5, 1);\n
LABEL_40477f:\n
                    v13 = 0;\n
                    v14 = 0;\n
                    goto LABEL_4047c6;\n
                }\n
            }\n
            v28 = v11;\n
            v11 = v28 + 1;\n
            v12 = *(v28);\n
            cgc_output_number_printf(v20, v12, 16, v13, v14);\n
            goto LABEL_40477f;\n
        }\n
    }\n
    return v15;\n
}\n
", "4212696:sub_4047d8": null, "4212704:cgc_output_number_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_sprintf(unsigned int *v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // eax\n
    unsigned int *v10;  // eax\n
    struct struct_0 **v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (a1 >= a2)\n
    {\n
        v7 = cgc_output_number_sprintf(v8, a0, (0 CONCAT a1) /m a2, a2, a3 - 1, a4);\n
        a1 = (0 CONCAT a1) /m a2 >> 32;\n
    }\n
    if (!v7 && a3 > 0)\n
    {\n
        while (true)\n
        {\n
            a3 -= 1;\n
            if (!a3)\n
                break;\n
            if ((a4 & 1))\n
            {\n
                v6 = 48;\n
                *(a0)->field_0 = v6;\n
            }\n
            else\n
            {\n
                v5 = 32;\n
                *(a0)->field_0 = v5;\n
            }\n
            v9 = a0;\n
            *(v9) = *(v9) + 1;\n
            v10 = v8;\n
            *(v10) = *(v10) + 1;\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (a1 < 10)\n
            v1 = a1 + 48;\n
        else\n
            v1 = a1 + 55;\n
        v4 = v1;\n
        *(a0)->field_0 = v4;\n
    }\n
    else\n
    {\n
        if (a1 < 10)\n
            v0 = a1 + 48;\n
        else\n
            v0 = a1 + 87;\n
        v3 = v0;\n
        *(a0)->field_0 = v3;\n
    }\n
    v11 = a0;\n
    *(v11) = *(v11) + 1;\n
    v12 = v8;\n
    *(v12) = *(v12) + 1;\n
    return v7 + 1;\n
}\n
", "4213189:sub_4049c5": null, "4213200:cgc_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprintf(char *v18, char *a0)\n
{\n
    char *v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    unsigned int v3;  // [bp-0x60]\n
    char v4;  // [bp-0x59]\n
    char v5;  // [bp-0x51]\n
    char v6;  // [bp-0x49]\n
    char v7;  // [bp-0x41]\n
    char v8;  // [bp-0x39]\n
    char v9;  // [bp-0x31]\n
    struct struct_0 **v10;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v11;  // [bp-0x2c]\n
    void* v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x1c]\n
    char *v16;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v17;  // [bp-0x14]\n
    char v19;  // [bp+0xc]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(a0))\n
    {\n
        v20 = a0;\n
        a0 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            *(v18) = v4;\n
            v18 += 1;\n
            v14 += 1;\n
LABEL_404cdf:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = a0;\n
                    a0 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                *(v18) = v8;\n
                v18 += 1;\n
                v14 += 1;\n
                goto LABEL_404ca2;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = &*(v22)->field_0;\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        *(v18) = v6;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number_sprintf(&v14, &v18, v16, 10, v12, v13);\n
                    goto LABEL_404ca2;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        *(v18) = v7;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_404ca2;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    *(v18) = v5;\n
                    v18 += 1;\n
                    v14 += 1;\n
LABEL_404ca2:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_404cdf;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = &*(v24)->field_0;\n
            cgc_output_number_sprintf(&v14, &v18, v11, 16, v12, v13);\n
            goto LABEL_404ca2;\n
        }\n
    }\n
    v25 = v18;\n
    v18 = v25 + 1;\n
    *(v25) = 0;\n
    return v14;\n
}\n
", "4214013:sub_404cfd": null, "4214016:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(char *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = cgc_malloc(a0);\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v2 = cgc_malloc(a0);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = &v4[24];\n
        if (a0 >= *(v1) - 24)\n
            cgc_memcpy(v2, v4, *(v1) - 24);\n
        else\n
            cgc_memcpy(v2, v4, a0);\n
        cgc_free(v4);\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_free(v4);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4214274:sub_404e02": null, "4214288:cgc_strcasecmp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcasecmp(char *v6, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x15]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v6;\n
    v4 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v5))\n
            v2 = *(v4);\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v5) != *(v4))\n
        {\n
            v1 = cgc_tolower(*(v5));\n
            if (v1 != cgc_tolower(*(v4)))\n
                break;\n
        }\n
        v5 += 1;\n
        v4 += 1;\n
    }\n
    v0 = cgc_tolower(*(v5));\n
    return v0 - cgc_tolower(*(v4));\n
}\n
", "4214527:sub_404eff": null, "4214528:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = a0;\n
    cgc_strcpy(v2 + cgc_strlen());\n
    v6 = v3;\n
    return v4;\n
}\n
", "4214605:sub_404f4d": null, "4214608:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4214714:sub_404fba": null, "4214720:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4214848:cgc_strcpy": "int cgc_strcpy(unsigned int v1, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    for (v0 = 0; *(a0); *((v1 + v4)) = *(v3))\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4214932:sub_405094": null, "4214944:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_strlen() + 1;\n
    v1 = cgc_malloc(v2);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_memcpy(v1, v5, v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4215068:sub_40511c": null, "4215072:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4215124:sub_405154": null, "4215136:cgc_strncasecmp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncasecmp(char *v7, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v7;\n
    v4 = a0;\n
    v8 = a1;\n
    a1 = v8 - 1;\n
    if (!v8)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (a1)\n
        {\n
            v2 = 0;\n
            if (*(v5))\n
                v2 = *(v4);\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v5) != *(v4))\n
        {\n
            v1 = cgc_tolower(*(v5));\n
            if (v1 != cgc_tolower(*(v4)))\n
                break;\n
        }\n
        v5 += 1;\n
        v4 += 1;\n
    }\n
    v0 = cgc_tolower(*(v5));\n
    v6 = v0 - cgc_tolower(*(v4));\n
    return v6;\n
}\n
", "4215436:sub_40528c": null, "4215440:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v3 = a1;\n
    a1 = v3 - 1;\n
    if (!v3)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v4 = a1;\n
        a1 = v4 - 1;\n
        v0 = 0;\n
        if (v4)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(a0);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    v1 = *(v2) - *(a0);\n
    return v1;\n
}\n
", "4215641:sub_405359": null, "4215648:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
        if (!*((v1 + v0)))\n
            break;\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4215790:sub_4053ee": null, "4215792:cgc_strsep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strsep(struct struct_0 **v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = cgc_strchr(a0, *(v2)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    a0 = &*(v4)->field_0;\n
    if (!*(v2))\n
    {\n
        *(v4) = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        *(v4) = v2 + 1;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4216008:sub_4054c8": null, "4216016:cgc_strtol": "int cgc_strtol(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v12;\n
    if (a1 == 1)\n
    {\n
LABEL_405518:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_405518;\n
        if (a1 < 0)\n
            goto LABEL_405518;\n
        while (true)\n
        {\n
            if (*(v6) != 32 && *(v6) != 9 && *(v6) != 12 && *(v6) != 10 && *(v6) != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_40560f:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_40560f;\n
                v6 += 1;\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_405684;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_405684:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_4057e2;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_4057a2;\n
            }\n
            if (!v7)\n
            {\n
LABEL_4057a2:\n
                if (v8 >= a1)\n
                    goto LABEL_4057e2;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_405799;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_405799:\n
                v8 += 10;\n
                goto LABEL_4057a2;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_405718;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_405718:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_4057e2:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v12;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4216878:sub_40582e": null, "4216880:cgc_strtoul": "int cgc_strtoul(char v0[2], unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4216939:sub_40586b": null, "4216944:_ZN8AsciiArtC1EPvS0_Pc": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    char padding_4[76];\n
    unsigned int field_50;\n
    struct struct_3 *field_54;\n
    unsigned int field_58;\n
    char padding_5c[4];\n
    unsigned short field_60;\n
    unsigned short field_62;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_3 {\n
    char field_0;\n
} struct_3;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int AsciiArt::__ctor__(struct_2 *v10, unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    char *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x30]\n
    char *v2;  // [bp-0x24]\n
    struct_2 *v3;  // [bp-0x20]\n
    char *v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    struct_2 *v7;  // [bp-0x10]\n
    char *v8;  // [bp-0xc]\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // ebx\n
    struct_2 *v14;  // ecx\n
    struct_2 *v15;  // eax\n
    struct_2 *v17;  // eax\n
    struct_2 *v18;  // eax\n
    struct_2 *v19;  // edx\n
    struct_2 *v20;  // eax\n
    unsigned int v21;  // eax\n
\n
    v9 = v11;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v10;\n
    v3 = v7;\n
    v12 = AsciiArt::find_data_size();\n
    v1 = a2;\n
    File::__base_ctor__(v3, 8, v12);\n
    AsciiInterface::__base_ctor__(&v7->field_58, 8, v12);\n
    v13 = v6;\n
    v14 = v7;\n
    v14->field_0 = v13 + -452;\n
    v14->field_58 = v13 + -428;\n
    v0 = a0;\n
    cgc_memcpy(&v14->padding_5c, v0, 8);\n
    v15 = v7;\n
    v15->field_50 = &v15->padding_5c;\n
    v17 = v7;\n
    v17->field_54 = operator new[](File::get_data_size(v15, v0) + 1);\n
    v4 = &v17->field_54->field_0;\n
    v5 = a1;\n
    v0 = v5;\n
    cgc_memcpy(v4, v0, File::get_data_size());\n
    v18 = v7;\n
    v8 = &v18->field_54->field_0;\n
    v19 = v7;\n
    v8[File::get_data_size(v18, v0)] = 0;\n
    v21 = v19->field_0->field_c(v19);\n
    if ((v21 & 1))\n
        return v21;\n
    v20 = v7;\n
    v20->field_60 = 0;\n
    v20->field_62 = 0;\n
    if (v20->field_54)\n
    {\n
        v2 = &v7->field_54->field_0;\n
        if (v2)\n
            operator delete[](v2);\n
    }\n
    v7->field_54 = 0;\n
    v21 = File::clear_data_size();\n
    return v21;\n
}\n
", "4217344:_ZN8AsciiArt14find_data_sizeEPv": "int AsciiArt::find_data_size(unsigned short v1[4])\n
{\n
    unsigned short v0[4];  // [bp-0x8]\n
    unsigned short v2[4];  // eax\n
\n
    *(&v0[0]) = v2;\n
    *(&v0[0]) = v1;\n
    return v0[3] * v0[2];\n
}\n
", "4217379:sub_405a23": null, "4217392:_ZN8AsciiArtD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40e160;\n
extern char g_40e178;\n
\n
int AsciiArt::__dtor__(unsigned int v3[23])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[23];  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v3;\n
    v2[0] = &g_40e160;\n
    v2[22] = &g_40e178;\n
    if (v2[21])\n
    {\n
        v0 = v2[21];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v2[21] = 0;\n
    File::clear_data_size();\n
    AsciiInterface::__base_dtor__();\n
    return File::__dtor__();\n
}\n
", "4217551:sub_405acf": null, "4217552:_ZN8AsciiArtD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int AsciiArt::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[23];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    AsciiArt::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4217611:sub_405b0b": null, "4217616:_ZN8AsciiArt9get_magicEv": "typedef struct struct_0 {\n
    char padding_0[92];\n
    unsigned int field_5c;\n
} struct_0;\n
\n
int AsciiArt::get_magic(struct_0 *v0)\n
{\n
    return v0->field_5c;\n
}\n
", "4217630:sub_405b1e": null, "4217632:_ZN8AsciiArt8is_asciiEPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int AsciiArt::is_ascii(unsigned short v12[50], char *a0)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    char v2;  // [bp-0x29]\n
    unsigned short v3[50];  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    unsigned int v5;  // [bp-0x20]\n
    unsigned int v6;  // [bp-0x1c]\n
    void* v7;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v8;  // [bp-0x14]\n
    char *v9;  // [bp-0x10]\n
    char v10;  // [bp-0x9]\n
    unsigned int v11;  // [bp-0x8]\n
    unsigned int v13;  // ebx\n
\n
    v11 = v13;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v3[0]) = v12;\n
    v9 = 0;\n
    v8 = operator new[](cgc_strlen(a0) + 1);\n
    cgc_strcpy(v8, a0);\n
    v7 = 0;\n
    while (true)\n
    {\n
        v9 = cgc_strsep(&v8, v4 - 11125);\n
        v2 = 0;\n
        if (v9)\n
            v2 = v7 < v3[49];\n
        if (!(v2 & 1))\n
            break;\n
        v6 = cgc_strlen(v9) + 1;\n
        if (v6 != v3[48])\n
        {\n
            v10 = 0;\n
            return v10 & 1;\n
        }\n
        v7 += 1;\n
        for (v5 = 0; v5 < v6 - 1; v5 += 1)\n
        {\n
            if (!cgc_isprint(v9[v5]))\n
            {\n
                v1 = v8;\n
                if (v1)\n
                    operator delete[](v1);\n
                v10 = 0;\n
                return v10 & 1;\n
            }\n
        }\n
    }\n
    v0 = v8;\n
    if (v0)\n
        operator delete[](v0);\n
    if (v7 != v3[49])\n
    {\n
        v10 = 0;\n
        return v10 & 1;\n
    }\n
    v10 = 1;\n
    return v10 & 1;\n
}\n
", "4218052:sub_405cc4": null, "4218064:_ZThn88_N8AsciiArt8is_asciiEPc": "int non-virtual thunk for AsciiArt::is_ascii(unsigned int v0, char *a0)\n
{\n
    return AsciiArt::is_ascii(v0 - 88, a0) & 1;\n
}\n
", "4218121:sub_405d09": null, "4218128:_ZN8AsciiArt16find_header_sizeEv": "int AsciiArt::find_header_size()\n
{\n
    return 8;\n
}\n
", "4218138:sub_405d1a": null, "4218144:_ZN8AsciiArt14print_asciiartEv": "typedef struct struct_2 {\n
    struct struct_1 *field_0;\n
    char padding_4[80];\n
    unsigned int field_54;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    struct struct_0 *field_c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int AsciiArt::print_asciiart(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_2 *v2;  // [bp-0xc]\n
    struct_2 *v4;  // eax, Other Possible Types: unsigned int\n
    struct_2 *v5;  // edx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v3;\n
    v2 = v4;\n
    if (!v4->field_54)\n
        return v3;\n
    v4 = File::get_data_size();\n
    if (!v4)\n
    {\n
        return v4;\n
    }\n
    else if (!(v5->field_0->field_c(v2) & 1))\n
    {\n
        cgc_fdprintf(1, v1 - 12828);\n
        cgc_fdprintf(1, v1 - 12795);\n
        v4 = cgc_fdprintf(1, v1 - 12828);\n
        return v4;\n
    }\n
    else\n
    {\n
        v0 = v2->field_54;\n
        v4 = cgc_fdprintf(1, v1 - 11260);\n
        return v4;\n
    }\n
}\n
", "4218363:sub_405dfb": null, "4218368:_ZN14AsciiInterfaceC2Ev": "extern char g_40e184;\n
\n
int AsciiInterface::__base_ctor__(unsigned int *v0)\n
{\n
    *(v0) = &g_40e184;\n
    return v0;\n
}\n
", "4218402:sub_405e22": null, "4218416:_ZN14AsciiInterfaceD2Ev": "int AsciiInterface::__base_dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4218424:sub_405e38": null, "4218432:_ZN4Blog8get_userEPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Blog::get_user(unsigned int v5)\n
{\n
    char *v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v1 = v3;\n
        if (v1 >= List::length())\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = v5;\n
        if (!cgc_strcasecmp(v0, User::get_username(List::operator[] const(v2 + 320))))\n
        {\n
            v4 = List::operator[] const(v2 + 320);\n
            return v4;\n
        }\n
        v3 += 1;\n
    }\n
}\n
", "4218635:sub_405f0b": null, "4218640:_ZN4Blog13register_userEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Blog::register_user()\n
{\n
    unsigned int v0;  // [bp-0x60]\n
    unsigned int v1;  // [bp-0x54]\n
    unsigned int v2;  // [bp-0x50]\n
    struct_0 *v3;  // [bp-0x4c]\n
    struct_0 *v4;  // [bp-0x48]\n
    unsigned int v5;  // [bp-0x44]\n
    unsigned int v6;  // [bp-0x40]\n
    char v7;  // [bp-0x3c]\n
    char v8;  // [bp-0x2c]\n
    char v9;  // [bp-0x1c]\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // eax\n
\n
    v10 = v12;\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"Enter username: \");\n
    if (!(IO::readline(128) & 1))\n
    {\n
        v13 = cgc_fdprintf(1, v5 - 12692);\n
        return v13;\n
    }\n
    if (cgc_strlen(IO::buf()) > 2 && cgc_strlen(IO::buf()) < 16)\n
    {\n
        v4 = &v9;\n
        cgc_strcpy(v4, IO::buf());\n
        if (Blog::get_user(&v9))\n
        {\n
            v13 = cgc_fdprintf(1, v5 - 12681);\n
            return v13;\n
        }\n
        while (true)\n
        {\n
            cgc_fdprintf(1, v5 - 12623);\n
            if (!(IO::readline(128) & 1))\n
            {\n
                cgc_fdprintf(1, v5 - 12692);\n
            }\n
            else\n
            {\n
                if (cgc_strlen(IO::buf()) > 4 && cgc_strlen(IO::buf()) < 16)\n
                    break;\n
                cgc_fdprintf(1, v5 - 12606);\n
            }\n
        }\n
        v3 = &v8;\n
        cgc_strcpy(v3, IO::buf());\n
        while (true)\n
        {\n
            cgc_fdprintf(1, v5 - 12592);\n
            if (!(IO::readline(128) & 1))\n
            {\n
                cgc_fdprintf(1, v5 - 12692);\n
            }\n
            else\n
            {\n
                if (cgc_strlen(IO::buf()) > 4 && cgc_strlen(IO::buf()) < 16)\n
                    break;\n
                cgc_fdprintf(1, v5 - 12578);\n
            }\n
        }\n
        v2 = &v7;\n
        cgc_strcpy(v2, IO::buf());\n
        v1 = operator new(80);\n
        v0 = &v7;\n
        User::__base_ctor__(v1, &v9, &v8);\n
        v6 = v1;\n
        v13 = List::add(v5 + 320);\n
        return v13;\n
    }\n
    v13 = cgc_fdprintf(1, v5 - 12745);\n
    return v13;\n
}\n
", "4219435:sub_40622b": null, "4219440:_ZN4Blog6log_inEv": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Blog::log_in()\n
{\n
    unsigned int v0;  // [bp-0x3c]\n
    struct_0 *v1;  // [bp-0x38]\n
    unsigned int v2;  // [bp-0x34]\n
    void* v3;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x2c]\n
    char v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    cgc_fdprintf(1, \"Username: \");\n
    if (!(IO::readline(128) & 1))\n
    {\n
        cgc_fdprintf(1, v2 - 12550);\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (cgc_strlen(IO::buf()) > 4 && cgc_strlen(IO::buf()) < 16)\n
    {\n
        v1 = &v5;\n
        cgc_strcpy(v1, IO::buf());\n
    }\n
    cgc_fdprintf(1, v2 - 12539);\n
    if (!(IO::readline(128) & 1))\n
    {\n
        cgc_fdprintf(1, v2 - 12550);\n
        v6 = 0;\n
        return v6;\n
    }\n
    if (cgc_strlen(IO::buf()) > 4 && cgc_strlen(IO::buf()) < 16)\n
    {\n
        v0 = &v4;\n
        cgc_strcpy(v0, IO::buf());\n
    }\n
    v3 = Blog::get_user(&v5);\n
    if (v3 && (User::check_password(v3) & 1))\n
    {\n
        cgc_fdprintf(1, v2 - 12528);\n
        v6 = v3;\n
        return v6;\n
    }\n
    cgc_fdprintf(1, v2 - 12513);\n
    v6 = 0;\n
    return v6;\n
}\n
", "4219970:sub_406442": null, "4219984:_ZN4Blog10add_friendEP4User": "typedef struct struct_0 {\n
    char field_0;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Blog::add_friend(unsigned int v7)\n
{\n
    struct_0 *v0;  // [bp-0x44], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x38]\n
    struct_0 *v2;  // [bp-0x34]\n
    unsigned int v3;  // [bp-0x30]\n
    void* v4;  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x28]\n
    char v6;  // [bp-0x18]\n
    unsigned int v8;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!v7)\n
    {\n
        v8 = cgc_fdprintf(1, v3 - 12478);\n
        return v8;\n
    }\n
    cgc_fdprintf(1, v3 - 12468);\n
    if (!(IO::readline(128) & 1))\n
    {\n
LABEL_40655e:\n
        if (!v4)\n
        {\n
            v8 = cgc_fdprintf(1, v3 - 12444);\n
            return v8;\n
        }\n
        while (true)\n
        {\n
            cgc_fdprintf(1, v3 - 12592);\n
            if (!(IO::readline(128) & 1))\n
            {\n
                cgc_fdprintf(1, v3 - 12692);\n
            }\n
            else\n
            {\n
                if (cgc_strlen(IO::buf()) > 4 && cgc_strlen(IO::buf()) < 16)\n
                    break;\n
                cgc_fdprintf(1, v3 - 12578);\n
            }\n
        }\n
        v1 = &v5;\n
        cgc_strcpy(v1, IO::buf());\n
        v0 = &v5;\n
        if (!(User::add_friend(v7, v4) & 1))\n
        {\n
            v8 = cgc_fdprintf(1, v3 - 12397);\n
            return v8;\n
        }\n
        v0 = &v6;\n
        v8 = cgc_fdprintf(1, v3 - 12416);\n
        return v8;\n
    }\n
    else\n
    {\n
        if (cgc_strlen(IO::buf()) > 2 && cgc_strlen(IO::buf()) < 16)\n
        {\n
            v2 = &v6;\n
            cgc_strcpy(v2, IO::buf());\n
            v4 = Blog::get_user(&v6);\n
            goto LABEL_40655e;\n
        }\n
        v8 = cgc_fdprintf(1, v3 - 12745);\n
        return v8;\n
    }\n
}\n
", "4220614:sub_4066c6": null, "4220624:_ZN4Blog17view_user_profileEP4User": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Blog::view_user_profile(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v1)\n
    {\n
        cgc_fdprintf(1, v0 - 12762);\n
        if ((IO::readline(128) & 1) && cgc_strlen(IO::buf()) > 2 && cgc_strlen(IO::buf()) < 16)\n
            v1 = Blog::get_user(IO::buf());\n
        if (!v1)\n
        {\n
            v2 = cgc_fdprintf(1, v0 - 12372);\n
            return v2;\n
        }\n
    }\n
    v2 = User::print_profile();\n
    return v2;\n
}\n
", "4220860:sub_4067bc": null, "4220864:_ZN4Blog15view_user_postsEP4UserS1_i": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Blog::view_user_posts(unsigned int v4, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!a0)\n
    {\n
        cgc_fdprintf(1, v2 - 12762);\n
        if ((IO::readline(128) & 1) && cgc_strlen(IO::buf()) > 2 && cgc_strlen(IO::buf()) < 16)\n
            a0 = Blog::get_user(IO::buf());\n
        if (!a0)\n
        {\n
            v5 = cgc_fdprintf(1, v2 - 12372);\n
            return v5;\n
        }\n
    }\n
    if (!a1)\n
    {\n
        cgc_fdprintf(1, v2 - 12358);\n
        cgc_fdprintf(1, v2 - 12332);\n
        User::list_posts(a0);\n
        cgc_fdprintf(1, v2 - 12320);\n
        a1 = IO::readnum(128);\n
        if (!a1)\n
        {\n
            v5 = cgc_fdprintf(1, v2 - 12308);\n
            return v5;\n
        }\n
    }\n
    v1 = a1;\n
    if (v1 > User::num_posts())\n
    {\n
        v5 = cgc_fdprintf(1, v2 - 12284);\n
        return v5;\n
    }\n
    v5 = User::print_post(a0);\n
    if (!v4)\n
        return v5;\n
    v5 = v4;\n
    if (v5 == a0)\n
        return v4;\n
    v3 = 0;\n
    cgc_fdprintf(1, v2 - 12264);\n
    cgc_fdprintf(1, v2 - 12252);\n
    cgc_fdprintf(1, v2 - 12244);\n
    cgc_fdprintf(1, v2 - 12320);\n
    v5 = IO::readnum(128);\n
    v3 = v5;\n
    if (v3 != 1)\n
        return v5;\n
    v0 = a1;\n
    v5 = User::like_post(a0, v4);\n
}\n
", "4221528:sub_406a58": null, "4221536:_ZN4ListIP4UserEC2Ev": "int List::__base_ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4221567:sub_406a7f": null, "4221568:_ZN4ListIP4UserED2Ev": "int List::__base_dtor__(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0x18]\n
\n
    *(v1) = 0;\n
    v0 = 0;\n
    return List::clear_list(v1);\n
}\n
", "4221623:sub_406ab7": null, "4221632:_ZN4ListIP4UserE6lengthEv": "int List::length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4221645:sub_406acd": null, "4221648:_ZNK4ListIP4UserEixEm": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int List::operator[] const(struct_1 *v4, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v4;\n
    if (a0 >= v0->field_0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    for (v1 = v0->field_4; v2 != a0; v2 += 1)\n
    {\n
        v1 = v1->field_0;\n
    }\n
    v3 = *((v1 + 8));\n
    return v3;\n
}\n
", "4221768:sub_406b48": null, "4221776:_ZN4ListIP4UserE3addES1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int List::add(struct_0 *v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = v3;\n
    v1[0] = operator new(12);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v0;\n
    v1[1] = v4->field_8;\n
    v1[0] = 0;\n
    v1[2] = a0;\n
    if (!v4->field_4)\n
        v0->field_4 = v1;\n
    if (v0->field_8)\n
        v0->field_8->field_0 = v1;\n
    v5 = v0;\n
    v5->field_8 = &v1[0];\n
    v5->field_0 = v5->field_0 + 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4221948:sub_406bfc": null, "4221952:_ZN4ListIP4UserE10clear_listEb": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::clear_list(unsigned int v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = a0 & 1;\n
    v3 = v6;\n
    while (true)\n
    {\n
        v0 = &v4;\n
        v7 = List::pop(v3);\n
        if (!(v7 & 1))\n
            break;\n
        if ((v5 & 1))\n
        {\n
            v1 = *(&v4);\n
            if (v1)\n
            {\n
                User::__dtor__();\n
                operator delete(v1);\n
            }\n
        }\n
    }\n
    return v7;\n
}\n
", "4222094:sub_406c8e": null, "4222096:_ZN4ListIP4UserE3popERS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::pop(struct_0 *v6, unsigned int *a0)\n
{\n
    unsigned int v0[2];  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    if (!v3->field_0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v7 = v3;\n
    *(a0) = v7->field_8->field_8;\n
    if (v7->field_0 != 1)\n
    {\n
        v8 = v3;\n
        v4[0] = v8->field_8;\n
        v8->field_8 = v8->field_8->field_4;\n
        v8->field_8->field_0 = 0;\n
        v0[0] = v4;\n
        if (v0)\n
            operator delete(v0);\n
        v10 = v3;\n
        v10->field_0 = v10->field_0 - 1;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    else\n
    {\n
        v1 = v3->field_4;\n
        if (v1)\n
            operator delete(v1);\n
        v9 = v3;\n
        v9->field_4 = 0;\n
        v9->field_8 = 0;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
}\n
", "4222313:sub_406d69": null, "4222320:_ZN8BlogPost16create_blog_postEP4UserPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int BlogPost::create_blog_post(unsigned int v4, char *a0)\n
{\n
    char *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v4 && a0 && *(a0))\n
    {\n
        v1 = operator new(208);\n
        v0 = a0;\n
        BlogPost::__base_ctor__(v1, v4);\n
        v3 = v1;\n
        return v3;\n
    }\n
    v3 = 0;\n
    return v3;\n
}\n
", "4222452:sub_406df4": null, "4222464:_ZN8BlogPostC2EP4UserPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40e190;\n
\n
int BlogPost::__base_ctor__(unsigned int v3[52], unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[52];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[52];  // ecx\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    v1[0] = &g_40e190;\n
    List::__base_ctor__();\n
    List::__base_ctor__();\n
    List::__base_ctor__(&v1[48]);\n
    v5 = v1;\n
    v5[51] = a0;\n
    cgc_strcpy(&v5[1], a1);\n
    cgc_memset(&v1[39], 0, 32);\n
    v1[47] = 0;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4222652:sub_406ebc": null, "4222656:_ZN8BlogPostD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40e190;\n
\n
int BlogPost::__base_dtor__(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    *(v1) = &g_40e190;\n
    List::__base_dtor__(v1 + 48);\n
    List::__base_dtor__();\n
    v5 = v2;\n
    return List::__base_dtor__();\n
}\n
", "4222755:sub_406f23": null, "4222768:_ZN8BlogPostD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int BlogPost::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    BlogPost::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4222827:sub_406f6b": null, "4222832:_ZN8BlogPost9get_titleEv": "int BlogPost::get_title(unsigned int v0)\n
{\n
    return v0 + 4;\n
}\n
", "4222846:sub_406f7e": null, "4222848:_ZN8BlogPost14add_text_blockEPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int BlogPost::add_text_block(unsigned int v5, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ecx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v5;\n
    v2 = cgc_strlen(v1 + 156);\n
    if (a0 && *(a0))\n
    {\n
        if (v2 >= 32)\n
        {\n
            cgc_fdprintf(1, v0 - 12215);\n
            v3 = 0;\n
            return v3 & 1;\n
        }\n
        List::add(v1 + 132);\n
        v7 = v2;\n
        v2 = v7 + 1;\n
        *((v1 + v7 + 156)) = 116;\n
        v3 = 1;\n
        return v3 & 1;\n
    }\n
    cgc_fdprintf(1, v0 - 12237);\n
    v3 = 0;\n
    return v3 & 1;\n
}\n
", "4223065:sub_407059": null, "4223072:_ZN8BlogPost8add_fileEP4File": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int BlogPost::add_file(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    char v3;  // [bp-0x9]\n
    unsigned int v5;  // eax\n
    unsigned int v6;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if (!a0)\n
    {\n
        cgc_fdprintf(1, v0 - 12198);\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v2 = cgc_strlen(v1 + 156);\n
    if (v2 < 32)\n
    {\n
        List::add(v1 + 144);\n
        v5 = v1;\n
        *((v5 + v2 + 156)) = 102;\n
        v6 = v2;\n
        v2 = v6 + 1;\n
        *((v5 + v6 + 157)) = 0;\n
        v3 = 1;\n
        return v3 & 1;\n
    }\n
    cgc_fdprintf(1, v0 - 12215);\n
    v3 = 0;\n
    return v3 & 1;\n
}\n
", "4223294:sub_40713e": null, "4223296:_ZN8BlogPost4likeEP4User": "typedef struct struct_0 {\n
    char padding_0[204];\n
    unsigned int field_cc;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int BlogPost::like(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v3 = 0;\n
    while (true)\n
    {\n
        v0 = v3;\n
        if (v0 >= List::length(&v2->padding_0[192]))\n
        {\n
            List::add(&v2->padding_0[192], a0);\n
            v5 = User::add_like(v2->field_cc);\n
            return v5;\n
        }\n
        else if (List::operator[] const(&v2->padding_0[192], v3) != a0)\n
        {\n
            v3 += 1;\n
        }\n
        else\n
        {\n
            v5 = cgc_fdprintf(1, v1 - 12188);\n
            return v5;\n
        }\n
    }\n
}\n
", "4223513:sub_407219": null, "4223520:_ZN8BlogPost10print_postEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int BlogPost::print_post(unsigned int v11)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x2c]\n
    unsigned int v2;  // [bp-0x28]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    void* v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v9;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v10;  // [bp-0x8]\n
    unsigned int v12;  // ebx\n
    unsigned int v13;  // eax\n
\n
    v10 = v12;\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v11;\n
    v9 = 0;\n
    v8 = 0;\n
    v0 = v5 + 4;\n
    cgc_fdprintf(1, \"---%s---\\n
\");\n
    v6 = 0;\n
    while (true)\n
    {\n
        v3 = v6;\n
        v13 = v3;\n
        if (v13 >= cgc_strlen(v5 + 156))\n
            return v3;\n
        v2 = *(156 + v5 + v6);\n
        if (v2 == 102)\n
        {\n
            v8 += 1;\n
            v7 = List::operator[] const(v5 + 144);\n
            v1 = File::tell_filetype(v7);\n
            if (v1 == 1)\n
            {\n
                AsciiArt::print_asciiart(v7);\n
            }\n
            else\n
            {\n
                if (v1 != 2)\n
                    cgc_fdprintf(1, v4 - 12154);\n
                else\n
                    Picture::print_picture();\n
            }\n
        }\n
        else if (v2 == 116)\n
        {\n
            v9 += 1;\n
            v0 = List::operator[] const(v5 + 132);\n
            cgc_fdprintf(1, v4 - 11260);\n
        }\n
        else\n
        {\n
            v13 = cgc_fdprintf(1, v4 - 12131);\n
            return v13;\n
        }\n
        v6 += 1;\n
    }\n
}\n
", "4223968:_ZN4ListIPcEC2Ev": "int List::__base_ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4223999:sub_4073ff": null, "4224000:_ZN4ListIP4FileEC2Ev": "int List::__base_ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4224031:sub_40741f": null, "4224032:_ZN4ListIP4FileED2Ev": "int List::__base_dtor__(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0x18]\n
\n
    *(v1) = 0;\n
    v0 = 0;\n
    return List::clear_list(v1);\n
}\n
", "4224087:sub_407457": null, "4224096:_ZN4ListIPcED2Ev": "int List::__base_dtor__(unsigned int *v1)\n
{\n
    void* v0;  // [bp-0x18]\n
\n
    *(v1) = 0;\n
    v0 = 0;\n
    return List::clear_list(v1);\n
}\n
", "4224151:sub_407497": null, "4224160:_ZN4ListIPcE3addES0_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int List::add(struct_0 *v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = v3;\n
    v1[0] = operator new(12);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v0;\n
    v1[1] = v4->field_8;\n
    v1[0] = 0;\n
    v1[2] = a0;\n
    if (!v4->field_4)\n
        v0->field_4 = v1;\n
    if (v0->field_8)\n
        v0->field_8->field_0 = v1;\n
    v5 = v0;\n
    v5->field_8 = &v1[0];\n
    v5->field_0 = v5->field_0 + 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4224332:sub_40754c": null, "4224336:_ZN4ListIP4FileE3addES1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int List::add(struct_0 *v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = v3;\n
    v1[0] = operator new(12);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v0;\n
    v1[1] = v4->field_8;\n
    v1[0] = 0;\n
    v1[2] = a0;\n
    if (!v4->field_4)\n
        v0->field_4 = v1;\n
    if (v0->field_8)\n
        v0->field_8->field_0 = v1;\n
    v5 = v0;\n
    v5->field_8 = &v1[0];\n
    v5->field_0 = v5->field_0 + 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4224508:sub_4075fc": null, "4224512:_ZNK4ListIPcEixEm": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int List::operator[] const(struct_1 *v4, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v4;\n
    if (a0 >= v0->field_0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    for (v1 = v0->field_4; v2 != a0; v2 += 1)\n
    {\n
        v1 = v1->field_0;\n
    }\n
    v3 = *((v1 + 8));\n
    return v3;\n
}\n
", "4224632:sub_407678": null, "4224640:_ZNK4ListIP4FileEixEm": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int List::operator[] const(struct_1 *v4, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v4;\n
    if (a0 >= v0->field_0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    for (v1 = v0->field_4; v2 != a0; v2 += 1)\n
    {\n
        v1 = v1->field_0;\n
    }\n
    v3 = *((v1 + 8));\n
    return v3;\n
}\n
", "4224760:sub_4076f8": null, "4224768:_ZN4ListIPcE10clear_listEb": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::clear_list(unsigned int v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = a0 & 1;\n
    v3 = v6;\n
    while (true)\n
    {\n
        v0 = &v4;\n
        v7 = List::pop(v3);\n
        if (!(v7 & 1))\n
            break;\n
        if ((v5 & 1))\n
        {\n
            v1 = *(&v4);\n
            if (v1)\n
                operator delete(v1);\n
        }\n
    }\n
    return v7;\n
}\n
", "4224896:_ZN4ListIPcE3popERS0_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::pop(struct_0 *v6, unsigned int *a0)\n
{\n
    unsigned int v0[2];  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    if (!v3->field_0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v7 = v3;\n
    *(a0) = v7->field_8->field_8;\n
    if (v7->field_0 != 1)\n
    {\n
        v8 = v3;\n
        v4[0] = v8->field_8;\n
        v8->field_8 = v8->field_8->field_4;\n
        v8->field_8->field_0 = 0;\n
        v0[0] = v4;\n
        if (v0)\n
            operator delete(v0);\n
        v10 = v3;\n
        v10->field_0 = v10->field_0 - 1;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    else\n
    {\n
        v1 = v3->field_4;\n
        if (v1)\n
            operator delete(v1);\n
        v9 = v3;\n
        v9->field_4 = 0;\n
        v9->field_8 = 0;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
}\n
", "4225113:sub_407859": null, "4225120:_ZN4ListIP4FileE10clear_listEb": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::clear_list(unsigned int v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_1 **v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = a0 & 1;\n
    v3 = v6;\n
    while (true)\n
    {\n
        v0 = &v4;\n
        v7 = List::pop(v3);\n
        if (!(v7 & 1))\n
            break;\n
        if ((v5 & 1))\n
        {\n
            v1 = *(&v4);\n
            if (v1)\n
                *(v1)->field_4();\n
        }\n
    }\n
    return v7;\n
}\n
", "4225248:_ZN4ListIP4FileE3popERS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::pop(struct_0 *v6, unsigned int *a0)\n
{\n
    unsigned int v0[2];  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4[2];  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    if (!v3->field_0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v7 = v3;\n
    *(a0) = v7->field_8->field_8;\n
    if (v7->field_0 != 1)\n
    {\n
        v8 = v3;\n
        v4[0] = v8->field_8;\n
        v8->field_8 = v8->field_8->field_4;\n
        v8->field_8->field_0 = 0;\n
        v0[0] = v4;\n
        if (v0)\n
            operator delete(v0);\n
        v10 = v3;\n
        v10->field_0 = v10->field_0 - 1;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    else\n
    {\n
        v1 = v3->field_4;\n
        if (v1)\n
            operator delete(v1);\n
        v9 = v3;\n
        v9->field_4 = 0;\n
        v9->field_8 = 0;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
}\n
", "4225465:sub_4079b9": null, "4225472:_ZN4FileC2EmmPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40e1a0;\n
\n
int File::__base_ctor__(unsigned int v3[3], unsigned int a0, unsigned int a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4[3];  // eax\n
    unsigned int v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    v1[0] = &g_40e1a0;\n
    v1[1] = a0;\n
    v1[2] = a1;\n
    if (!a2)\n
    {\n
LABEL_407a2c:\n
        cgc_strcpy(v1 + 1, v0 - 12121);\n
    }\n
    else\n
    {\n
        if (!*(a2))\n
            goto LABEL_407a2c;\n
        if (!(cgc_strlen(a2) < 64))\n
            goto LABEL_407a2c;\n
        cgc_strcpy(v1 + 1, a2);\n
    }\n
    v2 = cgc_strlen(v1 + 1);\n
    if (v2 > 4 && *(8 + &v1[0] + v2) == 46)\n
    {\n
        v4 = v1;\n
        v5 = cgc_strcpy(&v4[6 + 1], -2 + v4 + v2);\n
        return v5;\n
    }\n
    v5 = cgc_memset(&v1[6 + 1], 0, 4);\n
    return v5;\n
}\n
", "4225769:sub_407ae9": null, "4225776:_ZN4FileD1Ev": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[76];\n
    unsigned int field_50[2];\n
    unsigned int field_54;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40e1a0;\n
\n
int File::__dtor__(unsigned int v3[22])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v4[22];  // eax, Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v3[0];\n
    v2->field_0 = &g_40e1a0;\n
    if (v2->field_50)\n
        cgc_free(v2->field_50);\n
    v4 = v2;\n
    if (!v4[21])\n
        return v2;\n
    v4 = v2->field_54;\n
    v0 = v4;\n
    if (!v4)\n
        return v4;\n
    v4 = operator delete[](v0);\n
}\n
", "4225901:sub_407b6d": null, "4225904:_ZN4FileD0Ev": "int File::__deleting_dtor__(unsigned int v0)\n
{\n
}\n
", "4225911:sub_407b77": "int sub_407b77()\n
{\n
    return File::clear_data_size();\n
}\n
", "4225920:_ZN4File15clear_data_sizeEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int File::clear_data_size(struct_0 *v0)\n
{\n
    v0->field_8 = 0;\n
    return v0;\n
}\n
", "4225938:sub_407b92": null, "4225952:_ZN4File15get_header_sizeEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int File::get_header_size(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4225966:sub_407bae": null, "4225968:_ZN4File13get_data_sizeEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int File::get_data_size(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4225982:sub_407bbe": null, "4225984:_ZN4File13tell_filetypeEv": "typedef struct struct_0 {\n
    char padding_0[80];\n
    struct struct_1 *field_50;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int File::tell_filetype(struct_0 *v7)\n
{\n
    unsigned int v0;  // [bp-0x2c]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    unsigned int *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v7;\n
    v0 = &v2->padding_0[76];\n
    v3 = get_filetype_e();\n
    if (v3)\n
    {\n
        v5 = *(v3);\n
        return v5;\n
    }\n
    v4 = v2->field_50->field_0;\n
    v0 = v4;\n
    v3 = get_filetype_m();\n
    if (!v3)\n
    {\n
        v5 = 0;\n
        return v5;\n
    }\n
    v5 = *(v3);\n
    return v5;\n
}\n
", "4226119:sub_407c47": null, "4226128:_Z14get_filetype_mj": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int get_filetype_m(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    void* v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 4)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (v3 == *((v0 - 376 + v1 * 12 + 8)))\n
        {\n
            v2 = v0 - 376 + v1 * 12;\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4226253:sub_407ccd": null, "4226256:_Z14get_filetype_ePc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int get_filetype_e(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v3 && *(v3))\n
    {\n
        v1 = 0;\n
        while (true)\n
        {\n
            if (v1 >= 4)\n
            {\n
                v2 = 0;\n
                return v2;\n
            }\n
            else if (cgc_strcasecmp(*((v0 - 376 + v1 * 12 + 4)), v3))\n
            {\n
                v1 += 1;\n
            }\n
            else\n
            {\n
                v2 = v0 - 376 + v1 * 12;\n
                return v2;\n
            }\n
        }\n
    }\n
    v2 = 0;\n
    return v2;\n
}\n
", "4226432:_ZN2IO3bufEv": "extern char _ZL5iobuf;\n
\n
int IO::buf()\n
{\n
    return &_ZL5iobuf;\n
}\n
", "4226455:sub_407d97": null, "4226464:_ZN2IO8readlineEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IO::readline(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (v6 <= 128 && v6 >= 2)\n
    {\n
        while (true)\n
        {\n
            v0 = &v4;\n
            v1 = 0;\n
            if (!cgc_receive(0, v2 + 332 + v3, 1))\n
            {\n
                v1 = 0;\n
                if (*(&v4) == 1)\n
                    v1 = v3 < v6;\n
            }\n
            if (!(v1 & 1))\n
                break;\n
            if (*((v2 + v3 + 332)) == 10)\n
            {\n
                *((v2 + v3 + 332)) = 0;\n
                break;\n
            }\n
            else if (cgc_isprint(*((v2 + v3 + 332))))\n
            {\n
                v3 += 1;\n
            }\n
            else\n
            {\n
                v5 = 0;\n
                return v5 & 1;\n
            }\n
        }\n
        if (v3 != v6 && v3)\n
        {\n
            v5 = 1;\n
            return v5 & 1;\n
        }\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v5 = 0;\n
    return v5 & 1;\n
}\n
", "4226782:sub_407ede": null, "4226784:_ZN2IO7readnumEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IO::readnum(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    if (!v7)\n
        v2 = 128;\n
    else\n
        v2 = v7;\n
    v7 = v2;\n
    while (true)\n
    {\n
        v0 = &v5;\n
        v1 = 0;\n
        if (!cgc_receive(0, v3 + 332 + v4, 1))\n
        {\n
            v1 = 0;\n
            if (*(&v5) == 1)\n
                v1 = v4 < v7;\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        if (*(332 + v3 + v4) < 48)\n
        {\n
LABEL_407fbe:\n
            *((v3 + v4 + 332)) = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (!(*(332 + v3 + v4) <= 57))\n
                goto LABEL_407fbe;\n
            v4 += 1;\n
        }\n
    }\n
    if (v4 != v7 && v4)\n
    {\n
        v6 = cgc_strtol(v3 + 332, NULL, 10);\n
        return v6;\n
    }\n
    v6 = 0;\n
    return v6;\n
}\n
", "4227120:_ZN2IO9iotextdupEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IO::iotextdup(unsigned int v15)\n
{\n
    unsigned int v0;  // [bp-0x50]\n
    char *v1;  // [bp-0x40]\n
    char *v2;  // [bp-0x3c]\n
    char *v3;  // [bp-0x38]\n
    char *v4;  // [bp-0x34]\n
    void* v5;  // [bp-0x30], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x29]\n
    unsigned int v7;  // [bp-0x28]\n
    char *v8;  // [bp-0x24]\n
    char *v9;  // [bp-0x20], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v12;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v13;  // [bp-0x10]\n
    char *v14;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v16;  // ecx\n
\n
    v7 = &_GLOBAL_OFFSET_TABLE_;\n
    v12 = 0;\n
    v11 = 0;\n
    v10 = 0;\n
    if (v15 < 3)\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    v9 = operator new[](128);\n
    if (!v9)\n
    {\n
        v14 = 0;\n
        return v14;\n
    }\n
    while (true)\n
    {\n
        v0 = &v13;\n
        v6 = 0;\n
        if (!cgc_receive(0, &v12[v9], 1))\n
        {\n
            v6 = 0;\n
            if (*(&v13) == 1)\n
                v6 = v12 < v15;\n
        }\n
        if (!(v6 & 1))\n
        {\n
LABEL_408207:\n
            if (v10 != 3 && *((v9 + v12)) != 10)\n
            {\n
                v1 = v9;\n
                if (v1)\n
                {\n
                    operator delete[](v1);\n
                    break;\n
                }\n
            }\n
            *((v9 + v12 - 3)) = 0;\n
            v14 = v9;\n
            return v14;\n
        }\n
        else\n
        {\n
            if (v10 == 3)\n
                goto LABEL_408207;\n
            v16 = v12;\n
            v12 = v16 + 1;\n
            if (*((v9 + v16)) == 96)\n
                v5 = v10 + 1;\n
            else\n
                v5 = 0;\n
            v10 = v5;\n
            if (v12 == 128 << (v11 & 31))\n
            {\n
                v11 += 1;\n
                v8 = operator new[](128 << (v11 & 31));\n
                if (v8)\n
                {\n
                    v2 = v9;\n
                    cgc_memcpy(v8, v2, 128 << (v11 & 31));\n
                    v3 = v9;\n
                    if (v3)\n
                        operator delete[](v3);\n
                    v9 = v8;\n
                }\n
                else\n
                {\n
                    v4 = v9;\n
                    if (v4)\n
                        operator delete[](v4);\n
                    v14 = 0;\n
                    return v14;\n
                }\n
            }\n
        }\n
    }\n
    v14 = 0;\n
    return v14;\n
}\n
", "4227689:sub_408269": null, "4227696:_ZN2IO10readnbytesEmPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IO::readnbytes(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    if (!v6)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    do\n
    {\n
        v0 = &v4;\n
        v1 = 0;\n
        if (!cgc_receive(0, a0 + v3, 1))\n
        {\n
            v1 = 0;\n
            if (*(&v4) == 1)\n
            {\n
                v3 += 1;\n
                v1 = v3 < v6;\n
            }\n
        }\n
    } while ((v1 & 1));\n
    if (v3 != v6)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v5 = 1;\n
    return v5 & 1;\n
}\n
", "4227906:sub_408342": null, "4227920:_ZN2IO11upload_fileEv": "typedef struct struct_2 {\n
    char field_0;\n
} struct_2;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IO::upload_file()\n
{\n
    unsigned int v0;  // [bp-0x124]\n
    struct struct_1 **v1;  // [bp-0x120]\n
    unsigned int v2;  // [bp-0x11c]\n
    struct struct_1 **v3;  // [bp-0x118]\n
    unsigned int v4;  // [bp-0x114]\n
    struct struct_1 **v5;  // [bp-0x110]\n
    unsigned int v6;  // [bp-0x10c]\n
    struct struct_1 **v7;  // [bp-0x108]\n
    unsigned int v8;  // [bp-0x104]\n
    struct_2 *v9;  // [bp-0x100]\n
    struct_2 *v10;  // [bp-0xfc]\n
    char *v11;  // [bp-0xf8]\n
    unsigned int v12;  // [bp-0xf4]\n
    struct struct_1 **v13;  // [bp-0xf0]\n
    unsigned int *v14;  // [bp-0xec]\n
    void* v15;  // [bp-0xe8], Other Possible Types: unsigned int\n
    unsigned int v16;  // [bp-0xe4]\n
    void* v17;  // [bp-0xdc], Other Possible Types: unsigned int\n
    unsigned short v18[4];  // [bp-0xd8]\n
    char v19;  // [bp-0xd4]\n
    char v20;  // [bp-0x58]\n
    void* v21;  // [bp-0x18]\n
    struct struct_1 **v22;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v23;  // [bp-0x8]\n
    unsigned int v25;  // ebx\n
\n
    v23 = v25;\n
    v12 = &_GLOBAL_OFFSET_TABLE_;\n
    v21 = 0;\n
    v17 = 0;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    cgc_memset(&v20, 0, 64);\n
    cgc_fdprintf(1, v12 - 12096);\n
    if ((IO::readline(128) & 1))\n
    {\n
        if (cgc_strlen(IO::buf()) > 2 && cgc_strlen(IO::buf()) < 64)\n
        {\n
            v10 = &v20;\n
            v11 = IO::buf();\n
            cgc_memcpy(v10, v11, cgc_strlen(IO::buf()));\n
            goto LABEL_4084c6;\n
        }\n
        v9 = &v20;\n
        cgc_memcpy(v9, IO::buf(), 63);\n
LABEL_4084c6:\n
    }\n
    cgc_fdprintf(1, v12 - 12079);\n
    if (!(IO::readnbytes(4, v18) & 1))\n
    {\n
        cgc_fdprintf(1, v12 - 12053);\n
        v22 = 0;\n
        return v22;\n
    }\n
    v16 = *(&v18[0]);\n
    v14 = get_filetype_m(v16);\n
    if (!v14)\n
    {\n
        cgc_fdprintf(1, v12 - 12027);\n
        v22 = 0;\n
        return v22;\n
    }\n
    else if (*(v14) == 1)\n
    {\n
        if ((IO::readnbytes(AsciiArt::find_header_size() - 4, &v19) & 1))\n
        {\n
            v15 = AsciiArt::find_data_size(v18);\n
            v17 = operator new[](v15);\n
            if (!(IO::readnbytes(v15, v17) & 1))\n
            {\n
                cgc_fdprintf(1, v12 - 11986);\n
                v8 = v17;\n
                if (v8)\n
                    operator delete[](v8);\n
                v22 = 0;\n
                return v22;\n
            }\n
            else\n
            {\n
                v7 = operator new(100);\n
                AsciiArt::__ctor__(v7, v18, v17, &v20);\n
                v13 = v7;\n
                if (File::get_data_size(v13))\n
                {\n
                    v22 = v13;\n
                    return v22;\n
                }\n
                cgc_fdprintf(1, v12 - 11965);\n
                v6 = v17;\n
                if (v6)\n
                    operator delete[](v6);\n
                v5 = v13;\n
                if (v5)\n
                    *(v5)->field_4();\n
                v22 = 0;\n
                return v22;\n
            }\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, v12 - 12009);\n
            v22 = 0;\n
            return v22;\n
        }\n
    }\n
    else\n
    {\n
        if (*(v14) != 2)\n
        {\n
            cgc_fdprintf(1, v12 - 11949);\n
            v22 = 0;\n
            return v22;\n
        }\n
        else if ((IO::readnbytes(Picture::find_header_size() - 4, &v19) & 1))\n
        {\n
            v15 = Picture::find_data_size();\n
            v17 = operator new[](v15);\n
            if (!(IO::readnbytes(v15, v17) & 1))\n
            {\n
                cgc_fdprintf(1, v12 - 11986);\n
                v4 = v17;\n
                if (v4)\n
                    operator delete[](v4);\n
                v22 = 0;\n
                return v22;\n
            }\n
            else\n
            {\n
                v3 = operator new(96);\n
                Picture::__ctor__(v3, v18, v17);\n
                v13 = v3;\n
                if (!File::get_data_size(v13))\n
                {\n
                    cgc_fdprintf(1, v12 - 11965);\n
                    v2 = v17;\n
                    if (v2)\n
                        operator delete[](v2);\n
                    v1 = v13;\n
                    if (v1)\n
                        *(v1)->field_4();\n
                    v22 = 0;\n
                    return v22;\n
                }\n
                else\n
                {\n
                    v0 = v17;\n
                    if (v0)\n
                        operator delete[](v0);\n
                    v22 = v13;\n
                    return v22;\n
                }\n
            }\n
        }\n
        else\n
        {\n
            cgc_fdprintf(1, v12 - 12009);\n
            v22 = 0;\n
            return v22;\n
        }\n
    }\n
}\n
", "4229625:sub_4089f9": null, "4229632:_Z10print_menuP4User": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int print_menu(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = v3;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    cgc_fdprintf(1, \"Select an option\\n
\");\n
    if (!v2)\n
    {\n
        cgc_fdprintf(1, v0 - 11842);\n
        cgc_fdprintf(1, v0 - 11829);\n
        cgc_fdprintf(1, v0 - 11818);\n
        cgc_fdprintf(1, v0 - 11794);\n
        v4 = cgc_fdprintf(1, v0 - 11768);\n
        return v4;\n
    }\n
    cgc_fdprintf(1, v0 - 11759);\n
    cgc_fdprintf(1, v0 - 11737);\n
    cgc_fdprintf(1, v0 - 11716);\n
    cgc_fdprintf(1, v0 - 11697);\n
    cgc_fdprintf(1, v0 - 11680);\n
    cgc_fdprintf(1, v0 - 11660);\n
    cgc_fdprintf(1, v0 - 11639);\n
    cgc_fdprintf(1, v0 - 11621);\n
    cgc_fdprintf(1, v0 - 11601);\n
    cgc_fdprintf(1, v0 - 11577);\n
    v4 = cgc_fdprintf(1, v0 - 11550);\n
    return v4;\n
}\n
", "4230100:sub_408bd4": null, "4230112:_Z14make_selectionRP4User": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int make_selection()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int *v7;  // [bp+0x4]\n
    unsigned int v12;  // ebx\n
\n
    v5 = v12;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = 0;\n
    cgc_fdprintf(1, \"Selection: \");\n
    v3 = IO::readnum(128);\n
    if (*(v7))\n
    {\n
        v0 = v3 - 1;\n
        if (v0 <= 10)\n
            goto *(((stack_base)[20] + (stack_base)[28] * 4 - 11904)) + (stack_base)[20];\n
        else\n
            cgc_fdprintf(1, v2 - 11527);\n
    }\n
    else\n
    {\n
        v1 = v3 - 1;\n
        if (v1 <= 4)\n
            goto *(((stack_base)[20] + (stack_base)[24] * 4 - 11924)) + (stack_base)[20];\n
        else\n
            cgc_fdprintf(1, v2 - 11527);\n
    }\n
}\n
", "4230231:sub_408c57": "int sub_408c57()\n
{\n
    Blog::register_user();\n
}\n
", "4230244:sub_408c64": "int sub_408c64()\n
{\n
    unsigned int *v1;  // [bp+0x8]\n
\n
    *(v1) = Blog::log_in();\n
}\n
", "4230264:sub_408c78": "int sub_408c78()\n
{\n
    Blog::view_user_posts(0, 0, 0);\n
}\n
", "4230302:sub_408c9e": "int sub_408c9e()\n
{\n
    Blog::view_user_profile(0);\n
}\n
", "4230324:sub_408cb4": "int sub_408cb4()\n
{\n
    char v0;  // [bp-0x10]\n
    char v1;  // [bp-0x5]\n
\n
    cgc_fdprintf(1, *(&v0) - 11537);\n
    v1 = 0;\n
}\n
", "4230758:sub_408e66": null, "4230768:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int main(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    char v1;  // [bp-0x15]\n
    void* v2;  // [bp-0x14]\n
    void* v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    for (v1 = 1; (v1 & 1); v1 = make_selection() & 1)\n
    {\n
        print_menu(v3);\n
    }\n
    return v4;\n
}\n
", "4230878:sub_408ede": null, "4230880:_ZN7PictureC1EPvS0_Pc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[76];\n
    unsigned int field_50;\n
    struct struct_1 *field_54;\n
} struct_0;\n
\n
typedef struct struct_2 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    char field_0;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Picture::__ctor__(struct_0 *v6, struct_2 *a0, unsigned int a1, char *a2)\n
{\n
    char *v0;  // [bp-0x1c]\n
    char *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct_0 *v8;  // ecx\n
    struct_0 *v9;  // eax\n
    struct_0 *v11;  // eax\n
    struct_0 *v12;  // eax\n
    unsigned int v13;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    File::__base_ctor__(v3, 8, a0->field_4, a2);\n
    v8 = v3;\n
    v8->field_0 = v2 + -320;\n
    cgc_memcpy(v8 + 1, a0, 8);\n
    v9 = v3;\n
    v9->field_50 = v9 + 1;\n
    v11 = v3;\n
    v11->field_54 = operator new[](File::get_data_size(v9) + 1);\n
    v0 = &v11->field_54->field_0;\n
    v1 = a1;\n
    cgc_memcpy(v0, v1, File::get_data_size(v11));\n
    v12 = v3;\n
    v4 = &v12->field_54->field_0;\n
    v4[File::get_data_size(v12)] = 0;\n
    v13 = v5;\n
    return v4;\n
}\n
", "4231123:sub_408fd3": null, "4231136:_ZN7PictureD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_40e1e4;\n
\n
int Picture::__base_dtor__(unsigned int v3[22])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[22];  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v3;\n
    v2[0] = &g_40e1e4;\n
    if (v2[21])\n
    {\n
        v0 = v2[21];\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    File::clear_data_size(v2);\n
    return File::__dtor__(v2);\n
}\n
", "4231259:sub_40905b": null, "4231264:_ZN7PictureD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Picture::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[22];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    Picture::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4231323:sub_40909b": null, "4231328:_ZN7Picture9get_magicEv": "typedef struct struct_0 {\n
    char padding_0[88];\n
    unsigned int field_58;\n
} struct_0;\n
\n
int Picture::get_magic(struct_0 *v0)\n
{\n
    return v0->field_58;\n
}\n
", "4231342:sub_4090ae": null, "4231344:_ZN7Picture16find_header_sizeEv": "int Picture::find_header_size()\n
{\n
    return 8;\n
}\n
", "4231354:sub_4090ba": null, "4231360:_ZN7Picture14find_data_sizeEPv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Picture::find_data_size(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4231374:sub_4090ce": null, "4231376:_ZN7Picture13print_pictureEv": "typedef struct struct_0 {\n
    char padding_0[84];\n
    unsigned int field_54;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Picture::print_picture(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0x10]\n
    char *v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= File::get_data_size(v3))\n
            break;\n
        if (cgc_isprint(*((v3->field_54 + v4))))\n
        {\n
LABEL_409164:\n
            v0 = *((v3->field_54 + v4));\n
            cgc_fdprintf(1, v2 - 11499);\n
            goto LABEL_4091ac;\n
        }\n
        else\n
        {\n
            if (*((v3->field_54 + v4)) == 10)\n
                goto LABEL_409164;\n
            if (*((v3->field_54 + v4)) == 9)\n
                goto LABEL_409164;\n
            cgc_fdprintf(1, v2 - 12530);\n
LABEL_4091ac:\n
            v4 += 1;\n
        }\n
    }\n
    return cgc_fdprintf(1, v2 - 11125);\n
}\n
", "4231646:sub_4091de": null, "4231648:_ZN4UserC2EPcS0_S0_": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::__base_ctor__(unsigned int v3[14], char *a0, char *a1, char *a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[14];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[14];  // ecx\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    List::__base_ctor__();\n
    List::__base_ctor__(&v1[1 + 3]);\n
    v5 = v1;\n
    v5[12] = 0;\n
    cgc_memcpy(v5, a0, 16);\n
    cgc_memcpy(&v1[4], a1, 16);\n
    cgc_memcpy(&v1[8], a2, 16);\n
    v1[13] = 0;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4231832:sub_409298": null, "4231840:_ZN4UserD1Ev": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::__dtor__(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    struct_0 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    List::clear_list(&v2[1].padding_0[4]);\n
    List::clear_list(&v2[1].padding_0[16], 1);\n
    if (v2->field_30)\n
    {\n
        v0 = v2->field_30;\n
        if (v0)\n
            operator delete(v0);\n
    }\n
    List::__base_dtor__(&v2[1].padding_0[16]);\n
    return List::__base_dtor__();\n
}\n
", "4232005:sub_409345": null, "4232016:_ZN4User8get_postEi": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::get_post(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = a0;\n
    if (v3 >= List::length())\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = a0;\n
    v4 = List::operator[] const(v2 + 56);\n
    return v4;\n
}\n
", "4232128:_ZN4User12get_usernameEv": "int User::get_username(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4232139:sub_4093cb": null, "4232144:_ZN4User12is_full_userEv": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::is_full_user(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    v2 = 0;\n
    if (List::length(&v1[1].padding_0[12]) < 3)\n
        return v2 & 1;\n
    v2 = 0;\n
    if (List::length() >= 5)\n
    {\n
        v2 = !(v1->field_34 <= 5);\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4232262:sub_409446": null, "4232272:_ZN4User14check_passwordEPc": "int User::check_password(unsigned int v0, char *a0)\n
{\n
    return !cgc_strcmp(v0 + 16, a0);\n
}\n
", "4232335:sub_40948f": null, "4232336:_ZN4User10add_friendEPS_Pc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::add_friend(unsigned int v3, unsigned int a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (a0 == v1)\n
    {\n
        cgc_fdprintf(1, v0 - 11496);\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    if (a0 && !cgc_strcmp(a0 + 32, a1))\n
    {\n
        if (!(List::find(v1 + 68) & 1))\n
        {\n
            v2 = List::add(v1 + 68, a0) & 1;\n
            return v2 & 1;\n
        }\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v2 = 0;\n
    return v2 & 1;\n
}\n
", "4232552:sub_409568": null, "4232560:_ZN4User12edit_profileEv": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::edit_profile(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    struct_0 *v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    cgc_fdprintf(1, \"Enter new profile info (end with: ```)\\n
\");\n
    v3 = IO::iotextdup(0x400);\n
    if (!v3)\n
    {\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    if (v1->field_30)\n
    {\n
        v0 = v1->field_30;\n
        if (v0)\n
            operator delete[](v0);\n
    }\n
    v1->field_30 = v3;\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4232727:sub_409617": null, "4232736:_ZN4User8add_postEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::add_post(unsigned int v8)\n
{\n
    void* v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10], Other Possible Types: void*\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v8;\n
    v5 = 0;\n
    v4 = 0;\n
    v3 = 0;\n
    v2 = 0;\n
    cgc_fdprintf(1, \"Enter post title: \\n
\\t\");\n
    if (!(IO::readline(128) & 1))\n
    {\n
        cgc_fdprintf(1, v1 - 11415);\n
        v6 = 0;\n
        return v6 & 1;\n
    }\n
    v2 = BlogPost::create_blog_post(v0, IO::buf());\n
    do\n
    {\n
        cgc_fdprintf(1, v1 - 11393);\n
        v5 = IO::iotextdup(0x1000);\n
        if (v5)\n
            BlogPost::add_text_block(v2, v5);\n
        if ((User::is_full_user(v0) & 1))\n
        {\n
            cgc_fdprintf(1, v1 - 11359);\n
            cgc_fdprintf(1, v1 - 12252);\n
            cgc_fdprintf(1, v1 - 12244);\n
            cgc_fdprintf(1, v1 - 12320);\n
            v3 = IO::readnum(128);\n
            if (v3 == 1)\n
            {\n
                v4 = IO::upload_file();\n
                if (v4)\n
                    BlogPost::add_file(v2, v4);\n
            }\n
        }\n
        cgc_fdprintf(1, v1 - 11344);\n
        cgc_fdprintf(1, v1 - 12252);\n
        cgc_fdprintf(1, v1 - 12244);\n
        cgc_fdprintf(1, v1 - 12320);\n
        v3 = IO::readnum(128);\n
    } while (v3 == 1);\n
    v6 = List::add(v0 + 56) & 1;\n
    return v6 & 1;\n
}\n
", "4233370:sub_40989a": null, "4233376:_ZN4User11delete_postEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::delete_post(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    cgc_fdprintf(1, \"Select a post to delete:\\n
\");\n
    cgc_fdprintf(1, v2 - 12332);\n
    User::list_posts(v1);\n
    cgc_fdprintf(1, v2 - 12320);\n
    v3 = IO::readnum(128);\n
    if (!v3)\n
    {\n
        cgc_fdprintf(1, v2 - 12308);\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    v0 = v3;\n
    if (v0 <= List::length())\n
    {\n
        v3 -= 1;\n
        v4 = List::remove(v1 + 56) & 1;\n
        return v4 & 1;\n
    }\n
    cgc_fdprintf(1, v2 - 11527);\n
    cgc_fdprintf(1, v2 - 12308);\n
    v4 = 0;\n
    return v4 & 1;\n
}\n
", "4233699:sub_4099e3": null, "4233712:_ZN4User10list_postsEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::list_posts(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v7;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v3 = v6;\n
        if (v3 >= List::length())\n
            break;\n
        v2 = v6 + 1;\n
        v0 = v2;\n
        v1 = BlogPost::get_title(List::operator[] const(v5 + 56));\n
        cgc_fdprintf(1, v4 - 11265);\n
        v6 += 1;\n
    }\n
    return v3;\n
}\n
", "4233886:sub_409a9e": null, "4233888:_ZN4User9num_postsEv": "int User::num_posts(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::length(v1 + 56, *(&v0));\n
}\n
", "4233928:sub_409ac8": null, "4233936:_ZN4User13print_profileEv": "typedef struct struct_0 {\n
    char padding_0[48];\n
    unsigned int field_30;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[48];\n
    char *field_30;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::print_profile(struct_0 *v4)\n
{\n
    struct_0 *v0;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x10]\n
    struct_1 *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // eax\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &v4->padding_0;\n
    v0 = &v2->padding_0;\n
    cgc_fdprintf(1, \"User %s's profile:\\n
\");\n
    if (v2->field_30 && cgc_strlen(v2->field_30))\n
    {\n
        v0 = v2->field_30;\n
        v6 = cgc_fdprintf(1, v1 - 11260);\n
        return v6;\n
    }\n
    v6 = cgc_fdprintf(1, v1 - 11282);\n
    return v6;\n
}\n
", "4234103:sub_409b77": null, "4234112:_ZN4User10print_postEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::print_post(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v5;\n
    if (a0 >= 1)\n
    {\n
        v2 = a0;\n
        if (v2 <= List::length())\n
        {\n
            v0 = v4;\n
            cgc_fdprintf(1, v3 - 11223);\n
            a0 -= 1;\n
            v6 = BlogPost::print_post(List::operator[] const(v4 + 56));\n
            return v6;\n
        }\n
    }\n
    v0 = v4;\n
    v1 = a0;\n
    v6 = cgc_fdprintf(1, v3 - 11256);\n
    return v6;\n
}\n
", "4234315:sub_409c4b": null, "4234320:_ZN4User9like_postEPS_m": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::like_post(unsigned int v5, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v5;\n
    if (!a0)\n
    {\n
        v6 = cgc_fdprintf(1, v3 - 11210);\n
        return v6;\n
    }\n
    else if (a0 == v4)\n
    {\n
        v6 = cgc_fdprintf(1, v3 - 11171);\n
        return v6;\n
    }\n
    else\n
    {\n
        if (a1 >= 1)\n
        {\n
            v2 = a1;\n
            if (v2 <= List::length())\n
            {\n
                a1 -= 1;\n
                BlogPost::like(List::operator[] const(v4 + 56), a0);\n
                v6 = cgc_fdprintf(1, v3 - 11131);\n
                return v6;\n
            }\n
        }\n
        v0 = v4;\n
        v1 = a1;\n
        v6 = cgc_fdprintf(1, v3 - 11256);\n
        return v6;\n
    }\n
}\n
", "4234610:sub_409d72": null, "4234624:_ZN4User12list_friendsEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::list_friends(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v7;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v3 = v6;\n
        if (v3 >= List::length(v5 + 68))\n
            break;\n
        v2 = v6 + 1;\n
        v0 = v2;\n
        v1 = List::operator[] const(v5 + 68, v6);\n
        cgc_fdprintf(1, v4 - 11265);\n
        v6 += 1;\n
    }\n
    return v3;\n
}\n
", "4234787:sub_409e23": null, "4234800:_ZN4User8unfriendEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int User::unfriend(unsigned int v6)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v6;\n
    cgc_fdprintf(1, \"Select a user to unfriend:\\n
\");\n
    cgc_fdprintf(1, v2 - 12332);\n
    User::list_friends(v1);\n
    cgc_fdprintf(1, v2 - 12320);\n
    v3 = IO::readnum(128);\n
    if (!v3)\n
    {\n
        cgc_fdprintf(1, v2 - 12308);\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    v0 = v3;\n
    if (v0 <= List::length(v1 + 68))\n
    {\n
        v3 -= 1;\n
        v4 = List::remove(v1 + 68) & 1;\n
        return v4 & 1;\n
    }\n
    cgc_fdprintf(1, v2 - 11527);\n
    cgc_fdprintf(1, v2 - 12308);\n
    v4 = 0;\n
    return v4 & 1;\n
}\n
", "4235123:sub_409f73": null, "4235136:_ZN4User8add_likeEv": "typedef struct struct_0 {\n
    char padding_0[52];\n
    unsigned int field_34;\n
} struct_0;\n
\n
int User::add_like(struct_0 *v0)\n
{\n
    struct_0 *v1;  // eax\n
\n
    v1 = v0;\n
    v1->field_34 = v1->field_34 + 1;\n
    return v0;\n
}\n
", "4235156:sub_409f94": null, "4235168:_ZN4ListIP8BlogPostEC2Ev": "int List::__base_ctor__(unsigned int v0[3])\n
{\n
    unsigned int v1[3];  // eax\n
\n
    v1 = v0;\n
    v1[0] = 0;\n
    v1[1] = 0;\n
    v1[2] = 0;\n
    return v0;\n
}\n
", "4235199:sub_409fbf": null, "4235200:_ZN4ListIP8BlogPostE10clear_listEb": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::clear_list(unsigned int v6, char a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_1 **v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    unsigned int v7;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = a0 & 1;\n
    v3 = v6;\n
    while (true)\n
    {\n
        v0 = &v4;\n
        v7 = List::pop(v3);\n
        if (!(v7 & 1))\n
            break;\n
        if ((v5 & 1))\n
        {\n
            v1 = *(&v4);\n
            if (v1)\n
                *(v1)->field_4();\n
        }\n
    }\n
    return v7;\n
}\n
", "4235328:_ZN4ListIP8BlogPostED2Ev": "int List::__base_dtor__(unsigned int *v0)\n
{\n
    *(v0) = 0;\n
    return List::clear_list(v0, 0);\n
}\n
", "4235383:sub_40a077": null, "4235392:_ZN4ListIP8BlogPostE6lengthEv": "int List::length(unsigned int *v0)\n
{\n
    return *(v0);\n
}\n
", "4235405:sub_40a08d": null, "4235408:_ZNK4ListIP8BlogPostEixEm": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int List::operator[] const(struct_1 *v4, unsigned int a0)\n
{\n
    struct_1 *v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v3;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = v4;\n
    if (a0 >= v0->field_0)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = 0;\n
    v1 = 0;\n
    for (v1 = v0->field_4; v2 != a0; v2 += 1)\n
    {\n
        v1 = v1->field_0;\n
    }\n
    v3 = *((v1 + 8));\n
    return v3;\n
}\n
", "4235528:sub_40a108": null, "4235536:_ZN4ListIP4UserE4findES1_": "typedef struct struct_1 {\n
    char padding_0[4];\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
    char padding_4[4];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int List::find(struct_1 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x5]\n
\n
    v0 = v2->field_4;\n
    while (true)\n
    {\n
        if (!v0)\n
        {\n
            v1 = 0;\n
            return v1 & 1;\n
        }\n
        else if (*((v0 + 8)) != a0)\n
        {\n
            v0 = *(v0);\n
        }\n
        else\n
        {\n
            v1 = 1;\n
            return v1 & 1;\n
        }\n
    }\n
}\n
", "4235626:sub_40a16a": null, "4235632:_ZN4ListIP8BlogPostE3addES1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
} struct_1;\n
\n
int List::add(struct_0 *v3, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x14]\n
    unsigned int v1[3];  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = v3;\n
    v1[0] = operator new(12);\n
    if (!v1)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v0;\n
    v1[1] = v4->field_8;\n
    v1[0] = 0;\n
    v1[2] = a0;\n
    if (!v4->field_4)\n
        v0->field_4 = v1;\n
    if (v0->field_8)\n
        v0->field_8->field_0 = v1;\n
    v5 = v0;\n
    v5->field_8 = &v1[0];\n
    v5->field_0 = v5->field_0 + 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4235804:sub_40a21c": null, "4235808:_ZN4ListIP8BlogPostE6removeEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::remove(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    if (a0 < *(v3) && *(v3))\n
    {\n
        if (*(v3) == 1)\n
        {\n
            v1 = *((v3 + 4));\n
            if (v1)\n
                operator delete(v1);\n
            v8 = v3;\n
            *((v8 + 4)) = 0;\n
            *((v8 + 8)) = 0;\n
            *(v8) = *(v8) - 1;\n
            v6 = 1;\n
            return v6 & 1;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            v4 = 0;\n
            for (v4 = *((v3 + 4)); v5 != a0; v5 += 1)\n
            {\n
                v4 = *(v4);\n
            }\n
            if (v4 == *((v3 + 4)))\n
            {\n
                v9 = v3;\n
                *((v9 + 4)) = *(*((v9 + 4)));\n
                *((*((v9 + 4)) + 4)) = 0;\n
            }\n
            else if (v4 == *((v3 + 8)))\n
            {\n
                v10 = v3;\n
                *((v10 + 8)) = *((*((v10 + 8)) + 4));\n
                *(*((v10 + 8))) = 0;\n
            }\n
            else\n
            {\n
                *(*((v4 + 4))) = *(v4);\n
                *((*(v4) + 4)) = *((v4 + 4));\n
            }\n
            v0 = v4;\n
            if (v0)\n
                operator delete(v0);\n
            v11 = v3;\n
            *(v11) = *(v11) - 1;\n
            v6 = 1;\n
            return v6 & 1;\n
        }\n
    }\n
    v6 = 0;\n
    return v6 & 1;\n
}\n
", "4236184:sub_40a398": null, "4236192:_ZN4ListIP4UserE6removeEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::remove(unsigned int v7, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    unsigned int v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    if (a0 < *(v3) && *(v3))\n
    {\n
        if (*(v3) == 1)\n
        {\n
            v1 = *((v3 + 4));\n
            if (v1)\n
                operator delete(v1);\n
            v8 = v3;\n
            *((v8 + 4)) = 0;\n
            *((v8 + 8)) = 0;\n
            *(v8) = *(v8) - 1;\n
            v6 = 1;\n
            return v6 & 1;\n
        }\n
        else\n
        {\n
            v5 = 0;\n
            v4 = 0;\n
            for (v4 = *((v3 + 4)); v5 != a0; v5 += 1)\n
            {\n
                v4 = *(v4);\n
            }\n
            if (v4 == *((v3 + 4)))\n
            {\n
                v9 = v3;\n
                *((v9 + 4)) = *(*((v9 + 4)));\n
                *((*((v9 + 4)) + 4)) = 0;\n
            }\n
            else if (v4 == *((v3 + 8)))\n
            {\n
                v10 = v3;\n
                *((v10 + 8)) = *((*((v10 + 8)) + 4));\n
                *(*((v10 + 8))) = 0;\n
            }\n
            else\n
            {\n
                *(*((v4 + 4))) = *(v4);\n
                *((*(v4) + 4)) = *((v4 + 4));\n
            }\n
            v0 = v4;\n
            if (v0)\n
                operator delete(v0);\n
            v11 = v3;\n
            *(v11) = *(v11) - 1;\n
            v6 = 1;\n
            return v6 & 1;\n
        }\n
    }\n
    v6 = 0;\n
    return v6 & 1;\n
}\n
", "4236568:sub_40a518": null, "4236576:_ZN4ListIP8BlogPostE3popERS1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::pop(struct_0 *v6, unsigned int *a0)\n
{\n
    unsigned int v0[3];  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4[3];  // [bp-0x10]\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // eax\n
    struct_0 *v8;  // eax\n
    struct_0 *v9;  // eax\n
    struct_0 *v10;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    if (!v3->field_0)\n
    {\n
        v5 = 0;\n
        return v5 & 1;\n
    }\n
    v7 = v3;\n
    *(a0) = v7->field_8->field_8;\n
    if (v7->field_0 != 1)\n
    {\n
        v8 = v3;\n
        v4[0] = v8->field_8;\n
        v8->field_8 = v8->field_8->field_4;\n
        v8->field_8->field_0 = 0;\n
        v0[0] = v4;\n
        if (v0)\n
            operator delete(v0);\n
        v10 = v3;\n
        v10->field_0 = v10->field_0 - 1;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
    else\n
    {\n
        v1 = v3->field_4;\n
        if (v1)\n
            operator delete(v1);\n
        v9 = v3;\n
        v9->field_4 = 0;\n
        v9->field_8 = 0;\n
        v5 = 1;\n
        return v5 & 1;\n
    }\n
}\n
", "4236796:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242884:_Znwj": null, "5242888:__cxa_atexit": null, "5242892:__libc_start_main": null, "5242896:cgc_receive": null, "5242900:_Znaj": null, "5242904:cgc_allocate": null, "5242908:_ZdlPv": null, "5242912:cgc_deallocate": null, "5242916:_ZdaPv": null, "5242920:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}