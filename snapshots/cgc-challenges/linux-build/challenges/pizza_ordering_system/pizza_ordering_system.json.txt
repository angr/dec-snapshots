{"4210688:_init": "extern struct_0 *g_41025c;\n
\n
int _init()\n
{\n
    if (g_41025c)\n
    {\n
        g_41025c();\n
        return;\n
    }\n
    return;\n
}\n
", "4210736:sub_404030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_404030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4210752:_Znwj": "// attributes: PLT stub\n
int operator new(unsigned int v0)\n
{\n
    ::libstdc++.so::operator new();\n
    return;\n
}\n
", "4210768:memcpy": "// attributes: PLT stub\n
void* memcpy(void* v0, void* to, unsigned int from)\n
{\n
    return ::libc.so.0::memcpy(v0, to, from);\n
}\n
", "4210784:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4210800:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4210816:_Znaj": "// attributes: PLT stub\n
int operator new[](unsigned int v0)\n
{\n
    ::libstdc++.so::operator new[]();\n
    return;\n
}\n
", "4210832:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4210848:_ZdlPv": "// attributes: PLT stub\n
int operator delete(unsigned int v0)\n
{\n
    ::libstdc++.so::operator delete();\n
    return;\n
}\n
", "4210864:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4210880:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4210896:sub_4040d0": "int sub_4040d0()\n
{\n
    goto *((ebx<4> - 20));\n
}\n
", "4210902:sub_4040d6": null, "4210912:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4210955:sub_40410b": null, "4210956:sub_40410c": "int sub_40410c()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4210960:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4210964:sub_404114": null, "4210976:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-c;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 49471;\n
    v6 = v5 + 136;\n
    v7 = v5 + 136;\n
    if (v7 == v6)\n
        return v5 + 136;\n
    v7 = v5[3].field_-c;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[3].field_-c();\n
    }\n
    return v5[3].field_-c;\n
}\n
", "4211027:sub_404153": "int sub_404153()\n
{\n
}\n
", "4211033:sub_404159": "int sub_404159()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4211040:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 49407;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 136;\n
    v9 = (v6 + 136 - (v6 + 136) >> 31) + (136 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4211111:sub_4041a7": "int sub_4041a7()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4211120:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_410250;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_410250)\n
    {\n
        v0 = __dso_handle;\n
        sub_4040d0();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4211195:sub_4041fb": "int sub_4041fb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4211200:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4211209:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4211213:sub_40420d": null, "4211216:cgc_calloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_calloc(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v5 && a0)\n
    {\n
        v3 = a0 * v5;\n
        if ((0 CONCAT v3) /m a0 != v5)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v2 = cgc_malloc();\n
        if (!v2)\n
        {\n
            v4 = 0;\n
            return v4;\n
        }\n
        v0 = v3;\n
        v4 = cgc_memset(v2, 0);\n
        return v4;\n
    }\n
    v4 = 0;\n
    return v4;\n
}\n
", "4211397:sub_4042c5": null, "4211408:cgc_isalnum": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalnum(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_isalpha())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isdigit();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4211497:sub_404329": null, "4211504:cgc_isalpha": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isalpha(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v4;\n
    v2 = 1;\n
    if (!cgc_islower())\n
    {\n
        v0 = v4;\n
        v2 = cgc_isupper();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4211593:sub_404389": null, "4211600:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4211625:sub_4043a9": null, "4211632:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4211657:sub_4043c9": null, "4211664:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4211689:sub_4043e9": null, "4211696:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return ((v0 & -128) ^ 255) & 1;\n
}\n
", "4211723:sub_40440b": null, "4211728:cgc_isblank": "int cgc_isblank(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 32)\n
        v1 = v2 == 9;\n
    return v1 & 1;\n
}\n
", "4211773:sub_40443d": null, "4211776:cgc_iscntrl": "int cgc_iscntrl(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 1;\n
    if (v2 != 127)\n
        v1 = v2 < 32;\n
    return v1 & 1;\n
}\n
", "4211821:sub_40446d": null, "4211824:cgc_isgraph": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isgraph(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    if (v3 != 32)\n
    {\n
        v0 = v3;\n
        v2 = cgc_isprint();\n
        return v2 & 1;\n
    }\n
    return v2 & 1;\n
}\n
", "4211901:sub_4044bd": null, "4211904:cgc_isprint": "int cgc_isprint(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    v1 = 0;\n
    if (v2 >= 32)\n
        v1 = v2 != 127;\n
    return v1 & 1;\n
}\n
", "4211949:sub_4044ed": null, "4211952:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[12892 + v0];\n
}\n
", "4211983:sub_40450f": null, "4211984:cgc_isspace": "int cgc_isspace(unsigned int v2)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    if (v2 > 8)\n
    {\n
        v1 = 1;\n
        if (v2 < 14)\n
            return v1 & 1;\n
    }\n
    v1 = v2 == 32;\n
    return v1 & 1;\n
}\n
", "4212039:sub_404547": null, "4212048:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[12764 + v0];\n
}\n
", "4212079:sub_40456f": null, "4212080:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4212094:sub_40457e": null, "4212096:cgc_tolower": "int cgc_tolower(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_isupper(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 | 32;\n
    return v0;\n
}\n
", "4212167:sub_4045c7": null, "4212176:cgc_toupper": "int cgc_toupper(unsigned int v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
\n
    if (!cgc_islower(v1))\n
    {\n
        v0 = v1;\n
        return v0;\n
    }\n
    v0 = v1 & 95;\n
    return v0;\n
}\n
", "4212247:sub_404617": null, "4212256:cgc_free": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_free(unsigned int v3[2])\n
{\n
    unsigned int v0[2];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[2];  // [bp-0xc]\n
    unsigned int v4;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v3)\n
        return v3;\n
    v2[0] = v3 + 3;\n
    v4 = v2;\n
    if (*((v4 + 4)))\n
    {\n
        return v2;\n
    }\n
    else if (v2[0] >= 0x40000)\n
    {\n
        v0[0] = v2;\n
        v4 = cgc_free_huge();\n
        return v4;\n
    }\n
    else\n
    {\n
        v0[0] = v2;\n
        cgc_insert_into_flist();\n
        v0[0] = v2;\n
        v4 = cgc_coalesce();\n
        return v4;\n
    }\n
}\n
", "4212391:sub_4046a7": null, "4212400:cgc_free_huge": "int cgc_free_huge(unsigned int *v1)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = *(v1);\n
    return cgc_deallocate(v1);\n
}\n
", "4212448:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_malloc(unsigned int v7)\n
{\n
    struct struct_1 **v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2[6];  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    struct struct_1 **v4;  // [bp-0x14]\n
    struct_1 *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v7)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    else if (v7 + 24 < 0x40000)\n
    {\n
        if ((v7 & 7))\n
            v7 = v7 - -7 & -8;\n
        if (v7 >= 0x80000000)\n
        {\n
            v6 = 0;\n
            return v6;\n
        }\n
        v7 += 24;\n
        v5 = 0;\n
        v0 = &v5;\n
        v4 = cgc_find_fit(v7);\n
        if (!v5)\n
        {\n
            if (!cgc_allocate_new_blk())\n
            {\n
                v4 = 31;\n
                v5 = *((v1 + 548 + v4 * 4));\n
            }\n
            else\n
            {\n
                v6 = 0;\n
                return v6;\n
            }\n
        }\n
        cgc_remove_from_flist();\n
        v3 = *(v5) - v7;\n
        if (v3 > 48)\n
        {\n
            v2[0] = v5 + v7;\n
            v2[0] = v3;\n
            v2[1] = 1;\n
            v2[2] = 0;\n
            v2[3] = 0;\n
            *(v5) = v7;\n
            v2[5] = v5;\n
            v2[4] = *((v5 + 16));\n
            if (*((v5 + 16)))\n
                *((*((v5 + 16)) + 20)) = v2;\n
            *((v5 + 16)) = v2;\n
            cgc_insert_into_flist();\n
        }\n
        v6 = v5 + 24;\n
        return v6;\n
    }\n
    else\n
    {\n
        v6 = cgc_malloc_huge();\n
        return v6;\n
    }\n
}\n
", "4212881:sub_404891": null, "4212896:cgc_malloc_huge": "int cgc_malloc_huge(unsigned int v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1[6];  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v4 += 24;\n
    v0 = &v2;\n
    if (cgc_allocate(v4, 0))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v1[0] = *(&v2);\n
    v1[0] = v4;\n
    v1[1] = 0;\n
    v1[3] = 0;\n
    v1[2] = 0;\n
    v1[5] = 0;\n
    v1[4] = 0;\n
    v3 = v1 + 1;\n
    return v3;\n
}\n
", "4213058:sub_404942": null, "4213072:cgc_find_fit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_find_fit(unsigned int v5, struct struct_0 **a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v0 = v5;\n
    for (v2 = cgc_get_size_class(); v2 < 32; v2 = v2 + 1)\n
    {\n
        for (*(a0) = *((v1 + 548 + v2 * 4)); *(a0); *(a0) = *(a0)->field_8)\n
        {\n
            if (*(a0)->field_0 >= v5)\n
            {\n
                v3 = v2;\n
                return v3;\n
            }\n
        }\n
    }\n
    *(a0) = 0;\n
    v3 = -1;\n
    return v3;\n
}\n
", "4213250:sub_404a02": null, "4213264:cgc_allocate_new_blk": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_allocate_new_blk()\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3[6];  // [bp-0x14]\n
    char v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0x40000;\n
    v0 = &v4;\n
    if (cgc_allocate(v2, 0))\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
    else if (*(&v4))\n
    {\n
        v3[0] = *(&v4);\n
        v3[0] = v2;\n
        v3[1] = 1;\n
        v3[3] = 0;\n
        v3[2] = 0;\n
        v3[5] = 0;\n
        v3[4] = 0;\n
        cgc_insert_into_flist();\n
        v5 = 0;\n
        return v5;\n
    }\n
    else\n
    {\n
        v5 = 1;\n
        return v5;\n
    }\n
}\n
", "4213458:sub_404ad2": null, "4213472:cgc_get_size_class": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_get_size_class(unsigned int v3)\n
{\n
    char v0;  // [bp-0xd]\n
    unsigned int v1;  // [bp-0xc]\n
    void* v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = 0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (v2 < 32)\n
            v0 = !(v3 <= *((v1 + (v2 << 2) + 56)));\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    return v2;\n
}\n
", "4213583:sub_404b4f": null, "4213584:cgc_insert_into_flist": "extern unsigned int _GLOBAL_OFFSET_TABLE_[4];\n
\n
int cgc_insert_into_flist(unsigned int v3[4])\n
{\n
    unsigned int v0[4];  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax, Other Possible Types: unsigned int\n
    unsigned int v6[4];  // eax\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = cgc_get_size_class(v3[0]);\n
    v3[1] = 1;\n
    if (!v0[34 + 1 + v1])\n
    {\n
        v5 = v0;\n
        v5[34 + 1 + v1] = v3;\n
        return v0;\n
    }\n
    v6 = v0;\n
    v3[2] = v6[34 + 1 + v1];\n
    *((v6[34 + 1 + v1] + 12)) = v3;\n
    v6[34 + 1 + v1] = v3;\n
    v5 = v3;\n
    *((v5 + 12)) = 0;\n
    return v3;\n
}\n
", "4213742:sub_404bee": null, "4213744:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_0 *field_8;\n
    struct struct_1 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_remove_from_flist(struct_2 *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = cgc_get_size_class(v3->field_0);\n
    if (v3->field_c)\n
        v3->field_c->field_8 = v3->field_8;\n
    if (v3->field_8)\n
        v3->field_8->field_c = v3->field_c;\n
    if (*((v0 + (v1 << 2) + 548)) == v3)\n
        *((v0 + v1 * 4 + 548)) = v3->field_8;\n
    v3->field_8 = 0;\n
    v3->field_c = 0;\n
    v3->field_4 = 0;\n
    return v3;\n
}\n
", "4213918:sub_404c9e": null, "4213920:cgc_coalesce": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[12];\n
    struct struct_1 *field_10;\n
    struct struct_1 *field_14;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_coalesce(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v2[2];  // eax\n
    unsigned int v3[2];  // eax\n
    unsigned int v4[2];  // eax\n
    struct_0 *v5;  // eax\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int, unsigned int [2]\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1->field_10);\n
        cgc_remove_from_flist(v1);\n
        v2 = v1->field_14;\n
        v2[0] = v1->field_0 + v2[0];\n
        v3 = v1->field_14;\n
        v3[0] = v1->field_10->field_0 + v3[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        cgc_remove_from_blist();\n
        v6 = cgc_remove_from_blist();\n
        return v6;\n
    }\n
    if (v1->field_14 && v1->field_14->field_4 && v1->field_10 && !v1->field_10->field_4)\n
    {\n
        cgc_remove_from_flist(v1->field_14);\n
        cgc_remove_from_flist(v1);\n
        v4 = v1->field_14;\n
        v4[0] = v1->field_0 + v4[0];\n
        cgc_insert_into_flist(v1->field_14);\n
        v6 = cgc_remove_from_blist();\n
        goto LABEL_404e8c;\n
    }\n
    v6 = v1;\n
    if (v6->field_14)\n
    {\n
        v6 = v1->field_14;\n
        if (!v6[1])\n
        {\n
            v6 = v1;\n
            if (v6->field_10)\n
            {\n
                v6 = v1->field_10;\n
                if (v6[1])\n
                {\n
                    cgc_remove_from_flist(v1->field_10);\n
                    cgc_remove_from_flist(v1);\n
                    v5 = v1;\n
                    v5->field_0 = v1->field_10->field_0 + v5->field_0;\n
                    cgc_insert_into_flist(v1);\n
                    v6 = cgc_remove_from_blist();\n
                }\n
            }\n
        }\n
    }\n
LABEL_404e8c:\n
    return v6;\n
}\n
", "4214428:sub_404e9c": null, "4214432:cgc_remove_from_blist": "typedef struct struct_1 {\n
    char padding_0[16];\n
    struct struct_1 *field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_0;\n
\n
int cgc_remove_from_blist(struct_1 *v0)\n
{\n
    struct_1 *v1;  // eax, Other Possible Types: unsigned int\n
\n
    if (v0->field_14)\n
        v0->field_14->field_10 = v0->field_10;\n
    v1 = v0;\n
    if (v1->field_10)\n
    {\n
        v1 = v0->field_10;\n
        *((v1 + 20)) = v0->field_14;\n
    }\n
    return v1;\n
}\n
", "4214496:cgc_memchr": "int cgc_memchr(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 >= a1)\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
        else if (v0[v2] != a0)\n
        {\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = v2 + v0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4214592:cgc_memcmp": "int cgc_memcmp(char *v2, char *a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v0 = 0;\n
    while (true)\n
    {\n
        if (v0 < a1)\n
        {\n
            if (*(v2) != *(a0))\n
            {\n
                v1 = *(v2) - *(a0);\n
                return v1;\n
            }\n
            v2 += 1;\n
            a0 += 1;\n
            v0 += 1;\n
        }\n
        else\n
        {\n
            v1 = 0;\n
            return v1;\n
        }\n
    }\n
}\n
", "4214720:cgc_memcpy": "int cgc_memcpy(char *v3, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8]\n
\n
    v2 = v3;\n
    v1 = a0;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        v2[v0] = *((v1 + v0));\n
    }\n
    return v3;\n
}\n
", "4214806:sub_405016": null, "4214816:cgc_memmove": "int cgc_memmove(char *v3, char *a0, char *a1)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char *v1;  // [bp-0xc]\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v0 = v3;\n
    if (v0 >= v1)\n
    {\n
        if (v0 <= v1)\n
            return v3;\n
        for (v2 = a1; v2 > 0; v2 -= 1)\n
        {\n
            *((v0 + v2 - 1)) = v1[1 + v2];\n
        }\n
    }\n
    else\n
    {\n
        for (v2 = 0; v2 < a1; v2 += 1)\n
        {\n
            *((v0 + v2)) = v1[v2];\n
        }\n
        return v3;\n
    }\n
}\n
", "4214995:sub_4050d3": null, "4215008:cgc_memset": "int cgc_memset(char *v3, unsigned int a0, unsigned int a1)\n
{\n
    void* v0;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v4;  // eax\n
\n
    if (!v3)\n
    {\n
        v2 = 0;\n
        return v2;\n
    }\n
    else if (a1)\n
    {\n
        v1 = v3;\n
        for (v0 = 0; v0 < a1; v0 += 1)\n
        {\n
            v4 = v1;\n
            v1 = v4 + 1;\n
            *(v4) = a0;\n
        }\n
        v2 = v3;\n
        return v2;\n
    }\n
    else\n
    {\n
        v2 = v3;\n
        return v2;\n
    }\n
}\n
", "4215137:sub_405161": null, "4215152:cgc_output_number_printf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_printf(unsigned int v8, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (a0 >= a1)\n
    {\n
        v7 = cgc_output_number_printf(v8, (0 CONCAT a0) /m a1, a1, a2 - 1, a3);\n
        a0 = (0 CONCAT a0) /m a1 >> 32;\n
    }\n
    if (!v7 && a2 > 0)\n
    {\n
        while (true)\n
        {\n
            a2 -= 1;\n
            if (!a2)\n
                break;\n
            if (!(a3 & 1))\n
            {\n
                v5 = 32;\n
                cgc_transmit(v8, &v5, 1);\n
            }\n
            else\n
            {\n
                v6 = 48;\n
                cgc_transmit(v8, &v6, 1);\n
            }\n
        }\n
    }\n
    if ((a3 & 2))\n
    {\n
        if (a0 < 10)\n
            v1 = a0 + 48;\n
        else\n
            v1 = a0 + 55;\n
        v4 = v1;\n
        cgc_transmit(v8, &v4, 1);\n
        return v7 + 1;\n
    }\n
    else\n
    {\n
        if (a0 < 10)\n
            v0 = a0 + 48;\n
        else\n
            v0 = a0 + 87;\n
        v3 = v0;\n
        cgc_transmit(v8, &v3, 1);\n
        return v7 + 1;\n
    }\n
}\n
", "4215651:sub_405363": null, "4215664:cgc_fdprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_fdprintf(unsigned int v20, char *a0)\n
{\n
    char *v0;  // [bp-0x74]\n
    unsigned int v1;  // [bp-0x70]\n
    unsigned int v2;  // [bp-0x6c]\n
    unsigned int v3;  // [bp-0x68]\n
    char v4;  // [bp-0x61]\n
    char v5;  // [bp-0x59]\n
    char v6;  // [bp-0x51]\n
    char v7;  // [bp-0x49]\n
    char v8;  // [bp-0x41]\n
    char v9;  // [bp-0x39]\n
    char v10;  // [bp-0x31]\n
    struct struct_0 **v11;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v12;  // [bp-0x2c]\n
    void* v13;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v15;  // [bp-0x20]\n
    unsigned int v16;  // [bp-0x1c]\n
    char *v17;  // [bp-0x18], Other Possible Types: unsigned int\n
    char v18;  // [bp-0x11]\n
    char *v19;  // [bp-0x10]\n
    char v21;  // [bp+0xc]\n
    char *v22;  // eax\n
    char *v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    struct struct_0 **v25;  // eax\n
    struct struct_0 **v26;  // eax\n
    struct struct_0 **v27;  // eax\n
    struct struct_0 **v28;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v15 = 0;\n
    v14 = 0;\n
    v13 = 0;\n
    v11 = &v21;\n
    while (*(a0))\n
    {\n
        v22 = a0;\n
        a0 = v22 + 1;\n
        v10 = *(v22);\n
        if (v10 != 37)\n
        {\n
            v4 = v10;\n
            cgc_transmit(v20, &v4, 1);\n
LABEL_405746:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v23 = a0;\n
                    a0 = v23 + 1;\n
                    v10 = *(v23);\n
                    v2 = v10;\n
                    if (v2 != 48)\n
                        break;\n
                    v14 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v13 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v10;\n
            if (v1 == 37)\n
            {\n
                v9 = 37;\n
                cgc_transmit(v20, &v9, 1);\n
                goto LABEL_4056ff;\n
            }\n
            if (v1 == 88)\n
            {\n
                v14 |= 2;\n
            }\n
            else if (v1 == 99)\n
            {\n
                v24 = v11;\n
                v11 = v24 + 1;\n
                v18 = *(v24);\n
                v6 = v18;\n
                cgc_transmit(v20, &v6, 1);\n
                goto LABEL_4056ff;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v25 = v11;\n
                    v11 = v25 + 1;\n
                    v17 = &*(v25)->field_0;\n
                    if (v17 < 0)\n
                    {\n
                        v7 = 45;\n
                        cgc_transmit(v20, &v7, 1);\n
                        v17 = -(v17);\n
                    }\n
                    cgc_output_number_printf(v20, v17, 10, v13, v14);\n
                    goto LABEL_4056ff;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v26 = v11;\n
                    v11 = v26 + 1;\n
                    v19 = &*(v26)->field_0;\n
                    v16 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v16;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v8 = v19[v16];\n
                        cgc_transmit(v20, &v8, 1);\n
                        v16 += 1;\n
                    }\n
                    goto LABEL_4056ff;\n
                }\n
                if (v1 == 117)\n
                {\n
                    v27 = v11;\n
                    v11 = v27 + 1;\n
                    v12 = &*(v27)->field_0;\n
                    cgc_output_number_printf(v20, v12, 10, v13, v14);\n
                    goto LABEL_4056ff;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v10;\n
                    cgc_transmit(v20, &v5, 1);\n
LABEL_4056ff:\n
                    v13 = 0;\n
                    v14 = 0;\n
                    goto LABEL_405746;\n
                }\n
            }\n
            v28 = v11;\n
            v11 = v28 + 1;\n
            v12 = &*(v28)->field_0;\n
            cgc_output_number_printf(v20, v12, 16, v13, v14);\n
            goto LABEL_4056ff;\n
        }\n
    }\n
    return v15;\n
}\n
", "4216664:sub_405758": null, "4216672:cgc_output_number_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_output_number_sprintf(unsigned int *v8, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    unsigned int v0;  // [bp-0x40]\n
    unsigned int v1;  // [bp-0x3c]\n
    unsigned int v2;  // [bp-0x38]\n
    char v3;  // [bp-0x31]\n
    char v4;  // [bp-0x29]\n
    char v5;  // [bp-0x21]\n
    char v6;  // [bp-0x19]\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    struct struct_0 **v9;  // eax\n
    unsigned int *v10;  // eax\n
    struct struct_0 **v11;  // eax\n
    unsigned int *v12;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = 0;\n
    if (a1 >= a2)\n
    {\n
        v7 = cgc_output_number_sprintf(v8, a0, (0 CONCAT a1) /m a2, a2, a3 - 1, a4);\n
        a1 = (0 CONCAT a1) /m a2 >> 32;\n
    }\n
    if (!v7 && a3 > 0)\n
    {\n
        while (true)\n
        {\n
            a3 -= 1;\n
            if (!a3)\n
                break;\n
            if (!(a4 & 1))\n
            {\n
                v5 = 32;\n
                *(a0)->field_0 = v5;\n
            }\n
            else\n
            {\n
                v6 = 48;\n
                *(a0)->field_0 = v6;\n
            }\n
            v9 = a0;\n
            *(v9) = *(v9) + 1;\n
            v10 = v8;\n
            *(v10) = *(v10) + 1;\n
        }\n
    }\n
    if ((a4 & 2))\n
    {\n
        if (a1 < 10)\n
            v1 = a1 + 48;\n
        else\n
            v1 = a1 + 55;\n
        v4 = v1;\n
        *(a0)->field_0 = v4;\n
    }\n
    else\n
    {\n
        if (a1 < 10)\n
            v0 = a1 + 48;\n
        else\n
            v0 = a1 + 87;\n
        v3 = v0;\n
        *(a0)->field_0 = v3;\n
    }\n
    v11 = a0;\n
    *(v11) = *(v11) + 1;\n
    v12 = v8;\n
    *(v12) = *(v12) + 1;\n
    return v7 + 1;\n
}\n
", "4217157:sub_405945": null, "4217168:cgc_sprintf": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_sprintf(char *v18, char *a0)\n
{\n
    char *v0;  // [bp-0x6c]\n
    unsigned int v1;  // [bp-0x68]\n
    unsigned int v2;  // [bp-0x64]\n
    unsigned int v3;  // [bp-0x60]\n
    char v4;  // [bp-0x59]\n
    char v5;  // [bp-0x51]\n
    char v6;  // [bp-0x49]\n
    char v7;  // [bp-0x41]\n
    char v8;  // [bp-0x39]\n
    char v9;  // [bp-0x31]\n
    struct struct_0 **v10;  // [bp-0x30], Other Possible Types: unsigned int\n
    char *v11;  // [bp-0x2c]\n
    void* v12;  // [bp-0x28], Other Possible Types: unsigned int\n
    void* v13;  // [bp-0x24], Other Possible Types: unsigned int\n
    void* v14;  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v15;  // [bp-0x1c]\n
    char *v16;  // [bp-0x18], Other Possible Types: unsigned int\n
    char *v17;  // [bp-0x14]\n
    char v19;  // [bp+0xc]\n
    char *v20;  // eax\n
    char *v21;  // eax\n
    struct struct_0 **v22;  // eax\n
    struct struct_0 **v23;  // eax\n
    struct struct_0 **v24;  // eax\n
    char *v25;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v14 = 0;\n
    v13 = 0;\n
    v12 = 0;\n
    v10 = &v19;\n
    while (*(a0))\n
    {\n
        v20 = a0;\n
        a0 = v20 + 1;\n
        v9 = *(v20);\n
        if (v9 != 37)\n
        {\n
            v4 = v9;\n
            *(v18) = v4;\n
            v18 += 1;\n
            v14 += 1;\n
LABEL_405c5f:\n
        }\n
        else\n
        {\n
            while (true)\n
            {\n
                while (true)\n
                {\n
                    v21 = a0;\n
                    a0 = v21 + 1;\n
                    v9 = *(v21);\n
                    v2 = v9;\n
                    if (v2 != 48)\n
                        break;\n
                    v13 |= 1;\n
                }\n
                if (v2 - 49 >= 9)\n
                    break;\n
                v12 = cgc_strtol(a0 - 1, &a0);\n
            }\n
            v1 = v9;\n
            if (v1 == 37)\n
            {\n
                v8 = 37;\n
                *(v18) = v8;\n
                v18 += 1;\n
                v14 += 1;\n
                goto LABEL_405c22;\n
            }\n
            if (v1 == 88)\n
            {\n
                v13 |= 2;\n
            }\n
            else\n
            {\n
                if (v1 == 100)\n
                {\n
                    v22 = v10;\n
                    v10 = v22 + 1;\n
                    v16 = &*(v22)->field_0;\n
                    if (v16 < 0)\n
                    {\n
                        v6 = 45;\n
                        *(v18) = v6;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v16 = -(v16);\n
                    }\n
                    cgc_output_number_sprintf(&v14, &v18, v16, 10, v12, v13);\n
                    goto LABEL_405c22;\n
                }\n
                if (v1 == 115)\n
                {\n
                    v23 = v10;\n
                    v10 = v23 + 1;\n
                    v17 = &*(v23)->field_0;\n
                    v15 = 0;\n
                    while (true)\n
                    {\n
                        v0 = v15;\n
                        if (v0 >= cgc_strlen())\n
                            break;\n
                        v7 = v17[v15];\n
                        *(v18) = v7;\n
                        v18 += 1;\n
                        v14 += 1;\n
                        v15 += 1;\n
                    }\n
                    goto LABEL_405c22;\n
                }\n
                if (v1 != 120)\n
                {\n
                    v5 = v9;\n
                    *(v18) = v5;\n
                    v18 += 1;\n
                    v14 += 1;\n
LABEL_405c22:\n
                    v12 = 0;\n
                    v13 = 0;\n
                    goto LABEL_405c5f;\n
                }\n
            }\n
            v24 = v10;\n
            v10 = v24 + 1;\n
            v11 = &*(v24)->field_0;\n
            cgc_output_number_sprintf(&v14, &v18, v11, 16, v12, v13);\n
            goto LABEL_405c22;\n
        }\n
    }\n
    v25 = v18;\n
    v18 = v25 + 1;\n
    *(v25) = 0;\n
    return v14;\n
}\n
", "4217981:sub_405c7d": null, "4217984:cgc_realloc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_realloc(char *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int *v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!v4)\n
    {\n
        v3 = cgc_malloc(a0);\n
        return v3;\n
    }\n
    else if (a0)\n
    {\n
        v2 = cgc_malloc(a0);\n
        if (!v2)\n
        {\n
            v3 = 0;\n
            return v3;\n
        }\n
        v1 = &v4[24];\n
        if (a0 >= *(v1) - 24)\n
            cgc_memcpy(v2, v4, *(v1) - 24);\n
        else\n
            cgc_memcpy(v2, v4, a0);\n
        cgc_free(v4);\n
        v3 = v2;\n
        return v3;\n
    }\n
    else\n
    {\n
        cgc_free(v4);\n
        v3 = 0;\n
        return v3;\n
    }\n
}\n
", "4218242:sub_405d82": null, "4218256:cgc_strcasecmp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcasecmp(char *v6, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    char v2;  // [bp-0x15]\n
    unsigned int v3;  // [bp-0x14]\n
    char *v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v6;\n
    v4 = a0;\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (*(v5))\n
            v2 = *(v4);\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v5) != *(v4))\n
        {\n
            v1 = cgc_tolower(*(v5));\n
            if (v1 != cgc_tolower(*(v4)))\n
                break;\n
        }\n
        v5 += 1;\n
        v4 += 1;\n
    }\n
    v0 = cgc_tolower(*(v5));\n
    return v0 - cgc_tolower(*(v4));\n
}\n
", "4218495:sub_405e7f": null, "4218496:cgc_strcat": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strcat(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v0 = a0;\n
    cgc_strcpy(v2 + cgc_strlen());\n
    v6 = v3;\n
    return v4;\n
}\n
", "4218573:sub_405ecd": null, "4218576:cgc_strchr": "int cgc_strchr(char *v2, unsigned int a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v1;  // [bp-0x8], Other Possible Types: unsigned int\n
\n
    for (v0 = v2; *(v0); v0 += 1)\n
    {\n
        if (*(v0) == a0)\n
        {\n
            v1 = v0;\n
            return v1;\n
        }\n
    }\n
    if (a0)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    v1 = v0;\n
    return v1;\n
}\n
", "4218682:sub_405f3a": null, "4218688:cgc_strcmp": "int cgc_strcmp(char *v2, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp-0x5]\n
    unsigned int v3;  // eax\n
\n
    v0 = v3;\n
    while (true)\n
    {\n
        v1 = 0;\n
        if (*(v2))\n
            v1 = *(a0);\n
        if (!(v1 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    return *(v2) - *(a0);\n
}\n
", "4218816:cgc_strcpy": "int cgc_strcpy(unsigned int v1, char *a0)\n
{\n
    char *v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
    char *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    for (v0 = 0; *(a0); *((v1 + v4)) = *(v3))\n
    {\n
        v3 = a0;\n
        a0 = v3 + 1;\n
        v4 = v0;\n
        v0 = v4 + 1;\n
    }\n
    *((v1 + v0)) = 0;\n
    return v1;\n
}\n
", "4218900:sub_406014": null, "4218912:cgc_strdup": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strdup(char *v5)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    char *v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    void* v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = cgc_strlen() + 1;\n
    v1 = cgc_malloc(v2);\n
    if (!v1)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    cgc_memcpy(v1, v5, v2);\n
    v3 = v1;\n
    return v3;\n
}\n
", "4219036:sub_40609c": null, "4219040:cgc_strlen": "int cgc_strlen(char *v1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = v1; *(v0); v0 += 1);\n
    return v0 - v1;\n
}\n
", "4219092:sub_4060d4": null, "4219104:cgc_strncasecmp": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strncasecmp(char *v7, char *a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    char v2;  // [bp-0x19]\n
    unsigned int v3;  // [bp-0x18]\n
    char *v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    char *v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v7;\n
    v4 = a0;\n
    v8 = a1;\n
    a1 = v8 - 1;\n
    if (!v8)\n
    {\n
        v6 = 0;\n
        return v6;\n
    }\n
    while (true)\n
    {\n
        v2 = 0;\n
        if (a1)\n
        {\n
            v2 = 0;\n
            if (*(v5))\n
                v2 = *(v4);\n
        }\n
        if (!(v2 & 1))\n
            break;\n
        if (*(v5) != *(v4))\n
        {\n
            v1 = cgc_tolower(*(v5));\n
            if (v1 != cgc_tolower(*(v4)))\n
                break;\n
        }\n
        v5 += 1;\n
        v4 += 1;\n
    }\n
    v0 = cgc_tolower(*(v5));\n
    v6 = v0 - cgc_tolower(*(v4));\n
    return v6;\n
}\n
", "4219404:sub_40620c": null, "4219408:cgc_strncmp": "int cgc_strncmp(char *v2, char *a0, unsigned int a1)\n
{\n
    char v0;  // [bp-0x9]\n
    void* v1;  // [bp-0x8], Other Possible Types: unsigned int\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v3 = a1;\n
    a1 = v3 - 1;\n
    if (!v3)\n
    {\n
        v1 = 0;\n
        return v1;\n
    }\n
    while (true)\n
    {\n
        v4 = a1;\n
        a1 = v4 - 1;\n
        v0 = 0;\n
        if (v4)\n
        {\n
            v0 = 0;\n
            if (*(v2))\n
                v0 = *(a0);\n
        }\n
        if (!(v0 & 1))\n
            break;\n
        if (*(v2) != *(a0))\n
            break;\n
        v2 += 1;\n
        a0 += 1;\n
    }\n
    v1 = *(v2) - *(a0);\n
    return v1;\n
}\n
", "4219609:sub_4062d9": null, "4219616:cgc_strncpy": "int cgc_strncpy(unsigned int v1, unsigned int a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x8], Other Possible Types: unsigned int\n
    char *v2;  // eax\n
\n
    v0 = v2;\n
    for (v0 = 0; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = *((a0 + v0));\n
        if (!*((v1 + v0)))\n
            break;\n
    }\n
    for (; v0 < a1; v0 += 1)\n
    {\n
        *((v1 + v0)) = 0;\n
    }\n
    return v1;\n
}\n
", "4219758:sub_40636e": null, "4219760:cgc_strsep": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_strsep(struct struct_0 **v4, char *a0)\n
{\n
    char v0;  // [bp-0x15]\n
    unsigned int v1;  // [bp-0x14]\n
    char *v2;  // [bp-0x10], Other Possible Types: unsigned int\n
    char *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    if (!*(v4))\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v2 = &*(v4)->field_0;\n
    while (true)\n
    {\n
        v0 = 0;\n
        if (*(v2))\n
            v0 = cgc_strchr(a0, *(v2)) ^ 255;\n
        if (!(v0 & 1))\n
            break;\n
        v2 += 1;\n
    }\n
    a0 = &*(v4)->field_0;\n
    if (!*(v2))\n
    {\n
        *(v4) = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        *(v4) = v2 + 1;\n
    }\n
    v3 = a0;\n
    return v3;\n
}\n
", "4219976:sub_406448": null, "4219984:cgc_strtol": "int cgc_strtol(char v12[2], unsigned int *a0, unsigned int a1)\n
{\n
    char v0[2];  // [bp-0x2c], Other Possible Types: unsigned int\n
    char v1;  // [bp-0x28]\n
    char v2;  // [bp-0x27]\n
    char v3;  // [bp-0x26]\n
    char v4;  // [bp-0x25]\n
    unsigned int v5;  // [bp-0x24]\n
    char v6[2];  // [bp-0x20], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x1c]\n
    unsigned int v8;  // [bp-0x18]\n
    void* v9;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v11;  // [bp-0xc]\n
\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 0;\n
    *(&v6) = v12;\n
    if (a1 == 1)\n
    {\n
LABEL_406498:\n
    }\n
    else\n
    {\n
        if (!(a1 <= 36))\n
            goto LABEL_406498;\n
        if (a1 < 0)\n
            goto LABEL_406498;\n
        while (true)\n
        {\n
            if (v6[0] != 32 && v6[0] != 9 && v6[0] != 12 && v6[0] != 10 && v6[0] != 11)\n
                break;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 45)\n
        {\n
            v11 = 1;\n
            v6 += 1;\n
        }\n
        if (*(v6) == 43)\n
            v6 += 1;\n
        v5 = a1;\n
        if (!v5)\n
        {\n
            if (*(v6) != 48)\n
            {\n
                a1 = 10;\n
            }\n
            else if (*((v6 + 1)) == 120)\n
            {\n
LABEL_40658f:\n
                v6 += 2;\n
                a1 = 16;\n
            }\n
            else\n
            {\n
                if (*((v6 + 1)) == 88)\n
                    goto LABEL_40658f;\n
                v6 += 1;\n
                a1 = 8;\n
            }\n
        }\n
        else\n
        {\n
            if (v5 == 16)\n
            {\n
                if (*(v6) == 48)\n
                {\n
                    if (*((v6 + 1)) != 120 && !(*((v6 + 1)) == 88))\n
                        goto LABEL_406604;\n
                    v6 += 2;\n
                    a1 = 16;\n
                }\n
LABEL_406604:\n
            }\n
        }\n
        while (true)\n
        {\n
            v4 = 0;\n
            if (*(v6) >= 48)\n
                v4 = *(v6) <= 57;\n
            v8 = v4 & 1;\n
            v3 = 1;\n
            if (!(v4 & 1))\n
                break;\n
            if (!(v3 & 1))\n
                goto LABEL_406762;\n
            if (v8)\n
            {\n
                v8 = *(v6) - 48;\n
                goto LABEL_406722;\n
            }\n
            if (!v7)\n
            {\n
LABEL_406722:\n
                if (v8 >= a1)\n
                    goto LABEL_406762;\n
                v10 *= a1;\n
                v10 = v8 + v10;\n
                v9 += 1;\n
                v6 += 1;\n
            }\n
            else\n
            {\n
                if (*(v6) >= 65 && *(v6) <= 90)\n
                {\n
                    v8 = *(v6) - 65;\n
                    goto LABEL_406719;\n
                }\n
                v8 = *(v6) - 97;\n
LABEL_406719:\n
                v8 += 10;\n
                goto LABEL_406722;\n
            }\n
        }\n
        if (*(v6) >= 65)\n
        {\n
            v2 = 1;\n
            if (*(v6) <= 90)\n
                goto LABEL_406698;\n
        }\n
        v1 = 0;\n
        if (*(v6) >= 97)\n
            v1 = *(v6) <= 122;\n
        v2 = v1;\n
LABEL_406698:\n
        v7 = v2 & 1;\n
        v3 = v2;\n
LABEL_406762:\n
        if (v11)\n
            v10 = -(v10);\n
    }\n
    if (!a0)\n
        return v10;\n
    if (v9 > 0)\n
        *(&v0) = v6;\n
    else\n
        v0 = v12;\n
    *(a0) = v0;\n
    return v10;\n
}\n
", "4220846:sub_4067ae": null, "4220848:cgc_strtoul": "int cgc_strtoul(char v0[2], unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4220907:sub_4067eb": null, "4220912:_ZN6CheeseC2EPKcii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cheese::__base_ctor__(unsigned int v4[4], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2[4];  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6[4];  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v4;\n
    v0[0] = v2;\n
    Topping::__base_ctor__();\n
    v6 = v2;\n
    v6[0] = v1 + -596;\n
    v6[1] = a0;\n
    v6[2] = a1;\n
    v6[3] = a2;\n
    v7 = v3;\n
    return v2;\n
}\n
", "4221001:sub_406849": null, "4221008:_ZN6CheeseD1Ev": "int Cheese::__dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return Topping::__dtor__(v1, *(&v0));\n
}\n
", "4221045:sub_406875": null, "4221056:_ZN6CheeseD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cheese::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Cheese::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4221115:sub_4068bb": null, "4221120:_ZN6Cheese13select_cheeseEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Cheese::select_cheese(unsigned int v5)\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = _GLOBAL__N_1::find_cheese_entry();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0[0] = operator new(16);\n
    Cheese::__base_ctor__(v0, v2[0], v2[1], v2[2]);\n
    v3 = v0;\n
    return v3;\n
}\n
", "4221258:sub_40694a": null, "4221264:_ZN12_GLOBAL__N_117find_cheese_entryEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::find_cheese_entry(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 6)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcasecmp(*((v0 + 184 + v1 * 12)), v3))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v0 + 184 + v1 * 12;\n
            return v2;\n
        }\n
    }\n
}\n
", "4221405:sub_4069dd": null, "4221408:_ZN6Cheese12list_optionsEv": "int Cheese::list_options()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return ::0x406a00::_GLOBAL__N_1::print_list(v2, *(&v0));\n
}\n
", "4221436:sub_4069fc": null, "4221440:_ZN12_GLOBAL__N_110print_listEv": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::print_list()\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v6;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < 6; v3 = v5)\n
    {\n
        v6 = v2;\n
        v0 = v3 + 1;\n
        v1 = v6[46 + 3 * v3];\n
        cgc_fdprintf(1, &v6[3145] + 2);\n
        v5 = v3 + 1;\n
    }\n
    return v5;\n
}\n
", "4221552:_ZN7ToppingC2Ev": "extern char g_410108;\n
\n
int Topping::__base_ctor__(unsigned int *v0)\n
{\n
    *(v0) = &g_410108;\n
    return v0;\n
}\n
", "4221586:sub_406a92": null, "4221600:_ZN6Cheese13is_vegetarianEv": "int Cheese::is_vegetarian(unsigned int v0)\n
{\n
    return 1;\n
}\n
", "4221615:sub_406aaf": null, "4221616:_ZN6Cheese13contains_porkEv": "int Cheese::contains_pork(unsigned int v0)\n
{\n
    return 0;\n
}\n
", "4221631:sub_406abf": null, "4221632:_ZN9IoManagerC1Em": "extern char g_410028;\n
\n
int IoManager::__ctor__(unsigned int v1[5], unsigned int a0)\n
{\n
    unsigned int v0[5];  // [bp-0xc]\n
    unsigned int v2[5];  // eax\n
\n
    v0[0] = v1;\n
    v0[0] = &g_410028;\n
    v0[3] = a0;\n
    v0[4] = 0;\n
    v2 = v0;\n
    v2[2] = operator new[](v0[3]);\n
    v2[1] = 0;\n
    return v0;\n
}\n
", "4221719:sub_406b17": null, "4221728:_ZN9IoManagerD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_410028;\n
\n
int IoManager::__base_dtor__(unsigned int v3[5])\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1[5];  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v4[5];  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    v1[0] = &g_410028;\n
    v2 = v1[2];\n
    if (v2)\n
        operator delete(v2);\n
    v4 = v1;\n
    v4[3] = 0;\n
    v4[4] = 0;\n
    return v1;\n
}\n
", "4221822:sub_406b7e": null, "4221824:_ZN9IoManagerD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IoManager::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[5];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    IoManager::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4221883:sub_406bbb": null, "4221888:_ZN9IoManager8readlineEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IoManager::readline(unsigned int v8[5], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4[5];  // [bp-0x18]\n
    char *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x10]\n
    char v7;  // [bp-0x9]\n
    unsigned int v9[5];  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = v8;\n
    v5 = 0;\n
    if (a0)\n
        v2 = a0;\n
    else\n
        v2 = v4[3];\n
    a0 = v2;\n
    v4[4] = 0;\n
    while (true)\n
    {\n
        v9 = v4;\n
        v0 = &v6;\n
        v1 = 0;\n
        if (!cgc_receive(v9[1], v9[2] + v5, 1))\n
        {\n
            v1 = 0;\n
            if (*(&v6) == 1)\n
                v1 = v5 < a0;\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        if (*((v4[2] + v5)) != 10)\n
        {\n
            v5 += 1;\n
        }\n
        else\n
        {\n
            *((v4[2] + v5)) = 0;\n
            break;\n
        }\n
    }\n
    if (v5 && v5 != a0)\n
    {\n
        v4[4] = v5;\n
        v7 = 1;\n
        return v7 & 1;\n
    }\n
    v7 = 0;\n
    return v7 & 1;\n
}\n
", "4222188:sub_406cec": null, "4222192:_ZN9IoManager7readnumEm": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
    char field_8[2];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int IoManager::readnum(unsigned int v8[5], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x21]\n
    unsigned int v2;  // [bp-0x20]\n
    unsigned int v3;  // [bp-0x1c]\n
    unsigned int v4[5];  // [bp-0x18]\n
    char *v5;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v6;  // [bp-0x10]\n
    void* v7;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v9[5];  // eax\n
    struct_0 *v10;  // eax\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4[0] = v8;\n
    v5 = 0;\n
    if (a0)\n
        v2 = a0;\n
    else\n
        v2 = v4[3];\n
    a0 = v2;\n
    v4[4] = 0;\n
    while (true)\n
    {\n
        v9 = v4;\n
        v0 = &v6;\n
        v1 = 0;\n
        if (!cgc_receive(v9[1], v9[2] + v5, 1))\n
        {\n
            v1 = 0;\n
            if (*(&v6) == 1)\n
                v1 = v5 < a0;\n
        }\n
        if (!(v1 & 1))\n
            break;\n
        if (*((v4[2] + v5)) < 48)\n
        {\n
LABEL_406dd8:\n
            *((v4[2] + v5)) = 0;\n
            break;\n
        }\n
        else\n
        {\n
            if (!(*((v4[2] + v5)) <= 57))\n
                goto LABEL_406dd8;\n
            v5 += 1;\n
        }\n
    }\n
    if (v5 && v5 != a0)\n
    {\n
        v10 = v4;\n
        v10->field_10 = v5;\n
        v7 = cgc_strtol(v10->field_8, NULL, 10);\n
        return v7;\n
    }\n
    v7 = 0;\n
    return v7;\n
}\n
", "4222543:sub_406e4f": null, "4222544:_Z12print_bannerv": "int print_banner()\n
{\n
    return cgc_fdprintf(1, \"Welcome to the CGC Pizzeria order management system.\\n
\");\n
}\n
", "4222591:sub_406e7f": null, "4222592:main": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409020;\n
\n
int main(unsigned int v13, char *a0)\n
{\n
    unsigned int v8;  // [bp-0x309044]\n
    unsigned int v12;  // [bp+0x0]\n
    char v18;  // cc_dep1\n
    unsigned int v21;  // ebx\n
\n
    v12 = ebp<4> - &g_409020;\n
    v18 = OrderIoManager::delete_order() & 1;\n
    if (v18)\n
    {\n
        v21 = v8;\n
        v12 = 1;\n
        v13 = v21 - 12219;\n
        cgc_fdprintf(v13, a0);\n
    }\n
}\n
", "4223903:sub_40739f": null, "4223904:_ZN9IoManager14get_last_inputEv": "int IoManager::get_last_input(unsigned int v2[5])\n
{\n
    void* v0;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v1[5];  // [bp-0x8]\n
\n
    v1[0] = v2;\n
    if (!v1[4])\n
    {\n
        v0 = 0;\n
        return v0;\n
    }\n
    v0 = v1[2];\n
    return v0;\n
}\n
", "4223961:sub_4073d9": null, "4223968:_ZN4MeatC1EPKciib": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    unsigned int field_c;\n
    char field_10;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Meat::__ctor__(struct_0 *v4, unsigned int a0, unsigned int a1, unsigned int a2, char a3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a3 & 1;\n
    v1 = v4;\n
    Topping::__base_ctor__(v1);\n
    v6 = v1;\n
    v6->field_0 = v0 + -556;\n
    v6->field_4 = a0;\n
    v6->field_8 = a1;\n
    v6->field_c = a2;\n
    v6->field_10 = v2 & 1;\n
    v7 = v3;\n
    return v1;\n
}\n
", "4224074:sub_40744a": null, "4224080:_ZN4MeatD2Ev": "int Meat::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return Topping::__dtor__(v1, *(&v0));\n
}\n
", "4224117:sub_407475": null, "4224128:_ZN4MeatD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Meat::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Meat::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4224187:sub_4074bb": null, "4224192:_ZN4Meat8add_meatEPKc": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    unsigned int field_8;\n
    char field_c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Meat::add_meat(unsigned int v5)\n
{\n
    void* v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    void* v3;  // [bp-0x14], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = _GLOBAL__N_1::find_meat_entry();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0 = operator new(20);\n
    Meat::__ctor__(v0, v2->field_0, v2->field_4, v2->field_8, v2->field_c & 1);\n
    v3 = v0;\n
    return v3;\n
}\n
", "4224347:sub_40755b": null, "4224352:_ZN12_GLOBAL__N_115find_meat_entryEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::find_meat_entry(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    void* v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 6)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcasecmp(*((v0 + 0x100 + (v1 << 4))), v3))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v0 + 0x100 + v1 * 16;\n
            return v2;\n
        }\n
    }\n
}\n
", "4224497:sub_4075f1": null, "4224512:_ZN4Meat12list_optionsEv": "int Meat::list_options()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return ::0x407620::_GLOBAL__N_1::print_list(v2, *(&v0));\n
}\n
", "4224540:sub_40761c": null, "4224544:_ZN12_GLOBAL__N_110print_listEv": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::print_list()\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v6;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < 6; v3 = v5)\n
    {\n
        v6 = v2;\n
        v0 = v3 + 1;\n
        v1 = v6[64 + 4 * v3];\n
        cgc_fdprintf(1, &v6[3145] + 2);\n
        v5 = v3 + 1;\n
    }\n
    return v5;\n
}\n
", "4224658:sub_407692": null, "4224672:_ZN4Meat13is_vegetarianEv": "int Meat::is_vegetarian(unsigned int v0)\n
{\n
    return 0;\n
}\n
", "4224687:sub_4076af": null, "4224688:_ZN4Meat13contains_porkEv": "typedef struct struct_0 {\n
    char padding_0[16];\n
    char field_10;\n
} struct_0;\n
\n
int Meat::contains_pork(struct_0 *v0)\n
{\n
    return v0->field_10 & 1;\n
}\n
", "4224707:sub_4076c3": null, "4224720:_ZN5OrderC1Ev": "int Order::__ctor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::__base_ctor__(v1 + 32, *(&v0));\n
}\n
", "4224760:sub_4076f8": null, "4224768:_ZN5OrderD2Ev": "int Order::__base_dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::__base_dtor__(v1 + 32, *(&v0));\n
}\n
", "4224808:sub_407728": null, "4224816:_ZN5Order9wait_timeEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Order::wait_time(unsigned int v13)\n
{\n
    char *v0;  // [bp-0x38]\n
    unsigned int v1;  // [bp-0x34]\n
    unsigned int v2;  // [bp-0x30]\n
    unsigned int v3;  // [bp-0x2c]\n
    unsigned int v4;  // [bp-0x28]\n
    unsigned int v5;  // [bp-0x24]\n
    unsigned int v6;  // [bp-0x20]\n
    unsigned int v7;  // [bp-0x1c]\n
    void* v8;  // [bp-0x18], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x14]\n
    void* v10;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v11;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v12;  // [bp-0x8]\n
    unsigned int v14;  // ebx\n
    struct struct_1 **v15;  // ecx\n
    struct struct_1 **v16;  // ecx\n
    unsigned int v17;  // eax\n
    unsigned int v18;  // ebx\n
\n
    v12 = v14;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = v13;\n
    v11 = 0;\n
    v10 = 0;\n
    v9 = 1;\n
    v8 = 0;\n
    v7 = *(v15)->field_14(*(List::operator[](v5 + 32)));\n
    v11 = 0;\n
    while (true)\n
    {\n
        v4 = v11;\n
        if (v4 >= List::length())\n
            break;\n
        v8 = *(v16)->field_14(*(List::operator[](v5 + 32)));\n
        v10 = v8 + v10;\n
        if (v7 < v8)\n
            v7 = v8;\n
        v11 += 1;\n
    }\n
    v17 = List::length();\n
    v9 = (v17 >> 31 CONCAT v17) /m 5 + v9;\n
    v0 = v6 - 12068;\n
    v1 = List::length();\n
    cgc_fdprintf(1, v0);\n
    v3 = v10;\n
    v2 = v9 * v7;\n
    v18 = v12;\n
    return v3 + (0 CONCAT v2) /m List::length(v5 + 32, v0);\n
}\n
", "4225175:sub_407897": null, "4225184:_ZN5Order8get_nameEv": "int Order::get_name(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4225195:sub_4078ab": null, "4225200:_ZN5Order8set_nameEPc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Order::set_name(unsigned int v4, char *a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v4;\n
    if (cgc_strlen(a0) >= 32)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    cgc_strcpy(v1, a0);\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4225302:sub_407916": null, "4225312:_ZN5Order9add_pizzaEP5Pizza": "int Order::add_pizza(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return List::add(v1 + 32) & 1;\n
}\n
", "4225369:sub_407959": null, "4225376:_ZN5Order12remove_pizzaEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Order::remove_pizza(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    struct struct_1 **v3;  // [bp-0x10]\n
    struct struct_1 **v4;  // [bp-0xc]\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
    struct struct_1 **v8;  // eax, Other Possible Types: unsigned int\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v0 = a0;\n
    v4 = *(List::operator[](v2 + 32));\n
    v0 = a0;\n
    List::remove(v2 + 32);\n
    v8 = v4;\n
    v3 = v8;\n
    if (v8)\n
    {\n
        v8 = *(v3)->field_4();\n
        return v8;\n
    }\n
    return v4;\n
}\n
", "4225492:sub_4079d4": null, "4225504:_ZN5Order17remove_all_pizzasEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Order::remove_all_pizzas(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_1 **v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0xc]\n
    unsigned int v6;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    while (true)\n
    {\n
        v0 = &v4;\n
        v6 = List::pop(v3 + 32);\n
        if (!(v6 & 1))\n
            break;\n
        v1 = *(&v4);\n
        if (v1)\n
            *(v1)->field_4();\n
    }\n
    return v6;\n
}\n
", "4225612:sub_407a4c": null, "4225616:_ZN5Order9get_pizzaEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Order::get_pizza(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    void* v4;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v5;  // [bp-0x8]\n
    unsigned int v7;  // ebx\n
\n
    v5 = v7;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v6;\n
    v3 = a0;\n
    if (v3 >= List::length())\n
    {\n
        v4 = 0;\n
        return v4;\n
    }\n
    v0 = a0;\n
    v4 = *(List::operator[](v2 + 32));\n
    return v4;\n
}\n
", "4225730:sub_407ac2": null, "4225744:_ZN5Order14get_num_pizzasEv": "int Order::get_num_pizzas(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::length(v1 + 32, *(&v0));\n
}\n
", "4225784:sub_407af8": null, "4225792:_ZN5Order11print_orderEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Order::print_order(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    void* v4;  // [bp-0x14], Other Possible Types: unsigned int\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
    struct struct_2 **v10;  // ecx\n
    struct struct_3 **v11;  // ecx\n
    struct struct_1 **v12;  // ecx\n
    unsigned int v13;  // eax\n
    unsigned int v14;  // ebx\n
\n
    v7 = v9;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v8;\n
    v5 = 0;\n
    v4 = 0;\n
    cgc_fdprintf(1, \"==================================================\\n
\");\n
    v6 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 >= List::length())\n
            break;\n
        v0 = v6 + 1;\n
        cgc_fdprintf(1, v2 - 11994);\n
        *(v10)->field_8(*(List::operator[](v3 + 32)));\n
        v5 = *(v11)->field_c(*(List::operator[](v3 + 32))) + v5;\n
        v4 = *(v12)->field_10(*(List::operator[](v3 + 32))) + v4;\n
        v6 += 1;\n
    }\n
    cgc_fdprintf(1, v2 - 11981);\n
    v0 = v5;\n
    cgc_fdprintf(1, v2 - 11941);\n
    v0 = v4;\n
    cgc_fdprintf(1, v2 - 11925);\n
    v13 = Order::wait_time(v3);\n
    v0 = (v13 >> 31 CONCAT v13) /m 60;\n
    cgc_fdprintf(1, v2 - 11908);\n
    v14 = v7;\n
    return cgc_fdprintf(1, v2 - 12046);\n
}\n
", "4226245:sub_407cc5": null, "4226256:_ZN4ListIP5PizzaEC2Ev": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::__base_ctor__(struct_0 *v0)\n
{\n
    v0->field_1000 = 0;\n
    return v0;\n
}\n
", "4226277:sub_407ce5": null, "4226288:_ZN4ListIP5PizzaED2Ev": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::__base_dtor__(struct_0 *v0)\n
{\n
    v0->field_1000 = 0;\n
    return v0;\n
}\n
", "4226309:sub_407d05": null, "4226320:_ZN4ListIP5PizzaEixEm": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::operator[](struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= v0->field_1000)\n
    {\n
        v3 = v0;\n
        v1 = &v3->padding_0[4 * v3->field_1000];\n
        return v1;\n
    }\n
    v1 = &v0->padding_0[4 * a0];\n
    return v1;\n
}\n
", "4226397:sub_407d5d": null, "4226400:_ZN4ListIP5PizzaE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::length(struct_0 *v0)\n
{\n
    return v0->field_1000;\n
}\n
", "4226417:sub_407d71": null, "4226432:_ZN4ListIP5PizzaE3addES1_": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[4092];\n
    struct struct_0 *field_1000;\n
} struct_0;\n
\n
int List::add(struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (v0->field_1000 == 0x400)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_1000;\n
    v3->field_1000 = v4 + 1;\n
    (&v3->field_0)[v4] = a0;\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4226520:sub_407dd8": null, "4226528:_ZN4ListIP5PizzaE6removeEm": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::remove(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (a0 >= v1->field_1000)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v1;\n
    cgc_memcpy(&v4->padding_0[4 * a0], &v4->padding_0[4 + 4 * a0], (v4->field_1000 - a0) * 4);\n
    v5 = v1;\n
    v5->field_1000 = v5->field_1000 - 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4226681:sub_407e79": null, "4226688:_ZN4ListIP5PizzaE3popERS1_": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::pop(struct_0 *v2, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (!v0->field_1000)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_1000;\n
    v3->field_1000 = v4 - 1;\n
    *(a0) = *(&v3->padding_0[4 + 4 * v4]);\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4226774:sub_407ed6": null, "4226784:_ZN14OrderIoManagerC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::__base_ctor__(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    IoManager::__ctor__(v1, 0x200);\n
    *(v1) = v0 + -532;\n
    v5 = v2;\n
    return List::__base_ctor__(v1 + 5);\n
}\n
", "4226865:sub_407f31": null, "4226880:_ZN14OrderIoManagerD1Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_410050;\n
\n
int OrderIoManager::__dtor__(unsigned int *v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    *(v1) = &g_410050;\n
    List::__base_dtor__();\n
    v5 = v2;\n
    return IoManager::__base_dtor__(v1);\n
}\n
", "4226953:sub_407f89": null, "4226960:_ZN14OrderIoManagerD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    OrderIoManager::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4227019:sub_407fcb": null, "4227024:_ZN14OrderIoManager11list_ordersEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::list_orders(unsigned int v9)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v9;\n
    v8 = 0;\n
    v8 = 0;\n
    while (true)\n
    {\n
        v5 = v8;\n
        if (v5 >= List::length())\n
            break;\n
        v3 = v8 + 1;\n
        v4 = Order::get_name(List::operator[](v7 + 20));\n
        v0 = v3;\n
        v1 = v4;\n
        v2 = Order::get_num_pizzas(List::operator[](v7 + 20));\n
        cgc_fdprintf(1, v6 - 11871);\n
        v8 += 1;\n
    }\n
    return v5;\n
}\n
", "4227252:sub_4080b4": null, "4227264:_ZN14OrderIoManager11input_orderEm": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::input_order(unsigned int v14, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x2094]\n
    unsigned int v1;  // [bp-0x2090]\n
    unsigned int v2;  // [bp-0x208c]\n
    unsigned int v3[5];  // [bp-0x2088]\n
    char v4;  // [bp-0x2084]\n
    unsigned int v5;  // [bp-0x105c]\n
    char v6;  // [bp-0x1056]\n
    char v7;  // [bp-0x1055]\n
    unsigned int v8;  // [bp-0x1054]\n
    unsigned int v9;  // [bp-0x1050]\n
    char v10;  // [bp-0x104c]\n
    char v11;  // [bp-0x1034]\n
    char v12;  // [bp-0x9]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
\n
    v13 = v15;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = v14;\n
    if ((List::is_full() & 1))\n
    {\n
        cgc_fdprintf(1, v2 - 11841);\n
        v12 = 0;\n
        return v12 & 1;\n
    }\n
    Order::__ctor__(&v11);\n
    PizzaIoManager::__base_ctor__(&v10);\n
    v7 = 0;\n
    v6 = 1;\n
    if (a0 != -1)\n
    {\n
        v6 = 0;\n
        memcpy(&v11, List::operator[](v3 + 1), 4132);\n
        Order::get_name(&v11);\n
        cgc_fdprintf(1, v2 - 11786);\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, v2 - 11823);\n
        while (((IoManager::readline(v3, 32) ^ 255) & 1))\n
        {\n
            cgc_fdprintf(1, v2 - 11803);\n
            cgc_fdprintf(1, v2 - 11823);\n
        }\n
        if ((Order::set_name(&v11, IoManager::get_last_input(v3)) & 1))\n
        {\n
            PizzaIoManager::new_pizza();\n
            v9 = PizzaIoManager::get_pizza();\n
            if (v9)\n
                Order::add_pizza(&v11, v9);\n
        }\n
        else\n
        {\n
            v12 = 0;\n
            goto LABEL_4086f2;\n
        }\n
    }\n
    while (((v7 ^ 255) & 1))\n
    {\n
        cgc_fdprintf(1, v2 - 11764);\n
        cgc_fdprintf(1, v2 - 11742);\n
        if (Order::get_num_pizzas(&v11) > 1)\n
            cgc_fdprintf(1, v2 - 11733);\n
        while (true)\n
        {\n
            cgc_fdprintf(1, v2 - 12256);\n
            v8 = IoManager::readnum(v3, 0);\n
            if (v8 == 1)\n
            {\n
                PizzaIoManager::new_pizza();\n
                v9 = PizzaIoManager::get_pizza();\n
                if (v9)\n
                    Order::add_pizza(&v11, v9);\n
                break;\n
            }\n
            else if (v8 == 2)\n
            {\n
                v7 = 1;\n
                break;\n
            }\n
            else if (v8 != 3)\n
            {\n
                cgc_fdprintf(1, v2 - 12150);\n
            }\n
            else\n
            {\n
                cgc_fdprintf(1, v2 - 10770);\n
                Order::print_order(&v11);\n
                cgc_fdprintf(1, v2 - 12256);\n
                v8 = IoManager::readnum(v3, 0);\n
                if (!v8)\n
                {\n
                    cgc_fdprintf(1, v2 - 11705);\n
                    break;\n
                }\n
                else\n
                {\n
                    v1 = v8;\n
                    if (v1 <= Order::get_num_pizzas(&v11))\n
                    {\n
                        v8 -= 1;\n
                        Order::remove_pizza(&v11, v8);\n
                        cgc_fdprintf(1, v2 - 11695);\n
                    }\n
                    else\n
                    {\n
                        cgc_fdprintf(1, v2 - 12150);\n
                    }\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    if (!(v6 & 1))\n
    {\n
        memcpy(List::operator[](v3 + 1), &v11, 4132);\n
        cgc_fdprintf(1, v2 - 11650);\n
    }\n
    else\n
    {\n
        v0 = v3 + 1;\n
        memcpy(&v4, &v11, 4132);\n
        List::add(v0);\n
        Order::__base_dtor__(&v4);\n
        cgc_fdprintf(1, v2 - 11677);\n
    }\n
    v12 = 1;\n
LABEL_4086f2:\n
    v5 = 1;\n
    PizzaIoManager::__base_dtor__();\n
    Order::__base_dtor__(&v11);\n
    return v12 & 1;\n
}\n
", "4228907:sub_40872b": null, "4228912:_ZN14OrderIoManager12update_orderEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::update_order(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x1048]\n
    unsigned int v1;  // [bp-0x1044]\n
    unsigned int v2[5];  // [bp-0x1040]\n
    unsigned int v3;  // [bp-0x103c]\n
    unsigned int v4;  // [bp-0x1038]\n
    char v5;  // [bp-0x1034]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v8;\n
    Order::__ctor__(&v5);\n
    if ((List::is_empty() & 1))\n
    {\n
        cgc_fdprintf(1, v1 - 11621);\n
        v6 = 0;\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, v1 - 11591);\n
        cgc_fdprintf(1, v1 - 10770);\n
        OrderIoManager::list_orders(v2);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v4 = IoManager::readnum(v2, 0);\n
        if (!v4)\n
        {\n
            cgc_fdprintf(1, v1 - 11705);\n
            v6 = 0;\n
            v3 = 1;\n
        }\n
        else\n
        {\n
            v0 = v4;\n
            if (v0 > List::length())\n
            {\n
                cgc_fdprintf(1, v1 - 12150);\n
                v6 = 0;\n
                v3 = 1;\n
            }\n
            else\n
            {\n
                v4 -= 1;\n
                v6 = OrderIoManager::input_order(v2, v4) & 1;\n
                v3 = 1;\n
            }\n
        }\n
    }\n
    Order::__base_dtor__(&v5);\n
    return v6 & 1;\n
}\n
", "4229443:sub_408943": null, "4229456:_ZN14OrderIoManager12delete_orderEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::delete_order(unsigned int v8)\n
{\n
    unsigned int v0;  // [bp-0x1048]\n
    unsigned int v1;  // [bp-0x1044]\n
    unsigned int v2[5];  // [bp-0x1040]\n
    unsigned int v3;  // [bp-0x103c]\n
    unsigned int v4;  // [bp-0x1038]\n
    char v5;  // [bp-0x1034]\n
    char v6;  // [bp-0x9]\n
    unsigned int v7;  // [bp-0x8]\n
    unsigned int v9;  // ebx\n
\n
    v7 = v9;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v8;\n
    Order::__ctor__(&v5);\n
    if ((List::is_empty() & 1))\n
    {\n
        cgc_fdprintf(1, v1 - 11621);\n
        v6 = 0;\n
        v3 = 1;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, v1 - 11574);\n
        cgc_fdprintf(1, v1 - 10770);\n
        OrderIoManager::list_orders(v2);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v4 = IoManager::readnum(v2, 0);\n
        if (!v4)\n
        {\n
            cgc_fdprintf(1, v1 - 11705);\n
            v6 = 0;\n
            v3 = 1;\n
        }\n
        else if (v4 < 1)\n
        {\n
LABEL_408ae1:\n
            cgc_fdprintf(1, v1 - 12150);\n
            v6 = 0;\n
            v3 = 1;\n
        }\n
        else\n
        {\n
            v0 = v4;\n
            if (!(v0 <= List::length()))\n
                goto LABEL_408ae1;\n
            v4 -= 1;\n
            Order::remove_all_pizzas(List::operator[](v2 + 1));\n
            v6 = List::remove(v2 + 1) & 1;\n
            v3 = 1;\n
        }\n
    }\n
    Order::__base_dtor__(&v5);\n
    return v6 & 1;\n
}\n
", "4230050:sub_408ba2": null, "4230064:_ZN14OrderIoManager16clear_all_ordersEb": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::clear_all_orders(unsigned int v7, char a0)\n
{\n
    unsigned int v0;  // [bp-0x1044]\n
    unsigned int v1[5];  // [bp-0x1040]\n
    void* v2;  // [bp-0x103c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x1038]\n
    char v4;  // [bp-0x1034]\n
    char v5;  // [bp-0x9]\n
    unsigned int v6;  // [bp-0x8]\n
    unsigned int v8;  // ebx\n
\n
    v6 = v8;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v5 = a0 & 1;\n
    v1[0] = v7;\n
    Order::__ctor__(&v4);\n
    if (!(v5 & 1))\n
    {\n
        cgc_fdprintf(1, v0 - 11557);\n
        cgc_fdprintf(1, v0 - 10770);\n
        cgc_fdprintf(1, v0 - 11538);\n
        cgc_fdprintf(1, v0 - 12256);\n
        v3 = IoManager::readnum(v1, 0);\n
        if (!v3)\n
        {\n
            cgc_fdprintf(1, v0 - 11705);\n
            v2 = 1;\n
            return Order::__base_dtor__(&v4);\n
        }\n
        if (v3 > 1)\n
            cgc_fdprintf(1, v0 - 12150);\n
        cgc_fdprintf(1, v0 - 11526);\n
    }\n
    while ((List::pop(v1 + 1) & 1))\n
    {\n
        Order::remove_all_pizzas(&v4);\n
    }\n
    v2 = 0;\n
    return Order::__base_dtor__(&v4);\n
}\n
", "4230530:sub_408d82": null, "4230544:_ZN14OrderIoManager17view_single_orderEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::view_single_order(unsigned int v14)\n
{\n
    unsigned int v0;  // [bp-0x1064]\n
    unsigned int v1;  // [bp-0x1060]\n
    unsigned int v2;  // [bp-0x105c]\n
    unsigned int v3;  // [bp-0x1054]\n
    unsigned int v4;  // [bp-0x1050]\n
    unsigned int v5;  // [bp-0x104c]\n
    unsigned int v6;  // [bp-0x1048]\n
    unsigned int v7[5];  // [bp-0x1044]\n
    unsigned int v8;  // [bp-0x1040]\n
    unsigned int v9;  // [bp-0x103c]\n
    unsigned int v10;  // [bp-0x1038]\n
    char v11;  // [bp-0x1034]\n
    char v12;  // [bp-0xd]\n
    unsigned int v13;  // [bp-0x8]\n
    unsigned int v15;  // ebx\n
\n
    v13 = v15;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7[0] = v14;\n
    Order::__ctor__(&v11);\n
    if ((List::is_empty() & 1))\n
    {\n
        cgc_fdprintf(1, v6 - 11621);\n
        v12 = 0;\n
        v8 = 1;\n
    }\n
    else\n
    {\n
        cgc_fdprintf(1, v6 - 11505);\n
        cgc_fdprintf(1, v6 - 10770);\n
        OrderIoManager::list_orders(v7);\n
        cgc_fdprintf(1, v6 - 12256);\n
        v10 = IoManager::readnum(v7, 0);\n
        if (!v10)\n
        {\n
            cgc_fdprintf(1, v6 - 11705);\n
            v12 = 0;\n
            v8 = 1;\n
        }\n
        else\n
        {\n
            v5 = v10;\n
            if (v5 > List::length())\n
            {\n
                cgc_fdprintf(1, v6 - 12150);\n
                v12 = 0;\n
                v8 = 1;\n
            }\n
            else\n
            {\n
                v10 -= 1;\n
                v9 = v10;\n
                v3 = v9 + 1;\n
                v4 = Order::get_name(List::operator[](v7 + 1));\n
                v0 = v3;\n
                v1 = v4;\n
                v2 = Order::get_num_pizzas(List::operator[](v7 + 1));\n
                cgc_fdprintf(1, v6 - 11871);\n
                Order::print_order(List::operator[](v7 + 1));\n
                cgc_fdprintf(1, v6 - 11486);\n
                cgc_fdprintf(1, v6 - 11466);\n
                v12 = 1;\n
                v8 = 1;\n
            }\n
        }\n
    }\n
    Order::__base_dtor__(&v11);\n
    return v12 & 1;\n
}\n
", "4231328:_ZN14OrderIoManager12print_ordersEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int OrderIoManager::print_orders(unsigned int v10)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x24]\n
    unsigned int v4;  // [bp-0x20]\n
    unsigned int v5;  // [bp-0x1c]\n
    unsigned int v6;  // [bp-0x18]\n
    unsigned int v7;  // [bp-0x14]\n
    void* v8;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v9;  // [bp-0x8]\n
    unsigned int v11;  // ebx\n
    unsigned int v12;  // eax\n
\n
    v9 = v11;\n
    v6 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v10;\n
    v8 = 0;\n
    if ((List::is_empty() & 1))\n
    {\n
        v12 = cgc_fdprintf(1, v6 - 11621);\n
        return v12;\n
    }\n
    v8 = 0;\n
    while (true)\n
    {\n
        v5 = v8;\n
        if (v5 >= List::length())\n
            break;\n
        v3 = v8 + 1;\n
        v4 = Order::get_name(List::operator[](v7 + 20));\n
        v0 = v3;\n
        v1 = v4;\n
        v2 = Order::get_num_pizzas(List::operator[](v7 + 20));\n
        cgc_fdprintf(1, v6 - 11871);\n
        Order::print_order(List::operator[](v7 + 20));\n
        v8 += 1;\n
    }\n
    cgc_fdprintf(1, v6 - 11486);\n
    v12 = cgc_fdprintf(1, v6 - 11466);\n
    return v12;\n
}\n
", "4231695:sub_40920f": null, "4231696:_ZN4ListI5OrderEC2Ev": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409000;\n
\n
int List::__base_ctor__(struct_0 *v6)\n
{\n
    struct_0 *v0;  // [bp-0x20]\n
    struct_0 *v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    struct_0 *v5;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    v4 = v3 + &g_409000;\n
    v5 = v3;\n
    do\n
    {\n
        v0 = v5;\n
        Order::__ctor__(v0);\n
        v1 = &v0->padding_0[4132];\n
        v5 = v1;\n
    } while (v1 != v4);\n
    *((v3 + &g_409000)) = 0;\n
    return v3;\n
}\n
", "4231802:sub_40927a": null, "4231808:_ZN4ListI5OrderED2Ev": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409000;\n
\n
int List::__base_dtor__(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    *((v2 + &g_409000)) = 0;\n
    v3 = v2 + &g_409000;\n
    do\n
    {\n
        v0 = v3 - 4132;\n
        Order::__base_dtor__(v0);\n
        v3 = v0;\n
    } while (v3 != v2);\n
    return v0;\n
}\n
", "4231902:sub_4092de": null, "4231904:_ZN4ListI5OrderE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char g_409000;\n
\n
int List::length(struct_0 *v0)\n
{\n
    return *((v0 + &g_409000));\n
}\n
", "4231921:sub_4092f1": null, "4231936:_ZN4ListI5OrderEixEm": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char g_409000;\n
\n
int List::operator[](struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= *((v0 + &g_409000)))\n
    {\n
        v3 = v0;\n
        v1 = &v3->padding_0[4132 * *((v3 + &g_409000))];\n
        return v1;\n
    }\n
    v1 = &v0->padding_0[4132 * a0];\n
    return v1;\n
}\n
", "4232015:sub_40934f": null, "4232016:_ZN4ListI5OrderE7is_fullEv": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char g_409000;\n
\n
int List::is_full(struct_0 *v0)\n
{\n
    return *((v0 + &g_409000)) == 0x400;\n
}\n
", "4232045:sub_40936d": null, "4232048:_ZN4ListI5OrderE3addES0_": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409000;\n
\n
int List::add(struct_0 *v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    void* v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    char v3;  // [bp-0xd]\n
    struct_0 *v5;  // ecx\n
    unsigned int v6;  // edx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = a0;\n
    v2 = v4;\n
    if (*((v2 + &g_409000)) == 0x400)\n
    {\n
        v3 = 0;\n
        return v3 & 1;\n
    }\n
    v5 = v2;\n
    v6 = *((v5 + &g_409000));\n
    *((v5 + &g_409000)) = v6 + 1;\n
    memcpy(&v5->padding_0[4132 * v6], v1, 4132);\n
    v3 = 1;\n
    return v3 & 1;\n
}\n
", "4232184:sub_4093f8": null, "4232192:_ZN4ListI5OrderE8is_emptyEv": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char g_409000;\n
\n
int List::is_empty(struct_0 *v0)\n
{\n
    return !*((v0 + &g_409000));\n
}\n
", "4232218:sub_40941a": null, "4232224:_ZN4ListI5OrderE6removeEm": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409000;\n
\n
int List::remove(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (a0 >= *((v1 + &g_409000)))\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v1;\n
    cgc_memcpy(&v4->padding_0[4132 * a0], &v4->padding_0[4132 + 4132 * a0], (*((v4 + &g_409000)) - a0) * 4132);\n
    v5 = v1;\n
    *((v5 + &g_409000)) = *((v5 + &g_409000)) - 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4232384:_ZN4ListI5OrderE3popERS0_": "typedef struct struct_0 {\n
    char padding_0[4231168];\n
    unsigned int field_409000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_409000;\n
\n
int List::pop(struct_0 *v3, void* a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    struct_0 *v4;  // eax\n
    unsigned int v5;  // ecx\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (!*((v1 + &g_409000)))\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v1;\n
    v5 = *((v4 + &g_409000)) - 1;\n
    *((v4 + &g_409000)) = v5;\n
    memcpy(a0, &v4->padding_0[4132 * v5], 4132);\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4232510:sub_40953e": null, "4232512:_ZN5PizzaC2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_410060;\n
\n
int Pizza::__base_ctor__(unsigned int *v4)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int *v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // ebx\n
\n
    v3 = v5;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    *(v2) = &g_410060;\n
    v0 = v2 + 1;\n
    List::__base_ctor__();\n
    v0 = v2 + 1026;\n
    v6 = v3;\n
    return List::__base_ctor__();\n
}\n
", "4232590:sub_40958e": null, "4232592:_ZN5PizzaD2Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char g_410060;\n
\n
int Pizza::__base_dtor__(unsigned int *v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    struct struct_1 **v1;  // [bp-0x20]\n
    struct struct_1 **v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int *v4;  // [bp-0x14]\n
    char v5;  // [bp-0x10]\n
    char v6;  // [bp-0xc]\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v7;\n
    *(v4) = &g_410060;\n
    while (true)\n
    {\n
        v0 = &v6;\n
        if (!(List::pop(v4 + 1) & 1))\n
            break;\n
        v2 = *(&v6);\n
        if (v2)\n
            *(v2)->field_4();\n
    }\n
    while (true)\n
    {\n
        v0 = &v5;\n
        if (!(List::pop(v4 + 1026) & 1))\n
            break;\n
        v1 = *(&v5);\n
        if (v1)\n
            *(v1)->field_4();\n
    }\n
    List::__base_dtor__();\n
    return List::__base_dtor__();\n
}\n
", "4232826:sub_40967a": null, "4232832:_ZN5PizzaD0Ev": "int Pizza::__deleting_dtor__(unsigned int v0)\n
{\n
}\n
", "4232839:sub_409687": "int sub_409687()\n
{\n
    return Pizza::add_topping();\n
}\n
", "4232848:_ZN5Pizza11add_toppingEP7Topping": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::add_topping(unsigned int v6, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2;  // [bp-0x18]\n
    unsigned int v3;  // [bp-0x14]\n
    void* v4;  // [bp-0x10], Other Possible Types: unsigned int\n
    char v5;  // [bp-0x9]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v6;\n
    v4 = 0;\n
    while (true)\n
    {\n
        v1 = v4;\n
        if (v1 >= List::length())\n
        {\n
            v0 = a0;\n
            v5 = List::add(v3 + 4) & 1;\n
            return v5 & 1;\n
        }\n
        v0 = v4;\n
        v0 = a0;\n
        if ((Topping::operator== const(*(List::operator[](v3 + 4))) & 1))\n
        {\n
            v5 = 0;\n
            return v5 & 1;\n
        }\n
        v4 += 1;\n
    }\n
}\n
", "4233053:sub_40975d": null, "4233056:_ZN5Pizza14remove_toppingEm": "int Pizza::remove_topping(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return List::remove(v1 + 4) & 1;\n
}\n
", "4233113:sub_409799": null, "4233120:_ZN5Pizza9add_sauceEP5Sauce": "int Pizza::add_sauce(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return List::add(v1 + 4104) & 1;\n
}\n
", "4233180:sub_4097dc": null, "4233184:_ZN5Pizza12remove_sauceEm": "int Pizza::remove_sauce(unsigned int v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
\n
    v0 = a0;\n
    return List::remove(v1 + 4104) & 1;\n
}\n
", "4233244:sub_40981c": null, "4233248:_ZN5Pizza14print_toppingsEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::print_toppings(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (!(List::is_empty() & 1))\n
    {\n
        v5 = List::print_list(v1 + 4);\n
        return v5;\n
    }\n
    v5 = cgc_fdprintf(1, v0 - 11446);\n
    return v5;\n
}\n
", "4233366:sub_409896": null, "4233376:_ZN12_GLOBAL__N_112print_helperEPv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::print_helper(struct struct_1 **v5)\n
{\n
    char *v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    struct struct_1 **v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    struct struct_1 **v7;  // ecx\n
\n
    v4 = v6;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v5;\n
    v0 = v2 - 11393;\n
    v1 = Topping::get_topping_name();\n
    cgc_fdprintf(1, v0);\n
    if ((*(v7)->field_c(v3, v0) & 1))\n
    {\n
        cgc_fdprintf(1, v2 - 11390);\n
        return cgc_fdprintf(1, v2 - 11910);\n
    }\n
    if ((*(v3)->field_8() & 1))\n
        return cgc_fdprintf(1, v2 - 11910);\n
    cgc_fdprintf(1, v2 - 11389);\n
}\n
", "4233587:sub_409973": null, "4233600:_ZN5Pizza12print_saucesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::print_sauces(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // eax\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (!(List::is_empty() & 1))\n
    {\n
        v5 = List::print_list(v1 + 4104);\n
        return v5;\n
    }\n
    v5 = cgc_fdprintf(1, v0 - 11446);\n
    return v5;\n
}\n
", "4233723:sub_4099fb": null, "4233728:_ZN5Pizza16get_num_toppingsEv": "int Pizza::get_num_toppings(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::length(v1 + 4, *(&v0));\n
}\n
", "4233768:sub_409a28": null, "4233776:_ZN5Pizza14get_num_saucesEv": "int Pizza::get_num_sauces(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return List::length(v1 + 4104, *(&v0));\n
}\n
", "4233818:sub_409a5a": null, "4233824:_ZN5Pizza11print_pizzaEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::print_pizza(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    cgc_fdprintf(1, \"    Selected Toppings\\n
\");\n
    Pizza::print_toppings(v1);\n
    cgc_fdprintf(1, v0 - 11416);\n
    v5 = v2;\n
    return Pizza::print_sauces(v1);\n
}\n
", "4233936:_ZN5Pizza12get_caloriesEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::get_calories(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v7;\n
    v5 = 0;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= List::length())\n
            break;\n
        v0 = v6;\n
        v5 = Topping::get_calories(*(List::operator[](v4 + 4))) + v5;\n
        v6 += 1;\n
    }\n
    v6 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 >= List::length())\n
            break;\n
        v0 = v6;\n
        v5 = Topping::get_calories(*(List::operator[](v4 + 4104))) + v5;\n
        v6 += 1;\n
    }\n
    return v5;\n
}\n
", "4234188:sub_409bcc": null, "4234192:_ZN5Pizza9get_carbsEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::get_carbs(unsigned int v7)\n
{\n
    unsigned int v0;  // [bp-0x28]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    void* v5;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v6;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_;\n
    v4 = v7;\n
    v5 = 0;\n
    v6 = 0;\n
    while (true)\n
    {\n
        v2 = v6;\n
        if (v2 >= List::length())\n
            break;\n
        v0 = v6;\n
        v5 = Topping::get_carbs(*(List::operator[](v4 + 4))) + v5;\n
        v6 += 1;\n
    }\n
    v6 = 0;\n
    while (true)\n
    {\n
        v1 = v6;\n
        if (v1 >= List::length())\n
            break;\n
        v0 = v6;\n
        v5 = Topping::get_carbs(*(List::operator[](v4 + 4104))) + v5;\n
        v6 += 1;\n
    }\n
    return v5;\n
}\n
", "4234444:sub_409ccc": null, "4234448:_ZN5Pizza13get_prep_timeEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Pizza::get_prep_time(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x14]\n
    unsigned int v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
    unsigned int v7;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    v0 = v2 + 4;\n
    v3 = List::length() * 30;\n
    v0 = v2 + 4104;\n
    v7 = v4;\n
    return v3 + List::length() * 15;\n
}\n
", "4234533:sub_409d25": null, "4234544:_ZN4ListIP7ToppingEC2Ev": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::__base_ctor__(struct_0 *v0)\n
{\n
    v0->field_1000 = 0;\n
    return v0;\n
}\n
", "4234565:sub_409d45": null, "4234576:_ZN4ListIP5SauceEC2Ev": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::__base_ctor__(struct_0 *v0)\n
{\n
    v0->field_1000 = 0;\n
    return v0;\n
}\n
", "4234597:sub_409d65": null, "4234608:_ZN4ListIP7ToppingE3popERS1_": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::pop(struct_0 *v2, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (!v0->field_1000)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_1000;\n
    v3->field_1000 = v4 - 1;\n
    *(a0) = *(&v3->padding_0[4 + 4 * v4]);\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4234694:sub_409dc6": null, "4234704:_ZN4ListIP5SauceE3popERS1_": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::pop(struct_0 *v2, unsigned int *a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    char v1;  // [bp-0x5]\n
    struct_0 *v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (!v0->field_1000)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = v3->field_1000;\n
    v3->field_1000 = v4 - 1;\n
    *(a0) = *(&v3->padding_0[4 + 4 * v4]);\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4234790:sub_409e26": null, "4234800:_ZN4ListIP5SauceED2Ev": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::__base_dtor__(struct_0 *v0)\n
{\n
    v0->field_1000 = 0;\n
    return v0;\n
}\n
", "4234821:sub_409e45": null, "4234832:_ZN4ListIP7ToppingED2Ev": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::__base_dtor__(struct_0 *v0)\n
{\n
    v0->field_1000 = 0;\n
    return v0;\n
}\n
", "4234853:sub_409e65": null, "4234864:_ZN4ListIP7ToppingE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::length(struct_0 *v0)\n
{\n
    return v0->field_1000;\n
}\n
", "4234881:sub_409e81": null, "4234896:_ZN4ListIP7ToppingEixEm": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::operator[](struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= v0->field_1000)\n
    {\n
        v3 = v0;\n
        v1 = &v3->padding_0[4 * v3->field_1000];\n
        return v1;\n
    }\n
    v1 = &v0->padding_0[4 * a0];\n
    return v1;\n
}\n
", "4234973:sub_409edd": null, "4234976:_ZN4ListIP7ToppingE3addES1_": "int List::add(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (*((v0 + 0x1000)) == 0x400)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = *((v3 + 0x1000));\n
    *((v3 + 0x1000)) = v4 + 1;\n
    *((v3 + v4 * 4)) = a0;\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4235064:sub_409f38": null, "4235072:_ZN4ListIP7ToppingE6removeEm": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::remove(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (a0 >= v1->field_1000)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v1;\n
    cgc_memcpy(&v4->padding_0[4 * a0], &v4->padding_0[4 + 4 * a0], (v4->field_1000 - a0) * 4);\n
    v5 = v1;\n
    v5->field_1000 = v5->field_1000 - 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4235225:sub_409fd9": null, "4235232:_ZN4ListIP5SauceE3addES1_": "int List::add(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    char v1;  // [bp-0x9]\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // ecx\n
\n
    v0 = v2;\n
    if (*((v0 + 0x1000)) == 0x400)\n
    {\n
        v1 = 0;\n
        return v1 & 1;\n
    }\n
    v3 = v0;\n
    v4 = *((v3 + 0x1000));\n
    *((v3 + 0x1000)) = v4 + 1;\n
    *((v3 + v4 * 4)) = a0;\n
    v1 = 1;\n
    return v1 & 1;\n
}\n
", "4235320:sub_40a038": null, "4235328:_ZN4ListIP5SauceE6removeEm": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::remove(struct_0 *v3, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    struct_0 *v1;  // [bp-0x14]\n
    char v2;  // [bp-0xd]\n
    struct_0 *v4;  // eax\n
    struct_0 *v5;  // eax\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    if (a0 >= v1->field_1000)\n
    {\n
        v2 = 0;\n
        return v2 & 1;\n
    }\n
    v4 = v1;\n
    cgc_memcpy(&v4->padding_0[4 * a0], &v4->padding_0[4 + 4 * a0], (v4->field_1000 - a0) * 4);\n
    v5 = v1;\n
    v5->field_1000 = v5->field_1000 - 1;\n
    v2 = 1;\n
    return v2 & 1;\n
}\n
", "4235481:sub_40a0d9": null, "4235488:_ZN4ListIP7ToppingE8is_emptyEv": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::is_empty(struct_0 *v0)\n
{\n
    return !v0->field_1000;\n
}\n
", "4235514:sub_40a0fa": null, "4235520:_ZN4ListIP7ToppingE10print_listEPFvPvE": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::print_list(unsigned int v5[1025], struct struct_0 **a0)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1[1025];  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3[1025];  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = v5;\n
    for (v4 = 0; v4 < v3[0x400]; v4 += 1)\n
    {\n
        v0 = v2 - 11387;\n
        v1[0] = v4 + 1;\n
        cgc_fdprintf(1, v0);\n
        a0(v3[v4], v0);\n
    }\n
    return v4;\n
}\n
", "4235654:sub_40a186": null, "4235664:_ZN4ListIP5SauceE8is_emptyEv": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::is_empty(struct_0 *v0)\n
{\n
    return !v0->field_1000;\n
}\n
", "4235690:sub_40a1aa": null, "4235696:_ZN4ListIP5SauceE10print_listEPFvPvE": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int List::print_list(unsigned int v5[1025], struct struct_0 **a0)\n
{\n
    char *v0;  // [bp-0x28]\n
    unsigned int v1[1025];  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v3[1025];  // [bp-0x10]\n
    unsigned int v4;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3[0] = v5;\n
    for (v4 = 0; v4 < v3[0x400]; v4 += 1)\n
    {\n
        v0 = v2 - 11387;\n
        v1[0] = v4 + 1;\n
        cgc_fdprintf(1, v0);\n
        a0(v3[v4], v0);\n
    }\n
    return v4;\n
}\n
", "4235830:sub_40a236": null, "4235840:_ZN4ListIP5SauceE6lengthEv": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::length(struct_0 *v0)\n
{\n
    return v0->field_1000;\n
}\n
", "4235857:sub_40a251": null, "4235872:_ZN7Topping12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
int Topping::get_calories(struct_0 *v0)\n
{\n
    return v0->field_8;\n
}\n
", "4235886:sub_40a26e": null, "4235888:_ZN4ListIP5SauceEixEm": "typedef struct struct_0 {\n
    char padding_0[4096];\n
    unsigned int field_1000;\n
} struct_0;\n
\n
int List::operator[](struct_0 *v2, unsigned int a0)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax\n
\n
    v0 = v2;\n
    if (a0 >= v0->field_1000)\n
    {\n
        v3 = v0;\n
        v1 = &v3->padding_0[4 * v3->field_1000];\n
        return v1;\n
    }\n
    v1 = &v0->padding_0[4 * a0];\n
    return v1;\n
}\n
", "4235965:sub_40a2bd": null, "4235968:_ZN7Topping9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_0;\n
\n
int Topping::get_carbs(struct_0 *v0)\n
{\n
    return v0->field_c;\n
}\n
", "4235982:sub_40a2ce": null, "4235984:_ZN7Topping16get_topping_nameEv": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int Topping::get_topping_name(struct_0 *v0)\n
{\n
    return v0->field_4;\n
}\n
", "4235998:sub_40a2de": null, "4236000:_ZN9PizzaBowlC1Eb": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8200];\n
    char field_200c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaBowl::__ctor__(struct_0 *v4, char a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    struct_0 *v1;  // [bp-0x10]\n
    char v2;  // [bp-0x9]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v3 = v5;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = a0 & 1;\n
    v1 = v4;\n
    Pizza::__base_ctor__(v1);\n
    v6 = v1;\n
    v6->field_0 = v0 + -484;\n
    v6->field_200c = v2 & 1;\n
    v7 = v3;\n
    return v1;\n
}\n
", "4236082:sub_40a332": null, "4236096:_ZN9PizzaBowlD2Ev": "int PizzaBowl::__base_dtor__(unsigned int *v0)\n
{\n
    return Pizza::__base_dtor__(v0);\n
}\n
", "4236133:sub_40a365": null, "4236144:_ZN9PizzaBowlD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaBowl::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    PizzaBowl::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4236203:sub_40a3ab": null, "4236208:_ZN9PizzaBowl17add_side_of_breadEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
int PizzaBowl::add_side_of_bread(struct_0 *v0)\n
{\n
    v0->field_200c = 1;\n
    return v0;\n
}\n
", "4236226:sub_40a3c2": null, "4236240:_ZN9PizzaBowl20remove_side_of_breadEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
int PizzaBowl::remove_side_of_bread(struct_0 *v0)\n
{\n
    v0->field_200c = 0;\n
    return v0;\n
}\n
", "4236258:sub_40a3e2": null, "4236272:_ZN9PizzaBowl12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
int PizzaBowl::get_calories(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = v2;\n
    v1 = ((v0->field_200c & 1) ? 0 : 180);\n
    return Pizza::get_calories(v0) + v1;\n
}\n
", "4236341:sub_40a435": null, "4236352:_ZN9PizzaBowl9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
int PizzaBowl::get_carbs(struct_0 *v2)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
\n
    v0 = v2;\n
    v1 = ((v0->field_200c & 1) ? 0 : 26);\n
    return Pizza::get_carbs(v0) + v1;\n
}\n
", "4236421:sub_40a485": null, "4236432:_ZN9PizzaBowl13get_prep_timeEv": "int PizzaBowl::get_prep_time(unsigned int v0)\n
{\n
    return Pizza::get_prep_time(v0) + 120;\n
}\n
", "4236472:sub_40a4b8": null, "4236480:_ZN9PizzaBowl11print_pizzaEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaBowl::print_pizza(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v3 = \"WHOOPS\";\n
    if ((v2->field_200c & 1))\n
        v3 = v1 - 11374;\n
    else\n
        v3 = v1 - 11370;\n
    v0 = v3;\n
    cgc_fdprintf(1, v1 - 11366);\n
    return Pizza::print_pizza(v2);\n
}\n
", "4236614:sub_40a546": null, "4236624:_ZN14PizzaIoManagerC2EP5Pizza": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::__base_ctor__(unsigned int v3[6], unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[6];  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    IoManager::__ctor__(v1, 0x200);\n
    v5 = v1;\n
    v5[0] = v0 + -452;\n
    v5[5] = a0;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4236703:sub_40a59f": null, "4236704:_ZN14PizzaIoManagerD2Ev": "extern char g_4100a0;\n
\n
int PizzaIoManager::__base_dtor__(unsigned int v0[6])\n
{\n
    unsigned int v1[6];  // eax\n
\n
    v1 = v0;\n
    v1[0] = &g_4100a0;\n
    v1[5] = 0;\n
    return IoManager::__base_dtor__(v0);\n
}\n
", "4236759:sub_40a5d7": null, "4236768:_ZN14PizzaIoManagerD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[6];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    PizzaIoManager::__base_dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4236827:sub_40a61b": null, "4236832:_ZN14PizzaIoManager16create_pizza_pieEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::create_pizza_pie(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
    struct_0 *v6;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v5;\n
    while (true)\n
    {\n
        cgc_fdprintf(1, v1 - 11280);\n
        cgc_fdprintf(1, v1 - 11267);\n
        cgc_fdprintf(1, v1 - 11257);\n
        cgc_fdprintf(1, v1 - 11246);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v3 = IoManager::readnum(v2, 0);\n
        if (v3 >= 1 && v3 <= 3)\n
            break;\n
        cgc_fdprintf(1, v1 - 12150);\n
    }\n
    v0 = operator new(8216);\n
    PizzaPie::__base_ctor__(v0);\n
    v6 = v2;\n
    v6->field_14 = v0;\n
    if (!v6->field_14)\n
    {\n
        cgc_fdprintf(1, v1 - 11236);\n
        v4 = 0;\n
        return v4 & 1;\n
    }\n
    cgc_fdprintf(1, v1 - 11178);\n
    v4 = 1;\n
    return v4 & 1;\n
}\n
", "4237207:sub_40a797": null, "4237216:_ZN14PizzaIoManager16create_pizza_subEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::create_pizza_sub(struct_0 *v8)\n
{\n
    unsigned int v0;  // [bp-0x34]\n
    unsigned int v1;  // [bp-0x24]\n
    unsigned int v2;  // [bp-0x20]\n
    struct_0 *v3;  // [bp-0x1c]\n
    unsigned int v4;  // [bp-0x18]\n
    unsigned int v5;  // [bp-0x14]\n
    unsigned int v6;  // [bp-0x10]\n
    char v7;  // [bp-0x9]\n
    struct_0 *v9;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v8;\n
    while (true)\n
    {\n
        cgc_fdprintf(1, v2 - 11280);\n
        cgc_fdprintf(1, v2 - 11141);\n
        cgc_fdprintf(1, v2 - 11130);\n
        cgc_fdprintf(1, v2 - 12256);\n
        v4 = IoManager::readnum(v3, 0);\n
        if (v4 >= 1 && v4 <= 2)\n
            break;\n
        cgc_fdprintf(1, v2 - 12150);\n
    }\n
    v6 = v4;\n
    while (true)\n
    {\n
        cgc_fdprintf(1, v2 - 11118);\n
        cgc_fdprintf(1, v2 - 11099);\n
        cgc_fdprintf(1, v2 - 11089);\n
        cgc_fdprintf(1, v2 - 12256);\n
        v4 = IoManager::readnum(v3, 0);\n
        if (v4 >= 1 && v4 <= 2)\n
            break;\n
        cgc_fdprintf(1, v2 - 12150);\n
    }\n
    v5 = v4;\n
    v1 = operator new(8216);\n
    v0 = v5;\n
    PizzaSub::__base_ctor__(v1, v6);\n
    v9 = v3;\n
    v9->field_14 = v1;\n
    if (!v9->field_14)\n
    {\n
        cgc_fdprintf(1, v2 - 11236);\n
        v7 = 0;\n
        return v7 & 1;\n
    }\n
    cgc_fdprintf(1, v2 - 11079);\n
    v7 = 1;\n
    return v7 & 1;\n
}\n
", "4237767:sub_40a9c7": null, "4237776:_ZN14PizzaIoManager17create_pizza_bowlEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::create_pizza_bowl(struct_0 *v7)\n
{\n
    void* v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x1c]\n
    struct_0 *v3;  // [bp-0x18]\n
    char v4;  // [bp-0x11]\n
    unsigned int v5;  // [bp-0x10]\n
    char v6;  // [bp-0x9]\n
    struct_0 *v8;  // eax\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    v3 = v7;\n
    while (true)\n
    {\n
        cgc_fdprintf(1, v2 - 11042);\n
        cgc_fdprintf(1, v2 - 11026);\n
        cgc_fdprintf(1, v2 - 11018);\n
        cgc_fdprintf(1, v2 - 12256);\n
        v5 = IoManager::readnum(v3, 0);\n
        v1 = v5;\n
        if (v1 == 1)\n
        {\n
            v4 = 1;\n
            break;\n
        }\n
        else if (v1 != 2)\n
        {\n
            cgc_fdprintf(1, v2 - 12150);\n
        }\n
        else\n
        {\n
            v4 = 0;\n
            break;\n
        }\n
    }\n
    v0 = operator new(8208);\n
    PizzaBowl::__ctor__(v0, v4 & 1);\n
    v8 = v3;\n
    v8->field_14 = v0;\n
    if (!v8->field_14)\n
    {\n
        cgc_fdprintf(1, v2 - 11236);\n
        v6 = 0;\n
        return v6 & 1;\n
    }\n
    cgc_fdprintf(1, v2 - 11011);\n
    v6 = 1;\n
    return v6 & 1;\n
}\n
", "4238161:sub_40ab51": null, "4238176:_ZN14PizzaIoManager12add_toppingsEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    struct struct_0 *field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::add_toppings()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    unsigned int v1;  // [bp-0x1c]\n
    unsigned int v2[5];  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    char v11;  // [bp+0xffff7]\n
\n
    v11 = 1;\n
    while (true)\n
    {\n
        if (!((v3 ^ 255) & 1))\n
            return;\n
        cgc_fdprintf(1, v1 - 10973);\n
        cgc_fdprintf(1, v1 - 10951);\n
        cgc_fdprintf(1, v1 - 10940);\n
        cgc_fdprintf(1, v1 - 10931);\n
        cgc_fdprintf(1, v1 - 10919);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v4 = IoManager::readnum(v2, 0);\n
        v0 = v4 - 1;\n
        if (v0 <= 3)\n
            goto *(((stack_base)[28] + (stack_base)[32] * 4 - 11316)) + (stack_base)[28];\n
        else\n
            cgc_fdprintf(1, v1 - 10855);\n
    }\n
}\n
", "4238984:sub_40ae88": null, "4238992:_ZN14PizzaIoManager15remove_toppingsEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::remove_toppings(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = v5;\n
    v2 = v6;\n
    *(&v3) = 0;\n
    while (true)\n
    {\n
        *(&v6) = v3 ^ 255;\n
        if (!((v3 ^ 255) & 1))\n
            return v6;\n
        if (!Pizza::get_num_toppings(v2->field_14))\n
        {\n
            v6 = cgc_fdprintf(1, v1 - 10810);\n
            return v6;\n
        }\n
        cgc_fdprintf(1, v1 - 10787);\n
        cgc_fdprintf(1, v1 - 10771);\n
        Pizza::print_toppings(v2->field_14);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v4 = IoManager::readnum(v2, 0);\n
        if (!v4)\n
        {\n
            v6 = cgc_fdprintf(1, v1 - 10759);\n
            return v6;\n
        }\n
        v0 = v4;\n
        if (v0 <= Pizza::get_num_toppings(v2->field_14))\n
        {\n
            cgc_fdprintf(1, v1 - 10731);\n
            v4 -= 1;\n
            v8 = Pizza::remove_topping(v2->field_14, v4);\n
        }\n
        else\n
        {\n
            v7 = cgc_fdprintf(1, v1 - 12150);\n
        }\n
    }\n
}\n
", "4239397:sub_40b025": null, "4239408:_ZN14PizzaIoManager10add_saucesEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::add_sauces(struct_0 *v6)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    int tmp_3;  // tmp #3\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    struct_0 *v3;  // [bp-0x11]\n
    unsigned int v4;  // [bp-0x10]\n
    void* v5;  // [bp-0xc], Other Possible Types: unsigned int\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v7 = v6;\n
    v2 = v7;\n
    v5 = 0;\n
    *(&v3) = 0;\n
    while (true)\n
    {\n
        *(&v7) = v3 ^ 255;\n
        if (!((v3 ^ 255) & 1))\n
            break;\n
        cgc_fdprintf(1, v1 - 10714);\n
        cgc_fdprintf(1, v1 - 10695);\n
        cgc_fdprintf(1, v1 - 10681);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v4 = IoManager::readnum(v2, 0);\n
        v0 = v4;\n
        if (v0 == 1)\n
        {\n
            Sauce::list_options();\n
            cgc_fdprintf(1, v1 - 10662);\n
            if (!(IoManager::readline(v2, 0) & 1))\n
            {\n
                cgc_fdprintf(1, v1 - 10877);\n
            }\n
            else\n
            {\n
                IoManager::get_last_input(v2);\n
                v5 = Sauce::pour_sauce();\n
            }\n
            if (v5)\n
            {\n
                Pizza::add_sauce(v2->field_14, v5);\n
                v7 = cgc_fdprintf(1, v1 - 10643);\n
            }\n
            else\n
            {\n
                v7 = cgc_fdprintf(1, v1 - 10630);\n
            }\n
        }\n
        else\n
        {\n
            v8 = v0;\n
            tmp_3 = v8;\n
            v7 = v8 - 2;\n
            if (tmp_3 == 2)\n
                *(&v3) = 1;\n
            else\n
                v7 = cgc_fdprintf(1, v1 - 10855);\n
        }\n
    }\n
    return v7;\n
}\n
", "4239902:sub_40b21e": null, "4239904:_ZN14PizzaIoManager13remove_saucesEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::remove_sauces(struct_0 *v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    struct_0 *v2;  // [bp-0x14]\n
    struct_0 *v3;  // [bp-0xd]\n
    unsigned int v4;  // [bp-0xc]\n
    struct_0 *v6;  // eax, Other Possible Types: unsigned int\n
    unsigned int v7;  // eax\n
    unsigned int v8;  // eax\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v6 = v5;\n
    v2 = v6;\n
    *(&v3) = 0;\n
    while (true)\n
    {\n
        *(&v6) = v3 ^ 255;\n
        if (!((v3 ^ 255) & 1))\n
            return v6;\n
        if (!Pizza::get_num_sauces(v2->field_14))\n
        {\n
            v6 = cgc_fdprintf(1, v1 - 10614);\n
            return v6;\n
        }\n
        cgc_fdprintf(1, v1 - 10593);\n
        cgc_fdprintf(1, v1 - 10771);\n
        Pizza::print_sauces(v2->field_14);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v4 = IoManager::readnum(v2, 0);\n
        if (!v4)\n
        {\n
            v6 = cgc_fdprintf(1, v1 - 10573);\n
            return v6;\n
        }\n
        v0 = v4;\n
        if (v0 <= Pizza::get_num_sauces(v2->field_14))\n
        {\n
            cgc_fdprintf(1, v1 - 10547);\n
            v4 -= 1;\n
            v8 = Pizza::remove_sauce(v2->field_14, v4);\n
        }\n
        else\n
        {\n
            v7 = cgc_fdprintf(1, v1 - 12150);\n
        }\n
    }\n
}\n
", "4240309:sub_40b3b5": null, "4240320:_ZN14PizzaIoManager9new_pizzaEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::new_pizza(unsigned int v5)\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[5];  // [bp-0x14]\n
    unsigned int v3;  // [bp-0x10]\n
    char v4;  // [bp-0x9]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = v5;\n
    while (true)\n
    {\n
        cgc_fdprintf(1, v1 - 10532);\n
        cgc_fdprintf(1, v1 - 10501);\n
        cgc_fdprintf(1, v1 - 10472);\n
        cgc_fdprintf(1, v1 - 10434);\n
        cgc_fdprintf(1, v1 - 12256);\n
        v3 = IoManager::readnum(v2, 0);\n
        v0 = v3;\n
        if (v0 == 1)\n
        {\n
            PizzaIoManager::create_pizza_pie(v2);\n
            break;\n
        }\n
        else if (v0 == 2)\n
        {\n
            PizzaIoManager::create_pizza_sub(v2);\n
            break;\n
        }\n
        else if (v0 != 3)\n
        {\n
            cgc_fdprintf(1, v1 - 10855);\n
        }\n
        else\n
        {\n
            PizzaIoManager::create_pizza_bowl(v2);\n
            break;\n
        }\n
    }\n
    if ((PizzaIoManager::edit_pizza(v2) & 1))\n
    {\n
        cgc_fdprintf(1, v1 - 10403);\n
        v4 = 1;\n
        return v4 & 1;\n
    }\n
    cgc_fdprintf(1, v1 - 10376);\n
    v4 = 0;\n
    return v4 & 1;\n
}\n
", "4240761:sub_40b579": null, "4240768:_ZN14PizzaIoManager10edit_pizzaEP5Pizza": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaIoManager::edit_pizza()\n
{\n
    unsigned int v1;  // [bp-0x1c]\n
    struct_0 *v2;  // [bp-0x18]\n
    char v3;  // [bp-0x11]\n
    char v5;  // [bp-0x9]\n
    struct_0 *v7;  // [bp+0x4]\n
    char v8;  // [bp+0x8]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v7;\n
    if (*(&v8))\n
        v2->field_14 = *(&v8);\n
    if (!v2->field_14)\n
    {\n
        cgc_fdprintf(1, v1 - 10352);\n
        v5 = 0;\n
        return;\n
    }\n
    v3 = 0;\n
}\n
", "4241263:sub_40b76f": null, "4241264:_ZN14PizzaIoManager9get_pizzaEv": "typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
int PizzaIoManager::get_pizza(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
    struct_0 *v3;  // eax\n
\n
    v0 = v2;\n
    v3 = v1;\n
    v0 = v3->field_14;\n
    v3->field_14 = 0;\n
    return v0;\n
}\n
", "4241295:sub_40b78f": null, "4241296:_ZN8PizzaPieC2Eh": "typedef struct struct_1 {\n
    char padding_0[676];\n
    char field_2a4;\n
    char padding_2a5[3];\n
    unsigned int field_2a8;\n
    unsigned int field_2ac;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8200];\n
    char field_200c;\n
    char padding_200d[3];\n
    unsigned int field_2010;\n
    unsigned int field_2014;\n
} struct_0;\n
\n
extern struct_1 _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaPie::__base_ctor__(struct_0 *v3, char a0)\n
{\n
    struct_1 *v0;  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_1 *v5;  // ecx\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = v3;\n
    Pizza::__base_ctor__(v1);\n
    v1->field_0 = &v0->padding_0[436];\n
    _GLOBAL__N_1::set_pie_size_helper();\n
    v5 = v0;\n
    v6 = v1;\n
    v6->field_200c = v5->field_2a4;\n
    v6->field_2010 = v5->field_2a8;\n
    v6->field_2014 = v5->field_2ac;\n
    v7 = v2;\n
    return v1;\n
}\n
", "4241415:sub_40b807": null, "4241424:_ZN12_GLOBAL__N_119set_pie_size_helperEj": "typedef struct struct_0 {\n
    char padding_0[676];\n
    char field_2a4;\n
    char padding_2a5[3];\n
    unsigned int field_2a8;\n
    unsigned int field_2ac;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::set_pie_size_helper(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = v2;\n
    if (v1 != 1)\n
    {\n
        if (v1 == 2)\n
        {\n
            v3 = v0;\n
            v3->field_2a4 = 2;\n
            v3->field_2a8 = 1500;\n
            v3->field_2ac = 284;\n
            return v0;\n
        }\n
        else if (v1 == 3)\n
        {\n
            v3 = v0;\n
            *((v3 + 676)) = 3;\n
            *((v3 + 680)) = 2300;\n
            *((v3 + 684)) = 356;\n
            return v0;\n
        }\n
    }\n
    v3 = v0;\n
    *((v3 + 676)) = 1;\n
    *((v3 + 680)) = 1000;\n
    *((v3 + 684)) = 222;\n
    return v0;\n
}\n
", "4241612:sub_40b8cc": null, "4241616:_ZN8PizzaPieD1Ev": "int PizzaPie::__dtor__(unsigned int *v0)\n
{\n
    return Pizza::__base_dtor__(v0);\n
}\n
", "4241653:sub_40b8f5": null, "4241664:_ZN8PizzaPieD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaPie::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    PizzaPie::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4241723:sub_40b93b": null, "4241728:_ZN8PizzaPie12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[8208];\n
    unsigned int field_2010;\n
} struct_0;\n
\n
int PizzaPie::get_calories(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    return Pizza::get_calories(v0) + v0->field_2010;\n
}\n
", "4241779:sub_40b973": null, "4241792:_ZN8PizzaPie9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[8212];\n
    unsigned int field_2014;\n
} struct_0;\n
\n
int PizzaPie::get_carbs(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    return Pizza::get_carbs(v0) + v0->field_2014;\n
}\n
", "4241843:sub_40b9b3": null, "4241856:_ZN8PizzaPie12get_pie_sizeEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
int PizzaPie::get_pie_size(struct_0 *v0)\n
{\n
    return v0->field_200c;\n
}\n
", "4241874:sub_40b9d2": null, "4241888:_ZN8PizzaPie12set_pie_sizeEh": "typedef struct struct_0 {\n
    char padding_0[676];\n
    char field_2a4;\n
    char padding_2a5[3];\n
    unsigned int field_2a8;\n
    unsigned int field_2ac;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[8204];\n
    char field_200c;\n
    char padding_200d[3];\n
    unsigned int field_2010;\n
    unsigned int field_2014;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaPie::set_pie_size(struct_1 *v3, char a0)\n
{\n
    struct_0 *v0;  // [bp-0x10]\n
    struct_1 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    struct_0 *v5;  // ecx\n
    struct_1 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = v3;\n
    _GLOBAL__N_1::set_pie_size_helper(a0);\n
    v5 = v0;\n
    v6 = v1;\n
    v6->field_200c = v5->field_2a4;\n
    v6->field_2010 = v5->field_2a8;\n
    v6->field_2014 = v5->field_2ac;\n
    v7 = v2;\n
    return v1;\n
}\n
", "4241982:sub_40ba3e": null, "4241984:_ZN8PizzaPie13get_prep_timeEv": "int PizzaPie::get_prep_time(unsigned int v0)\n
{\n
    return Pizza::get_prep_time(v0) + 1080;\n
}\n
", "4242026:sub_40ba6a": null, "4242032:_ZN8PizzaPie11print_pizzaEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaPie::print_pizza(struct_0 *v4)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x14]\n
    struct_0 *v2;  // [bp-0x10]\n
    unsigned int v3;  // [bp-0xc]\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = v4;\n
    v3 = \"WHOOPS\";\n
    if (v2->field_200c == 1)\n
    {\n
        v3 = v1 - 10242;\n
    }\n
    else if (v2->field_200c == 2)\n
    {\n
        v3 = v1 - 10236;\n
    }\n
    else if (v2->field_200c == 3)\n
    {\n
        v3 = v1 - 10229;\n
    }\n
    v0 = v3;\n
    cgc_fdprintf(1, v1 - 10223);\n
    return Pizza::print_pizza(v2);\n
}\n
", "4242234:sub_40bb3a": null, "4242240:_ZN8PizzaSubC2Ehh": "typedef struct struct_0 {\n
    unsigned int field_0;\n
    char padding_4[8200];\n
    char field_200c;\n
    char field_200d;\n
    char padding_200e[2];\n
    unsigned int field_2010;\n
    unsigned int field_2014;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[174];\n
\n
int PizzaSub::__base_ctor__(struct_0 *v3, char a0, char a1)\n
{\n
    unsigned int v0[174];  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[174];  // ecx\n
    struct_0 *v6;  // eax\n
    struct_0 *v7;  // eax, Other Possible Types: unsigned int\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = v3;\n
    Pizza::__base_ctor__(v1);\n
    v1->field_0 = &v0[101];\n
    _GLOBAL__N_1::set_sub_size_helper();\n
    v5 = v0;\n
    v6 = v1;\n
    v6->field_200c = a0;\n
    v6->field_2010 = v5[172];\n
    v6->field_2014 = v5[173];\n
    if (a1 - 1 > 1)\n
    {\n
        v7 = v1;\n
        *((v7 + 8205)) = 1;\n
        return v1;\n
    }\n
    v7 = v1;\n
    v7->field_200d = a1;\n
    return v1;\n
}\n
", "4242406:sub_40bbe6": null, "4242416:_ZN12_GLOBAL__N_119set_sub_size_helperEj": "typedef struct struct_0 {\n
    char padding_0[688];\n
    unsigned int field_2b0;\n
    unsigned int field_2b4;\n
    char field_2b8;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::set_sub_size_helper(unsigned int v2)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    struct_0 *v3;  // eax, Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    v1 = v2;\n
    if (v1 != 1 && v1 == 2)\n
    {\n
        v3 = v0;\n
        v3->field_2b8 = 2;\n
        v3->field_2b0 = 1800;\n
        v3->field_2b4 = 356;\n
        return v0;\n
    }\n
    v3 = v0;\n
    *((v3 + 696)) = 1;\n
    *((v3 + 688)) = 900;\n
    *((v3 + 692)) = 222;\n
    return v0;\n
}\n
", "4242552:sub_40bc78": null, "4242560:_ZN8PizzaSubD1Ev": "int PizzaSub::__dtor__(unsigned int *v0)\n
{\n
    return Pizza::__base_dtor__(v0);\n
}\n
", "4242597:sub_40bca5": null, "4242608:_ZN8PizzaSubD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaSub::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    PizzaSub::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4242667:sub_40bceb": null, "4242672:_ZN8PizzaSub12get_caloriesEv": "typedef struct struct_0 {\n
    char padding_0[8208];\n
    unsigned int field_2010;\n
} struct_0;\n
\n
int PizzaSub::get_calories(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    return Pizza::get_calories(v0) + v0->field_2010;\n
}\n
", "4242723:sub_40bd23": null, "4242736:_ZN8PizzaSub9get_carbsEv": "typedef struct struct_0 {\n
    char padding_0[8212];\n
    unsigned int field_2014;\n
} struct_0;\n
\n
int PizzaSub::get_carbs(struct_0 *v1)\n
{\n
    struct_0 *v0;  // [bp-0xc]\n
\n
    v0 = v1;\n
    return Pizza::get_carbs(v0) + v0->field_2014;\n
}\n
", "4242787:sub_40bd63": null, "4242800:_ZN8PizzaSub12get_sub_sizeEv": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
} struct_0;\n
\n
int PizzaSub::get_sub_size(struct_0 *v0)\n
{\n
    return v0->field_200c;\n
}\n
", "4242818:sub_40bd82": null, "4242832:_ZN8PizzaSub12set_sub_sizeEh": "typedef struct struct_0 {\n
    char padding_0[8204];\n
    char field_200c;\n
    char padding_200d[3];\n
    unsigned int field_2010;\n
    unsigned int field_2014;\n
} struct_0;\n
\n
extern unsigned int _GLOBAL_OFFSET_TABLE_[174];\n
\n
int PizzaSub::set_sub_size(struct_0 *v3, char a0)\n
{\n
    unsigned int v0[174];  // [bp-0x10]\n
    struct_0 *v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[174];  // ecx\n
    struct_0 *v6;  // eax\n
    unsigned int v7;  // ebx\n
\n
    v2 = v4;\n
    v0[0] = &_GLOBAL_OFFSET_TABLE_[0];\n
    v1 = v3;\n
    _GLOBAL__N_1::set_sub_size_helper(a0);\n
    v5 = v0;\n
    v6 = v1;\n
    v6->field_200c = a0;\n
    v6->field_2010 = v5[172];\n
    v6->field_2014 = v5[173];\n
    v7 = v2;\n
    return v1;\n
}\n
", "4242923:sub_40bdeb": null, "4242928:_ZN8PizzaSub13get_prep_timeEv": "int PizzaSub::get_prep_time(unsigned int v0)\n
{\n
    return Pizza::get_prep_time(v0) + 240;\n
}\n
", "4242970:sub_40be1a": null, "4242976:_ZN8PizzaSub11print_pizzaEv": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int PizzaSub::print_pizza(char v6[8206])\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v2;  // [bp-0x18]\n
    char v3[8206];  // [bp-0x14]\n
    unsigned int v4;  // [bp-0x10]\n
    unsigned int v5;  // [bp-0xc]\n
\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    *(&v3[0]) = v6;\n
    v5 = \"WHOOPS\";\n
    v4 = \"WHOOPS\";\n
    if (v3[8204] == 1)\n
    {\n
        v5 = v2 - 10194;\n
    }\n
    else if (v3[8204] == 2)\n
    {\n
        v5 = v2 - 10187;\n
    }\n
    if (v3[8205] == 1)\n
    {\n
        v4 = v2 - 10179;\n
    }\n
    else if (v3[8205] == 2)\n
    {\n
        v4 = v2 - 10173;\n
    }\n
    v0 = v5;\n
    v1 = v4;\n
    cgc_fdprintf(1, v2 - 10167);\n
    return Pizza::print_pizza(v3);\n
}\n
", "4243225:sub_40bf19": null, "4243232:_ZN5SauceC2EPKcii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Sauce::__base_ctor__(unsigned int v3[4], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    Topping::__base_ctor__(v1);\n
    v5 = v1;\n
    v5[0] = v0 + -372;\n
    v5[1] = a0;\n
    v5[2] = a1;\n
    v5[3] = a2;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4243321:sub_40bf79": null, "4243328:_ZN5SauceD1Ev": "int Sauce::__dtor__(unsigned int v1)\n
{\n
    char v0;  // [bp-0x8]\n
\n
    return Topping::__dtor__(v1, *(&v0));\n
}\n
", "4243365:sub_40bfa5": null, "4243376:_ZN5SauceD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Sauce::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Sauce::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4243435:sub_40bfeb": null, "4243440:_ZN5Sauce10pour_sauceEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Sauce::pour_sauce(unsigned int v5)\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = _GLOBAL__N_1::find_sauce_entry();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0[0] = operator new(16);\n
    Sauce::__base_ctor__(v0, v2[0], v2[1], v2[2]);\n
    v3 = v0;\n
    return v3;\n
}\n
", "4243578:sub_40c07a": null, "4243584:_ZN12_GLOBAL__N_116find_sauce_entryEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::find_sauce_entry(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 8)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        if (!cgc_strcasecmp(*((v0 + 352 + v1 * 12)), v3))\n
        {\n
            v2 = v0 + 352 + v1 * 12;\n
            return v2;\n
        }\n
        v1 += 1;\n
    }\n
}\n
", "4243725:sub_40c10d": null, "4243728:_ZN5Sauce12list_optionsEv": "int Sauce::list_options()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return ::0x40c130::_GLOBAL__N_1::print_list(v2, *(&v0));\n
}\n
", "4243756:sub_40c12c": null, "4243760:_ZN12_GLOBAL__N_110print_listEv": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::print_list()\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v6;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < 8; v3 = v5)\n
    {\n
        v6 = v2;\n
        v0 = v3 + 1;\n
        v1 = v6[88 + 3 * v3];\n
        cgc_fdprintf(1, &v6[3145] + 2);\n
        v5 = v3 + 1;\n
    }\n
    return v5;\n
}\n
", "4243872:_ZN5Sauce13is_vegetarianEv": "int Sauce::is_vegetarian(unsigned int v0)\n
{\n
    return 1;\n
}\n
", "4243887:sub_40c1af": null, "4243888:_ZN5Sauce13contains_porkEv": "int Sauce::contains_pork(unsigned int v0)\n
{\n
    return 0;\n
}\n
", "4243903:sub_40c1bf": null, "4243904:_ZN7ToppingD1Ev": "int Topping::__dtor__(unsigned int v0)\n
{\n
    return v0;\n
}\n
", "4243912:sub_40c1c8": null, "4243920:_ZN7ToppingD0Ev": "int Topping::__deleting_dtor__(unsigned int v0)\n
{\n
}\n
", "4243927:sub_40c1d7": "int sub_40c1d7()\n
{\n
    return Topping::operator== const();\n
}\n
", "4243936:_ZNK7ToppingeqERKS_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
int Topping::operator== const(struct_0 *v0, struct_0 *a0)\n
{\n
    return !cgc_strcasecmp(v0->field_4, a0->field_4);\n
}\n
", "4244002:sub_40c222": null, "4244016:_ZNK7ToppingneERKS_": "typedef struct struct_0 {\n
    char padding_0[4];\n
    char *field_4;\n
} struct_0;\n
\n
int Topping::operator!= const(struct_0 *v0, struct_0 *a0)\n
{\n
    return cgc_strcasecmp(v0->field_4, a0->field_4);\n
}\n
", "4244082:sub_40c272": null, "4244096:_ZN6VeggieC1EPKcii": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Veggie::__ctor__(unsigned int v3[4], unsigned int a0, unsigned int a1, unsigned int a2)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1[4];  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5[4];  // eax\n
    unsigned int v6;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1[0] = v3;\n
    Topping::__base_ctor__(v1);\n
    v5 = v1;\n
    v5[0] = v0 + -324;\n
    v5[1] = a0;\n
    v5[2] = a1;\n
    v5[3] = a2;\n
    v6 = v2;\n
    return v1;\n
}\n
", "4244185:sub_40c2d9": null, "4244192:_ZN6VeggieD1Ev": "int Veggie::__dtor__(unsigned int v0)\n
{\n
    return Topping::__dtor__(v0);\n
}\n
", "4244229:sub_40c305": null, "4244240:_ZN6VeggieD0Ev": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Veggie::__deleting_dtor__(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x10]\n
    unsigned int v1;  // [bp-0xc]\n
    unsigned int v2;  // [bp-0x8]\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // ebx\n
\n
    v2 = v4;\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = v3;\n
    Veggie::__dtor__(v1);\n
    v5 = v2;\n
    return operator delete(v1);\n
}\n
", "4244299:sub_40c34b": null, "4244304:_ZN6Veggie11pick_veggieEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int Veggie::pick_veggie(unsigned int v5)\n
{\n
    unsigned int v0[4];  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2[3];  // [bp-0x14]\n
    void* v3;  // [bp-0x10], Other Possible Types: unsigned int\n
    unsigned int v4;  // [bp-0x8]\n
    unsigned int v6;  // ebx\n
\n
    v4 = v6;\n
    v1 = &_GLOBAL_OFFSET_TABLE_;\n
    v2[0] = _GLOBAL__N_1::find_veggie_entry();\n
    if (!v2)\n
    {\n
        v3 = 0;\n
        return v3;\n
    }\n
    v0[0] = operator new(16);\n
    Veggie::__ctor__(v0, v2[0], v2[1], v2[2]);\n
    v3 = v0;\n
    return v3;\n
}\n
", "4244442:sub_40c3da": null, "4244448:_ZN12_GLOBAL__N_117find_veggie_entryEPKc": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::find_veggie_entry(char *v3)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    char **v1;  // [bp-0x10], Other Possible Types: unsigned int\n
    void* v2;  // [bp-0xc], Other Possible Types: unsigned int\n
\n
    v0 = &_GLOBAL_OFFSET_TABLE_;\n
    v1 = 0;\n
    while (true)\n
    {\n
        if (v1 >= 8)\n
        {\n
            v2 = 0;\n
            return v2;\n
        }\n
        else if (cgc_strcasecmp(*((v0 + 448 + v1 * 12)), v3))\n
        {\n
            v1 += 1;\n
        }\n
        else\n
        {\n
            v2 = v0 + 448 + v1 * 12;\n
            return v2;\n
        }\n
    }\n
}\n
", "4244589:sub_40c46d": null, "4244592:_ZN6Veggie12list_optionsEv": "int Veggie::list_options()\n
{\n
    char v0;  // [bp-0x8]\n
    unsigned int v2;  // eax\n
\n
    return ::0x40c490::_GLOBAL__N_1::print_list(v2, *(&v0));\n
}\n
", "4244620:sub_40c48c": null, "4244624:_ZN12_GLOBAL__N_110print_listEv": "extern unsigned int _GLOBAL_OFFSET_TABLE_;\n
\n
int _GLOBAL__N_1::print_list()\n
{\n
    unsigned int *v0;  // [bp-0x24]\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int *v2;  // [bp-0x10]\n
    unsigned int *v3;  // [bp-0xc], Other Possible Types: unsigned int\n
    unsigned int *v5;  // eax, Other Possible Types: unsigned int\n
    unsigned int *v6;  // ebx\n
\n
    v5 = &_GLOBAL_OFFSET_TABLE_;\n
    v2 = &_GLOBAL_OFFSET_TABLE_;\n
    for (v3 = 0; v3 < 8; v3 = v5)\n
    {\n
        v6 = v2;\n
        v0 = v3 + 1;\n
        v1 = v6[112 + 3 * v3];\n
        cgc_fdprintf(1, &v6[3145] + 2);\n
        v5 = v3 + 1;\n
    }\n
    return v5;\n
}\n
", "4244736:_ZN6Veggie13is_vegetarianEv": "int Veggie::is_vegetarian(unsigned int v0)\n
{\n
    return 1;\n
}\n
", "4244751:sub_40c50f": null, "4244752:_ZN6Veggie13contains_porkEv": "int Veggie::contains_pork(unsigned int v0)\n
{\n
    return 0;\n
}\n
", "4244768:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242884:_Znwj": null, "5242888:memcpy": null, "5242892:__libc_start_main": null, "5242896:cgc_receive": null, "5242900:_Znaj": null, "5242904:cgc_allocate": null, "5242908:_ZdlPv": null, "5242912:cgc_deallocate": null, "5242916:cgc_transmit": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}