{"4202496:_init": "extern struct_0 *g_408328;\n
\n
int _init()\n
{\n
    if (g_408328)\n
    {\n
        g_408328();\n
        return;\n
    }\n
    return;\n
}\n
", "4202544:sub_402030": "typedef struct struct_0 {\n
    char padding_0[4];\n
    unsigned int field_4;\n
} struct_0;\n
\n
int sub_402030()\n
{\n
    unsigned int v0;  // [bp-0x4]\n
    struct_0 *v2;  // ebx\n
\n
    v0 = v2->field_4;\n
    goto *((ebx<4> + 8));\n
}\n
", "4202560:__libc_start_main": "// attributes: PLT stub\n
char * __libc_start_main(unsigned int v0, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    ::libc.so.0::__libc_start_main(); /* do not return */\n
}\n
", "4202576:cgc_transmit": "// attributes: PLT stub\n
int cgc_transmit()\n
{\n
    ::libc.so.0::cgc_transmit();\n
    return;\n
}\n
", "4202592:cgc_allocate": "// attributes: PLT stub\n
int cgc_allocate()\n
{\n
    ::libc.so.0::cgc_allocate();\n
    return;\n
}\n
", "4202608:cgc_deallocate": "// attributes: PLT stub\n
int cgc_deallocate()\n
{\n
    ::libc.so.0::cgc_deallocate();\n
    return;\n
}\n
", "4202624:cgc_receive": "// attributes: PLT stub\n
int cgc_receive()\n
{\n
    ::libc.so.0::cgc_receive();\n
    return;\n
}\n
", "4202640:sub_402090": "int sub_402090()\n
{\n
    goto *((ebx<4> - 16));\n
}\n
", "4202646:sub_402096": null, "4202656:_start": "int _start()\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    char v1;  // [bp+0x0], Other Possible Types: unsigned int\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    unsigned int v5;  // edx\n
    unsigned int v6;  // ecx\n
\n
    v3 = *(&v1);\n
    v1 = v4;\n
    v0 = v5;\n
    __libc_start_main(main, v3, v6, 0, 0); /* do not return */\n
}\n
", "4202699:sub_4020cb": null, "4202700:sub_4020cc": "int sub_4020cc()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202704:__x86.get_pc_thunk.bx": "int __x86.get_pc_thunk.bx()\n
{\n
    char v0;  // [bp+0x0]\n
    unsigned int v2;  // ebx\n
    unsigned int v3;  // eax\n
\n
    v2 = *(&v0);\n
    return v3;\n
}\n
", "4202708:sub_4020d4": null, "4202720:deregister_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int deregister_tm_clones()\n
{\n
    struct struct_0 **v0;  // [bp-0x1c]\n
    unsigned int v1;  // [bp-0x4]\n
    char v2;  // [bp+0x0]\n
    unsigned int v4;  // edx\n
    struct_1 *v5;  // edx\n
    struct struct_0 **v6;  // ecx\n
    struct struct_0 **v7;  // eax, Other Possible Types: unsigned int\n
\n
    __x86.get_pc_thunk.dx();\n
    v5 = v4 + 25167;\n
    v6 = v5 + 518;\n
    v7 = v5 + 518;\n
    if (v7 == v6)\n
        return v5 + 518;\n
    v7 = v5[5].field_-14;\n
    if (v7)\n
    {\n
        v1 = &v2;\n
        v0 = v6;\n
        return v5[5].field_-14();\n
    }\n
    return v5[5].field_-14;\n
}\n
", "4202771:sub_402113": "int sub_402113()\n
{\n
}\n
", "4202777:sub_402119": "int sub_402119()\n
{\n
    register_tm_clones();\n
    return;\n
}\n
", "4202784:register_tm_clones": "typedef struct struct_1 {\n
    struct struct_0 *field_-4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
int register_tm_clones()\n
{\n
    unsigned int v0;  // [bp-0x18]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v2;  // [bp-0x4]\n
    char v3;  // [bp+0x0]\n
    unsigned int v5;  // edx\n
    struct_1 *v6;  // edx\n
    unsigned int v7;  // ebx\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    struct struct_0 **v10;  // edx\n
\n
    __x86.get_pc_thunk.dx();\n
    v6 = v5 + 25103;\n
    v2 = &v3;\n
    v1 = v7;\n
    v8 = v6 + 518;\n
    v9 = (v6 + 518 - (v6 + 518) >> 31) + (518 + v6 - v8 >> 2) >> 1;\n
    if (!v9)\n
    {\n
        return v9;\n
    }\n
    else if (!v6[1].field_-4)\n
    {\n
        return v9;\n
    }\n
    else\n
    {\n
        v0 = v9;\n
        v9 = v10(v8);\n
        return v9;\n
    }\n
}\n
", "4202855:sub_402167": "int sub_402167()\n
{\n
    __do_global_dtors_aux();\n
    return;\n
}\n
", "4202864:__do_global_dtors_aux": "extern char __bss_start;\n
extern unsigned int __dso_handle;\n
extern unsigned int g_408324;\n
\n
int __do_global_dtors_aux()\n
{\n
    unsigned int v0;  // [bp-0x1c]\n
\n
    if (__bss_start)\n
        return;\n
    if (g_408324)\n
    {\n
        v0 = __dso_handle;\n
        sub_402090();\n
    }\n
    deregister_tm_clones();\n
    __bss_start = 1;\n
    return;\n
}\n
", "4202939:sub_4021bb": "int sub_4021bb()\n
{\n
    frame_dummy();\n
    return;\n
}\n
", "4202944:frame_dummy": "int frame_dummy()\n
{\n
    return register_tm_clones();\n
}\n
", "4202953:__x86.get_pc_thunk.dx": "int __x86.get_pc_thunk.dx()\n
{\n
    unsigned int v1;  // eax\n
\n
    return v1;\n
}\n
", "4202957:sub_4021cd": null, "4202960:cgc_calloc": "int cgc_calloc(unsigned int v1, unsigned int a0)\n
{\n
    int tmp_2;  // tmp #2\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // ecx\n
    unsigned int v4;  // eax\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
        return 0;\n
    v4 = a0;\n
    if (!v4)\n
        return 0;\n
    tmp_2 = v4;\n
    if ([D] x86g_calculate_condition(0x0<32>, 0x24<32>, t2, ecx<4>, 0x0<32>))\n
        return 0;\n
    v6 = v4 * v2;\n
    v7 = cgc_malloc();\n
    if (v7)\n
    {\n
        v0 = v6;\n
        return cgc_memset(v7, 0);\n
    }\n
    return 0;\n
}\n
", "4203038:sub_40221e": null, "4203040:cgc_isalnum": "int cgc_isalnum(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 - 48 < 10 | (v1 & -33) - 65 < 26;\n
}\n
", "4203073:sub_402241": null, "4203088:cgc_isalpha": "int cgc_isalpha(unsigned int v0)\n
{\n
    return (v0 & -33) - 65 < 26;\n
}\n
", "4203107:sub_402263": null, "4203120:cgc_isdigit": "int cgc_isdigit(unsigned int v0)\n
{\n
    return v0 - 48 < 10;\n
}\n
", "4203136:cgc_islower": "int cgc_islower(unsigned int v0)\n
{\n
    return v0 - 97 < 26;\n
}\n
", "4203152:cgc_isupper": "int cgc_isupper(unsigned int v0)\n
{\n
    return v0 - 65 < 26;\n
}\n
", "4203168:cgc_isascii": "int cgc_isascii(unsigned int v0)\n
{\n
    return v0 < 128;\n
}\n
", "4203182:sub_4022ae": null, "4203184:cgc_isblank": "int cgc_isblank(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 9 | v1 == 32;\n
}\n
", "4203206:sub_4022c6": null, "4203216:cgc_iscntrl": "int cgc_iscntrl(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 < 32 | v1 == 127;\n
}\n
", "4203238:sub_4022e6": null, "4203248:cgc_isgraph": "int cgc_isgraph(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return !(v1 < 33) & v1 != 127;\n
}\n
", "4203270:sub_402306": null, "4203280:cgc_isprint": "int cgc_isprint(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 != 127 & !(v1 < 32);\n
}\n
", "4203302:sub_402326": null, "4203312:cgc_ispunct": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_ispunct(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[13100 + v0];\n
}\n
", "4203337:sub_402349": null, "4203344:cgc_isspace": "int cgc_isspace(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
\n
    v1 = v0;\n
    return v1 == 32 | v1 - 9 < 5;\n
}\n
", "4203369:sub_402369": null, "4203376:cgc_isxdigit": "extern char _GLOBAL_OFFSET_TABLE_;\n
\n
int cgc_isxdigit(unsigned int v0)\n
{\n
    return (&_GLOBAL_OFFSET_TABLE_)[12972 + v0];\n
}\n
", "4203401:sub_402389": null, "4203408:cgc_toascii": "int cgc_toascii(unsigned int v0)\n
{\n
    return v0 & 127;\n
}\n
", "4203416:sub_402398": null, "4203424:cgc_tolower": "int cgc_tolower(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 91 >= -26)\n
        return v1 | 32;\n
    return v1;\n
}\n
", "4203443:sub_4023b3": null, "4203456:cgc_toupper": "int cgc_toupper(unsigned int v0)\n
{\n
    unsigned int v1;  // ecx\n
\n
    v1 = v0;\n
    if (v1 - 123 >= -26)\n
        return v1 & 95;\n
    return v1;\n
}\n
", "4203475:sub_4023d3": null, "4203488:cgc_free": "typedef struct struct_0 {\n
    unsigned int field_-14;\n
} struct_0;\n
\n
int cgc_free(struct_0 *v1)\n
{\n
    unsigned int v0;  // [bp-0x18], Other Possible Types: char\n
    struct_0 *v2;  // esi\n
    unsigned int *v3;  // esi\n
    unsigned int v4;  // eax\n
\n
    v2 = v1;\n
    if (!v2)\n
    {\n
        return v4;\n
    }\n
    else if (v2[5].field_-14)\n
    {\n
        return v4;\n
    }\n
    else\n
    {\n
        v3 = v2 + 6;\n
        if (*(&v0) < 0x40000)\n
        {\n
            cgc_insert_into_flist();\n
            v4 = cgc_coalesce();\n
            return v4;\n
        }\n
        v0 = *(v3);\n
        v4 = cgc_deallocate(v3);\n
        return v4;\n
    }\n
}\n
", "4203567:sub_40242f": null, "4203568:cgc_malloc": "typedef struct struct_1 {\n
    unsigned int field_0;\n
    char padding_4[4];\n
    struct struct_1 *field_8;\n
    char padding_c[4];\n
    struct struct_0 *field_10;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    char padding_0[20];\n
    unsigned int field_14;\n
} struct_0;\n
\n
extern char cgc_free_lists;\n
extern struct_1 *g_408bcc;\n
\n
int cgc_malloc(unsigned int v3)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    char v1;  // [bp-0x14]\n
    char v2;  // [bp-0x10]\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // esi\n
    struct_1 *v6;  // ecx\n
    unsigned int v7;  // edi\n
    unsigned int v8[6];  // esi\n
    struct_1 *v9;  // edi\n
    struct struct_1 **v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // esi\n
    struct_1 *v12;  // edx, Other Possible Types: unsigned int\n
    unsigned int v13[6];  // eax\n
    unsigned int v14;  // ecx\n
    unsigned int v15;  // eax\n
    struct_0 *v16;  // ecx\n
\n
    v4 = v3;\n
    if (!v4)\n
    {\n
        return 0;\n
    }\n
    else if (v4 - 262120 > -262145)\n
    {\n
        v7 = v4 + 7 & -8;\n
        if (!(v4 & 7))\n
            v7 = v4;\n
        if (v7 < 0)\n
            return 0;\n
        v9 = v7 + 24;\n
        v10 = cgc_get_size_class();\n
        v11 = 0;\n
        if (v10 <= 31)\n
        {\n
            do\n
            {\n
                v12 = *(&(&cgc_free_lists)[4 * v10]);\n
                if (v12)\n
                {\n
                    do\n
                    {\n
                        if (*(v12) >= v9)\n
                        {\n
                            v11 = v12;\n
                            goto LABEL_40250f;\n
                        }\n
                        v12 = *((v12 + 8));\n
                    } while (v12);\n
                }\n
                v10 += 1;\n
            } while (v10 != 32);\n
        }\n
LABEL_40250f:\n
        if (v11)\n
        {\n
LABEL_402513:\n
            cgc_remove_from_flist();\n
            v14 = *(v11) - v9;\n
            if (v14 >= 49)\n
            {\n
                v15 = v9 + v11;\n
                *((&v9->field_0 + v11)) = v14;\n
                *(&v9->padding_4[v11]) = 1;\n
                *((8 + &v9->field_0 + v11)) = 0;\n
                *(&v9->padding_c[v11]) = 0;\n
                *(v11) = v9;\n
                *((20 + &v9->field_0 + v11)) = v11;\n
                *((16 + &v9->field_0 + v11)) = *((v11 + 16));\n
                v16 = *((v11 + 16));\n
                if (v16)\n
                    v16->field_14 = v15;\n
                *((v11 + 16)) = v15;\n
                cgc_insert_into_flist();\n
            }\n
            v5 = v11 + 24;\n
            return v5;\n
        }\n
        else\n
        {\n
            v0 = &v2;\n
            if (cgc_allocate(0x40000, 0))\n
                return 0;\n
            v13 = *(&v2);\n
            if (v13)\n
            {\n
                v13[0] = 0x40000;\n
                v13[1] = 1;\n
                v13[3] = 0;\n
                v13[2] = 0;\n
                v13[5] = 0;\n
                v13[4] = 0;\n
                cgc_insert_into_flist();\n
                v11 = g_408bcc;\n
                goto LABEL_402513;\n
            }\n
        }\n
    }\n
    else\n
    {\n
        v6 = v4 + 24;\n
        v0 = &v1;\n
        if (!cgc_allocate(v6, 0))\n
        {\n
            v8 = *(&v1);\n
            v8[0] = v6;\n
            v8[1] = 0;\n
            v8[3] = 0;\n
            v8[2] = 0;\n
            v8[5] = 0;\n
            v8[4] = 0;\n
            v5 = v8 + 1;\n
            return v5;\n
        }\n
        return 0;\n
    }\n
}\n
", "4203995:sub_4025db": null, "4204000:cgc_get_size_class": "extern unsigned int size_class_limits;\n
\n
int cgc_get_size_class(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int *v2;  // ecx, Other Possible Types: unsigned int\n
\n
    v1 = 0;\n
    v2 = &size_class_limits;\n
    while (true)\n
    {\n
        if (*(v2) >= v0)\n
            return v1;\n
        v1 += 1;\n
        v2 += 4;\n
        if (v1 == 32)\n
            return 32;\n
    }\n
}\n
", "4204053:sub_402615": null, "4204064:cgc_insert_into_flist": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_insert_into_flist(unsigned int v0[4])\n
{\n
    unsigned int v1[4];  // ecx\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    unsigned int v4;  // esi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    while (*(v3) < v1[0])\n
    {\n
        v2 += 1;\n
        v3 += 4;\n
        if (v2 == 32)\n
        {\n
            v2 = 32;\n
            break;\n
        }\n
    }\n
    v1[1] = 1;\n
    v4 = *(&(&_GLOBAL_OFFSET_TABLE_)[2076 + 4 * v2]);\n
    if (!v4)\n
    {\n
        *(&(&_GLOBAL_OFFSET_TABLE_)[2076 + 4 * v2]) = v1;\n
        return &_GLOBAL_OFFSET_TABLE_;\n
    }\n
    v1[2] = v4;\n
    *((*(&(&_GLOBAL_OFFSET_TABLE_)[2076 + 4 * v2]) + 12)) = v1;\n
    *(&(&_GLOBAL_OFFSET_TABLE_)[2076 + 4 * v2]) = v1;\n
    v1[3] = 0;\n
    return &_GLOBAL_OFFSET_TABLE_;\n
}\n
", "4204173:sub_40268d": null, "4204176:cgc_remove_from_flist": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    struct struct_1 *field_8;\n
    struct struct_0 *field_c;\n
} struct_2;\n
\n
typedef struct struct_0 {\n
    char padding_0[8];\n
    unsigned int field_8;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[12];\n
    unsigned int field_c;\n
} struct_1;\n
\n
extern char _GLOBAL_OFFSET_TABLE_;\n
extern unsigned int size_class_limits;\n
\n
int cgc_remove_from_flist(struct_2 *v0)\n
{\n
    struct_2 *v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int *v3;  // edi, Other Possible Types: unsigned int\n
    struct_0 *v4;  // esi\n
    struct_1 *v5;  // edi\n
\n
    v1 = v0;\n
    v2 = 0;\n
    v3 = &size_class_limits;\n
    do\n
    {\n
        if (*(v3) >= v1->field_0)\n
        {\n
            v4 = v1->field_c;\n
            if (v4)\n
                v4->field_8 = v1->field_8;\n
            v5 = v1->field_8;\n
            if (v5)\n
                v5->field_c = v4;\n
            if (*(&(&_GLOBAL_OFFSET_TABLE_)[2076 + 4 * v2]) == v1)\n
            {\n
                *(&(&_GLOBAL_OFFSET_TABLE_)[2076 + 4 * v2]) = v5;\n
                goto LABEL_4026eb;\n
            }\n
        }\n
        v2 += 1;\n
        v3 += 4;\n
    } while (v2 != 32);\n
    v2 = 32;\n
LABEL_4026eb:\n
    v1->field_8 = 0;\n
    v1->field_c = 0;\n
    v1->field_4 = 0;\n
    return v0;\n
}\n
", "4204291:sub_402703": null, "4204304:cgc_coalesce": "extern char _GLOBAL_OFFSET_TABLE_;\n
extern char size_class_limits;\n
\n
int cgc_coalesce(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edx\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // ebx\n
    unsigned int v5;  // esi\n
    unsigned int v6;  // esi\n
    unsigned int v7;  // edi\n
    unsigned int v8;  // esi\n
    unsigned int v9;  // ebx\n
    unsigned int v10;  // ebx\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // edi\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // ebx\n
    unsigned int v15;  // edx\n
    unsigned int v16;  // esi\n
    unsigned int v17;  // ebx\n
    unsigned int v18;  // ebx\n
    unsigned int v19;  // edi\n
    unsigned int v20;  // edi\n
    unsigned int v21;  // ebx\n
    unsigned int v22;  // edx\n
    unsigned int v23;  // esi\n
    unsigned int v24;  // edi\n
    unsigned int v25;  // ebx\n
    unsigned int v26;  // edi\n
    unsigned int v27;  // edx\n
    unsigned int v28;  // esi\n
    unsigned int v29;  // edi\n
    unsigned int v30;  // edx\n
    unsigned int v31;  // esi\n
    unsigned int v32;  // edi\n
    unsigned int v33;  // ebx\n
    unsigned int v34;  // edi\n
    unsigned int v35;  // edi\n
    unsigned int v36;  // ebx\n
    unsigned int v37;  // esi\n
    unsigned int v38;  // edx\n
    unsigned int v39;  // edi\n
    unsigned int v40;  // ebx\n
    unsigned int v41;  // ebx\n
    unsigned int v42;  // edx\n
    unsigned int v43;  // edx\n
    unsigned int v44;  // esi\n
    unsigned int v45;  // edi\n
    unsigned int v46;  // esi\n
    unsigned int v47;  // edx\n
    unsigned int v48;  // edx\n
    unsigned int v49;  // edi\n
    unsigned int v50;  // ebx\n
    unsigned int v51;  // edx\n
    unsigned int v52;  // edx\n
    unsigned int v53;  // edx\n
    unsigned int v54;  // ecx\n
    unsigned int v55;  // edx\n
    unsigned int v56;  // ecx\n
\n
    v1 = v0;\n
    v2 = *((v1 + 20));\n
    if (!v2)\n
        return v1;\n
    if (*((v2 + 4)))\n
    {\n
        v3 = *((v1 + 16));\n
        if (v3 && *((v3 + 4)))\n
        {\n
            v6 = 0;\n
            v4 = &size_class_limits;\n
            do\n
            {\n
                if (*(v4) >= *(v2))\n
                {\n
LABEL_402774:\n
                    v7 = *((v2 + 12));\n
                    if (v7)\n
                        *((v7 + 8)) = *((v2 + 8));\n
                    v10 = *((v2 + 8));\n
                    if (v10)\n
                        *((v10 + 12)) = v7;\n
                    if ((&_GLOBAL_OFFSET_TABLE_)[519 + v6] == v2)\n
                        (&_GLOBAL_OFFSET_TABLE_)[519 + v6] = v10;\n
                    *((v2 + 8)) = 0;\n
                    *((v2 + 12)) = 0;\n
                    *((v2 + 4)) = 0;\n
                    v15 = *((v1 + 16));\n
                    v16 = 0;\n
                    v17 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v17) >= *(v15))\n
                        {\n
LABEL_4027d4:\n
                            v20 = *((v15 + 12));\n
                            if (v20)\n
                                *((v20 + 8)) = *((v15 + 8));\n
                            v25 = *((v15 + 8));\n
                            if (v25)\n
                                *((v25 + 12)) = v20;\n
                            if ((&_GLOBAL_OFFSET_TABLE_)[519 + v16] == v15)\n
                                (&_GLOBAL_OFFSET_TABLE_)[519 + v16] = v25;\n
                            *((v15 + 8)) = 0;\n
                            *((v15 + 12)) = 0;\n
                            *((v15 + 4)) = 0;\n
                            v30 = *(v1);\n
                            v31 = 0;\n
                            v32 = &size_class_limits;\n
                            do\n
                            {\n
                                if (*(v32) >= v30)\n
                                {\n
LABEL_402834:\n
                                    v35 = *((v1 + 12));\n
                                    if (v35)\n
                                        *((v35 + 8)) = *((v1 + 8));\n
                                    v41 = *((v1 + 8));\n
                                    if (v41)\n
                                        *((v41 + 12)) = v35;\n
                                    if ((&_GLOBAL_OFFSET_TABLE_)[519 + v31] == v1)\n
                                        (&_GLOBAL_OFFSET_TABLE_)[519 + v31] = v41;\n
                                    *((v1 + 8)) = 0;\n
                                    *((v1 + 12)) = 0;\n
                                    *((v1 + 4)) = 0;\n
                                    v46 = *((v1 + 20));\n
                                    v47 = v30 + *(v46);\n
                                    *(v46) = v47;\n
                                    v48 = v47 + *(*((v1 + 16)));\n
                                    *(v46) = v48;\n
                                    v49 = 0;\n
                                    v50 = &size_class_limits;\n
                                    do\n
                                    {\n
                                        if (*(v50) >= v48)\n
                                        {\n
LABEL_4028a4:\n
                                            *((v46 + 4)) = 1;\n
                                            v52 = (&_GLOBAL_OFFSET_TABLE_)[519 + v49];\n
                                            if (!v52)\n
                                            {\n
                                                (&_GLOBAL_OFFSET_TABLE_)[519 + v49] = v46;\n
                                            }\n
                                            else\n
                                            {\n
                                                *((v46 + 8)) = v52;\n
                                                *(((&_GLOBAL_OFFSET_TABLE_)[519 + v49] + 12)) = v46;\n
                                                (&_GLOBAL_OFFSET_TABLE_)[519 + v49] = v46;\n
                                                *((v46 + 12)) = 0;\n
                                            }\n
                                            v53 = *((v1 + 16));\n
                                            v54 = *((v53 + 20));\n
                                            if (v54)\n
                                                *((v54 + 16)) = *((v53 + 16));\n
                                            v55 = *((v53 + 16));\n
                                            if (v55)\n
                                            {\n
                                                *((v55 + 20)) = v54;\n
                                                goto LABEL_402b86;\n
                                            }\n
                                        }\n
                                        v49 += 1;\n
                                        v50 += 4;\n
                                    } while (v49 != 32);\n
                                    v49 = 32;\n
                                    goto LABEL_4028a4;\n
                                }\n
                                v31 += 1;\n
                                v32 += 4;\n
                            } while (v31 != 32);\n
                            v31 = 32;\n
                            goto LABEL_402834;\n
                        }\n
                        v16 += 1;\n
                        v17 += 4;\n
                    } while (v16 != 32);\n
                    v16 = 32;\n
                    goto LABEL_4027d4;\n
                }\n
                v6 += 1;\n
                v4 += 4;\n
            } while (v6 != 32);\n
            v6 = 32;\n
            goto LABEL_402774;\n
        }\n
    }\n
    if (!v2)\n
        return v1;\n
    if (*((v2 + 4)))\n
    {\n
        v5 = *((v1 + 16));\n
        if (v5 && !*((v5 + 4)))\n
        {\n
            v8 = 0;\n
            v9 = &size_class_limits;\n
            do\n
            {\n
                if (*(v9) >= *(v2))\n
                {\n
                    v12 = *((v2 + 12));\n
                    if (v12)\n
                        *((v12 + 8)) = *((v2 + 8));\n
                    v18 = *((v2 + 8));\n
                    if (v18)\n
                        *((v18 + 12)) = v12;\n
                    if ((&_GLOBAL_OFFSET_TABLE_)[519 + v8] == v2)\n
                        (&_GLOBAL_OFFSET_TABLE_)[519 + v8] = v18;\n
                    *((v2 + 8)) = 0;\n
                    *((v2 + 12)) = 0;\n
                    *((v2 + 4)) = 0;\n
                    v22 = *(v1);\n
                    v23 = 0;\n
                    v24 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v24) >= v22)\n
                        {\n
LABEL_402ae4:\n
                            v26 = *((v1 + 12));\n
                            if (v26)\n
                                *((v26 + 8)) = *((v1 + 8));\n
                            v33 = *((v1 + 8));\n
                            if (v33)\n
                                *((v33 + 12)) = v26;\n
                            if ((&_GLOBAL_OFFSET_TABLE_)[519 + v23] == v1)\n
                                (&_GLOBAL_OFFSET_TABLE_)[519 + v23] = v33;\n
                            *((v1 + 8)) = 0;\n
                            *((v1 + 12)) = 0;\n
                            *((v1 + 4)) = 0;\n
                            v37 = *((v1 + 20));\n
                            v38 = v22 + *(v37);\n
                            *(v37) = v38;\n
                            v39 = 0;\n
                            v40 = &size_class_limits;\n
                            do\n
                            {\n
                                if (*(v40) >= v38)\n
                                {\n
LABEL_402b44:\n
                                    *((v37 + 4)) = 1;\n
                                    v42 = (&_GLOBAL_OFFSET_TABLE_)[519 + v39];\n
                                    if (!v42)\n
                                    {\n
                                        (&_GLOBAL_OFFSET_TABLE_)[519 + v39] = v37;\n
                                        goto LABEL_402b86;\n
                                    }\n
                                    else\n
                                    {\n
                                        *((v37 + 8)) = v42;\n
                                        *(((&_GLOBAL_OFFSET_TABLE_)[519 + v39] + 12)) = v37;\n
                                        (&_GLOBAL_OFFSET_TABLE_)[519 + v39] = v37;\n
                                        *((v37 + 12)) = 0;\n
                                        goto LABEL_402b86;\n
                                    }\n
                                }\n
                                v39 += 1;\n
                                v40 += 4;\n
                            } while (v39 != 32);\n
                            v39 = 32;\n
                            goto LABEL_402b44;\n
                        }\n
                        v23 += 1;\n
                        v24 += 4;\n
                    } while (v23 != 32);\n
                    v23 = 32;\n
                    goto LABEL_402ae4;\n
                }\n
                v8 += 1;\n
                v9 += 4;\n
            } while (v8 != 32);\n
            v8 = 32;\n
LABEL_402b86:\n
            v56 = *((v1 + 20));\n
            if (v56)\n
                *((v56 + 16)) = *((v1 + 16));\n
            v1 = *((v1 + 16));\n
            if (!v1)\n
                return v1;\n
            *((v1 + 20)) = v56;\n
        }\n
    }\n
    if (!v2)\n
        return v1;\n
    if (*((v2 + 4)))\n
        return v1;\n
    v11 = *((v1 + 16));\n
    if (!v11)\n
        return v1;\n
    if (!*((v11 + 4)))\n
        return v1;\n
    v13 = 0;\n
    v14 = &size_class_limits;\n
    do\n
    {\n
        if (*(v14) >= *(v11))\n
        {\n
LABEL_402944:\n
            v19 = *((v11 + 12));\n
            if (v19)\n
                *((v19 + 8)) = *((v11 + 8));\n
            v21 = *((v11 + 8));\n
            if (v21)\n
                *((v21 + 12)) = v19;\n
            if ((&_GLOBAL_OFFSET_TABLE_)[519 + v13] == v11)\n
                (&_GLOBAL_OFFSET_TABLE_)[519 + v13] = v21;\n
            *((v11 + 8)) = 0;\n
            *((v11 + 12)) = 0;\n
            *((v11 + 4)) = 0;\n
            v27 = *(v1);\n
            v28 = 0;\n
            v29 = &size_class_limits;\n
            do\n
            {\n
                if (*(v29) >= v27)\n
                {\n
LABEL_4029a4:\n
                    v34 = *((v1 + 12));\n
                    if (v34)\n
                        *((v34 + 8)) = *((v1 + 8));\n
                    v36 = *((v1 + 8));\n
                    if (v36)\n
                        *((v36 + 12)) = v34;\n
                    if ((&_GLOBAL_OFFSET_TABLE_)[519 + v28] == v1)\n
                        (&_GLOBAL_OFFSET_TABLE_)[519 + v28] = v36;\n
                    *((v1 + 8)) = 0;\n
                    *((v1 + 12)) = 0;\n
                    *((v1 + 4)) = 0;\n
                    v43 = v27 + *(*((v1 + 16)));\n
                    *(v1) = v43;\n
                    v44 = 0;\n
                    v45 = &size_class_limits;\n
                    do\n
                    {\n
                        if (*(v45) >= v43)\n
                        {\n
LABEL_402a04:\n
                            *((v1 + 4)) = 1;\n
                            v51 = (&_GLOBAL_OFFSET_TABLE_)[519 + v44];\n
                            if (!v51)\n
                            {\n
                                (&_GLOBAL_OFFSET_TABLE_)[519 + v44] = v1;\n
                            }\n
                            else\n
                            {\n
                                *((v1 + 8)) = v51;\n
                                *(((&_GLOBAL_OFFSET_TABLE_)[519 + v44] + 12)) = v1;\n
                                (&_GLOBAL_OFFSET_TABLE_)[519 + v44] = v1;\n
                                *((v1 + 12)) = 0;\n
                            }\n
                            v1 = *((v1 + 16));\n
                            goto LABEL_402b86;\n
                        }\n
                        v44 += 1;\n
                        v45 += 4;\n
                    } while (v44 != 32);\n
                    v44 = 32;\n
                    goto LABEL_402a04;\n
                }\n
                v28 += 1;\n
                v29 += 4;\n
            } while (v28 != 32);\n
            v28 = 32;\n
            goto LABEL_4029a4;\n
        }\n
        v13 += 1;\n
        v14 += 4;\n
    } while (v13 != 32);\n
    v13 = 32;\n
    goto LABEL_402944;\n
    goto LABEL_402b86;\n
}\n
", "4205473:sub_402ba1": null, "4205488:cgc_memchr": "int cgc_memchr(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // eax\n
    unsigned int v3;  // edx\n
    void* v4;  // eax, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = v0;\n
        v3 = 0;\n
        do\n
        {\n
            if (v2[v3] == a0)\n
            {\n
                v4 = &v2[v3];\n
                return v4;\n
            }\n
            v3 += 1;\n
        } while (v1 != v3);\n
    }\n
    return 0;\n
}\n
", "4205544:sub_402be8": null, "4205552:cgc_memcmp": "int cgc_memcmp(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // ebx\n
    unsigned int v4;  // eax\n
\n
    v1 = a1;\n
    if (v1)\n
    {\n
        v2 = 0;\n
        do\n
        {\n
            v3 = *((v0 + v2));\n
            v4 = *((a0 + v2));\n
            if (v4 != v3)\n
                return v4 - v3;\n
            v2 += 1;\n
        } while (v1 != v2);\n
    }\n
    return 0;\n
}\n
", "4205613:sub_402c2d": null, "4205616:cgc_memcpy": "int cgc_memcpy(unsigned int v0, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v1;  // ecx\n
    char *v2;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a1;\n
    if (!v1)\n
        return v0;\n
    v2 = 0;\n
    do\n
    {\n
        *((v0 + v2)) = *((a0 + v2));\n
        v2 += 1;\n
    } while (v1 != v2);\n
    return v0;\n
}\n
", "4205665:sub_402c61": null, "4205680:cgc_memset": "int cgc_memset(char *v0, unsigned int a0, unsigned int a1)\n
{\n
    char *v1;  // eax\n
    unsigned int v2;  // ecx\n
    unsigned int v3;  // esi\n
\n
    v1 = v0;\n
    if (!v1)\n
        return 0;\n
    v2 = a1;\n
    if (!v2)\n
        return v0;\n
    v3 = 0;\n
    do\n
    {\n
        v1[v3] = a0;\n
        v3 += 1;\n
    } while (v2 != v3);\n
    return v0;\n
}\n
", "4205728:cgc_output_number_printf": "int cgc_output_number_printf(unsigned int v5, unsigned int a0, unsigned int a1, unsigned int a2, unsigned int a3)\n
{\n
    int tmp_9;  // tmp #9\n
    int tmp_2;  // tmp #2\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    void* v2;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v3;  // [bp-0x18]\n
    char v4;  // [bp-0x14]\n
    unsigned int v6;  // ebp\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // ecx\n
    unsigned int v9;  // eax\n
    char v12;  // al\n
    unsigned int v13;  // esi\n
    unsigned int v14;  // edx\n
    unsigned int v15;  // esi\n
    char v16;  // al\n
\n
    v6 = a3;\n
    v7 = a2;\n
    v8 = a1;\n
    v9 = a0;\n
    v14 = v5;\n
    if (v9 < v8)\n
    {\n
        v3 = v9;\n
        v2 = 0;\n
    }\n
    else\n
    {\n
        tmp_9 = (0 CONCAT v9) /m v8;\n
        v3 = tmp_9 >> 32;\n
        v14 = v5;\n
        v2 = cgc_output_number_printf(v5, (0 CONCAT v9) /m v8, v8, v7 - 1, v6);\n
    }\n
    v12 = v6;\n
    if (v7 > 0 && !v2)\n
    {\n
        tmp_2 = v7;\n
        v13 = v7 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                if (!(v12 & 1))\n
                    v1 = 32;\n
                else\n
                    v1 = 48;\n
                v0 = &v4;\n
                cgc_transmit(v14, &v1, 1);\n
                v12 = v6;\n
                v14 = v5;\n
                tmp_6 = v13;\n
                v13 -= 1;\n
            } while (tmp_6 != 1);\n
        }\n
    }\n
    if (!(v12 & 2))\n
    {\n
        v15 = v3;\n
        v16 = v15 + 87;\n
    }\n
    else\n
    {\n
        v15 = v3;\n
        v16 = v15 + 55;\n
    }\n
    if (v15 < 10)\n
        v16 = v15 + 48;\n
    v1 = v16;\n
    v0 = &v4;\n
    cgc_transmit();\n
    return v2 + 1;\n
}\n
", "4205849:sub_402d19": null, "4205969:sub_402d91": null, "4205984:cgc_fdprintf": "int cgc_fdprintf(unsigned int v5, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x30]\n
    char v1;  // [bp-0x1d]\n
    char v2;  // [bp-0x1c]\n
    unsigned int v3;  // [bp-0x18]\n
    unsigned int v4;  // [bp-0x14]\n
    char v6;  // [bp+0xc]\n
    unsigned int v7;  // [bp+0x10]\n
    unsigned int v8;  // [bp+0x14]\n
    unsigned int v9;  // eax\n
    unsigned int v10;  // edx\n
    unsigned int v11;  // ecx\n
    unsigned int v12;  // eax\n
    unsigned int v13;  // edx\n
    unsigned int v14;  // esi\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
    unsigned int v17;  // esi\n
    unsigned int v18;  // edi\n
\n
    v3 = &v6;\n
    v9 = a0;\n
    if (!*(v9))\n
        return 0;\n
    v10 = &v2;\n
    do\n
    {\n
        a0 = v9 + 1;\n
        *(&v9) = *(v9);\n
        if (v1 == 37)\n
        {\n
            v4 = 0;\n
            while (true)\n
            {\n
                v11 = a0;\n
                a0 = v11 + 1;\n
                v12 = *(v11);\n
                v13 = v12;\n
                if (v13 - 49 >= 9)\n
                    break;\n
                v14 = cgc_strtol(v11, &a0);\n
            }\n
            switch (v13)\n
            {\n
            case 88:\n
                break;\n
            case 89: case 90: case 91: case 92: case 93: case 94: case 95: case 96: case 97: case 98: case 99: case 101: case 102: case 103: case 104: case 105: case 106: case 107: case 108: case 109: case 110: case 111: case 112: case 113: case 114: case 116: case 117: case 118: case 119:\n
LABEL_402e97:\n
                v1 = v12;\n
                goto LABEL_402f4c;\n
            case 100:\n
                v15 = v3;\n
                v3 = v15 + 4;\n
                if (*(v15) < 0)\n
                {\n
LABEL_402f68:\n
                    v1 = 45;\n
                    v0 = &v2;\n
                    cgc_transmit(v15, &v1, 1);\n
                }\n
                goto LABEL_402f96;\n
            case 115:\n
                v16 = v3;\n
                v3 = v16 + 4;\n
                v17 = *(v16);\n
                v10 = &v2;\n
                if (cgc_strlen())\n
                {\n
                    v18 = 0;\n
                    do\n
                    {\n
                        v1 = *((v17 + v18));\n
                        v0 = v10;\n
                        cgc_transmit(v5, &v1, 1);\n
                        v18 += 1;\n
                        v10 = &v2;\n
                    } while (v18 < cgc_strlen(v17, &v1, 1));\n
                }\n
                goto LABEL_402df8;\n
            case 120:\n
                break;\n
            default:\n
                if (v13 == 37)\n
                {\n
                    v1 = 37;\n
LABEL_402f4c:\n
                    v0 = &v2;\n
                    goto LABEL_402f68;\n
                }\n
                if (v13 == 48)\n
                    goto LABEL_0x402e70;\n
                else\n
                    goto LABEL_402e97;\n
            }\n
            v3 += 4;\n
LABEL_402f96:\n
            cgc_output_number_printf(v5, a0, *(&v6), v7, v8);\n
            v10 = &v2;\n
            goto LABEL_402df8;\n
        }\n
        v1 = v9;\n
        v0 = v10;\n
        cgc_transmit(v5, &v1, 1);\n
        v10 = &v2;\n
LABEL_402df8:\n
        v9 = a0;\n
    } while (*(v9));\n
    return 0;\n
}\n
", "4206034:sub_402dd2": null, "4206114:sub_402e22": null, "4206202:sub_402e7a": null, "4206517:sub_402fb5": null, "4206528:cgc_output_number_sprintf": "int cgc_output_number_sprintf(unsigned int *v4, struct struct_0 **a0, unsigned int a1, unsigned int a2, unsigned int a3, unsigned int a4)\n
{\n
    int tmp_11;  // tmp #11\n
    unsigned int v0;  // [bp-0x14]\n
    int tmp_2;  // tmp #2\n
    int tmp_12;  // tmp #12\n
    unsigned int v1;  // [bp-0x10]\n
    unsigned int v2;  // [bp-0xc]\n
    unsigned int v3;  // [bp-0x8]\n
    unsigned int v5;  // ebx\n
    unsigned int v6;  // edi\n
    unsigned int v7;  // esi\n
    unsigned int v8;  // esi\n
    struct struct_0 **v9;  // ebp\n
    unsigned int *v10;  // edi\n
    unsigned int v11;  // eax\n
    unsigned int v13;  // eax\n
    char v14;  // bl\n
    unsigned int v15;  // esi\n
    char v16;  // cl\n
    char v17;  // cl\n
    char *v18;  // eax\n
\n
    v3 = v5;\n
    v2 = v6;\n
    v1 = v7;\n
    v8 = a3;\n
    v13 = a1;\n
    v9 = a0;\n
    v10 = v4;\n
    if (v13 < a2)\n
    {\n
        v14 = a4;\n
        if (v8 <= 0)\n
            goto LABEL_403051;\n
    }\n
    else\n
    {\n
        tmp_11 = (0 CONCAT v13) /m a2;\n
        v11 = (0 CONCAT v13) /m a2;\n
        v0 = tmp_11 >> 32;\n
        cgc_output_number_sprintf(v10, v9, v11, a2, v8 - 1, a4);\n
        v13 = v0;\n
        v14 = a4;\n
        if (v8 <= 0)\n
            goto LABEL_403051;\n
    }\n
    if (v13 < a2)\n
    {\n
        tmp_2 = v8;\n
        v15 = v8 - 1;\n
        if (tmp_2 != 1)\n
        {\n
            do\n
            {\n
                *(v9)->field_0 = ((v14 & 1) * 16) | 32;\n
                *(v9) = *(v9) + 1;\n
                *(v10) = *(v10) + 1;\n
                tmp_12 = v15;\n
                v15 -= 1;\n
            } while (tmp_12 != 1);\n
        }\n
    }\n
LABEL_403051:\n
    v16 = (!(v13 < 10) ? 48 : ((!(v14 & 2)) * 32 + 55));\n
    v17 = v16 + v13;\n
    v18 = *(v9);\n
    *(v18) = v17;\n
    *(v9) = *(v9) + 1;\n
    *(v10) = *(v10) + 1;\n
    return v18;\n
}\n
", "4206720:cgc_sprintf": "int cgc_sprintf(char *v8, struct struct_0 **a0)\n
{\n
    char *v0;  // [bp-0x34], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x30]\n
    unsigned int v2;  // [bp-0x2c]\n
    unsigned int v3;  // [bp-0x28]\n
    unsigned int v4;  // [bp-0x24]\n
    void* v5;  // [bp-0x1c], Other Possible Types: unsigned int\n
    struct struct_1 **v6;  // [bp-0x18], Other Possible Types: unsigned int\n
    void* v7;  // [bp-0x14], Other Possible Types: unsigned int\n
    char v9;  // [bp+0xc]\n
    struct struct_0 **v10;  // eax\n
    char *v11;  // ecx\n
    unsigned int v12;  // eax\n
    struct struct_0 **v13;  // ecx\n
    struct struct_0 **v14;  // dl\n
    void* v15;  // esi, Other Possible Types: unsigned int\n
    char *v16;  // eax, Other Possible Types: unsigned int\n
    unsigned int v17;  // edi\n
    struct struct_1 **v18;  // ecx\n
    char *v19;  // ecx, Other Possible Types: unsigned int\n
    struct struct_1 **v20;  // eax\n
    char *v21;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v22;  // edi\n
    struct struct_1 **v23;  // ecx\n
    char *v24;  // edx\n
    unsigned int v25;  // edi\n
    char *v26;  // eax\n
\n
    v5 = 0;\n
    v6 = &v9;\n
    while (true)\n
    {\n
        v10 = a0;\n
        if (!*(v10))\n
            break;\n
        a0 = v10 + 1;\n
        *(&v10) = *(v10);\n
        if (*(&v10) != 37)\n
        {\n
            v11 = v8;\n
            *(v11) = v10;\n
            v8 = v11 + 1;\n
            v5 += 1;\n
        }\n
        else\n
        {\n
            v7 = 0;\n
            v15 = 0;\n
            while (true)\n
            {\n
                v12 = v15 | 1;\n
                do\n
                {\n
                    v17 = v15;\n
                    v13 = a0;\n
                    a0 = v13 + 1;\n
                    v14 = *(v13);\n
                    v15 = v12;\n
                } while (v14 == 48);\n
                switch (v14)\n
                {\n
                case 37:\n
                    v16 = v8;\n
                    *(v16) = 37;\n
                    goto LABEL_403207;\n
                case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n
                    v4 = 10;\n
                    v7 = cgc_strtol(v13, &a0);\n
                    v15 = v17;\n
                    continue;\n
                case 100:\n
                    v18 = v6;\n
                    v6 = v18 + 1;\n
                    v19 = *(v18);\n
                    if (v19 < 0)\n
                    {\n
                        v24 = v8;\n
                        *(v24) = 45;\n
                        v8 = v24 + 1;\n
                        v5 += 1;\n
                        v19 = -(v19);\n
                    }\n
                    v3 = v17;\n
                    v2 = v7;\n
                    v1 = 10;\n
                    v0 = v19;\n
LABEL_40318e:\n
                    cgc_output_number_sprintf(&v5, &v8, v0, v1, v2, v3);\n
                    break;\n
                case 115:\n
                    v20 = v6;\n
                    v6 = v20 + 1;\n
                    v21 = v8;\n
                    v22 = v5;\n
                    if (cgc_strlen())\n
                    {\n
                        v7 = v22;\n
                        v25 = 0;\n
                        do\n
                        {\n
                            v21[v25] = (*(v20))[v25].field_0;\n
                            v25 += 1;\n
                        } while (v25 < cgc_strlen());\n
                        v21 = &v21[v25];\n
                        v22 = v7 + v25;\n
                    }\n
                    v8 = v21;\n
                    v5 = v22;\n
                    break;\n
                case 88:\n
                    v17 |= 2;\n
                case 120:\n
                    v23 = v6;\n
                    v6 = v23 + 1;\n
                    v3 = v17;\n
                    v2 = v7;\n
                    v1 = 16;\n
                    v0 = &*(v23)->field_0;\n
                    goto LABEL_40318e;\n
                default:\n
                    v16 = v8;\n
                    *(v16) = v14;\n
LABEL_403207:\n
                    v8 = v16 + 1;\n
                    v5 += 1;\n
                    break;\n
                }\n
            }\n
        }\n
    }\n
    v26 = v8;\n
    v8 = v26 + 1;\n
    *(v26) = 0;\n
    return v5;\n
}\n
", "4206756:sub_4030a4": null, "4207152:cgc_realloc": "typedef struct struct_0 {\n
    unsigned int field_-18;\n
} struct_0;\n
\n
int cgc_realloc(struct_0 *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // ebp\n
    struct_0 *v2;  // edi\n
    unsigned int v3;  // eax\n
    unsigned int v4;  // eax\n
    void* v5;  // esi, Other Possible Types: unsigned int\n
\n
    v1 = a0;\n
    v2 = v0;\n
    if (!v2)\n
    {\n
        v5 = cgc_malloc(v1);\n
        return v5;\n
    }\n
    if (!v1)\n
    {\n
        cgc_free(v2);\n
    }\n
    else\n
    {\n
        v3 = cgc_malloc(v1);\n
        if (v3)\n
        {\n
            v5 = v3;\n
            v4 = v2[6].field_-18 - 24;\n
            if (v4 > v1)\n
                v4 = v1;\n
            cgc_memcpy(v5, v2, v4);\n
            cgc_free(v2);\n
            return v5;\n
        }\n
    }\n
    return 0;\n
}\n
", "4207270:sub_4032a6": null, "4207280:cgc_strchr": "int cgc_strchr(char *v0, unsigned int a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    unsigned int v2;  // edx\n
\n
    v1 = v0;\n
    while (true)\n
    {\n
        v2 = *(v1);\n
        if (!v2)\n
            return 0;\n
        v1 += 1;\n
        if (v2 == a0)\n
            return v1;\n
    }\n
}\n
", "4207314:sub_4032d2": null, "4207328:cgc_strcmp": "int cgc_strcmp(char *v0, char *a0)\n
{\n
    char *v1;  // eax, Other Possible Types: unsigned int\n
    char *v2;  // edx\n
    char *v3;  // edx, Other Possible Types: unsigned int\n
    char v4;  // cl\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v4 = *(v2);\n
    if (!*(v2))\n
        return *(a0) - *(v2);\n
    v3 = v2 + 1;\n
    while (*(v1))\n
    {\n
        if (v4 != *(v1))\n
            break;\n
        v1 += 1;\n
        v4 = *(v3);\n
        v3 += 1;\n
        if (!v4)\n
            break;\n
    }\n
    return *(v1) - v4;\n
}\n
", "4207392:cgc_strcpy": "int cgc_strcpy(char *v0, char *a0)\n
{\n
    char *v1;  // ecx\n
    char *v2;  // eax\n
    char v3;  // dl\n
    unsigned int v4;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = a0;\n
    v2 = v0;\n
    v3 = *(v1);\n
    if (!*(v1))\n
    {\n
        v5 = 0;\n
    }\n
    else\n
    {\n
        v4 = 0;\n
        do\n
        {\n
            v5 = v4 + 1;\n
            v2[v4] = v3;\n
            v3 = v1[1 + v4];\n
            v4 = v5;\n
        } while (v3);\n
    }\n
    v2[v5] = 0;\n
    return v0;\n
}\n
", "4207452:sub_40335c": null, "4207456:cgc_strlen": "int cgc_strlen(unsigned int v0)\n
{\n
    unsigned int v1;  // eax\n
    char v2;  // cc_dep1\n
\n
    v1 = -1;\n
    do\n
    {\n
        v2 = *((v0 + v1 + 1));\n
        v1 += 1;\n
    } while (v2);\n
    return v1;\n
}\n
", "4207483:sub_40337b": null, "4207488:cgc_strsep": "int cgc_strsep(struct struct_0 **v0, char *a0)\n
{\n
    struct struct_0 **v1;  // esi\n
    char v2[2];  // edi, Other Possible Types: unsigned int\n
    unsigned int v3;  // al, Other Possible Types: char\n
    unsigned int v4;  // eax\n
    char v6[2];  // edi, Other Possible Types: unsigned int\n
\n
    v1 = v0;\n
    v2 = *(v1);\n
    if (!v2)\n
        return 0;\n
    v3 = v2[0];\n
    if (v2[0])\n
    {\n
        while (true)\n
        {\n
            v4 = cgc_strchr(a0, v3);\n
            if (v4)\n
                break;\n
            v3 = *((v2 + 1));\n
            v2 += 1;\n
            if (!v3)\n
                break;\n
        }\n
    }\n
    if (!*(v2))\n
    {\n
        v6 = 0;\n
    }\n
    else\n
    {\n
        *(v2) = 0;\n
        v6 = v2 + 1;\n
    }\n
    *(v1) = v6;\n
    return *(v1);\n
}\n
", "4207598:sub_4033ee": null, "4207600:cgc_strtol": "int cgc_strtol(char *v3, unsigned int *a0, unsigned int a1)\n
{\n
    char *v0;  // [bp-0x1c], Other Possible Types: unsigned int\n
    unsigned int v1;  // [bp-0x18]\n
    unsigned int v2;  // [bp-0x14]\n
    unsigned int v4;  // esi\n
    unsigned int *v5;  // ecx, Other Possible Types: unsigned int\n
    char *v6;  // edx, Other Possible Types: unsigned int\n
    void* v7;  // eax, Other Possible Types: unsigned int\n
    char *v8;  // ebx, Other Possible Types: unsigned int\n
    char v9;  // bl\n
    char *v10;  // eax, Other Possible Types: unsigned int\n
    unsigned int v11;  // edx\n
    unsigned int v12;  // ecx\n
    void* v13;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v14;  // edi\n
    unsigned int v15;  // ecx\n
    unsigned int v16;  // ecx\n
    char *v17;  // esi, Other Possible Types: unsigned int\n
\n
    v4 = a1;\n
    v5 = a0;\n
    v6 = v3;\n
    v7 = 0;\n
    if (v4 > 36)\n
    {\n
        v8 = 0;\n
        v0 = v6;\n
    }\n
    else\n
    {\n
        v8 = 0;\n
        v0 = v6;\n
        if (v4 != 1)\n
        {\n
            v10 = v6;\n
            while (true)\n
            {\n
                v9 = *(v10);\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)) && v9 != 32)\n
                    break;\n
                v10 += 1;\n
            }\n
            v11 = 0;\n
            *(&v11) = v9 == 45;\n
            v12 = (*((v10 + v11)) == 43) + v11;\n
            v0 = v10 + v12;\n
            if (!v4)\n
            {\n
                v4 = 10;\n
                if (*(v0) == 48)\n
                {\n
                    if ((*((v10 + v12 + 1)) | 32) == 120)\n
                    {\n
                        v0 = v10 + v12 + 2;\n
                        v4 = 16;\n
                    }\n
                    else\n
                    {\n
                        v0 = v10 + v12 + 1;\n
                        v4 = 8;\n
                    }\n
                }\n
            }\n
            else if (v4 == 16)\n
            {\n
                v4 = 16;\n
                if (*(v0) == 48 && (*((v10 + v12 + 1)) | 32) == 120)\n
                    v0 = v10 + v12 + 2;\n
            }\n
            v13 = 0;\n
            v14 = 0;\n
            v1 = v4;\n
            while (true)\n
            {\n
                v15 = *((v0 + v14));\n
                if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                {\n
                    if (!([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>)))\n
                        break;\n
                    v2 = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, ((cl<1> & 0xdf<8>) - 0x41<8>)), 0x1a<32>, 0x0<32>);\n
                }\n
                if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>))\n
                {\n
                    v16 = v15 - 48;\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                else if (v2)\n
                {\n
                    v16 = v15 + [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (Conv(32->8, ecx<4>) - 0x41<8>)), 0x1a<32>, 0x0<32>) * 32 - 87;\n
                    v4 = v1;\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                else\n
                {\n
                    v16 = [D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (cl<1> - 0x30<8>)), 0xa<32>, 0x0<32>);\n
                    if (v16 >= v4)\n
                        break;\n
                }\n
                v13 = v4 * v13 + v16;\n
                v14 += 1;\n
            }\n
            v7 = -(v13);\n
            if (v9 != 45)\n
                v7 = v13;\n
            v8 = v14;\n
            v0 += v14;\n
            v5 = a0;\n
            v6 = v3;\n
        }\n
    }\n
    if (!v5)\n
        return v7;\n
    v17 = v0;\n
    if (!v8)\n
        v17 = v6;\n
    *(v5) = v17;\n
    return v7;\n
}\n
", "4207647:sub_40341f": null, "4207886:sub_40350e": null, "4207991:sub_403577": null, "4208000:cgc_strtoul": "int cgc_strtoul(char *v0, unsigned int *a0, unsigned int a1)\n
{\n
    return cgc_strtol(v0, a0, a1);\n
}\n
", "4208041:sub_4035a9": null, "4208048:cgc_print_menu": "int cgc_print_menu()\n
{\n
    cgc_fdprintf(1, \"All commands begin with '**' and may be entered at any time\\n
\");\n
    cgc_fdprintf(1, \"**prev <Return to the previous page>\\n
\");\n
    cgc_fdprintf(1, \"**next <Move to the next page>\\n
\");\n
    cgc_fdprintf(1, \"**update [id] <Update field, ex: \\\"Update First Name\\\">\\n
\");\n
    cgc_fdprintf(1, \"**help <Print this dialogue>\\n
\");\n
    return cgc_fdprintf(1, \"**exit <Exit application>\\n
\");\n
}\n
", "4208171:sub_40362b": null, "4208176:main": "extern char cgc_g_page_idx;\n
extern unsigned int g_4055ea;\n
extern unsigned int g_405610;\n
extern unsigned int g_405630;\n
extern unsigned int g_405667;\n
extern unsigned int g_405685;\n
extern unsigned int g_4057fc;\n
\n
int main()\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
\n
    cgc_fdprintf(1, \"\\n
\\n
\");\n
    cgc_fdprintf(1, \"Thanks for your interest in the Sea Eye Association.\\n
\");\n
    cgc_fdprintf(1, \"In order to be considered for the job complete the preliminary online background check\\n
\");\n
    cgc_fdprintf(1, \"Due to the secure nature of the position you are applying for you may be asked to\\n
\");\n
    cgc_fdprintf(1, \"submit additional paperwork after your preliminary background check has been approved.\\n
\");\n
    cgc_fdprintf(1, \"Thank you for your cooperation\\n
\");\n
    cgc_g_page_idx = 0;\n
    v0 = \"All commands begin with '**' and may be entered at any time\\n
\";\n
    v2 = *(&_GLOBAL_OFFSET_TABLE_.padding_0[168 + 4 * _GLOBAL_OFFSET_TABLE_.padding_0[2204]])();\n
}\n
", "4208331:sub_4036cb": null, "4208494:sub_40376e": null, "4208559:sub_4037af": null, "4208560:cgc_fill_out_form": "typedef struct struct_1 {\n
    unsigned int field_-c;\n
    char field_-8;\n
    char padding_-7[3];\n
    unsigned int field_-4;\n
    unsigned int field_0;\n
    struct struct_0 *field_4;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern unsigned int g_4056a2;\n
extern char g_user_resp;\n
\n
int cgc_fill_out_form(unsigned int v4, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x19]\n
    unsigned int v2;  // [bp-0x18], Other Possible Types: char\n
    unsigned int v3;  // [bp-0x14]\n
    unsigned int v5;  // ecx\n
    unsigned int v6;  // edx\n
    void* v7;  // ebp, Other Possible Types: unsigned int\n
    struct_1 *v8;  // edi\n
    char *v9;  // eax\n
    unsigned int v10;  // eax\n
    unsigned int v11;  // eax\n
\n
    v5 = a0;\n
    if (v5 <= 0)\n
        return 0;\n
    v6 = v4;\n
    v7 = 0;\n
    v11 = \"%s%s: \";\n
    v3 = \"%s%s: \";\n
    do\n
    {\n
        v1 = 1;\n
        if (!*((v6 + (*(&v2) << 3) + 16)))\n
        {\n
            v2 = 3 * v7;\n
            v8 = v6 + *(&v2) * 8 + 16;\n
            do\n
            {\n
                v0 = v8->field_0;\n
                cgc_fdprintf(1, v3);\n
                v11 = cgc_get_response();\n
                v1 = v11 == 1;\n
                if (v11 != 1)\n
                {\n
LABEL_4038a3:\n
                    v5 = a0;\n
                    v6 = v4;\n
                    goto LABEL_4038ab;\n
                }\n
                if (!v8->field_-4 && !cgc_memcmp(&g_user_resp, &g_4056a2, 1))\n
                {\n
                    v10 = cgc_calloc(1, *((v6 + v2 * 8 + 12)));\n
                    v6 = v4;\n
                    v8->field_-c = v10;\n
                    v11 = 1;\n
                    v1 = 1;\n
                    v5 = a0;\n
                    if (!v1)\n
                        return 1;\n
                }\n
                if (!*(&v8->field_-8)(&g_user_resp))\n
                {\n
                    v9 = cgc_calloc(1, *(&v8->field_-8));\n
                    v8->field_-c = v9;\n
                    cgc_strcpy(v9, &g_user_resp);\n
                }\n
            } while (!v8->field_-c);\n
            v11 = 1;\n
            goto LABEL_4038a3;\n
            continue;\n
        }\n
LABEL_4038ab:\n
        if (!v1)\n
            return v11;\n
        v7 += 1;\n
    } while (v7 != v5);\n
}\n
", "4208645:sub_403805": null, "4208893:sub_4038fd": null, "4208896:cgc_update_field": "typedef struct struct_2 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    unsigned int field_10;\n
    struct struct_0 *field_14;\n
} struct_2;\n
\n
typedef struct struct_1 {\n
    unsigned int field_0;\n
    unsigned int field_4;\n
    char field_8;\n
    char padding_9[3];\n
    unsigned int field_c;\n
    char *field_10;\n
    struct struct_0 *field_14;\n
} struct_1;\n
\n
typedef struct struct_0 {\n
    struct struct_0 *field_0;\n
} struct_0;\n
\n
extern char g_4056a2;\n
extern char g_user_resp;\n
\n
int cgc_update_field(unsigned int v7, struct_2 *a0, unsigned int a1)\n
{\n
    int tmp_6;  // tmp #6\n
    unsigned int v0;  // [bp-0x30]\n
    unsigned int v1;  // [bp-0x28]\n
    unsigned int v2;  // [bp-0x24]\n
    unsigned int v3;  // [bp-0x20]\n
    unsigned int v4;  // [bp-0x1c]\n
    unsigned int v5;  // [bp-0x18]\n
    unsigned int v6;  // [bp-0x14]\n
    unsigned int v8;  // edi\n
    unsigned int v9;  // esi\n
    unsigned int v10;  // ebp\n
    unsigned int v11;  // edi\n
    char *v13;  // ebp\n
    struct_1 *v14;  // esi, Other Possible Types: unsigned int\n
    unsigned int v15;  // eax\n
    unsigned int v16;  // eax\n
\n
    v8 = v7;\n
    v9 = \"Bad field\\n
\";\n
    if (v8 && cgc_strlen(v8))\n
    {\n
        v16 = a1;\n
        v9 = \"Could not find specified field\\n
\";\n
        if (v16 > 0)\n
        {\n
            v2 = \"Could not find specified field\\n
\";\n
            v14 = a0;\n
            v4 = \"%s%s: \";\n
            v3 = &g_4056a2;\n
            v5 = &g_user_resp;\n
            do\n
            {\n
                v6 = v16;\n
                v10 = v8;\n
                if (cgc_strlen(v8) != cgc_strlen(*(v14)))\n
                {\n
LABEL_403a40:\n
                    if (!1)\n
                        goto LABEL_403aaf;\n
                    goto LABEL_403a46;\n
                }\n
                v11 = *(v14);\n
                v8 = v10;\n
                v13 = v5;\n
                if (!(!cgc_memcmp(v10, v11, cgc_strlen(v11))))\n
                    goto LABEL_403a40;\n
                v0 = *((v14 + 4));\n
                cgc_fdprintf(1, v4);\n
                if (cgc_get_response() != 1)\n
                {\n
                    cgc_fdprintf(1, \"Bad command\\n
\");\n
                    v1 = -2;\n
                    goto LABEL_403aaf;\n
                }\n
                if (*((v14 + 8)))\n
                {\n
LABEL_403a0d:\n
                    if (*((v14 + 20))(v13))\n
                    {\n
                        cgc_fdprintf(1, \"Bad input.\\n
\");\n
                        v1 = -0x4;\n
                        goto LABEL_403aaf;\n
                    }\n
                    else\n
                    {\n
                        cgc_memset(*((v14 + 16)), 0, *((v14 + 12)));\n
                        cgc_strcpy(*((v14 + 16)), v13);\n
                        goto LABEL_403aa4;\n
                    }\n
                }\n
                if (!(!cgc_memcmp(v13, v3, 1)))\n
                    goto LABEL_403a0d;\n
                cgc_memset(*((v14 + 16)), 0, *((v14 + 12)));\n
LABEL_403aa4:\n
                v1 = 0;\n
LABEL_403aaf:\n
                return v1;\n
LABEL_403a46:\n
                v14 += 24;\n
                v15 = v6;\n
                tmp_6 = v15;\n
                v16 = v15 - 1;\n
            } while (tmp_6 != 1);\n
            v9 = v2;\n
        }\n
    }\n
    cgc_fdprintf(1, v9);\n
    return -1;\n
}\n
", "4209212:sub_403a3c": null, "4209370:sub_403ada": null, "4209376:cgc_print_page": "typedef struct struct_0 {\n
    unsigned int field_-10;\n
    char padding_-c[12];\n
    unsigned int field_0;\n
} struct_0;\n
\n
int cgc_print_page(unsigned int v2, unsigned int a0, unsigned int a1)\n
{\n
    unsigned int v0;  // [bp-0x24]\n
    int tmp_8;  // tmp #8\n
    unsigned int v1;  // [bp-0x20]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    struct_0 *v5;  // edi, Other Possible Types: unsigned int\n
\n
    v3 = a1;\n
    v4 = v2;\n
    if (v4)\n
    {\n
        v0 = v4;\n
        v4 = cgc_fdprintf(1, \"%s\");\n
    }\n
    if (v3 <= 0)\n
        return v4;\n
    v5 = a0 + 16;\n
    do\n
    {\n
        v1 = *(v5);\n
        v0 = *((v5 - 16));\n
        v4 = cgc_fdprintf(1, \"%s=%s\\n
\");\n
        v5 += 24;\n
        tmp_8 = v3;\n
        v3 -= 1;\n
    } while (tmp_8 != 1);\n
    return v4;\n
}\n
", "4209488:cgc_form": "typedef struct struct_0 {\n
    char padding_0[196];\n
    char field_c4;\n
} struct_0;\n
\n
typedef struct struct_1 {\n
    char padding_0[16];\n
    unsigned int field_10;\n
} struct_1;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_g_page_idx;\n
extern char g_last_page_completed;\n
extern char g_user_resp;\n
\n
int cgc_form(unsigned int v2, struct_1 *a0, unsigned int a1)\n
{\n
    int tmp_5;  // tmp #5\n
    int tmp_8;  // tmp #8\n
    unsigned int v0;  // [bp-0x20]\n
    char v1[2];  // [bp-0x14]\n
    struct_0 *v3;  // ebx\n
    unsigned int v4;  // edi\n
    struct_1 *v5;  // esi\n
    unsigned int *v6;  // edx, Other Possible Types: unsigned int\n
    unsigned int v7;  // ecx, Other Possible Types: char\n
    unsigned int v8;  // eax\n
    unsigned int v9;  // esi\n
    unsigned int *v10;  // esi, Other Possible Types: unsigned int\n
    unsigned int v11;  // ebp\n
\n
    v3 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    if (g_last_page_completed + 1 < cgc_g_page_idx)\n
    {\n
        cgc_fdprintf(1, \"You must complete the previous page before proceeding to this page\\n
\");\n
        v3[11].padding_0[37] = v3->field_c4 + 1;\n
        return -1;\n
    }\n
    v4 = a1;\n
    v5 = a0;\n
    v7 = v4;\n
    if (v4)\n
    {\n
        if (v5->field_10)\n
        {\n
            v6 = v5 + 2;\n
            v7 = 1;\n
            do\n
            {\n
                if (v4 == v7)\n
                {\n
                    *(&v7) = [D] x86g_calculate_condition(0x7<32>, 0x6<32>, 0x1<32>, ecx<4>, 0x0<32>);\n
                    goto LABEL_403bf7;\n
                }\n
                v7 += 1;\n
                tmp_5 = *(v6);\n
                v6 += 24;\n
            } while (tmp_5);\n
            *(&v7) = v7 - 1 < v4;\n
        }\n
        g_last_page_completed = cgc_g_page_idx - 1;\n
    }\n
LABEL_403bf7:\n
    if (g_last_page_completed + 1 != cgc_g_page_idx && !v7)\n
        goto LABEL_403c30;\n
    v8 = cgc_fill_out_form(v5, v4);\n
    if (v8 == 4)\n
    {\n
        cgc_fdprintf(1, \"Cannot update field until all fields are inputted\\n
\");\n
        return 4;\n
    }\n
    if (v8)\n
        return v8;\n
    v3->field_c4 = v3->field_c4 + 1;\n
LABEL_403c30:\n
    if (v2)\n
        cgc_fdprintf(1, \"%s\");\n
    if (v4 > 0)\n
    {\n
        v10 = &a0->field_10;\n
        v11 = a1;\n
        do\n
        {\n
            v0 = *(v10);\n
            cgc_fdprintf(1, \"%s=%s\\n
\");\n
            v10 += 24;\n
            tmp_8 = v11;\n
            v11 -= 1;\n
        } while (tmp_8 != 1);\n
    }\n
    cgc_fdprintf(1, \"\\n
Type **next to continue\\n
\");\n
    v9 = cgc_get_response();\n
    if (v9 != 4)\n
        return v9;\n
    *(&v1) = &g_user_resp;\n
    cgc_strsep(v1, \" \");\n
    if (cgc_update_field(v1, a0, a1))\n
    {\n
        cgc_fdprintf(1, \"Update Unsuccessful\\n
\");\n
        return v9;\n
    }\n
    return v9;\n
}\n
", "4209946:sub_403d1a": null, "4209952:cgc_candidate_info": "extern void applicant_id;\n
\n
int cgc_candidate_info()\n
{\n
    cgc_fdprintf(1, \"\\n
Candidate Info Form\\n
\");\n
    return cgc_form(\"\\n
*********Candidate Info:*********\\n
\", &applicant_id, 13);\n
}\n
", "4210014:sub_403d5e": null, "4210016:cgc_contact": "extern void contact_info;\n
\n
int cgc_contact()\n
{\n
    cgc_fdprintf(1, \"\\n
Contact Info Form\\n
\");\n
    return cgc_form(\"\\n
*********Contact Info:*********\\n
\", &contact_info, 4);\n
}\n
", "4210078:sub_403d9e": null, "4210080:cgc_address": "extern void current_address;\n
\n
int cgc_address()\n
{\n
    cgc_fdprintf(1, \"\\n
Address Form\\n
\");\n
    return cgc_form(\"\\n
*********Address:*********\\n
\", &current_address, 7);\n
}\n
", "4210142:sub_403dde": null, "4210144:cgc_education": "extern void highest_education;\n
\n
int cgc_education()\n
{\n
    cgc_fdprintf(1, \"\\n
Education Form\\n
\");\n
    return cgc_form(\"\\n
*********Highest Education:*********\\n
\", &highest_education, 12);\n
}\n
", "4210206:sub_403e1e": null, "4210208:cgc_employment_history": "extern void last_employer;\n
\n
int cgc_employment_history()\n
{\n
    cgc_fdprintf(1, \"\\n
Employment Form\\n
\");\n
    return cgc_form(\"\\n
*********Most Recent Employer:*********\\n
\", &last_employer, 14);\n
}\n
", "4210270:sub_403e5e": null, "4210272:cgc_final_screening": "extern void screening_questions;\n
\n
int cgc_final_screening()\n
{\n
    cgc_fdprintf(1, \"\\n
Final Questions\\n
\");\n
    return cgc_form(\"\\n
*********Final Screening:*********\\n
\", &screening_questions, 2);\n
}\n
", "4210334:sub_403e9e": null, "4210336:cgc_finished": "typedef struct struct_0 {\n
    char padding_0[196];\n
    char field_c4;\n
} struct_0;\n
\n
extern struct_0 _GLOBAL_OFFSET_TABLE_;\n
extern char cgc_g_page_idx;\n
extern char g_last_page_completed;\n
\n
int cgc_finished()\n
{\n
    struct_0 *v1;  // ebx\n
\n
    v1 = &_GLOBAL_OFFSET_TABLE_.padding_0[0];\n
    cgc_fdprintf(1, \"\\n
\\n
You have completed your application with the Sea Eye Association.\\n
\");\n
    cgc_fdprintf(1, \"You may review the form. Navigate through the application with **prev and **next.\\n
\");\n
    cgc_fdprintf(1, \"Once your are satisfied type **exit to exit and submit the form\\n
\");\n
    cgc_fdprintf(1, \"If you wish to discard your application, please use Control-C\\n
\");\n
    if (g_last_page_completed + 1 >= cgc_g_page_idx)\n
        return cgc_get_response();\n
    cgc_fdprintf(1, \"You must complete the previous page before proceeding to this page\\n
\");\n
    v1[11].padding_0[37] = v1->field_c4 + 1;\n
    return -1;\n
}\n
", "4210495:sub_403f3f": null, "4210496:cgc_get_response": "extern unsigned int g_405b7d;\n
extern char g_408bd2;\n
extern unsigned int g_408bd3;\n
extern char g_user_resp;\n
\n
int cgc_get_response()\n
{\n
    unsigned int v0;  // [bp-0x20]\n
    char v1;  // [bp-0x14]\n
    unsigned int v3;  // esi\n
    char *v4;  // edi, Other Possible Types: unsigned int\n
\n
    v3 = 0;\n
    v4 = &g_user_resp;\n
    while (true)\n
    {\n
        v0 = &v1;\n
        if (cgc_receive(0, v4, 1))\n
            break;\n
        if (!*(&v1))\n
            break;\n
        if (*(v4) == 10)\n
            break;\n
        v4 += 1;\n
        v3 += 1;\n
        if (v3 == 0x400)\n
        {\n
            v3 = 0x400;\n
            break;\n
        }\n
    }\n
    if (v3 == 0x400 && *(v4) != 10)\n
        return -1;\n
    if (*(v4) != 10)\n
        return -2;\n
    *(v4) = 0;\n
    if (!(v3 >= 3 && g_user_resp == 42 && g_408bd2 == 42))\n
        return 1;\n
    if (!cgc_memcmp(&g_408bd3, \"prev\", cgc_strlen(\"prev\")))\n
    {\n
        return 2;\n
    }\n
    else if (!cgc_memcmp(&g_408bd3, \"next\", cgc_strlen(\"next\")))\n
    {\n
        return 3;\n
    }\n
    else if (!cgc_memcmp(&g_408bd3, \"update \", cgc_strlen(\"update \")))\n
    {\n
        return 4;\n
    }\n
    else if (!cgc_memcmp(&g_408bd3, \"help\", cgc_strlen(\"help\")))\n
    {\n
        return 5;\n
    }\n
    else if (!cgc_memcmp(&g_408bd3, \"cgc_exit\", cgc_strlen(&g_405b7d)))\n
    {\n
        return 6;\n
    }\n
}\n
", "4210880:cgc_verify_hair": "extern unsigned int valid_hair_colors;\n
\n
int cgc_verify_hair(unsigned int v0)\n
{\n
    unsigned int *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // esi\n
\n
    v1 = &valid_hair_colors;\n
    v2 = 14;\n
    while (true)\n
    {\n
        if (cgc_strlen(*(v1)) == cgc_strlen(v0))\n
        {\n
            v3 = *(v1);\n
            if (!cgc_memcmp(v3, v0, cgc_strlen(v3)))\n
                break;\n
        }\n
        v1 += 4;\n
        v2 -= 1;\n
    }\n
    return 0;\n
}\n
", "4210999:sub_404137": null, "4211008:cgc_verify_eye": "extern unsigned int valid_eye_colors;\n
\n
int cgc_verify_eye(unsigned int v0)\n
{\n
    unsigned int *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // esi\n
\n
    v1 = &valid_eye_colors;\n
    v2 = 10;\n
    while (true)\n
    {\n
        if (cgc_strlen(*(v1)) == cgc_strlen(v0))\n
        {\n
            v3 = *(v1);\n
            if (!cgc_memcmp(v3, v0, cgc_strlen(v3)))\n
                break;\n
        }\n
        v1 += 4;\n
        v2 -= 1;\n
    }\n
    return 0;\n
}\n
", "4211127:sub_4041b7": null, "4211136:cgc_verify_suffix": "extern unsigned int valid_suffixes;\n
\n
int cgc_verify_suffix(unsigned int v0)\n
{\n
    unsigned int *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // esi\n
\n
    v1 = &valid_suffixes;\n
    v2 = 12;\n
    while (true)\n
    {\n
        if (cgc_strlen(*(v1)) == cgc_strlen(v0))\n
        {\n
            v3 = *(v1);\n
            if (!cgc_memcmp(v3, v0, cgc_strlen(v3)))\n
                break;\n
        }\n
        v1 += 4;\n
        v2 -= 1;\n
    }\n
    return 0;\n
}\n
", "4211255:sub_404237": null, "4211264:cgc_verify_state": "extern unsigned int valid_states;\n
\n
int cgc_verify_state(unsigned int v0)\n
{\n
    unsigned int *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // esi\n
\n
    v1 = &valid_states;\n
    v2 = 51;\n
    while (true)\n
    {\n
        if (cgc_strlen(*(v1)) == cgc_strlen(v0))\n
        {\n
            v3 = *(v1);\n
            if (!cgc_memcmp(v3, v0, cgc_strlen(v3)))\n
                break;\n
        }\n
        v1 += 4;\n
        v2 -= 1;\n
    }\n
    return 0;\n
}\n
", "4211383:sub_4042b7": null, "4211392:cgc_verify_education": "extern unsigned int education_levels;\n
\n
int cgc_verify_education(unsigned int v0)\n
{\n
    unsigned int *v1;  // edi, Other Possible Types: unsigned int\n
    unsigned int v2;  // ebp\n
    unsigned int v3;  // esi\n
\n
    v1 = &education_levels;\n
    v2 = 3;\n
    while (true)\n
    {\n
        if (cgc_strlen(*(v1)) == cgc_strlen(v0))\n
        {\n
            v3 = *(v1);\n
            if (!cgc_memcmp(v3, v0, cgc_strlen(v3)))\n
                break;\n
        }\n
        v1 += 4;\n
        v2 -= 1;\n
    }\n
    return 0;\n
}\n
", "4211511:sub_404337": null, "4211520:cgc_verify_month": "int cgc_verify_month(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    char *v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    if (cgc_strlen(v5) + 1 == a0)\n
        return -(cgc_strtol(v5, NULL, 10) - 13 < -12);\n
    return -1;\n
}\n
", "4211597:sub_40438d": null, "4211600:cgc_verify_day": "int cgc_verify_day(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    char *v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    if (cgc_strlen(v5) + 1 == a0)\n
        return -(cgc_strtol(v5, NULL, 10) - 32 < -31);\n
    return -1;\n
}\n
", "4211677:sub_4043dd": null, "4211680:cgc_verify_year": "int cgc_verify_year(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    char *v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    if (cgc_strlen(v5) + 1 == a0)\n
        return -(cgc_strtol(v5, NULL, 10) - 2015 < -115);\n
    return -1;\n
}\n
", "4211759:sub_40442f": null, "4211760:cgc_verify_height_feet": "int cgc_verify_height_feet(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    char *v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    if (cgc_strlen(v5) + 1 <= a0)\n
        return -(cgc_strtol(v5, NULL, 10) - 10 < -9);\n
    return -1;\n
}\n
", "4211837:sub_40447d": null, "4211840:cgc_verify_height_inches": "int cgc_verify_height_inches(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    char *v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    if (cgc_strlen(v5) + 1 <= a0)\n
        return -1 + (cgc_strtol(v5, NULL, 10) < 12);\n
    return -1;\n
}\n
", "4211919:sub_4044cf": null, "4211920:cgc_verify_weight": "int cgc_verify_weight(unsigned int v2, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0xc]\n
    unsigned int v1;  // [bp-0x8]\n
    unsigned int v3;  // esi\n
    unsigned int v4;  // eax\n
    char *v5;  // esi\n
\n
    v1 = v3;\n
    v0 = v4;\n
    v5 = v2;\n
    if (cgc_strlen(v5) + 1 <= a0)\n
        return -(cgc_strtol(v5, NULL, 10) - 501 < -451);\n
    return -1;\n
}\n
", "4212001:sub_404521": null, "4212016:cgc_verify_sex": "int cgc_verify_sex(char *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) + 1 == a0)\n
        return -(*(v3) != 70 & *(v3) != 77);\n
    return -1;\n
}\n
", "4212084:sub_404574": null, "4212096:cgc_verify_yes_no": "int cgc_verify_yes_no(char *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x8]\n
    unsigned int v2;  // esi\n
    char *v3;  // esi\n
\n
    v0 = v2;\n
    v3 = v1;\n
    if (cgc_strlen(v3) + 1 == a0)\n
        return -(*(v3) != 78 & *(v3) != 89);\n
    return -1;\n
}\n
", "4212164:sub_4045c4": null, "4212176:cgc_verify_name": "int cgc_verify_name(char *v0, unsigned int a0)\n
{\n
    char *v1;  // ebp\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // esi\n
\n
    v1 = v0;\n
    v2 = cgc_strlen(v0);\n
    v3 = v2;\n
    v4 = v2 + 1;\n
    if (v4 > a0)\n
    {\n
        return -1;\n
    }\n
    else if (v4 < 2)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        if (v3 <= 0)\n
            return 0;\n
        v5 = 0;\n
        do\n
        {\n
            if (!cgc_isalpha(v1[v5]) && v1[v5] != 39)\n
                return -1;\n
            v5 += 1;\n
        } while (v3 != v5);\n
    }\n
}\n
", "4212236:sub_40460c": null, "4212288:cgc_verify_street": "int cgc_verify_street(char *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x9c]\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // edi\n
    unsigned int v4;  // ecx\n
    unsigned int v5;  // ebp\n
    unsigned int v6;  // eax\n
    unsigned int v7;  // esi\n
\n
    v2 = cgc_strlen(v1);\n
    v3 = v2;\n
    v4 = v2 + 1;\n
    if (v4 > a0)\n
    {\n
        return -1;\n
    }\n
    else if (v4 < 5)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        if (v3 <= 0)\n
            return 0;\n
        v7 = 0;\n
        do\n
        {\n
            v5 = v1[v7];\n
            if (!cgc_isalnum(v5))\n
            {\n
                v6 = v5;\n
                *(&v6) = v5 - 32;\n
                if (!([D] x86g_calculate_condition(0x6<32>, 0x4<32>, Conv(8->32, (Conv(32->8, ebp<4>) - 0x20<8>)), 0xc<32>, 0x0<32>)))\n
                {\n
LABEL_4046b2:\n
                    return -1;\n
                }\n
                v0 = 4225;\n
                if (!((*(&v0 + ((v6 & 31) >> 3)) >> (v6 & 31 & 7) & 1 & 1) == 1))\n
                    goto LABEL_4046b2;\n
            }\n
            v7 += 1;\n
        } while (v3 != v7);\n
    }\n
}\n
", "4212348:sub_40467c": null, "4212419:sub_4046c3": null, "4212432:cgc_verify_city": "int cgc_verify_city(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edi\n
    unsigned int v3;  // ecx\n
    unsigned int v4;  // eax\n
    char v5;  // ebp\n
    unsigned int v6;  // esi\n
\n
    v1 = cgc_strlen(v0);\n
    v2 = v1;\n
    v3 = v1 + 1;\n
    if (v3 > a0)\n
    {\n
        return -1;\n
    }\n
    else if (v3 < 5)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        if (v2 <= 0)\n
            return 0;\n
        v6 = 0;\n
        do\n
        {\n
            v4 = v0[v6];\n
            v5 = v4;\n
            if (!cgc_isalpha(v4) && v5 != 39 && v5 != 32)\n
                return -1;\n
            v6 += 1;\n
        } while (v2 != v6);\n
    }\n
}\n
", "4212492:sub_40470c": null, "4212554:sub_40474a": null, "4212560:cgc_verify_zip_code": "int cgc_verify_zip_code(char *v0, unsigned int a0)\n
{\n
    char *v1;  // ebp\n
    unsigned int v2;  // eax\n
    unsigned int v3;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = v0;\n
    v2 = cgc_strlen(v0);\n
    v3 = v2;\n
    if (v2 + 1 != a0)\n
    {\n
        return -1;\n
    }\n
    else if (*(v1) == 48)\n
    {\n
        return -1;\n
    }\n
    else\n
    {\n
        if (v3 <= 0)\n
            return 0;\n
        v5 = 0;\n
        do\n
        {\n
            if (!cgc_isdigit(v1[v5]))\n
                return -1;\n
            v5 += 1;\n
        } while (v3 != v5);\n
    }\n
}\n
", "4212665:sub_4047b9": null, "4212672:cgc_verify_gpa": "int cgc_verify_gpa(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edi\n
    unsigned int v4;  // eax\n
    void* v5;  // ecx\n
    unsigned int v6;  // esi\n
\n
    v1 = cgc_strlen(v0);\n
    v2 = v1;\n
    if (v1 + 1 > a0)\n
        return -1;\n
    if (v2 <= 0)\n
        return 0;\n
    v6 = 0;\n
    do\n
    {\n
        v4 = v0[v6];\n
        if (v6 == 1)\n
        {\n
            v5 = 0;\n
            *(&v5) = v4 == 46;\n
            if (!(v5 + (v5 << 1) + 1 & -5))\n
                continue;\n
            goto LABEL_404852;\n
        }\n
        else if (!cgc_isdigit(v4))\n
        {\n
LABEL_404852:\n
            return -1;\n
        }\n
        v6 += 1;\n
    } while (v2 != v6);\n
}\n
", "4212769:sub_404821": null, "4212831:sub_40485f": null, "4212832:cgc_verify_email": "int cgc_verify_email(char *v1, unsigned int a0)\n
{\n
    unsigned int v0;  // [bp-0x14]\n
    unsigned int v2;  // eax\n
    void* v3;  // ebp, Other Possible Types: unsigned int\n
    unsigned int v4;  // eax\n
    char v5;  // sil\n
    unsigned int v6;  // edi\n
\n
    v0 = cgc_strlen(v1);\n
    v2 = v0 + 1;\n
    if (v2 <= a0 && v2 >= 3)\n
    {\n
        if (v0 > 0)\n
        {\n
            v3 = 0;\n
            v6 = 0;\n
            do\n
            {\n
                v4 = v1[v6];\n
                v5 = v4;\n
                if (cgc_isalnum(v4))\n
                {\n
                    if (!(v5 == 64))\n
                        goto LABEL_4048a0;\n
                }\n
                else\n
                {\n
                    if ([D] x86g_calculate_condition(0x2<32>, 0x4<32>, Conv(8->32, (sil<1> - 0x2d<8>)), 0x2<32>, 0x0<32>))\n
                    {\n
LABEL_4048a0:\n
                        if (!(!1))\n
                            continue;\n
                    }\n
                    else if (v5 != 64)\n
                    {\n
                        if (!(v5 == 95))\n
                            goto LABEL_4048f4;\n
                        goto LABEL_4048a0;\n
                    }\n
                }\n
                v3 += 1;\n
                if (!(v3 == 2))\n
                    goto LABEL_4048a0;\n
                v3 = 2;\n
LABEL_4048f4:\n
                if (!0)\n
                    goto LABEL_4048fa;\n
                else\n
                    goto LABEL_4048a6;\n
LABEL_4048a6:\n
                v6 += 1;\n
            } while (v0 != v6);\n
            goto LABEL_404903;\n
        }\n
        else\n
        {\n
            v3 = 0;\n
LABEL_404903:\n
            return -(v3 != 1);\n
        }\n
    }\n
LABEL_4048fa:\n
    return -1;\n
}\n
", "4212894:sub_40489e": null, "4212954:sub_4048da": null, "4213013:sub_404915": null, "4213024:cgc_verify_phone": "int cgc_verify_phone(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edi\n
    unsigned int v4;  // eax\n
    void* v5;  // ecx\n
    unsigned int v6;  // esi\n
\n
    v1 = cgc_strlen(v0);\n
    v2 = v1;\n
    if (v1 + 1 != a0)\n
        return -1;\n
    if (v2 <= 0)\n
        return 0;\n
    v6 = 0;\n
    do\n
    {\n
        v4 = v0[v6];\n
        if ((v6 & 2147483643) == 3)\n
        {\n
            v5 = 0;\n
            *(&v5) = v4 == 45;\n
            if (!(v5 + (v5 << 1) + 1 & -5))\n
                continue;\n
            goto LABEL_4049b2;\n
        }\n
        else if (!cgc_isdigit(v4))\n
        {\n
LABEL_4049b2:\n
            return -1;\n
        }\n
        v6 += 1;\n
    } while (v2 != v6);\n
}\n
", "4213129:sub_404989": null, "4213183:sub_4049bf": null, "4213184:cgc_verify_number": "int cgc_verify_number(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = cgc_strlen(v0);\n
    v2 = v1;\n
    if (v1 + 1 > a0)\n
        return -1;\n
    if (v2 <= 0)\n
        return 0;\n
    v5 = 0;\n
    do\n
    {\n
        if (!cgc_isdigit(v0[v5]))\n
            return -1;\n
        v5 += 1;\n
    } while (v2 != v5);\n
}\n
", "4213289:sub_404a29": null, "4213296:cgc_verify_text": "int cgc_verify_text(char *v0, unsigned int a0)\n
{\n
    unsigned int v1;  // eax\n
    unsigned int v2;  // edi\n
    unsigned int v5;  // esi\n
\n
    v1 = cgc_strlen(v0);\n
    v2 = v1;\n
    if (v1 + 1 > a0)\n
        return -1;\n
    if (v2 <= 0)\n
        return 0;\n
    v5 = 0;\n
    do\n
    {\n
        if (!cgc_isprint(v0[v5]))\n
            return -1;\n
        v5 += 1;\n
    } while (v2 != v5);\n
}\n
", "4213404:_fini": "int _fini()\n
{\n
    return;\n
}\n
", "5242880:__libc_start_main": null, "5242884:cgc_transmit": null, "5242888:cgc_allocate": null, "5242892:cgc_deallocate": null, "5242896:cgc_receive": null, "6295628:UnresolvableJumpTarget": null, "6295632:UnresolvableCallTarget": null}